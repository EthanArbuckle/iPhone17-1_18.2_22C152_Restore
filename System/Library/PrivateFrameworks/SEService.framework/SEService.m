uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

uint64_t keypath_setTm(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  v6 = (void *)(*a2 + *a5);
  uint64_t result = swift_beginAccess();
  void *v6 = v5;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  v4 = (void *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

id SESEndPointListContainers(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v21 = 0;
  v22 = &v21;
  uint64_t v23 = 0x3032000000;
  v24 = __Block_byref_object_copy_;
  v25 = __Block_byref_object_dispose_;
  id v26 = 0;
  uint64_t v15 = 0;
  v16 = &v15;
  uint64_t v17 = 0x3032000000;
  v18 = __Block_byref_object_copy_;
  v19 = __Block_byref_object_dispose_;
  id v20 = 0;
  +[SESClient sharedClient]();
  v7 = (id *)objc_claimAutoreleasedReturnValue();
  v8 = (id *)(v16 + 5);
  id obj = (id)v16[5];
  v9 = -[SESClient synchronousRemoteObjectProxyWithError:](v7, &obj);
  objc_storeStrong(v8, obj);

  if (v9 && !v16[5])
  {
    v11 = +[SEProxy withSession:v5 seid:v6];
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    v13[2] = __SESEndPointListContainers_block_invoke;
    v13[3] = &unk_264219440;
    v13[4] = &v21;
    v13[5] = &v15;
    [v9 listEndPointContainers:v11 reply:v13];

    if (a3) {
      *a3 = (id) v16[5];
    }
    id v10 = (id)v22[5];
  }
  else
  {
    id v10 = 0;
    if (a3) {
      *a3 = (id) v16[5];
    }
  }

  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v21, 8);

  return v10;
}

void sub_2146EF698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __SESEndPointListContainers_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void *SESLegacyKeyCreate(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  if (v7)
  {
    +[SESClient sharedClient]();
    id v10 = (id *)objc_claimAutoreleasedReturnValue();
    id v11 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, a4);
    v12 = v11;
    if (v11)
    {
      uint64_t v22 = 0;
      uint64_t v23 = &v22;
      uint64_t v24 = 0x3032000000;
      v25 = __Block_byref_object_copy__0;
      id v26 = __Block_byref_object_dispose__0;
      id v27 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = &v16;
      uint64_t v18 = 0x3032000000;
      v19 = __Block_byref_object_copy__0;
      id v20 = __Block_byref_object_dispose__0;
      id v21 = 0;
      v15[0] = MEMORY[0x263EF8330];
      v15[1] = 3221225472;
      v15[2] = __SESLegacyKeyCreate_block_invoke;
      v15[3] = &unk_2642194B0;
      v15[4] = &v16;
      v15[5] = &v22;
      [v11 createSELegacyKey:0 subjectIdentifier:v7 metaData:v8 localValidationList:v9 reply:v15];
      if (a4) {
        *a4 = (id) v17[5];
      }
      a4 = (id)v23[5];
      _Block_object_dispose(&v16, 8);

      _Block_object_dispose(&v22, 8);
    }
    else
    {
      a4 = 0;
    }
  }
  else if (a4)
  {
    v13 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a4 = (id)objc_claimAutoreleasedReturnValue();

    a4 = 0;
  }

  return a4;
}

void sub_2146F011C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void __SESLegacyKeyCreate_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

id SESLegacyKeyDelete(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = &v10;
    uint64_t v12 = 0x3032000000;
    uint64_t v13 = __Block_byref_object_copy__0;
    uint64_t v14 = __Block_byref_object_dispose__0;
    id v15 = 0;
    +[SESClient sharedClient]();
    uint64_t v2 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v3 = (id *)(v11 + 5);
    id obj = (id)v11[5];
    v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
    objc_storeStrong(v3, obj);

    if (v4)
    {
      v8[0] = MEMORY[0x263EF8330];
      v8[1] = 3221225472;
      v8[2] = __SESLegacyKeyDelete_block_invoke;
      v8[3] = &unk_2642194D8;
      v8[4] = &v10;
      [v4 deleteSELegacyKey:0 keySlot:v1 reply:v8];
    }
    id v5 = (id)v11[5];

    _Block_object_dispose(&v10, 8);
  }
  else
  {
    uint64_t v6 = SESDefaultLogObject();
    SESCreateAndLogError();
    id v5 = (id)objc_claimAutoreleasedReturnValue();
  }
  return v5;
}

void sub_2146F0370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESLegacyKeyDelete_block_invoke(uint64_t a1, void *a2)
{
}

void *SESLegacyKeySign(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  uint64_t v13 = v12;
  if (v9 && v10 && v11 && v12)
  {
    +[SESClient sharedClient]();
    uint64_t v14 = (id *)objc_claimAutoreleasedReturnValue();
    id v15 = -[SESClient synchronousRemoteObjectProxyWithError:](v14, a5);
    uint64_t v16 = v15;
    if (v15)
    {
      uint64_t v26 = 0;
      id v27 = &v26;
      uint64_t v28 = 0x3032000000;
      v29 = __Block_byref_object_copy__0;
      v30 = __Block_byref_object_dispose__0;
      id v31 = 0;
      uint64_t v20 = 0;
      id v21 = &v20;
      uint64_t v22 = 0x3032000000;
      uint64_t v23 = __Block_byref_object_copy__0;
      uint64_t v24 = __Block_byref_object_dispose__0;
      id v25 = 0;
      v19[0] = MEMORY[0x263EF8330];
      v19[1] = 3221225472;
      v19[2] = __SESLegacyKeySign_block_invoke;
      v19[3] = &unk_264219500;
      v19[4] = &v20;
      v19[5] = &v26;
      [v15 signWithSELegacyKey:0 keySlot:v11 challenge:v10 metaData:v9 authorization:v13 reply:v19];
      if (a5) {
        *a5 = (id) v21[5];
      }
      a5 = (id)v27[5];
      _Block_object_dispose(&v20, 8);

      _Block_object_dispose(&v26, 8);
    }
    else
    {
      a5 = 0;
    }
  }
  else if (a5)
  {
    uint64_t v17 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a5 = (id)objc_claimAutoreleasedReturnValue();

    a5 = 0;
  }

  return a5;
}

void sub_2146F0608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void __SESLegacyKeySign_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void *SESLegacyKeySignWithListenerEndpoint(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  uint64_t v16 = v15;
  if (v11 && v12 && v13 && v14 && v15)
  {
    +[SESClient sharedClient]();
    uint64_t v17 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v18 = -[SESClient synchronousRemoteObjectProxyWithError:](v17, a6);
    if (v18)
    {
      uint64_t v30 = 0;
      id v31 = &v30;
      uint64_t v32 = 0x3032000000;
      v33 = __Block_byref_object_copy__0;
      v34 = __Block_byref_object_dispose__0;
      id v35 = 0;
      uint64_t v24 = 0;
      id v25 = &v24;
      uint64_t v26 = 0x3032000000;
      id v27 = __Block_byref_object_copy__0;
      uint64_t v28 = __Block_byref_object_dispose__0;
      id v29 = 0;
      v19 = +[SEProxy withEndpoint:v11];
      if (v19)
      {
        v23[0] = MEMORY[0x263EF8330];
        v23[1] = 3221225472;
        v23[2] = __SESLegacyKeySignWithListenerEndpoint_block_invoke;
        v23[3] = &unk_264219500;
        v23[4] = &v24;
        v23[5] = &v30;
        [v18 signWithSELegacyKey:v19 keySlot:v14 challenge:v13 metaData:v12 authorization:v16 reply:v23];
        if (a6) {
          *a6 = (id) v25[5];
        }
        a6 = (id)v31[5];
      }
      else if (a6)
      {
        id v21 = SESDefaultLogObject();
        SESCreateAndLogError();
        *a6 = (id)objc_claimAutoreleasedReturnValue();

        a6 = 0;
      }

      _Block_object_dispose(&v24, 8);
      _Block_object_dispose(&v30, 8);
    }
    else
    {
      a6 = 0;
    }
  }
  else if (a6)
  {
    uint64_t v20 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a6 = (id)objc_claimAutoreleasedReturnValue();

    a6 = 0;
  }

  return a6;
}

void sub_2146F09AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void __SESLegacyKeySignWithListenerEndpoint_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void *SESLegacyKeySignPrecomputedDigest(void *a1, void *a2, void *a3, void *a4)
{
  return _signPrecomputedDigestWithProxy(0, a1, a2, a3, 0, a4);
}

void *_signPrecomputedDigestWithProxy(void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = v14;
  if (!v12 || !v13 || !v14)
  {
    if (!a6) {
      goto LABEL_15;
    }
LABEL_12:
    v19 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a6 = (id)objc_claimAutoreleasedReturnValue();

    a6 = 0;
    goto LABEL_15;
  }
  if ([v12 length] != 32)
  {
    if (!a6) {
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  +[SESClient sharedClient]();
  uint64_t v16 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v17 = -[SESClient synchronousRemoteObjectProxyWithError:](v16, a6);
  if (v17)
  {
    uint64_t v28 = 0;
    id v29 = &v28;
    uint64_t v30 = 0x3032000000;
    id v31 = __Block_byref_object_copy__0;
    uint64_t v32 = __Block_byref_object_dispose__0;
    id v33 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = &v22;
    uint64_t v24 = 0x3032000000;
    id v25 = __Block_byref_object_copy__0;
    uint64_t v26 = __Block_byref_object_dispose__0;
    id v27 = 0;
    uint64_t v18 = [NSNumber numberWithInteger:a5];
    v21[0] = MEMORY[0x263EF8330];
    v21[1] = 3221225472;
    v21[2] = ___signPrecomputedDigestWithProxy_block_invoke;
    v21[3] = &unk_264219500;
    v21[4] = &v22;
    v21[5] = &v28;
    [v17 signPrecomputedWithSELegacyKey:v11 keySlot:v13 metaData:v12 authorization:v15 authorizationType:v18 reply:v21];

    if (a6) {
      *a6 = (id) v23[5];
    }
    a6 = (id)v29[5];
    _Block_object_dispose(&v22, 8);

    _Block_object_dispose(&v28, 8);
  }
  else
  {
    a6 = 0;
  }

LABEL_15:
  return a6;
}

void sub_2146F0D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id SESLegacyKeySignPrecomputedDigestWithListenerEndpoint(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  if (a1)
  {
    id v9 = a4;
    id v10 = a3;
    id v11 = a2;
    id v12 = +[SEProxy withEndpoint:a1];
    uint64_t v13 = _signPrecomputedDigestWithProxy(v12, v11, v10, v9, 0, a5);
  }
  else
  {
    id v10 = a4;
    id v11 = a3;
    id v12 = a2;
    uint64_t v13 = _signPrecomputedDigestWithProxy(0, v12, v11, v10, 0, a5);
  }

  return v13;
}

id SESLegacyKeySignPrecomputedWithIDV(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  if (a1)
  {
    id v9 = a4;
    id v10 = a3;
    id v11 = a2;
    id v12 = +[SEProxy withEndpoint:a1];
    uint64_t v13 = _signPrecomputedDigestWithProxy(v12, v11, v10, v9, 1, a5);
  }
  else
  {
    id v10 = a4;
    id v11 = a3;
    id v12 = a2;
    uint64_t v13 = _signPrecomputedDigestWithProxy(0, v12, v11, v10, 1, a5);
  }

  return v13;
}

id SESLegacyKeyGetOccupiedSlots(void *a1)
{
  +[SESClient sharedClient]();
  uint64_t v2 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, a1);
  v4 = v3;
  if (v3)
  {
    uint64_t v14 = 0;
    uint64_t v15 = &v14;
    uint64_t v16 = 0x3032000000;
    uint64_t v17 = __Block_byref_object_copy__0;
    uint64_t v18 = __Block_byref_object_dispose__0;
    id v19 = 0;
    uint64_t v8 = 0;
    id v9 = &v8;
    uint64_t v10 = 0x3032000000;
    id v11 = __Block_byref_object_copy__0;
    id v12 = __Block_byref_object_dispose__0;
    id v13 = 0;
    v7[0] = MEMORY[0x263EF8330];
    v7[1] = 3221225472;
    v7[2] = __SESLegacyKeyGetOccupiedSlots_block_invoke;
    v7[3] = &unk_264219440;
    v7[4] = &v8;
    v7[5] = &v14;
    [v3 getSELegacyKeyOccupiedSlots:0 reply:v7];
    if (a1) {
      *a1 = (id) v9[5];
    }
    id v5 = (id)v15[5];
    _Block_object_dispose(&v8, 8);

    _Block_object_dispose(&v14, 8);
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_2146F10E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

void __SESLegacyKeyGetOccupiedSlots_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void *SESLegacyKeyGetOccupiedSlotsWithListenerEndpoint(void *a1, void *a2)
{
  id v3 = a1;
  +[SESClient sharedClient]();
  v4 = (id *)objc_claimAutoreleasedReturnValue();
  id v5 = -[SESClient synchronousRemoteObjectProxyWithError:](v4, a2);
  if (v5)
  {
    uint64_t v16 = 0;
    uint64_t v17 = &v16;
    uint64_t v18 = 0x3032000000;
    id v19 = __Block_byref_object_copy__0;
    uint64_t v20 = __Block_byref_object_dispose__0;
    id v21 = 0;
    uint64_t v10 = 0;
    id v11 = &v10;
    uint64_t v12 = 0x3032000000;
    id v13 = __Block_byref_object_copy__0;
    uint64_t v14 = __Block_byref_object_dispose__0;
    id v15 = 0;
    uint64_t v6 = +[SEProxy withEndpoint:v3];
    if (v6)
    {
      v9[0] = MEMORY[0x263EF8330];
      v9[1] = 3221225472;
      v9[2] = __SESLegacyKeyGetOccupiedSlotsWithListenerEndpoint_block_invoke;
      v9[3] = &unk_264219440;
      v9[4] = &v10;
      v9[5] = &v16;
      [v5 getSELegacyKeyOccupiedSlots:v6 reply:v9];
      if (a2) {
        *a2 = (id) v11[5];
      }
      a2 = (id)v17[5];
    }
    else if (a2)
    {
      uint64_t v7 = SESDefaultLogObject();
      SESCreateAndLogError();
      *a2 = (id)objc_claimAutoreleasedReturnValue();

      a2 = 0;
    }

    _Block_object_dispose(&v10, 8);
    _Block_object_dispose(&v16, 8);
  }
  else
  {
    a2 = 0;
  }

  return a2;
}

void sub_2146F13A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESLegacyKeyGetOccupiedSlotsWithListenerEndpoint_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

id extractACLsSet()
{
  v0 = SecAccessControlGetConstraints();
  id v1 = (void *)[objc_alloc(MEMORY[0x263F048C8]) initWithPropertyList:v0];
  uint64_t v2 = [v1 data];

  return v2;
}

void *SESKeyCreateWithExtractedACLs(void *a1, void *a2)
{
  id v3 = a1;
  if (v3)
  {
    +[SESClient sharedClient]();
    v4 = (id *)objc_claimAutoreleasedReturnValue();
    id v5 = -[SESClient synchronousRemoteObjectProxyWithError:](v4, a2);
    uint64_t v6 = v5;
    if (v5)
    {
      uint64_t v16 = 0;
      uint64_t v17 = &v16;
      uint64_t v18 = 0x3032000000;
      id v19 = __Block_byref_object_copy__0;
      uint64_t v20 = __Block_byref_object_dispose__0;
      id v21 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = &v10;
      uint64_t v12 = 0x3032000000;
      uint64_t v13 = __Block_byref_object_copy__0;
      uint64_t v14 = __Block_byref_object_dispose__0;
      id v15 = 0;
      v9[0] = MEMORY[0x263EF8330];
      v9[1] = 3221225472;
      v9[2] = __SESKeyCreateWithExtractedACLs_block_invoke;
      v9[3] = &unk_264219528;
      v9[4] = &v10;
      v9[5] = &v16;
      [v5 createSEKey:0 extractedACLs:v3 reply:v9];
      if (a2) {
        *a2 = (id) v11[5];
      }
      a2 = (id)v17[5];
      _Block_object_dispose(&v10, 8);

      _Block_object_dispose(&v16, 8);
    }
    else
    {
      a2 = 0;
    }
  }
  else if (a2)
  {
    uint64_t v7 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a2 = (id)objc_claimAutoreleasedReturnValue();

    a2 = 0;
  }

  return a2;
}

void sub_2146F16A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

void __SESKeyCreateWithExtractedACLs_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

id SESKeyCreate(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v3 = extractACLsSet();
    v4 = v3;
    if (v3)
    {
      id v5 = SESKeyCreateWithExtractedACLs(v3, a2);
    }
    else
    {
      if (a2)
      {
        uint64_t v6 = SESDefaultLogObject();
        SESCreateAndLogError();
        *a2 = (id)objc_claimAutoreleasedReturnValue();
      }
      id v5 = 0;
    }
    goto LABEL_9;
  }
  if (a2)
  {
    v4 = SESDefaultLogObject();
    SESCreateAndLogError();
    id v5 = 0;
    *a2 = (id)objc_claimAutoreleasedReturnValue();
LABEL_9:

    goto LABEL_10;
  }
  id v5 = 0;
LABEL_10:
  return v5;
}

void *SESKeyCreateWithSession(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  if (a3)
  {
    id v9 = extractACLsSet();
    if (v9)
    {
      +[SESClient sharedClient]();
      uint64_t v10 = (id *)objc_claimAutoreleasedReturnValue();
      uint64_t v11 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, a4);

      if (v11)
      {
        uint64_t v23 = 0;
        uint64_t v24 = &v23;
        uint64_t v25 = 0x3032000000;
        uint64_t v26 = __Block_byref_object_copy__0;
        id v27 = __Block_byref_object_dispose__0;
        id v28 = 0;
        uint64_t v17 = 0;
        uint64_t v18 = &v17;
        uint64_t v19 = 0x3032000000;
        uint64_t v20 = __Block_byref_object_copy__0;
        id v21 = __Block_byref_object_dispose__0;
        id v22 = 0;
        uint64_t v12 = +[SEProxy withSession:v7 seid:v8];
        v16[0] = MEMORY[0x263EF8330];
        v16[1] = 3221225472;
        v16[2] = __SESKeyCreateWithSession_block_invoke;
        v16[3] = &unk_264219528;
        v16[4] = &v17;
        v16[5] = &v23;
        [v11 createSEKey:v12 extractedACLs:v9 reply:v16];

        if (a4) {
          *a4 = (id) v18[5];
        }
        a4 = (id)v24[5];
        _Block_object_dispose(&v17, 8);

        _Block_object_dispose(&v23, 8);
      }
      else
      {
        a4 = 0;
      }
    }
    else if (a4)
    {
      uint64_t v14 = SESDefaultLogObject();
      SESCreateAndLogError();
      *a4 = (id)objc_claimAutoreleasedReturnValue();

      a4 = 0;
    }
  }
  else if (a4)
  {
    uint64_t v13 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a4 = (id)objc_claimAutoreleasedReturnValue();

    a4 = 0;
  }

  return a4;
}

void sub_2146F1AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESKeyCreateWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void SESKeyDelete(void *a1, void *a2)
{
  id v3 = a1;
  if (v3)
  {
    +[SESClient sharedClient]();
    v4 = (id *)objc_claimAutoreleasedReturnValue();
    id v5 = -[SESClient synchronousRemoteObjectProxyWithError:](v4, a2);

    if (v5)
    {
      uint64_t v7 = 0;
      id v8 = &v7;
      uint64_t v9 = 0x3032000000;
      uint64_t v10 = __Block_byref_object_copy__0;
      uint64_t v11 = __Block_byref_object_dispose__0;
      id v12 = 0;
      v6[0] = MEMORY[0x263EF8330];
      v6[1] = 3221225472;
      v6[2] = __SESKeyDelete_block_invoke;
      v6[3] = &unk_2642194D8;
      v6[4] = &v7;
      [v5 deleteSEKey:0 keyData:v3 reply:v6];
      if (a2) {
        *a2 = (id) v8[5];
      }
      _Block_object_dispose(&v7, 8);
    }
    goto LABEL_8;
  }
  if (a2)
  {
    id v5 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a2 = (id)objc_claimAutoreleasedReturnValue();
LABEL_8:
  }
}

void sub_2146F1CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESKeyDelete_block_invoke(uint64_t a1, void *a2)
{
}

void SESKeyDeleteWithSession(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  if (v9)
  {
    +[SESClient sharedClient]();
    uint64_t v10 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v11 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, a4);

    if (v11)
    {
      uint64_t v14 = 0;
      id v15 = &v14;
      uint64_t v16 = 0x3032000000;
      uint64_t v17 = __Block_byref_object_copy__0;
      uint64_t v18 = __Block_byref_object_dispose__0;
      id v19 = 0;
      id v12 = +[SEProxy withSession:v7 seid:v8];
      v13[0] = MEMORY[0x263EF8330];
      v13[1] = 3221225472;
      v13[2] = __SESKeyDeleteWithSession_block_invoke;
      v13[3] = &unk_2642194D8;
      v13[4] = &v14;
      [v11 deleteSEKey:v12 keyData:v9 reply:v13];

      if (a4) {
        *a4 = (id) v15[5];
      }
      _Block_object_dispose(&v14, 8);
    }
    goto LABEL_8;
  }
  if (a4)
  {
    uint64_t v11 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a4 = (id)objc_claimAutoreleasedReturnValue();
LABEL_8:
  }
}

void sub_2146F1EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESKeyDeleteWithSession_block_invoke(uint64_t a1, void *a2)
{
}

id SESKeyPublicKey(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = +[PTClassicKey withData:a1 error:a2];
  id v3 = [v2 publicKey];

  return v3;
}

id SESKeyGetAccessControlConstraints(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = +[PTClassicKey withData:a1 error:a2];
  id v3 = [v2 accessControlConstraints];

  return v3;
}

void *SESKeySignData(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  uint64_t v13 = v12;
  if (v9 && v10 && v11 && v12)
  {
    +[SESClient sharedClient]();
    uint64_t v14 = (id *)objc_claimAutoreleasedReturnValue();
    id v15 = -[SESClient synchronousRemoteObjectProxyWithError:](v14, a5);

    if (v15)
    {
      uint64_t v25 = 0;
      uint64_t v26 = &v25;
      uint64_t v27 = 0x3032000000;
      id v28 = __Block_byref_object_copy__0;
      id v29 = __Block_byref_object_dispose__0;
      id v30 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = &v19;
      uint64_t v21 = 0x3032000000;
      id v22 = __Block_byref_object_copy__0;
      uint64_t v23 = __Block_byref_object_dispose__0;
      id v24 = 0;
      v18[0] = MEMORY[0x263EF8330];
      v18[1] = 3221225472;
      v18[2] = __SESKeySignData_block_invoke;
      v18[3] = &unk_264219528;
      v18[4] = &v25;
      v18[5] = &v19;
      [v15 signWithSEKey:0 keyData:v9 data:v10 algorithm:v11 laExternalizedContext:v13 reply:v18];
      if (a5) {
        *a5 = (id) v20[5];
      }
      a5 = (id)v26[5];
      _Block_object_dispose(&v19, 8);

      _Block_object_dispose(&v25, 8);
    }
    else
    {
      a5 = 0;
    }
  }
  else if (a5)
  {
    uint64_t v16 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a5 = (id)objc_claimAutoreleasedReturnValue();

    a5 = 0;
  }

  return a5;
}

void sub_2146F2210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESKeySignData_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void *SESKeySignDataWithSession(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  uint64_t v19 = v18;
  if (v13 && v14 && v15 && v16 && v17 && v18)
  {
    +[SESClient sharedClient]();
    uint64_t v20 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v21 = -[SESClient synchronousRemoteObjectProxyWithError:](v20, a7);

    if (v21)
    {
      uint64_t v32 = 0;
      id v33 = &v32;
      uint64_t v34 = 0x3032000000;
      id v35 = __Block_byref_object_copy__0;
      v36 = __Block_byref_object_dispose__0;
      id v37 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = &v26;
      uint64_t v28 = 0x3032000000;
      id v29 = __Block_byref_object_copy__0;
      id v30 = __Block_byref_object_dispose__0;
      id v31 = 0;
      id v22 = +[SEProxy withSession:v13 seid:v14];
      v25[0] = MEMORY[0x263EF8330];
      v25[1] = 3221225472;
      v25[2] = __SESKeySignDataWithSession_block_invoke;
      v25[3] = &unk_264219528;
      v25[4] = &v32;
      v25[5] = &v26;
      [v21 signWithSEKey:v22 keyData:v15 data:v16 algorithm:v17 laExternalizedContext:v19 reply:v25];

      if (a7) {
        *a7 = (id) v27[5];
      }
      a7 = (id)v33[5];
      _Block_object_dispose(&v26, 8);

      _Block_object_dispose(&v32, 8);
    }
    else
    {
      a7 = 0;
    }
  }
  else if (a7)
  {
    uint64_t v23 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a7 = (id)objc_claimAutoreleasedReturnValue();

    a7 = 0;
  }

  return a7;
}

void sub_2146F2558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESKeySignDataWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void *SESKeySignPrecomputedDigest(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  return _SESKeySignPrecomputedDigest(0, a1, a2, a3, a4, a5);
}

void *_SESKeySignPrecomputedDigest(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v16 = v15;
  if (v12 && v13 && v14 && v15)
  {
    +[SESClient sharedClient]();
    id v17 = (id *)objc_claimAutoreleasedReturnValue();
    id v18 = -[SESClient synchronousRemoteObjectProxyWithError:](v17, a6);

    if (v18)
    {
      uint64_t v28 = 0;
      id v29 = &v28;
      uint64_t v30 = 0x3032000000;
      id v31 = __Block_byref_object_copy__0;
      uint64_t v32 = __Block_byref_object_dispose__0;
      id v33 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = &v22;
      uint64_t v24 = 0x3032000000;
      uint64_t v25 = __Block_byref_object_copy__0;
      uint64_t v26 = __Block_byref_object_dispose__0;
      id v27 = 0;
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      v21[2] = ___SESKeySignPrecomputedDigest_block_invoke;
      v21[3] = &unk_264219528;
      v21[4] = &v28;
      v21[5] = &v22;
      [v18 signPrecomputedDigest:v11 keyData:v12 digest:v13 algorithm:v14 laExternalizedContext:v16 reply:v21];
      if (a6) {
        *a6 = (id) v23[5];
      }
      a6 = (id)v29[5];
      _Block_object_dispose(&v22, 8);

      _Block_object_dispose(&v28, 8);
    }
    else
    {
      a6 = 0;
    }
  }
  else if (a6)
  {
    uint64_t v19 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a6 = (id)objc_claimAutoreleasedReturnValue();

    a6 = 0;
  }

  return a6;
}

void sub_2146F2878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id SESKeySignPrecomputedDigestWithSession(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13 = a6;
  id v14 = a5;
  id v15 = a4;
  id v16 = a3;
  id v17 = +[SEProxy withSession:a1 seid:a2];
  id v18 = _SESKeySignPrecomputedDigest(v17, v16, v15, v14, v13, a7);

  return v18;
}

id SESKeySignPrecomputedDigestWithListenerEndpoint(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a4;
  id v13 = a3;
  id v14 = a2;
  id v15 = +[SEProxy withEndpoint:a1];
  id v16 = _SESKeySignPrecomputedDigest(v15, v14, v13, v12, v11, a6);

  return v16;
}

void *SESKeyExchange(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = v12;
  if (v9 && v10 && v11 && v12)
  {
    +[SESClient sharedClient]();
    id v14 = (id *)objc_claimAutoreleasedReturnValue();
    id v15 = -[SESClient synchronousRemoteObjectProxyWithError:](v14, a5);

    if (v15)
    {
      uint64_t v25 = 0;
      uint64_t v26 = &v25;
      uint64_t v27 = 0x3032000000;
      uint64_t v28 = __Block_byref_object_copy__0;
      id v29 = __Block_byref_object_dispose__0;
      id v30 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = &v19;
      uint64_t v21 = 0x3032000000;
      uint64_t v22 = __Block_byref_object_copy__0;
      uint64_t v23 = __Block_byref_object_dispose__0;
      id v24 = 0;
      v18[0] = MEMORY[0x263EF8330];
      v18[1] = 3221225472;
      v18[2] = __SESKeyExchange_block_invoke;
      v18[3] = &unk_264219528;
      v18[4] = &v25;
      v18[5] = &v19;
      [v15 sharedSecretWithSEKey:0 keyData:v9 publicKey:v10 algorithm:v11 laExternalizedContext:v13 reply:v18];
      if (a5) {
        *a5 = (id) v20[5];
      }
      a5 = (id)v26[5];
      _Block_object_dispose(&v19, 8);

      _Block_object_dispose(&v25, 8);
    }
    else
    {
      a5 = 0;
    }
  }
  else if (a5)
  {
    id v16 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a5 = (id)objc_claimAutoreleasedReturnValue();

    a5 = 0;
  }

  return a5;
}

void sub_2146F2C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESKeyExchange_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void *SESKeyExchangeWithSession(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  uint64_t v19 = v18;
  if (v15 && v16 && v17 && v18)
  {
    +[SESClient sharedClient]();
    uint64_t v20 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v21 = -[SESClient synchronousRemoteObjectProxyWithError:](v20, a7);

    if (v21)
    {
      uint64_t v32 = 0;
      id v33 = &v32;
      uint64_t v34 = 0x3032000000;
      id v35 = __Block_byref_object_copy__0;
      v36 = __Block_byref_object_dispose__0;
      id v37 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = &v26;
      uint64_t v28 = 0x3032000000;
      id v29 = __Block_byref_object_copy__0;
      id v30 = __Block_byref_object_dispose__0;
      id v31 = 0;
      uint64_t v22 = +[SEProxy withSession:seid:](SEProxy, "withSession:seid:");
      v25[0] = MEMORY[0x263EF8330];
      v25[1] = 3221225472;
      v25[2] = __SESKeyExchangeWithSession_block_invoke;
      v25[3] = &unk_264219528;
      v25[4] = &v32;
      v25[5] = &v26;
      [v21 sharedSecretWithSEKey:v22 keyData:v15 publicKey:v16 algorithm:v17 laExternalizedContext:v19 reply:v25];

      if (a7) {
        *a7 = (id) v27[5];
      }
      a7 = (id)v33[5];
      _Block_object_dispose(&v26, 8);

      _Block_object_dispose(&v32, 8);
    }
    else
    {
      a7 = 0;
    }
  }
  else if (a7)
  {
    uint64_t v23 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a7 = (id)objc_claimAutoreleasedReturnValue();

    a7 = 0;
  }

  return a7;
}

void sub_2146F2FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESKeyExchangeWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESKeyEncryptData(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  id v15 = a1;
  id v16 = a2;
  id v17 = a3;
  id v18 = a4;
  id v19 = a5;
  id v20 = a6;
  id v21 = a7;
  if (v15 && v16 && v17 && v18 && v19)
  {
    +[SESClient sharedClient]();
    uint64_t v22 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v23 = -[SESClient synchronousRemoteObjectProxyWithError:](v22, a8);

    if (v23)
    {
      uint64_t v40 = 0;
      v41 = &v40;
      uint64_t v42 = 0x3032000000;
      v43 = __Block_byref_object_copy__0;
      v44 = __Block_byref_object_dispose__0;
      id v45 = 0;
      uint64_t v34 = 0;
      id v35 = &v34;
      uint64_t v36 = 0x3032000000;
      id v37 = __Block_byref_object_copy__0;
      v38 = __Block_byref_object_dispose__0;
      id v39 = 0;
      uint64_t v28 = 0;
      id v29 = &v28;
      uint64_t v30 = 0x3032000000;
      id v31 = __Block_byref_object_copy__0;
      uint64_t v32 = __Block_byref_object_dispose__0;
      id v33 = 0;
      v27[0] = MEMORY[0x263EF8330];
      v27[1] = 3221225472;
      v27[2] = __SESKeyEncryptData_block_invoke;
      v27[3] = &unk_264219550;
      v27[4] = &v40;
      v27[5] = &v34;
      v27[6] = &v28;
      [v23 encryptWithSEKey:v15 plainText:v16 publicKey:v17 algorithm:v18 laExternalizedContext:v19 sharedInfo:v20 authenticationData:v21 reply:v27];
      id v24 = (void *)[(id)v41[5] mutableCopy];
      [v24 appendData:v35[5]];
      if (a8) {
        *a8 = (id) v29[5];
      }
      _Block_object_dispose(&v28, 8);

      _Block_object_dispose(&v34, 8);
      _Block_object_dispose(&v40, 8);
    }
    else
    {
      id v24 = 0;
    }
  }
  else
  {
    if (a8)
    {
      uint64_t v25 = SESDefaultLogObject();
      SESCreateAndLogError();
      *a8 = (id)objc_claimAutoreleasedReturnValue();
    }
    id v24 = 0;
  }

  return v24;
}

void sub_2146F3354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v10 - 136), 8);
  _Unwind_Resume(a1);
}

void __SESKeyEncryptData_block_invoke(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void *)(a1[4] + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v7;
  id v17 = v7;

  uint64_t v12 = *(void *)(a1[5] + 8);
  uint64_t v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v8;
  id v14 = v8;

  uint64_t v15 = *(void *)(a1[6] + 8);
  uint64_t v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v9;
}

id SESKeyDecryptData(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9)
{
  id v16 = a9;
  id v17 = a1;
  id v18 = a2;
  id v19 = a3;
  id v20 = a4;
  id v21 = a5;
  id v22 = a6;
  id v23 = a7;
  id v24 = a8;
  if (v17 && v18 && v19 && v20 && v21)
  {
    id v29 = v22;
    +[SESClient sharedClient]();
    uint64_t v25 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v26 = -[SESClient synchronousRemoteObjectProxyWithError:](v25, a9);

    if (v26)
    {
      uint64_t v37 = 0;
      v38 = &v37;
      uint64_t v39 = 0x3032000000;
      uint64_t v40 = __Block_byref_object_copy__0;
      v41 = __Block_byref_object_dispose__0;
      id v42 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = &v31;
      uint64_t v33 = 0x3032000000;
      uint64_t v34 = __Block_byref_object_copy__0;
      id v35 = __Block_byref_object_dispose__0;
      id v36 = 0;
      v30[0] = MEMORY[0x263EF8330];
      v30[1] = 3221225472;
      v30[2] = __SESKeyDecryptData_block_invoke;
      v30[3] = &unk_264219528;
      v30[4] = &v37;
      v30[5] = &v31;
      id v22 = v29;
      [v26 decryptWithSEKey:v17 cipherText:v18 publicKey:v19 algorithm:v20 laExternalizedContext:v21 sharedInfo:v29 authenticationData:v23 authenticationTag:v24 reply:v30];
      if (a9) {
        *a9 = (id) v32[5];
      }
      id v16 = (id)v38[5];
      _Block_object_dispose(&v31, 8);

      _Block_object_dispose(&v37, 8);
    }
    else
    {
      id v16 = 0;
      id v22 = v29;
    }
  }
  else if (a9)
  {
    uint64_t v27 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a9 = (id)objc_claimAutoreleasedReturnValue();

    id v16 = 0;
  }

  return v16;
}

void sub_2146F36EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void __SESKeyDecryptData_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESKeyRewrapData(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13)
{
  id v20 = a1;
  id v43 = a2;
  id v21 = a3;
  id v22 = a4;
  id v39 = a5;
  id v23 = a6;
  id v42 = a7;
  id v24 = a8;
  id v25 = a9;
  id v26 = a10;
  id v41 = a11;
  id v27 = a12;
  id v28 = v27;
  uint64_t v40 = v23;
  if (v20 && v43 && v21 && v22 && v23 && v24 && v25)
  {
    id v38 = v26;
    +[SESClient sharedClient]();
    id v29 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v30 = -[SESClient synchronousRemoteObjectProxyWithError:](v29, a13);

    if (v30)
    {
      uint64_t v57 = 0;
      v58 = &v57;
      uint64_t v59 = 0x3032000000;
      v60 = __Block_byref_object_copy__0;
      v61 = __Block_byref_object_dispose__0;
      id v62 = 0;
      uint64_t v51 = 0;
      v52 = &v51;
      uint64_t v53 = 0x3032000000;
      v54 = __Block_byref_object_copy__0;
      v55 = __Block_byref_object_dispose__0;
      id v56 = 0;
      uint64_t v45 = 0;
      v46 = &v45;
      uint64_t v47 = 0x3032000000;
      v48 = __Block_byref_object_copy__0;
      v49 = __Block_byref_object_dispose__0;
      id v50 = 0;
      v44[0] = MEMORY[0x263EF8330];
      v44[1] = 3221225472;
      v44[2] = __SESKeyRewrapData_block_invoke;
      v44[3] = &unk_264219550;
      v44[4] = &v57;
      v44[5] = &v51;
      v44[6] = &v45;
      id v37 = v28;
      uint64_t v31 = v28;
      uint64_t v32 = v39;
      [v30 rewrapWithSEKey:v20 cipherText:v43 publicKey:v21 decryptAlgorithm:v22 decryptSharedInfo:v39 encryptAlgorithm:v40 encryptSharedInfo:v42 certificate:v24 laExternalizedContext:v25 decryptAuthenticationData:v38 decryptAuthenticationTag:v41 encryptAuthenticationData:v37 reply:v44];
      uint64_t v33 = (void *)[(id)v58[5] mutableCopy];
      [v33 appendData:v52[5]];
      if (a13) {
        *a13 = (id) v46[5];
      }
      _Block_object_dispose(&v45, 8);

      _Block_object_dispose(&v51, 8);
      _Block_object_dispose(&v57, 8);
    }
    else
    {
      uint64_t v31 = v28;
      uint64_t v33 = 0;
      uint64_t v32 = v39;
    }

    id v26 = v38;
  }
  else
  {
    uint64_t v31 = v27;
    if (a13)
    {
      SESDefaultLogObject();
      id v35 = v34 = v26;
      SESCreateAndLogError();
      *a13 = (id)objc_claimAutoreleasedReturnValue();

      id v26 = v34;
    }
    uint64_t v33 = 0;
    uint64_t v32 = v39;
  }

  return v33;
}

void sub_2146F3B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 184), 8);
  _Block_object_dispose((const void *)(v30 - 136), 8);
  _Unwind_Resume(a1);
}

void __SESKeyRewrapData_block_invoke(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void *)(a1[4] + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v7;
  id v17 = v7;

  uint64_t v12 = *(void *)(a1[5] + 8);
  uint64_t v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v8;
  id v14 = v8;

  uint64_t v15 = *(void *)(a1[6] + 8);
  id v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v9;
}

void *SESKeyCreateSEBAASCertificate(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  return SESKeyAttestWithSEBAA(a1, a2, a3, a4, 0, a5);
}

void *SESKeyAttestWithSEBAA(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  if (v11 && v12)
  {
    +[SESClient sharedClient]();
    id v16 = (id *)objc_claimAutoreleasedReturnValue();
    id v17 = -[SESClient synchronousRemoteObjectProxyWithError:](v16, a6);

    if (v17)
    {
      uint64_t v27 = 0;
      id v28 = &v27;
      uint64_t v29 = 0x3032000000;
      uint64_t v30 = __Block_byref_object_copy__0;
      uint64_t v31 = __Block_byref_object_dispose__0;
      id v32 = 0;
      uint64_t v21 = 0;
      id v22 = &v21;
      uint64_t v23 = 0x3032000000;
      id v24 = __Block_byref_object_copy__0;
      id v25 = __Block_byref_object_dispose__0;
      id v26 = 0;
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      v20[2] = __SESKeyAttestWithSEBAA_block_invoke;
      v20[3] = &unk_264219528;
      v20[4] = &v27;
      v20[5] = &v21;
      [v17 createSEABAASCertificate:v11 subjectIdentifier:v12 nonce:v13 OIDs:v14 validityInterval:v15 reply:v20];
      if (a6) {
        *a6 = (id) v22[5];
      }
      a6 = (id)v28[5];
      _Block_object_dispose(&v21, 8);

      _Block_object_dispose(&v27, 8);
    }
    else
    {
      a6 = 0;
    }
  }
  else if (a6)
  {
    id v18 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a6 = (id)objc_claimAutoreleasedReturnValue();

    a6 = 0;
  }

  return a6;
}

void sub_2146F3EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESKeyAttestWithSEBAA_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void *SESKeyCreateCertificate(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  id v15 = a1;
  id v16 = a2;
  id v17 = a3;
  id v18 = a4;
  id v19 = a5;
  id v20 = a6;
  id v21 = a7;
  if (v15 && v16 && v17 && v18 && v19)
  {
    +[SESClient sharedClient]();
    id v22 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v23 = -[SESClient synchronousRemoteObjectProxyWithError:](v22, a8);

    if (v23)
    {
      uint64_t v33 = 0;
      id v34 = &v33;
      uint64_t v35 = 0x3032000000;
      id v36 = __Block_byref_object_copy__0;
      id v37 = __Block_byref_object_dispose__0;
      id v38 = 0;
      uint64_t v27 = 0;
      id v28 = &v27;
      uint64_t v29 = 0x3032000000;
      uint64_t v30 = __Block_byref_object_copy__0;
      uint64_t v31 = __Block_byref_object_dispose__0;
      id v32 = 0;
      v26[0] = MEMORY[0x263EF8330];
      v26[1] = 3221225472;
      v26[2] = __SESKeyCreateCertificate_block_invoke;
      v26[3] = &unk_264219528;
      v26[4] = &v33;
      v26[5] = &v27;
      [v23 createCertificateForKeyData:v15 withKeyData:v16 subjectIdentifier:v18 authorityIdentifier:v19 laExternalizedContext:v17 nonce:v20 OIDs:v21 reply:v26];
      if (a8) {
        *a8 = (id) v28[5];
      }
      a8 = (id)v34[5];
      _Block_object_dispose(&v27, 8);

      _Block_object_dispose(&v33, 8);
    }
    else
    {
      a8 = 0;
    }
  }
  else if (a8)
  {
    id v24 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a8 = (id)objc_claimAutoreleasedReturnValue();

    a8 = 0;
  }

  return a8;
}

void sub_2146F41DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESKeyCreateCertificate_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void *SESKeyCreatePTAttestation(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  if (v9 && v10)
  {
    +[SESClient sharedClient]();
    uint64_t v13 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v14 = -[SESClient synchronousRemoteObjectProxyWithError:](v13, a5);

    if (v14)
    {
      uint64_t v24 = 0;
      id v25 = &v24;
      uint64_t v26 = 0x3032000000;
      uint64_t v27 = __Block_byref_object_copy__0;
      id v28 = __Block_byref_object_dispose__0;
      id v29 = 0;
      uint64_t v18 = 0;
      id v19 = &v18;
      uint64_t v20 = 0x3032000000;
      id v21 = __Block_byref_object_copy__0;
      id v22 = __Block_byref_object_dispose__0;
      id v23 = 0;
      v17[0] = MEMORY[0x263EF8330];
      v17[1] = 3221225472;
      v17[2] = __SESKeyCreatePTAttestation_block_invoke;
      v17[3] = &unk_264219528;
      v17[4] = &v24;
      v17[5] = &v18;
      [v14 createPTAttestation:0 keyData:v9 subjectIdentifier:v10 nonce:v11 OIDs:v12 reply:v17];
      if (a5) {
        *a5 = (id) v19[5];
      }
      a5 = (id)v25[5];
      _Block_object_dispose(&v18, 8);

      _Block_object_dispose(&v24, 8);
    }
    else
    {
      a5 = 0;
    }
  }
  else if (a5)
  {
    uint64_t v15 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a5 = (id)objc_claimAutoreleasedReturnValue();

    a5 = 0;
  }

  return a5;
}

void sub_2146F44C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESKeyCreatePTAttestation_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESKeyGetPTAttestationCASD(void *a1)
{
  +[SESClient sharedClient]();
  uint64_t v2 = (id *)objc_claimAutoreleasedReturnValue();
  id v3 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, a1);

  if (v3)
  {
    uint64_t v13 = 0;
    uint64_t v14 = &v13;
    uint64_t v15 = 0x3032000000;
    uint64_t v16 = __Block_byref_object_copy__0;
    uint64_t v17 = __Block_byref_object_dispose__0;
    id v18 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = &v7;
    uint64_t v9 = 0x3032000000;
    uint64_t v10 = __Block_byref_object_copy__0;
    id v11 = __Block_byref_object_dispose__0;
    id v12 = 0;
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    v6[2] = __SESKeyGetPTAttestationCASD_block_invoke;
    v6[3] = &unk_264219528;
    v6[4] = &v13;
    void v6[5] = &v7;
    [v3 getCASDCertificate:0 reply:v6];
    if (a1) {
      *a1 = (id) v8[5];
    }
    id v4 = (id)v14[5];
    _Block_object_dispose(&v7, 8);

    _Block_object_dispose(&v13, 8);
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

void sub_2146F4704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

void __SESKeyGetPTAttestationCASD_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void *SESKeyCreatePTAttestationWithSession(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  if (v15 && v16)
  {
    +[SESClient sharedClient]();
    id v19 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v20 = -[SESClient synchronousRemoteObjectProxyWithError:](v19, a7);

    if (v20)
    {
      uint64_t v31 = 0;
      id v32 = &v31;
      uint64_t v33 = 0x3032000000;
      id v34 = __Block_byref_object_copy__0;
      uint64_t v35 = __Block_byref_object_dispose__0;
      id v36 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = &v25;
      uint64_t v27 = 0x3032000000;
      id v28 = __Block_byref_object_copy__0;
      id v29 = __Block_byref_object_dispose__0;
      id v30 = 0;
      id v21 = +[SEProxy withSession:seid:](SEProxy, "withSession:seid:");
      v24[0] = MEMORY[0x263EF8330];
      v24[1] = 3221225472;
      v24[2] = __SESKeyCreatePTAttestationWithSession_block_invoke;
      v24[3] = &unk_264219528;
      v24[4] = &v31;
      v24[5] = &v25;
      [v20 createPTAttestation:v21 keyData:v15 subjectIdentifier:v16 nonce:v17 OIDs:v18 reply:v24];

      if (a7) {
        *a7 = (id) v26[5];
      }
      a7 = (id)v32[5];
      _Block_object_dispose(&v25, 8);

      _Block_object_dispose(&v31, 8);
    }
    else
    {
      a7 = 0;
    }
  }
  else if (a7)
  {
    id v22 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a7 = (id)objc_claimAutoreleasedReturnValue();

    a7 = 0;
  }

  return a7;
}

void sub_2146F4A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESKeyCreatePTAttestationWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void *SESKeyUpdateACL(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  uint64_t v9 = v8;
  if (v7 && a2 && v8)
  {
    uint64_t v10 = extractACLsSet();
    if (v10)
    {
      +[SESClient sharedClient]();
      id v11 = (id *)objc_claimAutoreleasedReturnValue();
      uint64_t v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v11, a4);

      if (v12)
      {
        uint64_t v23 = 0;
        uint64_t v24 = &v23;
        uint64_t v25 = 0x3032000000;
        uint64_t v26 = __Block_byref_object_copy__0;
        uint64_t v27 = __Block_byref_object_dispose__0;
        id v28 = 0;
        uint64_t v17 = 0;
        id v18 = &v17;
        uint64_t v19 = 0x3032000000;
        uint64_t v20 = __Block_byref_object_copy__0;
        id v21 = __Block_byref_object_dispose__0;
        id v22 = 0;
        v16[0] = MEMORY[0x263EF8330];
        v16[1] = 3221225472;
        v16[2] = __SESKeyUpdateACL_block_invoke;
        v16[3] = &unk_264219528;
        v16[4] = &v17;
        v16[5] = &v23;
        [v12 updateACLForSEKey:v7 extractedACLs:v10 laExternalizedContext:v9 reply:v16];
        if (a4) {
          *a4 = (id) v18[5];
        }
        a4 = (id)v24[5];
        _Block_object_dispose(&v17, 8);

        _Block_object_dispose(&v23, 8);
      }
      else
      {
        a4 = 0;
      }
    }
    else if (a4)
    {
      uint64_t v14 = SESDefaultLogObject();
      SESCreateAndLogError();
      *a4 = (id)objc_claimAutoreleasedReturnValue();

      a4 = 0;
    }
  }
  else if (a4)
  {
    uint64_t v13 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a4 = (id)objc_claimAutoreleasedReturnValue();

    a4 = 0;
  }

  return a4;
}

void sub_2146F4D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESKeyUpdateACL_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

uint64_t SESKeyGetSupportedFeatures(void *a1)
{
  +[SESClient sharedClient]();
  uint64_t v2 = (id *)objc_claimAutoreleasedReturnValue();
  id v3 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, a1);

  if (v3)
  {
    uint64_t v13 = 0;
    uint64_t v14 = &v13;
    uint64_t v15 = 0x2020000000;
    uint64_t v16 = 0;
    uint64_t v7 = 0;
    id v8 = &v7;
    uint64_t v9 = 0x3032000000;
    uint64_t v10 = __Block_byref_object_copy__0;
    uint64_t v11 = __Block_byref_object_dispose__0;
    id v12 = 0;
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    v6[2] = __SESKeyGetSupportedFeatures_block_invoke;
    v6[3] = &unk_264219578;
    v6[4] = &v13;
    void v6[5] = &v7;
    [v3 getSESKeySupportedFeatures:v6];
    if (a1) {
      *a1 = (id) v8[5];
    }
    uint64_t v4 = v14[3];
    _Block_object_dispose(&v7, 8);

    _Block_object_dispose(&v13, 8);
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

void sub_2146F4F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

void __SESKeyGetSupportedFeatures_block_invoke(uint64_t a1, uint64_t a2, id obj)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

BOOL SESKeyIsValid(void *a1, void *a2)
{
  id v3 = a1;
  +[SESClient sharedClient]();
  uint64_t v4 = (id *)objc_claimAutoreleasedReturnValue();
  id v5 = -[SESClient synchronousRemoteObjectProxyWithError:](v4, a2);

  if (v5)
  {
    uint64_t v9 = 0;
    uint64_t v10 = &v9;
    uint64_t v11 = 0x2020000000;
    char v12 = 0;
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __SESKeyIsValid_block_invoke;
    v8[3] = &unk_2642195A0;
    v8[4] = &v9;
    [v5 checkKeyValidity:v3 completion:v8];
    BOOL v6 = *((unsigned char *)v10 + 24) != 0;
    _Block_object_dispose(&v9, 8);
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

void sub_2146F50A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __SESKeyIsValid_block_invoke(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

BOOL SESKeyDesignate(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  +[SESClient sharedClient]();
  uint64_t v9 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v10 = -[SESClient synchronousRemoteObjectProxyWithError:](v9, a4);

  if (v10)
  {
    uint64_t v15 = 0;
    uint64_t v16 = &v15;
    uint64_t v17 = 0x3032000000;
    id v18 = __Block_byref_object_copy__0;
    uint64_t v19 = __Block_byref_object_dispose__0;
    id v20 = 0;
    uint64_t v11 = [NSNumber numberWithInteger:a3];
    v14[0] = MEMORY[0x263EF8330];
    v14[1] = 3221225472;
    v14[2] = __SESKeyDesignate_block_invoke;
    v14[3] = &unk_2642194D8;
    v14[4] = &v15;
    [v10 designateKey:v8 designation:v11 handoffToken:v7 completion:v14];

    BOOL v12 = v16[5] == 0;
    _Block_object_dispose(&v15, 8);
  }
  else
  {
    BOOL v12 = 0;
  }

  return v12;
}

void sub_2146F523C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESKeyDesignate_block_invoke(uint64_t a1, void *a2)
{
}

BOOL SESKeyRemoveDesignation(uint64_t a1, void *a2)
{
  +[SESClient sharedClient]();
  uint64_t v4 = (id *)objc_claimAutoreleasedReturnValue();
  id v5 = -[SESClient synchronousRemoteObjectProxyWithError:](v4, a2);

  if (v5)
  {
    uint64_t v10 = 0;
    uint64_t v11 = &v10;
    uint64_t v12 = 0x3032000000;
    uint64_t v13 = __Block_byref_object_copy__0;
    uint64_t v14 = __Block_byref_object_dispose__0;
    id v15 = 0;
    BOOL v6 = [NSNumber numberWithInteger:a1];
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 3221225472;
    v9[2] = __SESKeyRemoveDesignation_block_invoke;
    v9[3] = &unk_2642194D8;
    v9[4] = &v10;
    [v5 designateKey:0 designation:v6 handoffToken:0 completion:v9];

    BOOL v7 = v11[5] == 0;
    _Block_object_dispose(&v10, 8);
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

void sub_2146F53B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESKeyRemoveDesignation_block_invoke(uint64_t a1, void *a2)
{
}

void ___signPrecomputedDigestWithProxy_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  BOOL v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_2146F56DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2146F82FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void sub_2146FA604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_2146FF6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void sub_2146FFED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_21470017C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_214700468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_2147007AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_214702A88(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_214703330(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2147039FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2147063CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id *location,id *a24)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a24);
  objc_destroyWeak((id *)(v25 - 112));
  objc_sync_exit(v24);
  _Unwind_Resume(a1);
}

void sub_2147066B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void sub_2147068A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SESEndPointAppletCleanup(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 && v4)
  {
    uint64_t v16 = 0;
    uint64_t v17 = &v16;
    uint64_t v18 = 0x3032000000;
    uint64_t v19 = __Block_byref_object_copy__3;
    id v20 = __Block_byref_object_dispose__3;
    id v21 = 0;
    +[SESClient sharedClient]();
    uint64_t v6 = (id *)objc_claimAutoreleasedReturnValue();
    BOOL v7 = (id *)(v17 + 5);
    id obj = (id)v17[5];
    uint64_t v8 = -[SESClient synchronousRemoteObjectProxyWithError:](v6, &obj);
    objc_storeStrong(v7, obj);

    if (v8 && !v17[5])
    {
      uint64_t v12 = +[SEProxy withSession:v3 seid:v5];
      v14[0] = MEMORY[0x263EF8330];
      v14[1] = 3221225472;
      v14[2] = __SESEndPointAppletCleanup_block_invoke;
      v14[3] = &unk_2642194D8;
      v14[4] = &v16;
      [v8 cleanupAppletsWithNoEndpoints:v12 reply:v14];

      id v10 = (id)v17[5];
    }
    else
    {
      uint64_t v9 = SESDefaultLogObject();
      SESCreateAndLogError();
      id v10 = (id)objc_claimAutoreleasedReturnValue();
    }
    _Block_object_dispose(&v16, 8);
  }
  else
  {
    uint64_t v11 = SESDefaultLogObject();
    SESCreateAndLogError();
    id v10 = (id)objc_claimAutoreleasedReturnValue();
  }
  return v10;
}

void sub_214706B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointAppletCleanup_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndPointTSMDictionary(void *a1, void *a2, void *a3)
{
  uint64_t v93 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  BOOL v7 = v6;
  if (v5 && v6)
  {
    id v84 = 0;
    uint64_t v8 = SESEndPointListWithSession(v5, v6, &v84);
    id v9 = v84;
    if (v9 || !v8)
    {
      if (a3)
      {
        SESDefaultLogObject();
        id v11 = (id)objc_claimAutoreleasedReturnValue();
        SESCreateAndLogError();
        uint64_t v57 = 0;
        *a3 = (id)objc_claimAutoreleasedReturnValue();
        id v10 = v8;
        goto LABEL_50;
      }
      uint64_t v57 = 0;
    }
    else
    {
      id v10 = [v8 filter:&__block_literal_global_772];

      id v83 = 0;
      SESEndPointListContainers(v5, v7, &v83);
      id v11 = (id)objc_claimAutoreleasedReturnValue();
      id v9 = v83;
      if (!v9 && v11)
      {
        id v62 = v7;
        id v63 = v5;
        v60 = [v11 filter:&__block_literal_global_778];

        v74 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v10, "count"));
        long long v79 = 0u;
        long long v80 = 0u;
        long long v81 = 0u;
        long long v82 = 0u;
        v61 = v10;
        id obj = v10;
        uint64_t v12 = [obj countByEnumeratingWithState:&v79 objects:v92 count:16];
        if (!v12) {
          goto LABEL_31;
        }
        uint64_t v13 = v12;
        uint64_t v14 = @"appletAid";
        uint64_t v73 = *(void *)v80;
        while (1)
        {
          uint64_t v15 = 0;
          uint64_t v64 = v13;
          do
          {
            if (*(void *)v80 != v73) {
              objc_enumerationMutation(obj);
            }
            uint64_t v16 = *(void **)(*((void *)&v79 + 1) + 8 * v15);
            uint64_t v17 = objc_opt_new();
            uint64_t v18 = [v16 appletIdentifier];
            uint64_t v19 = [v18 asHexString];
            [v17 setObject:v19 forKeyedSubscript:v14];

            id v20 = [v16 publicKeyIdentifier];
            id v21 = [v20 asHexString];
            [v17 setObject:v21 forKeyedSubscript:@"keyId"];

            uint64_t v22 = [v16 endPointType];
            uint64_t v23 = NSNumber;
            uint64_t v24 = [v16 revocationAttestation];
            uint64_t v25 = (void *)v24;
            if (v22 != 1)
            {
              if (v24) {
                uint64_t v27 = 129;
              }
              else {
                uint64_t v27 = 15;
              }
              id v28 = [v23 numberWithUnsignedInt:v27];
              [v17 setObject:v28 forKeyedSubscript:@"state"];
LABEL_23:

              goto LABEL_24;
            }
            if (v24)
            {
              uint64_t v26 = 129;
            }
            else
            {
              BOOL v7 = [v16 trackingReceipt];
              if (v7) {
                uint64_t v26 = 15;
              }
              else {
                uint64_t v26 = 21;
              }
            }
            id v29 = [v23 numberWithUnsignedInt:v26];
            [v17 setObject:v29 forKeyedSubscript:@"state"];

            id v28 = v7;
            if (!v25) {
              goto LABEL_23;
            }
LABEL_24:

            id v30 = [v16 revocationAttestation];

            if (v30)
            {
              uint64_t v31 = [v16 revocationAttestation];
              id v32 = [v31 asHexString];
              [v17 setObject:v32 forKeyedSubscript:@"terminationAttestation"];

              uint64_t v33 = [v16 carOEMProprietaryData];

              if (v33)
              {
                v90[0] = @"version";
                v72 = [v16 carOEMProprietaryData];
                v71 = [v72 version];
                v91[0] = v71;
                v90[1] = @"cipherText";
                v70 = [v16 carOEMProprietaryData];
                v69 = [v70 cipherText];
                v68 = [v69 asHexString];
                v91[1] = v68;
                v90[2] = @"ephemeralPK";
                v67 = [v16 carOEMProprietaryData];
                v66 = [v67 ephemeralPublicKeydata];
                id v34 = [v66 asHexString];
                v91[2] = v34;
                v90[3] = @"receiverPKID";
                uint64_t v35 = [v16 carOEMProprietaryData];
                id v36 = [v35 receiverPublicKeyHash];
                [v36 asHexString];
                id v37 = v7;
                id v39 = v38 = v14;
                v91[3] = v39;
                uint64_t v40 = [NSDictionary dictionaryWithObjects:v91 forKeys:v90 count:4];
                [v17 setObject:v40 forKeyedSubscript:@"carOemProprietaryData"];

                uint64_t v14 = v38;
                BOOL v7 = v37;

                uint64_t v13 = v64;
              }
              id v41 = [v16 terminatedByTaskID];

              if (v41)
              {
                id v42 = [v16 terminatedByTaskID];
                [v17 setObject:v42 forKeyedSubscript:@"terminatedByTaskID"];
              }
            }
            [v74 addObject:v17];

            ++v15;
          }
          while (v13 != v15);
          uint64_t v13 = [obj countByEnumeratingWithState:&v79 objects:v92 count:16];
          if (!v13)
          {
LABEL_31:

            id v43 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v60, "count"));
            long long v75 = 0u;
            long long v76 = 0u;
            long long v77 = 0u;
            long long v78 = 0u;
            id v11 = v60;
            uint64_t v44 = [v11 countByEnumeratingWithState:&v75 objects:v89 count:16];
            if (v44)
            {
              uint64_t v45 = v44;
              uint64_t v46 = *(void *)v76;
              do
              {
                uint64_t v47 = v11;
                for (uint64_t i = 0; i != v45; ++i)
                {
                  if (*(void *)v76 != v46) {
                    objc_enumerationMutation(v47);
                  }
                  v49 = *(void **)(*((void *)&v75 + 1) + 8 * i);
                  v87[0] = @"appletAid";
                  id v50 = [v49 appletAID];
                  uint64_t v51 = [v50 asHexString];
                  v87[1] = @"state";
                  v88[0] = v51;
                  v52 = NSNumber;
                  if ([v49 isSuspended]) {
                    uint64_t v53 = 143;
                  }
                  else {
                    uint64_t v53 = 15;
                  }
                  v54 = [v52 numberWithUnsignedInt:v53];
                  v88[1] = v54;
                  v55 = [NSDictionary dictionaryWithObjects:v88 forKeys:v87 count:2];
                  [v43 addObject:v55];
                }
                id v11 = v47;
                uint64_t v45 = [v47 countByEnumeratingWithState:&v75 objects:v89 count:16];
              }
              while (v45);
            }

            v85[0] = @"PTKeys";
            v85[1] = @"ptaContainers";
            id v56 = v74;
            v86[0] = v74;
            v86[1] = v43;
            uint64_t v57 = [NSDictionary dictionaryWithObjects:v86 forKeys:v85 count:2];

            BOOL v7 = v62;
            id v5 = v63;
            id v10 = v61;
            id v9 = 0;
LABEL_49:

            goto LABEL_50;
          }
        }
      }
      if (a3)
      {
        id v56 = SESDefaultLogObject();
        SESCreateAndLogError();
        uint64_t v57 = 0;
        *a3 = (id)objc_claimAutoreleasedReturnValue();
        goto LABEL_49;
      }
      uint64_t v57 = 0;
LABEL_50:

      uint64_t v8 = v10;
    }
  }
  else
  {
    if (a3)
    {
      v58 = SESDefaultLogObject();
      SESCreateAndLogError();
      *a3 = (id)objc_claimAutoreleasedReturnValue();
    }
    uint64_t v57 = 0;
  }

  return v57;
}

BOOL __SESEndPointTSMDictionary_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = [v2 endPointType] != 3 && objc_msgSend(v2, "endPointType") != 4;

  return v3;
}

uint64_t __SESEndPointTSMDictionary_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = [a2 appletAID];
  BOOL v3 = [v2 asHexString];
  uint64_t v4 = [v3 isEqualToString:@"A00000085801010100000001"] ^ 1;

  return v4;
}

void SESClientSetMachServiceName(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    +[SESClient sharedClient]();
    id v2 = (id)objc_claimAutoreleasedReturnValue();
    -[SESClient setServiceName:]((uint64_t)v2, v1);
  }
}

void SESPrivateLogSERProtocolDetails(void *a1, void *a2, void *a3)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (v6)
  {
    Name = protocol_getName(v6);
    if (v7)
    {
      int v9 = [v7 conformsToProtocol:v6];
      id v10 = SESDefaultLogObject();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138544386;
        *(void *)uint64_t v25 = v5;
        *(_WORD *)&v25[8] = 2050;
        *(void *)&v25[10] = v6;
        *(_WORD *)&v25[18] = 2082;
        *(void *)&v25[20] = Name;
        __int16 v26 = 2114;
        id v27 = v7;
        __int16 v28 = 1026;
        int v29 = v9;
        _os_log_impl(&dword_2146ED000, v10, OS_LOG_TYPE_ERROR, "[%{public}@] SERProto %{public}p/%{public}s candidate %{public}@ conforms %{public}d", buf, 0x30u);
      }

      unsigned int outCount = 0;
      id v11 = (objc_class *)objc_opt_class();
      uint64_t v12 = class_copyProtocolList(v11, &outCount);
      uint64_t v13 = SESDefaultLogObject();
      uint64_t v14 = v13;
      if (v12)
      {
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)uint64_t v25 = outCount;
          _os_log_impl(&dword_2146ED000, v14, OS_LOG_TYPE_INFO, "Candidate conforms to %u protocols:", buf, 8u);
        }

        if (outCount)
        {
          for (unint64_t i = 0; i < outCount; ++i)
          {
            uint64_t v16 = SESDefaultLogObject();
            if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
            {
              uint64_t v17 = v12[i];
              uint64_t v18 = protocol_getName(v17);
              *(_DWORD *)buf = 67109634;
              *(_DWORD *)uint64_t v25 = i;
              *(_WORD *)&v25[4] = 2048;
              *(void *)&void v25[6] = v17;
              *(_WORD *)&v25[14] = 2080;
              *(void *)&v25[16] = v18;
              _os_log_impl(&dword_2146ED000, v16, OS_LOG_TYPE_INFO, "    %u : protocol %p/%s", buf, 0x1Cu);
            }
          }
        }
        free(v12);
        goto LABEL_23;
      }
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        id v20 = "Failed to class_copyProtocolList";
        id v21 = v14;
        uint32_t v22 = 2;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v14 = SESDefaultLogObject();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543874;
        *(void *)uint64_t v25 = v5;
        *(_WORD *)&v25[8] = 2050;
        *(void *)&v25[10] = v6;
        *(_WORD *)&v25[18] = 2082;
        *(void *)&v25[20] = Name;
        id v20 = "[%{public}@] SERProto %{public}p/%{public}s";
        id v21 = v14;
        uint32_t v22 = 32;
LABEL_21:
        _os_log_impl(&dword_2146ED000, v21, OS_LOG_TYPE_ERROR, v20, buf, v22);
      }
    }

    goto LABEL_23;
  }
  uint64_t v19 = SESDefaultLogObject();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138543362;
    *(void *)uint64_t v25 = v5;
    _os_log_impl(&dword_2146ED000, v19, OS_LOG_TYPE_ERROR, "[%{public}@] SERProto nil protocol", buf, 0xCu);
  }

LABEL_23:
}

void sub_2147085F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void sub_2147088CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_214708B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21470AE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void sub_21470B4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void sub_21470B7B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21470BA74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21470BD3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21470C084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21470C35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21470C6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SESEndPointCAList(void *a1)
{
  uint64_t v15 = 0;
  uint64_t v16 = &v15;
  uint64_t v17 = 0x3032000000;
  uint64_t v18 = __Block_byref_object_copy__7;
  uint64_t v19 = __Block_byref_object_dispose__7;
  id v20 = 0;
  uint64_t v9 = 0;
  id v10 = &v9;
  uint64_t v11 = 0x3032000000;
  uint64_t v12 = __Block_byref_object_copy__7;
  uint64_t v13 = __Block_byref_object_dispose__7;
  id v14 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  BOOL v3 = (id *)(v10 + 5);
  id obj = (id)v10[5];
  uint64_t v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3, obj);

  if (v4 && !v10[5])
  {
    v7[0] = MEMORY[0x263EF8330];
    v7[1] = 3221225472;
    v7[2] = __SESEndPointCAList_block_invoke;
    v7[3] = &unk_264219440;
    v7[4] = &v15;
    v7[5] = &v9;
    [v4 listEndPointCAs:v7];
    if (a1) {
      *a1 = (id) v10[5];
    }
    id v5 = (id)v16[5];
  }
  else
  {
    id v5 = 0;
  }

  _Block_object_dispose(&v9, 8);
  _Block_object_dispose(&v15, 8);

  return v5;
}

void sub_21470CFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void __SESEndPointCAList_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointCreateCA(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v20 = 0;
  id v21 = &v20;
  uint64_t v22 = 0x3032000000;
  uint64_t v23 = __Block_byref_object_copy__7;
  uint64_t v24 = __Block_byref_object_dispose__7;
  id v25 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x3032000000;
  uint64_t v17 = __Block_byref_object_copy__7;
  uint64_t v18 = __Block_byref_object_dispose__7;
  id v19 = 0;
  +[SESClient sharedClient]();
  uint64_t v7 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = (id *)(v15 + 5);
  id obj = (id)v15[5];
  uint64_t v9 = -[SESClient synchronousRemoteObjectProxyWithError:](v7, &obj);
  objc_storeStrong(v8, obj);

  if (v9 && !v15[5])
  {
    v12[0] = MEMORY[0x263EF8330];
    v12[1] = 3221225472;
    v12[2] = __SESEndPointCreateCA_block_invoke;
    v12[3] = &unk_264219AE8;
    v12[4] = &v20;
    v12[5] = &v14;
    [v9 createEndPointCA:v5 subjectIdentifier:v6 reply:v12];
    if (a3) {
      *a3 = (id) v15[5];
    }
    id v10 = (id)v21[5];
  }
  else
  {
    id v10 = 0;
  }

  _Block_object_dispose(&v14, 8);
  _Block_object_dispose(&v20, 8);

  return v10;
}

void sub_21470D29C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointCreateCA_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

BOOL SESEndPointDeleteCA(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x3032000000;
  uint64_t v14 = __Block_byref_object_copy__7;
  uint64_t v15 = __Block_byref_object_dispose__7;
  id v16 = 0;
  +[SESClient sharedClient]();
  uint64_t v4 = (id *)objc_claimAutoreleasedReturnValue();
  id v5 = (id *)(v12 + 5);
  id obj = (id)v12[5];
  id v6 = -[SESClient synchronousRemoteObjectProxyWithError:](v4, &obj);
  objc_storeStrong(v5, obj);

  if (v6 && !v12[5])
  {
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 3221225472;
    v9[2] = __SESEndPointDeleteCA_block_invoke;
    v9[3] = &unk_2642194D8;
    v9[4] = &v11;
    [v6 deleteEndPointCA:v3 reply:v9];
    if (a2) {
      *a2 = (id) v12[5];
    }
    BOOL v7 = v12[5] == 0;
  }
  else
  {
    BOOL v7 = 0;
  }

  _Block_object_dispose(&v11, 8);
  return v7;
}

void sub_21470D4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointDeleteCA_block_invoke(uint64_t a1, void *a2)
{
}

void sub_21470E668(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_21470EAE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_21470EF58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_21470F054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_21470F2CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v4 - 64));
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_21470F46C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_21470F610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_21470F938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

void sub_21470FC00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21470FEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_21471024C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_214710810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_214710B20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_214710C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void SESEndPointPreWarmWithReply(void *a1)
{
}

void SESEndPointPreWarm(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = a2;
  +[SESClient sharedClient]();
  id v5 = (id *)objc_claimAutoreleasedReturnValue();
  id v8 = 0;
  id v6 = -[SESClient remoteObjectProxyWithError:](v5, &v8);
  id v7 = v8;
  if (v7) {
    v4[2](v4, v7);
  }
  else {
    [v6 preWarm:v3 reply:v4];
  }
}

id SESEndPointList(void *a1)
{
  uint64_t v16 = 0;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x3032000000;
  id v19 = __Block_byref_object_copy__9;
  uint64_t v20 = __Block_byref_object_dispose__9;
  id v21 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x3032000000;
  uint64_t v13 = __Block_byref_object_copy__9;
  uint64_t v14 = __Block_byref_object_dispose__9;
  id v15 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  id v3 = (id *)(v11 + 5);
  id obj = (id)v11[5];
  uint64_t v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3, obj);

  id v5 = (void *)v11[5];
  if (v5)
  {
    id v6 = 0;
    if (a1) {
      *a1 = v5;
    }
  }
  else
  {
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __SESEndPointList_block_invoke;
    v8[3] = &unk_264219440;
    v8[4] = &v16;
    void v8[5] = &v10;
    [v4 listEndPointsWithProxy:0 reply:v8];
    if (a1) {
      *a1 = (id) v11[5];
    }
    id v6 = (id)v17[5];
  }

  _Block_object_dispose(&v10, 8);
  _Block_object_dispose(&v16, 8);

  return v6;
}

void sub_214710FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void __SESEndPointList_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointFilterDigitalCarKeys(void *a1, void *a2)
{
  id v3 = a1;
  id v13 = 0;
  uint64_t v4 = SESEndPointList(&v13);
  id v5 = v13;
  id v6 = v5;
  if (v5)
  {
    uint64_t v7 = 0;
    if (a2) {
      *a2 = v5;
    }
  }
  else
  {
    id v8 = [v4 filterMap:&__block_literal_global_6];
    v11[0] = MEMORY[0x263EF8330];
    v11[1] = 3221225472;
    v11[2] = __SESEndPointFilterDigitalCarKeys_block_invoke_2;
    v11[3] = &unk_264219BF8;
    id v12 = v8;
    id v9 = v8;
    uint64_t v7 = [v3 filter:v11];
  }
  return v7;
}

id __SESEndPointFilterDigitalCarKeys_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([v2 endPointType] == 1)
  {
    id v3 = [v2 revocationAttestation];
    if (v3)
    {
      uint64_t v4 = 0;
    }
    else
    {
      uint64_t v4 = [v2 publicKeyIdentifier];
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t __SESEndPointFilterDigitalCarKeys_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 hexStringAsData];
  uint64_t v4 = [v2 containsObject:v3];

  return v4;
}

id SESEndPointListWithSession(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  id v25 = __Block_byref_object_copy__9;
  __int16 v26 = __Block_byref_object_dispose__9;
  id v27 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x3032000000;
  id v19 = __Block_byref_object_copy__9;
  uint64_t v20 = __Block_byref_object_dispose__9;
  id v21 = 0;
  +[SESClient sharedClient]();
  uint64_t v7 = (id *)objc_claimAutoreleasedReturnValue();
  id v8 = (id *)(v17 + 5);
  id obj = (id)v17[5];
  id v9 = -[SESClient synchronousRemoteObjectProxyWithError:](v7, &obj);
  objc_storeStrong(v8, obj);

  uint64_t v10 = (void *)v17[5];
  if (v10)
  {
    id v11 = 0;
    if (a3) {
      *a3 = v10;
    }
  }
  else
  {
    id v12 = +[SEProxy withSession:v5 seid:v6];
    v14[0] = MEMORY[0x263EF8330];
    v14[1] = 3221225472;
    v14[2] = __SESEndPointListWithSession_block_invoke;
    v14[3] = &unk_264219440;
    v14[4] = &v22;
    void v14[5] = &v16;
    [v9 listEndPointsWithProxy:v12 reply:v14];

    if (a3) {
      *a3 = (id) v17[5];
    }
    id v11 = (id)v23[5];
  }

  _Block_object_dispose(&v16, 8);
  _Block_object_dispose(&v22, 8);

  return v11;
}

void sub_214711478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointListWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointCreateForAlishaWithSession(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  id v46 = a1;
  id v45 = a2;
  id v44 = a3;
  id v43 = a4;
  id v42 = a5;
  id v41 = a6;
  id v40 = a7;
  id v39 = a8;
  id v38 = a9;
  id v23 = a10;
  id v24 = a11;
  id v25 = a12;
  id v26 = a13;
  id v27 = a14;
  id v28 = a15;
  uint64_t v55 = 0;
  id v56 = &v55;
  uint64_t v57 = 0x3032000000;
  v58 = __Block_byref_object_copy__9;
  uint64_t v59 = __Block_byref_object_dispose__9;
  id v60 = 0;
  uint64_t v49 = 0;
  id v50 = (id *)&v49;
  uint64_t v51 = 0x3032000000;
  v52 = __Block_byref_object_copy__9;
  uint64_t v53 = __Block_byref_object_dispose__9;
  id v54 = 0;
  +[SESClient sharedClient]();
  int v29 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v30 = v50;
  id v48 = v50[5];
  uint64_t v31 = -[SESClient synchronousRemoteObjectProxyWithError:](v29, &v48);
  objc_storeStrong(v30 + 5, v48);

  id v32 = v50[5];
  if (v32)
  {
    id v33 = 0;
    if (a16) {
      *a16 = v32;
    }
  }
  else
  {
    if (v46) {
      BOOL v34 = v45 == 0;
    }
    else {
      BOOL v34 = 1;
    }
    int v35 = !v34;
    if (v34)
    {
      id v36 = 0;
    }
    else
    {
      id v36 = +[SEProxy withSession:seid:](SEProxy, "withSession:seid:");
    }
    v47[0] = MEMORY[0x263EF8330];
    v47[1] = 3221225472;
    v47[2] = __SESEndPointCreateForAlishaWithSession_block_invoke;
    v47[3] = &unk_264219C20;
    v47[4] = &v55;
    v47[5] = &v49;
    [v31 createAlishaEndpointWithProxy:v36 identifier:v44 authorityIdentifier:v43 subjectIdentifier:v42 configuration:v41 readerIdentifier:v40 readerPublicKey:v39 readerInformation:v38 startDate:v23 endDate:v24 keyIdentifier:v25 authorizedKeys:v26 confidentialMailBoxSize:v27 privateMailBoxSize:v28 reply:v47];
    if (v35) {

    }
    if (a16) {
      *a16 = v50[5];
    }
    id v33 = (id)v56[5];
  }

  _Block_object_dispose(&v49, 8);
  _Block_object_dispose(&v55, 8);

  return v33;
}

void sub_214711898(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointCreateForAlishaWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointCreateForHydraWithSession(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v27 = 0;
  id v28 = &v27;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__9;
  uint64_t v31 = __Block_byref_object_dispose__9;
  id v32 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = &v21;
  uint64_t v23 = 0x3032000000;
  id v24 = __Block_byref_object_copy__9;
  id v25 = __Block_byref_object_dispose__9;
  id v26 = 0;
  +[SESClient sharedClient]();
  uint64_t v10 = (id *)objc_claimAutoreleasedReturnValue();
  id v11 = (id *)(v22 + 5);
  id obj = (id)v22[5];
  id v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, &obj);
  objc_storeStrong(v11, obj);

  id v13 = (void *)v22[5];
  if (v13)
  {
    id v14 = 0;
    if (a4) {
      *a4 = v13;
    }
  }
  else
  {
    if (v7) {
      BOOL v15 = v8 == 0;
    }
    else {
      BOOL v15 = 1;
    }
    int v16 = !v15;
    if (v15)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = +[SEProxy withSession:v7 seid:v8];
    }
    v19[0] = MEMORY[0x263EF8330];
    v19[1] = 3221225472;
    v19[2] = __SESEndPointCreateForHydraWithSession_block_invoke;
    v19[3] = &unk_264219C20;
    v19[4] = &v27;
    v19[5] = &v21;
    [v12 createHydraEndpointWithProxy:v17 serverParams:v9 reply:v19];
    if (v16) {

    }
    if (a4) {
      *a4 = (id) v22[5];
    }
    id v14 = (id)v28[5];
  }

  _Block_object_dispose(&v21, 8);
  _Block_object_dispose(&v27, 8);

  return v14;
}

void sub_214711B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointCreateForHydraWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointCreateForLyonHydraWithSession(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v27 = 0;
  id v28 = &v27;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__9;
  uint64_t v31 = __Block_byref_object_dispose__9;
  id v32 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = &v21;
  uint64_t v23 = 0x3032000000;
  id v24 = __Block_byref_object_copy__9;
  id v25 = __Block_byref_object_dispose__9;
  id v26 = 0;
  +[SESClient sharedClient]();
  uint64_t v10 = (id *)objc_claimAutoreleasedReturnValue();
  id v11 = (id *)(v22 + 5);
  id obj = (id)v22[5];
  uint64_t v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, &obj);
  objc_storeStrong(v11, obj);

  uint64_t v13 = (void *)v22[5];
  if (v13)
  {
    id v14 = 0;
    if (a4) {
      *a4 = v13;
    }
  }
  else
  {
    if (v7) {
      BOOL v15 = v8 == 0;
    }
    else {
      BOOL v15 = 1;
    }
    int v16 = !v15;
    if (v15)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = +[SEProxy withSession:v7 seid:v8];
    }
    v19[0] = MEMORY[0x263EF8330];
    v19[1] = 3221225472;
    v19[2] = __SESEndPointCreateForLyonHydraWithSession_block_invoke;
    v19[3] = &unk_264219C20;
    v19[4] = &v27;
    v19[5] = &v21;
    [v12 createLyonHydraEndpointWithProxy:v17 serverParams:v9 reply:v19];
    if (v16) {

    }
    if (a4) {
      *a4 = (id) v22[5];
    }
    id v14 = (id)v28[5];
  }

  _Block_object_dispose(&v21, 8);
  _Block_object_dispose(&v27, 8);

  return v14;
}

void sub_214711E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointCreateForLyonHydraWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointCreateForHomeWithSession(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  uint64_t v30 = 0;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x3032000000;
  id v33 = __Block_byref_object_copy__9;
  BOOL v34 = __Block_byref_object_dispose__9;
  id v35 = 0;
  uint64_t v24 = 0;
  id v25 = &v24;
  uint64_t v26 = 0x3032000000;
  uint64_t v27 = __Block_byref_object_copy__9;
  id v28 = __Block_byref_object_dispose__9;
  id v29 = 0;
  +[SESClient sharedClient]();
  uint64_t v13 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v14 = (id *)(v25 + 5);
  id obj = (id)v25[5];
  uint64_t v15 = -[SESClient synchronousRemoteObjectProxyWithError:](v13, &obj);
  objc_storeStrong(v14, obj);

  uint64_t v16 = (void *)v25[5];
  if (v16)
  {
    id v17 = 0;
    if (a5) {
      *a5 = v16;
    }
  }
  else
  {
    if (v9) {
      BOOL v18 = v10 == 0;
    }
    else {
      BOOL v18 = 1;
    }
    int v19 = !v18;
    if (v18)
    {
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = +[SEProxy withSession:v9 seid:v10];
    }
    v22[0] = MEMORY[0x263EF8330];
    v22[1] = 3221225472;
    v22[2] = __SESEndPointCreateForHomeWithSession_block_invoke;
    v22[3] = &unk_264219C20;
    v22[4] = &v30;
    v22[5] = &v24;
    [v15 createLocalEndpointWithProxy:v20 readerIdentifier:v11 readerPublicKey:v12 reply:v22];
    if (v19) {

    }
    if (a5) {
      *a5 = (id) v25[5];
    }
    id v17 = (id)v31[5];
  }

  _Block_object_dispose(&v24, 8);
  _Block_object_dispose(&v30, 8);

  return v17;
}

void sub_214712190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointCreateForHomeWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointCreateForLyonWithSession(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  uint64_t v36 = 0;
  id v37 = &v36;
  uint64_t v38 = 0x3032000000;
  id v39 = __Block_byref_object_copy__9;
  id v40 = __Block_byref_object_dispose__9;
  id v41 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x3032000000;
  id v33 = __Block_byref_object_copy__9;
  BOOL v34 = __Block_byref_object_dispose__9;
  id v35 = 0;
  +[SESClient sharedClient]();
  int v19 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v20 = (id *)(v31 + 5);
  id obj = (id)v31[5];
  uint64_t v21 = -[SESClient synchronousRemoteObjectProxyWithError:](v19, &obj);
  objc_storeStrong(v20, obj);

  uint64_t v22 = (void *)v31[5];
  if (v22)
  {
    id v23 = 0;
    if (a7) {
      *a7 = v22;
    }
  }
  else
  {
    if (v13) {
      BOOL v24 = v14 == 0;
    }
    else {
      BOOL v24 = 1;
    }
    int v25 = !v24;
    if (v24)
    {
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v26 = +[SEProxy withSession:v13 seid:v14];
    }
    v28[0] = MEMORY[0x263EF8330];
    v28[1] = 3221225472;
    v28[2] = __SESEndPointCreateForLyonWithSession_block_invoke;
    v28[3] = &unk_264219C20;
    v28[4] = &v36;
    v28[5] = &v30;
    [v21 createLyonEndpointWithProxy:v26 readerGroupIdentifier:v15 readerPublicKey:v16 homeUUID:v18 privateMailboxSize:v17 reply:v28];
    if (v25) {

    }
    if (a7) {
      *a7 = (id) v31[5];
    }
    id v23 = (id)v37[5];
  }

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);

  return v23;
}

void sub_2147124C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointCreateForLyonWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointCreate(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, void *a15)
{
  return SESEndPointCreateForAlishaWithSession(0, 0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a15);
}

id SESEndPointCreateWithSession(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, uint64_t a16, void *a17)
{
  return SESEndPointCreateForAlishaWithSession(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a17);
}

id SESEndPointCreateNew(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16)
{
  return SESEndPointCreateForAlishaWithSession(0, 0, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a16);
}

id SESEndPointRevoke(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v31 = 0;
  uint64_t v32 = (id *)&v31;
  uint64_t v33 = 0x3032000000;
  BOOL v34 = __Block_byref_object_copy__9;
  id v35 = __Block_byref_object_dispose__9;
  id v36 = 0;
  +[SESClient sharedClient]();
  uint64_t v10 = (id *)objc_claimAutoreleasedReturnValue();
  id v11 = v32;
  id obj = v32[5];
  uint64_t v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, &obj);
  objc_storeStrong(v11 + 5, obj);

  id v13 = v32[5];
  if (v13)
  {
    id v14 = 0;
    if (a4) {
      *a4 = v13;
    }
  }
  else
  {
    uint64_t v24 = 0;
    int v25 = &v24;
    uint64_t v26 = 0x3032000000;
    uint64_t v27 = __Block_byref_object_copy__9;
    id v28 = __Block_byref_object_dispose__9;
    id v29 = 0;
    uint64_t v15 = getEndpointQueue();
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __SESEndPointRevoke_block_invoke;
    block[3] = &unk_264219C48;
    id v18 = v12;
    id v19 = v7;
    id v20 = v8;
    id v21 = v9;
    uint64_t v22 = &v24;
    id v23 = &v31;
    dispatch_sync(v15, block);

    if (a4) {
      *a4 = v32[5];
    }
    id v14 = (id)v25[5];

    _Block_object_dispose(&v24, 8);
  }

  _Block_object_dispose(&v31, 8);
  return v14;
}

void sub_2147128A8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id getEndpointQueue()
{
  if (getEndpointQueue_onceToken != -1) {
    dispatch_once(&getEndpointQueue_onceToken, &__block_literal_global_523);
  }
  v0 = (void *)getEndpointQueue_endpointQueue;
  return v0;
}

uint64_t __SESEndPointRevoke_block_invoke(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 3221225472;
  v6[2] = __SESEndPointRevoke_block_invoke_2;
  v6[3] = &unk_264219528;
  long long v7 = *(_OWORD *)(a1 + 64);
  return [v2 revokeEndPointWithIdentifier:v1 nonce:v3 metaData:v4 reply:v6];
}

void __SESEndPointRevoke_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id updateLyonCredentialDocumentStatusWithSession(void *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = a5;
  id v17 = a7;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  uint64_t v32 = __Block_byref_object_copy__9;
  uint64_t v33 = __Block_byref_object_dispose__9;
  id v34 = 0;
  +[SESClient sharedClient]();
  id v18 = (id *)objc_claimAutoreleasedReturnValue();
  id v19 = (id *)(v30 + 5);
  id obj = (id)v30[5];
  id v20 = -[SESClient synchronousRemoteObjectProxyWithError:](v18, &obj);
  objc_storeStrong(v19, obj);

  id v21 = (void *)v30[5];
  if (!v21)
  {
    if (v13) {
      BOOL v22 = v14 == 0;
    }
    else {
      BOOL v22 = 1;
    }
    int v23 = !v22;
    if (v22)
    {
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v24 = +[SEProxy withSession:v13 seid:v14];
    }
    v27[0] = MEMORY[0x263EF8330];
    v27[1] = 3221225472;
    v27[2] = __updateLyonCredentialDocumentStatusWithSession_block_invoke;
    v27[3] = &unk_2642194D8;
    v27[4] = &v29;
    [v20 updateLyonCredentialDocumentStatusWithProxy:v24 endpointIdentifier:v15 accessDocumentPresent:a4 accessDocumentSignedTimestamp:v16 revocationDocumentPresent:a6 revocationDocumentSignedTimestamp:v17 reply:v27];
    if (v23) {

    }
    id v21 = (void *)v30[5];
  }
  id v25 = v21;

  _Block_object_dispose(&v29, 8);
  return v25;
}

void sub_214712C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __updateLyonCredentialDocumentStatusWithSession_block_invoke(uint64_t a1, void *a2)
{
}

BOOL SESEndPointRemoteTerminationRequestFromTSM(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  uint64_t v39 = 0;
  id v40 = (id *)&v39;
  uint64_t v41 = 0x3032000000;
  id v42 = __Block_byref_object_copy__9;
  id v43 = __Block_byref_object_dispose__9;
  id v44 = 0;
  +[SESClient sharedClient]();
  id v16 = (id *)objc_claimAutoreleasedReturnValue();
  id v17 = v40;
  id obj = v40[5];
  id v18 = -[SESClient synchronousRemoteObjectProxyWithError:](v16, &obj);
  objc_storeStrong(v17 + 5, obj);

  id v19 = v40[5];
  if (v19)
  {
    BOOL v20 = 0;
    if (a6) {
      *a6 = v19;
    }
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v33 = &v32;
    uint64_t v34 = 0x3032000000;
    id v35 = __Block_byref_object_copy__9;
    id v36 = __Block_byref_object_dispose__9;
    id v37 = 0;
    id v21 = getEndpointQueue();
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __SESEndPointRemoteTerminationRequestFromTSM_block_invoke;
    block[3] = &unk_264219C70;
    id v24 = v18;
    id v25 = v11;
    id v26 = v12;
    id v27 = v13;
    id v28 = v14;
    id v29 = v15;
    uint64_t v30 = &v32;
    uint64_t v31 = &v39;
    dispatch_sync(v21, block);

    if (a6) {
      *a6 = v40[5];
    }
    BOOL v20 = v33[5] != 0;

    _Block_object_dispose(&v32, 8);
  }

  _Block_object_dispose(&v39, 8);
  return v20;
}

void sub_214712ED8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointRemoteTerminationRequestFromTSM_block_invoke(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = +[SEProxy withSession:*(void *)(a1 + 40) seid:*(void *)(a1 + 48)];
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __SESEndPointRemoteTerminationRequestFromTSM_block_invoke_2;
  v7[3] = &unk_264219528;
  long long v8 = *(_OWORD *)(a1 + 80);
  [v2 remoteTerminationRequestWithProxy:v3 remoteTerminationRequest:v4 publicKeyIdentifier:v5 taskID:v6 reply:v7];
}

void __SESEndPointRemoteTerminationRequestFromTSM_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  long long v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

BOOL SESEndPointDelete(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x3032000000;
  id v15 = __Block_byref_object_copy__9;
  id v16 = __Block_byref_object_dispose__9;
  id v17 = 0;
  +[SESClient sharedClient]();
  uint64_t v4 = (id *)objc_claimAutoreleasedReturnValue();
  id v5 = (id *)(v13 + 5);
  id obj = (id)v13[5];
  id v6 = -[SESClient synchronousRemoteObjectProxyWithError:](v4, &obj);
  objc_storeStrong(v5, obj);

  uint64_t v7 = (void *)v13[5];
  if (v7)
  {
    BOOL v8 = 0;
    if (a2) {
      *a2 = v7;
    }
  }
  else
  {
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 3221225472;
    v10[2] = __SESEndPointDelete_block_invoke;
    v10[3] = &unk_2642194D8;
    v10[4] = &v12;
    [v6 deleteEndPointWithProxy:0 identifier:v3 mustBeTerminated:0 reply:v10];
    if (a2) {
      *a2 = (id) v13[5];
    }
    BOOL v8 = v13[5] == 0;
  }

  _Block_object_dispose(&v12, 8);
  return v8;
}

void sub_2147131B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointDelete_block_invoke(uint64_t a1, void *a2)
{
}

BOOL SESEndPointDeleteWithSession(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v19 = 0;
  BOOL v20 = &v19;
  uint64_t v21 = 0x3032000000;
  BOOL v22 = __Block_byref_object_copy__9;
  int v23 = __Block_byref_object_dispose__9;
  id v24 = 0;
  +[SESClient sharedClient]();
  uint64_t v10 = (id *)objc_claimAutoreleasedReturnValue();
  id v11 = (id *)(v20 + 5);
  id obj = (id)v20[5];
  uint64_t v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, &obj);
  objc_storeStrong(v11, obj);

  id v13 = (void *)v20[5];
  if (v13)
  {
    BOOL v14 = 0;
    if (a4) {
      *a4 = v13;
    }
  }
  else
  {
    id v15 = +[SEProxy withSession:v7 seid:v8];
    v17[0] = MEMORY[0x263EF8330];
    v17[1] = 3221225472;
    v17[2] = __SESEndPointDeleteWithSession_block_invoke;
    v17[3] = &unk_2642194D8;
    v17[4] = &v19;
    [v12 deleteEndPointWithProxy:v15 identifier:v9 mustBeTerminated:1 reply:v17];

    if (a4) {
      *a4 = (id) v20[5];
    }
    BOOL v14 = v20[5] == 0;
  }

  _Block_object_dispose(&v19, 8);
  return v14;
}

void sub_2147133B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointDeleteWithSession_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndPointUpdate()
{
  v0 = SESDefaultLogObject();
  uint64_t v1 = SESCreateAndLogError();

  return v1;
}

id SESEndPointUpdateWithBlock(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v18 = 0;
  uint64_t v19 = &v18;
  uint64_t v20 = 0x3032000000;
  uint64_t v21 = __Block_byref_object_copy__9;
  BOOL v22 = __Block_byref_object_dispose__9;
  id v23 = 0;
  +[SESClient sharedClient]();
  id v5 = (id *)objc_claimAutoreleasedReturnValue();
  id v6 = (id *)(v19 + 5);
  id obj = (id)v19[5];
  id v7 = -[SESClient synchronousRemoteObjectProxyWithError:](v5, &obj);
  objc_storeStrong(v6, obj);

  id v8 = (void *)v19[5];
  if (v8)
  {
    id v9 = v8;
  }
  else
  {
    uint64_t v10 = getEndpointQueue();
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __SESEndPointUpdateWithBlock_block_invoke;
    block[3] = &unk_264219CC0;
    id v13 = v7;
    id v16 = &v18;
    id v14 = v3;
    id v15 = v4;
    dispatch_sync(v10, block);

    id v9 = (id)v19[5];
  }

  _Block_object_dispose(&v18, 8);
  return v9;
}

void sub_214713600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointUpdateWithBlock_block_invoke(uint64_t a1)
{
  v15[0] = 0;
  v15[1] = v15;
  v15[2] = 0x3032000000;
  v15[3] = __Block_byref_object_copy__9;
  v15[4] = __Block_byref_object_dispose__9;
  id v16 = 0;
  id v2 = *(void **)(a1 + 32);
  v14[0] = MEMORY[0x263EF8330];
  v14[1] = 3221225472;
  v14[2] = __SESEndPointUpdateWithBlock_block_invoke_2;
  v14[3] = &unk_264219440;
  uint64_t v3 = *(void *)(a1 + 56);
  v14[4] = v15;
  void v14[5] = v3;
  [v2 listEndPointsWithProxy:0 reply:v14];
  if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    id v4 = [*(id *)(a1 + 40) hexStringAsData];
    v12[5] = MEMORY[0x263EF8330];
    void v12[6] = 3221225472;
    v12[7] = __SESEndPointUpdateWithBlock_block_invoke_3;
    v12[8] = &unk_264219C98;
    id v5 = v4;
    id v13 = v5;
    id v6 = Find();
    if (v6)
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      id v7 = *(void **)(a1 + 32);
      v12[0] = MEMORY[0x263EF8330];
      v12[1] = 3221225472;
      v12[2] = __SESEndPointUpdateWithBlock_block_invoke_4;
      v12[3] = &unk_2642194D8;
      v12[4] = *(void *)(a1 + 56);
      [v7 updateEndpoint:v6 reply:v12];
    }
    else
    {
      id v8 = SESDefaultLogObject();
      uint64_t v9 = SESCreateAndLogError();
      uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
      id v11 = *(void **)(v10 + 40);
      *(void *)(v10 + 40) = v9;
    }
  }
  _Block_object_dispose(v15, 8);
}

void sub_214713854(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointUpdateWithBlock_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

uint64_t __SESEndPointUpdateWithBlock_block_invoke_3(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 publicKeyIdentifier];
  uint64_t v4 = [v3 isEqualToData:*(void *)(a1 + 32)];

  return v4;
}

void __SESEndPointUpdateWithBlock_block_invoke_4(uint64_t a1, void *a2)
{
}

BOOL SESEndPointConfigureMailBoxes(void *a1, void *a2, void *a3, void *a4)
{
  return SESEndPointConfigureWithProxy(0, a1, a2, a3, 0, 0, 0, 0, 0, 0, a4);
}

BOOL SESEndPointConfigureWithProxy(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11)
{
  id v18 = a1;
  id v19 = a2;
  id v20 = a3;
  id v32 = a4;
  id v35 = a5;
  id v34 = a6;
  id v33 = a7;
  id v21 = a8;
  id v22 = a9;
  id v23 = a10;
  uint64_t v50 = 0;
  uint64_t v51 = (id *)&v50;
  uint64_t v52 = 0x3032000000;
  uint64_t v53 = __Block_byref_object_copy__9;
  id v54 = __Block_byref_object_dispose__9;
  id v55 = 0;
  +[SESClient sharedClient]();
  id v24 = (id *)objc_claimAutoreleasedReturnValue();
  id v25 = v51;
  id v49 = v51[5];
  id v26 = -[SESClient synchronousRemoteObjectProxyWithError:](v24, &v49);
  objc_storeStrong(v25 + 5, v49);

  id v27 = v51[5];
  if (v27)
  {
    id v28 = v32;
    BOOL v29 = 0;
    if (a11) {
      *a11 = v27;
    }
  }
  else
  {
    uint64_t v30 = getEndpointQueue();
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __SESEndPointConfigureWithProxy_block_invoke;
    block[3] = &unk_264219DD8;
    id v37 = v26;
    id v38 = v18;
    id v39 = v19;
    id v40 = v20;
    id v28 = v32;
    id v41 = v32;
    id v42 = v34;
    id v43 = v35;
    id v44 = v21;
    id v45 = v33;
    id v46 = v22;
    id v47 = v23;
    id v48 = &v50;
    dispatch_sync(v30, block);

    if (a11) {
      *a11 = v51[5];
    }
    BOOL v29 = v51[5] == 0;
  }
  _Block_object_dispose(&v50, 8);

  return v29;
}

void sub_214713C94(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

BOOL SESEndPointConfigureMailBoxesWithSession(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  if (a1 && a2)
  {
    id v11 = a5;
    id v12 = a4;
    id v13 = a3;
    id v14 = +[SEProxy withSession:a1 seid:a2];
    BOOL v15 = SESEndPointConfigureWithProxy(v14, v13, v12, v11, 0, 0, 0, 0, 0, 0, a6);
  }
  else
  {
    id v12 = a5;
    id v13 = a4;
    id v14 = a3;
    BOOL v15 = SESEndPointConfigureWithProxy(0, v14, v13, v12, 0, 0, 0, 0, 0, 0, a6);
  }

  return v15;
}

BOOL SESEndPointConfigureNFCExpressInLPM(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = SESDefaultLogObject();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67109376;
    BOOL v20 = v9 != 0;
    __int16 v21 = 1024;
    BOOL v22 = v10 != 0;
    _os_log_impl(&dword_2146ED000, v12, OS_LOG_TYPE_INFO, "session %d seid %d", buf, 0xEu);
  }

  if (v9) {
    BOOL v13 = v10 == 0;
  }
  else {
    BOOL v13 = 1;
  }
  int v14 = !v13;
  if (v13)
  {
    BOOL v15 = 0;
  }
  else
  {
    BOOL v15 = +[SEProxy withSession:v9 seid:v10];
  }
  id v16 = [NSNumber numberWithBool:a4];
  BOOL v17 = SESEndPointConfigureWithProxy(v15, v11, 0, 0, 0, 0, 0, 0, 0, v16, a5);

  if (v14) {
  return v17;
  }
}

BOOL SESEndPointEnableVolatileVisibilityOnContactless(void *a1, void *a2)
{
  uint64_t v3 = NSNumber;
  id v4 = a1;
  id v5 = [v3 numberWithBool:1];
  BOOL v6 = SESEndPointConfigureWithProxy(0, v4, 0, 0, 0, v5, 0, 0, 0, 0, a2);

  return v6;
}

BOOL SESEndPointDisableVolatileVisibilityOnContactless(void *a1, void *a2)
{
  uint64_t v3 = NSNumber;
  id v4 = a1;
  id v5 = [v3 numberWithBool:0];
  BOOL v6 = SESEndPointConfigureWithProxy(0, v4, 0, 0, 0, v5, 0, 0, 0, 0, a2);

  return v6;
}

BOOL SESEndPointEnablePersistentVisibilityOnContactless(void *a1, void *a2)
{
  uint64_t v3 = NSNumber;
  id v4 = a1;
  id v5 = [v3 numberWithBool:1];
  BOOL v6 = SESEndPointConfigureWithProxy(0, v4, 0, 0, v5, 0, 0, 0, 0, 0, a2);

  return v6;
}

BOOL SESEndPointDisablePersistentVisibilityOnContactless(void *a1, void *a2)
{
  uint64_t v3 = NSNumber;
  id v4 = a1;
  id v5 = [v3 numberWithBool:0];
  BOOL v6 = SESEndPointConfigureWithProxy(0, v4, 0, 0, v5, 0, 0, 0, 0, 0, a2);

  return v6;
}

BOOL SESEndPointEnableVolatileVisibilityOnWired(void *a1, void *a2)
{
  uint64_t v3 = NSNumber;
  id v4 = a1;
  id v5 = [v3 numberWithBool:1];
  BOOL v6 = SESEndPointConfigureWithProxy(0, v4, 0, 0, 0, 0, 0, v5, 0, 0, a2);

  return v6;
}

BOOL SESEndPointDisableVolatileVisibilityOnWired(void *a1, void *a2)
{
  uint64_t v3 = NSNumber;
  id v4 = a1;
  id v5 = [v3 numberWithBool:0];
  BOOL v6 = SESEndPointConfigureWithProxy(0, v4, 0, 0, 0, 0, 0, v5, 0, 0, a2);

  return v6;
}

BOOL SESEndPointEnablePersistentVisibilityOnWired(void *a1, void *a2)
{
  uint64_t v3 = NSNumber;
  id v4 = a1;
  id v5 = [v3 numberWithBool:1];
  BOOL v6 = SESEndPointConfigureWithProxy(0, v4, 0, 0, 0, 0, v5, 0, 0, 0, a2);

  return v6;
}

BOOL SESEndPointDisablePersistentVisibilityOnWired(void *a1, void *a2)
{
  uint64_t v3 = NSNumber;
  id v4 = a1;
  id v5 = [v3 numberWithBool:0];
  BOOL v6 = SESEndPointConfigureWithProxy(0, v4, 0, 0, 0, 0, v5, 0, 0, 0, a2);

  return v6;
}

void *SESEndPointConfigureKeySlot(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  if ([v6 length] && (unint64_t)objc_msgSend(v6, "length") < 9)
  {
    a3 = (void *)SESEndPointConfigureWithProxy(0, v5, 0, 0, 0, 0, 0, 0, v6, 0, a3);
  }
  else if (a3)
  {
    uint64_t v7 = SESDefaultLogObject();
    SESCreateAndLogError();
    *a3 = (id)objc_claimAutoreleasedReturnValue();

    a3 = 0;
  }

  return a3;
}

BOOL SESEndPointSetPrivateData(void *a1, void *a2, uint64_t a3, void *a4)
{
  return SESEndPointSetPrivateDataWithSession(0, 0, a1, a2, a3, a4);
}

BOOL SESEndPointSetPrivateDataWithSession(void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  if ((v11 != 0) == (v12 != 0))
  {
    uint64_t v27 = 0;
    id v28 = &v27;
    uint64_t v29 = 0x3032000000;
    uint64_t v30 = __Block_byref_object_copy__9;
    uint64_t v31 = __Block_byref_object_dispose__9;
    id v32 = 0;
    +[SESClient sharedClient]();
    BOOL v17 = (id *)objc_claimAutoreleasedReturnValue();
    id v18 = (id *)(v28 + 5);
    id obj = (id)v28[5];
    id v19 = -[SESClient synchronousRemoteObjectProxyWithError:](v17, &obj);
    objc_storeStrong(v18, obj);

    BOOL v20 = (void *)v28[5];
    if (v20)
    {
      BOOL v16 = 0;
      if (a6) {
        *a6 = v20;
      }
    }
    else
    {
      if (v11) {
        BOOL v21 = v12 == 0;
      }
      else {
        BOOL v21 = 1;
      }
      int v22 = !v21;
      if (v21)
      {
        uint64_t v23 = 0;
      }
      else
      {
        uint64_t v23 = +[SEProxy withSession:v11 seid:v12];
      }
      v25[0] = MEMORY[0x263EF8330];
      v25[1] = 3221225472;
      v25[2] = __SESEndPointSetPrivateDataWithSession_block_invoke;
      v25[3] = &unk_2642194D8;
      v25[4] = &v27;
      [v19 setPrivateDataWithProxy:v23 identifier:v13 privateData:v14 privateDataOffset:a5 reply:v25];
      if (v22) {

      }
      if (a6) {
        *a6 = (id) v28[5];
      }
      BOOL v16 = v28[5] == 0;
    }

    _Block_object_dispose(&v27, 8);
  }
  else
  {
    if (a6)
    {
      BOOL v15 = SESDefaultLogObject();
      SESCreateAndLogError();
      *a6 = (id)objc_claimAutoreleasedReturnValue();
    }
    BOOL v16 = 0;
  }

  return v16;
}

void sub_214714760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointSetPrivateDataWithSession_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndPointGetPrivateData(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return SESEndPointGetPrivateDataWithSession(0, 0, a1, a2, a3, a4);
}

id SESEndPointGetPrivateDataWithSession(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  if ((v11 != 0) == (v12 != 0))
  {
    uint64_t v32 = 0;
    id v33 = &v32;
    uint64_t v34 = 0x3032000000;
    id v35 = __Block_byref_object_copy__9;
    id v36 = __Block_byref_object_dispose__9;
    id v37 = 0;
    +[SESClient sharedClient]();
    BOOL v16 = (id *)objc_claimAutoreleasedReturnValue();
    BOOL v17 = (id *)(v33 + 5);
    id obj = (id)v33[5];
    id v18 = -[SESClient synchronousRemoteObjectProxyWithError:](v16, &obj);
    objc_storeStrong(v17, obj);

    id v19 = (void *)v33[5];
    if (v19)
    {
      id v15 = 0;
      if (a6) {
        *a6 = v19;
      }
    }
    else
    {
      uint64_t v25 = 0;
      id v26 = &v25;
      uint64_t v27 = 0x3032000000;
      id v28 = __Block_byref_object_copy__9;
      uint64_t v29 = __Block_byref_object_dispose__9;
      id v30 = 0;
      if (v11) {
        BOOL v20 = v12 == 0;
      }
      else {
        BOOL v20 = 1;
      }
      int v21 = !v20;
      if (v20)
      {
        int v22 = 0;
      }
      else
      {
        int v22 = +[SEProxy withSession:v11 seid:v12];
      }
      v24[0] = MEMORY[0x263EF8330];
      v24[1] = 3221225472;
      v24[2] = __SESEndPointGetPrivateDataWithSession_block_invoke;
      v24[3] = &unk_264219528;
      v24[4] = &v25;
      v24[5] = &v32;
      [v18 getPrivateDataWithProxy:v22 identifier:v13 privateDataOffset:a4 privateDataLength:a5 reply:v24];
      if (v21) {

      }
      if (a6) {
        *a6 = (id) v33[5];
      }
      id v15 = (id)v26[5];
      _Block_object_dispose(&v25, 8);
    }
    _Block_object_dispose(&v32, 8);
  }
  else
  {
    if (a6)
    {
      id v14 = SESDefaultLogObject();
      SESCreateAndLogError();
      *a6 = (id)objc_claimAutoreleasedReturnValue();
    }
    id v15 = 0;
  }

  return v15;
}

void sub_214714A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointGetPrivateDataWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointCreateEncryptionKey(void *a1, void *a2)
{
  return SESEndPointCreateEncryptionKeyWithSession(a1, 0, 0, a2);
}

id SESEndPointCreateEncryptionKeyWithSession(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v27 = 0;
  id v28 = &v27;
  uint64_t v29 = 0x3032000000;
  id v30 = __Block_byref_object_copy__9;
  uint64_t v31 = __Block_byref_object_dispose__9;
  id v32 = 0;
  uint64_t v21 = 0;
  int v22 = &v21;
  uint64_t v23 = 0x3032000000;
  id v24 = __Block_byref_object_copy__9;
  uint64_t v25 = __Block_byref_object_dispose__9;
  id v26 = 0;
  +[SESClient sharedClient]();
  uint64_t v10 = (id *)objc_claimAutoreleasedReturnValue();
  id v11 = (id *)(v28 + 5);
  id obj = (id)v28[5];
  uint64_t v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, &obj);
  objc_storeStrong(v11, obj);

  uint64_t v13 = (void *)v28[5];
  if (v13)
  {
    id v14 = 0;
    if (a4) {
      *a4 = v13;
    }
  }
  else
  {
    if (v8) {
      BOOL v15 = v9 == 0;
    }
    else {
      BOOL v15 = 1;
    }
    int v16 = !v15;
    if (v15)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = +[SEProxy withSession:v8 seid:v9];
    }
    v19[0] = MEMORY[0x263EF8330];
    v19[1] = 3221225472;
    v19[2] = __SESEndPointCreateEncryptionKeyWithSession_block_invoke;
    v19[3] = &unk_264219528;
    v19[4] = &v21;
    v19[5] = &v27;
    [v12 createEncryptionKeyEndPointWithProxy:v17 identifier:v7 reply:v19];
    if (v16) {

    }
    if (a4) {
      *a4 = (id) v28[5];
    }
    id v14 = (id)v22[5];
  }

  _Block_object_dispose(&v21, 8);
  _Block_object_dispose(&v27, 8);

  return v14;
}

void sub_214714D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointCreateEncryptionKeyWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

BOOL SESEndPointSetConfidentialData(void *a1, void *a2, void *a3, void *a4)
{
  return SESEndPointSetConfidentialDataWithOffset(a1, a2, a3, 0, a4);
}

BOOL SESEndPointSetConfidentialDataWithOffset(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  uint64_t v20 = 0;
  uint64_t v21 = &v20;
  uint64_t v22 = 0x3032000000;
  uint64_t v23 = __Block_byref_object_copy__9;
  id v24 = __Block_byref_object_dispose__9;
  id v25 = 0;
  +[SESClient sharedClient]();
  uint64_t v12 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v13 = (id *)(v21 + 5);
  id obj = (id)v21[5];
  uint64_t v14 = -[SESClient synchronousRemoteObjectProxyWithError:](v12, &obj);
  objc_storeStrong(v13, obj);

  uint64_t v15 = (void *)v21[5];
  if (v15)
  {
    BOOL v16 = 0;
    if (a5) {
      *a5 = v15;
    }
  }
  else
  {
    v18[0] = MEMORY[0x263EF8330];
    v18[1] = 3221225472;
    v18[2] = __SESEndPointSetConfidentialDataWithOffset_block_invoke;
    v18[3] = &unk_2642194D8;
    v18[4] = &v20;
    [v14 setConfidentialDataEndPointWithIdentifier:v9 senderEphemeralPublicKey:v10 encryptedData:v11 offset:a4 reply:v18];
    if (a5) {
      *a5 = (id) v21[5];
    }
    BOOL v16 = v21[5] == 0;
  }

  _Block_object_dispose(&v20, 8);
  return v16;
}

void sub_214714FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL SESEndPointUpdateHydraMailboxes(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  uint64_t v24 = 0;
  id v25 = &v24;
  uint64_t v26 = 0x3032000000;
  uint64_t v27 = __Block_byref_object_copy__9;
  id v28 = __Block_byref_object_dispose__9;
  id v29 = 0;
  +[SESClient sharedClient]();
  uint64_t v13 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v14 = (id *)(v25 + 5);
  id obj = (id)v25[5];
  uint64_t v15 = -[SESClient synchronousRemoteObjectProxyWithError:](v13, &obj);
  objc_storeStrong(v14, obj);

  BOOL v16 = (void *)v25[5];
  if (v16)
  {
    BOOL v17 = 0;
    if (a5) {
      *a5 = v16;
    }
  }
  else
  {
    if (v10) {
      BOOL v18 = v11 == 0;
    }
    else {
      BOOL v18 = 1;
    }
    int v19 = !v18;
    if (v18)
    {
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = +[SEProxy withSession:v10 seid:v11];
    }
    v22[0] = MEMORY[0x263EF8330];
    v22[1] = 3221225472;
    v22[2] = __SESEndPointUpdateHydraMailboxes_block_invoke;
    v22[3] = &unk_2642194D8;
    v22[4] = &v24;
    [v15 updateHydraMailboxesWithProxy:v20 identifier:v9 encryptedSEBlob:v12 reply:v22];
    if (v19) {

    }
    if (a5) {
      *a5 = (id) v25[5];
    }
    BOOL v17 = v25[5] == 0;
  }

  _Block_object_dispose(&v24, 8);
  return v17;
}

void sub_214715208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointUpdateHydraMailboxes_block_invoke(uint64_t a1, void *a2)
{
}

void __SESEndPointSetConfidentialDataWithOffset_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndPointSignDataWithAuth(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v24 = 0;
  id v25 = &v24;
  uint64_t v26 = 0x3032000000;
  uint64_t v27 = __Block_byref_object_copy__9;
  id v28 = __Block_byref_object_dispose__9;
  id v29 = 0;
  uint64_t v18 = 0;
  int v19 = &v18;
  uint64_t v20 = 0x3032000000;
  uint64_t v21 = __Block_byref_object_copy__9;
  uint64_t v22 = __Block_byref_object_dispose__9;
  id v23 = 0;
  +[SESClient sharedClient]();
  id v10 = (id *)objc_claimAutoreleasedReturnValue();
  id v11 = (id *)(v25 + 5);
  id obj = (id)v25[5];
  id v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, &obj);
  objc_storeStrong(v11, obj);

  uint64_t v13 = (void *)v25[5];
  if (v13)
  {
    id v14 = 0;
    if (a4) {
      *a4 = v13;
    }
  }
  else
  {
    v16[0] = MEMORY[0x263EF8330];
    v16[1] = 3221225472;
    v16[2] = __SESEndPointSignDataWithAuth_block_invoke;
    v16[3] = &unk_264219CE8;
    v16[4] = &v18;
    v16[5] = &v24;
    [v12 signatureWithEndPointIdentifier:v7 metaDataHash:v8 authorization:v9 reply:v16];
    if (a4) {
      *a4 = (id) v25[5];
    }
    id v14 = (id)v19[5];
  }

  _Block_object_dispose(&v18, 8);
  _Block_object_dispose(&v24, 8);

  return v14;
}

void sub_214715450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointSignDataWithAuth_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointSignISO18013DataWithAuth(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v21 = 0;
  uint64_t v22 = (id *)&v21;
  uint64_t v23 = 0x3032000000;
  uint64_t v24 = __Block_byref_object_copy__9;
  id v25 = __Block_byref_object_dispose__9;
  id v26 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = &v15;
  uint64_t v17 = 0x3032000000;
  uint64_t v18 = __Block_byref_object_copy__9;
  int v19 = __Block_byref_object_dispose__9;
  id v20 = 0;
  +[SESClient sharedClient]();
  uint64_t v7 = (id *)objc_claimAutoreleasedReturnValue();
  id v8 = v22;
  id obj = v22[5];
  uint64_t v9 = -[SESClient synchronousRemoteObjectProxyWithError:](v7, &obj);
  objc_storeStrong(v8 + 5, obj);

  id v10 = v22[5];
  if (v10)
  {
    id v11 = 0;
    if (a3) {
      *a3 = v10;
    }
  }
  else
  {
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    v13[2] = __SESEndPointSignISO18013DataWithAuth_block_invoke;
    v13[3] = &unk_264219CE8;
    v13[4] = &v15;
    void v13[5] = &v21;
    [v9 signatureISO18013WithEndPointIdentifier:v5 toBeSigned:v6 reply:v13];
    if (a3) {
      *a3 = v22[5];
    }
    id v11 = (id)v16[5];
  }

  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v21, 8);

  return v11;
}

void sub_2147156F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointSignISO18013DataWithAuth_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointCreateAuthorizationID(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v21 = 0;
  uint64_t v22 = (id *)&v21;
  uint64_t v23 = 0x3032000000;
  uint64_t v24 = __Block_byref_object_copy__9;
  id v25 = __Block_byref_object_dispose__9;
  id v26 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = &v15;
  uint64_t v17 = 0x3032000000;
  uint64_t v18 = __Block_byref_object_copy__9;
  int v19 = __Block_byref_object_dispose__9;
  id v20 = 0;
  +[SESClient sharedClient]();
  uint64_t v7 = (id *)objc_claimAutoreleasedReturnValue();
  id v8 = v22;
  id obj = v22[5];
  uint64_t v9 = -[SESClient synchronousRemoteObjectProxyWithError:](v7, &obj);
  objc_storeStrong(v8 + 5, obj);

  id v10 = v22[5];
  if (v10)
  {
    id v11 = 0;
    if (a3) {
      *a3 = v10;
    }
  }
  else
  {
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    v13[2] = __SESEndPointCreateAuthorizationID_block_invoke;
    v13[3] = &unk_264219D10;
    v13[4] = &v15;
    void v13[5] = &v21;
    [v9 createEndPointAuthorizationID:v5 userAuth:v6 reply:v13];
    if (a3) {
      *a3 = v22[5];
    }
    id v11 = (id)v16[5];
  }

  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v21, 8);

  return v11;
}

void sub_214715990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointCreateAuthorizationID_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointListAuthorizations(void *a1)
{
  uint64_t v16 = 0;
  uint64_t v17 = (id *)&v16;
  uint64_t v18 = 0x3032000000;
  int v19 = __Block_byref_object_copy__9;
  id v20 = __Block_byref_object_dispose__9;
  id v21 = 0;
  uint64_t v10 = 0;
  id v11 = &v10;
  uint64_t v12 = 0x3032000000;
  uint64_t v13 = __Block_byref_object_copy__9;
  uint64_t v14 = __Block_byref_object_dispose__9;
  id v15 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = v17;
  id obj = v17[5];
  id v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3 + 5, obj);

  id v5 = v17[5];
  if (v5)
  {
    id v6 = 0;
    if (a1) {
      *a1 = v5;
    }
  }
  else
  {
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __SESEndPointListAuthorizations_block_invoke;
    v8[3] = &unk_264219440;
    v8[4] = &v10;
    void v8[5] = &v16;
    [v4 listEndPointAuthorizations:v8];
    if (a1) {
      *a1 = v17[5];
    }
    id v6 = (id)v11[5];
  }

  _Block_object_dispose(&v10, 8);
  _Block_object_dispose(&v16, 8);

  return v6;
}

void sub_214715C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointListAuthorizations_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointDeleteAuthorizationID(void *a1)
{
  id v1 = a1;
  uint64_t v10 = 0;
  id v11 = &v10;
  uint64_t v12 = 0x3032000000;
  uint64_t v13 = __Block_byref_object_copy__9;
  uint64_t v14 = __Block_byref_object_dispose__9;
  id v15 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = (id *)(v11 + 5);
  id obj = (id)v11[5];
  id v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3, obj);

  id v5 = (void *)v11[5];
  if (!v5)
  {
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __SESEndPointDeleteAuthorizationID_block_invoke;
    v8[3] = &unk_2642194D8;
    v8[4] = &v10;
    [v4 deleteEndPointAuthorizationID:v1 reply:v8];
    id v5 = (void *)v11[5];
  }
  id v6 = v5;

  _Block_object_dispose(&v10, 8);
  return v6;
}

void sub_214715E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointDeleteAuthorizationID_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndPointAuthorizeWithAuth(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, __int16 a7, __int16 a8, void *a9, void *a10, void *a11)
{
  HIWORD(v12) = a8;
  LOWORD(v12) = a7;
  return SESEndPointAuthorizeWithSession(0, 0, 1u, a1, a2, a3, a4, a5, a6, 0, v12, a9, a10, a11);
}

id SESEndPointAuthorizeWithSession(void *a1, void *a2, unsigned int a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, int a11, void *a12, void *a13, void *a14)
{
  id v37 = a1;
  id v20 = a2;
  id v42 = a4;
  id v41 = a5;
  id v40 = a6;
  id v39 = a7;
  id v38 = a8;
  id v21 = a9;
  id v22 = a10;
  id v23 = a12;
  id v24 = a13;
  uint64_t v51 = 0;
  uint64_t v52 = (id *)&v51;
  uint64_t v53 = 0x3032000000;
  id v54 = __Block_byref_object_copy__9;
  id v55 = __Block_byref_object_dispose__9;
  id v56 = 0;
  +[SESClient sharedClient]();
  id v25 = (id *)objc_claimAutoreleasedReturnValue();
  id v26 = v52;
  id v50 = v52[5];
  uint64_t v27 = -[SESClient synchronousRemoteObjectProxyWithError:](v25, &v50);
  objc_storeStrong(v26 + 5, v50);

  id v28 = v52[5];
  if (v28)
  {
    id v29 = v37;
    id v30 = 0;
    if (a14) {
      *a14 = v28;
    }
  }
  else
  {
    uint64_t v44 = 0;
    id v45 = &v44;
    uint64_t v46 = 0x3032000000;
    id v47 = __Block_byref_object_copy__9;
    id v48 = __Block_byref_object_dispose__9;
    id v49 = 0;
    id v29 = v37;
    if (v37) {
      BOOL v31 = v20 == 0;
    }
    else {
      BOOL v31 = 1;
    }
    int v32 = !v31;
    if (v31)
    {
      id v33 = 0;
    }
    else
    {
      id v33 = +[SEProxy withSession:seid:](SEProxy, "withSession:seid:", v37);
    }
    v43[0] = MEMORY[0x263EF8330];
    v43[1] = 3221225472;
    v43[2] = __SESEndPointAuthorizeWithSession_block_invoke;
    v43[3] = &unk_264219D38;
    v43[4] = &v44;
    v43[5] = &v51;
    LODWORD(v35) = a11;
    objc_msgSend(v27, "authorizeEndPointWithProxy:version:identifier:externalCA:instanceCA:endpointCertificate:encryptionKeyAttestation:bindingAttestation:bindingAttestationToken:confidentialDataOffset:confidentialDataLength:metaData:authorizationID:reply:", v33, a3, v42, v41, v40, v39, v38, v21, v22, v35, v23, v24, v43);
    if (v32) {

    }
    if (a14) {
      *a14 = v52[5];
    }
    id v30 = (id)v45[5];
    _Block_object_dispose(&v44, 8);
  }
  _Block_object_dispose(&v51, 8);

  return v30;
}

void sub_2147161D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 152), 8);
  _Unwind_Resume(a1);
}

id SESEndPointAuthorizeWithAuthEx(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, __int16 a8, __int16 a9, void *a10, void *a11, void *a12)
{
  HIWORD(v13) = a9;
  LOWORD(v13) = a8;
  return SESEndPointAuthorizeWithSession(0, 0, 1u, a1, a2, a3, a4, a5, a6, a7, v13, a10, a11, a12);
}

id SESEndpointPreAuthorizeWithSession(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x3032000000;
  id v25 = __Block_byref_object_copy__9;
  id v26 = __Block_byref_object_dispose__9;
  id v27 = 0;
  +[SESClient sharedClient]();
  id v11 = (id *)objc_claimAutoreleasedReturnValue();
  int v12 = (id *)(v23 + 5);
  id obj = (id)v23[5];
  int v13 = -[SESClient synchronousRemoteObjectProxyWithError:](v11, &obj);
  objc_storeStrong(v12, obj);

  uint64_t v14 = (void *)v23[5];
  if (!v14)
  {
    if (v7) {
      BOOL v15 = v8 == 0;
    }
    else {
      BOOL v15 = 1;
    }
    int v16 = !v15;
    if (v15)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = +[SEProxy withSession:v7 seid:v8];
    }
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    v20[2] = __SESEndpointPreAuthorizeWithSession_block_invoke;
    v20[3] = &unk_2642194D8;
    v20[4] = &v22;
    [v13 preAuthorizeEndpointWithProxy:v17 keyIdentifier:v9 bindingAttestation:v10 reply:v20];
    if (v16) {

    }
    uint64_t v14 = (void *)v23[5];
  }
  id v18 = v14;

  _Block_object_dispose(&v22, 8);
  return v18;
}

void sub_21471644C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndpointPreAuthorizeWithSession_block_invoke(uint64_t a1, void *a2)
{
}

void __SESEndPointAuthorizeWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointPrivacyEncryption(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v21 = 0;
  uint64_t v22 = (id *)&v21;
  uint64_t v23 = 0x3032000000;
  uint64_t v24 = __Block_byref_object_copy__9;
  id v25 = __Block_byref_object_dispose__9;
  id v26 = 0;
  uint64_t v15 = 0;
  int v16 = &v15;
  uint64_t v17 = 0x3032000000;
  id v18 = __Block_byref_object_copy__9;
  int v19 = __Block_byref_object_dispose__9;
  id v20 = 0;
  +[SESClient sharedClient]();
  uint64_t v7 = (id *)objc_claimAutoreleasedReturnValue();
  id v8 = v22;
  id obj = v22[5];
  uint64_t v9 = -[SESClient synchronousRemoteObjectProxyWithError:](v7, &obj);
  objc_storeStrong(v8 + 5, obj);

  id v10 = v22[5];
  if (v10)
  {
    id v11 = 0;
    if (a3) {
      *a3 = v10;
    }
  }
  else
  {
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    v13[2] = __SESEndPointPrivacyEncryption_block_invoke;
    v13[3] = &unk_264219D60;
    v13[4] = &v15;
    void v13[5] = &v21;
    [v9 privacyEncryptDataWithEndPoint:v5 data:v6 reply:v13];
    if (a3) {
      *a3 = v22[5];
    }
    id v11 = (id)v16[5];
  }

  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v21, 8);

  return v11;
}

void sub_2147166F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointPrivacyEncryption_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointPrivacyDecryption(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = v9;
  uint64_t v27 = 0;
  id v28 = &v27;
  uint64_t v29 = 0x3032000000;
  id v30 = __Block_byref_object_copy__9;
  uint64_t v31 = __Block_byref_object_dispose__9;
  id v32 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = &v21;
  uint64_t v23 = 0x3032000000;
  uint64_t v24 = __Block_byref_object_copy__9;
  id v25 = __Block_byref_object_dispose__9;
  id v26 = 0;
  if (!v7 || !v8 || !v9)
  {
    if (!a4)
    {
      id v15 = 0;
      goto LABEL_15;
    }
    int v13 = SESDefaultLogObject();
    int v16 = [v8 asHexString];
    id v18 = [v10 asHexString];
    SESCreateAndLogError();
    *a4 = (id)objc_claimAutoreleasedReturnValue();

LABEL_9:
    id v15 = 0;
    goto LABEL_14;
  }
  +[SESClient sharedClient]();
  id v11 = (id *)objc_claimAutoreleasedReturnValue();
  int v12 = (id *)(v28 + 5);
  id obj = (id)v28[5];
  int v13 = -[SESClient synchronousRemoteObjectProxyWithError:](v11, &obj);
  objc_storeStrong(v12, obj);

  uint64_t v14 = (void *)v28[5];
  if (!v14)
  {
    v19[0] = MEMORY[0x263EF8330];
    v19[1] = 3221225472;
    v19[2] = __SESEndPointPrivacyDecryption_block_invoke;
    v19[3] = &unk_264219528;
    v19[4] = &v21;
    v19[5] = &v27;
    [v13 privacyDecryptDataWithEndPoint:v7 data:v8 ephemeralPublicKey:v10 reply:v19];
    if (a4) {
      *a4 = (id) v28[5];
    }
    id v15 = (id)v22[5];
    goto LABEL_14;
  }
  if (!a4) {
    goto LABEL_9;
  }
  id v15 = 0;
  *a4 = v14;
LABEL_14:

LABEL_15:
  _Block_object_dispose(&v21, 8);

  _Block_object_dispose(&v27, 8);
  return v15;
}

void sub_214716A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointPrivacyDecryption_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointGetInvitations(void *a1)
{
  uint64_t v16 = 0;
  uint64_t v17 = (id *)&v16;
  uint64_t v18 = 0x3032000000;
  int v19 = __Block_byref_object_copy__9;
  id v20 = __Block_byref_object_dispose__9;
  id v21 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = v17;
  id obj = v17[5];
  id v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3 + 5, obj);

  id v5 = v17[5];
  if (v5)
  {
    id v6 = 0;
    if (a1) {
      *a1 = v5;
    }
  }
  else
  {
    uint64_t v9 = 0;
    id v10 = &v9;
    uint64_t v11 = 0x3032000000;
    uint64_t v12 = __Block_byref_object_copy__9;
    int v13 = __Block_byref_object_dispose__9;
    id v14 = 0;
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __SESEndPointGetInvitations_block_invoke;
    v8[3] = &unk_264219440;
    v8[4] = &v16;
    void v8[5] = &v9;
    [v4 getInvitations:v8];
    if (a1) {
      *a1 = v17[5];
    }
    id v6 = (id)v10[5];
    _Block_object_dispose(&v9, 8);
  }
  _Block_object_dispose(&v16, 8);

  return v6;
}

void sub_214716CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v8 - 96), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointGetInvitations_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

id SESEndPointGetInvitationWithId(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v18 = 0;
  int v19 = &v18;
  uint64_t v20 = 0x3032000000;
  id v21 = __Block_byref_object_copy__9;
  uint64_t v22 = __Block_byref_object_dispose__9;
  id v23 = 0;
  +[SESClient sharedClient]();
  id v4 = (id *)objc_claimAutoreleasedReturnValue();
  id v5 = (id *)(v19 + 5);
  id obj = (id)v19[5];
  uint64_t v6 = -[SESClient synchronousRemoteObjectProxyWithError:](v4, &obj);
  objc_storeStrong(v5, obj);

  uint64_t v7 = (void *)v19[5];
  if (v7)
  {
    id v8 = 0;
    if (a2) {
      *a2 = v7;
    }
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = &v11;
    uint64_t v13 = 0x3032000000;
    id v14 = __Block_byref_object_copy__9;
    uint64_t v15 = __Block_byref_object_dispose__9;
    id v16 = 0;
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 3221225472;
    v10[2] = __SESEndPointGetInvitationWithId_block_invoke;
    v10[3] = &unk_264219528;
    v10[4] = &v18;
    void v10[5] = &v11;
    [v6 getInvitationWithId:v3 reply:v10];
    if (a2) {
      *a2 = (id) v19[5];
    }
    id v8 = (id)v12[5];
    _Block_object_dispose(&v11, 8);
  }
  _Block_object_dispose(&v18, 8);

  return v8;
}

void sub_214716F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointGetInvitationWithId_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

id SESEndPointAddInvitationWithId(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3032000000;
  uint64_t v16 = __Block_byref_object_copy__9;
  uint64_t v17 = __Block_byref_object_dispose__9;
  id v18 = 0;
  +[SESClient sharedClient]();
  id v5 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v6 = (id *)(v14 + 5);
  id obj = (id)v14[5];
  uint64_t v7 = -[SESClient synchronousRemoteObjectProxyWithError:](v5, &obj);
  objc_storeStrong(v6, obj);

  id v8 = (void *)v14[5];
  if (!v8)
  {
    v11[0] = MEMORY[0x263EF8330];
    v11[1] = 3221225472;
    v11[2] = __SESEndPointAddInvitationWithId_block_invoke;
    v11[3] = &unk_2642194D8;
    void v11[4] = &v13;
    [v7 addInvitationWithId:v3 data:v4 reply:v11];
    id v8 = (void *)v14[5];
  }
  id v9 = v8;

  _Block_object_dispose(&v13, 8);
  return v9;
}

void sub_214717168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointAddInvitationWithId_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndPointDeleteInvitationWithId(void *a1)
{
  id v1 = a1;
  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x3032000000;
  uint64_t v13 = __Block_byref_object_copy__9;
  uint64_t v14 = __Block_byref_object_dispose__9;
  id v15 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  id v3 = (id *)(v11 + 5);
  id obj = (id)v11[5];
  id v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3, obj);

  id v5 = (void *)v11[5];
  if (!v5)
  {
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __SESEndPointDeleteInvitationWithId_block_invoke;
    v8[3] = &unk_2642194D8;
    v8[4] = &v10;
    [v4 deleteInvitationWithId:v1 reply:v8];
    id v5 = (void *)v11[5];
  }
  id v6 = v5;

  _Block_object_dispose(&v10, 8);
  return v6;
}

void sub_2147172E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointDeleteInvitationWithId_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndPointGetEndpointIdWithUuid(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v18 = 0;
  int v19 = &v18;
  uint64_t v20 = 0x3032000000;
  id v21 = __Block_byref_object_copy__9;
  uint64_t v22 = __Block_byref_object_dispose__9;
  id v23 = 0;
  +[SESClient sharedClient]();
  id v4 = (id *)objc_claimAutoreleasedReturnValue();
  id v5 = (id *)(v19 + 5);
  id obj = (id)v19[5];
  id v6 = -[SESClient synchronousRemoteObjectProxyWithError:](v4, &obj);
  objc_storeStrong(v5, obj);

  uint64_t v7 = (void *)v19[5];
  if (v7)
  {
    id v8 = 0;
    if (a2) {
      *a2 = v7;
    }
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = &v11;
    uint64_t v13 = 0x3032000000;
    uint64_t v14 = __Block_byref_object_copy__9;
    id v15 = __Block_byref_object_dispose__9;
    id v16 = 0;
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 3221225472;
    v10[2] = __SESEndPointGetEndpointIdWithUuid_block_invoke;
    v10[3] = &unk_264219D88;
    v10[4] = &v11;
    void v10[5] = &v18;
    [v6 getEndpointIdWithUuid:v3 reply:v10];
    if (a2) {
      *a2 = (id) v19[5];
    }
    id v8 = (id)v12[5];
    _Block_object_dispose(&v11, 8);
  }
  _Block_object_dispose(&v18, 8);

  return v8;
}

void sub_2147174F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointGetEndpointIdWithUuid_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointAddEndpointIdWithUuid(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3032000000;
  uint64_t v16 = __Block_byref_object_copy__9;
  uint64_t v17 = __Block_byref_object_dispose__9;
  id v18 = 0;
  +[SESClient sharedClient]();
  id v5 = (id *)objc_claimAutoreleasedReturnValue();
  id v6 = (id *)(v14 + 5);
  id obj = (id)v14[5];
  uint64_t v7 = -[SESClient synchronousRemoteObjectProxyWithError:](v5, &obj);
  objc_storeStrong(v6, obj);

  id v8 = (void *)v14[5];
  if (!v8)
  {
    v11[0] = MEMORY[0x263EF8330];
    v11[1] = 3221225472;
    v11[2] = __SESEndPointAddEndpointIdWithUuid_block_invoke;
    v11[3] = &unk_2642194D8;
    void v11[4] = &v13;
    [v7 addEndpointId:v3 withUuid:v4 reply:v11];
    id v8 = (void *)v14[5];
  }
  id v9 = v8;

  _Block_object_dispose(&v13, 8);
  return v9;
}

void sub_21471771C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointAddEndpointIdWithUuid_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndPointDeleteEndpointIdWithUuid(void *a1)
{
  id v1 = a1;
  uint64_t v10 = 0;
  id v11 = &v10;
  uint64_t v12 = 0x3032000000;
  uint64_t v13 = __Block_byref_object_copy__9;
  uint64_t v14 = __Block_byref_object_dispose__9;
  id v15 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  id v3 = (id *)(v11 + 5);
  id obj = (id)v11[5];
  id v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3, obj);

  id v5 = (void *)v11[5];
  if (!v5)
  {
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __SESEndPointDeleteEndpointIdWithUuid_block_invoke;
    v8[3] = &unk_2642194D8;
    v8[4] = &v10;
    [v4 deleteEndpointIdWithUuid:v1 reply:v8];
    id v5 = (void *)v11[5];
  }
  id v6 = v5;

  _Block_object_dispose(&v10, 8);
  return v6;
}

void sub_21471789C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointDeleteEndpointIdWithUuid_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndpointGetBindingAttestationRequestWithSession(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v27 = 0;
  id v28 = &v27;
  uint64_t v29 = 0x3032000000;
  id v30 = __Block_byref_object_copy__9;
  uint64_t v31 = __Block_byref_object_dispose__9;
  id v32 = 0;
  +[SESClient sharedClient]();
  uint64_t v10 = (id *)objc_claimAutoreleasedReturnValue();
  id v11 = (id *)(v28 + 5);
  id obj = (id)v28[5];
  uint64_t v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, &obj);
  objc_storeStrong(v11, obj);

  uint64_t v13 = (void *)v28[5];
  if (v13)
  {
    id v14 = 0;
    if (a4) {
      *a4 = v13;
    }
  }
  else
  {
    uint64_t v20 = 0;
    id v21 = &v20;
    uint64_t v22 = 0x3032000000;
    id v23 = __Block_byref_object_copy__9;
    uint64_t v24 = __Block_byref_object_dispose__9;
    id v25 = 0;
    if (v7) {
      BOOL v15 = v8 == 0;
    }
    else {
      BOOL v15 = 1;
    }
    int v16 = !v15;
    if (v15)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = +[SEProxy withSession:v7 seid:v8];
    }
    v19[0] = MEMORY[0x263EF8330];
    v19[1] = 3221225472;
    v19[2] = __SESEndpointGetBindingAttestationRequestWithSession_block_invoke;
    v19[3] = &unk_264219DB0;
    v19[4] = &v20;
    v19[5] = &v27;
    [v12 getEndpointBindingAttestationRequestWithProxy:v17 authorityIdentifier:v9 reply:v19];
    if (v16) {

    }
    if (a4) {
      *a4 = (id) v28[5];
    }
    id v14 = (id)v21[5];
    _Block_object_dispose(&v20, 8);
  }
  _Block_object_dispose(&v27, 8);

  return v14;
}

void sub_214717B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndpointGetBindingAttestationRequestWithSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointIsCarKeySupported(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v24 = 0;
  id v25 = &v24;
  uint64_t v26 = 0x3032000000;
  uint64_t v27 = __Block_byref_object_copy__9;
  id v28 = __Block_byref_object_dispose__9;
  id v29 = 0;
  +[SESClient sharedClient]();
  uint64_t v10 = (id *)objc_claimAutoreleasedReturnValue();
  id v11 = (id *)(v25 + 5);
  id obj = (id)v25[5];
  uint64_t v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, &obj);
  objc_storeStrong(v11, obj);

  uint64_t v13 = (void *)v25[5];
  if (v13)
  {
    id v14 = 0;
    if (a4) {
      *a4 = v13;
    }
  }
  else
  {
    uint64_t v17 = 0;
    id v18 = &v17;
    uint64_t v19 = 0x3032000000;
    uint64_t v20 = __Block_byref_object_copy__9;
    id v21 = __Block_byref_object_dispose__9;
    id v22 = 0;
    v16[0] = MEMORY[0x263EF8330];
    v16[1] = 3221225472;
    v16[2] = __SESEndPointIsCarKeySupported_block_invoke;
    v16[3] = &unk_264219770;
    v16[4] = &v17;
    v16[5] = &v24;
    [v12 isCarKeySupported:v7 brand:v8 uuid:v9 reply:v16];
    if (a4) {
      *a4 = (id) v25[5];
    }
    id v14 = (id)v18[5];
    _Block_object_dispose(&v17, 8);
  }
  _Block_object_dispose(&v24, 8);

  return v14;
}

void sub_214717DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointIsCarKeySupported_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointCarKeyDowngradeVersionSetting(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v24 = 0;
  id v25 = &v24;
  uint64_t v26 = 0x3032000000;
  uint64_t v27 = __Block_byref_object_copy__9;
  id v28 = __Block_byref_object_dispose__9;
  id v29 = 0;
  +[SESClient sharedClient]();
  uint64_t v10 = (id *)objc_claimAutoreleasedReturnValue();
  id v11 = (id *)(v25 + 5);
  id obj = (id)v25[5];
  uint64_t v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, &obj);
  objc_storeStrong(v11, obj);

  uint64_t v13 = (void *)v25[5];
  if (v13)
  {
    id v14 = 0;
    if (a4) {
      *a4 = v13;
    }
  }
  else
  {
    uint64_t v17 = 0;
    id v18 = &v17;
    uint64_t v19 = 0x3032000000;
    uint64_t v20 = __Block_byref_object_copy__9;
    id v21 = __Block_byref_object_dispose__9;
    id v22 = 0;
    v16[0] = MEMORY[0x263EF8330];
    v16[1] = 3221225472;
    v16[2] = __SESEndPointCarKeyDowngradeVersionSetting_block_invoke;
    v16[3] = &unk_264219770;
    v16[4] = &v17;
    v16[5] = &v24;
    [v12 carKeyDowngradeVersionSetting:v7 brand:v8 uuid:v9 reply:v16];
    if (a4) {
      *a4 = (id) v25[5];
    }
    id v14 = (id)v18[5];
    _Block_object_dispose(&v17, 8);
  }
  _Block_object_dispose(&v24, 8);

  return v14;
}

void sub_2147180A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointCarKeyDowngradeVersionSetting_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointGetCAGeneralStatisticsInfo(void *a1)
{
  uint64_t v16 = 0;
  uint64_t v17 = (id *)&v16;
  uint64_t v18 = 0x3032000000;
  uint64_t v19 = __Block_byref_object_copy__9;
  uint64_t v20 = __Block_byref_object_dispose__9;
  id v21 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  id v3 = v17;
  id obj = v17[5];
  id v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3 + 5, obj);

  id v5 = v17[5];
  if (v5)
  {
    id v6 = 0;
    if (a1) {
      *a1 = v5;
    }
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = &v9;
    uint64_t v11 = 0x3032000000;
    uint64_t v12 = __Block_byref_object_copy__9;
    uint64_t v13 = __Block_byref_object_dispose__9;
    id v14 = 0;
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __SESEndPointGetCAGeneralStatisticsInfo_block_invoke;
    v8[3] = &unk_264219B88;
    v8[4] = &v9;
    void v8[5] = &v16;
    [v4 getCAGeneralStatisticsInfo:v8];
    if (a1) {
      *a1 = v17[5];
    }
    id v6 = (id)v10[5];
    _Block_object_dispose(&v9, 8);
  }
  _Block_object_dispose(&v16, 8);

  return v6;
}

void sub_214718328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v8 - 96), 8);
  _Unwind_Resume(a1);
}

void __SESEndPointGetCAGeneralStatisticsInfo_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointTriggerHeadUnitPairing(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000;
  uint64_t v16 = __Block_byref_object_copy__9;
  uint64_t v17 = __Block_byref_object_dispose__9;
  id v18 = 0;
  +[SESClient sharedClient]();
  id v5 = (id *)objc_claimAutoreleasedReturnValue();
  id v6 = (id *)(v14 + 5);
  id obj = (id)v14[5];
  uint64_t v7 = -[SESClient synchronousRemoteObjectProxyWithError:](v5, &obj);
  objc_storeStrong(v6, obj);

  uint64_t v8 = (void *)v14[5];
  if (!v8)
  {
    v11[0] = MEMORY[0x263EF8330];
    v11[1] = 3221225472;
    v11[2] = __SESEndPointTriggerHeadUnitPairing_block_invoke;
    v11[3] = &unk_2642194D8;
    void v11[4] = &v13;
    [v7 triggerHeadUnitPairing:v3 data:v4 reply:v11];
    uint64_t v8 = (void *)v14[5];
  }
  id v9 = v8;

  _Block_object_dispose(&v13, 8);
  return v9;
}

void sub_214718550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointTriggerHeadUnitPairing_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndpointSendDeviceIntent(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000;
  uint64_t v16 = __Block_byref_object_copy__9;
  uint64_t v17 = __Block_byref_object_dispose__9;
  id v18 = 0;
  +[SESClient sharedClient]();
  id v5 = (id *)objc_claimAutoreleasedReturnValue();
  id v6 = (id *)(v14 + 5);
  id obj = (id)v14[5];
  uint64_t v7 = -[SESClient synchronousRemoteObjectProxyWithError:](v5, &obj);
  objc_storeStrong(v6, obj);

  uint64_t v8 = (void *)v14[5];
  if (!v8)
  {
    v11[0] = MEMORY[0x263EF8330];
    v11[1] = 3221225472;
    v11[2] = __SESEndpointSendDeviceIntent_block_invoke;
    v11[3] = &unk_2642194D8;
    void v11[4] = &v13;
    [v7 sendDeviceIntentWithConfidence:v3 keyIdentifier:v4 reply:v11];
    uint64_t v8 = (void *)v14[5];
  }
  id v9 = v8;

  _Block_object_dispose(&v13, 8);
  return v9;
}

void sub_2147186EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndpointSendDeviceIntent_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndpointConvertWithSession(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x3032000000;
  id v25 = __Block_byref_object_copy__9;
  uint64_t v26 = __Block_byref_object_dispose__9;
  id v27 = 0;
  +[SESClient sharedClient]();
  id v11 = (id *)objc_claimAutoreleasedReturnValue();
  uint64_t v12 = (id *)(v23 + 5);
  id obj = (id)v23[5];
  uint64_t v13 = -[SESClient synchronousRemoteObjectProxyWithError:](v11, &obj);
  objc_storeStrong(v12, obj);

  id v14 = (void *)v23[5];
  if (!v14)
  {
    if (v7) {
      BOOL v15 = v8 == 0;
    }
    else {
      BOOL v15 = 1;
    }
    int v16 = !v15;
    if (v15)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = +[SEProxy withSession:v7 seid:v8];
    }
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    v20[2] = __SESEndpointConvertWithSession_block_invoke;
    v20[3] = &unk_2642194D8;
    v20[4] = &v22;
    [v13 convertEndpointWithProxy:v17 keyIdentifier:v9 notBeforeDate:v10 reply:v20];
    if (v16) {

    }
    id v14 = (void *)v23[5];
  }
  id v18 = v14;

  _Block_object_dispose(&v22, 8);
  return v18;
}

void sub_2147188F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndpointConvertWithSession_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndpointNotifyTracked(void *a1)
{
  id v1 = a1;
  uint64_t v10 = 0;
  id v11 = &v10;
  uint64_t v12 = 0x3032000000;
  uint64_t v13 = __Block_byref_object_copy__9;
  id v14 = __Block_byref_object_dispose__9;
  id v15 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  id v3 = (id *)(v11 + 5);
  id obj = (id)v11[5];
  id v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3, obj);

  id v5 = (void *)v11[5];
  if (!v5)
  {
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __SESEndpointNotifyTracked_block_invoke;
    v8[3] = &unk_2642194D8;
    v8[4] = &v10;
    [v4 notifyEndpointTracked:v1 reply:v8];
    id v5 = (void *)v11[5];
  }
  id v6 = v5;

  _Block_object_dispose(&v10, 8);
  return v6;
}

void sub_214718A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndpointNotifyTracked_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndpointNotifyPassAdded(void *a1)
{
  id v1 = a1;
  uint64_t v10 = 0;
  id v11 = &v10;
  uint64_t v12 = 0x3032000000;
  uint64_t v13 = __Block_byref_object_copy__9;
  id v14 = __Block_byref_object_dispose__9;
  id v15 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  id v3 = (id *)(v11 + 5);
  id obj = (id)v11[5];
  id v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3, obj);

  id v5 = (void *)v11[5];
  if (!v5)
  {
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __SESEndpointNotifyPassAdded_block_invoke;
    v8[3] = &unk_2642194D8;
    v8[4] = &v10;
    [v4 notifyPassAdded:v1 reply:v8];
    id v5 = (void *)v11[5];
  }
  id v6 = v5;

  _Block_object_dispose(&v10, 8);
  return v6;
}

void sub_214718BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SESEndpointNotifyPassAdded_block_invoke(uint64_t a1, void *a2)
{
}

id SESEndpointGetSupportedLyonVersions(void *a1)
{
  uint64_t v17 = 0;
  id v18 = (id *)&v17;
  uint64_t v19 = 0x3032000000;
  uint64_t v20 = __Block_byref_object_copy__9;
  id v21 = __Block_byref_object_dispose__9;
  id v22 = 0;
  +[SESClient sharedClient]();
  id v2 = (id *)objc_claimAutoreleasedReturnValue();
  id v3 = v18;
  id obj = v18[5];
  id v4 = -[SESClient synchronousRemoteObjectProxyWithError:](v2, &obj);
  objc_storeStrong(v3 + 5, obj);

  id v5 = v18[5];
  if (v5)
  {
    id v6 = 0;
    if (a1) {
      *a1 = v5;
    }
  }
  else
  {
    uint64_t v10 = 0;
    id v11 = &v10;
    uint64_t v12 = 0x3032000000;
    uint64_t v13 = __Block_byref_object_copy__9;
    id v14 = __Block_byref_object_dispose__9;
    id v15 = 0;
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 3221225472;
    v9[2] = __SESEndpointGetSupportedLyonVersions_block_invoke;
    v9[3] = &unk_264219B88;
    v9[4] = &v10;
    void v9[5] = &v17;
    [v4 getSupportedLyonVersionsWithReply:v9];
    id v7 = v18[5];
    if (v7)
    {
      id v6 = 0;
      if (a1) {
        *a1 = v7;
      }
    }
    else
    {
      id v6 = (id)v11[5];
    }
    _Block_object_dispose(&v10, 8);
  }
  _Block_object_dispose(&v17, 8);

  return v6;
}

void sub_214718DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v8 - 96), 8);
  _Unwind_Resume(a1);
}

void __SESEndpointGetSupportedLyonVersions_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

SESKeyPair *SESEndPointCreateKeyPair(void *a1)
{
  v17[2] = *MEMORY[0x263EF8340];
  CFErrorRef error = 0;
  uint64_t v2 = *MEMORY[0x263F16FB8];
  uint64_t v3 = *MEMORY[0x263F16F98];
  v16[0] = *MEMORY[0x263F16FA8];
  v16[1] = v3;
  v17[0] = v2;
  v17[1] = &unk_26C56DD70;
  CFDictionaryRef v4 = [NSDictionary dictionaryWithObjects:v17 forKeys:v16 count:2];
  id v5 = SecKeyCreateRandomKey(v4, &error);
  id v6 = v5;
  CFErrorRef v7 = error;
  if (!error && v5)
  {
    CFDataRef v8 = SecKeyCopyExternalRepresentation(v5, &error);
    uint64_t v9 = v8;
    CFErrorRef v7 = error;
    if (error || !v8)
    {
      if (a1)
      {
        id v11 = SESDefaultLogObject();
LABEL_14:
        SESCreateAndLogError();
        uint64_t v13 = 0;
        *a1 = (id)objc_claimAutoreleasedReturnValue();
        goto LABEL_15;
      }
    }
    else
    {
      if ([(__CFData *)v8 length] == 97)
      {
        uint64_t v10 = [SESKeyPair alloc];
        id v11 = objc_msgSend(v9, "subdataWithRange:", 0, 65);
        uint64_t v12 = objc_msgSend(v9, "subdataWithRange:", 65, 32);
        uint64_t v13 = [(SESKeyPair *)v10 initWithPublicKey:v11 secretKey:v12];

LABEL_15:
        goto LABEL_17;
      }
      if (a1)
      {
        id v11 = SESDefaultLogObject();
        [v9 length];
        goto LABEL_14;
      }
    }
    uint64_t v13 = 0;
    goto LABEL_17;
  }
  if (!a1)
  {
    uint64_t v13 = 0;
    goto LABEL_18;
  }
  uint64_t v9 = SESDefaultLogObject();
  SESCreateAndLogError();
  uint64_t v13 = 0;
  *a1 = (id)objc_claimAutoreleasedReturnValue();
LABEL_17:

LABEL_18:
  return v13;
}

id SESEndPointPrivacyEncryptionWithManufacturer(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  uint64_t v27 = 0;
  id v28 = &v27;
  uint64_t v29 = 0x3032000000;
  id v30 = __Block_byref_object_copy__9;
  uint64_t v31 = __Block_byref_object_dispose__9;
  id v32 = 0;
  +[SESClient sharedClient]();
  uint64_t v13 = (id *)objc_claimAutoreleasedReturnValue();
  id v14 = (id *)(v28 + 5);
  id obj = (id)v28[5];
  id v15 = -[SESClient synchronousRemoteObjectProxyWithError:](v13, &obj);
  objc_storeStrong(v14, obj);

  int v16 = (void *)v28[5];
  if (v16)
  {
    id v17 = 0;
    if (a5) {
      *a5 = v16;
    }
  }
  else
  {
    uint64_t v20 = 0;
    id v21 = &v20;
    uint64_t v22 = 0x3032000000;
    id v23 = __Block_byref_object_copy__9;
    uint64_t v24 = __Block_byref_object_dispose__9;
    id v25 = 0;
    v19[0] = MEMORY[0x263EF8330];
    v19[1] = 3221225472;
    v19[2] = __SESEndPointPrivacyEncryptionWithManufacturer_block_invoke;
    v19[3] = &unk_264219D60;
    v19[4] = &v20;
    v19[5] = &v27;
    [v15 privacyEncryptDataWithManufacturer:v9 environment:v10 region:v11 data:v12 reply:v19];
    if (a5) {
      *a5 = (id) v28[5];
    }
    id v17 = (id)v21[5];
    _Block_object_dispose(&v20, 8);
  }
  _Block_object_dispose(&v27, 8);

  return v17;
}

void sub_214719430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointPrivacyEncryptionWithManufacturer_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  CFDataRef v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

id SESEndPointPrivacyDecryptionWithKeyPair(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v26 = 0;
  uint64_t v27 = &v26;
  uint64_t v28 = 0x3032000000;
  uint64_t v29 = __Block_byref_object_copy__9;
  id v30 = __Block_byref_object_dispose__9;
  id v31 = 0;
  +[SESClient sharedClient]();
  id v10 = (id *)objc_claimAutoreleasedReturnValue();
  id v11 = (id *)(v27 + 5);
  id obj = (id)v27[5];
  uint64_t v12 = -[SESClient synchronousRemoteObjectProxyWithError:](v10, &obj);
  objc_storeStrong(v11, obj);

  uint64_t v13 = (void *)v27[5];
  if (v13)
  {
    id v14 = 0;
    if (a4) {
      *a4 = v13;
    }
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = &v19;
    uint64_t v21 = 0x3032000000;
    uint64_t v22 = __Block_byref_object_copy__9;
    id v23 = __Block_byref_object_dispose__9;
    id v24 = 0;
    uint64_t v15 = [v7 publicKey];
    uint64_t v16 = [v7 secretKey];
    v18[0] = MEMORY[0x263EF8330];
    v18[1] = 3221225472;
    v18[2] = __SESEndPointPrivacyDecryptionWithKeyPair_block_invoke;
    v18[3] = &unk_264219528;
    v18[4] = &v19;
    void v18[5] = &v26;
    [v12 privacyDecryptDataWithKeyPair:v15 secretKey:v16 data:v8 ephemeralPublicKey:v9 reply:v18];

    if (a4) {
      *a4 = (id) v27[5];
    }
    id v14 = (id)v20[5];
    _Block_object_dispose(&v19, 8);
  }
  _Block_object_dispose(&v26, 8);

  return v14;
}

void sub_214719728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __SESEndPointPrivacyDecryptionWithKeyPair_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void __getEndpointQueue_block_invoke()
{
  v0 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v0, QOS_CLASS_USER_INITIATED, 0);

  dispatch_queue_t v1 = dispatch_queue_create("com.apple.seservice.endpoint", attr);
  uint64_t v2 = (void *)getEndpointQueue_endpointQueue;
  getEndpointQueue_endpointQueue = (uint64_t)v1;
}

uint64_t __SESEndPointConfigureWithProxy_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  long long v8 = *(_OWORD *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 104);
  uint64_t v10 = *(void *)(a1 + 112);
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __SESEndPointConfigureWithProxy_block_invoke_2;
  v12[3] = &unk_2642194D8;
  v12[4] = *(void *)(a1 + 120);
  return objc_msgSend(v2, "configureEndpointWithProxy:identifier:privateData:confidentialData:contactlessVolatileVisibility:contactlessPersistentVisibility:wiredVolatileVisibility:wiredPersistentVisibility:keySlot:nfcExpressOnlyInLPM:reply:", v1, v3, v4, v5, v6, v7, v8, v9, v10, v12);
}

void __SESEndPointConfigureWithProxy_block_invoke_2(uint64_t a1, void *a2)
{
}

void sub_214719B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void sub_214719E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_21471A0B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21471A2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_21471A5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id SESKeyGetDesignatedKeys()
{
  v0 = (void *)[objc_alloc(MEMORY[0x263EFFA40]) initWithSuiteName:@"com.apple.seserviced.designatedkeys"];
  uint64_t v1 = [v0 arrayForKey:@"keys"];
  uint64_t v2 = (void *)v1;
  uint64_t v3 = (void *)MEMORY[0x263EFFA68];
  if (v1) {
    uint64_t v3 = (void *)v1;
  }
  id v4 = v3;

  uint64_t v5 = [v4 filterMap:&__block_literal_global_8];

  return v5;
}

id __SESKeyGetDesignatedKeys_block_invoke(uint64_t a1, uint64_t a2)
{
  return +[SESDesignatedKey fromDictionary:a2];
}

void SESDesignatedKeyCommit(void *a1)
{
  uint64_t v1 = (objc_class *)MEMORY[0x263EFFA40];
  id v2 = a1;
  id v4 = (id)[[v1 alloc] initWithSuiteName:@"com.apple.seserviced.designatedkeys"];
  uint64_t v3 = objc_msgSend(v2, "ses_map:", &__block_literal_global_473);

  [v4 setObject:v3 forKey:@"keys"];
  _CFPreferencesFlushCachesForIdentifier();
}

uint64_t __SESDesignatedKeyCommit_block_invoke(uint64_t a1, void *a2)
{
  return [a2 asDictionary];
}

void sub_21471B580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

void sub_21471B924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21471BC10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21471BF34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21471C298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21471C5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_21471CA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_21471E46C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t CredentialType.isCopernicus.getter()
{
  char v1 = sub_21471E7D4(*(void *)v0, *(void *)(v0 + 8), (uint64_t)&unk_26C55E9D8);
  swift_arrayDestroy();
  return v1 & 1;
}

uint64_t sub_21471E7D4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = (unint64_t *)(a3 + 40);
  while (2)
  {
    uint64_t v8 = *(v7 - 1);
    unint64_t v9 = *v7;
    switch(*v7)
    {
      case 0uLL:
        if (a2) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 0;
        goto LABEL_68;
      case 1uLL:
        if (a2 != 1) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 1;
        goto LABEL_68;
      case 2uLL:
        if (a2 != 2) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 2;
        goto LABEL_68;
      case 3uLL:
        if (a2 != 3) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 3;
        goto LABEL_68;
      case 4uLL:
        if (a2 != 4) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 4;
        goto LABEL_68;
      case 5uLL:
        if (a2 != 5) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 5;
        goto LABEL_68;
      case 6uLL:
        if (a2 != 6) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 6;
        goto LABEL_68;
      case 7uLL:
        if (a2 != 7) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 7;
        goto LABEL_68;
      case 8uLL:
        if (a2 != 8) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 8;
        goto LABEL_68;
      case 9uLL:
        if (a2 != 9) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 9;
        goto LABEL_68;
      case 0xAuLL:
        if (a2 != 10) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 10;
        goto LABEL_68;
      case 0xBuLL:
        if (a2 != 11) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 11;
        goto LABEL_68;
      case 0xCuLL:
        if (a2 != 12) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 12;
        goto LABEL_68;
      case 0xDuLL:
        if (a2 != 13) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 13;
        goto LABEL_68;
      case 0xEuLL:
        if (a2 != 14) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 14;
        goto LABEL_68;
      case 0xFuLL:
        if (a2 != 15) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 15;
        goto LABEL_68;
      case 0x10uLL:
        if (a2 != 16) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 16;
        goto LABEL_68;
      case 0x11uLL:
        if (a2 != 17) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 17;
        goto LABEL_68;
      case 0x12uLL:
        if (a2 != 18) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 18;
        goto LABEL_68;
      case 0x13uLL:
        if (a2 != 19) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 19;
        goto LABEL_68;
      case 0x14uLL:
        if (a2 != 20) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 20;
        goto LABEL_68;
      case 0x15uLL:
        if (a2 != 21) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 21;
        goto LABEL_68;
      case 0x16uLL:
        if (a2 != 22) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 22;
        goto LABEL_68;
      case 0x17uLL:
        if (a2 != 23) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 23;
        goto LABEL_68;
      case 0x18uLL:
        if (a2 != 24) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 24;
        goto LABEL_68;
      case 0x19uLL:
        if (a2 != 25) {
          goto LABEL_57;
        }
        uint64_t v13 = *(v7 - 1);
        unint64_t v14 = 25;
        goto LABEL_68;
      default:
        if (a2 < 0x1A)
        {
LABEL_57:
          sub_21471ED54(a1, a2);
          sub_21471ED54(v8, v9);
          sub_2147201A0(v8, v9);
          sub_2147201A0(a1, a2);
LABEL_58:
          v7 += 2;
          if (!--v3)
          {
            uint64_t v12 = 0;
            goto LABEL_70;
          }
          continue;
        }
        if (v8 != a1 || v9 != a2)
        {
          char v11 = sub_2147AD668();
          sub_21471ED54(a1, a2);
          sub_21471ED54(v8, v9);
          sub_2147201A0(v8, v9);
          sub_2147201A0(a1, a2);
          if (v11) {
            goto LABEL_69;
          }
          goto LABEL_58;
        }
        sub_21471ED54(a1, a2);
        sub_21471ED54(a1, a2);
        uint64_t v13 = a1;
        unint64_t v14 = a2;
LABEL_68:
        sub_2147201A0(v13, v14);
        sub_2147201A0(a1, a2);
LABEL_69:
        uint64_t v12 = 1;
LABEL_70:
        swift_bridgeObjectRelease();
        return v12;
    }
  }
}

uint64_t sub_21471EC24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_2147AD668();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  unint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_2147AD668() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t CredentialType.description.getter()
{
  sub_21471ED54(*(void *)v0, *(void *)(v0 + 8));
  sub_2147ACF78();
  uint64_t v1 = sub_2147ACF88();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21471ED54(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1A) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t CredentialType.formattedDescription.getter()
{
  sub_21471ED54(*(void *)v0, *(void *)(v0 + 8));
  return sub_2147ACF78();
}

uint64_t CredentialType.rawValue.getter()
{
  uint64_t result = 0x614372657473614DLL;
  switch(*(void *)(v0 + 8))
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0xD000000000000010;
      break;
    case 2:
      uint64_t result = 0x20676E696A696542;
      break;
    case 3:
      uint64_t result = 0x696168676E616853;
      break;
    case 4:
      uint64_t result = 4342602;
      break;
    case 5:
      uint64_t result = 4347733;
      break;
    case 6:
      uint64_t result = 0x7265766F63736944;
      break;
    case 7:
      uint64_t result = 2019913025;
      break;
    case 8:
      uint64_t result = 0x7369736F6E6548;
      break;
    case 9:
      uint64_t result = 1634953558;
      break;
    case 0xALL:
      uint64_t result = 0x6E5520616E696843;
      break;
    case 0xBLL:
      uint64_t result = 0x79654B656D6F48;
      break;
    case 0xCLL:
      uint64_t result = 0x79654B726143;
      break;
    case 0xDLL:
      uint64_t result = 0x7461726F70726F43;
      break;
    case 0xELL:
      uint64_t result = 0x676E6152656D6F48;
      break;
    case 0xFLL:
      uint64_t result = 1397704019;
      break;
    case 0x10:
      uint64_t result = 0x54206164616E6143;
      break;
    case 0x11:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x12:
      uint64_t v2 = 0x206165726F4BLL;
      goto LABEL_22;
    case 0x13:
      uint64_t v2 = 0x207369726150;
LABEL_22:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7254000000000000;
      break;
    case 0x14:
      uint64_t result = 0x65726166694DLL;
      break;
    case 0x15:
      uint64_t result = 0x6143694C6546;
      break;
    case 0x16:
      uint64_t result = 0x4F4D20616E696843;
      break;
    case 0x17:
      uint64_t result = 0xD000000000000014;
      break;
    case 0x18:
      uint64_t result = 0x65644920494B504ALL;
      break;
    case 0x19:
      uint64_t result = 0x72616D746867694ELL;
      break;
    default:
      sub_2147ACFC8();
      uint64_t result = 0x20616E6E656956;
      break;
  }
  return result;
}

uint64_t CredentialType.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781BFC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781BFD0);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781BFD8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781BFE0);
  sub_2147ACDD8();
  sub_2147200EC();
  sub_2147271C4(&qword_26781BFF0, &qword_26781BFC8);
  sub_2147ACF08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_214720140((uint64_t)v10);
    uint64_t v15 = v25;
    uint64_t v16 = v24;
    if (v24 == 0x614372657473614DLL && v25 == 0xEA00000000006472 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 0;
    }
    else if (v16 == 0xD000000000000010 && v15 == 0x80000002147BDFB0 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 1;
    }
    else if (v16 == 0x20676E696A696542 && v15 == 0xEB00000000434F4DLL || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 2;
    }
    else if (v16 == 0x696168676E616853 && v15 == 0xEC000000434F4D20 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 3;
    }
    else if (v16 == 4342602 && v15 == 0xE300000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 4;
    }
    else if (v16 == 4347733 && v15 == 0xE300000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 5;
    }
    else if (v16 == 0x7265766F63736944 && v15 == 0xE800000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 6;
    }
    else if (v16 == 2019913025 && v15 == 0xE400000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 7;
    }
    else if (v16 == 0x7369736F6E6548 && v15 == 0xE700000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 8;
    }
    else if (v16 == 1634953558 && v15 == 0xE400000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 9;
    }
    else if (v16 == 0x6E5520616E696843 && v15 == 0xEF796150206E6F69 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 10;
    }
    else if (v16 == 0x79654B656D6F48 && v15 == 0xE700000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 11;
    }
    else if (v16 == 0x79654B726143 && v15 == 0xE600000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 12;
    }
    else if (v16 == 0x7461726F70726F43 && v15 == 0xEC00000079654B65 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 13;
    }
    else if (v16 == 0x676E6152656D6F48 && v15 == 0xEE0079654B676E69 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 14;
    }
    else if (v16 == 1397704019 && v15 == 0xE400000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 15;
    }
    else if (v16 == 0x54206164616E6143 && v15 == 0xEE007469736E6172 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 16;
    }
    else if (v16 == 0xD000000000000011 && v15 == 0x80000002147BDF90 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 17;
    }
    else if (v16 == 0x7254206165726F4BLL && v15 == 0xED00007469736E61 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 18;
    }
    else if (v16 == 0x7254207369726150 && v15 == 0xED00007469736E61 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 19;
    }
    else if (v16 == 0x65726166694DLL && v15 == 0xE600000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 20;
    }
    else if (v16 == 0x6143694C6546 && v15 == 0xE600000000000000 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 21;
    }
    else if (v16 == 0x4F4D20616E696843 && v15 == 0xE900000000000043 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 22;
    }
    else if (v16 == 0xD000000000000014 && v15 == 0x80000002147BDF70 || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 23;
    }
    else if (v16 == 0x65644920494B504ALL && v15 == 0xED0000797469746ELL || (sub_2147AD668() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 24;
    }
    else if (v16 == 0x72616D746867694ELL && v15 == 0xE900000000000065)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v19 = 25;
    }
    else
    {
      char v22 = sub_2147AD668();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      if (v22) {
        uint64_t v19 = 25;
      }
      else {
        uint64_t v19 = 26;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_2147ACDE8();
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x2166A72B0](v29, v30, v31, v32);
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v21 = v26;
  *uint64_t v26 = v17;
  v21[1] = v19;
  return result;
}

uint64_t CredentialType.init(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1 = 0;
  while (1)
  {
    uint64_t v2 = *(void *)((char *)&unk_26C55EE08 + v1 + 32);
    unint64_t v3 = *(void *)((char *)&unk_26C55EE08 + v1 + 40);
    sub_21471ED54(v2, v3);
    sub_21471ED54(v2, v3);
    sub_21471ED54(v2, v3);
    sub_2147ACF78();
    uint64_t v4 = sub_2147ACF88();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    sub_2147201A0(v2, v3);
    if (v4 == sub_2147ACF88() && v6 == v7) {
      break;
    }
    char v8 = sub_2147AD668();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_8;
    }
    sub_2147201A0(v2, v3);
    v1 += 16;
    if (v1 == 416)
    {
      uint64_t v2 = 0;
      unint64_t v3 = 26;
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v3;
  return result;
}

void *static CredentialType.allCases.getter()
{
  return &unk_26C55EE08;
}

unint64_t sub_2147200EC()
{
  unint64_t result = qword_26781BFE8;
  if (!qword_26781BFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781BFE8);
  }
  return result;
}

uint64_t sub_214720140(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781BFD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2147201A0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1A) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t CredentialType.init(moduleAID:dataSource:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, long long *a4@<X8>)
{
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_21472618C((uint64_t)&unk_26C55EE08, v8, v9);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (*(void *)(v10 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DCA0);
    uint64_t v11 = sub_2147AD4E8();
  }
  else
  {
    uint64_t v11 = MEMORY[0x263F8EE80];
  }
  *(void *)&long long v17 = v11;
  uint64_t v12 = (void *)swift_bridgeObjectRetain();
  sub_214725C5C(v12, 1, &v17);
  if (v4)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v17;
    swift_bridgeObjectRetain();
    sub_214720344(v13, a1, a2, (uint64_t *)&v17);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = v18;
    if (v18)
    {
      long long v16 = v17;
      uint64_t result = swift_bridgeObjectRelease();
      long long v15 = v16;
    }
    else
    {
      long long v15 = xmmword_2147B20F0;
    }
    *a4 = v15;
  }
  return result;
}

uint64_t sub_214720344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = a1;
  uint64_t v7 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v37 = result;
  int64_t v34 = v11;
  uint64_t v35 = v7;
  while (1)
  {
    while (1)
    {
LABEL_5:
      if (v10)
      {
        unint64_t v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        if (__OFADD__(v13++, 1)) {
          goto LABEL_48;
        }
        if (v13 >= v11)
        {
LABEL_45:
          swift_bridgeObjectRelease();
          uint64_t result = swift_release();
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          return result;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v13);
        if (!v18)
        {
          int64_t v19 = v13 + 1;
          if (v13 + 1 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v7 + 8 * v19);
          if (v18) {
            goto LABEL_16;
          }
          int64_t v19 = v13 + 2;
          if (v13 + 2 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v7 + 8 * v19);
          if (v18) {
            goto LABEL_16;
          }
          int64_t v19 = v13 + 3;
          if (v13 + 3 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v7 + 8 * v19);
          if (v18)
          {
LABEL_16:
            int64_t v13 = v19;
          }
          else
          {
            int64_t v32 = v13 + 4;
            if (v13 + 4 >= v11) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v7 + 8 * v32);
            for (v13 += 4; !v18; ++v32)
            {
              int64_t v13 = v32 + 1;
              if (__OFADD__(v32, 1)) {
                goto LABEL_49;
              }
              if (v13 >= v11) {
                goto LABEL_45;
              }
              unint64_t v18 = *(void *)(v7 + 8 * v13);
            }
          }
        }
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      uint64_t v20 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v16);
      uint64_t v22 = *v20;
      unint64_t v21 = v20[1];
      uint64_t v23 = *(void **)(*(void *)(v6 + 56) + 8 * v16);
      uint64_t v24 = v23[2];
      int64_t v39 = v13;
      if (v24) {
        break;
      }
      unint64_t v14 = v21;
      sub_21471ED54(v22, v21);
      swift_bridgeObjectRetain();
      sub_2147201A0(v22, v14);
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v13 = v39;
    }
    if (v23[4] == a2 && v23[5] == a3) {
      goto LABEL_44;
    }
    unint64_t v38 = v10;
    uint64_t v26 = v22;
    unint64_t v27 = v21;
    uint64_t result = sub_2147AD668();
    if (result)
    {
      unint64_t v21 = v27;
LABEL_43:
      uint64_t v22 = v26;
LABEL_44:
      unint64_t v33 = v21;
      sub_21471ED54(v22, v21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *a4 = v22;
      a4[1] = v33;
      a4[2] = (uint64_t)v23;
      return result;
    }
    unint64_t v21 = v27;
    if (v24 != 1) {
      break;
    }
    sub_21471ED54(v22, v27);
    swift_bridgeObjectRetain();
    sub_2147201A0(v22, v27);
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v13 = v39;
    unint64_t v10 = v38;
  }
  uint64_t v28 = v23 + 7;
  uint64_t v29 = 1;
  while (1)
  {
    uint64_t v30 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (*(v28 - 1) == a2 && *v28 == a3) {
      goto LABEL_43;
    }
    uint64_t result = sub_2147AD668();
    if (result)
    {
      unint64_t v21 = v27;
      goto LABEL_43;
    }
    v28 += 2;
    ++v29;
    unint64_t v21 = v27;
    if (v30 == v24)
    {
      sub_21471ED54(v26, v27);
      swift_bridgeObjectRetain();
      sub_2147201A0(v26, v27);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v6 = v37;
      unint64_t v10 = v38;
      int64_t v11 = v34;
      uint64_t v7 = v35;
      int64_t v13 = v39;
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t CredentialType.policy.getter()
{
  return 0;
}

uint64_t CredentialType.hash(into:)()
{
  switch(*(void *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xALL:
    case 0xBLL:
    case 0xCLL:
    case 0xDLL:
    case 0xELL:
    case 0xFLL:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
      uint64_t result = sub_2147AD738();
      break;
    default:
      sub_2147AD738();
      uint64_t result = sub_2147ACFA8();
      break;
  }
  return result;
}

uint64_t sub_214720874()
{
  return 0;
}

uint64_t sub_214720880()
{
  return 0;
}

void sub_21472088C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_214720898(uint64_t a1)
{
  unint64_t v2 = sub_214726954();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147208D4(uint64_t a1)
{
  unint64_t v2 = sub_214726954();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_214720910(char a1)
{
  unint64_t result = 0x6E6F677241;
  switch(a1)
  {
    case 1:
      unint64_t result = 1852797513;
      break;
    case 2:
      unint64_t result = 0x7265656E6F6950;
      break;
    case 3:
      unint64_t result = 0x746962724FLL;
      break;
    case 4:
      unint64_t result = 1969321292;
      break;
    case 5:
      unint64_t result = 0x74697270736E7553;
      break;
    case 6:
      unint64_t result = 0x6E6F6E6558;
      break;
    case 7:
      unint64_t result = 1852794190;
      break;
    case 8:
      unint64_t result = 0x7369736F6E6548;
      break;
    case 9:
      unint64_t result = 0x6D75696C6548;
      break;
    case 10:
      unint64_t result = 0x6E6F747079724BLL;
      break;
    case 11:
    case 12:
    case 14:
      unint64_t result = 0x63696E7265706F43;
      break;
    case 13:
      unint64_t result = 0xD000000000000010;
      break;
    case 15:
      unint64_t result = 0x6F6162756853;
      break;
    case 16:
      unint64_t result = 0x6D7569646F53;
      break;
    case 17:
      unint64_t result = 0x6D75696874694CLL;
      break;
    case 18:
      unint64_t result = 0x727566746867694ELL;
      break;
    case 19:
      unint64_t result = 0x73616C7441;
      break;
    case 20:
      unint64_t result = 0x65726166694DLL;
      break;
    case 21:
      unint64_t result = 0x6D6F6C616C53;
      break;
    case 22:
      unint64_t result = 0x6E616873696148;
      break;
    case 23:
      unint64_t result = 4412496;
      break;
    case 24:
      unint64_t result = 0x6F736E6F68706C41;
      break;
    case 25:
      unint64_t result = 0x616E6E656956;
      break;
    case 26:
      unint64_t result = 0x72616D746867694ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214720BE8(uint64_t a1)
{
  unint64_t v2 = sub_214727134();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214720C24(uint64_t a1)
{
  unint64_t v2 = sub_214727134();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214720C60(uint64_t a1)
{
  unint64_t v2 = sub_214726AF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214720C9C(uint64_t a1)
{
  unint64_t v2 = sub_214726AF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_214720CD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_214720CEC()
{
  return sub_2147AD748();
}

uint64_t sub_214720D34()
{
  return sub_2147AD738();
}

uint64_t sub_214720D60()
{
  return sub_2147AD748();
}

unint64_t sub_214720DA4()
{
  return sub_214720910(*v0);
}

uint64_t sub_214720DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214728D30(a1, a2);
  *a3 = result;
  return result;
}

void sub_214720DD4(unsigned char *a1@<X8>)
{
  *a1 = 27;
}

uint64_t sub_214720DE0(uint64_t a1)
{
  unint64_t v2 = sub_214726858();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214720E1C(uint64_t a1)
{
  unint64_t v2 = sub_214726858();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214720E58(uint64_t a1)
{
  unint64_t v2 = sub_214726CF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214720E94(uint64_t a1)
{
  unint64_t v2 = sub_214726CF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214720ED0(uint64_t a1)
{
  unint64_t v2 = sub_214726C9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214720F0C(uint64_t a1)
{
  unint64_t v2 = sub_214726C9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214720F48(uint64_t a1)
{
  unint64_t v2 = sub_214726D44();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214720F84(uint64_t a1)
{
  unint64_t v2 = sub_214726D44();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214720FC0(uint64_t a1)
{
  unint64_t v2 = sub_214726D98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214720FFC(uint64_t a1)
{
  unint64_t v2 = sub_214726D98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721038(uint64_t a1)
{
  unint64_t v2 = sub_2147269FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721074(uint64_t a1)
{
  unint64_t v2 = sub_2147269FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2147210B0(uint64_t a1)
{
  unint64_t v2 = sub_214726E40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147210EC(uint64_t a1)
{
  unint64_t v2 = sub_214726E40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721128(uint64_t a1)
{
  unint64_t v2 = sub_214726E94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721164(uint64_t a1)
{
  unint64_t v2 = sub_214726E94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2147211A0(uint64_t a1)
{
  unint64_t v2 = sub_2147270E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147211DC(uint64_t a1)
{
  unint64_t v2 = sub_2147270E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721218(uint64_t a1)
{
  unint64_t v2 = sub_214726DEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721254(uint64_t a1)
{
  unint64_t v2 = sub_214726DEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721290(uint64_t a1)
{
  unint64_t v2 = sub_214726BA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147212CC(uint64_t a1)
{
  unint64_t v2 = sub_214726BA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721308(uint64_t a1)
{
  unint64_t v2 = sub_214726FE4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721344(uint64_t a1)
{
  unint64_t v2 = sub_214726FE4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721380(uint64_t a1)
{
  unint64_t v2 = sub_214726AA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147213BC(uint64_t a1)
{
  unint64_t v2 = sub_214726AA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2147213F8(uint64_t a1)
{
  unint64_t v2 = sub_214726EE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721434(uint64_t a1)
{
  unint64_t v2 = sub_214726EE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721470(uint64_t a1)
{
  unint64_t v2 = sub_214726B4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147214AC(uint64_t a1)
{
  unint64_t v2 = sub_214726B4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2147214E8(uint64_t a1)
{
  unint64_t v2 = sub_2147268AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721524(uint64_t a1)
{
  unint64_t v2 = sub_2147268AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721560(uint64_t a1)
{
  unint64_t v2 = sub_214727038();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21472159C(uint64_t a1)
{
  unint64_t v2 = sub_214727038();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2147215D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_214721608(uint64_t a1)
{
  unint64_t v2 = sub_2147269A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721644(uint64_t a1)
{
  unint64_t v2 = sub_2147269A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721680(uint64_t a1)
{
  unint64_t v2 = sub_21472708C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147216BC(uint64_t a1)
{
  unint64_t v2 = sub_21472708C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2147216F8(uint64_t a1)
{
  unint64_t v2 = sub_214726C48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721734(uint64_t a1)
{
  unint64_t v2 = sub_214726C48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721770(uint64_t a1)
{
  unint64_t v2 = sub_214726A50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147217AC(uint64_t a1)
{
  unint64_t v2 = sub_214726A50();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2147217E8(uint64_t a1)
{
  unint64_t v2 = sub_214726BF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721824(uint64_t a1)
{
  unint64_t v2 = sub_214726BF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721860(uint64_t a1)
{
  unint64_t v2 = sub_214726F90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21472189C(uint64_t a1)
{
  unint64_t v2 = sub_214726F90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2147218D8()
{
  return 1;
}

uint64_t sub_2147218E0()
{
  return sub_2147AD748();
}

uint64_t sub_214721924()
{
  return sub_2147AD738();
}

uint64_t sub_21472194C()
{
  return sub_2147AD748();
}

unint64_t sub_21472198C()
{
  return 0xD000000000000010;
}

uint64_t sub_2147219A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2147297A4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2147219D4(uint64_t a1)
{
  unint64_t v2 = sub_214726900();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721A10(uint64_t a1)
{
  unint64_t v2 = sub_214726900();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214721A4C(uint64_t a1)
{
  unint64_t v2 = sub_214726F3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214721A88(uint64_t a1)
{
  unint64_t v2 = sub_214726F3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CredentialType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781BFF8);
  uint64_t v154 = *(void *)(v3 - 8);
  uint64_t v155 = v3;
  MEMORY[0x270FA5388]();
  v152 = (char *)v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C000);
  uint64_t v151 = *(void *)(v153 - 8);
  MEMORY[0x270FA5388]();
  v150 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C008);
  uint64_t v148 = *(void *)(v6 - 8);
  uint64_t v149 = v6;
  MEMORY[0x270FA5388]();
  v147 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C010);
  uint64_t v145 = *(void *)(v8 - 8);
  uint64_t v146 = v8;
  MEMORY[0x270FA5388]();
  v144 = (char *)v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C018);
  uint64_t v142 = *(void *)(v10 - 8);
  uint64_t v143 = v10;
  MEMORY[0x270FA5388]();
  v141 = (char *)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C020);
  uint64_t v139 = *(void *)(v12 - 8);
  uint64_t v140 = v12;
  MEMORY[0x270FA5388]();
  v138 = (char *)v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C028);
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388]();
  v135 = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C030);
  uint64_t v133 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388]();
  v132 = (char *)v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C038);
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388]();
  v129 = (char *)v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C040);
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388]();
  v126 = (char *)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C048);
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388]();
  v123 = (char *)v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C050);
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388]();
  v120 = (char *)v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C058);
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388]();
  v117 = (char *)v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C060);
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388]();
  v114 = (char *)v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C068);
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388]();
  v111 = (char *)v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C070);
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388]();
  v108 = (char *)v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C078);
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388]();
  v105 = (char *)v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C080);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388]();
  v102 = (char *)v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C088);
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388]();
  v99 = (char *)v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C090);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388]();
  v96 = (char *)v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C098);
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v93 = (char *)v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C0A0);
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388]();
  v90 = (char *)v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C0A8);
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388]();
  v87 = (char *)v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C0B0);
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388]();
  id v84 = (char *)v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C0B8);
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388]();
  long long v81 = (char *)v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C0C0);
  uint64_t v80 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v35 = (char *)v78 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C0C8);
  uint64_t v79 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v38 = (char *)v78 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C0D0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v157 = v39;
  uint64_t v158 = v40;
  MEMORY[0x270FA5388]();
  id v42 = (char *)v78 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v1[1];
  v78[1] = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214726858();
  v156 = v42;
  sub_2147AD768();
  switch(v43)
  {
    case 0:
      char v160 = 0;
      sub_214727134();
      uint64_t v44 = v156;
      uint64_t v45 = v157;
      sub_2147AD5B8();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v38, v36);
      return (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v44, v45);
    case 1:
      char v160 = 1;
      sub_2147270E0();
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v35, v33);
      goto LABEL_32;
    case 2:
      char v160 = 2;
      sub_21472708C();
      uint64_t v53 = v81;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v82 + 8);
      id v55 = v53;
      id v56 = &v115;
      goto LABEL_24;
    case 3:
      char v160 = 3;
      sub_214727038();
      uint64_t v57 = v84;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v85 + 8);
      id v55 = v57;
      id v56 = &v118;
      goto LABEL_24;
    case 4:
      char v160 = 4;
      sub_214726FE4();
      v58 = v87;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v88 + 8);
      id v55 = v58;
      id v56 = &v121;
      goto LABEL_24;
    case 5:
      char v160 = 5;
      sub_214726F90();
      uint64_t v59 = v90;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v91 + 8);
      id v55 = v59;
      id v56 = &v124;
      goto LABEL_24;
    case 6:
      char v160 = 6;
      sub_214726F3C();
      id v60 = v93;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v94 + 8);
      id v55 = v60;
      id v56 = &v127;
      goto LABEL_24;
    case 7:
      char v160 = 7;
      sub_214726EE8();
      v61 = v96;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v97 + 8);
      id v55 = v61;
      id v56 = &v130;
      goto LABEL_24;
    case 8:
      char v160 = 8;
      sub_214726E94();
      id v62 = v99;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v100 + 8);
      id v55 = v62;
      id v56 = &v133;
      goto LABEL_24;
    case 9:
      char v160 = 9;
      sub_214726E40();
      id v63 = v102;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v103 + 8);
      id v55 = v63;
      id v56 = &v136;
      goto LABEL_24;
    case 10:
      char v160 = 10;
      sub_214726DEC();
      uint64_t v64 = v105;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v106 + 8);
      id v55 = v64;
      id v56 = &v139;
      goto LABEL_24;
    case 11:
      char v160 = 11;
      sub_214726D98();
      v65 = v108;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v109 + 8);
      id v55 = v65;
      id v56 = &v142;
      goto LABEL_24;
    case 12:
      char v160 = 12;
      sub_214726D44();
      v66 = v111;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v112 + 8);
      id v55 = v66;
      id v56 = &v145;
      goto LABEL_24;
    case 13:
      char v160 = 13;
      sub_214726CF0();
      v67 = v114;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v115 + 8);
      id v55 = v67;
      id v56 = &v148;
      goto LABEL_24;
    case 14:
      char v160 = 14;
      sub_214726C9C();
      v68 = v117;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v118 + 8);
      id v55 = v68;
      id v56 = &v151;
      goto LABEL_24;
    case 15:
      char v160 = 15;
      sub_214726C48();
      v69 = v120;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v121 + 8);
      id v55 = v69;
      id v56 = &v154;
      goto LABEL_24;
    case 16:
      char v160 = 16;
      sub_214726BF4();
      v70 = v123;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v124 + 8);
      id v55 = v70;
      id v56 = &v157;
      goto LABEL_24;
    case 17:
      char v160 = 17;
      sub_214726BA0();
      v71 = v126;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v127 + 8);
      id v55 = v71;
      id v56 = (uint64_t *)&v159;
      goto LABEL_24;
    case 18:
      char v160 = 18;
      sub_214726B4C();
      v72 = v129;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v130 + 8);
      id v55 = v72;
      id v56 = &v161;
      goto LABEL_24;
    case 19:
      char v160 = 19;
      sub_214726AF8();
      uint64_t v73 = v132;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v133 + 8);
      id v55 = v73;
      id v56 = &v162;
      goto LABEL_24;
    case 20:
      char v160 = 20;
      sub_214726AA4();
      v74 = v135;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      id v54 = *(void (**)(char *, uint64_t))(v136 + 8);
      id v55 = v74;
      id v56 = &v163;
LABEL_24:
      uint64_t v75 = *(v56 - 32);
      goto LABEL_31;
    case 21:
      char v160 = 21;
      sub_214726A50();
      long long v76 = v138;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      uint64_t v77 = v139;
      uint64_t v75 = v140;
      goto LABEL_30;
    case 22:
      char v160 = 22;
      sub_2147269FC();
      long long v76 = v141;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      uint64_t v77 = v142;
      uint64_t v75 = v143;
      goto LABEL_30;
    case 23:
      char v160 = 23;
      sub_2147269A8();
      long long v76 = v144;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      uint64_t v77 = v145;
      uint64_t v75 = v146;
      goto LABEL_30;
    case 24:
      char v160 = 24;
      sub_214726954();
      long long v76 = v147;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      uint64_t v77 = v148;
      uint64_t v75 = v149;
      goto LABEL_30;
    case 25:
      char v160 = 26;
      sub_2147268AC();
      long long v76 = v152;
      uint64_t v52 = v156;
      uint64_t v51 = v157;
      sub_2147AD5B8();
      uint64_t v77 = v154;
      uint64_t v75 = v155;
LABEL_30:
      id v54 = *(void (**)(char *, uint64_t))(v77 + 8);
      id v55 = v76;
LABEL_31:
      v54(v55, v75);
LABEL_32:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v52, v51);
      break;
    default:
      char v160 = 25;
      sub_214726900();
      id v47 = v150;
      id v49 = v156;
      uint64_t v48 = v157;
      sub_2147AD5B8();
      uint64_t v50 = v153;
      sub_2147AD5D8();
      (*(void (**)(char *, uint64_t))(v151 + 8))(v47, v50);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v49, v48);
      break;
  }
  return result;
}

uint64_t CredentialType.hashValue.getter()
{
  return sub_2147AD748();
}

uint64_t CredentialType.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  v185 = a2;
  uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C1B8);
  uint64_t v161 = *(void *)(v190 - 8);
  MEMORY[0x270FA5388]();
  v189 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C1C0);
  uint64_t v163 = *(void *)(v162 - 8);
  MEMORY[0x270FA5388]();
  v184 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C1C8);
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388]();
  v183 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C1D0);
  uint64_t v157 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388]();
  v182 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C1D8);
  uint64_t v155 = *(void *)(v156 - 8);
  MEMORY[0x270FA5388]();
  v181 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C1E0);
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388]();
  v180 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C1E8);
  uint64_t v151 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388]();
  v179 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C1F0);
  uint64_t v149 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388]();
  v178 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C1F8);
  uint64_t v147 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388]();
  v177 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C200);
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388]();
  v176 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C208);
  uint64_t v143 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388]();
  v175 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C210);
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388]();
  v174 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C218);
  uint64_t v139 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388]();
  v173 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C220);
  uint64_t v137 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388]();
  v172 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C228);
  uint64_t v135 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388]();
  v171 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C230);
  uint64_t v133 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388]();
  v170 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C238);
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388]();
  v169 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C240);
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388]();
  v168 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C248);
  uint64_t v128 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388]();
  v165 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C250);
  uint64_t v126 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388]();
  v188 = (char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C258);
  uint64_t v124 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388]();
  v167 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C260);
  uint64_t v122 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388]();
  v166 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C268);
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388]();
  v187 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C270);
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388]();
  v186 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C278);
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388]();
  v164 = (char *)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C280);
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v29 = (char *)&v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C288);
  uint64_t v112 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v32 = (char *)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C290);
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v36 = (char *)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a1[3];
  v191 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v37);
  sub_214726858();
  uint64_t v38 = v192;
  sub_2147AD758();
  if (v38) {
    goto LABEL_57;
  }
  uint64_t v109 = v32;
  uint64_t v108 = v30;
  uint64_t v110 = v29;
  uint64_t v40 = v186;
  uint64_t v39 = v187;
  uint64_t v41 = v188;
  id v42 = v189;
  uint64_t v111 = 0;
  uint64_t v43 = v190;
  uint64_t v192 = v34;
  uint64_t v44 = sub_2147AD5A8();
  if (*(void *)(v44 + 16) != 1)
  {
    uint64_t v49 = sub_2147AD388();
    swift_allocError();
    uint64_t v50 = v36;
    uint64_t v52 = v51;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781C298);
    void *v52 = &type metadata for CredentialType;
    sub_2147AD538();
    sub_2147AD378();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v49 - 8) + 104))(v52, *MEMORY[0x263F8DCB0], v49);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v192 + 8))(v50, v33);
LABEL_57:
    uint64_t v100 = (uint64_t)v191;
    return __swift_destroy_boxed_opaque_existential_1(v100);
  }
  switch(*(unsigned char *)(v44 + 32))
  {
    case 1:
      char v193 = 1;
      sub_2147270E0();
      uint64_t v53 = v110;
      uint64_t v54 = v111;
      sub_2147AD528();
      if (v54) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v113 + 8))(v53, v114);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 1;
      goto LABEL_63;
    case 2:
      char v193 = 2;
      sub_21472708C();
      id v55 = v164;
      uint64_t v56 = v111;
      sub_2147AD528();
      if (v56) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v115 + 8))(v55, v116);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 2;
      goto LABEL_63;
    case 3:
      char v193 = 3;
      sub_214727038();
      uint64_t v57 = v111;
      sub_2147AD528();
      if (v57) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v117 + 8))(v40, v118);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 3;
      goto LABEL_63;
    case 4:
      char v193 = 4;
      sub_214726FE4();
      uint64_t v58 = v111;
      sub_2147AD528();
      if (v58) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v120 + 8))(v39, v121);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 4;
      goto LABEL_63;
    case 5:
      char v193 = 5;
      sub_214726F90();
      uint64_t v59 = v166;
      uint64_t v60 = v111;
      sub_2147AD528();
      if (v60) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v122 + 8))(v59, v119);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 5;
      goto LABEL_63;
    case 6:
      char v193 = 6;
      sub_214726F3C();
      v61 = v167;
      uint64_t v62 = v111;
      sub_2147AD528();
      if (v62) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v124 + 8))(v61, v123);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 6;
      goto LABEL_63;
    case 7:
      char v193 = 7;
      sub_214726EE8();
      uint64_t v63 = v111;
      sub_2147AD528();
      if (v63) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v126 + 8))(v41, v125);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 7;
      goto LABEL_63;
    case 8:
      char v193 = 8;
      sub_214726E94();
      uint64_t v64 = v165;
      uint64_t v65 = v111;
      sub_2147AD528();
      if (v65) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v128 + 8))(v64, v127);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 8;
      goto LABEL_63;
    case 9:
      char v193 = 9;
      sub_214726E40();
      v66 = v168;
      uint64_t v67 = v111;
      sub_2147AD528();
      if (v67) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v129 + 8))(v66, v130);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 9;
      goto LABEL_63;
    case 0xA:
      char v193 = 10;
      sub_214726DEC();
      v68 = v169;
      uint64_t v69 = v111;
      sub_2147AD528();
      if (v69) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v131 + 8))(v68, v132);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 10;
      goto LABEL_63;
    case 0xB:
      char v193 = 11;
      sub_214726D98();
      v70 = v170;
      uint64_t v71 = v111;
      sub_2147AD528();
      if (v71) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v133 + 8))(v70, v134);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 11;
      goto LABEL_63;
    case 0xC:
      char v193 = 12;
      sub_214726D44();
      v72 = v171;
      uint64_t v73 = v111;
      sub_2147AD528();
      if (v73) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v135 + 8))(v72, v136);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 12;
      goto LABEL_63;
    case 0xD:
      char v193 = 13;
      sub_214726CF0();
      v74 = v172;
      uint64_t v75 = v111;
      sub_2147AD528();
      if (v75) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v137 + 8))(v74, v138);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 13;
      goto LABEL_63;
    case 0xE:
      char v193 = 14;
      sub_214726C9C();
      long long v76 = v173;
      uint64_t v77 = v111;
      sub_2147AD528();
      if (v77) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v139 + 8))(v76, v140);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 14;
      goto LABEL_63;
    case 0xF:
      char v193 = 15;
      sub_214726C48();
      long long v78 = v174;
      uint64_t v79 = v111;
      sub_2147AD528();
      if (v79) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v141 + 8))(v78, v142);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 15;
      goto LABEL_63;
    case 0x10:
      char v193 = 16;
      sub_214726BF4();
      uint64_t v80 = v175;
      uint64_t v81 = v111;
      sub_2147AD528();
      if (v81) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v143 + 8))(v80, v144);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 16;
      goto LABEL_63;
    case 0x11:
      char v193 = 17;
      sub_214726BA0();
      uint64_t v82 = v176;
      uint64_t v83 = v111;
      sub_2147AD528();
      if (v83) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v145 + 8))(v82, v146);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 17;
      goto LABEL_63;
    case 0x12:
      char v193 = 18;
      sub_214726B4C();
      id v84 = v177;
      uint64_t v85 = v111;
      sub_2147AD528();
      if (v85) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v147 + 8))(v84, v148);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 18;
      goto LABEL_63;
    case 0x13:
      char v193 = 19;
      sub_214726AF8();
      uint64_t v86 = v178;
      uint64_t v87 = v111;
      sub_2147AD528();
      if (v87) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v149 + 8))(v86, v150);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 19;
      goto LABEL_63;
    case 0x14:
      char v193 = 20;
      sub_214726AA4();
      uint64_t v88 = v179;
      uint64_t v89 = v111;
      sub_2147AD528();
      if (v89) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v151 + 8))(v88, v152);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 20;
      goto LABEL_63;
    case 0x15:
      char v193 = 21;
      sub_214726A50();
      v90 = v180;
      uint64_t v91 = v111;
      sub_2147AD528();
      if (v91) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v153 + 8))(v90, v154);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 21;
      goto LABEL_63;
    case 0x16:
      char v193 = 22;
      sub_2147269FC();
      uint64_t v92 = v181;
      uint64_t v93 = v111;
      sub_2147AD528();
      if (v93) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v155 + 8))(v92, v156);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 22;
      goto LABEL_63;
    case 0x17:
      char v193 = 23;
      sub_2147269A8();
      uint64_t v94 = v182;
      uint64_t v95 = v111;
      sub_2147AD528();
      if (v95) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v157 + 8))(v94, v158);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 23;
      goto LABEL_63;
    case 0x18:
      char v193 = 24;
      sub_214726954();
      v96 = v183;
      uint64_t v97 = v111;
      sub_2147AD528();
      if (v97) {
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v159 + 8))(v96, v160);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 24;
      goto LABEL_63;
    case 0x19:
      char v193 = 25;
      sub_214726900();
      uint64_t v98 = v184;
      uint64_t v99 = v111;
      sub_2147AD528();
      if (v99) {
        goto LABEL_56;
      }
      uint64_t v103 = v162;
      uint64_t v104 = sub_2147AD558();
      uint64_t v105 = v192;
      uint64_t v47 = v104;
      uint64_t v48 = v107;
      (*(void (**)(char *, uint64_t))(v163 + 8))(v98, v103);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v36, v33);
      goto LABEL_63;
    case 0x1A:
      char v193 = 26;
      sub_2147268AC();
      uint64_t v102 = v111;
      sub_2147AD528();
      if (v102)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
        uint64_t v100 = (uint64_t)v191;
        return __swift_destroy_boxed_opaque_existential_1(v100);
      }
      (*(void (**)(char *, uint64_t))(v161 + 8))(v42, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 25;
      uint64_t v100 = (uint64_t)v191;
      uint64_t v106 = v185;
      goto LABEL_64;
    default:
      char v193 = 0;
      sub_214727134();
      uint64_t v45 = v109;
      uint64_t v46 = v111;
      sub_2147AD528();
      if (v46)
      {
LABEL_56:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
        goto LABEL_57;
      }
      (*(void (**)(char *, uint64_t))(v112 + 8))(v45, v108);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v36, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 0;
LABEL_63:
      uint64_t v100 = (uint64_t)v191;
      uint64_t v106 = v185;
LABEL_64:
      *uint64_t v106 = v47;
      v106[1] = v48;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v100);
}

uint64_t sub_2147255A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CredentialType.init(from:)(a1, a2);
}

uint64_t sub_2147255C0(void *a1)
{
  return CredentialType.encode(to:)(a1);
}

void sub_2147255D8(void *a1@<X8>)
{
  *a1 = &unk_26C55EE08;
}

uint64_t sub_2147255EC(uint64_t a1, uint64_t a2)
{
  return sub_214725600(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_214725600(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_21471ED54(a3, a4);
  sub_21471ED54(a3, a4);
  sub_2147ACF78();
  uint64_t v8 = sub_2147ACF88();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  sub_2147201A0(a3, a4);
  sub_21471ED54(a1, a2);
  sub_21471ED54(a1, a2);
  sub_2147ACF78();
  uint64_t v11 = sub_2147ACF88();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  sub_2147201A0(a1, a2);
  if (v8 == v11 && v10 == v13)
  {
    swift_bridgeObjectRelease_n();
    char v14 = 1;
  }
  else
  {
    char v15 = sub_2147AD668();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = v15 ^ 1;
  }
  return v14 & 1;
}

uint64_t sub_214725744(uint64_t a1, uint64_t a2)
{
  return sub_214725758(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_214725758(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_21471ED54(a1, a2);
  sub_21471ED54(a1, a2);
  sub_2147ACF78();
  uint64_t v8 = sub_2147ACF88();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  sub_2147201A0(a1, a2);
  sub_21471ED54(a3, a4);
  sub_21471ED54(a3, a4);
  sub_2147ACF78();
  uint64_t v11 = sub_2147ACF88();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  sub_2147201A0(a3, a4);
  if (v8 == v11 && v10 == v13)
  {
    swift_bridgeObjectRelease_n();
    char v14 = 1;
  }
  else
  {
    char v15 = sub_2147AD668();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = v15 ^ 1;
  }
  return v14 & 1;
}

uint64_t sub_214725894(uint64_t a1, uint64_t a2)
{
  return sub_2147258A8(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_2147258A8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_21471ED54(a3, a4);
  sub_21471ED54(a3, a4);
  sub_2147ACF78();
  uint64_t v8 = sub_2147ACF88();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  sub_2147201A0(a3, a4);
  sub_21471ED54(a1, a2);
  sub_21471ED54(a1, a2);
  sub_2147ACF78();
  uint64_t v11 = sub_2147ACF88();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  sub_2147201A0(a1, a2);
  if (v8 == v11 && v10 == v13) {
    char v14 = 0;
  }
  else {
    char v14 = sub_2147AD668();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

uint64_t sub_2147259E4()
{
  return sub_2147AD748();
}

uint64_t sub_214725A34()
{
  return sub_2147AD748();
}

uint64_t sub_214725A7C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_214725A84(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2147AD4B8();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_214725AE4()
{
  return sub_2147ACDC8();
}

uint64_t sub_214725B30()
{
  return sub_2147ACDB8();
}

uint64_t sub_214725B88()
{
  return sub_2147AD748();
}

uint64_t sub_214725BF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA06B8](v4, v5, a3, WitnessTable);
}

void sub_214725C5C(void *a1, char a2, void *a3)
{
  uint64_t v6 = a1[2];
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_23;
  }
  unint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[4];
  sub_21471ED54(v9, v7);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_23;
  }
  uint64_t v10 = (void *)*a3;
  unint64_t v11 = sub_21477EA08(v9, v7);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  BOOL v15 = __OFADD__(v13, v14);
  uint64_t v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  LOBYTE(v17) = v12;
  if (v10[3] < v16)
  {
    sub_214791318(v16, a2 & 1);
    unint64_t v11 = sub_21477EA08(v9, v7);
    if ((v17 & 1) == (v18 & 1)) {
      goto LABEL_8;
    }
LABEL_6:
    unint64_t v11 = sub_2147AD6B8();
    __break(1u);
  }
  if (a2)
  {
LABEL_8:
    if (v17) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  unint64_t v21 = v11;
  sub_2147902E0();
  unint64_t v11 = v21;
  if (v17)
  {
LABEL_9:
    uint64_t v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2147201A0(v9, v7);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_28;
  }
LABEL_12:
  uint64_t v22 = (void *)*a3;
  *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
  uint64_t v23 = (uint64_t *)(v22[6] + 16 * v11);
  *uint64_t v23 = v9;
  v23[1] = v7;
  *(void *)(v22[7] + 8 * v11) = v8;
  uint64_t v24 = v22[2];
  BOOL v15 = __OFADD__(v24, 1);
  uint64_t v25 = v24 + 1;
  if (v15)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_2147AD348();
    sub_2147ACFC8();
    sub_2147AD3F8();
    sub_2147ACFC8();
    sub_2147AD4A8();
    __break(1u);
    return;
  }
  v22[2] = v25;
  if (v6 != 1)
  {
    uint64_t v17 = a1 + 9;
    unint64_t v26 = 1;
    while (v26 < a1[2])
    {
      unint64_t v7 = *(v17 - 1);
      uint64_t v8 = *v17;
      uint64_t v9 = *(v17 - 2);
      sub_21471ED54(v9, v7);
      swift_bridgeObjectRetain();
      if (!v8) {
        goto LABEL_23;
      }
      uint64_t v27 = (void *)*a3;
      unint64_t v28 = sub_21477EA08(v9, v7);
      uint64_t v30 = v27[2];
      BOOL v31 = (v29 & 1) == 0;
      BOOL v15 = __OFADD__(v30, v31);
      uint64_t v32 = v30 + v31;
      if (v15) {
        goto LABEL_25;
      }
      a2 = v29;
      if (v27[3] < v32)
      {
        sub_214791318(v32, 1);
        unint64_t v28 = sub_21477EA08(v9, v7);
        if ((a2 & 1) != (v33 & 1)) {
          goto LABEL_6;
        }
      }
      if (a2) {
        goto LABEL_9;
      }
      uint64_t v34 = (void *)*a3;
      *(void *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
      uint64_t v35 = (uint64_t *)(v34[6] + 16 * v28);
      *uint64_t v35 = v9;
      v35[1] = v7;
      *(void *)(v34[7] + 8 * v28) = v8;
      uint64_t v36 = v34[2];
      BOOL v15 = __OFADD__(v36, 1);
      uint64_t v37 = v36 + 1;
      if (v15) {
        goto LABEL_26;
      }
      ++v26;
      v34[2] = v37;
      v17 += 3;
      if (v6 == v26) {
        goto LABEL_23;
      }
    }
    goto LABEL_27;
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
}

uint64_t sub_214726010(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_21475FF0C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

unint64_t sub_21472616C(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21472618C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v27 = MEMORY[0x263F8EE78];
    sub_21474D35C(0, v3, 0);
    uint64_t v4 = v27;
    uint64_t v6 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      unint64_t v8 = *v6;
      sub_21471ED54(v7, *v6);
      sub_21471ED54(v7, v8);
      sub_21471ED54(v7, v8);
      sub_2147ACF78();
      uint64_t v9 = sub_2147ACF88();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      sub_2147201A0(v7, v8);
      if (*(void *)(a3 + 16))
      {
        uint64_t v12 = sub_21477EA80(v9, v11);
        uint64_t v13 = MEMORY[0x263F8EE78];
        if (v14)
        {
          uint64_t v13 = *(void *)(*(void *)(a3 + 56) + 32 * v12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v13 = MEMORY[0x263F8EE78];
      }
      uint64_t v25 = v13;
      swift_bridgeObjectRelease();
      sub_21471ED54(v7, v8);
      sub_21471ED54(v7, v8);
      sub_2147ACF78();
      uint64_t v15 = sub_2147ACF88();
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      sub_2147201A0(v7, v8);
      if (*(void *)(a3 + 16) && (uint64_t v18 = sub_21477EA80(v15, v17), (v19 & 1) != 0))
      {
        uint64_t v20 = *(void *)(*(void *)(a3 + 56) + 32 * v18 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v20 = MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRelease();
      sub_214726010(v20);
      unint64_t v22 = *(void *)(v27 + 16);
      unint64_t v21 = *(void *)(v27 + 24);
      if (v22 >= v21 >> 1) {
        sub_21474D35C(v21 > 1, v22 + 1, 1);
      }
      v6 += 2;
      *(void *)(v27 + 16) = v22 + 1;
      uint64_t v23 = (void *)(v27 + 24 * v22);
      v23[4] = v7;
      v23[5] = v8;
      void v23[6] = v25;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t _s9SEService14CredentialTypeO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5) {
        goto LABEL_55;
      }
      unint64_t v3 = 0;
      char v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1) {
        goto LABEL_55;
      }
      unint64_t v3 = 1;
      char v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 14;
      break;
    case 0xFuLL:
      if (v5 != 15) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 15;
      break;
    case 0x10uLL:
      if (v5 != 16) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 16;
      break;
    case 0x11uLL:
      if (v5 != 17) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 17;
      break;
    case 0x12uLL:
      if (v5 != 18) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 18;
      break;
    case 0x13uLL:
      if (v5 != 19) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 19;
      break;
    case 0x14uLL:
      if (v5 != 20) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 20;
      break;
    case 0x15uLL:
      if (v5 != 21) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 21;
      break;
    case 0x16uLL:
      if (v5 != 22) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 22;
      break;
    case 0x17uLL:
      if (v5 != 23) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 23;
      break;
    case 0x18uLL:
      if (v5 != 24) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 24;
      break;
    case 0x19uLL:
      if (v5 != 25) {
        goto LABEL_55;
      }
      char v6 = 1;
      unint64_t v3 = 25;
      break;
    default:
      if (v5 >= 0x1A)
      {
        if (v2 == v4 && v3 == v5) {
          char v6 = 1;
        }
        else {
          char v6 = sub_2147AD668();
        }
      }
      else
      {
LABEL_55:
        char v6 = 0;
      }
      sub_21471ED54(v4, v5);
      sub_21471ED54(v2, v3);
      break;
  }
  sub_2147201A0(v2, v3);
  sub_2147201A0(v4, v5);
  return v6 & 1;
}

uint64_t _s9SEService14CredentialTypeO1loiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_21471ED54(*a1, v3);
  sub_21471ED54(v2, v3);
  sub_2147ACF78();
  uint64_t v6 = sub_2147ACF88();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  sub_2147201A0(v2, v3);
  sub_21471ED54(v4, v5);
  sub_21471ED54(v4, v5);
  sub_2147ACF78();
  uint64_t v9 = sub_2147ACF88();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  sub_2147201A0(v4, v5);
  if (v6 == v9 && v8 == v11) {
    char v12 = 0;
  }
  else {
    char v12 = sub_2147AD668();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

unint64_t sub_214726858()
{
  unint64_t result = qword_26781C0D8;
  if (!qword_26781C0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C0D8);
  }
  return result;
}

unint64_t sub_2147268AC()
{
  unint64_t result = qword_26781C0E0;
  if (!qword_26781C0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C0E0);
  }
  return result;
}

unint64_t sub_214726900()
{
  unint64_t result = qword_26781C0E8;
  if (!qword_26781C0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C0E8);
  }
  return result;
}

unint64_t sub_214726954()
{
  unint64_t result = qword_26781C0F0;
  if (!qword_26781C0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C0F0);
  }
  return result;
}

unint64_t sub_2147269A8()
{
  unint64_t result = qword_26781C0F8;
  if (!qword_26781C0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C0F8);
  }
  return result;
}

unint64_t sub_2147269FC()
{
  unint64_t result = qword_26781C100;
  if (!qword_26781C100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C100);
  }
  return result;
}

unint64_t sub_214726A50()
{
  unint64_t result = qword_26781C108;
  if (!qword_26781C108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C108);
  }
  return result;
}

unint64_t sub_214726AA4()
{
  unint64_t result = qword_26781C110;
  if (!qword_26781C110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C110);
  }
  return result;
}

unint64_t sub_214726AF8()
{
  unint64_t result = qword_26781C118;
  if (!qword_26781C118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C118);
  }
  return result;
}

unint64_t sub_214726B4C()
{
  unint64_t result = qword_26781C120;
  if (!qword_26781C120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C120);
  }
  return result;
}

unint64_t sub_214726BA0()
{
  unint64_t result = qword_26781C128;
  if (!qword_26781C128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C128);
  }
  return result;
}

unint64_t sub_214726BF4()
{
  unint64_t result = qword_26781C130;
  if (!qword_26781C130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C130);
  }
  return result;
}

unint64_t sub_214726C48()
{
  unint64_t result = qword_26781C138;
  if (!qword_26781C138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C138);
  }
  return result;
}

unint64_t sub_214726C9C()
{
  unint64_t result = qword_26781C140;
  if (!qword_26781C140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C140);
  }
  return result;
}

unint64_t sub_214726CF0()
{
  unint64_t result = qword_26781C148;
  if (!qword_26781C148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C148);
  }
  return result;
}

unint64_t sub_214726D44()
{
  unint64_t result = qword_26781C150;
  if (!qword_26781C150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C150);
  }
  return result;
}

unint64_t sub_214726D98()
{
  unint64_t result = qword_26781C158;
  if (!qword_26781C158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C158);
  }
  return result;
}

unint64_t sub_214726DEC()
{
  unint64_t result = qword_26781C160;
  if (!qword_26781C160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C160);
  }
  return result;
}

unint64_t sub_214726E40()
{
  unint64_t result = qword_26781C168;
  if (!qword_26781C168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C168);
  }
  return result;
}

unint64_t sub_214726E94()
{
  unint64_t result = qword_26781C170;
  if (!qword_26781C170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C170);
  }
  return result;
}

unint64_t sub_214726EE8()
{
  unint64_t result = qword_26781C178;
  if (!qword_26781C178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C178);
  }
  return result;
}

unint64_t sub_214726F3C()
{
  unint64_t result = qword_26781C180;
  if (!qword_26781C180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C180);
  }
  return result;
}

unint64_t sub_214726F90()
{
  unint64_t result = qword_26781C188;
  if (!qword_26781C188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C188);
  }
  return result;
}

unint64_t sub_214726FE4()
{
  unint64_t result = qword_26781C190;
  if (!qword_26781C190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C190);
  }
  return result;
}

unint64_t sub_214727038()
{
  unint64_t result = qword_26781C198;
  if (!qword_26781C198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C198);
  }
  return result;
}

unint64_t sub_21472708C()
{
  unint64_t result = qword_26781C1A0;
  if (!qword_26781C1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C1A0);
  }
  return result;
}

unint64_t sub_2147270E0()
{
  unint64_t result = qword_26781C1A8;
  if (!qword_26781C1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C1A8);
  }
  return result;
}

unint64_t sub_214727134()
{
  unint64_t result = qword_26781C1B0;
  if (!qword_26781C1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C1B0);
  }
  return result;
}

uint64_t sub_214727188()
{
  return sub_2147271C4(&qword_26781C2A0, &qword_26781C2A8);
}

uint64_t sub_2147271C4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21472720C()
{
  unint64_t result = qword_26781C2B0;
  if (!qword_26781C2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C2B0);
  }
  return result;
}

unint64_t destroy for CredentialType(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9SEService14CredentialTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for CredentialType(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for CredentialType(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CredentialType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFE5 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483622);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 25;
  if (v4 >= 0x1B) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CredentialType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFE6)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483622;
    if (a3 >= 0x7FFFFFE6) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFE6) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 25;
    }
  }
  return result;
}

uint64_t sub_214727484(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_2147274A0(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CredentialType()
{
  return &type metadata for CredentialType;
}

uint64_t getEnumTagSinglePayload for CredentialType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE6) {
    goto LABEL_17;
  }
  if (a2 + 26 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 26) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 26;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 26;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 26;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1B;
  int v8 = v6 - 27;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CredentialType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 26 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 26) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE5)
  {
    unsigned int v6 = ((a2 - 230) >> 8) + 1;
    *__n128 result = a2 + 26;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21472762CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 26;
        break;
    }
  }
  return result;
}

uint64_t sub_214727654(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_21472765C(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CredentialType.CodingKeys()
{
  return &type metadata for CredentialType.CodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.ArgonCodingKeys()
{
  return &type metadata for CredentialType.ArgonCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.IronCodingKeys()
{
  return &type metadata for CredentialType.IronCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.PioneerCodingKeys()
{
  return &type metadata for CredentialType.PioneerCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.OrbitCodingKeys()
{
  return &type metadata for CredentialType.OrbitCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.LuauCodingKeys()
{
  return &type metadata for CredentialType.LuauCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.SunspriteCodingKeys()
{
  return &type metadata for CredentialType.SunspriteCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.XenonCodingKeys()
{
  return &type metadata for CredentialType.XenonCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.NeonCodingKeys()
{
  return &type metadata for CredentialType.NeonCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.HenosisCodingKeys()
{
  return &type metadata for CredentialType.HenosisCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.HeliumCodingKeys()
{
  return &type metadata for CredentialType.HeliumCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.KryptonCodingKeys()
{
  return &type metadata for CredentialType.KryptonCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.CopernicusHomeCodingKeys()
{
  return &type metadata for CredentialType.CopernicusHomeCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.CopernicusCarCodingKeys()
{
  return &type metadata for CredentialType.CopernicusCarCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.CopernicusAccessCodingKeys()
{
  return &type metadata for CredentialType.CopernicusAccessCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.CopernicusAliroCodingKeys()
{
  return &type metadata for CredentialType.CopernicusAliroCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.ShubaoCodingKeys()
{
  return &type metadata for CredentialType.ShubaoCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.SodiumCodingKeys()
{
  return &type metadata for CredentialType.SodiumCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.LithiumCodingKeys()
{
  return &type metadata for CredentialType.LithiumCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.NightfuryCodingKeys()
{
  return &type metadata for CredentialType.NightfuryCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.AtlasCodingKeys()
{
  return &type metadata for CredentialType.AtlasCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.MifareCodingKeys()
{
  return &type metadata for CredentialType.MifareCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.SlalomCodingKeys()
{
  return &type metadata for CredentialType.SlalomCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.HaishanCodingKeys()
{
  return &type metadata for CredentialType.HaishanCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.PTCCodingKeys()
{
  return &type metadata for CredentialType.PTCCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.AlphonsoCodingKeys()
{
  return &type metadata for CredentialType.AlphonsoCodingKeys;
}

uint64_t getEnumTagSinglePayload for CredentialType.ViennaCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for CredentialType.ViennaCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2147278F0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214727918()
{
  return 0;
}

ValueMetadata *type metadata accessor for CredentialType.ViennaCodingKeys()
{
  return &type metadata for CredentialType.ViennaCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialType.NightmareCodingKeys()
{
  return &type metadata for CredentialType.NightmareCodingKeys;
}

unint64_t sub_214727944()
{
  unint64_t result = qword_26781C2B8;
  if (!qword_26781C2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C2B8);
  }
  return result;
}

unint64_t sub_21472799C()
{
  unint64_t result = qword_26781C2C0;
  if (!qword_26781C2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C2C0);
  }
  return result;
}

unint64_t sub_2147279F4()
{
  unint64_t result = qword_26781C2C8;
  if (!qword_26781C2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C2C8);
  }
  return result;
}

unint64_t sub_214727A4C()
{
  unint64_t result = qword_26781C2D0;
  if (!qword_26781C2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C2D0);
  }
  return result;
}

unint64_t sub_214727AA4()
{
  unint64_t result = qword_26781C2D8;
  if (!qword_26781C2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C2D8);
  }
  return result;
}

unint64_t sub_214727AFC()
{
  unint64_t result = qword_26781C2E0;
  if (!qword_26781C2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C2E0);
  }
  return result;
}

unint64_t sub_214727B54()
{
  unint64_t result = qword_26781C2E8;
  if (!qword_26781C2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C2E8);
  }
  return result;
}

unint64_t sub_214727BAC()
{
  unint64_t result = qword_26781C2F0;
  if (!qword_26781C2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C2F0);
  }
  return result;
}

unint64_t sub_214727C04()
{
  unint64_t result = qword_26781C2F8;
  if (!qword_26781C2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C2F8);
  }
  return result;
}

unint64_t sub_214727C5C()
{
  unint64_t result = qword_26781C300;
  if (!qword_26781C300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C300);
  }
  return result;
}

unint64_t sub_214727CB4()
{
  unint64_t result = qword_26781C308;
  if (!qword_26781C308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C308);
  }
  return result;
}

unint64_t sub_214727D0C()
{
  unint64_t result = qword_26781C310;
  if (!qword_26781C310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C310);
  }
  return result;
}

unint64_t sub_214727D64()
{
  unint64_t result = qword_26781C318;
  if (!qword_26781C318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C318);
  }
  return result;
}

unint64_t sub_214727DBC()
{
  unint64_t result = qword_26781C320;
  if (!qword_26781C320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C320);
  }
  return result;
}

unint64_t sub_214727E14()
{
  unint64_t result = qword_26781C328;
  if (!qword_26781C328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C328);
  }
  return result;
}

unint64_t sub_214727E6C()
{
  unint64_t result = qword_26781C330;
  if (!qword_26781C330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C330);
  }
  return result;
}

unint64_t sub_214727EC4()
{
  unint64_t result = qword_26781C338;
  if (!qword_26781C338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C338);
  }
  return result;
}

unint64_t sub_214727F1C()
{
  unint64_t result = qword_26781C340;
  if (!qword_26781C340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C340);
  }
  return result;
}

unint64_t sub_214727F74()
{
  unint64_t result = qword_26781C348;
  if (!qword_26781C348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C348);
  }
  return result;
}

unint64_t sub_214727FCC()
{
  unint64_t result = qword_26781C350;
  if (!qword_26781C350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C350);
  }
  return result;
}

unint64_t sub_214728024()
{
  unint64_t result = qword_26781C358;
  if (!qword_26781C358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C358);
  }
  return result;
}

unint64_t sub_21472807C()
{
  unint64_t result = qword_26781C360;
  if (!qword_26781C360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C360);
  }
  return result;
}

unint64_t sub_2147280D4()
{
  unint64_t result = qword_26781C368;
  if (!qword_26781C368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C368);
  }
  return result;
}

unint64_t sub_21472812C()
{
  unint64_t result = qword_26781C370;
  if (!qword_26781C370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C370);
  }
  return result;
}

unint64_t sub_214728184()
{
  unint64_t result = qword_26781C378;
  if (!qword_26781C378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C378);
  }
  return result;
}

unint64_t sub_2147281DC()
{
  unint64_t result = qword_26781C380;
  if (!qword_26781C380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C380);
  }
  return result;
}

unint64_t sub_214728234()
{
  unint64_t result = qword_26781C388;
  if (!qword_26781C388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C388);
  }
  return result;
}

unint64_t sub_21472828C()
{
  unint64_t result = qword_26781C390;
  if (!qword_26781C390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C390);
  }
  return result;
}

unint64_t sub_2147282E4()
{
  unint64_t result = qword_26781C398;
  if (!qword_26781C398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C398);
  }
  return result;
}

unint64_t sub_21472833C()
{
  unint64_t result = qword_26781C3A0;
  if (!qword_26781C3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3A0);
  }
  return result;
}

unint64_t sub_214728394()
{
  unint64_t result = qword_26781C3A8;
  if (!qword_26781C3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3A8);
  }
  return result;
}

unint64_t sub_2147283EC()
{
  unint64_t result = qword_26781C3B0;
  if (!qword_26781C3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3B0);
  }
  return result;
}

unint64_t sub_214728444()
{
  unint64_t result = qword_26781C3B8;
  if (!qword_26781C3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3B8);
  }
  return result;
}

unint64_t sub_21472849C()
{
  unint64_t result = qword_26781C3C0;
  if (!qword_26781C3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3C0);
  }
  return result;
}

unint64_t sub_2147284F4()
{
  unint64_t result = qword_26781C3C8;
  if (!qword_26781C3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3C8);
  }
  return result;
}

unint64_t sub_21472854C()
{
  unint64_t result = qword_26781C3D0;
  if (!qword_26781C3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3D0);
  }
  return result;
}

unint64_t sub_2147285A4()
{
  unint64_t result = qword_26781C3D8;
  if (!qword_26781C3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3D8);
  }
  return result;
}

unint64_t sub_2147285FC()
{
  unint64_t result = qword_26781C3E0;
  if (!qword_26781C3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3E0);
  }
  return result;
}

unint64_t sub_214728654()
{
  unint64_t result = qword_26781C3E8;
  if (!qword_26781C3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3E8);
  }
  return result;
}

unint64_t sub_2147286AC()
{
  unint64_t result = qword_26781C3F0;
  if (!qword_26781C3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3F0);
  }
  return result;
}

unint64_t sub_214728704()
{
  unint64_t result = qword_26781C3F8;
  if (!qword_26781C3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C3F8);
  }
  return result;
}

unint64_t sub_21472875C()
{
  unint64_t result = qword_26781C400;
  if (!qword_26781C400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C400);
  }
  return result;
}

unint64_t sub_2147287B4()
{
  unint64_t result = qword_26781C408;
  if (!qword_26781C408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C408);
  }
  return result;
}

unint64_t sub_21472880C()
{
  unint64_t result = qword_26781C410;
  if (!qword_26781C410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C410);
  }
  return result;
}

unint64_t sub_214728864()
{
  unint64_t result = qword_26781C418;
  if (!qword_26781C418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C418);
  }
  return result;
}

unint64_t sub_2147288BC()
{
  unint64_t result = qword_26781C420;
  if (!qword_26781C420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C420);
  }
  return result;
}

unint64_t sub_214728914()
{
  unint64_t result = qword_26781C428;
  if (!qword_26781C428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C428);
  }
  return result;
}

unint64_t sub_21472896C()
{
  unint64_t result = qword_26781C430;
  if (!qword_26781C430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C430);
  }
  return result;
}

unint64_t sub_2147289C4()
{
  unint64_t result = qword_26781C438;
  if (!qword_26781C438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C438);
  }
  return result;
}

unint64_t sub_214728A1C()
{
  unint64_t result = qword_26781C440;
  if (!qword_26781C440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C440);
  }
  return result;
}

unint64_t sub_214728A74()
{
  unint64_t result = qword_26781C448;
  if (!qword_26781C448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C448);
  }
  return result;
}

unint64_t sub_214728ACC()
{
  unint64_t result = qword_26781C450;
  if (!qword_26781C450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C450);
  }
  return result;
}

unint64_t sub_214728B24()
{
  unint64_t result = qword_26781C458;
  if (!qword_26781C458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C458);
  }
  return result;
}

unint64_t sub_214728B7C()
{
  unint64_t result = qword_26781C460;
  if (!qword_26781C460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C460);
  }
  return result;
}

unint64_t sub_214728BD4()
{
  unint64_t result = qword_26781C468;
  if (!qword_26781C468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C468);
  }
  return result;
}

unint64_t sub_214728C2C()
{
  unint64_t result = qword_26781C470;
  if (!qword_26781C470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C470);
  }
  return result;
}

unint64_t sub_214728C84()
{
  unint64_t result = qword_26781C478;
  if (!qword_26781C478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C478);
  }
  return result;
}

unint64_t sub_214728CDC()
{
  unint64_t result = qword_26781C480;
  if (!qword_26781C480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C480);
  }
  return result;
}

uint64_t sub_214728D30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F677241 && a2 == 0xE500000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1852797513 && a2 == 0xE400000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265656E6F6950 && a2 == 0xE700000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746962724FLL && a2 == 0xE500000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1969321292 && a2 == 0xE400000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74697270736E7553 && a2 == 0xE900000000000065 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6F6E6558 && a2 == 0xE500000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1852794190 && a2 == 0xE400000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7369736F6E6548 && a2 == 0xE700000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6D75696C6548 && a2 == 0xE600000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E6F747079724BLL && a2 == 0xE700000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x63696E7265706F43 && a2 == 0xEE00656D6F487375 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x63696E7265706F43 && a2 == 0xED00007261437375 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002147BE050 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x63696E7265706F43 && a2 == 0xEF6F72696C417375 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6F6162756853 && a2 == 0xE600000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6D7569646F53 && a2 == 0xE600000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6D75696874694CLL && a2 == 0xE700000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x727566746867694ELL && a2 == 0xE900000000000079 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x73616C7441 && a2 == 0xE500000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x65726166694DLL && a2 == 0xE600000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x6D6F6C616C53 && a2 == 0xE600000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x6E616873696148 && a2 == 0xE700000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 4412496 && a2 == 0xE300000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x6F736E6F68706C41 && a2 == 0xE800000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x616E6E656956 && a2 == 0xE600000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x72616D746867694ELL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 26;
    }
    else {
      return 27;
    }
  }
}

uint64_t sub_2147297A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000002147BE070)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_2147AD668();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void sub_214729854(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_21472989C()
{
  return sub_214729904(&qword_26781C498);
}

uint64_t sub_2147298D0()
{
  return sub_214729904((unint64_t *)&unk_26781C4A0);
}

uint64_t sub_214729904(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CFString(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t SERError.failureReason.getter()
{
  unint64_t v1 = *(void **)v0;
  char v2 = *(void **)(v0 + 8);
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0x652074616D726F46;
      goto LABEL_7;
    case 2:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD00000000000001FLL;
      goto LABEL_7;
    case 3:
      id v5 = v1;
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD00000000000001FLL;
      swift_getErrorValue();
      sub_2147AD6C8();
      sub_2147ACFC8();
      swift_bridgeObjectRelease();
      sub_214729B9C(v1, v2, 3);
      return v6;
    case 4:
      unint64_t result = 0xD000000000000013;
      switch((unint64_t)v1)
      {
        case 1uLL:
          unint64_t result = 0xD00000000000004ELL;
          break;
        case 2uLL:
          unint64_t result = 0x6174614465726F43;
          break;
        case 3uLL:
          unint64_t result = 0xD000000000000050;
          break;
        default:
          return result;
      }
      return result;
    default:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000019;
LABEL_7:
      unint64_t v6 = v3;
      sub_2147ACFC8();
      return v6;
  }
}

void sub_214729B9C(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      break;
    case 3:

      break;
    default:
      return;
  }
}

unint64_t sub_214729BF0()
{
  unint64_t result = qword_26781C4C0;
  if (!qword_26781C4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C4C0);
  }
  return result;
}

id sub_214729C68(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for SERError(uint64_t a1)
{
}

uint64_t _s9SEService8SERErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_214729C68(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SERError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_214729C68(*(id *)a2, v4, v5);
  unint64_t v6 = *(void **)a1;
  BOOL v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_214729B9C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SERError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_214729B9C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SERError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SERError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_214729E40(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_214729E58(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SERError()
{
  return &type metadata for SERError;
}

id Reservation.__allocating_init(uuid:type:metadata:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  char v12 = &v9[OBJC_IVAR____TtC9SEService11Reservation_uuid];
  uint64_t v13 = sub_2147ACD88();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  uint64_t v15 = &v9[OBJC_IVAR____TtC9SEService11Reservation_type];
  *(void *)uint64_t v15 = v10;
  *((void *)v15 + 1) = v11;
  uint64_t v16 = &v9[OBJC_IVAR____TtC9SEService11Reservation_metadata];
  *(void *)uint64_t v16 = a3;
  *((void *)v16 + 1) = a4;
  v19.receiver = v9;
  v19.super_class = v4;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v17;
}

id Reservation.init(uuid:type:metadata:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  char v12 = &v4[OBJC_IVAR____TtC9SEService11Reservation_uuid];
  uint64_t v13 = sub_2147ACD88();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  uint64_t v15 = &v4[OBJC_IVAR____TtC9SEService11Reservation_type];
  *(void *)uint64_t v15 = v10;
  *((void *)v15 + 1) = v11;
  uint64_t v16 = &v4[OBJC_IVAR____TtC9SEService11Reservation_metadata];
  *(void *)uint64_t v16 = a3;
  *((void *)v16 + 1) = a4;
  v19.receiver = v4;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v17;
}

id Reservation.decodedMetadata.getter()
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v0 = self;
  unint64_t v1 = (void *)sub_2147ACCA8();
  id v9 = 0;
  id v2 = objc_msgSend(v0, sel_propertyListWithData_options_format_error_, v1, 0, 0, &v9);

  id v3 = v9;
  if (v2)
  {
    sub_2147AD288();
    swift_unknownObjectRelease();
    sub_21472B428((uint64_t)v11, (uint64_t)&v9);
    sub_21472C6F4(0, &qword_26781C4B8);
    if (swift_dynamicCast())
    {
      id v2 = v8;
    }
    else
    {
      id v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      sub_2147AD348();
      sub_2147ACFC8();
      sub_2147AD3F8();
      sub_2147ACFC8();
      id v2 = v9;
      unint64_t v5 = v10;
      sub_214729BF0();
      swift_allocError();
      *(void *)uint64_t v6 = v2;
      *(void *)(v6 + 8) = v5;
      *(unsigned char *)(v6 + 16) = 1;
      swift_willThrow();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    int v4 = v3;
    sub_2147ACC48();

    swift_willThrow();
  }
  return v2;
}

uint64_t Reservation.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_21472B484(a1, (uint64_t)v11);
  if (!v12)
  {
    sub_21472C730((uint64_t)v11, &qword_26781C4C8);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    char v8 = 0;
    return v8 & 1;
  }
  id v3 = (char *)v10;
  if ((sub_2147ACD48() & 1) == 0
    || (*(_OWORD *)uint64_t v11 = *(_OWORD *)(v1 + OBJC_IVAR____TtC9SEService11Reservation_type),
        long long v10 = *(_OWORD *)(v10 + OBJC_IVAR____TtC9SEService11Reservation_type),
        (_s9SEService14CredentialTypeO2eeoiySbAC_ACtFZ_0(v11, (uint64_t *)&v10) & 1) == 0))
  {

    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9SEService11Reservation_metadata);
  unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC9SEService11Reservation_metadata + 8);
  uint64_t v6 = *(void *)&v3[OBJC_IVAR____TtC9SEService11Reservation_metadata];
  unint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC9SEService11Reservation_metadata + 8];
  sub_21472BBA4(v6, v7);
  char v8 = sub_21472BA48(v4, v5, v6, v7);
  sub_21472BBFC(v6, v7);

  return v8 & 1;
}

Swift::Void __swiftcall Reservation.encode(with:)(NSCoder with)
{
  sub_2147ACD18();
  CredentialType.rawValue.getter();
  id v2 = (void *)sub_2147ACF38();
  swift_bridgeObjectRelease();
  id v3 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v2 forKey:v3];

  uint64_t v4 = (void *)sub_2147ACF38();
  swift_bridgeObjectRelease();
  unint64_t v5 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v4 forKey:v5];

  uint64_t v6 = (void *)sub_2147ACCA8();
  id v7 = (id)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v6 forKey:v7];
}

id Reservation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_21472BC54();

  return v4;
}

id Reservation.init(coder:)(void *a1)
{
  id v2 = sub_21472BC54();

  return v2;
}

uint64_t Reservation.description.getter()
{
  sub_2147AD348();
  swift_bridgeObjectRelease();
  strcpy((char *)v4, "Reservation ");
  BYTE5(v4[1]) = 0;
  HIWORD(v4[1]) = -5120;
  sub_2147ACD28();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9SEService11Reservation_type);
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC9SEService11Reservation_type + 8);
  sub_21471ED54(v2, v3);
  sub_21471ED54(v2, v3);
  sub_2147ACF78();
  sub_2147ACF88();
  swift_bridgeObjectRelease();
  sub_2147201A0(v2, v3);
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  sub_2147ACC58();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  return v4[0];
}

uint64_t Reservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9SEService11Reservation_uuid;
  uint64_t v4 = sub_2147ACD88();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Reservation.type.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9SEService11Reservation_type);
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9SEService11Reservation_type + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_21471ED54(v2, v3);
}

uint64_t Reservation.metadata.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService11Reservation_metadata);
  sub_21472BBA4(v1, *(void *)(v0 + OBJC_IVAR____TtC9SEService11Reservation_metadata + 8));
  return v1;
}

uint64_t static Reservation.supportsSecureCoding.getter()
{
  return byte_26781C4B0;
}

uint64_t static Reservation.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26781C4B0 = a1;
  return result;
}

uint64_t (*static Reservation.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

id Reservation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void Reservation.init()()
{
}

uint64_t sub_21472ABA0()
{
  uint64_t v1 = 1701869940;
  if (*v0 != 1) {
    uint64_t v1 = 0x617461646174656DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1684632949;
  }
}

uint64_t sub_21472ABEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21472C5BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_21472AC14(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_21472AC20(uint64_t a1)
{
  unint64_t v2 = sub_21472BFD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21472AC5C(uint64_t a1)
{
  unint64_t v2 = sub_21472BFD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

id Reservation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t Reservation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C4D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21472BFD8();
  sub_2147AD768();
  LOBYTE(v12) = 0;
  sub_2147ACD88();
  sub_21472C0D4((unint64_t *)&unk_26781C4E0);
  sub_2147AD608();
  if (!v2)
  {
    long long v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC9SEService11Reservation_type);
    char v11 = 1;
    sub_21472C02C();
    sub_2147AD608();
    long long v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC9SEService11Reservation_metadata);
    char v11 = 2;
    sub_21472C080();
    sub_2147AD608();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Reservation.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return Reservation.init(from:)(a1);
}

uint64_t Reservation.init(from:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = *(void *)(sub_2147ACD88() - 8);
  MEMORY[0x270FA5388]();
  id v17 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C4F8);
  uint64_t v15 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21472BFD8();
  uint64_t v7 = v1;
  objc_super v19 = v6;
  sub_2147AD758();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v13 = ObjectType;

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v16;
    LOBYTE(v22) = 0;
    sub_21472C0D4((unint64_t *)&unk_26781C500);
    uint64_t v9 = v18;
    sub_2147AD588();
    char v11 = *(void (**)(void))(v8 + 32);
    v14[1] = &v7[OBJC_IVAR____TtC9SEService11Reservation_uuid];
    v11();
    char v23 = 1;
    sub_21472C118();
    sub_2147AD588();
    *(_OWORD *)&v7[OBJC_IVAR____TtC9SEService11Reservation_type] = v22;
    char v23 = 2;
    sub_21472C16C();
    sub_2147AD588();
    long long v12 = (objc_class *)ObjectType;
    *(_OWORD *)&v7[OBJC_IVAR____TtC9SEService11Reservation_metadata] = v22;

    v21.receiver = v7;
    v21.super_class = v12;
    uint64_t v13 = (uint64_t)objc_msgSendSuper2(&v21, sel_init);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v13;
}

uint64_t sub_21472B3B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  uint64_t result = Reservation.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_21472B404(void *a1)
{
  return Reservation.encode(to:)(a1);
}

uint64_t sub_21472B428(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21472B484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C4C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21472B4EC@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_21472BBA4(a2, a3);
      uint64_t v10 = (char *)sub_2147ACB08();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_2147ACB28();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_2147ACB18();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x21472B750);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_21472BBFC(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      id v17 = (char *)sub_2147ACB08();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_2147ACB28();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_2147ACB18();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_21472B760(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  __s1[2] = *MEMORY[0x263EF8340];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_21472BBA4(a1, a2);
      char v5 = sub_21472B990((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_21472BBFC(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_21472B990(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_21472BBFC(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_21472B4EC((uint64_t)__s1, a3, a4, &v14);
      sub_21472BBFC(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_21472B990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_2147ACB08();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_2147ACB28();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_2147ACB18();
  sub_21472B4EC(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_21472BA48(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x21472BB84);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_21472BBA4(a3, a4);
              char v15 = sub_21472B760(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_21472BBA4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_21472BBFC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

id sub_21472BC54()
{
  uint64_t ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781C620);
  MEMORY[0x270FA5388]();
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2147ACD88();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  __int16 v26 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  uint64_t v8 = v0;
  uint64_t v9 = (void *)sub_2147AD1E8();
  uint64_t v10 = (void *)sub_2147AD1E8();
  sub_21472C6F4(0, (unint64_t *)&qword_26781D110);
  uint64_t v11 = sub_2147AD1E8();
  if (v9)
  {
    uint64_t v12 = (void *)v11;
    sub_2147ACF58();
    uint64_t v1 = v13;
    sub_2147ACD08();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_21472C730((uint64_t)v4, (uint64_t *)&unk_26781C620);
      goto LABEL_13;
    }
    uint64_t v23 = v6;
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v26, v4, v5);
    if (v10)
    {
      uint64_t v15 = sub_2147ACF58();
      CredentialType.init(rawValue:)(v15, v16, (uint64_t *)&v28);
      uint64_t v4 = (char *)*((void *)&v28 + 1);
      if (*((void *)&v28 + 1) == 26)
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v5);
        goto LABEL_13;
      }
      uint64_t v24 = v5;
      uint64_t v1 = v28;
      if (v12)
      {
        uint64_t v25 = (objc_class *)ObjectType;
        long long v28 = xmmword_2147B3990;
        id v17 = v12;
        sub_2147ACCC8();

        uint64_t v18 = *((void *)&v28 + 1);
        if (*((void *)&v28 + 1) >> 60 != 15)
        {
          uint64_t v19 = v28;

          v14(&v8[OBJC_IVAR____TtC9SEService11Reservation_uuid], v26, v24);
          int64_t v20 = (uint64_t *)&v8[OBJC_IVAR____TtC9SEService11Reservation_type];
          *int64_t v20 = v1;
          v20[1] = (uint64_t)v4;
          uint64_t v21 = &v8[OBJC_IVAR____TtC9SEService11Reservation_metadata];
          *(void *)uint64_t v21 = v19;
          *((void *)v21 + 1) = v18;

          v27.receiver = v8;
          v27.super_class = v25;
          return objc_msgSendSuper2(&v27, sel_init);
        }
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  sub_21472C78C(v1, (unint64_t)v4);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v24);
LABEL_13:
  id result = (id)sub_2147AD4A8();
  __break(1u);
  return result;
}

unint64_t sub_21472BFD8()
{
  unint64_t result = qword_26781C4D8;
  if (!qword_26781C4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C4D8);
  }
  return result;
}

unint64_t sub_21472C02C()
{
  unint64_t result = qword_26781D050;
  if (!qword_26781D050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D050);
  }
  return result;
}

unint64_t sub_21472C080()
{
  unint64_t result = qword_26781C4F0;
  if (!qword_26781C4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C4F0);
  }
  return result;
}

uint64_t sub_21472C0D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2147ACD88();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21472C118()
{
  unint64_t result = qword_26781D070;
  if (!qword_26781D070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D070);
  }
  return result;
}

unint64_t sub_21472C16C()
{
  unint64_t result = qword_26781C510;
  if (!qword_26781C510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C510);
  }
  return result;
}

uint64_t sub_21472C1C0()
{
  return type metadata accessor for Reservation();
}

uint64_t type metadata accessor for Reservation()
{
  uint64_t result = qword_26781C580;
  if (!qword_26781C580) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21472C214()
{
  uint64_t result = sub_2147ACD88();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Reservation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Reservation);
}

uint64_t dispatch thunk of Reservation.__allocating_init(uuid:type:metadata:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of Reservation.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Reservation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t getEnumTagSinglePayload for Reservation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Reservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21472C47CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Reservation.CodingKeys()
{
  return &type metadata for Reservation.CodingKeys;
}

unint64_t sub_21472C4B8()
{
  unint64_t result = qword_26781C590;
  if (!qword_26781C590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C590);
  }
  return result;
}

unint64_t sub_21472C510()
{
  unint64_t result = qword_26781C598;
  if (!qword_26781C598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C598);
  }
  return result;
}

unint64_t sub_21472C568()
{
  unint64_t result = qword_26781C5A0;
  if (!qword_26781C5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C5A0);
  }
  return result;
}

uint64_t sub_21472C5BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_21472C6F4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_21472C730(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21472C78C(uint64_t a1, unint64_t a2)
{
  if (a2 != 26) {
    return sub_2147201A0(a1, a2);
  }
  return a1;
}

uint64_t CredentialInternal.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9SEService18CredentialInternal_identifier;
  uint64_t v4 = sub_2147ACD88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CredentialInternal.friendlyName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService18CredentialInternal_friendlyName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CredentialInternal.ownerApplications.getter()
{
  return sub_21472CA0C();
}

uint64_t CredentialInternal.ownerApplications.setter(uint64_t a1)
{
  return sub_21472CAE4(a1, &OBJC_IVAR____TtC9SEService18CredentialInternal_ownerApplications);
}

uint64_t (*CredentialInternal.ownerApplications.modify())()
{
  return j_j__swift_endAccess;
}

id sub_21472C980()
{
  swift_beginAccess();
  type metadata accessor for ApplicationInfoInternal();
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_2147AD048();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CredentialInternal.userApplications.getter()
{
  return sub_21472CA0C();
}

uint64_t sub_21472CA0C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_21472CA60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  type metadata accessor for ApplicationInfoInternal();
  uint64_t v6 = sub_2147AD058();
  BOOL v7 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  uint64_t *v7 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t CredentialInternal.userApplications.setter(uint64_t a1)
{
  return sub_21472CAE4(a1, &OBJC_IVAR____TtC9SEService18CredentialInternal_userApplications);
}

uint64_t sub_21472CAE4(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  void *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*CredentialInternal.userApplications.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t CredentialInternal.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9SEService18CredentialInternal_state;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  *(void *)a1 = *(void *)v3;
  unsigned __int8 v5 = *(unsigned char *)(v3 + 8);
  *(unsigned char *)(a1 + 8) = v5;
  return sub_21472CBEC(v4, v5);
}

uint64_t sub_21472CBEC(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t CredentialInternal.state.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = v1 + OBJC_IVAR____TtC9SEService18CredentialInternal_state;
  swift_beginAccess();
  uint64_t v5 = *(void *)v4;
  *(void *)uint64_t v4 = v2;
  unsigned __int8 v6 = *(unsigned char *)(v4 + 8);
  *(unsigned char *)(v4 + 8) = v3;
  return sub_21472CC68(v5, v6);
}

uint64_t sub_21472CC68(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*CredentialInternal.state.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t CredentialInternal.configUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9SEService18CredentialInternal_configUUID;
  swift_beginAccess();
  uint64_t v4 = sub_2147ACD88();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CredentialInternal.configUUID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9SEService18CredentialInternal_configUUID;
  swift_beginAccess();
  uint64_t v4 = sub_2147ACD88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*CredentialInternal.configUUID.modify())()
{
  return j__swift_endAccess;
}

uint64_t CredentialInternal.accessLevel.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9SEService18CredentialInternal_accessLevel;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t CredentialInternal.accessLevel.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC9SEService18CredentialInternal_accessLevel);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*CredentialInternal.accessLevel.modify())()
{
  return j_j__swift_endAccess;
}

id CredentialInternal.__allocating_init(identifier:friendlyName:ownerApplications:userApplications:state:configUUID:accessLevel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v14 = (char *)objc_allocWithZone(v9);
  uint64_t v25 = *a6;
  char v24 = *((unsigned char *)a6 + 8);
  uint64_t v15 = &v14[OBJC_IVAR____TtC9SEService18CredentialInternal_identifier];
  uint64_t v16 = sub_2147ACD88();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18(v15, a1, v16);
  uint64_t v19 = &v14[OBJC_IVAR____TtC9SEService18CredentialInternal_friendlyName];
  *(void *)uint64_t v19 = a2;
  *((void *)v19 + 1) = a3;
  *(void *)&v14[OBJC_IVAR____TtC9SEService18CredentialInternal_ownerApplications] = a4;
  *(void *)&v14[OBJC_IVAR____TtC9SEService18CredentialInternal_userApplications] = a5;
  int64_t v20 = &v14[OBJC_IVAR____TtC9SEService18CredentialInternal_state];
  *(void *)int64_t v20 = v25;
  v20[8] = v24;
  v18(&v14[OBJC_IVAR____TtC9SEService18CredentialInternal_configUUID], a7, v16);
  *(void *)&v14[OBJC_IVAR____TtC9SEService18CredentialInternal_accessLevel] = a8;
  v30.receiver = v14;
  v30.super_class = v9;
  id v21 = objc_msgSendSuper2(&v30, sel_init);
  size_t v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v22(a7, v16);
  v22(a1, v16);
  return v21;
}

id CredentialInternal.init(identifier:friendlyName:ownerApplications:userApplications:state:configUUID:accessLevel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v14 = *a6;
  char v24 = *((unsigned char *)a6 + 8);
  uint64_t v15 = &v8[OBJC_IVAR____TtC9SEService18CredentialInternal_identifier];
  uint64_t v16 = sub_2147ACD88();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18(v15, a1, v16);
  uint64_t v19 = &v9[OBJC_IVAR____TtC9SEService18CredentialInternal_friendlyName];
  *(void *)uint64_t v19 = a2;
  *((void *)v19 + 1) = a3;
  *(void *)&v9[OBJC_IVAR____TtC9SEService18CredentialInternal_ownerApplications] = a4;
  *(void *)&v9[OBJC_IVAR____TtC9SEService18CredentialInternal_userApplications] = a5;
  int64_t v20 = &v9[OBJC_IVAR____TtC9SEService18CredentialInternal_state];
  *(void *)int64_t v20 = v14;
  v20[8] = v24;
  v18(&v9[OBJC_IVAR____TtC9SEService18CredentialInternal_configUUID], a7, v16);
  *(void *)&v9[OBJC_IVAR____TtC9SEService18CredentialInternal_accessLevel] = a8;
  v31.receiver = v9;
  v31.super_class = ObjectType;
  id v21 = objc_msgSendSuper2(&v31, sel_init);
  size_t v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v22(a7, v16);
  v22(a1, v16);
  return v21;
}

Swift::Bool __swiftcall CredentialInternal.isAccessible(appId:)(Swift::String appId)
{
  object = appId._object;
  uint64_t countAndFlagsBits = appId._countAndFlagsBits;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v3 = swift_bridgeObjectRetain();
  char v4 = sub_21472EA5C(v3, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    char v5 = 1;
  }
  else
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v6 = swift_bridgeObjectRetain();
    char v5 = sub_21472EA5C(v6, countAndFlagsBits, (uint64_t)object);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t static CredentialInternal.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall CredentialInternal.encode(with:)(NSCoder with)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2147ACD88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  BOOL v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = (void *)sub_2147ACD38();
  uint64_t v9 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v8 forKey:v9];

  uint64_t v10 = (void *)sub_2147ACF38();
  uint64_t v11 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v10 forKey:v11];

  swift_beginAccess();
  type metadata accessor for ApplicationInfoInternal();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_2147AD048();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v12 forKey:v13];

  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_2147AD048();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v14 forKey:v15];

  uint64_t v16 = v2 + OBJC_IVAR____TtC9SEService18CredentialInternal_configUUID;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
  uint64_t v17 = (void *)sub_2147ACD38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v18 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v17 forKey:v18];

  uint64_t v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC9SEService18CredentialInternal_accessLevel);
  swift_beginAccess();
  uint64_t v20 = *v19;
  id v21 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeInteger:v20 forKey:v21];

  uint64_t v22 = v2 + OBJC_IVAR____TtC9SEService18CredentialInternal_state;
  swift_beginAccess();
  if (*(unsigned char *)(v22 + 8))
  {
    uint64_t v23 = (void *)sub_2147AD048();
    char v24 = (void *)sub_2147ACF38();
    [(objc_class *)with.super.isa encodeObject:v23 forKey:v24];

    int v25 = *(unsigned __int8 *)(v22 + 8);
    if (*(unsigned char *)(v22 + 8)) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v26 = 1;
    goto LABEL_8;
  }
  uint64_t v27 = *(void *)v22;
  type metadata accessor for InstanceInfoInternal();
  swift_bridgeObjectRetain();
  long long v28 = (void *)sub_2147AD048();
  char v29 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v28 forKey:v29];

  sub_21472CC68(v27, 0);
  int v25 = *(unsigned __int8 *)(v22 + 8);
  if (!*(unsigned char *)(v22 + 8)) {
    goto LABEL_6;
  }
LABEL_3:
  if (v25 == 1) {
    uint64_t v26 = 3;
  }
  else {
    uint64_t v26 = 2 * *(void *)v22;
  }
LABEL_8:
  objc_super v30 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeInteger:v26 forKey:v30];
}

uint64_t CredentialInternal.XPCCodingKey.rawValue.getter()
{
  if (*v0) {
    return 0x65636E6174736E69;
  }
  else {
    return 0x6574617473;
  }
}

id CredentialInternal.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return CredentialInternal.init(coder:)(a1);
}

id CredentialInternal.init(coder:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781C620);
  uint64_t v3 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v67 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  v68 = (char *)&v57 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v57 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v57 - v10;
  uint64_t v12 = sub_2147ACD88();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v57 - v17;
  sub_21472C6F4(0, &qword_26781D370);
  uint64_t v19 = v1;
  id v70 = a1;
  uint64_t v20 = sub_2147AD1E8();
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  id v21 = (void *)v20;
  uint64_t v64 = v16;
  v66 = v18;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v22(v9, 1, 1, v12);
  unint64_t v65 = sub_21472EC14();
  sub_2147AD508();

  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v23(v9, 1, v12) == 1)
  {
    v22(v11, 1, 1, v12);
LABEL_6:

    uint64_t v26 = (uint64_t)v11;
LABEL_7:
    sub_21472EBB4(v26);
    goto LABEL_8;
  }
  uint64_t v63 = v13;
  char v24 = v9;
  int v25 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v25(v11, v24, v12);
  v22(v11, 0, 1, v12);
  if (v23(v11, 1, v12) == 1) {
    goto LABEL_6;
  }
  v61 = v25;
  uint64_t v62 = v13 + 32;
  v25(v66, v11, v12);
  sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  id v29 = v70;
  uint64_t v30 = sub_2147AD1E8();
  if (!v30 || (uint64_t v31 = (void *)v30, v72 = 0, v73 = 0, sub_2147ACF48(), v31, !v73))
  {

LABEL_22:
    (*(void (**)(char *, uint64_t))(v63 + 8))(v66, v12);
    goto LABEL_8;
  }
  uint64_t v60 = v73;
  uint64_t v59 = v72;
  type metadata accessor for ApplicationInfoInternal();
  uint64_t v32 = sub_2147AD208();
  if (!v32)
  {

LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v33 = v32;
  uint64_t v34 = sub_2147AD208();
  if (!v34)
  {

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v58 = v34;
  uint64_t v35 = sub_2147AD1E8();
  if (!v35
    || (uint64_t v36 = (void *)v35,
        uint64_t v37 = v67,
        v22(v67, 1, 1, v12),
        sub_2147AD508(),
        v36,
        v23(v37, 1, v12) == 1))
  {
    uint64_t v38 = v68;
    v22(v68, 1, 1, v12);
LABEL_17:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v66, v12);
    uint64_t v26 = (uint64_t)v38;
    goto LABEL_7;
  }
  uint64_t v38 = v68;
  uint64_t v39 = v61;
  v61(v68, v67, v12);
  v22(v38, 0, 1, v12);
  if (v23(v38, 1, v12) == 1) {
    goto LABEL_17;
  }
  uint64_t v40 = v33;
  uint64_t v41 = v64;
  v39(v64, v38, v12);
  type metadata accessor for InstanceInfoInternal();
  id v42 = v70;
  uint64_t v43 = sub_2147AD208();
  uint64_t v44 = (objc_class *)ObjectType;
  if (v43)
  {
    uint64_t v45 = v43;
    uint64_t v46 = (void *)sub_2147ACF38();
    id v47 = objc_msgSend(v42, sel_decodeIntegerForKey_, v46);

    unsigned __int8 v48 = 0;
    switch((unint64_t)v47)
    {
      case 0uLL:
        swift_bridgeObjectRelease();
        uint64_t v45 = 0;
        goto LABEL_31;
      case 1uLL:
        break;
      case 2uLL:
        swift_bridgeObjectRelease();
        unsigned __int8 v48 = 2;
        uint64_t v45 = 1;
        break;
      case 3uLL:
        unsigned __int8 v48 = 1;
        break;
      default:
        swift_bridgeObjectRelease();
        if (v47 != (id)4) {
          goto LABEL_34;
        }
        uint64_t v45 = 2;
LABEL_31:
        unsigned __int8 v48 = 2;
        break;
    }
    uint64_t v49 = (void *)sub_2147ACF38();
    uint64_t v50 = v42;
    id v51 = objc_msgSend(v42, sel_decodeIntegerForKey_, v49);

    if ((unint64_t)v51 < 3)
    {
      uint64_t v52 = v61;
      v61(&v19[OBJC_IVAR____TtC9SEService18CredentialInternal_identifier], v66, v12);
      v52(&v19[OBJC_IVAR____TtC9SEService18CredentialInternal_configUUID], v64, v12);
      *(void *)&v19[OBJC_IVAR____TtC9SEService18CredentialInternal_ownerApplications] = v40;
      *(void *)&v19[OBJC_IVAR____TtC9SEService18CredentialInternal_userApplications] = v58;
      uint64_t v53 = &v19[OBJC_IVAR____TtC9SEService18CredentialInternal_friendlyName];
      uint64_t v54 = v60;
      *(void *)uint64_t v53 = v59;
      *((void *)v53 + 1) = v54;
      id v55 = &v19[OBJC_IVAR____TtC9SEService18CredentialInternal_state];
      *(void *)id v55 = v45;
      v55[8] = v48;
      *(void *)&v19[OBJC_IVAR____TtC9SEService18CredentialInternal_accessLevel] = v51;

      v71.receiver = v19;
      v71.super_class = v44;
      id v27 = objc_msgSendSuper2(&v71, sel_init);

      return v27;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21472CC68(v45, v48);

    uint64_t v56 = *(void (**)(char *, uint64_t))(v63 + 8);
    v56(v64, v12);
  }
  else
  {
LABEL_34:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v63 + 8);
    v56(v41, v12);
  }
  v56(v66, v12);
LABEL_8:
  swift_deallocPartialClassInstance();
  return 0;
}

unint64_t AccessLevelInternal.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

SEService::CredentialInternal::XPCCodingKey_optional __swiftcall CredentialInternal.XPCCodingKey.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_2147AD518();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_21472E530(char *a1, char *a2)
{
  return sub_21472E53C(*a1, *a2);
}

uint64_t sub_21472E53C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x65636E6174736E69;
  }
  else {
    uint64_t v3 = 0x6574617473;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000073;
  }
  if (a2) {
    uint64_t v5 = 0x65636E6174736E69;
  }
  else {
    uint64_t v5 = 0x6574617473;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000073;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2147AD668();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21472E5E4()
{
  return sub_2147AD748();
}

uint64_t sub_21472E668()
{
  sub_2147ACFA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21472E6D8()
{
  return sub_2147AD748();
}

SEService::CredentialInternal::XPCCodingKey_optional sub_21472E758(Swift::String *a1)
{
  return CredentialInternal.XPCCodingKey.init(rawValue:)(*a1);
}

void sub_21472E764(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6574617473;
  if (*v1) {
    uint64_t v2 = 0x65636E6174736E69;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000073;
  }
  *a1 = v2;
  a1[1] = v3;
}

id CredentialInternal.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CredentialInternal.init()()
{
}

id CredentialInternal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL sub_21472E968(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21472E97C()
{
  return sub_2147AD748();
}

uint64_t sub_21472E9C4()
{
  return sub_2147AD738();
}

uint64_t sub_21472E9F0()
{
  return sub_2147AD748();
}

uint64_t *sub_21472EA34@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

void sub_21472EA50(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_21472EA5C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_2147AD4B8())
  {
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x2166A7680](v7 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      if (*(void *)&v8[OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_applicationId] == a2
        && *(void *)&v8[OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_applicationId + 8] == a3)
      {
        swift_bridgeObjectRelease();

        return 1;
      }
      char v12 = sub_2147AD668();

      if (v12)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      ++v7;
      if (v10 == v6) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_21472EBB4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781C620);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21472EC14()
{
  unint64_t result = qword_26781C630;
  if (!qword_26781C630)
  {
    sub_2147ACD88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C630);
  }
  return result;
}

unint64_t sub_21472EC70()
{
  unint64_t result = qword_26781C640;
  if (!qword_26781C640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C640);
  }
  return result;
}

unint64_t sub_21472ECC8()
{
  unint64_t result = qword_26781C648;
  if (!qword_26781C648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C648);
  }
  return result;
}

uint64_t sub_21472ED1C()
{
  return type metadata accessor for CredentialInternal();
}

uint64_t type metadata accessor for CredentialInternal()
{
  uint64_t result = qword_26781C658;
  if (!qword_26781C658) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21472ED70()
{
  uint64_t result = sub_2147ACD88();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CredentialInternal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CredentialInternal);
}

uint64_t dispatch thunk of CredentialInternal.__allocating_init(identifier:friendlyName:ownerApplications:userApplications:state:configUUID:accessLevel:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CredentialInternal.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t getEnumTagSinglePayload for CredentialInternal.XPCCodingKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CredentialInternal.XPCCodingKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21472EFD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_21472EFF8(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CredentialInternal.XPCCodingKey()
{
  return &type metadata for CredentialInternal.XPCCodingKey;
}

ValueMetadata *type metadata accessor for AccessLevelInternal()
{
  return &type metadata for AccessLevelInternal;
}

uint64_t AppletState.init(rawValue:)(uint64_t a1)
{
  return sub_21472F12C(a1);
}

uint64_t sub_21472F048@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_21472F12C(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_21472F07C()
{
  return sub_2147AD028();
}

uint64_t sub_21472F0DC()
{
  return sub_2147AD018();
}

uint64_t sub_21472F12C(uint64_t result)
{
  if ((unint64_t)(result - 129) >= 2 && result != 7 && result != 15) {
    return 0;
  }
  return result;
}

unint64_t sub_21472F150()
{
  unint64_t result = qword_26781C670;
  if (!qword_26781C670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C670);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppletState()
{
  return &type metadata for AppletState;
}

unint64_t sub_21472F1B4()
{
  unint64_t result = qword_26781C678;
  if (!qword_26781C678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C678);
  }
  return result;
}

uint64_t sub_21472F208()
{
  objc_msgSend(self, sel_interfaceWithProtocol_, &unk_26C577168);
  sub_21472C6F4(0, &qword_26781C680);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781C688);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2147B3E40;
  uint64_t v1 = type metadata accessor for CredentialInternal();
  *(void *)(v0 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C690);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = type metadata accessor for InstanceInfoInternal();
  *(void *)(v0 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C698);
  *(void *)(v0 + 64) = v2;
  uint64_t v3 = type metadata accessor for ApplicationInfoInternal();
  *(void *)(v0 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6A0);
  *(void *)(v0 + 96) = v3;
  uint64_t v4 = sub_21472C6F4(0, &qword_26781C6A8);
  *(void *)(v0 + 152) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6B0);
  *(void *)(v0 + 128) = v4;
  uint64_t v5 = sub_21472C6F4(0, &qword_26781D370);
  *(void *)(v0 + 184) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6B8);
  *(void *)(v0 + 160) = v5;
  uint64_t v6 = sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  *(void *)(v0 + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6C0);
  *(void *)(v0 + 192) = v6;
  uint64_t v7 = sub_21472C6F4(0, (unint64_t *)&qword_26781D110);
  *(void *)(v0 + 248) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6C8);
  *(void *)(v0 + 224) = v7;
  MEMORY[0x2166A74F0](v0);
  uint64_t result = sub_2147AD118();
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MIDContainer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for SEMemoryCalculator()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t initializeWithCopy for SEMemoryCalculator()
{
  return MEMORY[0x270FA05E0]();
}

uint64_t assignWithCopy for SEMemoryCalculator()
{
  return MEMORY[0x270FA05D8]();
}

uint64_t initializeWithTake for SEMemoryCalculator()
{
  return MEMORY[0x270FA0608]();
}

uint64_t assignWithTake for SEMemoryCalculator()
{
  return MEMORY[0x270FA0600]();
}

uint64_t getEnumTagSinglePayload for SEMemoryCalculator(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SEMemoryCalculator(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SEMemoryCalculator()
{
  return &type metadata for SEMemoryCalculator;
}

void sub_21472F4F0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_21474D39C(0, v1, 0);
    uint64_t v4 = sub_214755E30(v2);
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 64;
    char v7 = *(unsigned char *)(v2 + 32);
    uint64_t v27 = v2 + 80;
    int64_t v28 = v1;
    uint64_t v30 = v2 + 64;
    uint64_t v31 = v2;
    int v29 = v3;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << v7)
    {
      unint64_t v10 = (unint64_t)v4 >> 6;
      if ((*(void *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(v2 + 36) != v3) {
        goto LABEL_27;
      }
      uint64_t v32 = v5;
      uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v4);
      uint64_t v13 = *v11;
      unint64_t v12 = v11[1];
      uint64_t v14 = *(void **)(*(void *)(v2 + 56) + 8 * v4);
      sub_21471ED54(*v11, v12);
      id v15 = v14;
      sub_21471ED54(v13, v12);
      uint64_t v16 = (char *)v15;
      sub_2147201A0(v13, v12);

      uint64_t v17 = &v16[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances];
      swift_beginAccess();
      if (*(void *)v17 >> 62)
      {
        sub_21471ED54(v13, v12);
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_2147AD4B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v18 = *(void *)((*(void *)v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_21471ED54(v13, v12);
      }
      sub_2147201A0(v13, v12);

      unint64_t v20 = *(void *)(v33 + 16);
      unint64_t v19 = *(void *)(v33 + 24);
      if (v20 >= v19 >> 1) {
        sub_21474D39C(v19 > 1, v20 + 1, 1);
      }
      *(void *)(v33 + 16) = v20 + 1;
      id v21 = (void *)(v33 + 24 * v20);
      v21[4] = v13;
      v21[5] = v12;
      void v21[6] = v18;
      uint64_t v2 = v31;
      char v7 = *(unsigned char *)(v31 + 32);
      unint64_t v8 = 1 << v7;
      if (v4 >= 1 << v7) {
        goto LABEL_28;
      }
      uint64_t v6 = v30;
      uint64_t v22 = *(void *)(v30 + 8 * v10);
      if ((v22 & (1 << v4)) == 0) {
        goto LABEL_29;
      }
      int v3 = v29;
      if (*(_DWORD *)(v31 + 36) != v29) {
        goto LABEL_30;
      }
      unint64_t v23 = v22 & (-2 << (v4 & 0x3F));
      if (v23)
      {
        unint64_t v8 = __clz(__rbit64(v23)) | v4 & 0xFFFFFFFFFFFFFFC0;
        int64_t v9 = v28;
      }
      else
      {
        unint64_t v24 = v10 + 1;
        unint64_t v25 = (v8 + 63) >> 6;
        int64_t v9 = v28;
        if (v10 + 1 < v25)
        {
          unint64_t v26 = *(void *)(v30 + 8 * v24);
          if (v26)
          {
LABEL_22:
            unint64_t v8 = __clz(__rbit64(v26)) + (v24 << 6);
          }
          else
          {
            while (v25 - 2 != v10)
            {
              unint64_t v26 = *(void *)(v27 + 8 * v10++);
              if (v26)
              {
                unint64_t v24 = v10 + 1;
                goto LABEL_22;
              }
            }
          }
        }
      }
      uint64_t v5 = v32 + 1;
      uint64_t v4 = v8;
      if (v32 + 1 == v9) {
        return;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
}

uint64_t sub_21472F7CC()
{
  uint64_t v0 = sub_2147ACE18();
  __swift_allocate_value_buffer(v0, qword_26782C6B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26782C6B0);
  return sub_2147ACE08();
}

uint64_t sub_21472F848(unint64_t a1, NSObject *a2, unint64_t a3, int a4)
{
  uint64_t v5 = v4;
  int v111 = a4;
  unint64_t v110 = a3;
  uint64_t v8 = sub_2147ACE18();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26781BF50 != -1) {
    goto LABEL_169;
  }
LABEL_2:
  uint64_t v12 = __swift_project_value_buffer(v8, (uint64_t)qword_26782C6B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v13 = sub_2147ACDF8();
  int v14 = sub_2147AD1B8();
  BOOL v15 = os_log_type_enabled(v13, (os_log_type_t)v14);
  uint64_t v120 = a2;
  if (v15)
  {
    LODWORD(v124) = v14;
    uint64_t v125 = (void *)v5;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v123 = swift_slowAlloc();
    v130[0] = (id)v123;
    *(_DWORD *)uint64_t v16 = 136315906;
    *(void *)&long long v129 = sub_2147601CC(0xD00000000000003FLL, 0x80000002147BEB00, (uint64_t *)v130);
    sub_2147AD248();
    *(_WORD *)(v16 + 12) = 2080;
    sub_21473450C();
    uint64_t v17 = sub_2147ACEB8();
    *(void *)&long long v129 = sub_2147601CC(v17, v18, (uint64_t *)v130);
    sub_2147AD248();
    uint64_t v126 = (void *)a1;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2080;
    uint64_t v19 = sub_2147AD298();
    *(void *)&long long v129 = sub_2147601CC(v19, v20, (uint64_t *)v130);
    sub_2147AD248();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 32) = 2080;
    if (v111)
    {
      unint64_t v23 = 0xE500000000000000;
      uint64_t v21 = 0x3E6C696E3CLL;
    }
    else
    {
      *(void *)&long long v129 = v110;
      sub_2147344B8();
      uint64_t v21 = sub_2147AD278();
      unint64_t v23 = v22;
    }
    os_log_type_t v25 = v124;
    *(void *)&long long v129 = sub_2147601CC(v21, v23, (uint64_t *)v130);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2146ED000, v13, v25, "%s %s %s %s", (uint8_t *)v16, 0x2Au);
    uint64_t v26 = v123;
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v26, -1, -1);
    MEMORY[0x2166A8870](v16, -1, -1);

    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v9 += 8;
    v27(v11, v8);
    a2 = v120;
    uint64_t v5 = (uint64_t)v125;
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v9 += 8;
    v24(v11, v8);
  }
  uint64_t v28 = MEMORY[0x2166A8940](v121);
  if (!v28)
  {
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v36 = 0xD00000000000003CLL;
    *(void *)(v36 + 8) = 0x80000002147BE880;
    *(unsigned char *)(v36 + 16) = 0;
    swift_willThrow();
    return v9;
  }
  uint64_t v29 = v28;
  uint64_t v30 = OBJC_IVAR____TtC9SEService10SESnapshot_seState;
  uint64_t v31 = SEState.friendlyDetails.getter();
  uint64_t v32 = v5;
  sub_21472F4F0(v31);
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  if (*(void *)(v34 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D380);
    uint64_t v35 = sub_2147AD4E8();
  }
  else
  {
    uint64_t v35 = MEMORY[0x263F8EE80];
  }
  v130[0] = (id)v35;
  uint64_t v37 = (void *)swift_bridgeObjectRetain();
  sub_214754E14(v37, 1, v130);
  if (v32) {
    goto LABEL_177;
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = (uint64_t)v130[0];
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v119 = sub_214730D6C(v39, v38);
  uint64_t v8 = 0;
  uint64_t v40 = SEState.friendlyDetails.getter();
  uint64_t v41 = *(void *)(v40 + 16);
  uint64_t v114 = (char *)v29;
  uint64_t v109 = v30;
  if (v41 && (unint64_t v42 = sub_21477EA08(0, 5), (v43 & 1) != 0)) {
    id v44 = *(id *)(*(void *)(v40 + 56) + 8 * v42);
  }
  else {
    id v44 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SEPackageDetails()), sel_init);
  }
  uint64_t v5 = (uint64_t)v44;
  swift_bridgeObjectRelease();
  int v122 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded);

  uint64_t v125 = 0;
  uint64_t v117 = 0;
  uint64_t v11 = 0;
  uint64_t v45 = *(void *)(v119 + 64);
  uint64_t v115 = v119 + 64;
  uint64_t v46 = 1 << *(unsigned char *)(v119 + 32);
  uint64_t v47 = -1;
  if (v46 < 64) {
    uint64_t v47 = ~(-1 << v46);
  }
  a1 = v47 & v45;
  uint64_t v113 = OBJC_IVAR____TtC9SEService10SESnapshot_deviceCapability;
  unsigned __int8 v48 = (void *)MEMORY[0x263F8EE78];
  int64_t v116 = (unint64_t)(v46 + 63) >> 6;
  unint64_t v118 = 26;
  uint64_t v9 = (uint64_t)&unk_26C560938;
  long long v112 = xmmword_2147B3E80;
  uint64_t v126 = (void *)MEMORY[0x263F8EE78];
  if ((v47 & v45) == 0) {
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v123 = (a1 - 1) & a1;
  unint64_t v49 = __clz(__rbit64(a1)) | (v11 << 6);
LABEL_33:
  uint64_t v53 = (uint64_t *)(*(void *)(v119 + 48) + 16 * v49);
  uint64_t v55 = *v53;
  unint64_t v54 = v53[1];
  *(void *)&long long v124 = *(void *)(*(void *)(v119 + 56) + 8 * v49);
  sub_21471ED54(v55, v54);
  sub_21471ED54(v55, v54);
  uint64_t v56 = 0;
  while (2)
  {
    uint64_t v57 = *(void *)((char *)&unk_26C560938 + v56 + 32);
    unint64_t v58 = *(void *)((char *)&unk_26C560938 + v56 + 40);
    switch(v58)
    {
      case 0uLL:
        if (v54) {
          goto LABEL_88;
        }
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0);
        sub_2147201A0(v55, 0);
        uint64_t v61 = v57;
        unint64_t v62 = 0;
        goto LABEL_103;
      case 1uLL:
        if (v54 != 1) {
          goto LABEL_88;
        }
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 1uLL);
        sub_2147201A0(v55, 1uLL);
        uint64_t v61 = v57;
        unint64_t v62 = 1;
        goto LABEL_103;
      case 2uLL:
        if (v54 != 2) {
          goto LABEL_88;
        }
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 2uLL);
        sub_2147201A0(v55, 2uLL);
        uint64_t v61 = v57;
        unint64_t v62 = 2;
        goto LABEL_103;
      case 3uLL:
        if (v54 != 3) {
          goto LABEL_88;
        }
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 3uLL);
        sub_2147201A0(v55, 3uLL);
        uint64_t v61 = v57;
        unint64_t v62 = 3;
        goto LABEL_103;
      case 4uLL:
        if (v54 != 4) {
          goto LABEL_88;
        }
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 4uLL);
        sub_2147201A0(v55, 4uLL);
        uint64_t v61 = v57;
        unint64_t v62 = 4;
        goto LABEL_103;
      case 5uLL:
        if (v54 != 5) {
          goto LABEL_88;
        }
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 5uLL);
        sub_2147201A0(v55, 5uLL);
        uint64_t v61 = v57;
        unint64_t v62 = 5;
        goto LABEL_103;
      case 6uLL:
        if (v54 != 6) {
          goto LABEL_88;
        }
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 6uLL);
        sub_2147201A0(v55, 6uLL);
        uint64_t v61 = v57;
        unint64_t v62 = 6;
        goto LABEL_103;
      case 7uLL:
        if (v54 != 7) {
          goto LABEL_88;
        }
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 7uLL);
        sub_2147201A0(v55, 7uLL);
        uint64_t v61 = v57;
        unint64_t v62 = 7;
        goto LABEL_103;
      case 8uLL:
        if (v54 != 8) {
          goto LABEL_88;
        }
        unint64_t v63 = 8;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 8uLL);
        sub_2147201A0(v55, 8uLL);
        uint64_t v64 = v57;
        unint64_t v65 = 8;
        goto LABEL_101;
      case 9uLL:
        if (v54 != 9) {
          goto LABEL_88;
        }
        unint64_t v63 = 9;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 9uLL);
        sub_2147201A0(v55, 9uLL);
        uint64_t v64 = v57;
        unint64_t v65 = 9;
        goto LABEL_101;
      case 0xAuLL:
        if (v54 != 10) {
          goto LABEL_88;
        }
        unint64_t v63 = 10;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0xAuLL);
        uint64_t v64 = v55;
        unint64_t v65 = 10;
        goto LABEL_101;
      case 0xBuLL:
        if (v54 != 11) {
          goto LABEL_88;
        }
        unint64_t v63 = 11;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0xBuLL);
        uint64_t v64 = v55;
        unint64_t v65 = 11;
        goto LABEL_101;
      case 0xCuLL:
        if (v54 != 12) {
          goto LABEL_88;
        }
        unint64_t v63 = 12;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0xCuLL);
        uint64_t v64 = v55;
        unint64_t v65 = 12;
        goto LABEL_101;
      case 0xDuLL:
        if (v54 != 13) {
          goto LABEL_88;
        }
        unint64_t v63 = 13;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0xDuLL);
        uint64_t v64 = v55;
        unint64_t v65 = 13;
        goto LABEL_101;
      case 0xEuLL:
        if (v54 != 14) {
          goto LABEL_88;
        }
        unint64_t v63 = 14;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0xEuLL);
        uint64_t v64 = v55;
        unint64_t v65 = 14;
        goto LABEL_101;
      case 0xFuLL:
        if (v54 != 15) {
          goto LABEL_88;
        }
        unint64_t v63 = 15;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0xFuLL);
        uint64_t v64 = v55;
        unint64_t v65 = 15;
        goto LABEL_101;
      case 0x10uLL:
        if (v54 != 16) {
          goto LABEL_88;
        }
        unint64_t v63 = 16;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0x10uLL);
        uint64_t v64 = v55;
        unint64_t v65 = 16;
        goto LABEL_101;
      case 0x11uLL:
        if (v54 != 17) {
          goto LABEL_88;
        }
        unint64_t v63 = 17;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0x11uLL);
        uint64_t v64 = v55;
        unint64_t v65 = 17;
        goto LABEL_101;
      case 0x12uLL:
        if (v54 != 18) {
          goto LABEL_88;
        }
        unint64_t v63 = 18;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0x12uLL);
        uint64_t v64 = v55;
        unint64_t v65 = 18;
        goto LABEL_101;
      case 0x13uLL:
        if (v54 != 19) {
          goto LABEL_88;
        }
        unint64_t v63 = 19;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0x13uLL);
        uint64_t v64 = v55;
        unint64_t v65 = 19;
        goto LABEL_101;
      case 0x14uLL:
        if (v54 != 20) {
          goto LABEL_88;
        }
        unint64_t v63 = 20;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0x14uLL);
        uint64_t v64 = v55;
        unint64_t v65 = 20;
        goto LABEL_101;
      case 0x15uLL:
        if (v54 != 21) {
          goto LABEL_88;
        }
        unint64_t v63 = 21;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0x15uLL);
        uint64_t v64 = v55;
        unint64_t v65 = 21;
        goto LABEL_101;
      case 0x16uLL:
        if (v54 != 22) {
          goto LABEL_88;
        }
        unint64_t v63 = 22;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0x16uLL);
        uint64_t v64 = v55;
        unint64_t v65 = 22;
        goto LABEL_101;
      case 0x17uLL:
        if (v54 != 23) {
          goto LABEL_88;
        }
        unint64_t v63 = 23;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0x17uLL);
        uint64_t v64 = v55;
        unint64_t v65 = 23;
        goto LABEL_101;
      case 0x18uLL:
        if (v54 != 24) {
          goto LABEL_88;
        }
        unint64_t v63 = 24;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0x18uLL);
        uint64_t v64 = v55;
        unint64_t v65 = 24;
        goto LABEL_101;
      case 0x19uLL:
        if (v54 != 25) {
          goto LABEL_88;
        }
        unint64_t v63 = 25;
        sub_2147201A0(*(void *)((char *)&unk_26C560938 + v56 + 32), 0x19uLL);
        uint64_t v64 = v55;
        unint64_t v65 = 25;
LABEL_101:
        sub_2147201A0(v64, v65);
        goto LABEL_105;
      default:
        if (v54 < 0x1A)
        {
LABEL_88:
          sub_21471ED54(*(void *)((char *)&unk_26C560938 + v56 + 32), *(void *)((char *)&unk_26C560938 + v56 + 40));
          sub_21471ED54(v55, v54);
          sub_21471ED54(v57, v58);
          sub_2147201A0(v57, v58);
          sub_2147201A0(v55, v54);
          sub_2147201A0(v57, v58);
LABEL_89:
          v56 += 16;
          if (v56 == 64)
          {
            swift_arrayDestroy();
            sub_2147201A0(v55, v54);
            a2 = v120;
            uint64_t v60 = (uint64_t)v125;
            goto LABEL_107;
          }
          continue;
        }
        if (v57 != v55 || v58 != v54)
        {
          uint64_t v5 = sub_2147AD668();
          sub_21471ED54(v55, v54);
          sub_21471ED54(v57, v58);
          sub_2147201A0(v57, v58);
          sub_2147201A0(v55, v54);
          if (v5) {
            goto LABEL_104;
          }
          goto LABEL_89;
        }
        sub_21471ED54(v55, v54);
        sub_21471ED54(v55, v54);
        sub_2147201A0(v55, v54);
        uint64_t v61 = v55;
        unint64_t v62 = v54;
LABEL_103:
        sub_2147201A0(v61, v62);
LABEL_104:
        unint64_t v63 = v54;
LABEL_105:
        sub_2147201A0(v55, v63);
        sub_21472C78C((uint64_t)v125, v118);
        a2 = v120;
        if (__OFADD__(v117, 1))
        {
          __break(1u);
          goto LABEL_165;
        }
        ++v117;
        sub_21471ED54(v55, v54);
        uint64_t v60 = v55;
        unint64_t v118 = v54;
LABEL_107:
        uint64_t v125 = (void *)v60;
        if ((v54 & 0xFFFFFFFFFFFFFFFDLL) == 0xC)
        {
          int v66 = *(unsigned __int8 *)(*(void *)&v114[v113] + OBJC_IVAR____TtC9SEService16DeviceCapability_supportsUWB);
          if (v122 & 1 | ((v66 & 1) == 0))
          {
            v122 |= v66;
          }
          else
          {
            *(_OWORD *)uint64_t v130 = v112;
            sub_214730DF8((uint64_t)v130, (void *)1, a2);
            uint64_t v68 = v67;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v126 = sub_21476001C(0, v126[2] + 1, 1, v126);
            }
            unint64_t v70 = v126[2];
            unint64_t v69 = v126[3];
            if (v70 >= v69 >> 1) {
              uint64_t v126 = sub_21476001C((void *)(v69 > 1), v70 + 1, 1, v126);
            }
            objc_super v71 = v126;
            v126[2] = v70 + 1;
            v71[v70 + 4] = v68;
            int v122 = 1;
          }
        }
        v130[0] = (id)v55;
        v130[1] = (id)v54;
        sub_214730DF8((uint64_t)v130, (void *)v124, a2);
        uint64_t v5 = v72;
        sub_2147201A0(v55, v54);
        unsigned __int8 v48 = v126;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned __int8 v48 = sub_21476001C(0, v48[2] + 1, 1, v48);
        }
        a1 = v123;
        unint64_t v74 = v48[2];
        unint64_t v73 = v48[3];
        if (v74 >= v73 >> 1) {
          unsigned __int8 v48 = sub_21476001C((void *)(v73 > 1), v74 + 1, 1, v48);
        }
        v48[2] = v74 + 1;
        v48[v74 + 4] = v5;
        uint64_t v126 = v48;
        if (a1) {
          goto LABEL_21;
        }
LABEL_22:
        BOOL v50 = __OFADD__(v11++, 1);
        if (v50)
        {
          __break(1u);
LABEL_167:
          __break(1u);
          goto LABEL_168;
        }
        if (v11 < v116)
        {
          unint64_t v51 = *(void *)(v115 + 8 * v11);
          if (v51) {
            goto LABEL_32;
          }
          uint64_t v52 = v11 + 1;
          if (v11 + 1 < v116)
          {
            unint64_t v51 = *(void *)(v115 + 8 * v52);
            if (v51) {
              goto LABEL_31;
            }
            uint64_t v52 = v11 + 2;
            if (v11 + 2 < v116)
            {
              unint64_t v51 = *(void *)(v115 + 8 * v52);
              if (v51) {
                goto LABEL_31;
              }
              uint64_t v52 = v11 + 3;
              if (v11 + 3 < v116)
              {
                unint64_t v51 = *(void *)(v115 + 8 * v52);
                if (v51)
                {
LABEL_31:
                  uint64_t v11 = v52;
LABEL_32:
                  uint64_t v123 = (v51 - 1) & v51;
                  unint64_t v49 = __clz(__rbit64(v51)) + (v11 << 6);
                  goto LABEL_33;
                }
                while (1)
                {
                  uint64_t v11 = v52 + 1;
                  if (__OFADD__(v52, 1)) {
                    break;
                  }
                  if (v11 >= v116) {
                    goto LABEL_121;
                  }
                  unint64_t v51 = *(void *)(v115 + 8 * v11);
                  ++v52;
                  if (v51) {
                    goto LABEL_32;
                  }
                }
LABEL_168:
                __break(1u);
LABEL_169:
                swift_once();
                goto LABEL_2;
              }
            }
          }
        }
LABEL_121:
        swift_release();
        uint64_t v11 = (uint64_t)v114;
        if (v111) {
          unint64_t v110 = v48[2];
        }
        v130[0] = v48;
        swift_bridgeObjectRetain_n();
        sub_2147337E0((uint64_t *)v130);
        uint64_t v8 = 0;
        swift_bridgeObjectRelease();
        if ((v110 & 0x8000000000000000) != 0)
        {
          __break(1u);
          goto LABEL_171;
        }
        unint64_t v75 = *((void *)v130[0] + 2);
        unint64_t v76 = v75 - v110;
        if (v75 < v110) {
          unint64_t v76 = 0;
        }
        if (v76 != v75)
        {
          if (v76 < v75)
          {
            uint64_t v9 = 0;
            if (v110 >= v75) {
              unint64_t v77 = *((void *)v130[0] + 2);
            }
            else {
              unint64_t v77 = v110;
            }
            uint64_t v78 = -(uint64_t)v77;
            uint64_t v79 = (uint64_t)v130[0] + 8 * v75 + 32;
            do
            {
              uint64_t v80 = *(void *)(v79 + 8 * v78);
              BOOL v50 = __OFADD__(v9, v80);
              v9 += v80;
              if (v50) {
                goto LABEL_167;
              }
            }
            while (!__CFADD__(v78++, 1));
            swift_unknownObjectRelease();
            if (v117)
            {
              if (v117 < 2) {
                goto LABEL_151;
              }
              goto LABEL_140;
            }
LABEL_145:
            id v87 = *(id *)(v11 + v109);
            uint64_t v88 = swift_bridgeObjectRetain();
            char v89 = sub_214734560(v88);

            swift_bridgeObjectRelease();
            if ((v89 & 1) == 0) {
              goto LABEL_151;
            }
            long long v124 = xmmword_2147B3E70;
            *(_OWORD *)uint64_t v130 = xmmword_2147B3E70;
            v90 = sub_214731A88((uint64_t *)v130);
            uint64_t v92 = v90;
            if (!v90)
            {
              sub_21472C78C((uint64_t)v125, v118);
              v130[0] = 0;
              v130[1] = (id)0xE000000000000000;
              sub_2147AD348();
              long long v129 = v124;
              sub_2147AD3F8();
              goto LABEL_161;
            }
            v130[0] = *(id *)&v90[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory];
            id v93 = v130[0];
            swift_getAtKeyPath();

            uint64_t v94 = v129;
            id v128 = *(id *)&v92[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory];
            id v95 = v128;
            swift_getAtKeyPath();

            uint64_t v96 = v94 + v127;
            if (!__OFADD__(v94, v127))
            {
              BOOL v50 = __OFADD__(v9, v96);
              v9 += v96;
              if (!v50) {
                goto LABEL_151;
              }
              goto LABEL_173;
            }
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
            goto LABEL_174;
          }
LABEL_171:
          __break(1u);
          goto LABEL_172;
        }
        swift_unknownObjectRelease();
        if (!v117)
        {
          uint64_t v9 = 0;
          goto LABEL_145;
        }
        uint64_t v9 = 0;
        if (v117 <= 1) {
          goto LABEL_151;
        }
LABEL_140:
        sub_2147AD2B8();
        uint64_t KeyPath = swift_getKeyPath();
        char v83 = MEMORY[0x2166A75C0](a2, KeyPath);
        swift_release();
        if ((v83 & 1) == 0)
        {
          uint64_t v84 = swift_getKeyPath();
          char v85 = MEMORY[0x2166A75C0](a2, v84);
          swift_release();
          if ((v85 & 1) == 0)
          {
LABEL_151:

            sub_21472C78C((uint64_t)v125, v118);
            goto LABEL_152;
          }
        }
        if (v118 == 26)
        {
          sub_214729BF0();
          swift_allocError();
          *(void *)uint64_t v86 = 0xD000000000000035;
          *(void *)(v86 + 8) = 0x80000002147BEA50;
          *(unsigned char *)(v86 + 16) = 2;
          goto LABEL_162;
        }
        v130[0] = v125;
        v130[1] = (id)v118;
        uint64_t v91 = sub_214731A88((uint64_t *)v130);
        uint64_t v5 = (uint64_t)v91;
        if (!v91)
        {
          v130[0] = 0;
          v130[1] = (id)0xE000000000000000;
          sub_2147AD348();
          uint64_t v102 = (uint64_t)v125;
          unint64_t v103 = v118;
          *(void *)&long long v129 = v125;
          *((void *)&v129 + 1) = v118;
          sub_2147AD3F8();
          sub_21472C78C(v102, v103);
LABEL_161:
          sub_2147ACFC8();
          long long v104 = *(_OWORD *)v130;
          sub_214729BF0();
          swift_allocError();
          *(_OWORD *)uint64_t v105 = v104;
          *(unsigned char *)(v105 + 16) = 0;
LABEL_162:
          swift_willThrow();
          swift_bridgeObjectRelease();

          return v9;
        }
        sub_21472C78C((uint64_t)v125, v118);
        v130[0] = *(id *)(v5 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory);
        id v97 = v130[0];
        swift_getAtKeyPath();

        uint64_t v98 = v129;
        id v128 = *(id *)(v5 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory);
        id v99 = v128;
        swift_getAtKeyPath();

        uint64_t v100 = v98 + v127;
        if (__OFADD__(v98, v127))
        {
LABEL_174:
          __break(1u);
          goto LABEL_175;
        }
        uint64_t v101 = (v117 - 1) * v100;
        if ((unsigned __int128)((v117 - 1) * (__int128)v100) >> 64 != v101 >> 63)
        {
LABEL_175:
          __break(1u);
          goto LABEL_176;
        }
        BOOL v50 = __OFSUB__(v9, v101);
        v9 -= v101;
        if (v50)
        {
LABEL_176:
          __break(1u);
LABEL_177:
          swift_unexpectedError();
          __break(1u);
          swift_release();
          __break(1u);
          JUMPOUT(0x214730D04);
        }
        if (v9 < 1)
        {
LABEL_165:
          sub_214729BF0();
          swift_allocError();
          *(void *)uint64_t v107 = 0xD000000000000042;
          *(void *)(v107 + 8) = 0x80000002147BEAB0;
          *(unsigned char *)(v107 + 16) = 2;
          swift_willThrow();
          swift_bridgeObjectRelease();

          return v9;
        }

LABEL_152:
        swift_bridgeObjectRelease();
        return v9;
    }
  }
}

uint64_t sub_214730D6C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_2147334D8(a1, (uint64_t)sub_2147621F0, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_214730DF8(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v10 = sub_2147ACE18();
  uint64_t v11 = *(void (***)(void, void))(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v15 = *(void **)a1;
  unint64_t v14 = *(void *)(a1 + 8);
  if (qword_26781BF50 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v10, (uint64_t)qword_26782C6B0);
  ((void (*)(char *, uint64_t, uint64_t))v11[2])(v13, v16, v10);
  sub_21471ED54((uint64_t)v15, v14);
  swift_retain();
  sub_21471ED54((uint64_t)v15, v14);
  swift_retain();
  uint64_t v100 = v11;
  uint64_t v17 = sub_2147ACDF8();
  os_log_type_t v18 = sub_2147AD1B8();
  LODWORD(v99) = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v95 = v10;
    uint64_t v20 = v19;
    uint64_t v94 = swift_slowAlloc();
    v101[0] = v94;
    *(_DWORD *)uint64_t v20 = 136315906;
    os_log_t v93 = v17;
    id v102 = (id)sub_2147601CC(0xD00000000000003CLL, 0x80000002147BE970, (uint64_t *)v101);
    sub_2147AD248();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v92 = v20 + 14;
    id v102 = v15;
    unint64_t v103 = (void (**)(void, void))v14;
    sub_21471ED54((uint64_t)v15, v14);
    sub_21471ED54((uint64_t)v15, v14);
    sub_2147ACF78();
    uint64_t v96 = v4;
    uint64_t v21 = sub_2147ACF88();
    uint64_t v98 = v6;
    uint64_t v22 = v21;
    unint64_t v23 = a2;
    unint64_t v24 = a3;
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    sub_2147201A0((uint64_t)v15, v14);
    id v102 = (id)sub_2147601CC(v22, v26, (uint64_t *)v101);
    sub_2147AD248();
    a3 = v24;
    uint64_t v97 = (uint64_t)v23;
    swift_bridgeObjectRelease();
    sub_2147201A0((uint64_t)v15, v14);
    sub_2147201A0((uint64_t)v15, v14);
    *(_WORD *)(v20 + 22) = 2080;
    id v102 = v23;
    sub_2147344B8();
    uint64_t v27 = sub_2147AD278();
    id v102 = (id)sub_2147601CC(v27, v28, (uint64_t *)v101);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 32) = 2080;
    uint64_t v29 = sub_2147AD298();
    id v102 = (id)sub_2147601CC(v29, v30, (uint64_t *)v101);
    uint64_t v6 = v98;
    uint64_t v5 = v96;
    sub_2147AD248();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v31 = v93;
    _os_log_impl(&dword_2146ED000, v93, (os_log_type_t)v99, "%s %s %s %s", (uint8_t *)v20, 0x2Au);
    uint64_t v32 = v94;
    swift_arrayDestroy();
    uint64_t v33 = v32;
    a2 = (void *)v97;
    MEMORY[0x2166A8870](v33, -1, -1);
    MEMORY[0x2166A8870](v20, -1, -1);

    ((void (**)(char *, uint64_t))v100)[1](v13, v95);
  }
  else
  {
    sub_2147201A0((uint64_t)v15, v14);
    sub_2147201A0((uint64_t)v15, v14);

    swift_release_n();
    ((void (**)(char *, uint64_t))v100)[1](v13, v10);
  }
  uint64_t v34 = MEMORY[0x2166A8940](v6);
  if (!v34)
  {
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v37 = 0xD00000000000003CLL;
    *(void *)(v37 + 8) = 0x80000002147BE880;
    *(unsigned char *)(v37 + 16) = 0;
    swift_willThrow();
    return;
  }
  os_log_t v35 = (os_log_t)v34;
  id v102 = v15;
  unint64_t v103 = (void (**)(void, void))v14;
  uint64_t v36 = sub_214731A88((uint64_t *)&v102);
  if (v5)
  {
LABEL_8:

    return;
  }
  uint64_t v100 = (void (**)(void, void))v14;
  if (!v36)
  {
    id v102 = 0;
    unint64_t v103 = (void (**)(void, void))0xE000000000000000;
    sub_2147AD348();
    id v102 = v15;
    uint64_t v60 = (uint64_t)v15;
    unint64_t v61 = (unint64_t)v100;
    unint64_t v103 = v100;
    sub_21471ED54(v60, (unint64_t)v100);
    sub_21471ED54(v60, v61);
    sub_2147ACF78();
    unint64_t v62 = (void *)sub_2147ACF88();
    uint64_t v64 = v63;
    swift_bridgeObjectRelease();
    sub_2147201A0(v60, v61);
    swift_bridgeObjectRelease();
    id v102 = v62;
    unint64_t v103 = v64;
    sub_2147ACFC8();
    id v65 = v102;
    int v66 = v103;
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v67 = v65;
    *(void *)(v67 + 8) = v66;
    *(unsigned char *)(v67 + 16) = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  uint64_t v98 = v6;
  id v99 = v36;
  uint64_t v38 = SEState.friendlyDetails.getter();
  uint64_t v39 = *(void *)(v38 + 16);
  uint64_t v40 = (uint64_t)v15;
  uint64_t v41 = (char *)v15;
  unint64_t v42 = (unint64_t)v100;
  sub_21471ED54(v40, (unint64_t)v100);
  if (v39 && (unint64_t v43 = sub_21477EA08((uint64_t)v41, v42), (v44 & 1) != 0)) {
    uint64_t v45 = (char *)*(id *)(*(void *)(v38 + 56) + 8 * v43);
  }
  else {
    uint64_t v45 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SEPackageDetails()), sel_init);
  }
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  os_log_t v47 = (os_log_t)v41;
  sub_2147201A0((uint64_t)v41, v42);
  if (!a2)
  {
    int64_t v57 = (int64_t)v46;
    uint64_t v68 = &v46[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances];
    swift_beginAccess();
    unint64_t v69 = *(void *)v68;
    if (v69 >> 62) {
      goto LABEL_71;
    }
    uint64_t v70 = *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
    objc_super v71 = (char *)v57;
    if (!v70) {
      goto LABEL_72;
    }
LABEL_36:

    return;
  }
  uint64_t v97 = (uint64_t)a2;
  uint64_t v96 = v46;
  if (*(uint64_t *)&v46[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers] <= 1) {
    uint64_t v48 = 1;
  }
  else {
    uint64_t v48 = *(void *)&v46[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers];
  }
  unint64_t v49 = v99;
  id v102 = *(id *)&v99[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory];
  id v50 = v102;
  swift_getAtKeyPath();

  unint64_t v51 = (char *)v101[0];
  uint64_t v105 = *(void *)&v49[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory];
  unint64_t v52 = (unint64_t)(id)v105;
  swift_getAtKeyPath();

  uint64_t v53 = v104 * v48;
  if ((unsigned __int128)(v104 * (__int128)v48) >> 64 != (v104 * v48) >> 63)
  {
    __break(1u);
    goto LABEL_38;
  }
  BOOL v54 = __OFADD__(v51, v53);
  uint64_t v55 = &v51[v53];
  if (v54)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    int64_t v57 = sub_2147AD4B8();
    uint64_t v91 = v41;
    if (v57) {
      goto LABEL_23;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    int64_t v57 = MEMORY[0x263F8EE78];
    goto LABEL_41;
  }
  uint64_t v95 = (uint64_t)v55;
  uint64_t v56 = (id *)&v96[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances];
  swift_beginAccess();
  unint64_t v52 = (unint64_t)*v56;
  v101[0] = (id)MEMORY[0x263F8EE78];
  if (v52 >> 62) {
    goto LABEL_39;
  }
  int64_t v57 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v91 = v41;
  if (!v57) {
    goto LABEL_40;
  }
LABEL_23:
  os_log_t v93 = v35;
  uint64_t v94 = a3;
  if (v57 < 1) {
    goto LABEL_70;
  }
  for (uint64_t i = 0; i != v57; ++i)
  {
    if ((v52 & 0xC000000000000001) != 0) {
      uint64_t v59 = MEMORY[0x2166A7680](i, v52);
    }
    else {
      uint64_t v59 = *(id *)(v52 + 8 * i + 32);
    }
    os_log_t v47 = v59;
    if (*(Class *)((char *)&v59->isa + OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState) == (Class)7)
    {
      sub_2147AD3A8();
      sub_2147AD3D8();
      sub_2147AD3E8();
      sub_2147AD3B8();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  int64_t v57 = (int64_t)v101[0];
  os_log_t v35 = v93;
  a3 = v94;
  uint64_t v41 = v91;
LABEL_41:
  unint64_t v72 = (unint64_t)v100;
  sub_21471ED54((uint64_t)v41, (unint64_t)v100);
  char v73 = sub_21471E7D4((uint64_t)v41, v72, (uint64_t)&unk_26C5608D8);
  swift_arrayDestroy();
  sub_2147201A0((uint64_t)v41, v72);
  if ((v73 & 1) == 0)
  {
    swift_retain();
    unint64_t v76 = v99;
    uint64_t v77 = sub_214734328(v57, (unint64_t)v76);

    swift_release();
    uint64_t v78 = *(void *)(v77 + 16);
    if (v78)
    {
      uint64_t v79 = 0;
      uint64_t v80 = (uint64_t *)(v77 + 32);
      do
      {
        uint64_t v81 = *v80++;
        BOOL v54 = __OFADD__(v79, v81);
        v79 += v81;
        if (v54) {
          goto LABEL_69;
        }
        --v78;
      }
      while (v78);
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  if (v57 < 0 || (v57 & 0x4000000000000000) != 0) {
    goto LABEL_79;
  }
  uint64_t v74 = *(void *)(v57 + 16);
  while (1)
  {
    swift_release();
    if (v74)
    {
      sub_214729BF0();
      swift_allocError();
      *(void *)uint64_t v75 = 0xD000000000000066;
      *(void *)(v75 + 8) = 0x80000002147BE900;
      *(unsigned char *)(v75 + 16) = 1;
      swift_willThrow();

      return;
    }
    uint64_t v82 = v97;
    if (v97 >= 1)
    {
      v101[0] = *(id *)&v99[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_selectableMemory];
      id v83 = v101[0];
      swift_getAtKeyPath();

      if (__OFADD__(v95, v105))
      {
LABEL_86:
        __break(1u);
        return;
      }
      v95 += v105;
    }
    int64_t v57 = (int64_t)v99;
    v101[0] = *(id *)&v99[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_personalizedMemory];
    unint64_t v76 = (char *)v101[0];
    swift_getAtKeyPath();

    if ((unsigned __int128)(v105 * (__int128)v82) >> 64 == (v105 * v82) >> 63) {
      break;
    }
    while (1)
    {
      __break(1u);
LABEL_83:
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_2147AD4B8();

      swift_release();
LABEL_64:
      swift_release();

      uint64_t v85 = v97 - v84;
      if (__OFSUB__(v97, v84))
      {
        __break(1u);
LABEL_85:
        __break(1u);
        goto LABEL_86;
      }
      if ((unsigned __int128)((uint64_t)v76 * (__int128)v85) >> 64 != ((uint64_t)v76 * v85) >> 63) {
        goto LABEL_85;
      }
      if (!__OFADD__(a3, (void)v76 * v85)) {
        return;
      }
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_bridgeObjectRetain();
      uint64_t v86 = sub_2147AD4B8();
      swift_bridgeObjectRelease();
      objc_super v71 = (char *)v57;
      if (v86) {
        goto LABEL_36;
      }
LABEL_72:
      if (v71[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded] == 1)
      {
        id v87 = v99;
        v101[0] = *(id *)&v99[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory];
        id v88 = v101[0];
        swift_getAtKeyPath();

        objc_super v71 = (char *)v57;
        uint64_t v89 = v105;
      }
      else
      {
        uint64_t v89 = 0;
        id v87 = v99;
      }
      int64_t v57 = *(void *)&v71[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers];
      v101[0] = *(id *)&v87[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory];
      uint64_t v41 = v71;
      unint64_t v76 = (char *)v101[0];
      swift_getAtKeyPath();

      if ((unsigned __int128)(v57 * (__int128)v105) >> 64 == (v57 * v105) >> 63) {
        break;
      }
LABEL_81:
      __break(1u);
    }
    if (!__OFADD__(v89, v57 * v105)) {
      return;
    }
    __break(1u);
LABEL_79:
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_2147AD4B8();
    swift_release();
  }
  if (__OFADD__(v95, v105 * v82))
  {
    __break(1u);
LABEL_59:
    uint64_t v79 = 0;
LABEL_60:
    os_log_t v47 = v35;
    os_log_t v35 = a3;
    swift_bridgeObjectRelease();
    a3 = (v95 + v79);
    if (!__OFADD__(v95, v79))
    {
      v101[0] = v91;
      v101[1] = v100;
      uint64_t v41 = v76;
      unint64_t v76 = sub_214732E48((uint64_t)v101, (uint64_t)v35, v99);

      if ((v57 & 0x8000000000000000) == 0 && (v57 & 0x4000000000000000) == 0)
      {
        uint64_t v84 = *(void *)(v57 + 16);

        goto LABEL_64;
      }
      goto LABEL_83;
    }
    __break(1u);
    goto LABEL_81;
  }
}

char *sub_214731A88(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2147ACE18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  if (qword_26781BF50 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_26782C6B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  sub_21471ED54(v9, v10);
  sub_21471ED54(v9, v10);
  uint64_t v12 = sub_2147ACDF8();
  os_log_type_t v13 = sub_2147AD1B8();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v34 = v3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v33 = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v35 = v2;
    v36[0] = v17;
    *(void *)&long long v37 = sub_2147601CC(0xD00000000000001CLL, 0x80000002147BE8C0, v36);
    sub_2147AD248();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v32 = v16 + 14;
    *(void *)&long long v37 = v9;
    *((void *)&v37 + 1) = v10;
    sub_21471ED54(v9, v10);
    sub_21471ED54(v9, v10);
    sub_2147ACF78();
    uint64_t v18 = sub_2147ACF88();
    os_log_t v31 = v12;
    uint64_t v19 = v18;
    int v39 = v14;
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    sub_2147201A0(v9, v10);
    *(void *)&long long v37 = sub_2147601CC(v19, v21, v36);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_2147201A0(v9, v10);
    sub_2147201A0(v9, v10);
    os_log_t v22 = v31;
    _os_log_impl(&dword_2146ED000, v31, (os_log_type_t)v39, "%s %s", (uint8_t *)v16, 0x16u);
    uint64_t v23 = v33;
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v23, -1, -1);
    uint64_t v24 = v16;
    uint64_t v3 = v34;
    MEMORY[0x2166A8870](v24, -1, -1);
  }
  else
  {
    sub_2147201A0(v9, v10);
    sub_2147201A0(v9, v10);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v25 = MEMORY[0x2166A8940](v3);
  if (v25)
  {
    unint64_t v26 = (void *)v25;
    uint64_t v27 = *(void *)(v25 + OBJC_IVAR____TtC9SEService10SESnapshot_dataSource + 16);
    long long v37 = *(_OWORD *)(v25 + OBJC_IVAR____TtC9SEService10SESnapshot_dataSource);
    uint64_t v38 = v27;
    v36[0] = v9;
    v36[1] = v10;
    char v40 = *(unsigned char *)(*(void *)(v25 + OBJC_IVAR____TtC9SEService10SESnapshot_seState)
                   + OBJC_IVAR____TtC9SEService7SEState_seType);
    uint64_t v8 = (char *)SERDataSource.getMemoryInfo(type:seType:)(v36, &v40);
  }
  else
  {
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v28 = 0xD00000000000003CLL;
    *(void *)(v28 + 8) = 0x80000002147BE880;
    *(unsigned char *)(v28 + 16) = 0;
    swift_willThrow();
  }
  return v8;
}

uint64_t sub_214731E84(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2147ACE18();
  int64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26781BF50 != -1) {
LABEL_48:
  }
    swift_once();
  uint64_t v9 = __swift_project_value_buffer(v5, (uint64_t)qword_26782C6B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  unint64_t v10 = sub_2147ACDF8();
  os_log_type_t v11 = sub_2147AD1B8();
  int v12 = v11;
  BOOL v13 = os_log_type_enabled(v10, v11);
  unint64_t v52 = a1;
  if (v13)
  {
    uint64_t v14 = swift_slowAlloc();
    int64_t v51 = swift_slowAlloc();
    *(void *)&long long v55 = v51;
    *(_DWORD *)uint64_t v14 = 136315650;
    unint64_t v49 = v10;
    uint64_t v56 = sub_2147601CC(0xD000000000000041, 0x80000002147BE9B0, (uint64_t *)&v55);
    LODWORD(v48) = v12;
    sub_2147AD248();
    uint64_t v50 = v5;
    *(_WORD *)(v14 + 12) = 2080;
    sub_21473450C();
    uint64_t v15 = sub_2147ACEB8();
    uint64_t v56 = sub_2147601CC(v15, v16, (uint64_t *)&v55);
    sub_2147AD248();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2080;
    uint64_t v17 = sub_2147AD298();
    uint64_t v56 = sub_2147601CC(v17, v18, (uint64_t *)&v55);
    a1 = v52;
    sub_2147AD248();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v19 = v49;
    _os_log_impl(&dword_2146ED000, v49, (os_log_type_t)v48, "%s %s %s", (uint8_t *)v14, 0x20u);
    int64_t v20 = v51;
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v20, -1, -1);
    MEMORY[0x2166A8870](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v50);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v21 = MEMORY[0x2166A8940](v54);
  if (v21)
  {
    os_log_t v22 = v21;
    uint64_t v23 = SEState.friendlyDetails.getter();
    uint64_t v24 = *(void *)(v23 + 16);
    uint64_t v53 = a2;
    unint64_t v49 = v22;
    if (v24 && (unint64_t v25 = sub_21477EA08(0, 5), (v26 & 1) != 0)) {
      uint64_t v27 = (unsigned __int8 *)*(id *)(*(void *)(v23 + 56) + 8 * v25);
    }
    else {
      uint64_t v27 = (unsigned __int8 *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SEPackageDetails()), sel_init);
    }
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    a2 = v28[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded];

    uint64_t v29 = *(void *)(a1 + 64);
    uint64_t v50 = a1 + 64;
    uint64_t v30 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v31 = -1;
    if (v30 < 64) {
      uint64_t v31 = ~(-1 << v30);
    }
    uint64_t v5 = v31 & v29;
    uint64_t v48 = OBJC_IVAR____TtC9SEService10SESnapshot_deviceCapability;
    int64_t v51 = (unint64_t)(v30 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    int64_t v6 = 0;
    long long v47 = xmmword_2147B3E80;
    while (1)
    {
      if (v5)
      {
        unint64_t v33 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        unint64_t v34 = v33 | (v6 << 6);
      }
      else
      {
        BOOL v35 = __OFADD__(v6++, 1);
        if (v35) {
          goto LABEL_46;
        }
        if (v6 >= v51)
        {
LABEL_43:

          swift_release();
          return (uint64_t)v8;
        }
        unint64_t v36 = *(void *)(v50 + 8 * v6);
        if (!v36)
        {
          int64_t v37 = v6 + 1;
          if (v6 + 1 >= v51) {
            goto LABEL_43;
          }
          unint64_t v36 = *(void *)(v50 + 8 * v37);
          if (!v36)
          {
            int64_t v37 = v6 + 2;
            if (v6 + 2 >= v51) {
              goto LABEL_43;
            }
            unint64_t v36 = *(void *)(v50 + 8 * v37);
            if (!v36)
            {
              int64_t v37 = v6 + 3;
              if (v6 + 3 >= v51) {
                goto LABEL_43;
              }
              unint64_t v36 = *(void *)(v50 + 8 * v37);
              if (!v36)
              {
                while (1)
                {
                  int64_t v6 = v37 + 1;
                  if (__OFADD__(v37, 1)) {
                    break;
                  }
                  if (v6 >= v51) {
                    goto LABEL_43;
                  }
                  unint64_t v36 = *(void *)(v50 + 8 * v6);
                  ++v37;
                  if (v36) {
                    goto LABEL_25;
                  }
                }
                __break(1u);
                return result;
              }
            }
          }
          int64_t v6 = v37;
        }
LABEL_25:
        uint64_t v5 = (v36 - 1) & v36;
        unint64_t v34 = __clz(__rbit64(v36)) + (v6 << 6);
      }
      uint64_t v38 = *(void *)(a1 + 56);
      int v39 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v34);
      uint64_t v40 = *v39;
      a1 = v39[1];
      uint64_t v41 = *(void *)(v38 + 8 * v34);
      if ((a1 & 0xFFFFFFFFFFFFFFFDLL) == 0xC)
      {
        int v42 = (*(unsigned __int8 **)((char *)&v49->isa + v48))[OBJC_IVAR____TtC9SEService16DeviceCapability_supportsUWB];
        if (!(a2 & 1 | ((v42 & 1) == 0)))
        {
          long long v55 = v47;
          sub_21471ED54(v40, a1);
          sub_214732518((uint64_t)&v55, 1, v53);
          if (v2)
          {
            swift_release();
            sub_2147201A0(v40, a1);

            return (uint64_t)v8;
          }
          BOOL v35 = __OFADD__(v8, v43);
          v8 += v43;
          if (v35) {
            goto LABEL_47;
          }
          a2 = 1;
          goto LABEL_33;
        }
        a2 = v42 | a2;
      }
      sub_21471ED54(v40, a1);
LABEL_33:
      *(void *)&long long v55 = v40;
      *((void *)&v55 + 1) = a1;
      sub_214732518((uint64_t)&v55, v41, v53);
      if (v2)
      {

        swift_release();
        sub_2147201A0(v40, a1);
        return (uint64_t)v8;
      }
      uint64_t v45 = v44;
      uint64_t result = sub_2147201A0(v40, a1);
      BOOL v35 = __OFADD__(v8, v45);
      v8 += v45;
      a1 = v52;
      if (v35)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
    }
  }
  sub_214729BF0();
  swift_allocError();
  *(void *)uint64_t v46 = 0xD00000000000003CLL;
  *(void *)(v46 + 8) = 0x80000002147BE880;
  *(unsigned char *)(v46 + 16) = 0;
  swift_willThrow();
  return (uint64_t)v8;
}

void sub_214732518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v80 = a2;
  uint64_t v8 = sub_2147ACE18();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *(void **)a1;
  unint64_t v13 = *(void *)(a1 + 8);
  if (qword_26781BF50 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v8, (uint64_t)qword_26782C6B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v14, v8);
  sub_21471ED54((uint64_t)v12, v13);
  swift_retain();
  sub_21471ED54((uint64_t)v12, v13);
  swift_retain();
  uint64_t v15 = v8;
  unint64_t v16 = sub_2147ACDF8();
  os_log_type_t v17 = sub_2147AD1B8();
  LODWORD(v78) = v17;
  BOOL v18 = os_log_type_enabled(v16, v17);
  unint64_t v79 = v4;
  if (v18)
  {
    uint64_t v19 = v12;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    uint64_t v84 = v76;
    *(_DWORD *)uint64_t v20 = 136315906;
    os_log_t v75 = v16;
    id v82 = (id)sub_2147601CC(0xD000000000000048, 0x80000002147BEA00, &v84);
    sub_2147AD248();
    *(_WORD *)(v20 + 12) = 2080;
    id v82 = v19;
    unint64_t v83 = v13;
    sub_21471ED54((uint64_t)v19, v13);
    sub_21471ED54((uint64_t)v19, v13);
    sub_2147ACF78();
    uint64_t v81 = (void *)a3;
    uint64_t v21 = sub_2147ACF88();
    uint64_t v77 = v5;
    uint64_t v22 = v21;
    uint64_t v74 = v15;
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    sub_2147201A0((uint64_t)v19, v13);
    id v82 = (id)sub_2147601CC(v22, v24, &v84);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_2147201A0((uint64_t)v19, v13);
    sub_2147201A0((uint64_t)v19, v13);
    *(_WORD *)(v20 + 22) = 2080;
    id v82 = (id)v80;
    sub_2147344B8();
    uint64_t v25 = sub_2147AD278();
    id v82 = (id)sub_2147601CC(v25, v26, &v84);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 32) = 2080;
    uint64_t v5 = v77;
    uint64_t v27 = sub_2147AD298();
    id v82 = (id)sub_2147601CC(v27, v28, &v84);
    a3 = (uint64_t)v81;
    sub_2147AD248();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v29 = v75;
    _os_log_impl(&dword_2146ED000, v75, (os_log_type_t)v78, "%s %s %s %s", (uint8_t *)v20, 0x2Au);
    uint64_t v30 = v76;
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v30, -1, -1);
    uint64_t v31 = v20;
    int v12 = v19;
    MEMORY[0x2166A8870](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v74);
  }
  else
  {
    sub_2147201A0((uint64_t)v12, v13);
    sub_2147201A0((uint64_t)v12, v13);

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v15);
  }
  uint64_t v32 = MEMORY[0x2166A8940](v5);
  if (v32)
  {
    unint64_t v33 = (char *)v32;
    id v82 = v12;
    unint64_t v83 = v13;
    unint64_t v34 = v79;
    BOOL v35 = sub_214731A88((uint64_t *)&v82);
    if (v34)
    {
LABEL_8:

      return;
    }
    int64_t v37 = v35;
    uint64_t v77 = v5;
    unint64_t v79 = v13;
    if (!v35)
    {
LABEL_25:
      id v82 = 0;
      unint64_t v83 = 0xE000000000000000;
      sub_2147AD348();
      unint64_t v56 = v79;
      id v82 = v12;
      unint64_t v83 = v79;
      sub_21471ED54((uint64_t)v12, v79);
      sub_21471ED54((uint64_t)v12, v56);
      sub_2147ACF78();
      int64_t v57 = (void *)sub_2147ACF88();
      uint64_t v58 = (uint64_t)v12;
      unint64_t v60 = v59;
      swift_bridgeObjectRelease();
      sub_2147201A0(v58, v56);
      swift_bridgeObjectRelease();
      id v82 = v57;
      unint64_t v83 = v60;
      sub_2147ACFC8();
      id v61 = v82;
      unint64_t v62 = v83;
      sub_214729BF0();
      swift_allocError();
      *(void *)uint64_t v63 = v61;
      *(void *)(v63 + 8) = v62;
      *(unsigned char *)(v63 + 16) = 0;
      swift_willThrow();
      goto LABEL_8;
    }
    uint64_t v81 = (void *)a3;
    uint64_t v38 = OBJC_IVAR____TtC9SEService10SESnapshot_seState;
    uint64_t v39 = SEState.friendlyDetails.getter();
    uint64_t v40 = *(void *)(v39 + 16);
    uint64_t v41 = v79;
    sub_21471ED54((uint64_t)v12, v79);
    if (v40 && (unint64_t v42 = sub_21477EA08((uint64_t)v12, v41), (v43 & 1) != 0)) {
      uint64_t v44 = (char *)*(id *)(*(void *)(v39 + 56) + 8 * v42);
    }
    else {
      uint64_t v44 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SEPackageDetails()), sel_init);
    }
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();
    unint64_t v46 = v79;
    sub_2147201A0((uint64_t)v12, v79);
    char v47 = v45[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded];
    uint64_t v78 = v45;
    if (v47)
    {
      unint64_t v48 = (unint64_t)v12;
    }
    else
    {
      uint64_t v76 = *(void *)&v45[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers];
      sub_21471ED54((uint64_t)v12, v46);
      char v64 = sub_21471E7D4((uint64_t)v12, v46, (uint64_t)&unk_26C561778);
      swift_arrayDestroy();
      unint64_t v48 = (unint64_t)v12;
      sub_2147201A0((uint64_t)v12, v46);
      if ((v64 & 1) == 0) {
        goto LABEL_33;
      }
      id v65 = *(id *)&v33[v38];
      uint64_t v66 = swift_bridgeObjectRetain();
      char v67 = sub_214734560(v66);
      swift_bridgeObjectRelease();

      if ((v67 & 1) == 0) {
        goto LABEL_33;
      }
    }
    uint64_t v49 = 0;
    uint64_t v50 = (void *)v48;
    if (v80)
    {
      while (1)
      {
        unint64_t v48 = v79;
        sub_21471ED54((uint64_t)v50, v79);
        char v51 = sub_21471E7D4((uint64_t)v50, v48, (uint64_t)&unk_26C5617D8);
        swift_arrayDestroy();
        sub_2147201A0((uint64_t)v50, v48);
        if (v51) {
          break;
        }
        id v82 = v50;
        unint64_t v83 = v48;
        uint64_t v68 = v37;
        unint64_t v69 = sub_214732E48((uint64_t)&v82, (uint64_t)v81, v37);

        if ((unsigned __int128)((uint64_t)v69 * (__int128)v80) >> 64 != ((uint64_t)v69 * v80) >> 63) {
          goto LABEL_41;
        }
        if (!__OFADD__(v49, (void)v69 * v80)) {
          return;
        }
        __break(1u);
LABEL_33:
        id v82 = *(id *)&v37[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory];
        id v70 = v82;
        swift_getAtKeyPath();

        uint64_t v71 = v84;
        id v82 = *(id *)&v37[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory];
        id v72 = v82;
        swift_getAtKeyPath();

        uint64_t v73 = v84 * v76;
        if ((unsigned __int128)(v84 * (__int128)v76) >> 64 != (v84 * v76) >> 63)
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return;
        }
        uint64_t v49 = v71 + v73;
        if (__OFADD__(v71, v73)) {
          goto LABEL_38;
        }
        uint64_t v50 = (void *)v48;
        if (!v80) {
          goto LABEL_36;
        }
      }
      id v52 = v78;
      int v12 = v81;
      if (*(void *)&v78[OBJC_IVAR____TtC9SEService16SEPackageDetails_type + 8] == 26)
      {
        id v82 = *(id *)&v37[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_selectableMemory];
        id v53 = v82;
        swift_getAtKeyPath();

        BOOL v54 = __OFADD__(v49, v84);
        v49 += v84;
        if (v54) {
          goto LABEL_40;
        }
      }
      id v82 = *(id *)&v37[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_personalizedMemory];
      id v55 = v82;
      swift_getAtKeyPath();

      if ((unsigned __int128)(v84 * (__int128)v80) >> 64 != (v84 * v80) >> 63) {
        goto LABEL_39;
      }
      if (!__OFADD__(v49, v84 * v80)) {
        return;
      }
      __break(1u);
      goto LABEL_25;
    }
LABEL_36:
  }
  else
  {
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v36 = 0xD00000000000003CLL;
    *(void *)(v36 + 8) = 0x80000002147BE880;
    *(unsigned char *)(v36 + 16) = 0;
    swift_willThrow();
  }
}

char *sub_214732E48(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = sub_2147ACE18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v11 = *(void **)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  if (qword_26781BF50 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v6, (uint64_t)qword_26782C6B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  sub_21471ED54((uint64_t)v11, v10);
  unint64_t v13 = a3;
  swift_retain();
  sub_21471ED54((uint64_t)v11, v10);
  swift_retain();
  uint64_t v14 = v13;
  uint64_t v15 = v6;
  unint64_t v16 = sub_2147ACDF8();
  int v56 = sub_2147AD1B8();
  if (os_log_type_enabled(v16, (os_log_type_t)v56))
  {
    os_log_t v50 = v16;
    char v51 = v9;
    unint64_t v48 = v14;
    uint64_t v52 = v7;
    uint64_t v53 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v62 = v49;
    *(_DWORD *)uint64_t v17 = 136315906;
    id v58 = (id)sub_2147601CC(0xD000000000000037, 0x80000002147BE840, &v62);
    sub_2147AD248();
    *(_WORD *)(v17 + 12) = 2080;
    id v58 = v11;
    unint64_t v59 = v10;
    sub_21471ED54((uint64_t)v11, v10);
    sub_21471ED54((uint64_t)v11, v10);
    sub_2147ACF78();
    uint64_t v18 = sub_2147ACF88();
    BOOL v54 = a3;
    uint64_t v19 = a2;
    uint64_t v20 = v18;
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    sub_2147201A0((uint64_t)v11, v10);
    id v58 = (id)sub_2147601CC(v20, v22, &v62);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_2147201A0((uint64_t)v11, v10);
    sub_2147201A0((uint64_t)v11, v10);
    *(_WORD *)(v17 + 22) = 2080;
    uint64_t v23 = sub_2147AD298();
    id v58 = (id)sub_2147601CC(v23, v24, &v62);
    sub_2147AD248();
    uint64_t v55 = v19;
    a3 = v54;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 32) = 2080;
    if (a3)
    {
      uint64_t v25 = v48;
      id v26 = objc_msgSend(v48, sel_debugDescription);
      uint64_t v27 = sub_2147ACF58();
      unint64_t v29 = v28;
    }
    else
    {
      unint64_t v29 = 0xE500000000000000;
      uint64_t v27 = 0x3E6C696E3CLL;
      uint64_t v25 = v48;
    }
    id v58 = (id)sub_2147601CC(v27, v29, &v62);
    sub_2147AD248();

    swift_bridgeObjectRelease();
    os_log_t v31 = v50;
    _os_log_impl(&dword_2146ED000, v50, (os_log_type_t)v56, "%s %s %s %s", (uint8_t *)v17, 0x2Au);
    uint64_t v32 = v49;
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v32, -1, -1);
    MEMORY[0x2166A8870](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
    uint64_t v30 = v57;
    uint64_t v14 = v25;
    if (a3) {
      goto LABEL_12;
    }
  }
  else
  {
    sub_2147201A0((uint64_t)v11, v10);
    sub_2147201A0((uint64_t)v11, v10);

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    uint64_t v30 = v57;
    if (a3) {
      goto LABEL_12;
    }
  }
  id v58 = v11;
  unint64_t v59 = v10;
  uint64_t result = sub_214731A88((uint64_t *)&v58);
  if (v30) {
    return result;
  }
  a3 = result;
  if (!result)
  {
    id v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    sub_2147AD348();
    id v58 = v11;
    unint64_t v59 = v10;
    sub_21471ED54((uint64_t)v11, v10);
    sub_21471ED54((uint64_t)v11, v10);
    sub_2147ACF78();
    uint64_t v41 = (void *)sub_2147ACF88();
    unint64_t v43 = v42;
    swift_bridgeObjectRelease();
    sub_2147201A0((uint64_t)v11, v10);
    swift_bridgeObjectRelease();
    id v58 = v41;
    unint64_t v59 = v43;
    sub_2147ACFC8();
    id v44 = v58;
    unint64_t v45 = v59;
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v46 = v44;
    *(void *)(v46 + 8) = v45;
    *(unsigned char *)(v46 + 16) = 0;
    return (char *)swift_willThrow();
  }
LABEL_12:
  sub_21471ED54((uint64_t)v11, v10);
  unint64_t v34 = v14;
  char v35 = sub_21471E7D4((uint64_t)v11, v10, (uint64_t)&unk_26C560878);
  swift_arrayDestroy();
  sub_2147201A0((uint64_t)v11, v10);
  if (v35)
  {
    id v58 = *(id *)&a3[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_personalizedMemory];
    id v36 = v58;
    swift_getAtKeyPath();

    return (char *)v62;
  }
  else
  {
    id v58 = *(id *)&a3[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_selectableMemory];
    id v37 = v58;
    swift_getAtKeyPath();
    uint64_t v38 = v62;
    uint64_t v39 = a3;

    id v40 = *(id *)&v39[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_personalizedMemory];
    id v61 = v40;
    swift_getAtKeyPath();

    uint64_t result = (char *)(v38 + v60);
    if (__OFADD__(v38, v60)) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2147334D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v51 = a1;
  uint64_t v52 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v53 = v8;
  uint64_t v54 = 0;
  uint64_t v55 = v11 & v9;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21476220C((uint64_t)&v48);
  uint64_t v12 = v49;
  if (v49 == 26)
  {
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2147347DC();
    return swift_release();
  }
  uint64_t v13 = v48;
  uint64_t v47 = v50;
  uint64_t v14 = (void *)*a5;
  unint64_t v16 = sub_21477EA08(v48, v49);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      uint64_t v23 = (void *)*a5;
      if ((v15 & 1) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_21479064C();
      uint64_t v23 = (void *)*a5;
      if ((v20 & 1) == 0) {
        goto LABEL_15;
      }
    }
LABEL_12:
    uint64_t v24 = *(void *)(v23[7] + 8 * v16);
    sub_2147201A0(v13, v12);
    if (!__OFADD__(v24, v47))
    {
      *(void *)(v23[7] + 8 * v16) = v24 + v47;
      goto LABEL_26;
    }
    goto LABEL_29;
  }
  sub_214791D00(v19, a4 & 1);
  unint64_t v21 = sub_21477EA08(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    uint64_t v23 = (void *)*a5;
    if ((v20 & 1) == 0)
    {
LABEL_15:
      v23[(v16 >> 6) + 8] |= 1 << v16;
      uint64_t v25 = (uint64_t *)(v23[6] + 16 * v16);
      *uint64_t v25 = v13;
      v25[1] = v12;
      *(void *)(v23[7] + 8 * v16) = v47;
      uint64_t v26 = v23[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        v23[2] = v28;
LABEL_26:
        while (1)
        {
          sub_21476220C((uint64_t)&v48);
          uint64_t v45 = v49;
          if (v49 == 26) {
            goto LABEL_27;
          }
          uint64_t v29 = v48;
          uint64_t v30 = v50;
          os_log_t v31 = (void *)*a5;
          unint64_t v33 = sub_21477EA08(v48, v49);
          uint64_t v34 = v31[2];
          BOOL v35 = (v32 & 1) == 0;
          uint64_t v36 = v34 + v35;
          if (__OFADD__(v34, v35)) {
            goto LABEL_28;
          }
          char v37 = v32;
          if (v31[3] < v36)
          {
            sub_214791D00(v36, 1);
            unint64_t v38 = sub_21477EA08(v29, v45);
            if ((v37 & 1) != (v39 & 1)) {
              goto LABEL_31;
            }
            unint64_t v33 = v38;
          }
          id v40 = (void *)*a5;
          if (v37)
          {
            uint64_t v41 = *(void *)(v40[7] + 8 * v33);
            sub_2147201A0(v29, v45);
            if (__OFADD__(v41, v30)) {
              goto LABEL_29;
            }
            *(void *)(v40[7] + 8 * v33) = v41 + v30;
          }
          else
          {
            v40[(v33 >> 6) + 8] |= 1 << v33;
            unint64_t v42 = (uint64_t *)(v40[6] + 16 * v33);
            *unint64_t v42 = v29;
            v42[1] = v45;
            *(void *)(v40[7] + 8 * v33) = v30;
            uint64_t v43 = v40[2];
            BOOL v27 = __OFADD__(v43, 1);
            uint64_t v44 = v43 + 1;
            if (v27) {
              goto LABEL_30;
            }
            v40[2] = v44;
          }
        }
      }
      goto LABEL_30;
    }
    goto LABEL_12;
  }
LABEL_31:
  uint64_t result = sub_2147AD6B8();
  __break(1u);
  return result;
}

uint64_t sub_2147337E0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_214734314(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_21473384C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21473384C(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_2147AD628();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          id v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_214733ED8((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_214734300((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_2147AD098();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      char v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        uint64_t v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *uint64_t v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_214734148(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_214734148((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_214733ED8((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_2147AD498();
  __break(1u);
  return result;
}

uint64_t sub_214733ED8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      char v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            char v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    char v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_214734244((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

char *sub_214734148(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_214734244(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_2147AD4F8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_214734300(uint64_t a1)
{
  return sub_214734148(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_214734314(uint64_t a1)
{
  return sub_21474D704(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_214734328(unint64_t a1, unint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    if (!v4) {
      return v5;
    }
    uint64_t v15 = MEMORY[0x263F8EE78];
    uint64_t result = sub_21474D37C(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    uint64_t v7 = 0;
    uint64_t v5 = v15;
    uint64_t v8 = *(void **)(a2 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_selectableMemory);
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x2166A7680](v7, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v7 + 32);
      }
      uint64_t v10 = v9;
      id v11 = v8;
      swift_getAtKeyPath();

      unint64_t v13 = *(void *)(v15 + 16);
      unint64_t v12 = *(void *)(v15 + 24);
      a2 = v13 + 1;
      if (v13 >= v12 >> 1) {
        sub_21474D37C(v12 > 1, v13 + 1, 1);
      }
      ++v7;
      *(void *)(v15 + 16) = a2;
      *(void *)(v15 + 8 * v13 + 32) = v14;
      if (v4 == v7) {
        return v5;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2147AD4B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_2147344B8()
{
  unint64_t result = qword_26781C6D0;
  if (!qword_26781C6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C6D0);
  }
  return result;
}

unint64_t sub_21473450C()
{
  unint64_t result = qword_26781D340;
  if (!qword_26781D340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D340);
  }
  return result;
}

uint64_t sub_214734560(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v8 = v7 | (i << 6);
    }
    else
    {
      int64_t v9 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_41;
      }
      if (v9 >= v22)
      {
LABEL_39:
        swift_release();
        return 0;
      }
      unint64_t v10 = *(void *)(v21 + 8 * v9);
      ++i;
      if (!v10)
      {
        int64_t i = v9 + 1;
        if (v9 + 1 >= v22) {
          goto LABEL_39;
        }
        unint64_t v10 = *(void *)(v21 + 8 * i);
        if (!v10)
        {
          int64_t i = v9 + 2;
          if (v9 + 2 >= v22) {
            goto LABEL_39;
          }
          unint64_t v10 = *(void *)(v21 + 8 * i);
          if (!v10)
          {
            int64_t i = v9 + 3;
            if (v9 + 3 >= v22) {
              goto LABEL_39;
            }
            unint64_t v10 = *(void *)(v21 + 8 * i);
            if (!v10)
            {
              int64_t v11 = v9 + 4;
              if (v11 >= v22) {
                goto LABEL_39;
              }
              unint64_t v10 = *(void *)(v21 + 8 * v11);
              for (int64_t i = v11; !v10; ++v11)
              {
                int64_t i = v11 + 1;
                if (__OFADD__(v11, 1)) {
                  goto LABEL_42;
                }
                if (i >= v22) {
                  goto LABEL_39;
                }
                unint64_t v10 = *(void *)(v21 + 8 * i);
              }
            }
          }
        }
      }
      unint64_t v4 = (v10 - 1) & v10;
      unint64_t v8 = __clz(__rbit64(v10)) + (i << 6);
    }
    uint64_t v12 = qword_26C561728;
    if (qword_26C561728)
    {
      unint64_t v13 = (char **)(*(void *)(a1 + 48) + 16 * v8);
      uint64_t v14 = *v13;
      uint64_t v15 = v13[1];
      BOOL v16 = (char *)qword_26C561738 == *v13 && off_26C561740 == (_UNKNOWN *)v15;
      if (v16 || (uint64_t result = sub_2147AD668(), (result & 1) != 0))
      {
LABEL_38:
        swift_arrayDestroy();
        swift_release();
        return 1;
      }
      if (v12 != 1) {
        break;
      }
    }
LABEL_4:
    uint64_t result = swift_arrayDestroy();
  }
  uint64_t v17 = &off_26C561750;
  uint64_t v18 = 1;
  while (1)
  {
    uint64_t v19 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (*(v17 - 1) == v14 && *v17 == v15) {
      goto LABEL_38;
    }
    uint64_t result = sub_2147AD668();
    if (result) {
      goto LABEL_38;
    }
    v17 += 2;
    ++v18;
    if (v19 == v12) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2147347DC()
{
  return swift_release();
}

BOOL static JPKIInternalTypes.CertificateType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t JPKIInternalTypes.CertificateType.hash(into:)()
{
  return sub_2147AD738();
}

uint64_t sub_214734830()
{
  if (*v0) {
    return 0x676E696E676973;
  }
  else {
    return 1919251317;
  }
}

uint64_t sub_214734864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214745C80(a1, a2);
  *a3 = result;
  return result;
}

void sub_21473488C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_214734898(uint64_t a1)
{
  unint64_t v2 = sub_214734CA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147348D4(uint64_t a1)
{
  unint64_t v2 = sub_214734CA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214734910(uint64_t a1)
{
  unint64_t v2 = sub_214734CF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473494C(uint64_t a1)
{
  unint64_t v2 = sub_214734CF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214734988(uint64_t a1)
{
  unint64_t v2 = sub_214734D4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147349C4(uint64_t a1)
{
  unint64_t v2 = sub_214734D4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JPKIInternalTypes.CertificateType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6E0);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6E8);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6F0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214734CA4();
  sub_2147AD768();
  unint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_214734CF8();
    uint64_t v14 = v18;
    sub_2147AD5B8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_214734D4C();
    sub_2147AD5B8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_214734CA4()
{
  unint64_t result = qword_26781C6F8;
  if (!qword_26781C6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C6F8);
  }
  return result;
}

unint64_t sub_214734CF8()
{
  unint64_t result = qword_26781C700;
  if (!qword_26781C700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C700);
  }
  return result;
}

unint64_t sub_214734D4C()
{
  unint64_t result = qword_26781C708;
  if (!qword_26781C708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C708);
  }
  return result;
}

uint64_t JPKIInternalTypes.CertificateType.hashValue.getter()
{
  return sub_2147AD748();
}

uint64_t JPKIInternalTypes.CertificateType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C710);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C718);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C720);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214734CA4();
  int64_t v11 = v32;
  sub_2147AD758();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_2147AD5A8();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_2147AD388();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781C298);
    void *v22 = &type metadata for JPKIInternalTypes.CertificateType;
    sub_2147AD538();
    sub_2147AD378();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_214734CF8();
    uint64_t v18 = v14;
    sub_2147AD528();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_214734D4C();
    sub_2147AD528();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  unsigned char *v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

BOOL sub_214735240(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_214735258@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return JPKIInternalTypes.CertificateType.init(from:)(a1, a2);
}

uint64_t sub_214735270(void *a1)
{
  return JPKIInternalTypes.CertificateType.encode(to:)(a1);
}

void JPKIInternalTypes.CertificateInfo.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t JPKIInternalTypes.CertificateInfo.authTriesRemaining.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_21473529C()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_2147352D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214745D64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2147352FC(uint64_t a1)
{
  unint64_t v2 = sub_2147354F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214735338(uint64_t a1)
{
  unint64_t v2 = sub_2147354F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JPKIInternalTypes.CertificateInfo.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C728);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2147354F4();
  sub_2147AD768();
  char v14 = v8;
  char v13 = 0;
  sub_214735548();
  sub_2147AD608();
  if (!v2)
  {
    char v12 = 1;
    sub_2147AD618();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2147354F4()
{
  unint64_t result = qword_26781C730;
  if (!qword_26781C730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C730);
  }
  return result;
}

unint64_t sub_214735548()
{
  unint64_t result = qword_26781C738;
  if (!qword_26781C738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C738);
  }
  return result;
}

uint64_t JPKIInternalTypes.CertificateInfo.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C740);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2147354F4();
  sub_2147AD758();
  if (!v2)
  {
    char v14 = 0;
    sub_214735754();
    sub_2147AD588();
    char v9 = v15;
    char v13 = 1;
    char v10 = sub_2147AD598();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_214735754()
{
  unint64_t result = qword_26781C748;
  if (!qword_26781C748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C748);
  }
  return result;
}

uint64_t sub_2147357A8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return JPKIInternalTypes.CertificateInfo.init(from:)(a1, a2);
}

uint64_t sub_2147357C0(void *a1)
{
  return JPKIInternalTypes.CertificateInfo.encode(to:)(a1);
}

uint64_t JPKIInternalTypes.CertificateData.certificate.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_21472BBA4(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t sub_214735814()
{
  return 0x6369666974726563;
}

uint64_t sub_214735834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6369666974726563 && a2 == 0xEB00000000657461)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2147AD668();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2147358E4(uint64_t a1)
{
  unint64_t v2 = sub_214735AFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214735920(uint64_t a1)
{
  unint64_t v2 = sub_214735AFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JPKIInternalTypes.CertificateData.deinit()
{
  sub_21472BBFC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return v0;
}

uint64_t JPKIInternalTypes.CertificateData.__deallocating_deinit()
{
  sub_21472BBFC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t JPKIInternalTypes.CertificateData.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C750);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214735AFC();
  sub_2147AD768();
  long long v9 = *(_OWORD *)(v2 + 16);
  sub_21472C080();
  sub_2147AD608();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_214735AFC()
{
  unint64_t result = qword_26781C758;
  if (!qword_26781C758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C758);
  }
  return result;
}

uint64_t JPKIInternalTypes.CertificateData.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  JPKIInternalTypes.CertificateData.init(from:)(a1);
  return v2;
}

uint64_t JPKIInternalTypes.CertificateData.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C760);
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214735AFC();
  sub_2147AD758();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_21472C16C();
    sub_2147AD588();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
    *(_OWORD *)(v1 + 16) = v8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_214735D54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214736EE8(a1, (uint64_t (*)(uint64_t))JPKIInternalTypes.CertificateData.init(from:), a2);
}

uint64_t sub_214735D84(void *a1)
{
  return JPKIInternalTypes.CertificateData.encode(to:)(a1);
}

uint64_t sub_214735DA8()
{
  if (*v0) {
    return 0x69426D6574737973;
  }
  else {
    return 0x647261646E617473;
  }
}

uint64_t sub_214735DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214745E44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214735E18(uint64_t a1)
{
  unint64_t v2 = sub_21473627C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214735E54(uint64_t a1)
{
  unint64_t v2 = sub_21473627C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214735E90()
{
  return 12383;
}

uint64_t sub_214735EA0(uint64_t a1)
{
  unint64_t v2 = sub_214736324();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214735EDC(uint64_t a1)
{
  unint64_t v2 = sub_214736324();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214735F18(uint64_t a1)
{
  unint64_t v2 = sub_2147362D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214735F54(uint64_t a1)
{
  unint64_t v2 = sub_2147362D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JPKIInternalTypes.UserAuthentication.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C768);
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  MEMORY[0x270FA5388](v3);
  char v17 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C770);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C778);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v1[1];
  uint64_t v20 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21473627C();
  sub_2147AD768();
  if (v12)
  {
    char v23 = 0;
    sub_214736324();
    sub_2147AD5B8();
    uint64_t v13 = v22;
    sub_2147AD5D8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v13);
  }
  else
  {
    char v24 = 1;
    sub_2147362D0();
    char v15 = v17;
    sub_2147AD5B8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_21473627C()
{
  unint64_t result = qword_26781C780;
  if (!qword_26781C780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C780);
  }
  return result;
}

unint64_t sub_2147362D0()
{
  unint64_t result = qword_26781C788;
  if (!qword_26781C788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C788);
  }
  return result;
}

unint64_t sub_214736324()
{
  unint64_t result = qword_26781C790;
  if (!qword_26781C790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C790);
  }
  return result;
}

uint64_t JPKIInternalTypes.UserAuthentication.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C798);
  uint64_t v30 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C7A0);
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C7A8);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21473627C();
  int v11 = v31;
  sub_2147AD758();
  if (v11) {
    goto LABEL_9;
  }
  uint64_t v12 = v30;
  unint64_t v31 = a1;
  uint64_t v13 = v10;
  uint64_t v14 = sub_2147AD5A8();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v17 = sub_2147AD388();
    swift_allocError();
    uint64_t v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781C298);
    void *v19 = &type metadata for JPKIInternalTypes.UserAuthentication;
    sub_2147AD538();
    sub_2147AD378();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x263F8DCB0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v8);
    a1 = v31;
LABEL_9:
    uint64_t v20 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v20);
  }
  if (*(unsigned char *)(v14 + 32))
  {
    char v33 = 1;
    sub_2147362D0();
    sub_2147AD528();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v4, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
  else
  {
    char v32 = 0;
    sub_214736324();
    sub_2147AD528();
    uint64_t v22 = v10;
    uint64_t v15 = sub_2147AD558();
    uint64_t v23 = v29;
    uint64_t v16 = v24;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v22, v8);
  }
  uint64_t v25 = v28;
  *uint64_t v28 = v15;
  v25[1] = v16;
  uint64_t v20 = (uint64_t)v31;
  return __swift_destroy_boxed_opaque_existential_1(v20);
}

uint64_t sub_214736810@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return JPKIInternalTypes.UserAuthentication.init(from:)(a1, a2);
}

uint64_t sub_214736828(void *a1)
{
  return JPKIInternalTypes.UserAuthentication.encode(to:)(a1);
}

uint64_t JPKIInternalTypes.DigitalSignature.certificateData.getter()
{
  return swift_retain();
}

uint64_t JPKIInternalTypes.DigitalSignature.signature.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_21472BBA4(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t sub_21473687C()
{
  if (*v0) {
    return 0x727574616E676973;
  }
  else {
    return 0x6369666974726563;
  }
}

uint64_t sub_2147368C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214745F5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2147368F0(uint64_t a1)
{
  unint64_t v2 = sub_214736B94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473692C(uint64_t a1)
{
  unint64_t v2 = sub_214736B94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JPKIInternalTypes.DigitalSignature.deinit()
{
  swift_release();
  sub_21472BBFC(*(void *)(v0 + 24), *(void *)(v0 + 32));
  return v0;
}

uint64_t JPKIInternalTypes.DigitalSignature.__deallocating_deinit()
{
  swift_release();
  sub_21472BBFC(*(void *)(v0 + 24), *(void *)(v0 + 32));
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t JPKIInternalTypes.DigitalSignature.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C7B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214736B94();
  sub_2147AD768();
  *(void *)&long long v10 = *(void *)(v3 + 16);
  char v11 = 0;
  type metadata accessor for JPKIInternalTypes.CertificateData();
  sub_2147416E0(&qword_26781C7C0, (void (*)(void))type metadata accessor for JPKIInternalTypes.CertificateData);
  sub_2147AD608();
  if (!v2)
  {
    long long v10 = *(_OWORD *)(v3 + 24);
    char v11 = 1;
    sub_21472C080();
    sub_2147AD608();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_214736B94()
{
  unint64_t result = qword_26781C7B8;
  if (!qword_26781C7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C7B8);
  }
  return result;
}

uint64_t type metadata accessor for JPKIInternalTypes.CertificateData()
{
  return self;
}

uint64_t JPKIInternalTypes.DigitalSignature.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  JPKIInternalTypes.DigitalSignature.init(from:)(a1);
  return v2;
}

uint64_t JPKIInternalTypes.DigitalSignature.init(from:)(void *a1)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C7C8);
  uint64_t v4 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214736B94();
  sub_2147AD758();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v4;
    type metadata accessor for JPKIInternalTypes.CertificateData();
    char v13 = 0;
    sub_2147416E0(&qword_26781C7D0, (void (*)(void))type metadata accessor for JPKIInternalTypes.CertificateData);
    uint64_t v8 = v11;
    sub_2147AD588();
    *(void *)(v1 + 16) = v12;
    char v13 = 1;
    sub_21472C16C();
    sub_2147AD588();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v8);
    *(_OWORD *)(v1 + 24) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_214736EB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214736EE8(a1, (uint64_t (*)(uint64_t))JPKIInternalTypes.DigitalSignature.init(from:), a2);
}

uint64_t sub_214736EE8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v7 = swift_allocObject();
  uint64_t result = a2(a1);
  if (!v3) {
    *a3 = v7;
  }
  return result;
}

uint64_t sub_214736F50(void *a1)
{
  return JPKIInternalTypes.DigitalSignature.encode(to:)(a1);
}

unint64_t JPKIInternalTypes.InternalError.localizedDescription.getter()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  switch(*(unsigned char *)(v0 + 40))
  {
    case 1:
      unint64_t v6 = 0x6F72724520435058;
      goto LABEL_15;
    case 2:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD00000000000001DLL;
      sub_2147AD638();
      goto LABEL_8;
    case 3:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000011;
      goto LABEL_15;
    case 4:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000017;
      goto LABEL_15;
    case 5:
      unint64_t v8 = 0;
      sub_2147AD348();
      sub_2147ACFC8();
      sub_2147ACFC8();
      sub_2147ACFC8();
      sub_2147ACFC8();
      sub_2147ACFC8();
      sub_2147AD138();
LABEL_8:
      sub_2147ACFC8();
      swift_bridgeObjectRelease();
      return v8;
    case 6:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000012;
      goto LABEL_15;
    case 7:
      sub_21472BBA4(v1, v2);
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD00000000000002ALL;
      sub_2147ACC58();
      sub_2147ACFC8();
      swift_bridgeObjectRelease();
      sub_2147ACFC8();
      sub_2147ACFC8();
      sub_21472BBFC(v1, v2);
      return v8;
    case 8:
    case 9:
      unint64_t v8 = 0;
      sub_2147AD348();
      sub_2147ACFC8();
      sub_2147ACFC8();
      sub_2147ACFC8();
      goto LABEL_16;
    case 0xA:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000017;
      sub_2147AD638();
      sub_2147ACFC8();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 0xB:
      unint64_t v8 = 0;
      sub_2147AD348();
      sub_2147ACFC8();
      goto LABEL_16;
    case 0xC:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000022;
      goto LABEL_15;
    case 0xD:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0x20737365636F7250;
      sub_2147ACFC8();
      goto LABEL_16;
    case 0xE:
      if (!(v4 | v2 | v1 | v3 | v5)) {
        return 0xD000000000000018;
      }
      if (v1 != 1 || v4 | v2 | v3 | v5) {
        return 0xD000000000000020;
      }
      return 0xD000000000000016;
    default:
      sub_2147AD348();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0x73694D2065707954;
LABEL_15:
      unint64_t v8 = v6;
LABEL_16:
      sub_2147ACFC8();
      return v8;
  }
}

unint64_t JPKIInternalTypes.InternalError.errorDescription.getter()
{
  return JPKIInternalTypes.InternalError.localizedDescription.getter();
}

unint64_t sub_214737620(char a1)
{
  unint64_t result = 0x6D73694D65707974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726F727245637078;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
    case 11:
    case 16:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x797274656D6F6962;
      break;
    case 5:
      unint64_t result = 0x6C616E7265746E69;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x61766E4973736170;
      break;
    case 9:
      unint64_t result = 0x61467463656C6573;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 12:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 13:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 14:
      unint64_t result = 0x46676E696E676973;
      break;
    case 15:
      unint64_t result = 0xD000000000000017;
      break;
    case 17:
      unint64_t result = 0x456E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214737878()
{
  return 0x43726F727245616CLL;
}

uint64_t sub_214737898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x43726F727245616CLL && a2 == 0xEB0000000065646FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2147AD668();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214737948(uint64_t a1)
{
  unint64_t v2 = sub_21473A0EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214737984(uint64_t a1)
{
  unint64_t v2 = sub_21473A0EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2147379C0()
{
  if (*v0) {
    return 0x6369666974726563;
  }
  else {
    return 7956599;
  }
}

uint64_t sub_214737A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214746080(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214737A28(uint64_t a1)
{
  unint64_t v2 = sub_214739EF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214737A64(uint64_t a1)
{
  unint64_t v2 = sub_214739EF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_214737AA0()
{
  return sub_214737620(*v0);
}

uint64_t sub_214737AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214746188(a1, a2);
  *a3 = result;
  return result;
}

void sub_214737AD0(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_214737ADC(uint64_t a1)
{
  unint64_t v2 = sub_214739C54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214737B18(uint64_t a1)
{
  unint64_t v2 = sub_214739C54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214737B54(uint64_t a1)
{
  unint64_t v2 = sub_21473A140();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214737B90(uint64_t a1)
{
  unint64_t v2 = sub_21473A140();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214737BCC(uint64_t a1)
{
  unint64_t v2 = sub_21473A194();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214737C08(uint64_t a1)
{
  unint64_t v2 = sub_21473A194();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214737C44()
{
  return 0x526465776F6C6C61;
}

uint64_t sub_214737C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x526465776F6C6C61 && a2 == 0xEE00736569727465)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2147AD668();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214737D24(uint64_t a1)
{
  unint64_t v2 = sub_214739E4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214737D60(uint64_t a1)
{
  unint64_t v2 = sub_214739E4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214737D9C()
{
  return 1952540791;
}

uint64_t sub_214737DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1952540791 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2147AD668();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214737E34(uint64_t a1)
{
  unint64_t v2 = sub_21473A098();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214737E70(uint64_t a1)
{
  unint64_t v2 = sub_21473A098();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214737EAC()
{
  if (*v0) {
    return 7956599;
  }
  else {
    return 0x6F6974617265706FLL;
  }
}

uint64_t sub_214737EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214746908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214737F0C(uint64_t a1)
{
  unint64_t v2 = sub_214739EA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214737F48(uint64_t a1)
{
  unint64_t v2 = sub_214739EA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214737F84()
{
  return 7956599;
}

uint64_t sub_214737F98(uint64_t a1)
{
  unint64_t v2 = sub_214739D50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214737FD4(uint64_t a1)
{
  unint64_t v2 = sub_214739D50();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_214738010()
{
  uint64_t v1 = 0x444973736170;
  if (*v0 != 1) {
    uint64_t v1 = 0x496465776F6C6C61;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_214738070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2147469F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214738098(uint64_t a1)
{
  unint64_t v2 = sub_214739FF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147380D4(uint64_t a1)
{
  unint64_t v2 = sub_214739FF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214738110(uint64_t a1)
{
  unint64_t v2 = sub_214739F9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473814C(uint64_t a1)
{
  unint64_t v2 = sub_214739F9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214738188()
{
  return 0x444973736170;
}

uint64_t sub_21473819C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x444973736170 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2147AD668();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_21473822C(uint64_t a1)
{
  unint64_t v2 = sub_21473A044();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214738268(uint64_t a1)
{
  unint64_t v2 = sub_21473A044();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2147382A4()
{
  return 0xD000000000000015;
}

uint64_t sub_2147382C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214746B50(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2147382EC(uint64_t a1)
{
  unint64_t v2 = sub_214739CFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214738328(uint64_t a1)
{
  unint64_t v2 = sub_214739CFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214738364()
{
  if (*v0) {
    return 7956599;
  }
  else {
    return 6580577;
  }
}

uint64_t sub_214738388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214746BD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2147383B0(uint64_t a1)
{
  unint64_t v2 = sub_214739F48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147383EC(uint64_t a1)
{
  unint64_t v2 = sub_214739F48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214738428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7956599 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2147AD668();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2147384B0(uint64_t a1)
{
  unint64_t v2 = sub_214739DA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147384EC(uint64_t a1)
{
  unint64_t v2 = sub_214739DA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214738528(uint64_t a1)
{
  unint64_t v2 = sub_21473A23C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214738564(uint64_t a1)
{
  unint64_t v2 = sub_21473A23C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2147385A0(uint64_t a1)
{
  unint64_t v2 = sub_214739CA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147385DC(uint64_t a1)
{
  unint64_t v2 = sub_214739CA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214738618(uint64_t a1)
{
  unint64_t v2 = sub_214739DF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214738654(uint64_t a1)
{
  unint64_t v2 = sub_214739DF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214738690()
{
  return 0x69796C7265646E75;
}

uint64_t sub_2147386B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x69796C7265646E75 && a2 == 0xEF726F727245676ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2147AD668();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214738770(uint64_t a1)
{
  unint64_t v2 = sub_21473A1E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147387AC(uint64_t a1)
{
  unint64_t v2 = sub_21473A1E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JPKIInternalTypes.InternalError.encode(to:)(void *a1)
{
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C7D8);
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v62 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C7E0);
  uint64_t v80 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v107 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C7E8);
  uint64_t v79 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v105 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C7F0);
  uint64_t v78 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  unint64_t v103 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C7F8);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  BOOL v59 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C800);
  uint64_t v76 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  id v99 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C808);
  uint64_t v77 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v100 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C810);
  uint64_t v75 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v96 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C818);
  uint64_t v74 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v95 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C820);
  uint64_t v72 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  unint64_t v91 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C828);
  uint64_t v73 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v93 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C830);
  uint64_t v71 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v89 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C838);
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v86 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C840);
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v83 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C848);
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v65 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C850);
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v68 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C858);
  uint64_t v82 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C860);
  uint64_t v81 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C868);
  uint64_t v113 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  uint64_t v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = *(void *)v1;
  unint64_t v27 = *(void *)(v1 + 8);
  uint64_t v28 = *(void *)(v1 + 16);
  uint64_t v111 = *(void *)(v1 + 24);
  unint64_t v112 = v27;
  uint64_t v109 = *(void *)(v1 + 32);
  uint64_t v110 = v28;
  uint64_t v29 = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214739C54();
  uint64_t v114 = v26;
  sub_2147AD768();
  switch(v29)
  {
    case 1:
      LOBYTE(v118) = 1;
      sub_21473A1E8();
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      sub_2147AD5D8();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v21, v19);
      goto LABEL_24;
    case 2:
      LOBYTE(v118) = 4;
      sub_21473A0EC();
      char v35 = v83;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      uint64_t v36 = v85;
      sub_2147AD5F8();
      uint64_t v37 = &v116;
      goto LABEL_23;
    case 3:
      LOBYTE(v118) = 5;
      sub_21473A098();
      char v35 = v86;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      uint64_t v36 = v88;
      sub_2147AD5D8();
      uint64_t v37 = (uint64_t *)&v119;
      goto LABEL_23;
    case 4:
      LOBYTE(v118) = 6;
      sub_21473A044();
      char v35 = v89;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      uint64_t v36 = v90;
      sub_2147AD5D8();
      uint64_t v37 = (uint64_t *)&v103;
      goto LABEL_23;
    case 5:
      LOBYTE(v118) = 7;
      sub_214739FF0();
      uint64_t v38 = v93;
      uint64_t v40 = v114;
      uint64_t v39 = v115;
      sub_2147AD5B8();
      LOBYTE(v118) = 0;
      uint64_t v41 = v116;
      uint64_t v42 = v94;
      sub_2147AD5D8();
      if (!v41)
      {
        LOBYTE(v118) = 1;
        sub_2147AD5D8();
        uint64_t v118 = v109;
        char v120 = 2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781C8D0);
        sub_21473C1A4(&qword_26781C8D8);
        sub_2147AD608();
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v38, v42);
      return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v40, v39);
    case 6:
      LOBYTE(v118) = 8;
      sub_214739F9C();
      char v35 = v91;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      uint64_t v36 = v92;
      sub_2147AD5D8();
      uint64_t v37 = &v104;
      goto LABEL_23;
    case 7:
      LOBYTE(v118) = 9;
      uint64_t v44 = v117;
      unint64_t v45 = v112;
      sub_21472BBA4(v117, v112);
      sub_214739F48();
      uint64_t v46 = v95;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      uint64_t v118 = v44;
      unint64_t v119 = v45;
      char v120 = 0;
      sub_21472C080();
      uint64_t v47 = v97;
      uint64_t v48 = v116;
      sub_2147AD608();
      if (v48)
      {
        (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v47);
        (*(void (**)(char *, uint64_t))(v113 + 8))(v34, v30);
        return sub_21472BBFC(v44, v45);
      }
      LOBYTE(v118) = 1;
      sub_2147AD5D8();
      sub_21472BBFC(v44, v45);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v47);
LABEL_24:
      char v32 = *(uint64_t (**)(char *, uint64_t))(v113 + 8);
      char v33 = v34;
      return v32(v33, v30);
    case 8:
      LOBYTE(v118) = 10;
      sub_214739EF4();
      char v35 = v96;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      LOBYTE(v118) = 0;
      uint64_t v49 = v116;
      uint64_t v36 = v98;
      sub_2147AD5D8();
      if (!v49)
      {
        LOBYTE(v118) = 1;
        sub_2147AD5D8();
      }
      uint64_t v37 = (uint64_t *)&v107;
      goto LABEL_23;
    case 9:
      LOBYTE(v118) = 11;
      sub_214739EA0();
      char v35 = v100;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      LOBYTE(v118) = 0;
      uint64_t v50 = v116;
      uint64_t v36 = v102;
      sub_2147AD5D8();
      if (!v50)
      {
        LOBYTE(v118) = 1;
        sub_2147AD5D8();
      }
      uint64_t v37 = &v109;
      goto LABEL_23;
    case 10:
      LOBYTE(v118) = 12;
      sub_214739E4C();
      char v35 = v99;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      uint64_t v36 = v101;
      sub_2147AD5F8();
      uint64_t v37 = &v108;
      goto LABEL_23;
    case 11:
      LOBYTE(v118) = 14;
      sub_214739DA4();
      char v35 = v103;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      uint64_t v36 = v104;
      sub_2147AD5D8();
      uint64_t v37 = &v110;
      goto LABEL_23;
    case 12:
      LOBYTE(v118) = 15;
      sub_214739D50();
      char v35 = v105;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      uint64_t v36 = v106;
      sub_2147AD5D8();
      uint64_t v37 = &v111;
      goto LABEL_23;
    case 13:
      LOBYTE(v118) = 16;
      sub_214739CFC();
      char v35 = v107;
      char v34 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      uint64_t v36 = v108;
      sub_2147AD5D8();
      uint64_t v37 = (uint64_t *)&v112;
LABEL_23:
      (*(void (**)(char *, uint64_t))(*(v37 - 32) + 8))(v35, v36);
      goto LABEL_24;
    case 14:
      if (!(v110 | v112 | v117 | v111 | v109))
      {
        LOBYTE(v118) = 2;
        sub_21473A194();
        uint64_t v55 = v68;
        char v54 = v114;
        uint64_t v53 = v115;
        sub_2147AD5B8();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v55, v70);
        return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v54, v53);
      }
      unint64_t v51 = v110 | v112 | v111 | v109;
      if (v117 == 1 && !v51)
      {
        LOBYTE(v118) = 3;
        sub_21473A140();
        BOOL v52 = v65;
        char v54 = v114;
        uint64_t v53 = v115;
        sub_2147AD5B8();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v52, v67);
        return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v54, v53);
      }
      uint64_t v30 = v115;
      uint64_t v56 = v114;
      if (v117 != 2 || v51)
      {
        LOBYTE(v118) = 17;
        sub_214739CA8();
        uint64_t v58 = v62;
        sub_2147AD5B8();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v58, v64);
      }
      else
      {
        LOBYTE(v118) = 13;
        sub_214739DF8();
        uint64_t v57 = v59;
        sub_2147AD5B8();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v61);
      }
      char v32 = *(uint64_t (**)(char *, uint64_t))(v113 + 8);
      char v33 = v56;
      return v32(v33, v30);
    default:
      LOBYTE(v118) = 0;
      sub_21473A23C();
      unint64_t v31 = v114;
      uint64_t v30 = v115;
      sub_2147AD5B8();
      sub_2147AD5D8();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v24, v22);
      char v32 = *(uint64_t (**)(char *, uint64_t))(v113 + 8);
      char v33 = v31;
      return v32(v33, v30);
  }
}

unint64_t sub_214739C54()
{
  unint64_t result = qword_26781C870;
  if (!qword_26781C870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C870);
  }
  return result;
}

unint64_t sub_214739CA8()
{
  unint64_t result = qword_26781C878;
  if (!qword_26781C878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C878);
  }
  return result;
}

unint64_t sub_214739CFC()
{
  unint64_t result = qword_26781C880;
  if (!qword_26781C880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C880);
  }
  return result;
}

unint64_t sub_214739D50()
{
  unint64_t result = qword_26781C888;
  if (!qword_26781C888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C888);
  }
  return result;
}

unint64_t sub_214739DA4()
{
  unint64_t result = qword_26781C890;
  if (!qword_26781C890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C890);
  }
  return result;
}

unint64_t sub_214739DF8()
{
  unint64_t result = qword_26781C898;
  if (!qword_26781C898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C898);
  }
  return result;
}

unint64_t sub_214739E4C()
{
  unint64_t result = qword_26781C8A0;
  if (!qword_26781C8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C8A0);
  }
  return result;
}

unint64_t sub_214739EA0()
{
  unint64_t result = qword_26781C8A8;
  if (!qword_26781C8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C8A8);
  }
  return result;
}

unint64_t sub_214739EF4()
{
  unint64_t result = qword_26781C8B0;
  if (!qword_26781C8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C8B0);
  }
  return result;
}

unint64_t sub_214739F48()
{
  unint64_t result = qword_26781C8B8;
  if (!qword_26781C8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C8B8);
  }
  return result;
}

unint64_t sub_214739F9C()
{
  unint64_t result = qword_26781C8C0;
  if (!qword_26781C8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C8C0);
  }
  return result;
}

unint64_t sub_214739FF0()
{
  unint64_t result = qword_26781C8C8;
  if (!qword_26781C8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C8C8);
  }
  return result;
}

unint64_t sub_21473A044()
{
  unint64_t result = qword_26781C8E0;
  if (!qword_26781C8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C8E0);
  }
  return result;
}

unint64_t sub_21473A098()
{
  unint64_t result = qword_26781C8E8;
  if (!qword_26781C8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C8E8);
  }
  return result;
}

unint64_t sub_21473A0EC()
{
  unint64_t result = qword_26781C8F0;
  if (!qword_26781C8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C8F0);
  }
  return result;
}

unint64_t sub_21473A140()
{
  unint64_t result = qword_26781C8F8;
  if (!qword_26781C8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C8F8);
  }
  return result;
}

unint64_t sub_21473A194()
{
  unint64_t result = qword_26781C900;
  if (!qword_26781C900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C900);
  }
  return result;
}

unint64_t sub_21473A1E8()
{
  unint64_t result = qword_26781C908;
  if (!qword_26781C908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C908);
  }
  return result;
}

unint64_t sub_21473A23C()
{
  unint64_t result = qword_26781C910;
  if (!qword_26781C910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C910);
  }
  return result;
}

uint64_t JPKIInternalTypes.InternalError.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v206 = a2;
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C918);
  uint64_t v192 = *(void *)(v194 - 8);
  MEMORY[0x270FA5388](v194);
  v211 = (char *)&v156 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C920);
  uint64_t v174 = *(void *)(v193 - 8);
  MEMORY[0x270FA5388](v193);
  v210 = (char *)&v156 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C928);
  uint64_t v173 = *(void *)(v191 - 8);
  MEMORY[0x270FA5388](v191);
  v205 = (char *)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C930);
  uint64_t v172 = *(void *)(v190 - 8);
  MEMORY[0x270FA5388](v190);
  v204 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C938);
  uint64_t v186 = *(void *)(v188 - 8);
  MEMORY[0x270FA5388](v188);
  v202 = (char *)&v156 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C940);
  uint64_t v171 = *(void *)(v187 - 8);
  MEMORY[0x270FA5388](v187);
  v201 = (char *)&v156 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C948);
  uint64_t v170 = *(void *)(v189 - 8);
  MEMORY[0x270FA5388](v189);
  v203 = (char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C950);
  uint64_t v169 = *(void *)(v185 - 8);
  MEMORY[0x270FA5388](v185);
  v200 = (char *)&v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C958);
  uint64_t v168 = *(void *)(v184 - 8);
  MEMORY[0x270FA5388](v184);
  v199 = (char *)&v156 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C960);
  uint64_t v167 = *(void *)(v183 - 8);
  MEMORY[0x270FA5388](v183);
  v198 = (char *)&v156 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C968);
  uint64_t v161 = *(void *)(v182 - 8);
  MEMORY[0x270FA5388](v182);
  v209 = (char *)&v156 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C970);
  uint64_t v166 = *(void *)(v177 - 8);
  MEMORY[0x270FA5388](v177);
  v208 = (char *)&v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C978);
  uint64_t v165 = *(void *)(v181 - 8);
  MEMORY[0x270FA5388](v181);
  v197 = (char *)&v156 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C980);
  uint64_t v164 = *(void *)(v180 - 8);
  MEMORY[0x270FA5388](v180);
  v196 = (char *)&v156 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C988);
  uint64_t v178 = *(void *)(v179 - 8);
  MEMORY[0x270FA5388](v179);
  v207 = (char *)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C990);
  uint64_t v175 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  v195 = (char *)&v156 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C998);
  uint64_t v163 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v156 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C9A0);
  uint64_t v162 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v156 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C9A8);
  uint64_t v25 = *(void *)(v212 - 8);
  MEMORY[0x270FA5388](v212);
  unint64_t v27 = (char *)&v156 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a1[3];
  v213 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_214739C54();
  uint64_t v29 = v214;
  sub_2147AD758();
  if (v29) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v213);
  }
  uint64_t v158 = v24;
  uint64_t v159 = v21;
  uint64_t v156 = v19;
  uint64_t v30 = v207;
  unint64_t v31 = v208;
  char v32 = v209;
  uint64_t v160 = 0;
  char v33 = v210;
  char v34 = v211;
  uint64_t v214 = v25;
  uint64_t v35 = sub_2147AD5A8();
  uint64_t v36 = (char *)v35;
  if (*(void *)(v35 + 16) != 1)
  {
    uint64_t v41 = sub_2147AD388();
    swift_allocError();
    unint64_t v43 = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781C298);
    *unint64_t v43 = &type metadata for JPKIInternalTypes.InternalError;
    uint64_t v44 = v212;
    sub_2147AD538();
    sub_2147AD378();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v43, *MEMORY[0x263F8DCB0], v41);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v214 + 8))(v27, v44);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v213);
  }
  uint64_t v157 = v27;
  uint64_t v37 = v212;
  uint64_t v38 = v157;
  switch(*(unsigned char *)(v35 + 32))
  {
    case 1:
      LOBYTE(v215) = 1;
      sub_21473A1E8();
      unint64_t v45 = v159;
      uint64_t v46 = v160;
      sub_2147AD528();
      if (v46) {
        goto LABEL_40;
      }
      uint64_t v47 = v38;
      uint64_t v48 = v156;
      uint64_t v49 = sub_2147AD558();
      uint64_t v50 = v45;
      uint64_t v51 = 0;
      uint64_t v52 = v214;
      uint64_t v130 = v129;
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v163 + 8))(v50, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v47, v37);
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 1;
      goto LABEL_46;
    case 2:
      LOBYTE(v215) = 2;
      sub_21473A194();
      uint64_t v53 = v195;
      uint64_t v54 = v160;
      sub_2147AD528();
      uint64_t v51 = v54;
      if (v54) {
        goto LABEL_40;
      }
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v175 + 8))(v53, v176);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v214 + 8))(v38, v37);
      uint64_t v49 = 0;
      uint64_t v130 = 0;
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 14;
      goto LABEL_46;
    case 3:
      LOBYTE(v215) = 3;
      sub_21473A140();
      uint64_t v55 = v160;
      sub_2147AD528();
      uint64_t v51 = v55;
      if (v55) {
        goto LABEL_40;
      }
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v178 + 8))(v30, v179);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v214 + 8))(v38, v37);
      uint64_t v130 = 0;
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 14;
      uint64_t v49 = 1;
      goto LABEL_46;
    case 4:
      LOBYTE(v215) = 4;
      sub_21473A0EC();
      uint64_t v56 = v196;
      uint64_t v57 = v37;
      uint64_t v58 = v160;
      sub_2147AD528();
      if (v58) {
        goto LABEL_36;
      }
      BOOL v59 = v38;
      uint64_t v60 = v180;
      uint64_t v61 = sub_2147AD578();
      uint64_t v51 = 0;
      uint64_t v62 = v214;
      uint64_t v49 = v61;
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v164 + 8))(v56, v60);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v57);
      uint64_t v130 = 0;
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 2;
      goto LABEL_46;
    case 5:
      LOBYTE(v215) = 5;
      sub_21473A098();
      uint64_t v63 = v197;
      uint64_t v57 = v37;
      uint64_t v64 = v160;
      sub_2147AD528();
      if (v64) {
        goto LABEL_36;
      }
      uint64_t v65 = v38;
      uint64_t v66 = v181;
      uint64_t v49 = sub_2147AD558();
      uint64_t v51 = 0;
      uint64_t v67 = v63;
      uint64_t v68 = v214;
      uint64_t v130 = v134;
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v165 + 8))(v67, v66);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v57);
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 3;
      goto LABEL_46;
    case 6:
      LOBYTE(v215) = 6;
      sub_21473A044();
      uint64_t v57 = v37;
      uint64_t v69 = v160;
      sub_2147AD528();
      if (v69) {
        goto LABEL_36;
      }
      uint64_t v70 = v38;
      uint64_t v71 = v177;
      uint64_t v72 = sub_2147AD558();
      uint64_t v51 = 0;
      uint64_t v73 = v214;
      uint64_t v49 = v72;
      uint64_t v130 = v135;
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v166 + 8))(v31, v71);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v57);
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 4;
      goto LABEL_46;
    case 7:
      LOBYTE(v215) = 7;
      sub_214739FF0();
      uint64_t v74 = v32;
      uint64_t v57 = v37;
      uint64_t v75 = v160;
      sub_2147AD528();
      if (v75) {
        goto LABEL_36;
      }
      v211 = v36;
      LOBYTE(v215) = 0;
      uint64_t v76 = v182;
      uint64_t v77 = sub_2147AD558();
      uint64_t v78 = v214;
      uint64_t v130 = v136;
      v210 = (char *)v77;
      LOBYTE(v215) = 1;
      uint64_t v131 = sub_2147AD558();
      uint64_t v51 = v153;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781C8D0);
      char v217 = 2;
      sub_21473C1A4(&qword_26781C9B0);
      sub_2147AD588();
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v161 + 8))(v74, v76);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v157, v57);
      uint64_t v132 = v215;
      char v133 = 5;
      goto LABEL_48;
    case 8:
      LOBYTE(v215) = 8;
      sub_214739F9C();
      uint64_t v79 = v198;
      uint64_t v57 = v37;
      uint64_t v80 = v160;
      sub_2147AD528();
      if (v80) {
        goto LABEL_36;
      }
      uint64_t v81 = v38;
      uint64_t v82 = v183;
      uint64_t v49 = sub_2147AD558();
      uint64_t v51 = 0;
      uint64_t v83 = v79;
      uint64_t v84 = v214;
      uint64_t v130 = v137;
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v167 + 8))(v83, v82);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v57);
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 6;
      goto LABEL_46;
    case 9:
      LOBYTE(v215) = 9;
      sub_214739F48();
      uint64_t v85 = v199;
      uint64_t v57 = v37;
      uint64_t v86 = v160;
      sub_2147AD528();
      if (v86) {
        goto LABEL_36;
      }
      char v217 = 0;
      sub_21472C16C();
      uint64_t v87 = v184;
      sub_2147AD588();
      uint64_t v88 = v214;
      uint64_t v130 = v216;
      v210 = v215;
      v211 = v36;
      char v217 = 1;
      uint64_t v138 = sub_2147AD558();
      uint64_t v160 = 0;
      uint64_t v131 = v138;
      uint64_t v51 = v154;
      (*(void (**)(char *, uint64_t))(v168 + 8))(v85, v87);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v157, v57);
      uint64_t v132 = 0;
      char v133 = 7;
      goto LABEL_48;
    case 0xA:
      LOBYTE(v215) = 10;
      sub_214739EF4();
      uint64_t v89 = v200;
      uint64_t v57 = v37;
      uint64_t v90 = v160;
      sub_2147AD528();
      if (v90) {
        goto LABEL_36;
      }
      LOBYTE(v215) = 0;
      uint64_t v91 = v185;
      uint64_t v92 = sub_2147AD558();
      uint64_t v93 = v214;
      uint64_t v130 = v139;
      v210 = (char *)v92;
      v211 = v36;
      LOBYTE(v215) = 1;
      uint64_t v140 = sub_2147AD558();
      uint64_t v141 = v91;
      uint64_t v160 = 0;
      uint64_t v131 = v140;
      uint64_t v51 = v142;
      (*(void (**)(char *, uint64_t))(v169 + 8))(v89, v141);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v157, v57);
      uint64_t v132 = 0;
      char v133 = 8;
      goto LABEL_48;
    case 0xB:
      LOBYTE(v215) = 11;
      sub_214739EA0();
      uint64_t v94 = v203;
      uint64_t v57 = v37;
      uint64_t v95 = v160;
      sub_2147AD528();
      if (v95) {
        goto LABEL_36;
      }
      LOBYTE(v215) = 0;
      uint64_t v96 = v189;
      uint64_t v97 = sub_2147AD558();
      uint64_t v98 = v214;
      uint64_t v130 = v143;
      v210 = (char *)v97;
      v211 = v36;
      LOBYTE(v215) = 1;
      uint64_t v144 = sub_2147AD558();
      uint64_t v145 = v96;
      uint64_t v160 = 0;
      uint64_t v131 = v144;
      uint64_t v51 = v155;
      (*(void (**)(char *, uint64_t))(v170 + 8))(v94, v145);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v157, v57);
      uint64_t v132 = 0;
      char v133 = 9;
LABEL_48:
      uint64_t v149 = (uint64_t)v213;
      uint64_t v150 = v206;
      uint64_t v49 = (uint64_t)v210;
      goto LABEL_47;
    case 0xC:
      LOBYTE(v215) = 12;
      sub_214739E4C();
      id v99 = v201;
      uint64_t v57 = v37;
      uint64_t v100 = v160;
      sub_2147AD528();
      if (v100) {
        goto LABEL_36;
      }
      uint64_t v101 = v38;
      uint64_t v102 = v187;
      uint64_t v103 = sub_2147AD578();
      uint64_t v51 = 0;
      uint64_t v104 = v214;
      uint64_t v49 = v103;
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v171 + 8))(v99, v102);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v101, v57);
      uint64_t v130 = 0;
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 10;
      goto LABEL_46;
    case 0xD:
      LOBYTE(v215) = 13;
      sub_214739DF8();
      uint64_t v105 = v202;
      uint64_t v106 = v160;
      sub_2147AD528();
      uint64_t v51 = v106;
      if (v106) {
        goto LABEL_40;
      }
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v186 + 8))(v105, v188);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v214 + 8))(v38, v37);
      uint64_t v130 = 0;
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 14;
      uint64_t v49 = 2;
      goto LABEL_46;
    case 0xE:
      LOBYTE(v215) = 14;
      sub_214739DA4();
      uint64_t v107 = v204;
      uint64_t v57 = v37;
      uint64_t v108 = v160;
      sub_2147AD528();
      if (v108) {
        goto LABEL_36;
      }
      uint64_t v109 = v38;
      uint64_t v110 = v190;
      uint64_t v49 = sub_2147AD558();
      uint64_t v51 = 0;
      uint64_t v111 = v107;
      uint64_t v112 = v214;
      uint64_t v130 = v146;
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v172 + 8))(v111, v110);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v109, v57);
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 11;
      goto LABEL_46;
    case 0xF:
      LOBYTE(v215) = 15;
      sub_214739D50();
      uint64_t v113 = v205;
      uint64_t v57 = v37;
      uint64_t v114 = v160;
      sub_2147AD528();
      if (v114)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v214 + 8))(v38, v57);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v213);
      }
      uint64_t v121 = v38;
      uint64_t v122 = v191;
      uint64_t v49 = sub_2147AD558();
      uint64_t v51 = 0;
      uint64_t v123 = v113;
      uint64_t v124 = v214;
      uint64_t v130 = v151;
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v173 + 8))(v123, v122);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v124 + 8))(v121, v57);
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 12;
LABEL_46:
      uint64_t v149 = (uint64_t)v213;
      uint64_t v150 = v206;
      goto LABEL_47;
    case 0x10:
      LOBYTE(v215) = 16;
      sub_214739CFC();
      uint64_t v115 = v37;
      uint64_t v116 = v160;
      sub_2147AD528();
      if (v116) {
        goto LABEL_40;
      }
      uint64_t v125 = v38;
      uint64_t v126 = v193;
      uint64_t v127 = sub_2147AD558();
      uint64_t v51 = 0;
      uint64_t v128 = v214;
      uint64_t v49 = v127;
      uint64_t v130 = v152;
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v174 + 8))(v33, v126);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v125, v115);
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 13;
      goto LABEL_46;
    case 0x11:
      LOBYTE(v215) = 17;
      sub_214739CA8();
      uint64_t v117 = v34;
      uint64_t v118 = v160;
      sub_2147AD528();
      uint64_t v51 = v118;
      if (v118) {
        goto LABEL_40;
      }
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v192 + 8))(v117, v194);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v214 + 8))(v38, v37);
      uint64_t v130 = 0;
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 14;
      uint64_t v49 = 3;
      goto LABEL_46;
    default:
      LOBYTE(v215) = 0;
      sub_21473A23C();
      uint64_t v39 = v158;
      uint64_t v40 = v160;
      sub_2147AD528();
      if (v40)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v214 + 8))(v38, v37);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v213);
      }
      char v120 = v38;
      uint64_t v51 = 0;
      uint64_t v49 = sub_2147AD558();
      uint64_t v148 = v147;
      uint64_t v160 = 0;
      (*(void (**)(char *, uint64_t))(v162 + 8))(v39, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v214 + 8))(v120, v37);
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      char v133 = 0;
      uint64_t v149 = (uint64_t)v213;
      uint64_t v150 = v206;
      uint64_t v130 = v148;
LABEL_47:
      *(void *)uint64_t v150 = v49;
      *(void *)(v150 + 8) = v130;
      *(void *)(v150 + 16) = v131;
      *(void *)(v150 + 24) = v51;
      *(void *)(v150 + 32) = v132;
      *(unsigned char *)(v150 + 40) = v133;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v149);
      break;
  }
  return result;
}

uint64_t sub_21473C1A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781C8D0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21473C208@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return JPKIInternalTypes.InternalError.init(from:)(a1, a2);
}

uint64_t sub_21473C220(void *a1)
{
  return JPKIInternalTypes.InternalError.encode(to:)(a1);
}

unint64_t sub_21473C238()
{
  return JPKIInternalTypes.InternalError.localizedDescription.getter();
}

unsigned char *JPKIInternalTypes.CertificateInfo.init(type:authTriesRemaining:)@<X0>(unsigned char *result@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t JPKIInternalTypes.CertificateData.__allocating_init(certificateData:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

void *JPKIInternalTypes.DigitalSignature.__allocating_init(certificate:signature:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

uint64_t JPKIXPCRequest.passIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JPKIXPCRequest.operation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  unint64_t v6 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  unsigned __int8 v7 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 40) = v7;
  return sub_21473C36C(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_21473C36C(uint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, unsigned __int8 a6)
{
  int v8 = a6 >> 6;
  if (v8 == 2)
  {
    char v13 = a6 & 1;
    sub_21472BBA4(result, a2);
    uint64_t v11 = a4;
    unint64_t v12 = a5;
    char v10 = v13;
LABEL_6:
    return sub_21473C428(v11, v12, v10);
  }
  if (v8 != 1)
  {
    if (a6 >> 6) {
      return result;
    }
    char v10 = a4 & 1;
    uint64_t v11 = a2;
    unint64_t v12 = a3;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21473C428(uint64_t a1, unint64_t a2, char a3)
{
  if (a3) {
    return sub_21472BBA4(a1, a2);
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

unint64_t JPKIXPCRequest.JPKIOperation.description.getter()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 40);
  unint64_t result = 0x7472654364616572;
  switch(v1 >> 6)
  {
    case 1u:
      unint64_t result = 0xD000000000000013;
      break;
    case 2u:
      unint64_t result = 1852270963;
      break;
    case 3u:
      int8x16_t v3 = vorrq_s8(*(int8x16_t *)(v0 + 8), *(int8x16_t *)(v0 + 24));
      if (((v1 == 192) & ((*(void *)&vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL)) | *(void *)v0) == 0)) != 0) {
        unint64_t result = 0xD00000000000001CLL;
      }
      else {
        unint64_t result = 0x4C4341746567;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21473C528(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7472654364616572;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 1852270963;
      break;
    case 4:
      unint64_t result = 0x4C4341746567;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21473C5E4(uint64_t a1)
{
  unint64_t v2 = sub_21473D464();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473C620(uint64_t a1)
{
  unint64_t v2 = sub_21473D464();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_21473C65C()
{
  return sub_21473C528(*v0);
}

uint64_t sub_21473C664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214746CAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_21473C68C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_21473C698(uint64_t a1)
{
  unint64_t v2 = sub_21473D304();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473C6D4(uint64_t a1)
{
  unint64_t v2 = sub_21473D304();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21473C710(uint64_t a1)
{
  unint64_t v2 = sub_21473D358();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473C74C(uint64_t a1)
{
  unint64_t v2 = sub_21473D358();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21473C788(uint64_t a1)
{
  unint64_t v2 = sub_21473D61C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473C7C4(uint64_t a1)
{
  unint64_t v2 = sub_21473D61C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21473C800()
{
  if (*v0) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_21473C81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214746ED0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21473C844(uint64_t a1)
{
  unint64_t v2 = sub_21473D50C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473C880(uint64_t a1)
{
  unint64_t v2 = sub_21473D50C();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_21473C8BC()
{
  return ((unint64_t)*v0 << 8) + 12383;
}

uint64_t sub_21473C8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214746F94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21473C8F8(uint64_t a1)
{
  unint64_t v2 = sub_21473D3AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473C934(uint64_t a1)
{
  unint64_t v2 = sub_21473D3AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JPKIXPCRequest.JPKIOperation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C9B8);
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v42 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C9C0);
  uint64_t v47 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C9C8);
  uint64_t v45 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v50 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C9D0);
  uint64_t v46 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C9D8);
  uint64_t v41 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C9E0);
  uint64_t v57 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  unint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *(void *)(v1 + 8);
  uint64_t v59 = *(void *)v1;
  unint64_t v14 = *(void *)(v1 + 16);
  uint64_t v55 = *(void *)(v1 + 24);
  unint64_t v56 = v14;
  unint64_t v54 = *(void *)(v1 + 32);
  unsigned int v15 = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21473D304();
  uint64_t v16 = v12;
  sub_2147AD768();
  unsigned int v17 = v15;
  switch(v15 >> 6)
  {
    case 1u:
      LOBYTE(v61) = 2;
      sub_21473D464();
      uint64_t v26 = v50;
      uint64_t v27 = v60;
      sub_2147AD5B8();
      LOBYTE(v61) = v59 & 1;
      char v64 = 0;
      sub_214735548();
      uint64_t v28 = v51;
      uint64_t v29 = v58;
      sub_2147AD608();
      if (!v29)
      {
        uint64_t v61 = v13;
        unint64_t v62 = v56;
        char v64 = 1;
        sub_21473D4B8();
        sub_2147AD608();
        uint64_t v61 = v55;
        unint64_t v62 = v54;
        char v64 = 2;
        sub_2147AD608();
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v28);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v16, v27);
      break;
    case 2u:
      LOBYTE(v61) = 3;
      uint64_t v30 = v59;
      sub_21472BBA4(v59, v13);
      unint64_t v32 = v54;
      uint64_t v31 = v55;
      LODWORD(v50) = v15 & 1;
      sub_21473C428(v55, v54, v15 & 1);
      sub_21473D3AC();
      char v33 = v52;
      uint64_t v34 = v60;
      LODWORD(v51) = v17;
      sub_2147AD5B8();
      uint64_t v61 = v30;
      unint64_t v62 = v13;
      char v64 = 0;
      sub_21472C080();
      uint64_t v35 = v58;
      sub_2147AD608();
      if (v35)
      {
        sub_21473D400(v31, v32, (char)v50);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v53);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v34);
        uint64_t result = sub_21472BBFC(v30, v13);
      }
      else
      {
        char v38 = v51;
        LOBYTE(v61) = v56 & 1;
        char v64 = 1;
        sub_214735548();
        uint64_t v39 = v33;
        sub_2147AD608();
        uint64_t v61 = v31;
        unint64_t v62 = v32;
        uint64_t v40 = v53;
        v38 &= 1u;
        char v63 = v38;
        char v64 = 2;
        sub_21473D410();
        sub_2147AD608();
        sub_21472BBFC(v59, v13);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v40);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v34);
        uint64_t result = sub_21473D400(v55, v32, v38);
      }
      break;
    case 3u:
      if (v56 | v13 | v59 | v55 | v54 || v15 != 192)
      {
        LOBYTE(v61) = 4;
        sub_21473D358();
        uint64_t v37 = v42;
        uint64_t v36 = v60;
        sub_2147AD5B8();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v37, v44);
      }
      else
      {
        LOBYTE(v61) = 0;
        sub_21473D61C();
        uint64_t v36 = v60;
        sub_2147AD5B8();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v8);
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v12, v36);
      break;
    default:
      LODWORD(v51) = v15;
      uint64_t v18 = v55;
      unint64_t v19 = v56;
      LOBYTE(v61) = 1;
      unint64_t v20 = v13;
      sub_21473C428(v13, v56, v55 & 1);
      sub_21473D50C();
      uint64_t v21 = v48;
      sub_2147AD5B8();
      uint64_t v22 = v59;
      LOBYTE(v61) = v59 & 1;
      char v64 = 0;
      sub_214735548();
      uint64_t v23 = v49;
      uint64_t v24 = v58;
      sub_2147AD608();
      if (v24)
      {
        sub_21473D560(v22, v20, v19, v18, v54, v51);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v23);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v16, v60);
      }
      else
      {
        uint64_t v61 = v20;
        unint64_t v62 = v19;
        char v63 = v18 & 1;
        char v64 = 1;
        sub_21473D410();
        sub_2147AD608();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v23);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v60);
        uint64_t result = sub_21473D560(v22, v20, v19, v18, v54, v51);
      }
      break;
  }
  return result;
}

unint64_t sub_21473D304()
{
  unint64_t result = qword_26781C9E8;
  if (!qword_26781C9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C9E8);
  }
  return result;
}

unint64_t sub_21473D358()
{
  unint64_t result = qword_26781C9F0;
  if (!qword_26781C9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C9F0);
  }
  return result;
}

unint64_t sub_21473D3AC()
{
  unint64_t result = qword_26781C9F8;
  if (!qword_26781C9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781C9F8);
  }
  return result;
}

uint64_t sub_21473D400(uint64_t a1, unint64_t a2, char a3)
{
  if (a3) {
    return sub_21472BBFC(a1, a2);
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_21473D410()
{
  unint64_t result = qword_26781CA00;
  if (!qword_26781CA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CA00);
  }
  return result;
}

unint64_t sub_21473D464()
{
  unint64_t result = qword_26781CA08;
  if (!qword_26781CA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CA08);
  }
  return result;
}

unint64_t sub_21473D4B8()
{
  unint64_t result = qword_26781CA10;
  if (!qword_26781CA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CA10);
  }
  return result;
}

unint64_t sub_21473D50C()
{
  unint64_t result = qword_26781CA18;
  if (!qword_26781CA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CA18);
  }
  return result;
}

uint64_t sub_21473D560(uint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, unsigned __int8 a6)
{
  int v8 = a6 >> 6;
  if (v8 == 2)
  {
    char v12 = a6 & 1;
    sub_21472BBFC(result, a2);
    uint64_t v9 = a4;
    a3 = a5;
    char v11 = v12;
LABEL_6:
    return sub_21473D400(v9, a3, v11);
  }
  if (v8 != 1)
  {
    if (a6 >> 6) {
      return result;
    }
    uint64_t v9 = a2;
    char v11 = a4 & 1;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_21473D61C()
{
  unint64_t result = qword_26781CA20;
  if (!qword_26781CA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CA20);
  }
  return result;
}

uint64_t JPKIXPCRequest.JPKIOperation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CA28);
  uint64_t v66 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v65 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CA30);
  uint64_t v55 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  char v64 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CA38);
  uint64_t v62 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  char v63 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CA40);
  uint64_t v54 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CA48);
  uint64_t v56 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CA50);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_21473D304();
  uint64_t v16 = v68;
  sub_2147AD758();
  if (v16)
  {
LABEL_22:
    uint64_t v47 = (uint64_t)v67;
    return __swift_destroy_boxed_opaque_existential_1(v47);
  }
  uint64_t v53 = v10;
  uint64_t v52 = v8;
  uint64_t v68 = 0;
  unsigned int v17 = v7;
  uint64_t v18 = v65;
  uint64_t v19 = v66;
  unint64_t v20 = v63;
  uint64_t v21 = v64;
  uint64_t v22 = sub_2147AD5A8();
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v31 = v11;
    unint64_t v32 = v14;
    uint64_t v33 = sub_2147AD388();
    swift_allocError();
    uint64_t v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781C298);
    *uint64_t v35 = &type metadata for JPKIXPCRequest.JPKIOperation;
    sub_2147AD538();
    sub_2147AD378();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x263F8DCB0], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v37 = v32;
LABEL_7:
    v36(v37, v31);
    goto LABEL_22;
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      LOBYTE(v69) = 1;
      sub_21473D50C();
      uint64_t v24 = v11;
      uint64_t v38 = v68;
      sub_2147AD528();
      if (v38) {
        goto LABEL_10;
      }
      LOBYTE(v69) = 0;
      sub_214735754();
      uint64_t v39 = v58;
      sub_2147AD588();
      uint64_t v46 = v71;
      unsigned __int8 v73 = 1;
      sub_21473E1C4();
      sub_2147AD588();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      char v30 = 0;
      uint64_t v28 = *((void *)&v69 + 1);
      uint64_t v27 = v69;
      long long v29 = v70;
      uint64_t v47 = (uint64_t)v67;
      uint64_t v48 = v61;
      uint64_t v26 = v46;
      goto LABEL_21;
    case 2:
      uint64_t v66 = v22;
      LOBYTE(v69) = 2;
      sub_21473D464();
      uint64_t v40 = v68;
      sub_2147AD528();
      if (v40) {
        goto LABEL_15;
      }
      LOBYTE(v69) = 0;
      sub_214735754();
      uint64_t v41 = v60;
      sub_2147AD588();
      uint64_t v68 = v11;
      uint64_t v49 = v73;
      LOBYTE(v71) = 1;
      sub_21473E218();
      sub_2147AD588();
      uint64_t v26 = v49;
      uint64_t v65 = v14;
      uint64_t v28 = *((void *)&v69 + 1);
      uint64_t v27 = v69;
      char v72 = 2;
      sub_2147AD588();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v20, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v65, v68);
      long long v29 = v71;
      char v30 = 64;
      goto LABEL_20;
    case 3:
      uint64_t v66 = v22;
      LOBYTE(v69) = 3;
      sub_21473D3AC();
      uint64_t v42 = v68;
      sub_2147AD528();
      if (v42)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        goto LABEL_22;
      }
      uint64_t v68 = v11;
      LOBYTE(v69) = 0;
      sub_21472C16C();
      uint64_t v44 = v57;
      uint64_t v45 = v21;
      sub_2147AD588();
      uint64_t v65 = v14;
      uint64_t v27 = *((void *)&v71 + 1);
      uint64_t v26 = v71;
      LOBYTE(v69) = 1;
      sub_214735754();
      sub_2147AD588();
      uint64_t v28 = v73;
      char v72 = 2;
      sub_21473E1C4();
      sub_2147AD588();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v45, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v65, v68);
      long long v29 = v69;
      char v30 = v70 | 0x80;
      goto LABEL_20;
    case 4:
      LOBYTE(v69) = 4;
      sub_21473D358();
      uint64_t v31 = v11;
      uint64_t v43 = v68;
      sub_2147AD528();
      if (v43)
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = *(void (**)(char *, uint64_t))(v12 + 8);
        uint64_t v37 = v14;
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      long long v29 = 0uLL;
      char v30 = -64;
      uint64_t v26 = 1;
      goto LABEL_20;
    default:
      LOBYTE(v69) = 0;
      sub_21473D61C();
      uint64_t v23 = v53;
      uint64_t v24 = v11;
      uint64_t v25 = v68;
      sub_2147AD528();
      if (v25)
      {
LABEL_10:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      long long v29 = 0uLL;
      char v30 = -64;
LABEL_20:
      uint64_t v47 = (uint64_t)v67;
      uint64_t v48 = v61;
LABEL_21:
      *(void *)uint64_t v48 = v26;
      *(void *)(v48 + 8) = v27;
      *(void *)(v48 + 16) = v28;
      *(_OWORD *)(v48 + 24) = v29;
      *(unsigned char *)(v48 + 40) = v30;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v47);
}

unint64_t sub_21473E1C4()
{
  unint64_t result = qword_26781CA58;
  if (!qword_26781CA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CA58);
  }
  return result;
}

unint64_t sub_21473E218()
{
  unint64_t result = qword_26781CA60;
  if (!qword_26781CA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CA60);
  }
  return result;
}

uint64_t sub_21473E26C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return JPKIXPCRequest.JPKIOperation.init(from:)(a1, a2);
}

uint64_t sub_21473E284(void *a1)
{
  return JPKIXPCRequest.JPKIOperation.encode(to:)(a1);
}

unint64_t JPKIXPCRequest.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  unint64_t v5 = *(void *)(v0 + 48);
  unsigned __int8 v6 = *(unsigned char *)(v0 + 56);
  sub_2147AD348();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  sub_21473C36C(v1, v2, v3, v4, v5, v6);
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_21473D560(v1, v2, v3, v4, v5, v6);
  return 0xD000000000000010;
}

uint64_t sub_21473E494()
{
  if (*v0) {
    return 0x6F6974617265706FLL;
  }
  else {
    return 0x6E65644973736170;
  }
}

uint64_t sub_21473E4E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2147470A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21473E508(uint64_t a1)
{
  unint64_t v2 = sub_21473E750();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473E544(uint64_t a1)
{
  unint64_t v2 = sub_21473E750();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JPKIXPCRequest.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CA68);
  uint64_t v15 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned __int8 v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 40);
  uint64_t v12 = v8;
  uint64_t v10 = *(void *)(v1 + 48);
  int v22 = *(unsigned __int8 *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21473E750();
  sub_2147AD768();
  LOBYTE(v16) = 0;
  sub_2147AD5D8();
  if (!v2)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v13;
    uint64_t v18 = v12;
    uint64_t v19 = v11;
    uint64_t v20 = v10;
    char v21 = v22;
    char v23 = 1;
    sub_21473E7A4();
    sub_2147AD608();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v6, v4);
}

unint64_t sub_21473E750()
{
  unint64_t result = qword_26781CA70;
  if (!qword_26781CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CA70);
  }
  return result;
}

unint64_t sub_21473E7A4()
{
  unint64_t result = qword_26781CA78;
  if (!qword_26781CA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CA78);
  }
  return result;
}

uint64_t JPKIXPCRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CA80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21473E750();
  sub_2147AD758();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v26) = 0;
  uint64_t v9 = sub_2147AD558();
  uint64_t v11 = v10;
  char v32 = 1;
  sub_21473EA80();
  swift_bridgeObjectRetain();
  sub_2147AD588();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v26;
  unint64_t v13 = v27;
  uint64_t v14 = v29;
  unint64_t v24 = v28;
  uint64_t v25 = v26;
  uint64_t v22 = v29;
  unint64_t v23 = v27;
  unint64_t v15 = v30;
  unsigned __int8 v16 = v31;
  swift_bridgeObjectRetain();
  unint64_t v17 = v13;
  unint64_t v18 = v24;
  sub_21473C36C(v12, v17, v24, v14, v15, v16);
  swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  unint64_t v19 = v23;
  *(void *)(a2 + 16) = v25;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v18;
  uint64_t v20 = v22;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v15;
  *(unsigned char *)(a2 + 56) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_21473D560(v25, v19, v24, v20, v15, v16);
}

unint64_t sub_21473EA80()
{
  unint64_t result = qword_26781CA88;
  if (!qword_26781CA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CA88);
  }
  return result;
}

uint64_t sub_21473EAD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return JPKIXPCRequest.init(from:)(a1, a2);
}

uint64_t sub_21473EAEC(void *a1)
{
  return JPKIXPCRequest.encode(to:)(a1);
}

uint64_t sub_21473EB08()
{
  return 0x68747541747865;
}

uint64_t sub_21473EB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x68747541747865 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2147AD668();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_21473EBB8(uint64_t a1)
{
  unint64_t v2 = sub_21473F118();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473EBF4(uint64_t a1)
{
  unint64_t v2 = sub_21473F118();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21473EC30()
{
  if (*v0) {
    return 0x797274656D6F6962;
  }
  else {
    return 0x647261646E617473;
  }
}

uint64_t sub_21473EC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2147471C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21473EC8C(uint64_t a1)
{
  unint64_t v2 = sub_21473F0C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473ECC8(uint64_t a1)
{
  unint64_t v2 = sub_21473F0C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21473ED04(uint64_t a1)
{
  unint64_t v2 = sub_21473F16C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473ED40(uint64_t a1)
{
  unint64_t v2 = sub_21473F16C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JPKIInternalTypes.UserAuthenticationInternal.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CA90);
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v23 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CA98);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CAA0);
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)v1;
  unint64_t v12 = *(void *)(v1 + 8);
  char v13 = *(unsigned char *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21473F0C4();
  sub_2147AD768();
  if (v13)
  {
    LOBYTE(v28) = 1;
    sub_21472BBA4(v11, v12);
    sub_21473F118();
    uint64_t v14 = v23;
    uint64_t v15 = v27;
    sub_2147AD5B8();
    uint64_t v28 = v11;
    unint64_t v29 = v12;
    sub_21472C080();
    uint64_t v16 = v25;
    sub_2147AD608();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v16);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v15);
    return sub_21473D400(v11, v12, 1);
  }
  else
  {
    LOBYTE(v28) = 0;
    sub_21473F16C();
    uint64_t v18 = v27;
    sub_2147AD5B8();
    uint64_t v19 = v22;
    sub_2147AD5D8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v10, v18);
  }
}

unint64_t sub_21473F0C4()
{
  unint64_t result = qword_26781CAA8;
  if (!qword_26781CAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CAA8);
  }
  return result;
}

unint64_t sub_21473F118()
{
  unint64_t result = qword_26781CAB0;
  if (!qword_26781CAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CAB0);
  }
  return result;
}

unint64_t sub_21473F16C()
{
  unint64_t result = qword_26781CAB8;
  if (!qword_26781CAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CAB8);
  }
  return result;
}

uint64_t JPKIInternalTypes.UserAuthenticationInternal.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v30 = a2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CAC0);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CAC8);
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CAD0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_21473F0C4();
  uint64_t v13 = v37;
  sub_2147AD758();
  if (!v13)
  {
    uint64_t v14 = v33;
    uint64_t v37 = v9;
    uint64_t v15 = sub_2147AD5A8();
    if (*(void *)(v15 + 16) == 1)
    {
      int v16 = *(unsigned __int8 *)(v15 + 32);
      uint64_t v29 = v15;
      if (v16)
      {
        LODWORD(v32) = v16;
        LOBYTE(v35) = 1;
        sub_21473F118();
        sub_2147AD528();
        sub_21472C16C();
        sub_2147AD588();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v14);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
        uint64_t v18 = v35;
        uint64_t v17 = v36;
        LOBYTE(v16) = v32;
      }
      else
      {
        LOBYTE(v35) = 0;
        sub_21473F16C();
        unint64_t v23 = v7;
        sub_2147AD528();
        uint64_t v25 = sub_2147AD558();
        uint64_t v26 = v37;
        uint64_t v18 = v25;
        uint64_t v17 = v27;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v5);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v8);
      }
      uint64_t v28 = v30;
      *unint64_t v30 = v18;
      v28[1] = v17;
      *((unsigned char *)v28 + 16) = v16;
    }
    else
    {
      uint64_t v19 = sub_2147AD388();
      swift_allocError();
      uint64_t v20 = v11;
      uint64_t v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781C298);
      void *v22 = &type metadata for JPKIInternalTypes.UserAuthenticationInternal;
      sub_2147AD538();
      sub_2147AD378();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v19);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t sub_21473F6A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return JPKIInternalTypes.UserAuthenticationInternal.init(from:)(a1, a2);
}

uint64_t sub_21473F6BC(void *a1)
{
  return JPKIInternalTypes.UserAuthenticationInternal.encode(to:)(a1);
}

unint64_t JPKIXPCResponse.description.getter()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 40);
  unint64_t result = 0xD00000000000001CLL;
  switch(v1 >> 5)
  {
    case 1u:
      return result;
    case 2u:
      unint64_t result = 0x7472654364616572;
      break;
    case 3u:
      unint64_t result = 1852270963;
      break;
    case 4u:
      unint64_t result = 0x4C4341746567;
      break;
    case 5u:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      uint64_t v3 = *(void *)v0;
      unint64_t v4 = *(void *)(v0 + 8);
      uint64_t v5 = *(void *)(v0 + 16);
      uint64_t v6 = *(void *)(v0 + 24);
      uint64_t v7 = *(void *)(v0 + 32);
      sub_21473F85C(*(void *)v0, v4, v5, v6, v7, v1);
      JPKIInternalTypes.InternalError.localizedDescription.getter();
      sub_2147ACFC8();
      swift_bridgeObjectRelease();
      sub_21473F988(v3, v4, v5, v6, v7, v1);
      unint64_t result = 0x2021726F727245;
      break;
  }
  return result;
}

uint64_t sub_21473F85C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  switch(a6 >> 5)
  {
    case 0:
      unint64_t result = sub_21473F8B0(result, a2, a3, a4, a5, a6);
      break;
    case 1:
      unint64_t result = swift_bridgeObjectRetain();
      break;
    case 2:
    case 3:
      unint64_t result = swift_retain();
      break;
    case 4:
      unint64_t result = sub_21472BBA4(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21473F8B0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
    case 1:
    case 3:
    case 4:
    case 6:
    case 11:
    case 12:
    case 13:
      goto LABEL_5;
    case 5:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_5;
    case 7:
      sub_21472BBA4(result, a2);
      goto LABEL_5;
    case 8:
    case 9:
      swift_bridgeObjectRetain();
LABEL_5:
      unint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21473F988(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  switch(a6 >> 5)
  {
    case 0:
      unint64_t result = sub_21473F9DC(result, a2, a3, a4, a5, a6);
      break;
    case 1:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    case 2:
    case 3:
      unint64_t result = swift_release();
      break;
    case 4:
      unint64_t result = sub_21472BBFC(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21473F9DC(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
    case 1:
    case 3:
    case 4:
    case 6:
    case 11:
    case 12:
    case 13:
      goto LABEL_5;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 7:
      sub_21472BBFC(result, a2);
      goto LABEL_5;
    case 8:
    case 9:
      swift_bridgeObjectRelease();
LABEL_5:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21473FAB4(char a1)
{
  unint64_t result = 0x726F727265;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0x7472654364616572;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 1852270963;
      break;
    case 5:
      unint64_t result = 0x4C4341746567;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21473FB88(uint64_t a1)
{
  unint64_t v2 = sub_2147409D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473FBC4(uint64_t a1)
{
  unint64_t v2 = sub_2147409D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_21473FC00()
{
  return sub_21473FAB4(*v0);
}

uint64_t sub_21473FC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2147472BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_21473FC30(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_21473FC3C(uint64_t a1)
{
  unint64_t v2 = sub_2147408B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473FC78(uint64_t a1)
{
  unint64_t v2 = sub_2147408B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21473FCB4(uint64_t a1)
{
  unint64_t v2 = sub_214740B20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473FCF0(uint64_t a1)
{
  unint64_t v2 = sub_214740B20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21473FD2C(uint64_t a1)
{
  unint64_t v2 = sub_214740904();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473FD68(uint64_t a1)
{
  unint64_t v2 = sub_214740904();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21473FDA4(uint64_t a1)
{
  unint64_t v2 = sub_214740A78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473FDE0(uint64_t a1)
{
  unint64_t v2 = sub_214740A78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21473FE1C(uint64_t a1)
{
  unint64_t v2 = sub_214740A24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473FE58(uint64_t a1)
{
  unint64_t v2 = sub_214740A24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21473FE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2147AD668();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_21473FF14(uint64_t a1)
{
  unint64_t v2 = sub_214740958();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21473FF50(uint64_t a1)
{
  unint64_t v2 = sub_214740958();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JPKIXPCResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CAD8);
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v59 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CAE0);
  uint64_t v58 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v57 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CAE8);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v51 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CAF0);
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CAF8);
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CB00);
  uint64_t v48 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CB08);
  uint64_t v68 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v16 = *(void *)v1;
  unint64_t v15 = *(void *)(v1 + 8);
  uint64_t v17 = *(void *)(v1 + 24);
  uint64_t v66 = *(void *)(v1 + 16);
  uint64_t v67 = v17;
  uint64_t v18 = *(void *)(v1 + 32);
  unint64_t v63 = v15;
  uint64_t v64 = v18;
  unsigned int v19 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v20 = a1[3];
  uint64_t v21 = a1;
  uint64_t v22 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v21, v20);
  sub_2147408B0();
  sub_2147AD768();
  int v65 = v19;
  switch(v19 >> 5)
  {
    case 1u:
      LOBYTE(v69) = 1;
      sub_214740A78();
      uint64_t v34 = v75;
      sub_2147AD5B8();
      uint64_t v69 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781CB48);
      sub_214741724(&qword_26781CB50, (void (*)(void))sub_214740ACC);
      uint64_t v35 = v50;
      sub_2147AD608();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v35);
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v22, v34);
    case 2u:
      LOBYTE(v69) = 2;
      sub_214740A24();
      swift_retain();
      uint64_t v37 = v52;
      uint64_t v38 = v75;
      sub_2147AD5B8();
      uint64_t v69 = v16;
      type metadata accessor for JPKIInternalTypes.CertificateData();
      sub_2147416E0(&qword_26781C7C0, (void (*)(void))type metadata accessor for JPKIInternalTypes.CertificateData);
      uint64_t v39 = v56;
      sub_2147AD608();
      uint64_t v40 = v55;
      goto LABEL_6;
    case 3u:
      LOBYTE(v69) = 4;
      sub_214740958();
      swift_retain();
      uint64_t v37 = v57;
      uint64_t v38 = v75;
      sub_2147AD5B8();
      uint64_t v69 = v16;
      type metadata accessor for JPKIInternalTypes.DigitalSignature();
      sub_2147416E0(&qword_26781CB28, (void (*)(void))type metadata accessor for JPKIInternalTypes.DigitalSignature);
      uint64_t v39 = v60;
      sub_2147AD608();
      uint64_t v40 = v58;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v39);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v38);
      uint64_t v28 = v16;
      unint64_t v29 = v63;
      goto LABEL_8;
    case 4u:
      LOBYTE(v69) = 5;
      unint64_t v41 = v63;
      sub_21472BBA4(v16, v63);
      sub_214740904();
      uint64_t v42 = v59;
      uint64_t v43 = v75;
      sub_2147AD5B8();
      uint64_t v69 = v16;
      unint64_t v70 = v41;
      sub_21472C080();
      uint64_t v44 = v62;
      sub_2147AD608();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v44);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v43);
      uint64_t v28 = v16;
      unint64_t v29 = v41;
LABEL_8:
      uint64_t v30 = v66;
      uint64_t v31 = v67;
      uint64_t v32 = v64;
      unsigned __int8 v33 = v65;
      return sub_21473F988(v28, v29, v30, v31, v32, v33);
    case 5u:
      LOBYTE(v69) = 3;
      sub_2147409D0();
      uint64_t v45 = v51;
      uint64_t v46 = v75;
      sub_2147AD5B8();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v45, v54);
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v22, v46);
    default:
      LOBYTE(v69) = 0;
      unint64_t v23 = v63;
      uint64_t v24 = v64;
      uint64_t v25 = v66;
      unsigned __int8 v26 = v65;
      sub_21473F8B0(v16, v63, v66, v67, v64, v65);
      sub_214740B20();
      sub_2147AD5B8();
      uint64_t v69 = v16;
      unint64_t v70 = v23;
      uint64_t v71 = v25;
      uint64_t v27 = v67;
      uint64_t v72 = v67;
      uint64_t v73 = v24;
      unsigned __int8 v74 = v26;
      sub_214740B74();
      sub_2147AD608();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v75);
      uint64_t v28 = v16;
      unint64_t v29 = v23;
      uint64_t v30 = v66;
      uint64_t v31 = v27;
      uint64_t v32 = v24;
      unsigned __int8 v33 = v26;
      return sub_21473F988(v28, v29, v30, v31, v32, v33);
  }
}

unint64_t sub_2147408B0()
{
  unint64_t result = qword_26781CB10;
  if (!qword_26781CB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CB10);
  }
  return result;
}

unint64_t sub_214740904()
{
  unint64_t result = qword_26781CB18;
  if (!qword_26781CB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CB18);
  }
  return result;
}

unint64_t sub_214740958()
{
  unint64_t result = qword_26781CB20;
  if (!qword_26781CB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CB20);
  }
  return result;
}

uint64_t type metadata accessor for JPKIInternalTypes.DigitalSignature()
{
  return self;
}

unint64_t sub_2147409D0()
{
  unint64_t result = qword_26781CB30;
  if (!qword_26781CB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CB30);
  }
  return result;
}

unint64_t sub_214740A24()
{
  unint64_t result = qword_26781CB38;
  if (!qword_26781CB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CB38);
  }
  return result;
}

unint64_t sub_214740A78()
{
  unint64_t result = qword_26781CB40;
  if (!qword_26781CB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CB40);
  }
  return result;
}

unint64_t sub_214740ACC()
{
  unint64_t result = qword_26781CB58;
  if (!qword_26781CB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CB58);
  }
  return result;
}

unint64_t sub_214740B20()
{
  unint64_t result = qword_26781CB60;
  if (!qword_26781CB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CB60);
  }
  return result;
}

unint64_t sub_214740B74()
{
  unint64_t result = qword_26781CB68;
  if (!qword_26781CB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CB68);
  }
  return result;
}

uint64_t JPKIXPCResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CB70);
  uint64_t v59 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  unint64_t v63 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CB78);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v60 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CB80);
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v61 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CB88);
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v62 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CB90);
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CB98);
  uint64_t v49 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781CBA0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unsigned int v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  int v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_2147408B0();
  uint64_t v21 = v70;
  sub_2147AD758();
  if (v21) {
    goto LABEL_6;
  }
  uint64_t v48 = v15;
  uint64_t v47 = v13;
  uint64_t v22 = v62;
  unint64_t v23 = v63;
  uint64_t v70 = v17;
  uint64_t v24 = v64;
  uint64_t v25 = sub_2147AD5A8();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v32 = sub_2147AD388();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781C298);
    *uint64_t v34 = &type metadata for JPKIXPCResponse;
    sub_2147AD538();
    sub_2147AD378();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v19, v16);
LABEL_6:
    uint64_t v35 = (uint64_t)v65;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  switch(*(unsigned char *)(v25 + 32))
  {
    case 1:
      LOBYTE(v66) = 1;
      sub_214740A78();
      sub_2147AD528();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781CB48);
      sub_214741724(&qword_26781CBB0, (void (*)(void))sub_214741794);
      uint64_t v37 = v51;
      sub_2147AD588();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v19, v16);
      uint64_t v30 = 0;
      *(void *)&long long v28 = v66;
      long long v29 = 0uLL;
      char v31 = 32;
      goto LABEL_11;
    case 2:
      LOBYTE(v66) = 2;
      sub_214740A24();
      sub_2147AD528();
      type metadata accessor for JPKIInternalTypes.CertificateData();
      sub_2147416E0(&qword_26781C7D0, (void (*)(void))type metadata accessor for JPKIInternalTypes.CertificateData);
      uint64_t v38 = v56;
      sub_2147AD588();
      uint64_t v39 = v70;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v16);
      uint64_t v30 = 0;
      *(void *)&long long v28 = v66;
      long long v29 = 0uLL;
      char v31 = 64;
      goto LABEL_14;
    case 3:
      LOBYTE(v66) = 3;
      sub_2147409D0();
      uint64_t v40 = v61;
      sub_2147AD528();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v19, v16);
      uint64_t v30 = 0;
      long long v28 = 0uLL;
      char v31 = -96;
      long long v29 = 0uLL;
      goto LABEL_11;
    case 4:
      LOBYTE(v66) = 4;
      sub_214740958();
      unint64_t v41 = v60;
      sub_2147AD528();
      type metadata accessor for JPKIInternalTypes.DigitalSignature();
      sub_2147416E0(&qword_26781CBA8, (void (*)(void))type metadata accessor for JPKIInternalTypes.DigitalSignature);
      uint64_t v42 = v57;
      sub_2147AD588();
      uint64_t v43 = v70;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v16);
      uint64_t v30 = 0;
      *(void *)&long long v28 = v66;
      long long v29 = 0uLL;
      char v31 = 96;
      goto LABEL_14;
    case 5:
      LOBYTE(v66) = 5;
      sub_214740904();
      sub_2147AD528();
      sub_21472C16C();
      uint64_t v44 = v54;
      sub_2147AD588();
      uint64_t v45 = v70;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v23, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v16);
      uint64_t v30 = 0;
      long long v28 = v66;
      long long v29 = 0uLL;
      char v31 = 0x80;
LABEL_14:
      uint64_t v35 = (uint64_t)v65;
      break;
    default:
      LOBYTE(v66) = 0;
      sub_214740B20();
      unsigned __int8 v26 = v48;
      sub_2147AD528();
      sub_2147417E8();
      uint64_t v27 = v47;
      sub_2147AD588();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v19, v16);
      long long v28 = v66;
      long long v29 = v67;
      uint64_t v30 = v68;
      char v31 = v69;
LABEL_11:
      uint64_t v35 = (uint64_t)v65;
      break;
  }
  *(_OWORD *)uint64_t v24 = v28;
  *(_OWORD *)(v24 + 16) = v29;
  *(void *)(v24 + 32) = v30;
  *(unsigned char *)(v24 + 40) = v31;
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

uint64_t sub_2147416E0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214741724(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781CB48);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_214741794()
{
  unint64_t result = qword_26781CBB8;
  if (!qword_26781CBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CBB8);
  }
  return result;
}

unint64_t sub_2147417E8()
{
  unint64_t result = qword_26781CBC0;
  if (!qword_26781CBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CBC0);
  }
  return result;
}

unint64_t sub_214741840()
{
  unint64_t result = qword_26781CBC8;
  if (!qword_26781CBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CBC8);
  }
  return result;
}

unint64_t sub_214741898()
{
  unint64_t result = qword_26781CBD0;
  if (!qword_26781CBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CBD0);
  }
  return result;
}

uint64_t sub_2147418EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return JPKIXPCResponse.init(from:)(a1, a2);
}

uint64_t sub_214741904(void *a1)
{
  return JPKIXPCResponse.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for JPKIInternalTypes()
{
  return &type metadata for JPKIInternalTypes;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.CertificateType()
{
  return &type metadata for JPKIInternalTypes.CertificateType;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for JPKIInternalTypes.CertificateInfo(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for JPKIInternalTypes.CertificateInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214741AB4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.CertificateInfo()
{
  return &type metadata for JPKIInternalTypes.CertificateInfo;
}

uint64_t method lookup function for JPKIInternalTypes.CertificateData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for JPKIInternalTypes.CertificateData);
}

uint64_t dispatch thunk of JPKIInternalTypes.CertificateData.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void *initializeBufferWithCopyOfBuffer for JPKIInternalTypes.UserAuthentication(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for JPKIInternalTypes.UserAuthentication()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for JPKIInternalTypes.UserAuthentication(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for JPKIInternalTypes.UserAuthentication(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JPKIInternalTypes.UserAuthentication(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for JPKIInternalTypes.UserAuthentication(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.UserAuthentication()
{
  return &type metadata for JPKIInternalTypes.UserAuthentication;
}

uint64_t method lookup function for JPKIInternalTypes.DigitalSignature(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for JPKIInternalTypes.DigitalSignature);
}

uint64_t dispatch thunk of JPKIInternalTypes.DigitalSignature.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t destroy for JPKIInternalTypes.InternalError(uint64_t a1, uint64_t a2)
{
  return sub_21474244C(a1, a2, (uint64_t (*)(void, void, void, void, void, void))sub_21473F9DC);
}

uint64_t initializeWithCopy for JPKIInternalTypes.InternalError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_214742484(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473F8B0);
}

uint64_t *assignWithCopy for JPKIInternalTypes.InternalError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_214742530(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473F8B0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473F9DC);
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for JPKIInternalTypes.InternalError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2147425E4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473F9DC);
}

uint64_t getEnumTagSinglePayload for JPKIInternalTypes.InternalError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF2 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 242);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 0xE) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JPKIInternalTypes.InternalError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 242;
    if (a3 >= 0xF2) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF2) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_214741DF0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 0xDu) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 14);
  }
}

uint64_t sub_214741E08(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xE)
  {
    *(void *)__n128 result = a2 - 14;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 14;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError()
{
  return &type metadata for JPKIInternalTypes.InternalError;
}

uint64_t destroy for JPKIXPCRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  unint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t v6 = *(void *)(a1 + 48);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 56);
  return sub_21473D560(v2, v3, v4, v5, v6, v7);
}

uint64_t initializeWithCopy for JPKIXPCRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  unint64_t v8 = *(void *)(a2 + 48);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  sub_21473C36C(v4, v5, v6, v7, v8, v9);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
  return a1;
}

uint64_t assignWithCopy for JPKIXPCRequest(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  unint64_t v5 = v2[3];
  unint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  unint64_t v8 = v2[6];
  LOBYTE(v2) = *((unsigned char *)v2 + 56);
  sub_21473C36C(v4, v5, v6, v7, v8, v2);
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  unint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  unint64_t v13 = *(void *)(a1 + 48);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = (_BYTE)v2;
  sub_21473D560(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JPKIXPCRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  char v6 = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  unint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  unint64_t v11 = *(void *)(a1 + 48);
  long long v12 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v12;
  *(void *)(a1 + 48) = v5;
  unsigned __int8 v13 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v6;
  sub_21473D560(v7, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for JPKIXPCRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JPKIXPCRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIXPCRequest()
{
  return &type metadata for JPKIXPCRequest;
}

uint64_t destroy for JPKIXPCRequest.JPKIOperation(uint64_t a1, uint64_t a2)
{
  return sub_21474244C(a1, a2, (uint64_t (*)(void, void, void, void, void, void))sub_21473D560);
}

uint64_t initializeWithCopy for JPKIXPCRequest.JPKIOperation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_214742484(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473C36C);
}

uint64_t *assignWithCopy for JPKIXPCRequest.JPKIOperation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_214742530(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473C36C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473D560);
}

uint64_t *assignWithTake for JPKIXPCRequest.JPKIOperation(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2147425E4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473D560);
}

uint64_t getEnumTagSinglePayload for JPKIXPCRequest.JPKIOperation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 40) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 40) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JPKIXPCRequest.JPKIOperation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2)
    {
      *(void *)(result + 32) = 0;
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 40) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_214742210(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_21474222C(uint64_t result)
{
  *(unsigned char *)(result + 40) &= 0x3Fu;
  return result;
}

uint64_t sub_21474223C(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(unsigned char *)(result + 40) = *(unsigned char *)(result + 40) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)__n128 result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(unsigned char *)(result + 40) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIXPCRequest.JPKIOperation()
{
  return &type metadata for JPKIXPCRequest.JPKIOperation;
}

uint64_t destroy for JPKIInternalTypes.UserAuthenticationInternal(uint64_t a1)
{
  return sub_21473D400(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s9SEService17JPKIInternalTypesO26UserAuthenticationInternalOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_21473C428(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JPKIInternalTypes.UserAuthenticationInternal(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_21473C428(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_21473D400(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for JPKIInternalTypes.UserAuthenticationInternal(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_21473D400(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JPKIInternalTypes.UserAuthenticationInternal(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JPKIInternalTypes.UserAuthenticationInternal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_214742410(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_214742418(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.UserAuthenticationInternal()
{
  return &type metadata for JPKIInternalTypes.UserAuthenticationInternal;
}

uint64_t destroy for JPKIXPCResponse(uint64_t a1, uint64_t a2)
{
  return sub_21474244C(a1, a2, (uint64_t (*)(void, void, void, void, void, void))sub_21473F988);
}

uint64_t sub_21474244C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void, void))
{
  return a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

uint64_t initializeWithCopy for JPKIXPCResponse(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_214742484(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473F85C);
}

uint64_t sub_214742484(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = *((unsigned __int8 *)a2 + 40);
  a4(*a2, v6, v7, v8, v9, v10);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  return a1;
}

uint64_t *assignWithCopy for JPKIXPCResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_214742530(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473F85C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473F988);
}

uint64_t *sub_214742530(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v12 = *((unsigned __int8 *)a2 + 40);
  a4(*a2, v8, v9, v10, v11, v12);
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v15 = a1[2];
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v11;
  uint64_t v18 = *((unsigned __int8 *)a1 + 40);
  *((unsigned char *)a1 + 40) = v12;
  a5(v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t *assignWithTake for JPKIXPCResponse(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2147425E4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21473F988);
}

uint64_t *sub_2147425E4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v13;
  a1[4] = v6;
  uint64_t v14 = *((unsigned __int8 *)a1 + 40);
  *((unsigned char *)a1 + 40) = v7;
  a4(v8, v10, v9, v11, v12, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for JPKIXPCResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xB && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 11);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 40) >> 1) & 8 | (*(unsigned __int8 *)(a1 + 40) >> 5)) ^ 0xF;
  if (v3 >= 0xA) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JPKIXPCResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xA)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 11;
    if (a3 >= 0xB) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xB) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2)
    {
      *(void *)(result + 32) = 0;
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 40) = 16 * (((-a2 & 8) != 0) - 2 * a2);
    }
  }
  return result;
}

uint64_t sub_2147426FC(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 <= 0x9F) {
    return v1 >> 5;
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_214742718(uint64_t result)
{
  *(unsigned char *)(result + 40) &= 0x1Fu;
  return result;
}

uint64_t sub_214742728(uint64_t result, unsigned int a2)
{
  if (a2 < 5)
  {
    *(unsigned char *)(result + 40) = *(unsigned char *)(result + 40) & 0xF | (32 * a2);
  }
  else
  {
    *(void *)__n128 result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(unsigned char *)(result + 40) = -96;
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIXPCResponse()
{
  return &type metadata for JPKIXPCResponse;
}

uint64_t getEnumTagSinglePayload for SEType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JPKIXPCResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2147428CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIXPCResponse.CodingKeys()
{
  return &type metadata for JPKIXPCResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCResponse.ErrorCodingKeys()
{
  return &type metadata for JPKIXPCResponse.ErrorCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCResponse.GetInstalledCertificateTypesCodingKeys()
{
  return &type metadata for JPKIXPCResponse.GetInstalledCertificateTypesCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCResponse.ReadCertificateCodingKeys()
{
  return &type metadata for JPKIXPCResponse.ReadCertificateCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCResponse.ChangeAuthorizationCodingKeys()
{
  return &type metadata for JPKIXPCResponse.ChangeAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCResponse.SignCodingKeys()
{
  return &type metadata for JPKIXPCResponse.SignCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCResponse.GetACLCodingKeys()
{
  return &type metadata for JPKIXPCResponse.GetACLCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.UserAuthenticationInternal.CodingKeys()
{
  return &type metadata for JPKIInternalTypes.UserAuthenticationInternal.CodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.UserAuthenticationInternal.StandardCodingKeys()
{
  return &type metadata for JPKIInternalTypes.UserAuthenticationInternal.StandardCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.UserAuthenticationInternal.BiometryCodingKeys()
{
  return &type metadata for JPKIInternalTypes.UserAuthenticationInternal.BiometryCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCRequest.CodingKeys()
{
  return &type metadata for JPKIXPCRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for JPKIXPCRequest.JPKIOperation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JPKIXPCRequest.JPKIOperation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214742B08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIXPCRequest.JPKIOperation.CodingKeys()
{
  return &type metadata for JPKIXPCRequest.JPKIOperation.CodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCRequest.JPKIOperation.GetInstalledCertificateTypesCodingKeys()
{
  return &type metadata for JPKIXPCRequest.JPKIOperation.GetInstalledCertificateTypesCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCRequest.JPKIOperation.ReadCertificateCodingKeys()
{
  return &type metadata for JPKIXPCRequest.JPKIOperation.ReadCertificateCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCRequest.JPKIOperation.ChangeAuthorizationCodingKeys()
{
  return &type metadata for JPKIXPCRequest.JPKIOperation.ChangeAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCRequest.JPKIOperation.SignCodingKeys()
{
  return &type metadata for JPKIXPCRequest.JPKIOperation.SignCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIXPCRequest.JPKIOperation.GetACLCodingKeys()
{
  return &type metadata for JPKIXPCRequest.JPKIOperation.GetACLCodingKeys;
}

uint64_t getEnumTagSinglePayload for JPKIInternalTypes.InternalError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JPKIInternalTypes.InternalError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *__n128 result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214742CF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.CodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.CodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.TypeMismatchCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.TypeMismatchCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.XpcErrorCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.XpcErrorCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.DesignatedKeyNotFoundCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.DesignatedKeyNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.DesignatedKeyCorruptCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.DesignatedKeyCorruptCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.BiometryFailedCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.BiometryFailedCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.InternalErrorCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.InternalErrorCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.PassLookupFailedCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.PassLookupFailedCodingKeys;
}

unsigned char *_s9SEService14JPKIXPCRequestV13JPKIOperationO29ChangeAuthorizationCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214742E68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.PassAccessForbiddenCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.PassAccessForbiddenCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.PassInvalidCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.PassInvalidCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.SelectFailedCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.SelectFailedCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.CertificateReadFailedCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.CertificateReadFailedCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.InvalidPINorPasscodeCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.InvalidPINorPasscodeCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.IncorrectUserAuthenticationCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.IncorrectUserAuthenticationCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.UserAuthenticationMethodBlockedCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.UserAuthenticationMethodBlockedCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.SigningFailedCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.SigningFailedCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.OperationApprovalFailedCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.OperationApprovalFailedCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.ProcessNotForegroundCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.ProcessNotForegroundCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.InternalError.UnknownErrorCodingKeys()
{
  return &type metadata for JPKIInternalTypes.InternalError.UnknownErrorCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.DigitalSignature.CodingKeys()
{
  return &type metadata for JPKIInternalTypes.DigitalSignature.CodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.UserAuthentication.CodingKeys()
{
  return &type metadata for JPKIInternalTypes.UserAuthentication.CodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.UserAuthentication.StandardCodingKeys()
{
  return &type metadata for JPKIInternalTypes.UserAuthentication.StandardCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.UserAuthentication.SystemBiometryCodingKeys()
{
  return &type metadata for JPKIInternalTypes.UserAuthentication.SystemBiometryCodingKeys;
}

unsigned char *_s9SEService15JPKIXPCResponseO15ErrorCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21474301CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.CertificateData.CodingKeys()
{
  return &type metadata for JPKIInternalTypes.CertificateData.CodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.CertificateInfo.CodingKeys()
{
  return &type metadata for JPKIInternalTypes.CertificateInfo.CodingKeys;
}

unsigned char *_s9SEService17JPKIInternalTypesO15CertificateTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214743130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.CertificateType.CodingKeys()
{
  return &type metadata for JPKIInternalTypes.CertificateType.CodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.CertificateType.UserCodingKeys()
{
  return &type metadata for JPKIInternalTypes.CertificateType.UserCodingKeys;
}

ValueMetadata *type metadata accessor for JPKIInternalTypes.CertificateType.SigningCodingKeys()
{
  return &type metadata for JPKIInternalTypes.CertificateType.SigningCodingKeys;
}

unint64_t sub_21474318C()
{
  unint64_t result = qword_26781CBD8;
  if (!qword_26781CBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CBD8);
  }
  return result;
}

unint64_t sub_2147431E4()
{
  unint64_t result = qword_26781CBE0;
  if (!qword_26781CBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CBE0);
  }
  return result;
}

unint64_t sub_21474323C()
{
  unint64_t result = qword_26781CBE8;
  if (!qword_26781CBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CBE8);
  }
  return result;
}

unint64_t sub_214743294()
{
  unint64_t result = qword_26781CBF0;
  if (!qword_26781CBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CBF0);
  }
  return result;
}

unint64_t sub_2147432EC()
{
  unint64_t result = qword_26781CBF8;
  if (!qword_26781CBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CBF8);
  }
  return result;
}

unint64_t sub_214743344()
{
  unint64_t result = qword_26781CC00;
  if (!qword_26781CC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC00);
  }
  return result;
}

unint64_t sub_21474339C()
{
  unint64_t result = qword_26781CC08;
  if (!qword_26781CC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC08);
  }
  return result;
}

unint64_t sub_2147433F4()
{
  unint64_t result = qword_26781CC10;
  if (!qword_26781CC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC10);
  }
  return result;
}

unint64_t sub_21474344C()
{
  unint64_t result = qword_26781CC18;
  if (!qword_26781CC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC18);
  }
  return result;
}

unint64_t sub_2147434A4()
{
  unint64_t result = qword_26781CC20;
  if (!qword_26781CC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC20);
  }
  return result;
}

unint64_t sub_2147434FC()
{
  unint64_t result = qword_26781CC28;
  if (!qword_26781CC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC28);
  }
  return result;
}

unint64_t sub_214743554()
{
  unint64_t result = qword_26781CC30;
  if (!qword_26781CC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC30);
  }
  return result;
}

unint64_t sub_2147435AC()
{
  unint64_t result = qword_26781CC38;
  if (!qword_26781CC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC38);
  }
  return result;
}

unint64_t sub_214743604()
{
  unint64_t result = qword_26781CC40;
  if (!qword_26781CC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC40);
  }
  return result;
}

unint64_t sub_21474365C()
{
  unint64_t result = qword_26781CC48;
  if (!qword_26781CC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC48);
  }
  return result;
}

unint64_t sub_2147436B4()
{
  unint64_t result = qword_26781CC50;
  if (!qword_26781CC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC50);
  }
  return result;
}

unint64_t sub_21474370C()
{
  unint64_t result = qword_26781CC58;
  if (!qword_26781CC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC58);
  }
  return result;
}

unint64_t sub_214743764()
{
  unint64_t result = qword_26781CC60;
  if (!qword_26781CC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC60);
  }
  return result;
}

unint64_t sub_2147437BC()
{
  unint64_t result = qword_26781CC68;
  if (!qword_26781CC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC68);
  }
  return result;
}

unint64_t sub_214743814()
{
  unint64_t result = qword_26781CC70;
  if (!qword_26781CC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC70);
  }
  return result;
}

unint64_t sub_21474386C()
{
  unint64_t result = qword_26781CC78;
  if (!qword_26781CC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC78);
  }
  return result;
}

unint64_t sub_2147438C4()
{
  unint64_t result = qword_26781CC80;
  if (!qword_26781CC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC80);
  }
  return result;
}

unint64_t sub_21474391C()
{
  unint64_t result = qword_26781CC88;
  if (!qword_26781CC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC88);
  }
  return result;
}

unint64_t sub_214743974()
{
  unint64_t result = qword_26781CC90;
  if (!qword_26781CC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC90);
  }
  return result;
}

unint64_t sub_2147439CC()
{
  unint64_t result = qword_26781CC98;
  if (!qword_26781CC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CC98);
  }
  return result;
}

unint64_t sub_214743A24()
{
  unint64_t result = qword_26781CCA0;
  if (!qword_26781CCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCA0);
  }
  return result;
}

unint64_t sub_214743A7C()
{
  unint64_t result = qword_26781CCA8;
  if (!qword_26781CCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCA8);
  }
  return result;
}

unint64_t sub_214743AD4()
{
  unint64_t result = qword_26781CCB0;
  if (!qword_26781CCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCB0);
  }
  return result;
}

unint64_t sub_214743B2C()
{
  unint64_t result = qword_26781CCB8;
  if (!qword_26781CCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCB8);
  }
  return result;
}

unint64_t sub_214743B84()
{
  unint64_t result = qword_26781CCC0;
  if (!qword_26781CCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCC0);
  }
  return result;
}

unint64_t sub_214743BDC()
{
  unint64_t result = qword_26781CCC8;
  if (!qword_26781CCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCC8);
  }
  return result;
}

unint64_t sub_214743C34()
{
  unint64_t result = qword_26781CCD0;
  if (!qword_26781CCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCD0);
  }
  return result;
}

unint64_t sub_214743C8C()
{
  unint64_t result = qword_26781CCD8;
  if (!qword_26781CCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCD8);
  }
  return result;
}

unint64_t sub_214743CE4()
{
  unint64_t result = qword_26781CCE0;
  if (!qword_26781CCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCE0);
  }
  return result;
}

unint64_t sub_214743D3C()
{
  unint64_t result = qword_26781CCE8;
  if (!qword_26781CCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCE8);
  }
  return result;
}

unint64_t sub_214743D94()
{
  unint64_t result = qword_26781CCF0;
  if (!qword_26781CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCF0);
  }
  return result;
}

unint64_t sub_214743DEC()
{
  unint64_t result = qword_26781CCF8;
  if (!qword_26781CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CCF8);
  }
  return result;
}

unint64_t sub_214743E44()
{
  unint64_t result = qword_26781CD00;
  if (!qword_26781CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD00);
  }
  return result;
}

unint64_t sub_214743E9C()
{
  unint64_t result = qword_26781CD08;
  if (!qword_26781CD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD08);
  }
  return result;
}

unint64_t sub_214743EF4()
{
  unint64_t result = qword_26781CD10;
  if (!qword_26781CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD10);
  }
  return result;
}

unint64_t sub_214743F4C()
{
  unint64_t result = qword_26781CD18;
  if (!qword_26781CD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD18);
  }
  return result;
}

unint64_t sub_214743FA4()
{
  unint64_t result = qword_26781CD20;
  if (!qword_26781CD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD20);
  }
  return result;
}

unint64_t sub_214743FFC()
{
  unint64_t result = qword_26781CD28;
  if (!qword_26781CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD28);
  }
  return result;
}

unint64_t sub_214744054()
{
  unint64_t result = qword_26781CD30;
  if (!qword_26781CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD30);
  }
  return result;
}

unint64_t sub_2147440AC()
{
  unint64_t result = qword_26781CD38;
  if (!qword_26781CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD38);
  }
  return result;
}

unint64_t sub_214744104()
{
  unint64_t result = qword_26781CD40;
  if (!qword_26781CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD40);
  }
  return result;
}

unint64_t sub_21474415C()
{
  unint64_t result = qword_26781CD48;
  if (!qword_26781CD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD48);
  }
  return result;
}

unint64_t sub_2147441B4()
{
  unint64_t result = qword_26781CD50;
  if (!qword_26781CD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD50);
  }
  return result;
}

unint64_t sub_21474420C()
{
  unint64_t result = qword_26781CD58;
  if (!qword_26781CD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD58);
  }
  return result;
}

unint64_t sub_214744264()
{
  unint64_t result = qword_26781CD60;
  if (!qword_26781CD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD60);
  }
  return result;
}

unint64_t sub_2147442BC()
{
  unint64_t result = qword_26781CD68;
  if (!qword_26781CD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD68);
  }
  return result;
}

unint64_t sub_214744314()
{
  unint64_t result = qword_26781CD70;
  if (!qword_26781CD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD70);
  }
  return result;
}

unint64_t sub_21474436C()
{
  unint64_t result = qword_26781CD78;
  if (!qword_26781CD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD78);
  }
  return result;
}

unint64_t sub_2147443C4()
{
  unint64_t result = qword_26781CD80;
  if (!qword_26781CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD80);
  }
  return result;
}

unint64_t sub_21474441C()
{
  unint64_t result = qword_26781CD88;
  if (!qword_26781CD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD88);
  }
  return result;
}

unint64_t sub_214744474()
{
  unint64_t result = qword_26781CD90;
  if (!qword_26781CD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD90);
  }
  return result;
}

unint64_t sub_2147444CC()
{
  unint64_t result = qword_26781CD98;
  if (!qword_26781CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CD98);
  }
  return result;
}

unint64_t sub_214744524()
{
  unint64_t result = qword_26781CDA0;
  if (!qword_26781CDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDA0);
  }
  return result;
}

unint64_t sub_21474457C()
{
  unint64_t result = qword_26781CDA8;
  if (!qword_26781CDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDA8);
  }
  return result;
}

unint64_t sub_2147445D4()
{
  unint64_t result = qword_26781CDB0;
  if (!qword_26781CDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDB0);
  }
  return result;
}

unint64_t sub_21474462C()
{
  unint64_t result = qword_26781CDB8;
  if (!qword_26781CDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDB8);
  }
  return result;
}

unint64_t sub_214744684()
{
  unint64_t result = qword_26781CDC0;
  if (!qword_26781CDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDC0);
  }
  return result;
}

unint64_t sub_2147446DC()
{
  unint64_t result = qword_26781CDC8;
  if (!qword_26781CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDC8);
  }
  return result;
}

unint64_t sub_214744734()
{
  unint64_t result = qword_26781CDD0;
  if (!qword_26781CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDD0);
  }
  return result;
}

unint64_t sub_21474478C()
{
  unint64_t result = qword_26781CDD8;
  if (!qword_26781CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDD8);
  }
  return result;
}

unint64_t sub_2147447E4()
{
  unint64_t result = qword_26781CDE0;
  if (!qword_26781CDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDE0);
  }
  return result;
}

unint64_t sub_21474483C()
{
  unint64_t result = qword_26781CDE8;
  if (!qword_26781CDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDE8);
  }
  return result;
}

unint64_t sub_214744894()
{
  unint64_t result = qword_26781CDF0;
  if (!qword_26781CDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDF0);
  }
  return result;
}

unint64_t sub_2147448EC()
{
  unint64_t result = qword_26781CDF8;
  if (!qword_26781CDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CDF8);
  }
  return result;
}

unint64_t sub_214744944()
{
  unint64_t result = qword_26781CE00;
  if (!qword_26781CE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE00);
  }
  return result;
}

unint64_t sub_21474499C()
{
  unint64_t result = qword_26781CE08;
  if (!qword_26781CE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE08);
  }
  return result;
}

unint64_t sub_2147449F4()
{
  unint64_t result = qword_26781CE10;
  if (!qword_26781CE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE10);
  }
  return result;
}

unint64_t sub_214744A4C()
{
  unint64_t result = qword_26781CE18;
  if (!qword_26781CE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE18);
  }
  return result;
}

unint64_t sub_214744AA4()
{
  unint64_t result = qword_26781CE20;
  if (!qword_26781CE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE20);
  }
  return result;
}

unint64_t sub_214744AFC()
{
  unint64_t result = qword_26781CE28;
  if (!qword_26781CE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE28);
  }
  return result;
}

unint64_t sub_214744B54()
{
  unint64_t result = qword_26781CE30;
  if (!qword_26781CE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE30);
  }
  return result;
}

unint64_t sub_214744BAC()
{
  unint64_t result = qword_26781CE38;
  if (!qword_26781CE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE38);
  }
  return result;
}

unint64_t sub_214744C04()
{
  unint64_t result = qword_26781CE40;
  if (!qword_26781CE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE40);
  }
  return result;
}

unint64_t sub_214744C5C()
{
  unint64_t result = qword_26781CE48;
  if (!qword_26781CE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE48);
  }
  return result;
}

unint64_t sub_214744CB4()
{
  unint64_t result = qword_26781CE50;
  if (!qword_26781CE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE50);
  }
  return result;
}

unint64_t sub_214744D0C()
{
  unint64_t result = qword_26781CE58;
  if (!qword_26781CE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE58);
  }
  return result;
}

unint64_t sub_214744D64()
{
  unint64_t result = qword_26781CE60;
  if (!qword_26781CE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE60);
  }
  return result;
}

unint64_t sub_214744DBC()
{
  unint64_t result = qword_26781CE68;
  if (!qword_26781CE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE68);
  }
  return result;
}

unint64_t sub_214744E14()
{
  unint64_t result = qword_26781CE70;
  if (!qword_26781CE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE70);
  }
  return result;
}

unint64_t sub_214744E6C()
{
  unint64_t result = qword_26781CE78;
  if (!qword_26781CE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE78);
  }
  return result;
}

unint64_t sub_214744EC4()
{
  unint64_t result = qword_26781CE80;
  if (!qword_26781CE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE80);
  }
  return result;
}

unint64_t sub_214744F1C()
{
  unint64_t result = qword_26781CE88;
  if (!qword_26781CE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE88);
  }
  return result;
}

unint64_t sub_214744F74()
{
  unint64_t result = qword_26781CE90;
  if (!qword_26781CE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE90);
  }
  return result;
}

unint64_t sub_214744FCC()
{
  unint64_t result = qword_26781CE98;
  if (!qword_26781CE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CE98);
  }
  return result;
}

unint64_t sub_214745024()
{
  unint64_t result = qword_26781CEA0;
  if (!qword_26781CEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CEA0);
  }
  return result;
}

unint64_t sub_21474507C()
{
  unint64_t result = qword_26781CEA8;
  if (!qword_26781CEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CEA8);
  }
  return result;
}

unint64_t sub_2147450D4()
{
  unint64_t result = qword_26781CEB0;
  if (!qword_26781CEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CEB0);
  }
  return result;
}

unint64_t sub_21474512C()
{
  unint64_t result = qword_26781CEB8;
  if (!qword_26781CEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CEB8);
  }
  return result;
}

unint64_t sub_214745184()
{
  unint64_t result = qword_26781CEC0;
  if (!qword_26781CEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CEC0);
  }
  return result;
}

unint64_t sub_2147451DC()
{
  unint64_t result = qword_26781CEC8;
  if (!qword_26781CEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CEC8);
  }
  return result;
}

unint64_t sub_214745234()
{
  unint64_t result = qword_26781CED0;
  if (!qword_26781CED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CED0);
  }
  return result;
}

unint64_t sub_21474528C()
{
  unint64_t result = qword_26781CED8;
  if (!qword_26781CED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CED8);
  }
  return result;
}

unint64_t sub_2147452E4()
{
  unint64_t result = qword_26781CEE0;
  if (!qword_26781CEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CEE0);
  }
  return result;
}

unint64_t sub_21474533C()
{
  unint64_t result = qword_26781CEE8;
  if (!qword_26781CEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CEE8);
  }
  return result;
}

unint64_t sub_214745394()
{
  unint64_t result = qword_26781CEF0;
  if (!qword_26781CEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CEF0);
  }
  return result;
}

unint64_t sub_2147453EC()
{
  unint64_t result = qword_26781CEF8;
  if (!qword_26781CEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CEF8);
  }
  return result;
}

unint64_t sub_214745444()
{
  unint64_t result = qword_26781CF00;
  if (!qword_26781CF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF00);
  }
  return result;
}

unint64_t sub_21474549C()
{
  unint64_t result = qword_26781CF08;
  if (!qword_26781CF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF08);
  }
  return result;
}

unint64_t sub_2147454F4()
{
  unint64_t result = qword_26781CF10;
  if (!qword_26781CF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF10);
  }
  return result;
}

unint64_t sub_21474554C()
{
  unint64_t result = qword_26781CF18;
  if (!qword_26781CF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF18);
  }
  return result;
}

unint64_t sub_2147455A4()
{
  unint64_t result = qword_26781CF20;
  if (!qword_26781CF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF20);
  }
  return result;
}

unint64_t sub_2147455FC()
{
  unint64_t result = qword_26781CF28;
  if (!qword_26781CF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF28);
  }
  return result;
}

unint64_t sub_214745654()
{
  unint64_t result = qword_26781CF30;
  if (!qword_26781CF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF30);
  }
  return result;
}

unint64_t sub_2147456AC()
{
  unint64_t result = qword_26781CF38;
  if (!qword_26781CF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF38);
  }
  return result;
}

unint64_t sub_214745704()
{
  unint64_t result = qword_26781CF40;
  if (!qword_26781CF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF40);
  }
  return result;
}

unint64_t sub_21474575C()
{
  unint64_t result = qword_26781CF48;
  if (!qword_26781CF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF48);
  }
  return result;
}

unint64_t sub_2147457B4()
{
  unint64_t result = qword_26781CF50;
  if (!qword_26781CF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF50);
  }
  return result;
}

unint64_t sub_21474580C()
{
  unint64_t result = qword_26781CF58;
  if (!qword_26781CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF58);
  }
  return result;
}

unint64_t sub_214745864()
{
  unint64_t result = qword_26781CF60;
  if (!qword_26781CF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF60);
  }
  return result;
}

unint64_t sub_2147458BC()
{
  unint64_t result = qword_26781CF68;
  if (!qword_26781CF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF68);
  }
  return result;
}

unint64_t sub_214745914()
{
  unint64_t result = qword_26781CF70;
  if (!qword_26781CF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF70);
  }
  return result;
}

unint64_t sub_21474596C()
{
  unint64_t result = qword_26781CF78;
  if (!qword_26781CF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF78);
  }
  return result;
}

unint64_t sub_2147459C4()
{
  unint64_t result = qword_26781CF80;
  if (!qword_26781CF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF80);
  }
  return result;
}

unint64_t sub_214745A1C()
{
  unint64_t result = qword_26781CF88;
  if (!qword_26781CF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF88);
  }
  return result;
}

unint64_t sub_214745A74()
{
  unint64_t result = qword_26781CF90;
  if (!qword_26781CF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF90);
  }
  return result;
}

unint64_t sub_214745ACC()
{
  unint64_t result = qword_26781CF98;
  if (!qword_26781CF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CF98);
  }
  return result;
}

unint64_t sub_214745B24()
{
  unint64_t result = qword_26781CFA0;
  if (!qword_26781CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CFA0);
  }
  return result;
}

unint64_t sub_214745B7C()
{
  unint64_t result = qword_26781CFA8;
  if (!qword_26781CFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CFA8);
  }
  return result;
}

unint64_t sub_214745BD4()
{
  unint64_t result = qword_26781CFB0;
  if (!qword_26781CFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CFB0);
  }
  return result;
}

unint64_t sub_214745C2C()
{
  unint64_t result = qword_26781CFB8;
  if (!qword_26781CFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781CFB8);
  }
  return result;
}

uint64_t sub_214745C80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1919251317 && a2 == 0xE400000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696E676973 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214745D64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002147BEF30)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214745E44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x647261646E617473 && a2 == 0xE800000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69426D6574737973 && a2 == 0xEE00797274656D6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214745F5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6369666974726563 && a2 == 0xEF61746144657461;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x727574616E676973 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214746080(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7956599 && a2 == 0xE300000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6369666974726563 && a2 == 0xED00006449657461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214746188(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D73694D65707974 && a2 == 0xEC00000068637461;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727245637078 && a2 == 0xE800000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002147BEF50 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002147BEF70 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x797274656D6F6962 && a2 == 0xEE0064656C696146 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C616E7265746E69 && a2 == 0xED0000726F727245 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002147BEF90 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002147BEFB0 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x61766E4973736170 && a2 == 0xEB0000000064696CLL || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x61467463656C6573 && a2 == 0xEC00000064656C69 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002147BEFD0 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002147BEFF0 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002147BF010 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002147BF030 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x46676E696E676973 && a2 == 0xED000064656C6961 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002147BF050 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002147BF070 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x456E776F6E6B6E75 && a2 == 0xEC000000726F7272)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 17;
    }
    else {
      return 18;
    }
  }
}

uint64_t sub_214746908(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7956599 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2147469F8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002147BF090 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444973736170 && a2 == 0xE600000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496465776F6C6C61 && a2 == 0xEA00000000007344)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214746B50(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002147BF090)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_2147AD668();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_214746BD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6580577 && a2 == 0xE300000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7956599 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214746CAC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000002147BEE60 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7472654364616572 && a2 == 0xEF65746163696669 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002147BEE40 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1852270963 && a2 == 0xE400000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C4341746567 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_214746ED0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214746F94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 12895 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2147470A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644973736170 && a2 == 0xEE00726569666974;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2147471C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x647261646E617473 && a2 == 0xE800000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797274656D6F6962 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2147472BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F727265 && a2 == 0xE500000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002147BEE60 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7472654364616572 && a2 == 0xEF65746163696669 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002147BEE40 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1852270963 && a2 == 0xE400000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4C4341746567 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t static DeviceCapability.supportsSecureCoding.getter()
{
  return byte_26781CFC0;
}

uint64_t static DeviceCapability.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26781CFC0 = a1;
  return result;
}

uint64_t (*static DeviceCapability.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

id DeviceCapability.__allocating_init(supportsUWB:)(char a1)
{
  char v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR____TtC9SEService16DeviceCapability_supportsUWB] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id DeviceCapability.init(supportsUWB:)(char a1)
{
  v1[OBJC_IVAR____TtC9SEService16DeviceCapability_supportsUWB] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DeviceCapability();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for DeviceCapability()
{
  return self;
}

void sub_214747788(void *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9SEService16DeviceCapability_supportsUWB);
  id v4 = (id)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeBool_forKey_, v3, v4);
}

id DeviceCapability.__allocating_init(coder:)(void *a1)
{
  uint64_t v3 = objc_allocWithZone(v1);
  id v4 = (void *)sub_2147ACF38();
  unsigned __int8 v5 = objc_msgSend(a1, sel_decodeBoolForKey_, v4);

  v3[OBJC_IVAR____TtC9SEService16DeviceCapability_supportsUWB] = v5;
  v8.receiver = v3;
  v8.super_class = v1;
  id v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

id DeviceCapability.init(coder:)(void *a1)
{
  uint64_t v3 = v1;
  id v4 = (void *)sub_2147ACF38();
  unsigned __int8 v5 = objc_msgSend(a1, sel_decodeBoolForKey_, v4);

  v3[OBJC_IVAR____TtC9SEService16DeviceCapability_supportsUWB] = v5;
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DeviceCapability();
  id v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

id DeviceCapability.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DeviceCapability.init()()
{
}

id DeviceCapability.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeviceCapability();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DeviceCapability(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DeviceCapability);
}

uint64_t dispatch thunk of DeviceCapability.__allocating_init(supportsUWB:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DeviceCapability.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DeviceCapability.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t ApplicationInfoInternal.applicationId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_applicationId);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_214747C44()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_2147ACF38();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ApplicationInfoInternal.bundleId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_bundleId);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplicationInfoInternal.gdprShownVersion.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_gdprShownVersion);
}

id ApplicationInfoInternal.__allocating_init(applicationId:bundleId:gdprShownVersion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (char *)objc_allocWithZone(v5);
  uint64_t v12 = &v11[OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_applicationId];
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = a2;
  long long v13 = &v11[OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_bundleId];
  *(void *)long long v13 = a3;
  *((void *)v13 + 1) = a4;
  *(void *)&v11[OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_gdprShownVersion] = a5;
  v15.receiver = v11;
  v15.super_class = v5;
  return objc_msgSendSuper2(&v15, sel_init);
}

id ApplicationInfoInternal.init(applicationId:bundleId:gdprShownVersion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = &v5[OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_applicationId];
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = a2;
  long long v13 = &v5[OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_bundleId];
  *(void *)long long v13 = a3;
  *((void *)v13 + 1) = a4;
  *(void *)&v5[OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_gdprShownVersion] = a5;
  v15.receiver = v5;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t static ApplicationInfoInternal.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall ApplicationInfoInternal.encode(with:)(NSCoder with)
{
  uint64_t v3 = (void *)sub_2147ACF38();
  id v4 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  unsigned __int8 v5 = (void *)sub_2147ACF38();
  id v6 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC9SEService23ApplicationInfoInternal_gdprShownVersion);
  id v8 = (id)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeInteger:v7 forKey:v8];
}

uint64_t ApplicationInfoInternal.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ApplicationInfoInternal.init(coder:)(a1);
}

uint64_t ApplicationInfoInternal.init(coder:)(void *a1)
{
  objc_super v2 = v1;
  swift_getObjectType();
  sub_2147481BC();
  id v4 = v2;
  uint64_t v5 = sub_2147AD1E8();
  if (v5)
  {
    id v6 = (void *)v5;
    uint64_t v8 = 0;
    sub_2147ACF48();
  }
  swift_deallocPartialClassInstance();
  return 0;
}

unint64_t sub_2147481BC()
{
  unint64_t result = qword_26781C5B0;
  if (!qword_26781C5B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26781C5B0);
  }
  return result;
}

id ApplicationInfoInternal.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ApplicationInfoInternal.init()()
{
}

id ApplicationInfoInternal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ApplicationInfoInternal()
{
  return self;
}

uint64_t method lookup function for ApplicationInfoInternal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ApplicationInfoInternal);
}

uint64_t dispatch thunk of ApplicationInfoInternal.__allocating_init(applicationId:bundleId:gdprShownVersion:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ApplicationInfoInternal.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

id sub_2147483A8()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id sub_2147483DC()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v1 = objc_allocWithZone(ObjectType);
  objc_super v2 = &v1[OBJC_IVAR____TtC9SEService16SEPackageDetails_type];
  *(_OWORD *)objc_super v2 = xmmword_2147B20F0;
  v1[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances] = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *((void *)v2 + 1);
  *(_OWORD *)objc_super v2 = xmmword_2147B20F0;
  sub_21472C78C(v3, v4);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  id v5 = objc_msgSendSuper2(&v7, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t static SEPackageDetails.supportsSecureCoding.getter()
{
  return byte_26781CFF0;
}

uint64_t static SEPackageDetails.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26781CFF0 = a1;
  return result;
}

uint64_t (*static SEPackageDetails.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall SEPackageDetails.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded);
  unint64_t v4 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeBool:v3 forKey:v4];

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC9SEService16SEPackageDetails_containers);
  id v6 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeInteger:v5 forKey:v6];

  swift_beginAccess();
  type metadata accessor for SEApplet();
  swift_bridgeObjectRetain();
  objc_super v7 = (void *)sub_2147AD048();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];

  if (*(void *)(v1 + OBJC_IVAR____TtC9SEService16SEPackageDetails_type + 8) != 26)
  {
    CredentialType.rawValue.getter();
    uint64_t v9 = (void *)sub_2147ACF38();
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)sub_2147ACF38();
    [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];
  }
}

id SEPackageDetails.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SEPackageDetails.init(coder:)(a1);
}

id SEPackageDetails.init(coder:)(void *a1)
{
  objc_super v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v2[OBJC_IVAR____TtC9SEService16SEPackageDetails_type];
  *(_OWORD *)&v2[OBJC_IVAR____TtC9SEService16SEPackageDetails_type] = xmmword_2147B20F0;
  id v6 = v2;
  objc_super v7 = (void *)sub_2147ACF38();
  unsigned __int8 v8 = objc_msgSend(a1, sel_decodeBoolForKey_, v7);

  v6[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded] = v8;
  uint64_t v9 = (void *)sub_2147ACF38();
  id v10 = objc_msgSend(a1, sel_decodeIntegerForKey_, v9);

  *(void *)&v6[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers] = v10;
  type metadata accessor for SEApplet();
  uint64_t v11 = sub_2147AD208();
  if (v11)
  {
    *(void *)&v6[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances] = v11;
    sub_2147481BC();
    uint64_t v12 = sub_2147AD1E8();
    if (v12)
    {
      long long v13 = (void *)v12;
      uint64_t v14 = sub_2147ACF58();
      CredentialType.init(rawValue:)(v14, v15, (uint64_t *)&v20);

      uint64_t v16 = *(void *)v5;
      unint64_t v17 = *((void *)v5 + 1);
      *(_OWORD *)uint64_t v5 = v20;
      sub_21472C78C(v16, v17);
    }

    v21.receiver = v6;
    v21.super_class = ObjectType;
    id v18 = objc_msgSendSuper2(&v21, sel_init);
  }
  else
  {

    sub_21472C78C(*(void *)v5, *((void *)v5 + 1));
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v18;
}

uint64_t SEPackageDetails.description.getter()
{
  sub_2147AD348();
  sub_2147ACFC8();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  sub_2147AD638();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  swift_beginAccess();
  uint64_t v1 = type metadata accessor for SEApplet();
  uint64_t v2 = swift_bridgeObjectRetain();
  MEMORY[0x2166A7380](v2, v1);
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  id v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC9SEService16SEPackageDetails_type);
  unint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC9SEService16SEPackageDetails_type + 8);
  if (v4 != 26)
  {
    uint64_t v5 = *v3;
    sub_21471ED54(*v3, v4);
    sub_21471ED54(v5, v4);
    sub_2147ACF78();
    sub_2147ACF88();
    swift_bridgeObjectRelease();
    sub_21472C78C(v5, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D020);
  sub_2147ACF78();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  return 0;
}

uint64_t sub_214748D64()
{
  uint64_t result = 0x4C6567616B636170;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656E6961746E6F63;
      break;
    case 2:
      uint64_t result = 0x65636E6174736E69;
      break;
    case 3:
      uint64_t result = 1701869940;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214748E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214749A6C(a1, a2);
  *a3 = result;
  return result;
}

void sub_214748E28(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_214748E34(uint64_t a1)
{
  unint64_t v2 = sub_214749190();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214748E70(uint64_t a1)
{
  unint64_t v2 = sub_214749190();
  return MEMORY[0x270FA00B8](a1, v2);
}

id SEPackageDetails.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SEPackageDetails.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D028);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unsigned __int8 v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214749190();
  sub_2147AD768();
  char v13 = 0;
  sub_2147AD5E8();
  if (!v2)
  {
    char v13 = 1;
    sub_2147AD5F8();
    uint64_t v9 = (void *)(v3 + OBJC_IVAR____TtC9SEService16SEPackageDetails_instances);
    swift_beginAccess();
    *(void *)&long long v11 = *v9;
    char v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D038);
    sub_214749564(&qword_26781D040, &qword_26781D048);
    sub_2147AD608();
    long long v11 = *(_OWORD *)(v3 + OBJC_IVAR____TtC9SEService16SEPackageDetails_type);
    char v12 = 3;
    sub_21472C02C();
    sub_2147AD5C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_214749190()
{
  unint64_t result = qword_26781D030;
  if (!qword_26781D030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D030);
  }
  return result;
}

id SEPackageDetails.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SEPackageDetails.init(from:)(a1);
}

id SEPackageDetails.init(from:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D058);
  uint64_t v17 = *(void *)(v4 - 8);
  uint64_t v18 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v19 = a1;
  long long v20 = &v1[OBJC_IVAR____TtC9SEService16SEPackageDetails_type];
  *(_OWORD *)long long v20 = xmmword_2147B20F0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214749190();
  uint64_t v7 = v1;
  unsigned __int8 v8 = v6;
  sub_2147AD758();
  if (v2)
  {
    long long v11 = v20;
    id v15 = ObjectType;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    sub_21472C78C(*(void *)v11, *((void *)v11 + 1));

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v17;
    uint64_t v9 = v18;
    LOBYTE(v23) = 0;
    v7[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded] = sub_2147AD568() & 1;
    LOBYTE(v23) = 1;
    *(void *)&v7[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers] = sub_2147AD578();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D038);
    char v24 = 2;
    sub_214749564(&qword_26781D060, &qword_26781D068);
    sub_2147AD588();
    *(void *)&v7[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances] = v23;
    char v24 = 3;
    sub_21472C118();
    sub_2147AD548();
    uint64_t v13 = *(void *)v20;
    unint64_t v14 = *((void *)v20 + 1);
    *(_OWORD *)long long v20 = v23;
    sub_21472C78C(v13, v14);

    v22.receiver = v7;
    v22.super_class = ObjectType;
    id v15 = objc_msgSendSuper2(&v22, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  return v15;
}

uint64_t sub_214749564(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D038);
    sub_2147495E4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2147495E4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SEApplet();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_214749628@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = SEPackageDetails.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_214749678(void *a1)
{
  return SEPackageDetails.encode(to:)(a1);
}

uint64_t type metadata accessor for SEPackageDetails()
{
  return self;
}

uint64_t method lookup function for SEPackageDetails(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SEPackageDetails);
}

uint64_t dispatch thunk of SEPackageDetails.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SEPackageDetails.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t getEnumTagSinglePayload for SEPackageDetails.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SEPackageDetails.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214749870);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SEPackageDetails.CodingKeys()
{
  return &type metadata for SEPackageDetails.CodingKeys;
}

unint64_t sub_2147498AC()
{
  unint64_t result = qword_26781D080;
  if (!qword_26781D080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D080);
  }
  return result;
}

unint64_t sub_214749904()
{
  unint64_t result = qword_26781D088;
  if (!qword_26781D088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D088);
  }
  return result;
}

unint64_t sub_21474995C()
{
  unint64_t result = qword_26781D090;
  if (!qword_26781D090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D090);
  }
  return result;
}

id sub_2147499B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6)
{
  swift_bridgeObjectRelease();
  uint64_t v10 = (objc_class *)type metadata accessor for SEPackageDetails();
  long long v11 = objc_allocWithZone(v10);
  char v12 = &v11[OBJC_IVAR____TtC9SEService16SEPackageDetails_type];
  *(_OWORD *)char v12 = xmmword_2147B20F0;
  v11[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded] = a1;
  *(void *)&v11[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers] = a2;
  *(void *)&v11[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances] = a3;
  uint64_t v13 = *(void *)v12;
  unint64_t v14 = *((void *)v12 + 1);
  *(_OWORD *)char v12 = *a6;
  sub_21472C78C(v13, v14);
  v16.receiver = v11;
  v16.super_class = v10;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t sub_214749A6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4C6567616B636170 && a2 == 0xED0000646564616FLL;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E6961746E6F63 && a2 == 0xEA00000000007372 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65636E6174736E69 && a2 == 0xE900000000000073 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_214749C54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_2147ACE48();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v57 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = *(void *)(a1 + 8);
  uint64_t v56 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  unint64_t v8 = *(void *)(a1 + 32);
  uint64_t v59 = *(void *)(a1 + 40);
  uint64_t v9 = *(uint8_t **)(a1 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 56);
  if (qword_26781BF58 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_2147ACE18();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_26781D0B0);
  swift_bridgeObjectRetain();
  uint64_t v13 = v59;
  sub_21473C36C(v6, v7, v8, v59, (unint64_t)v9, v10);
  swift_bridgeObjectRetain();
  sub_21473C36C(v6, v7, v8, v13, (unint64_t)v9, v10);
  uint64_t v54 = (uint8_t *)v12;
  unint64_t v14 = sub_2147ACDF8();
  os_log_type_t v15 = sub_2147AD1B8();
  int v16 = v15;
  BOOL v17 = os_log_type_enabled(v14, v15);
  uint64_t v55 = v9;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    int v51 = v16;
    unsigned int v19 = (uint8_t *)v18;
    uint64_t v52 = swift_slowAlloc();
    v68[0] = v52;
    uint64_t v20 = v59;
    os_log_t v50 = v14;
    uint64_t v49 = v19;
    *(_DWORD *)unsigned int v19 = 136315138;
    uint64_t v48 = v19 + 4;
    uint64_t v60 = v56;
    unint64_t v61 = v5;
    uint64_t v62 = v6;
    unint64_t v63 = v7;
    unint64_t v64 = v8;
    uint64_t v65 = v20;
    long long v66 = v9;
    unsigned __int8 v67 = v10;
    unint64_t v21 = JPKIXPCRequest.description.getter();
    uint64_t v60 = sub_2147601CC(v21, v22, v68);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21473D560(v6, v7, v8, v20, (unint64_t)v9, v10);
    swift_bridgeObjectRelease();
    sub_21473D560(v6, v7, v8, v20, (unint64_t)v9, v10);
    os_log_t v23 = v50;
    char v24 = v49;
    _os_log_impl(&dword_2146ED000, v50, (os_log_type_t)v51, "Sending request %s", v49, 0xCu);
    uint64_t v25 = v52;
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v25, -1, -1);
    MEMORY[0x2166A8870](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = v59;
    sub_21473D560(v6, v7, v8, v59, (unint64_t)v9, v10);
    swift_bridgeObjectRelease();
    sub_21473D560(v6, v7, v8, v26, (unint64_t)v9, v10);
  }
  sub_2147ACE78();
  swift_bridgeObjectRetain();
  sub_2147ACE38();
  uint64_t v27 = v58;
  uint64_t v28 = sub_2147ACE28();
  if (v27)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781C688);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_2147B7590;
    uint64_t v60 = 0;
    unint64_t v61 = 0xE000000000000000;
    sub_2147AD348();
    swift_bridgeObjectRelease();
    uint64_t v60 = 0xD000000000000016;
    unint64_t v61 = 0x80000002147BF2D0;
    swift_getErrorValue();
    sub_2147AD6C8();
    sub_2147ACFC8();
    swift_bridgeObjectRelease();
    uint64_t v31 = v60;
    unint64_t v32 = v61;
    *(void *)(v30 + 56) = MEMORY[0x263F8D310];
    *(void *)(v30 + 32) = v31;
    *(void *)(v30 + 40) = v32;
    sub_2147AD718();
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    long long v29 = (char *)v28;
    uint64_t v60 = v56;
    unint64_t v61 = v5;
    uint64_t v62 = v6;
    unint64_t v63 = v7;
    unint64_t v64 = v8;
    uint64_t v65 = v59;
    long long v66 = v55;
    unsigned __int8 v67 = v10;
    sub_21474A468();
    sub_21474A4BC();
    sub_2147ACE68();
    uint64_t v34 = v68[0];
    unint64_t v35 = v68[1];
    uint64_t v36 = v68[2];
    uint64_t v37 = v68[3];
    uint64_t v38 = v68[4];
    unsigned __int8 v39 = v69;
    sub_2147ACE58();
    sub_21473F85C(v34, v35, v36, v37, v38, v39);
    sub_21473F85C(v34, v35, v36, v37, v38, v39);
    uint64_t v40 = sub_2147ACDF8();
    os_log_type_t v41 = sub_2147AD1B8();
    LODWORD(v59) = v41;
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v58 = v40;
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      v68[0] = v56;
      uint64_t v57 = v29;
      uint64_t v55 = v42;
      *(_DWORD *)uint64_t v42 = 136315138;
      uint64_t v54 = v42 + 4;
      uint64_t v60 = v34;
      unint64_t v61 = v35;
      uint64_t v62 = v36;
      unint64_t v63 = v37;
      unint64_t v64 = v38;
      LOBYTE(v65) = v39;
      unint64_t v43 = JPKIXPCResponse.description.getter();
      uint64_t v60 = sub_2147601CC(v43, v44, v68);
      sub_2147AD248();
      swift_bridgeObjectRelease();
      sub_21473F988(v34, v35, v36, v37, v38, v39);
      sub_21473F988(v34, v35, v36, v37, v38, v39);
      uint64_t v45 = v55;
      _os_log_impl(&dword_2146ED000, v58, (os_log_type_t)v59, "Received response %s", v55, 0xCu);
      uint64_t v46 = v56;
      swift_arrayDestroy();
      MEMORY[0x2166A8870](v46, -1, -1);
      MEMORY[0x2166A8870](v45, -1, -1);
    }
    else
    {
      sub_21473F988(v34, v35, v36, v37, v38, v39);
      sub_21473F988(v34, v35, v36, v37, v38, v39);
    }
    uint64_t result = swift_release();
    uint64_t v47 = v53;
    *uint64_t v53 = v34;
    v47[1] = v35;
    v47[2] = v36;
    v47[3] = v37;
    v47[4] = v38;
    *((unsigned char *)v47 + 40) = v39;
  }
  return result;
}

uint64_t sub_21474A384()
{
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for JPKIXPCClient()
{
  return self;
}

uint64_t sub_21474A3D8()
{
  return v0;
}

uint64_t sub_21474A3E4()
{
  uint64_t v0 = sub_2147ACE18();
  __swift_allocate_value_buffer(v0, qword_26781D0B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26781D0B0);
  return sub_2147ACE08();
}

unint64_t sub_21474A468()
{
  unint64_t result = qword_26781D0C8;
  if (!qword_26781D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D0C8);
  }
  return result;
}

unint64_t sub_21474A4BC()
{
  unint64_t result = qword_26781D0D0;
  if (!qword_26781D0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D0D0);
  }
  return result;
}

uint64_t InstanceInfoInternal.instanceAID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_instanceAID);
  sub_21472BBA4(v1, *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_instanceAID + 8));
  return v1;
}

uint64_t InstanceInfoInternal.packageAID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_packageAID);
  sub_21472BBA4(v1, *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_packageAID + 8));
  return v1;
}

uint64_t InstanceInfoInternal.moduleAID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_moduleAID);
  sub_21472BBA4(v1, *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_moduleAID + 8));
  return v1;
}

uint64_t InstanceInfoInternal.securityDomainAID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_securityDomainAID);
  sub_21472BBA4(v1, *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_securityDomainAID + 8));
  return v1;
}

uint64_t InstanceInfoInternal.securityDomainKeyInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_securityDomainKeyInfo);
  sub_21474A708(v1, *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_securityDomainKeyInfo + 8));
  return v1;
}

uint64_t sub_21474A708(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_21472BBA4(a1, a2);
  }
  return a1;
}

id sub_21474A728(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = (uint64_t *)(a1 + *a3);
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  sub_21472BBA4(*v3, v5);
  uint64_t v6 = (void *)sub_2147ACCA8();
  sub_21472BBFC(v4, v5);
  return v6;
}

uint64_t InstanceInfoInternal.lifeCycleState.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_lifeCycleState);
  sub_21472BBA4(v1, *(void *)(v0 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_lifeCycleState + 8));
  return v1;
}

id InstanceInfoInternal.__allocating_init(instanceAID:packageAID:moduleAID:securityDomainAID:securityDomainKeyInfo:lifeCycleState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v20 = (char *)objc_allocWithZone(v12);
  unint64_t v21 = &v20[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_instanceAID];
  *(void *)unint64_t v21 = a1;
  *((void *)v21 + 1) = a2;
  unint64_t v22 = &v20[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_packageAID];
  *(void *)unint64_t v22 = a3;
  *((void *)v22 + 1) = a4;
  os_log_t v23 = &v20[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_moduleAID];
  *(void *)os_log_t v23 = a5;
  *((void *)v23 + 1) = a6;
  char v24 = &v20[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_securityDomainAID];
  *(void *)char v24 = a7;
  *((void *)v24 + 1) = a8;
  uint64_t v25 = &v20[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_securityDomainKeyInfo];
  *(void *)uint64_t v25 = a9;
  *((void *)v25 + 1) = a10;
  uint64_t v26 = &v20[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_lifeCycleState];
  *(void *)uint64_t v26 = a11;
  *((void *)v26 + 1) = a12;
  v29.receiver = v20;
  v29.super_class = v12;
  return objc_msgSendSuper2(&v29, sel_init);
}

id InstanceInfoInternal.init(instanceAID:packageAID:moduleAID:securityDomainAID:securityDomainKeyInfo:lifeCycleState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v21 = &v12[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_instanceAID];
  *(void *)unint64_t v21 = a1;
  *((void *)v21 + 1) = a2;
  unint64_t v22 = &v12[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_packageAID];
  *(void *)unint64_t v22 = a3;
  *((void *)v22 + 1) = a4;
  os_log_t v23 = &v12[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_moduleAID];
  *(void *)os_log_t v23 = a5;
  *((void *)v23 + 1) = a6;
  char v24 = &v12[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_securityDomainAID];
  *(void *)char v24 = a7;
  *((void *)v24 + 1) = a8;
  uint64_t v25 = &v12[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_securityDomainKeyInfo];
  *(void *)uint64_t v25 = a9;
  *((void *)v25 + 1) = a10;
  uint64_t v26 = &v12[OBJC_IVAR____TtC9SEService20InstanceInfoInternal_lifeCycleState];
  *(void *)uint64_t v26 = a11;
  *((void *)v26 + 1) = a12;
  v29.receiver = v12;
  v29.super_class = ObjectType;
  return objc_msgSendSuper2(&v29, sel_init);
}

uint64_t static InstanceInfoInternal.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall InstanceInfoInternal.encode(with:)(NSCoder with)
{
  uint64_t v3 = (void *)sub_2147ACCA8();
  uint64_t v4 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  unint64_t v5 = (void *)sub_2147ACCA8();
  uint64_t v6 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  unint64_t v7 = (void *)sub_2147ACCA8();
  unint64_t v8 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];

  uint64_t v9 = (void *)sub_2147ACCA8();
  unsigned __int8 v10 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];

  if (*(void *)(v1 + OBJC_IVAR____TtC9SEService20InstanceInfoInternal_securityDomainKeyInfo + 8) >> 60 == 15) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = sub_2147ACCA8();
  }
  uint64_t v12 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];
  swift_unknownObjectRelease();

  uint64_t v13 = (void *)sub_2147ACCA8();
  id v14 = (id)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v13 forKey:v14];
}

uint64_t InstanceInfoInternal.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return InstanceInfoInternal.init(coder:)(a1);
}

uint64_t InstanceInfoInternal.init(coder:)(void *a1)
{
  BOOL v2 = v1;
  swift_getObjectType();
  sub_21474B15C();
  id v4 = v2;
  uint64_t v5 = sub_2147AD1E8();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    long long v8 = xmmword_2147B3990;
    sub_2147ACCC8();
  }
  swift_deallocPartialClassInstance();
  return 0;
}

unint64_t sub_21474B15C()
{
  unint64_t result = qword_26781D110;
  if (!qword_26781D110)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26781D110);
  }
  return result;
}

uint64_t sub_21474B19C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_21472BBFC(a1, a2);
  }
  return a1;
}

uint64_t static InstanceInfoInternal.instanceLifeCycleStateTerminated.getter()
{
  return 129;
}

uint64_t InstanceInfoInternal.LifeCycleState.rawValue.getter()
{
  return *(void *)v0;
}

SEService::InstanceInfoInternal::LifeCycleState __swiftcall InstanceInfoInternal.LifeCycleState.init(rawValue:)(SEService::InstanceInfoInternal::LifeCycleState rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static InstanceInfoInternal.LifeCycleState.installed.getter(void *a1@<X8>)
{
  *a1 = 3;
}

void static InstanceInfoInternal.LifeCycleState.selectable.getter(void *a1@<X8>)
{
  *a1 = 7;
}

void static InstanceInfoInternal.LifeCycleState.personalized.getter(void *a1@<X8>)
{
  *a1 = 15;
}

void static InstanceInfoInternal.LifeCycleState.locked.getter(void *a1@<X8>)
{
  *a1 = 131;
}

uint64_t InstanceInfoInternal.LifeCycleState.init(from:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  unsigned __int8 v6 = sub_2147ACCF8();
  uint64_t result = sub_21472BBFC(a1, a2);
  *a3 = v6;
  return result;
}

uint64_t InstanceInfoInternal.LifeCycleState.description.getter()
{
  uint64_t v1 = *v0;
  if ((~*(_DWORD *)v0 & 3) == 0) {
    sub_2147ACFC8();
  }
  if ((~(_BYTE)v1 & 7) == 0) {
    sub_2147ACFC8();
  }
  if ((~(_BYTE)v1 & 0xF) == 0) {
    sub_2147ACFC8();
  }
  if ((~(_BYTE)v1 & 0x83) == 0) {
    sub_2147ACFC8();
  }
  return 0;
}

void *sub_21474B368@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_21474B374@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_21474B384(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_21474B38C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_21474B3A0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_21474B3B4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_21474B3C8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_21474B3F8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_21474B424@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_21474B448(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_21474B45C(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_21474B470(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_21474B484@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_21474B498(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_21474B4AC(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_21474B4C0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_21474B4D4()
{
  return *v0 == 0;
}

uint64_t sub_21474B4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_21474B4FC(void *result)
{
  *v1 &= ~*result;
  return result;
}

id InstanceInfoInternal.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void InstanceInfoInternal.init()()
{
}

id InstanceInfoInternal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_21474B5E4()
{
  unint64_t result = qword_26781D118;
  if (!qword_26781D118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D118);
  }
  return result;
}

unint64_t sub_21474B63C()
{
  unint64_t result = qword_26781D120;
  if (!qword_26781D120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D120);
  }
  return result;
}

unint64_t sub_21474B694()
{
  unint64_t result = qword_26781D128;
  if (!qword_26781D128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D128);
  }
  return result;
}

unint64_t sub_21474B6EC()
{
  unint64_t result = qword_26781D130;
  if (!qword_26781D130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D130);
  }
  return result;
}

uint64_t type metadata accessor for InstanceInfoInternal()
{
  return self;
}

uint64_t method lookup function for InstanceInfoInternal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InstanceInfoInternal);
}

uint64_t dispatch thunk of InstanceInfoInternal.__allocating_init(instanceAID:packageAID:moduleAID:securityDomainAID:securityDomainKeyInfo:lifeCycleState:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of InstanceInfoInternal.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

ValueMetadata *type metadata accessor for InstanceInfoInternal.LifeCycleState()
{
  return &type metadata for InstanceInfoInternal.LifeCycleState;
}

void StateInternal.discriminant.getter(unsigned char *a1@<X8>)
{
  if (v1[8])
  {
    if (v1[8] == 1) {
      *a1 = 3;
    }
    else {
      *a1 = 2 * *v1;
    }
  }
  else
  {
    *a1 = 1;
  }
}

uint64_t StateInternal.Discriminant.rawValue.getter()
{
  return *v0;
}

uint64_t StateInternal.init(rawDiscriminant:instanceInfos:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = result;
  switch(result)
  {
    case 0:
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)a3 = 0;
      char v5 = 2;
      goto LABEL_9;
    case 1:
      *(void *)a3 = a2;
      *(unsigned char *)(a3 + 8) = 0;
      return result;
    case 2:
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)a3 = 1;
      char v5 = 2;
      goto LABEL_9;
    case 3:
      *(void *)a3 = a2;
      char v5 = 1;
      goto LABEL_9;
    default:
      unint64_t result = swift_bridgeObjectRelease();
      if (v3 == 4)
      {
        *(void *)a3 = 2;
        *(unsigned char *)(a3 + 8) = 2;
      }
      else
      {
        *(void *)a3 = 0;
        char v5 = -1;
LABEL_9:
        *(unsigned char *)(a3 + 8) = v5;
      }
      return result;
  }
}

SEService::StateInternal::Discriminant_optional __swiftcall StateInternal.Discriminant.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *id v1 = v2;
  return (SEService::StateInternal::Discriminant_optional)rawValue;
}

unint64_t sub_21474B99C()
{
  unint64_t result = qword_26781D138;
  if (!qword_26781D138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D138);
  }
  return result;
}

SEService::StateInternal::Discriminant_optional sub_21474B9F0(Swift::Int *a1)
{
  return StateInternal.Discriminant.init(rawValue:)(*a1);
}

void sub_21474B9F8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t initializeBufferWithCopyOfBuffer for StateInternal(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_21472CBEC(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for StateInternal(uint64_t a1)
{
  return sub_21472CC68(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for StateInternal(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_21472CBEC(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_21472CC68(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for StateInternal(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_21472CC68(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateInternal(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StateInternal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_21474BB90(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_21474BBA8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StateInternal()
{
  return &type metadata for StateInternal;
}

unsigned char *storeEnumTagSinglePayload for StateInternal.Discriminant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21474BC9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateInternal.Discriminant()
{
  return &type metadata for StateInternal.Discriminant;
}

id sub_21474BD18()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FindClass()
{
  return self;
}

id sub_21474BD74()
{
  type metadata accessor for FindClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26782C6C8 = (uint64_t)result;
  return result;
}

void sub_21474BDCC()
{
  if (qword_26781BF60 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26782C6C8;
  id v1 = (void *)sub_2147ACF38();
  objc_super v2 = (void *)sub_2147ACF38();
  id v3 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, 0, v2);

  uint64_t v4 = sub_2147ACF58();
  uint64_t v6 = v5;

  qword_26781D140 = v4;
  *(void *)algn_26781D148 = v6;
}

uint64_t static SESSettingsLocalizedStringFactory.touchIDAlertMessagePrefix.getter()
{
  return sub_21474C420(&qword_26781BF68, &qword_26781D140);
}

void sub_21474BF18()
{
  if (qword_26781BF60 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26782C6C8;
  id v1 = (void *)sub_2147ACF38();
  objc_super v2 = (void *)sub_2147ACF38();
  id v3 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, 0, v2);

  uint64_t v4 = sub_2147ACF58();
  uint64_t v6 = v5;

  qword_26781D150 = v4;
  *(void *)algn_26781D158 = v6;
}

uint64_t static SESSettingsLocalizedStringFactory.nonTouchIDAlertMessagePrefix.getter()
{
  return sub_21474C420(&qword_26781BF70, &qword_26781D150);
}

void sub_21474C064()
{
  if (qword_26781BF60 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26782C6C8;
  id v1 = (void *)sub_2147ACF38();
  objc_super v2 = (void *)sub_2147ACF38();
  id v3 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, 0, v2);

  uint64_t v4 = sub_2147ACF58();
  uint64_t v6 = v5;

  qword_26781D160 = v4;
  *(void *)algn_26781D168 = v6;
}

uint64_t static SESSettingsLocalizedStringFactory.passbookDefaultAlertMessage.getter()
{
  return sub_21474C420(&qword_26781BF78, &qword_26781D160);
}

void sub_21474C1B0()
{
  if (qword_26781BF60 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26782C6C8;
  id v1 = (void *)sub_2147ACF38();
  objc_super v2 = (void *)sub_2147ACF38();
  id v3 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, 0, v2);

  uint64_t v4 = sub_2147ACF58();
  uint64_t v6 = v5;

  qword_26781D170 = v4;
  *(void *)algn_26781D178 = v6;
}

uint64_t static SESSettingsLocalizedStringFactory.thirdPartyDefaultAlertMessage.getter()
{
  return sub_21474C420(&qword_26781BF80, &qword_26781D170);
}

void sub_21474C2FC()
{
  if (qword_26781BF60 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26782C6C8;
  id v1 = (void *)sub_2147ACF38();
  objc_super v2 = (void *)sub_2147ACF38();
  id v3 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, 0, v2);

  uint64_t v4 = sub_2147ACF58();
  uint64_t v6 = v5;

  qword_26781D180 = v4;
  *(void *)algn_26781D188 = v6;
}

uint64_t static SESSettingsLocalizedStringFactory.expressModeDefaultAlertMessagePostfix.getter()
{
  return sub_21474C420(&qword_26781BF88, &qword_26781D180);
}

uint64_t sub_21474C420(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

id sub_21474C49C(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_2147ACF38();
  swift_bridgeObjectRelease();
  return v3;
}

id SESSettingsLocalizedStringFactory.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SESSettingsLocalizedStringFactory.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SESSettingsLocalizedStringFactory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SESSettingsLocalizedStringFactory()
{
  return self;
}

id SERCredentialInfo.__allocating_init(moduleAIDs:packageAID:containerSize:requiredMemoryForCredential:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (char *)objc_allocWithZone(v5);
  *(void *)&v11[OBJC_IVAR____TtC9SEService17SERCredentialInfo_moduleAIDs] = a1;
  uint64_t v12 = &v11[OBJC_IVAR____TtC9SEService17SERCredentialInfo_packageAID];
  *(void *)uint64_t v12 = a2;
  *((void *)v12 + 1) = a3;
  *(void *)&v11[OBJC_IVAR____TtC9SEService17SERCredentialInfo_containerSize] = a4;
  *(void *)&v11[OBJC_IVAR____TtC9SEService17SERCredentialInfo_requiredMemoryForCredential] = a5;
  v14.receiver = v11;
  v14.super_class = v5;
  return objc_msgSendSuper2(&v14, sel_init);
}

id SERCredentialInfo.init(moduleAIDs:packageAID:containerSize:requiredMemoryForCredential:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC9SEService17SERCredentialInfo_moduleAIDs] = a1;
  uint64_t v12 = &v5[OBJC_IVAR____TtC9SEService17SERCredentialInfo_packageAID];
  *(void *)uint64_t v12 = a2;
  *((void *)v12 + 1) = a3;
  *(void *)&v5[OBJC_IVAR____TtC9SEService17SERCredentialInfo_containerSize] = a4;
  *(void *)&v5[OBJC_IVAR____TtC9SEService17SERCredentialInfo_requiredMemoryForCredential] = a5;
  v14.receiver = v5;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, sel_init);
}

id SERCredentialInfo.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SERCredentialInfo.init()()
{
}

id SERCredentialInfo.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static SERCredentialInfo.supportsSecureCoding.getter()
{
  return byte_26781D190;
}

uint64_t static SERCredentialInfo.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26781D190 = a1;
  return result;
}

uint64_t (*static SERCredentialInfo.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall SERCredentialInfo.encode(with:)(NSCoder with)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9SEService17SERCredentialInfo_moduleAIDs);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_2147AD3C8();
    uint64_t v6 = v4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2147ACF38();
      swift_bridgeObjectRelease();
      sub_2147AD3A8();
      sub_2147AD3D8();
      sub_2147AD3E8();
      sub_2147AD3B8();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_2147481BC();
  unint64_t v7 = (void *)sub_2147AD048();
  swift_bridgeObjectRelease();
  long long v8 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];

  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_2147ACF38();
  swift_bridgeObjectRelease();
  unsigned __int8 v10 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];

  id v11 = *(id *)(v2 + OBJC_IVAR____TtC9SEService17SERCredentialInfo_containerSize);
  uint64_t v12 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];

  id v13 = *(id *)(v2 + OBJC_IVAR____TtC9SEService17SERCredentialInfo_requiredMemoryForCredential);
  id v14 = (id)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v13 forKey:v14];
}

id SERCredentialInfo.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t SERCredentialInfo.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_2147481BC();
  id v4 = v1;
  uint64_t v5 = sub_2147AD208();
  if (!v5) {
    goto LABEL_17;
  }
  unint64_t v6 = v5;
  uint64_t v7 = sub_2147AD1E8();
  if (!v7)
  {
    swift_bridgeObjectRelease();
LABEL_17:

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  long long v8 = (void *)v7;
  type metadata accessor for MemoryUsage();
  uint64_t v9 = sub_2147AD1E8();
  if (!v9)
  {
    swift_bridgeObjectRelease();

    goto LABEL_17;
  }
  unsigned __int8 v10 = (void *)v9;
  uint64_t v11 = sub_2147AD1E8();
  if (!v11)
  {
    swift_bridgeObjectRelease();

    goto LABEL_17;
  }
  uint64_t v12 = v11;

  if (!(v6 >> 62))
  {
    uint64_t v13 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v39 = v12;
    if (v13) {
      goto LABEL_7;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x263F8EE78];
LABEL_26:
    uint64_t v31 = sub_2147ACF58();
    uint64_t v33 = v32;
    uint64_t v34 = (char *)objc_allocWithZone(ObjectType);
    *(void *)&v34[OBJC_IVAR____TtC9SEService17SERCredentialInfo_moduleAIDs] = v15;
    unint64_t v35 = (uint64_t *)&v34[OBJC_IVAR____TtC9SEService17SERCredentialInfo_packageAID];
    *unint64_t v35 = v31;
    v35[1] = v33;
    *(void *)&v34[OBJC_IVAR____TtC9SEService17SERCredentialInfo_containerSize] = v10;
    *(void *)&v34[OBJC_IVAR____TtC9SEService17SERCredentialInfo_requiredMemoryForCredential] = v39;
    v40.receiver = v34;
    v40.super_class = ObjectType;
    id v23 = objc_msgSendSuper2(&v40, sel_init);

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return (uint64_t)v23;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2147AD4B8();
  swift_bridgeObjectRelease();
  uint64_t v39 = v12;
  if (!v13) {
    goto LABEL_25;
  }
LABEL_7:
  uint64_t v41 = MEMORY[0x263F8EE78];
  uint64_t result = sub_21474D3BC(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v36 = v10;
    uint64_t v37 = v8;
    uint64_t v38 = ObjectType;
    uint64_t v15 = v41;
    if ((v6 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        MEMORY[0x2166A7680](v16, v6);
        uint64_t v17 = sub_2147ACF58();
        uint64_t v19 = v18;
        swift_unknownObjectRelease();
        uint64_t v41 = v15;
        unint64_t v21 = *(void *)(v15 + 16);
        unint64_t v20 = *(void *)(v15 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_21474D3BC(v20 > 1, v21 + 1, 1);
          uint64_t v15 = v41;
        }
        ++v16;
        *(void *)(v15 + 16) = v21 + 1;
        uint64_t v22 = v15 + 16 * v21;
        *(void *)(v22 + 32) = v17;
        *(void *)(v22 + 40) = v19;
      }
      while (v13 != v16);
    }
    else
    {
      unint64_t v24 = v6 + 32;
      do
      {
        uint64_t v25 = sub_2147ACF58();
        uint64_t v27 = v26;
        uint64_t v41 = v15;
        unint64_t v29 = *(void *)(v15 + 16);
        unint64_t v28 = *(void *)(v15 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_21474D3BC(v28 > 1, v29 + 1, 1);
          uint64_t v15 = v41;
        }
        *(void *)(v15 + 16) = v29 + 1;
        uint64_t v30 = v15 + 16 * v29;
        *(void *)(v30 + 32) = v25;
        *(void *)(v30 + 40) = v27;
        v24 += 8;
        --v13;
      }
      while (v13);
    }
    swift_bridgeObjectRelease();
    uint64_t ObjectType = v38;
    unsigned __int8 v10 = v36;
    long long v8 = v37;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_21474D0F8()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_21474D104(int64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      int64_t v5 = a1;
    }
    else {
      int64_t v5 = *(void *)(v3 + 16);
    }
    return sub_21474D3BC(result, v5, 0);
  }
  return result;
}

uint64_t sub_21474D17C(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_2147AD498();
    __break(1u);
  }
  else if (a1)
  {
    type metadata accessor for SEApplet();
    uint64_t result = sub_2147AD098();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_21474D224(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_2147AD498();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_2147AD098();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_21474D2C0()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v0 = v1;
  if ((result & 1) == 0)
  {
    int64_t v3 = *(void *)(v1 + 16) + 1;
    return sub_21474D3BC(0, v3, 1);
  }
  return result;
}

uint64_t sub_21474D31C(uint64_t result)
{
  unint64_t v2 = *(void *)(*(void *)v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1)) {
    return sub_21474D3BC(v2 > 1, result + 1, 1);
  }
  return result;
}

uint64_t sub_21474D344(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_21474D35C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474D55C(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_21474D37C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474D704(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21474D39C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474D864(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_21474D3BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474DA0C(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t type metadata accessor for SERCredentialInfo()
{
  return self;
}

uint64_t method lookup function for SERCredentialInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SERCredentialInfo);
}

uint64_t dispatch thunk of SERCredentialInfo.__allocating_init(moduleAIDs:packageAID:containerSize:requiredMemoryForCredential:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_21474D42C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474E260(a1, a2, a3, (void *)*v3, &qword_26781D238, &qword_26781D240);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_21474D45C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474E260(a1, a2, a3, (void *)*v3, &qword_26781D1E0, &qword_26781D1E8);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_21474D48C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474DB78(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_21474D4AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474DDC0(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_21474D4CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474DF68(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_21474D4EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474E110(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21474D50C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474E260(a1, a2, a3, (void *)*v3, &qword_26781D1C8, &qword_26781D1D0);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_21474D53C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21474E3F0(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_21474D55C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D1F0);
    unsigned __int8 v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unsigned __int8 v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D1F8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_21474D704(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D200);
    unsigned __int8 v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unsigned __int8 v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_21474D864(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D228);
    unsigned __int8 v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unsigned __int8 v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D230);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_21474DA0C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D248);
    unsigned __int8 v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unsigned __int8 v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_21474DB78(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D218);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781D220) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781D220) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  unint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_21474DDC0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D250);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D258);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_21474DF68(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D208);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D210);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_21474E110(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D1D8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_21474E260(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11) {
      memmove(v13 + 4, a4 + 4, 16 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_21474E3F0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D1B8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D1C0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t TCCContext.TCCService.tccString.getter(uint64_t a1)
{
  if (a1 == 1)
  {
    uint64_t v1 = (void *)*MEMORY[0x263F7C5D0];
    if (*MEMORY[0x263F7C5D0])
    {
LABEL_6:
      uint64_t v2 = sub_2147ACF58();

      return v2;
    }
    __break(1u);
  }
  if (!a1)
  {
    uint64_t v1 = (void *)*MEMORY[0x263F7C518];
    if (*MEMORY[0x263F7C518]) {
      goto LABEL_6;
    }
    __break(1u);
  }
  uint64_t result = sub_2147AD688();
  __break(1u);
  return result;
}

uint64_t TCCContext.TCCService.serviceEntitlement.getter(uint64_t a1)
{
  uint64_t result = 0xD00000000000001BLL;
  if (a1)
  {
    if (a1 == 1)
    {
      return 0xD00000000000002DLL;
    }
    else
    {
      uint64_t result = sub_2147AD688();
      __break(1u);
    }
  }
  return result;
}

uint64_t TCCContext.TCCService.defaultAppEntitlement.getter(uint64_t a1)
{
  uint64_t result = 0xD000000000000033;
  if (a1)
  {
    if (a1 == 1)
    {
      return 0xD000000000000045;
    }
    else
    {
      uint64_t result = sub_2147AD688();
      __break(1u);
    }
  }
  return result;
}

uint64_t TCCContext.TCCService.fallbackTCCService.getter(uint64_t a1)
{
  if (!a1) {
    return 1;
  }
  if (a1 == 1) {
    return 0;
  }
  uint64_t result = sub_2147AD688();
  __break(1u);
  return result;
}

BOOL TCCContext.TCCService.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

void *sub_21474E794@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t TCCContext.TCCAccess.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x6465746E617267;
    case 2:
      return 0x6E776F6E6B6E75;
    case 1:
      return 0x6465696E6564;
  }
  uint64_t result = sub_2147AD688();
  __break(1u);
  return result;
}

unint64_t TCCContext.TCCAccess.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t sub_21474E864()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return 0x6465746E617267;
  }
  if (v1 == 2) {
    return 0x6E776F6E6B6E75;
  }
  if (v1 == 1) {
    return 0x6465696E6564;
  }
  uint64_t result = sub_2147AD688();
  __break(1u);
  return result;
}

uint64_t TCCContext.checkTCCAccess(to:for:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 <= 1)
  {
    swift_getKeyPath();
    id v21 = v3;
    swift_retain_n();
    id v7 = v3;
    uint64_t v8 = (void (*)(id *, void))swift_readAtKeyPath();
    uint64_t v10 = *v9;
    swift_bridgeObjectRetain();
    v8(v20, 0);
    swift_release();

    if (v10)
    {
      swift_release();
      if (*(void *)(v10 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_21477EA80(a2, a3);
        if (v12)
        {
          uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
          swift_bridgeObjectRelease();
LABEL_9:
          swift_bridgeObjectRelease();
          swift_release();
          return v13;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      int64_t v14 = (void *)sub_2147500B4(a1);
      v20[0] = v7;
      id v21 = v14;
      id v15 = v7;
      swift_bridgeObjectRetain();
      swift_setAtReferenceWritableKeyPath();

      swift_release();
      uint64_t v16 = v14[2];
      swift_bridgeObjectRetain();
      if (v16)
      {
        uint64_t v17 = sub_21477EA80(a2, a3);
        if (v18)
        {
          uint64_t v13 = *(void *)(v14[7] + 8 * v17);
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return 2;
  }
  uint64_t result = sub_2147AD688();
  __break(1u);
  return result;
}

uint64_t TCCContext.getTCCKnownBundleIds(for:filter:)(unint64_t a1)
{
  if (a1 > 1)
  {
    uint64_t result = sub_2147AD688();
    __break(1u);
  }
  else
  {
    swift_getKeyPath();
    id v14 = v1;
    swift_retain_n();
    id v3 = v1;
    uint64_t v4 = (void (*)(id *, void))swift_readAtKeyPath();
    uint64_t v6 = *v5;
    swift_bridgeObjectRetain();
    v4(v13, 0);
    swift_release();

    if (v6)
    {
      uint64_t v7 = swift_release();
      MEMORY[0x270FA5388](v7);
      uint64_t v8 = sub_2147507EC(v6, sub_214750C94);
    }
    else
    {
      uint64_t v9 = (void *)sub_2147500B4(a1);
      v13[0] = v3;
      id v14 = v9;
      id v10 = v3;
      swift_bridgeObjectRetain();
      swift_setAtReferenceWritableKeyPath();

      uint64_t v11 = swift_release();
      MEMORY[0x270FA5388](v11);
      uint64_t v8 = sub_2147507EC((uint64_t)v9, sub_2147507D0);
    }
    swift_bridgeObjectRelease();
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_21474ED94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if (!a4)
  {
    if (a3 != 2) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_retain();
  char v7 = a4(a3);
  sub_214750B28((uint64_t)a4);
  if ((v7 & 1) == 0) {
    return 0;
  }
LABEL_3:
  swift_bridgeObjectRetain();
  return a1;
}

void sub_21474EE24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  p_superclass = &OBJC_METACLASS___SEEndPointCA.superclass;
  if (!a2)
  {
LABEL_6:
    if (!a1) {
      goto LABEL_16;
    }
    goto LABEL_9;
  }
  uint64_t v8 = qword_26AC0A200;
  id v9 = a2;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_2147ACE18();
  __swift_project_value_buffer(v10, (uint64_t)qword_26AC0A208);
  id v11 = v9;
  char v12 = sub_2147ACDF8();
  os_log_type_t v13 = sub_2147AD198();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v46 = a4;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v48[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v49 = (uint64_t)v11;
    type metadata accessor for CFError(0);
    sub_214750BF0(&qword_26781D280, type metadata accessor for CFError);
    uint64_t v16 = sub_2147AD6C8();
    uint64_t v49 = sub_2147601CC(v16, v17, v48);
    sub_2147AD248();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v18 = TCCContext.TCCService.tccString.getter(a3);
    uint64_t v49 = sub_2147601CC(v18, v19, v48);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2146ED000, v12, v13, "Error %s while getting auth records for service %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    uint64_t v20 = v15;
    p_superclass = (__objc2_class **)(&OBJC_METACLASS___SEEndPointCA + 8);
    MEMORY[0x2166A8870](v20, -1, -1);
    uint64_t v21 = v14;
    a4 = v46;
    MEMORY[0x2166A8870](v21, -1, -1);

    goto LABEL_6;
  }

  if (!a1)
  {
LABEL_16:
    if (p_superclass[64] != (__objc2_class *)-1) {
      swift_once();
    }
    uint64_t v34 = sub_2147ACE18();
    __swift_project_value_buffer(v34, (uint64_t)qword_26AC0A208);
    unint64_t v35 = sub_2147ACDF8();
    os_log_type_t v36 = sub_2147AD188();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v48[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v39 = TCCContext.TCCService.tccString.getter(a3);
      uint64_t v49 = sub_2147601CC(v39, v40, v48);
      sub_2147AD248();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2146ED000, v35, v36, "No authorizationRecord / identity for tccService %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166A8870](v38, -1, -1);
      MEMORY[0x2166A8870](v37, -1, -1);
    }

    return;
  }
LABEL_9:
  swift_unknownObjectRetain();
  if (!(id)tcc_authorization_record_get_subject_identity())
  {
    swift_unknownObjectRelease();
    goto LABEL_16;
  }
  uint64_t v47 = a3;
  uint64_t authorization_right = tcc_authorization_record_get_authorization_right();
  tcc_identity_get_identifier();
  uint64_t v23 = sub_2147ACFD8();
  unint64_t v25 = v24;
  if (p_superclass[64] != (__objc2_class *)-1) {
    swift_once();
  }
  uint64_t v26 = (uint64_t *)(a4 + 16);
  uint64_t v27 = sub_2147ACE18();
  __swift_project_value_buffer(v27, (uint64_t)qword_26AC0A208);
  swift_bridgeObjectRetain_n();
  unint64_t v28 = sub_2147ACDF8();
  os_log_type_t v29 = sub_2147AD188();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    v48[0] = v45;
    *(_DWORD *)uint64_t v30 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_2147601CC(v23, v25, v48);
    sub_2147AD248();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v31 = 0xD00000000000001ELL;
    unint64_t v32 = 0x80000002147BF960;
    switch(authorization_right)
    {
      case 0:
        goto LABEL_30;
      case 1:
        uint64_t v33 = "TCC_AUTHORIZATION_RIGHT_UNKNOWN";
        goto LABEL_25;
      case 2:
        uint64_t v33 = "TCC_AUTHORIZATION_RIGHT_ALLOWED";
        goto LABEL_25;
      case 3:
        uint64_t v33 = "TCC_AUTHORIZATION_RIGHT_LIMITED";
LABEL_25:
        unint64_t v32 = (unint64_t)(v33 - 32) | 0x8000000000000000;
        uint64_t v31 = 0xD00000000000001FLL;
        goto LABEL_30;
      case 4:
        uint64_t v31 = 0xD000000000000028;
        uint64_t v41 = "TCC_AUTHORIZATION_RIGHT_ADD_MODIFY_ADDED";
        goto LABEL_29;
      case 5:
        uint64_t v31 = 0xD000000000000023;
        uint64_t v41 = "TCC_AUTHORIZATION_RIGHT_SESSION_PID";
        goto LABEL_29;
      case 6:
        uint64_t v31 = 0xD000000000000022;
        uint64_t v41 = "TCC_AUTHORIZATION_RIGHT_LEARN_MORE";
        goto LABEL_29;
      default:
        uint64_t v31 = 0xD00000000000001BLL;
        uint64_t v41 = "TCC_AUTHORIZATION_NEW_VALUE";
LABEL_29:
        unint64_t v32 = (unint64_t)(v41 - 32) | 0x8000000000000000;
LABEL_30:
        uint64_t v49 = sub_2147601CC(v31, v32, v48);
        sub_2147AD248();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 22) = 2080;
        uint64_t v42 = TCCContext.TCCService.tccString.getter(v47);
        uint64_t v49 = sub_2147601CC(v42, v43, v48);
        sub_2147AD248();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2146ED000, v28, v29, "Found auth record for bundle ID %s with authorization %s for service %s", (uint8_t *)v30, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2166A8870](v45, -1, -1);
        MEMORY[0x2166A8870](v30, -1, -1);

        break;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v49 = *v26;
  *uint64_t v26 = 0x8000000000000000;
  sub_21478B608(authorization_right != 2, v23, v25, isUniquelyReferenced_nonNull_native);
  *uint64_t v26 = v49;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

uint64_t sub_21474F560(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

id TCCContext.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id TCCContext.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC9SEService10TCCContext_hceService] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9SEService10TCCContext_secService] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id TCCContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21474F740()
{
  uint64_t v0 = sub_2147ACE18();
  __swift_allocate_value_buffer(v0, qword_26AC0A208);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC0A208);
  return sub_2147ACE08();
}

uint64_t sub_21474F7BC(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_2147AD4B8();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v4 = v2 & 0xC000000000000001;
      uint64_t v5 = 4;
      unint64_t v15 = v2;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if (v4)
        {
          uint64_t v7 = MEMORY[0x2166A7680](v5 - 4, v2);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v2 + 8 * v5);
          swift_unknownObjectRetain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        v17[0] = v7;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781D288);
        if (!swift_dynamicCast()) {
          goto LABEL_17;
        }
        id v9 = v18;
        uint64_t v18 = a2;
        type metadata accessor for CFString(0);
        sub_214750BF0(&qword_26781C498, type metadata accessor for CFString);
        uint64_t v10 = a2;
        sub_2147AD318();
        if (!v9[2]) {
          break;
        }
        sub_21477EB54((uint64_t)v17);
        if ((v11 & 1) == 0) {
          break;
        }
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        sub_214750C38((uint64_t)v17);
        self;
        char v12 = (void *)swift_dynamicCastObjCClass();
        if (!v12)
        {
          swift_unknownObjectRelease();
          goto LABEL_16;
        }
        unsigned __int8 v13 = objc_msgSend(v12, sel_BOOLValue);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        unint64_t v2 = v15;
        if (v13)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
LABEL_18:
        ++v5;
        if (v8 == v3) {
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      sub_214750C38((uint64_t)v17);
LABEL_16:
      unint64_t v2 = v15;
LABEL_17:
      swift_unknownObjectRelease();
      goto LABEL_18;
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_21474FA54(unint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v27 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_33:
    uint64_t v5 = sub_2147AD4B8();
    if (v5) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  uint64_t v18 = a3;
  unint64_t v6 = 0;
  unint64_t v7 = v4 & 0xC000000000000001;
  a3 = v4 & 0xFFFFFFFFFFFFFF8;
  uint64_t v21 = v4 & 0xFFFFFFFFFFFFFF8;
  unint64_t v22 = v4;
  unint64_t v20 = v4 & 0xC000000000000001;
  while (1)
  {
    if (v7)
    {
      uint64_t v8 = MEMORY[0x2166A7680](v6, v4);
      unint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
LABEL_30:
        __break(1u);
        return v27;
      }
    }
    else
    {
      if (v6 >= *(void *)(a3 + 16))
      {
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v8 = *(void *)(v4 + 8 * v6 + 32);
      swift_unknownObjectRetain();
      unint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_30;
      }
    }
    v26[0] = v8;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D288);
    if (swift_dynamicCast()) {
      break;
    }
    swift_unknownObjectRelease();
LABEL_5:
    ++v6;
    if (v9 == v5) {
      return v27;
    }
  }
  uint64_t v10 = v24;
  unint64_t v24 = a2;
  type metadata accessor for CFString(0);
  sub_214750BF0(&qword_26781C498, type metadata accessor for CFString);
  char v11 = a2;
  sub_2147AD318();
  if (!v10[2] || (sub_21477EB54((uint64_t)v26), (v12 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_214750C38((uint64_t)v26);
    swift_unknownObjectRelease();
    unint64_t v7 = v20;
LABEL_17:
    a3 = v21;
    unint64_t v4 = v22;
    goto LABEL_5;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_214750C38((uint64_t)v26);
  if (!swift_dynamicCast())
  {
    swift_unknownObjectRelease();
    unint64_t v7 = v20;
    goto LABEL_17;
  }
  unint64_t v4 = v22;
  if (v18 != 1)
  {
    if (v18) {
      goto LABEL_36;
    }
    unsigned __int8 v13 = (void *)*MEMORY[0x263F7C518];
    if (!*MEMORY[0x263F7C518]) {
      goto LABEL_35;
    }
LABEL_21:
    uint64_t v14 = sub_2147ACF58();
    uint64_t v19 = v15;

    if (a2 == (void *)v14 && v25 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = sub_2147AD668();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        swift_unknownObjectRelease();
        goto LABEL_27;
      }
    }
    sub_2147AD3A8();
    sub_2147AD3D8();
    sub_2147AD3E8();
    sub_2147AD3B8();
LABEL_27:
    unint64_t v7 = v20;
    a3 = v21;
    goto LABEL_5;
  }
  unsigned __int8 v13 = (void *)*MEMORY[0x263F7C5D0];
  if (*MEMORY[0x263F7C5D0]) {
    goto LABEL_21;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  v26[0] = v18;
  uint64_t result = sub_2147AD688();
  __break(1u);
  return result;
}

void _s9SEService10TCCContextC28checkTCCAccessWithoutLoading2to3forAC0D0OAC10TCCServiceO_SStFZ_0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = (void *)sub_2147ACF38();
  unint64_t v7 = (void *)TCCAccessCopyInformationForBundleId();

  if (!v7)
  {
    if (qword_26AC0A200 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_2147ACE18();
    __swift_project_value_buffer(v15, (uint64_t)qword_26AC0A208);
    swift_bridgeObjectRetain_n();
    char v16 = sub_2147ACDF8();
    os_log_type_t v17 = sub_2147AD1A8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = v19;
      *(_DWORD *)uint64_t v18 = 136446210;
      swift_bridgeObjectRetain();
      sub_2147601CC(a2, a3, &v20);
      sub_2147AD248();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2146ED000, v16, v17, "Unable to look up TCC for %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166A8870](v19, -1, -1);
      MEMORY[0x2166A8870](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  unint64_t v8 = sub_2147AD058();

  if (!*MEMORY[0x263F7C4E8])
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v9 = (void *)*MEMORY[0x263F7C4D8];
  id v10 = (id)*MEMORY[0x263F7C4E8];
  if (!v9)
  {
LABEL_15:
    __break(1u);
    return;
  }
  char v11 = v10;
  id v12 = v9;
  unint64_t v13 = sub_21474FA54(v8, v11, a1);
  swift_bridgeObjectRelease();

  if (v13 >> 62)
  {
    if (sub_2147AD4B8()) {
      goto LABEL_6;
    }
  }
  else if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    uint64_t v14 = v12;
    sub_21474F7BC(v13, v14);
    swift_bridgeObjectRelease();

    return;
  }

  swift_bridgeObjectRelease();
}

unint64_t sub_2147500B4(uint64_t a1)
{
  uint64_t v2 = sub_2147ACE88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC0A200 != -1) {
    swift_once();
  }
  uint64_t v44 = a1;
  uint64_t v6 = sub_2147ACE18();
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_26AC0A208);
  unint64_t v8 = sub_2147ACDF8();
  os_log_type_t v9 = sub_2147AD178();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v43 = v7;
    uint64_t v12 = v11;
    aBlock[0] = v11;
    *(_DWORD *)id v10 = 136315138;
    uint64_t v13 = TCCContext.TCCService.tccString.getter(v44);
    uint64_t v46 = sub_2147601CC(v13, v14, aBlock);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2146ED000, v8, v9, "Loading TCC information for %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v12, -1, -1);
    MEMORY[0x2166A8870](v10, -1, -1);
  }

  sub_214750B38();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F080], v2);
  uint64_t v15 = (void *)sub_2147AD1C8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = tcc_server_create();

  if (v16)
  {
    uint64_t v17 = v44;
    TCCContext.TCCService.tccString.getter(v44);
    uint64_t v18 = (void *)sub_2147ACF38();
    swift_bridgeObjectRelease();
    id v19 = (id)tcc_service_singleton_for_CF_name();

    if (v19)
    {
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = MEMORY[0x263F8EE80];
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v17;
      *(void *)(v21 + 24) = v20;
      aBlock[4] = (uint64_t)sub_214750BE8;
      aBlock[5] = v21;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_21474F560;
      aBlock[3] = (uint64_t)&block_descriptor_3;
      unint64_t v22 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      tcc_server_message_get_authorization_records_by_service();
      _Block_release(v22);
      swift_retain_n();
      uint64_t v23 = sub_2147ACDF8();
      os_log_type_t v24 = sub_2147AD188();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        aBlock[0] = v43;
        *(_DWORD *)uint64_t v25 = 136315394;
        uint64_t v26 = TCCContext.TCCService.tccString.getter(v17);
        uint64_t v46 = sub_2147601CC(v26, v27, aBlock);
        sub_2147AD248();
        swift_bridgeObjectRelease();
        *(_WORD *)(v25 + 12) = 2080;
        uint64_t v44 = v25 + 14;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_2147ACEB8();
        unint64_t v30 = v29;
        swift_bridgeObjectRelease();
        uint64_t v45 = sub_2147601CC(v28, v30, aBlock);
        sub_2147AD248();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2146ED000, v23, v24, "Loaded TCC information for service %s --> %s", (uint8_t *)v25, 0x16u);
        uint64_t v31 = v43;
        swift_arrayDestroy();
        MEMORY[0x2166A8870](v31, -1, -1);
        MEMORY[0x2166A8870](v25, -1, -1);

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release_n();
      }
      swift_beginAccess();
      unint64_t v35 = *(void *)(v20 + 16);
      swift_bridgeObjectRetain();
      swift_release();
    }
    else
    {
      os_log_type_t v36 = sub_2147ACDF8();
      os_log_type_t v37 = sub_2147AD198();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        aBlock[0] = v39;
        *(_DWORD *)uint64_t v38 = 136315138;
        uint64_t v40 = TCCContext.TCCService.tccString.getter(v17);
        uint64_t v46 = sub_2147601CC(v40, v41, aBlock);
        sub_2147AD248();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2146ED000, v36, v37, "Unable to create tcc Service string %s", v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2166A8870](v39, -1, -1);
        MEMORY[0x2166A8870](v38, -1, -1);
      }

      unint64_t v35 = sub_214758E24(MEMORY[0x263F8EE78]);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    unint64_t v32 = sub_2147ACDF8();
    os_log_type_t v33 = sub_2147AD198();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_2146ED000, v32, v33, "Failed to create tcc server", v34, 2u);
      MEMORY[0x2166A8870](v34, -1, -1);
    }

    return sub_214758E24(MEMORY[0x263F8EE78]);
  }
  return v35;
}

uint64_t sub_2147507D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21474ED94(a1, a2, a3, *(uint64_t (**)(uint64_t))(v3 + 16));
}

uint64_t sub_2147507EC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v26 = (void *)MEMORY[0x263F8EE78];
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v9 << 6))
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    uint64_t v16 = a2(v13, v14, v15);
    uint64_t v18 = v17;
    uint64_t result = swift_bridgeObjectRelease();
    if (v18)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21475FF0C(0, v26[2] + 1, 1, v26);
        uint64_t v26 = (void *)result;
      }
      unint64_t v23 = v26[2];
      unint64_t v22 = v26[3];
      unint64_t v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        uint64_t result = (uint64_t)sub_21475FF0C((void *)(v22 > 1), v23 + 1, 1, v26);
        unint64_t v24 = v23 + 1;
        uint64_t v26 = (void *)result;
      }
      void v26[2] = v24;
      uint64_t v25 = &v26[2 * v23];
      v25[4] = v16;
      void v25[5] = v18;
      if (v6) {
        goto LABEL_4;
      }
    }
    else if (v6)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v19 >= v7) {
      goto LABEL_29;
    }
    unint64_t v20 = *(void *)(v27 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v7) {
        goto LABEL_29;
      }
      unint64_t v20 = *(void *)(v27 + 8 * v9);
      if (!v20)
      {
        int64_t v9 = v19 + 2;
        if (v19 + 2 >= v7) {
          goto LABEL_29;
        }
        unint64_t v20 = *(void *)(v27 + 8 * v9);
        if (!v20)
        {
          int64_t v9 = v19 + 3;
          if (v19 + 3 >= v7) {
            goto LABEL_29;
          }
          unint64_t v20 = *(void *)(v27 + 8 * v9);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v7)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v26;
  }
  unint64_t v20 = *(void *)(v27 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_29;
    }
    unint64_t v20 = *(void *)(v27 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_214750A38()
{
  unint64_t result = qword_26781D270;
  if (!qword_26781D270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D270);
  }
  return result;
}

unint64_t sub_214750A90()
{
  unint64_t result = qword_26781D278;
  if (!qword_26781D278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D278);
  }
  return result;
}

uint64_t type metadata accessor for TCCContext()
{
  return self;
}

ValueMetadata *type metadata accessor for TCCContext.TCCService()
{
  return &type metadata for TCCContext.TCCService;
}

ValueMetadata *type metadata accessor for TCCContext.TCCAccess()
{
  return &type metadata for TCCContext.TCCAccess;
}

uint64_t sub_214750B28(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_214750B38()
{
  unint64_t result = qword_26AC0A220;
  if (!qword_26AC0A220)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC0A220);
  }
  return result;
}

uint64_t sub_214750B78()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_214750BB0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_214750BE8(uint64_t a1, void *a2)
{
  sub_21474EE24(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_214750BF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214750C38(uint64_t a1)
{
  return a1;
}

uint64_t sub_214750C9C()
{
  type metadata accessor for SERClient();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = 0;
  qword_26782C6D0 = v0;
  return result;
}

uint64_t *sub_214750CDC()
{
  if (qword_26781BF90 != -1) {
    swift_once();
  }
  return &qword_26782C6D0;
}

void sub_214750D28(void *a1)
{
  if (qword_26781BF98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2147ACE18();
  __swift_project_value_buffer(v2, (uint64_t)qword_26781D290);
  id v3 = a1;
  id v4 = a1;
  oslog = sub_2147ACDF8();
  os_log_type_t v5 = sub_2147AD198();
  if (os_log_type_enabled(oslog, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)unint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_2147AD6C8();
    sub_2147601CC(v8, v9, &v11);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2146ED000, oslog, v5, "Failed to get remote object : %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v7, -1, -1);
    MEMORY[0x2166A8870](v6, -1, -1);
  }
  else
  {
  }
}

id sub_214750F1C()
{
  id v1 = *(void **)(v0 + 112);
  if (v1)
  {
    id v2 = *(id *)(v0 + 112);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = objc_allocWithZone(MEMORY[0x263F08D68]);
    os_log_type_t v5 = (void *)sub_2147ACF38();
    id v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, 4096);

    objc_msgSend(v6, sel_setExportedInterface_, 0);
    objc_msgSend(v6, sel_setExportedObject_, v3);
    Class isa = SERInterface()().super.isa;
    objc_msgSend(v6, sel_setRemoteObjectInterface_, isa);

    if (qword_26781BF98 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_2147ACE18();
    __swift_project_value_buffer(v8, (uint64_t)qword_26781D290);
    unint64_t v9 = sub_2147ACDF8();
    os_log_type_t v10 = sub_2147AD198();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_2146ED000, v9, v10, "SERProto remoteObjectInterface ^", v11, 2u);
      MEMORY[0x2166A8870](v11, -1, -1);
    }

    uint64_t v25 = sub_2147512D4;
    uint64_t v26 = 0;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v22 = 1107296256;
    unint64_t v23 = sub_214751554;
    unint64_t v24 = &block_descriptor_4;
    uint64_t v12 = _Block_copy(&aBlock);
    objc_msgSend(v6, sel_setInterruptionHandler_, v12);
    _Block_release(v12);
    uint64_t v25 = sub_214751598;
    uint64_t v26 = 0;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v22 = 1107296256;
    unint64_t v23 = sub_214751554;
    unint64_t v24 = &block_descriptor_7;
    uint64_t v13 = _Block_copy(&aBlock);
    objc_msgSend(v6, sel_setInvalidationHandler_, v13);
    _Block_release(v13);
    objc_msgSend(v6, sel_activate);
    uint64_t v14 = sub_2147ACDF8();
    os_log_type_t v15 = sub_2147AD178();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t aBlock = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      sub_2147601CC(0xD000000000000029, 0x80000002147BF9C0, &aBlock);
      sub_2147AD248();
      _os_log_impl(&dword_2146ED000, v14, v15, "Connected and activated XPC service %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166A8870](v17, -1, -1);
      MEMORY[0x2166A8870](v16, -1, -1);
    }

    uint64_t v18 = *(void **)(v3 + 112);
    *(void *)(v3 + 112) = v6;
    id v2 = v6;

    id v1 = 0;
  }
  id v19 = v1;
  return v2;
}

uint64_t sub_2147512D4()
{
  return sub_2147515C0("XPC Client interrupted", (uint64_t)&unk_26C561B60, (uint64_t)&unk_26781D2D8);
}

uint64_t sub_2147512FC()
{
  return MEMORY[0x270FA2498](sub_214751318, 0, 0);
}

uint64_t sub_214751318()
{
  if (qword_26781BF90 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26782C6D0;
  *(void *)(v0 + 16) = qword_26782C6D0;
  return MEMORY[0x270FA2498](sub_21475207C, v1, 0);
}

uint64_t sub_2147513B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2147AD0F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2147AD0E8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_214751E80(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2147AD0B8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_214751554(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_214751598()
{
  return sub_2147515C0("XPC Client invalidated", (uint64_t)&unk_26C561B10, (uint64_t)&unk_26781D2B8);
}

uint64_t sub_2147515C0(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D2A8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26781BF98 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_2147ACE18();
  __swift_project_value_buffer(v8, (uint64_t)qword_26781D290);
  unint64_t v9 = sub_2147ACDF8();
  os_log_type_t v10 = sub_2147AD198();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_2146ED000, v9, v10, a1, v11, 2u);
    MEMORY[0x2166A8870](v11, -1, -1);
  }

  uint64_t v12 = sub_2147AD0F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  sub_2147513B0((uint64_t)v7, a3, v13);
  return swift_release();
}

uint64_t sub_214751764()
{
  return MEMORY[0x270FA2498](sub_214751780, 0, 0);
}

uint64_t sub_214751780()
{
  if (qword_26781BF90 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26782C6D0;
  *(void *)(v0 + 16) = qword_26782C6D0;
  return MEMORY[0x270FA2498](sub_214751818, v1, 0);
}

uint64_t sub_214751818()
{
  sub_214751878();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_214751878()
{
  uint64_t v1 = v0;
  if (qword_26781BF98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2147ACE18();
  __swift_project_value_buffer(v2, (uint64_t)qword_26781D290);
  uint64_t v3 = sub_2147ACDF8();
  os_log_type_t v4 = sub_2147AD198();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v8 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_2147601CC(0xD000000000000029, 0x80000002147BF9C0, &v8);
    sub_2147AD248();
    _os_log_impl(&dword_2146ED000, v3, v4, "Invalidting %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v6, -1, -1);
    MEMORY[0x2166A8870](v5, -1, -1);
  }

  uint64_t v7 = *(void **)(v1 + 112);
  *(void *)(v1 + 112) = 0;
}

uint64_t sub_214751A04()
{
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for SERClient()
{
  return self;
}

uint64_t sub_214751A60()
{
  uint64_t v0 = sub_2147ACE18();
  __swift_allocate_value_buffer(v0, qword_26781D290);
  __swift_project_value_buffer(v0, (uint64_t)qword_26781D290);
  return sub_2147ACE08();
}

uint64_t sub_214751ADC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  os_log_type_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_214751BB8;
  return v6(a1);
}

uint64_t sub_214751BB8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214751CB0()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214751CE8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214751D8C;
  return MEMORY[0x270FA2498](sub_214751780, 0, 0);
}

uint64_t sub_214751D8C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214751E80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D2A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_214751EE0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214751F18(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214751D8C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26781D2C0 + dword_26781D2C0);
  return v6(a1, v4);
}

uint64_t sub_214751FD0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214752080;
  return MEMORY[0x270FA2498](sub_214751318, 0, 0);
}

unint64_t SECErrorInternal.localizedDescription.getter(uint64_t a1)
{
  unint64_t result = 0x6174614465726F43;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 2:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 3:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000034;
      break;
    case 8:
    case 14:
    case 17:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    case 11:
      unint64_t result = 0xD000000000000019;
      break;
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 13:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0xD000000000000022;
      break;
    case 16:
      unint64_t result = 0xD000000000000020;
      break;
    case 18:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 19:
      unint64_t result = 0xD000000000000018;
      break;
    case 20:
      unint64_t result = 0xD000000000000026;
      break;
    case 21:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 22:
      unint64_t result = 0xD000000000000023;
      break;
    case 23:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 24:
      unint64_t result = 0xD000000000000012;
      break;
    case 25:
      unint64_t result = 0xD000000000000034;
      break;
    case 26:
      unint64_t result = 0xD000000000000023;
      break;
    case 27:
      unint64_t result = 0xD000000000000015;
      break;
    case 28:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 29:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 30:
      unint64_t result = 0xD000000000000026;
      break;
    case 31:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 32:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 33:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      sub_2147AD688();
      __break(1u);
      JUMPOUT(0x214752414);
  }
  return result;
}

unint64_t SECErrorInternal.init(rawValue:)(unint64_t a1)
{
  return sub_214752704(a1);
}

unint64_t static SECErrorInternal._nsErrorDomain.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2147524D8()
{
  return sub_2147AD748();
}

uint64_t sub_21475253C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_214752934();
  return MEMORY[0x270EEEA70](a1, a2, v4);
}

uint64_t sub_214752588()
{
  return sub_2147AD748();
}

unint64_t sub_2147525E8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_214752704(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_21475261C(uint64_t a1)
{
  unint64_t v2 = sub_214752934();
  return MEMORY[0x270EEEA80](a1, v2);
}

uint64_t sub_214752658(uint64_t a1)
{
  unint64_t v2 = sub_214752934();
  return MEMORY[0x270EEEA78](a1, v2);
}

unint64_t sub_214752694()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2147526B0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_214752934();
  return MEMORY[0x270EEEA68](a1, a2, v4);
}

unint64_t sub_214752704(unint64_t result)
{
  if (result > 0x21) {
    return 0;
  }
  return result;
}

unint64_t sub_214752718()
{
  unint64_t result = qword_26781D2E0;
  if (!qword_26781D2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D2E0);
  }
  return result;
}

unint64_t sub_214752770()
{
  unint64_t result = qword_26781D2E8;
  if (!qword_26781D2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D2E8);
  }
  return result;
}

unint64_t sub_2147527C8()
{
  unint64_t result = qword_26781D2F0;
  if (!qword_26781D2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D2F0);
  }
  return result;
}

unint64_t sub_214752820()
{
  unint64_t result = qword_26781D2F8;
  if (!qword_26781D2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D2F8);
  }
  return result;
}

unint64_t sub_214752878()
{
  unint64_t result = qword_26781D300;
  if (!qword_26781D300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D300);
  }
  return result;
}

unint64_t sub_2147528D0()
{
  unint64_t result = qword_26781D308;
  if (!qword_26781D308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D308);
  }
  return result;
}

ValueMetadata *type metadata accessor for SECErrorInternal()
{
  return &type metadata for SECErrorInternal;
}

unint64_t sub_214752934()
{
  unint64_t result = qword_26781D310;
  if (!qword_26781D310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D310);
  }
  return result;
}

uint64_t sub_214752988(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_21474D45C(0, v1, 0);
  uint64_t v2 = v29;
  uint64_t result = sub_214755E38(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v23 = v1;
  int v24 = v5;
  uint64_t v25 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v26 = v7;
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = *v12;
    unint64_t v28 = v12[1];
    sub_21471ED54(*v12, v28);
    CredentialType.rawValue.getter();
    uint64_t v27 = sub_2147ACF38();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_2147AD158();
    uint64_t result = sub_2147201A0(v13, v28);
    unint64_t v16 = *(void *)(v29 + 16);
    unint64_t v15 = *(void *)(v29 + 24);
    if (v16 >= v15 >> 1) {
      uint64_t result = sub_21474D45C(v15 > 1, v16 + 1, 1);
    }
    *(void *)(v29 + 16) = v16 + 1;
    uint64_t v17 = v29 + 16 * v16;
    *(void *)(v17 + 32) = v27;
    *(void *)(v17 + 40) = v14;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v18 = *(void *)(v25 + 8 * v11);
    if ((v18 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v24;
    if (*(_DWORD *)(a1 + 36) != v24) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      int64_t v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v23;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v23;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v25 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(a1 + 80 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v26 + 1;
    uint64_t v6 = v9;
    if (v26 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

id ReservationState.__allocating_init(counts:reservations:)(uint64_t a1, uint64_t a2)
{
  int v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC9SEService16ReservationState_counts] = a1;
  *(void *)&v5[OBJC_IVAR____TtC9SEService16ReservationState_reservations] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ReservationState.init(counts:reservations:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC9SEService16ReservationState_counts] = a1;
  *(void *)&v2[OBJC_IVAR____TtC9SEService16ReservationState_reservations] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t ReservationState.stringValue.getter()
{
  swift_getObjectType();
  sub_2147ACC28();
  swift_allocObject();
  sub_2147ACC18();
  sub_214752F50((unint64_t *)&unk_26781D540, v0, (void (*)(uint64_t))type metadata accessor for ReservationState);
  uint64_t v1 = sub_2147ACC08();
  unint64_t v3 = v2;
  uint64_t v4 = sub_2147ACCB8();
  sub_21472BBFC(v1, v3);
  swift_release();
  return v4;
}

uint64_t type metadata accessor for ReservationState()
{
  return self;
}

uint64_t sub_214752F50(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t ReservationState.description.getter()
{
  return 0xD000000000000013;
}

id sub_214753188(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  int v5 = (void *)sub_2147ACF38();
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t ReservationState.debugDescription.getter()
{
  swift_getObjectType();
  sub_2147AD348();
  unint64_t v0 = ReservationState.description.getter();
  swift_bridgeObjectRelease();
  unint64_t v6 = v0;
  sub_2147ACFC8();
  sub_2147ACC28();
  swift_allocObject();
  sub_2147ACC18();
  sub_214752F50((unint64_t *)&unk_26781D540, v1, (void (*)(uint64_t))type metadata accessor for ReservationState);
  uint64_t v2 = sub_2147ACC08();
  unint64_t v4 = v3;
  sub_2147ACCB8();
  sub_21472BBFC(v2, v4);
  swift_release();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  return v6;
}

Swift::Void __swiftcall ReservationState.encode(with:)(NSCoder with)
{
  uint64_t v2 = v1;
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D350);
  uint64_t v4 = MEMORY[0x270FA5388](v78);
  uint64_t v77 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v76 = (char *)&v66 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v75 = (uint64_t)&v66 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unsigned __int8 v74 = (char *)&v66 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v73 = (char *)&v66 - v12;
  swift_beginAccess();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_214752988(v13);
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D580);
    uint64_t v15 = sub_2147AD4E8();
  }
  else
  {
    uint64_t v15 = MEMORY[0x263F8EE80];
  }
  v85[0] = v15;
  unint64_t v16 = (void *)swift_bridgeObjectRetain();
  sub_214755554(v16, 1, v85);
  uint64_t v67 = 0;
  swift_bridgeObjectRelease();
  sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  sub_21472C6F4(0, (unint64_t *)&unk_26781D590);
  sub_21475615C((unint64_t *)&qword_26781D360, (unint64_t *)&qword_26781C5B0);
  uint64_t v17 = (void *)sub_2147ACE98();
  swift_release();
  uint64_t v18 = (void *)sub_2147ACF38();
  Class isa = with.super.isa;
  [(objc_class *)with.super.isa encodeObject:v17 forKey:v18];

  unint64_t v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC9SEService16ReservationState_reservations);
  swift_beginAccess();
  uint64_t v20 = *v19;
  int64_t v21 = *(void *)(*v19 + 16);
  uint64_t v22 = MEMORY[0x263F8EE78];
  if (v21)
  {
    uint64_t v84 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21474D42C(0, v21, 0);
    unint64_t v24 = sub_214755E38(v20);
    uint64_t v25 = 0;
    uint64_t v26 = v20 + 64;
    char v27 = *(unsigned char *)(v20 + 32);
    uint64_t v79 = v20 + 80;
    uint64_t v72 = v20;
    int64_t v69 = v21;
    uint64_t v70 = v23;
    uint64_t v71 = v20 + 64;
    while ((v24 & 0x8000000000000000) == 0 && (uint64_t)v24 < 1 << v27)
    {
      unint64_t v29 = v24 >> 6;
      if ((*(void *)(v26 + 8 * (v24 >> 6)) & (1 << v24)) == 0) {
        goto LABEL_33;
      }
      if (*(_DWORD *)(v20 + 36) != v23) {
        goto LABEL_34;
      }
      uint64_t v80 = v25;
      uint64_t v81 = 1 << v24;
      uint64_t v30 = v78;
      uint64_t v31 = *(int *)(v78 + 48);
      uint64_t v32 = *(void *)(v20 + 48);
      uint64_t v33 = sub_2147ACD88();
      uint64_t v34 = *(void *)(v33 - 8);
      uint64_t v35 = v34;
      uint64_t v36 = v32 + *(void *)(v34 + 72) * v24;
      os_log_type_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
      uint64_t v38 = (uint64_t)v73;
      v37(v73, v36, v33);
      uint64_t v39 = *(void *)(v20 + 56);
      unint64_t v83 = v24;
      uint64_t v40 = *(void **)(v39 + 8 * v24);
      *(void *)(v38 + v31) = v40;
      uint64_t v41 = (uint64_t)v74;
      v37(v74, v38, v33);
      *(void *)(v41 + *(int *)(v30 + 48)) = v40;
      uint64_t v42 = v75;
      sub_214756444(v41, v75, (uint64_t *)&unk_26781D350);
      id v43 = v40;
      sub_2147561AC(v38);
      uint64_t v44 = *(int *)(v30 + 48);
      uint64_t v45 = v76;
      v37(v76, v42, v33);
      uint64_t v46 = *(void **)(v42 + v44);
      *(void *)&v45[v44] = v46;
      uint64_t v82 = sub_2147ACD38();
      uint64_t v47 = *(int *)(v30 + 48);
      uint64_t v48 = v77;
      v37(v77, v42, v33);
      *(void *)&v48[v47] = v46;
      uint64_t v49 = *(void (**)(char *, uint64_t))(v35 + 8);
      id v50 = v46;
      v49(v48, v33);
      v49(v45, v33);
      sub_2147561AC(v42);
      uint64_t v22 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21474D42C(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v84;
      }
      unint64_t v52 = *(void *)(v22 + 16);
      unint64_t v51 = *(void *)(v22 + 24);
      uint64_t v20 = v72;
      uint64_t v53 = v83;
      if (v52 >= v51 >> 1)
      {
        sub_21474D42C(v51 > 1, v52 + 1, 1);
        uint64_t v22 = v84;
      }
      *(void *)(v22 + 16) = v52 + 1;
      unint64_t v54 = v22 + 16 * v52;
      *(void *)(v54 + 32) = v82;
      *(void *)(v54 + 40) = v50;
      char v27 = *(unsigned char *)(v20 + 32);
      unint64_t v24 = 1 << v27;
      if (v53 >= 1 << v27) {
        goto LABEL_35;
      }
      uint64_t v26 = v71;
      uint64_t v55 = *(void *)(v71 + 8 * v29);
      if ((v55 & v81) == 0) {
        goto LABEL_36;
      }
      LODWORD(v23) = v70;
      if (*(_DWORD *)(v20 + 36) != v70) {
        goto LABEL_37;
      }
      unint64_t v56 = v55 & (-2 << (v53 & 0x3F));
      if (v56)
      {
        unint64_t v24 = __clz(__rbit64(v56)) | v53 & 0xFFFFFFFFFFFFFFC0;
        int64_t v28 = v69;
      }
      else
      {
        unint64_t v57 = v29 + 1;
        unint64_t v58 = (v24 + 63) >> 6;
        int64_t v28 = v69;
        if (v29 + 1 < v58)
        {
          unint64_t v59 = *(void *)(v71 + 8 * v57);
          if (v59)
          {
LABEL_25:
            unint64_t v24 = __clz(__rbit64(v59)) + (v57 << 6);
          }
          else
          {
            while (v58 - 2 != v29)
            {
              unint64_t v59 = *(void *)(v79 + 8 * v29++);
              if (v59)
              {
                unint64_t v57 = v29 + 1;
                goto LABEL_25;
              }
            }
          }
        }
      }
      uint64_t v25 = v80 + 1;
      if (v80 + 1 == v28)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  else
  {
LABEL_27:
    if (*(void *)(v22 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781DC90);
      uint64_t v60 = sub_2147AD4E8();
    }
    else
    {
      uint64_t v60 = MEMORY[0x263F8EE80];
    }
    Class v61 = isa;
    uint64_t v84 = v60;
    uint64_t v62 = (void *)swift_bridgeObjectRetain();
    uint64_t v63 = v67;
    sub_2147551BC(v62, 1, &v84);
    if (!v63)
    {
      swift_bridgeObjectRelease();
      sub_21472C6F4(0, &qword_26781D370);
      type metadata accessor for Reservation();
      sub_21475615C(&qword_26781D378, &qword_26781D370);
      unint64_t v64 = (void *)sub_2147ACE98();
      swift_release();
      uint64_t v65 = (void *)sub_2147ACF38();
      [(objc_class *)v61 encodeObject:v64 forKey:v65];

      return;
    }
  }
  swift_unexpectedError();
  __break(1u);
}

uint64_t ReservationState.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ReservationState.init(coder:)(a1);
}

uint64_t ReservationState.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D220);
  uint64_t v83 = *(void *)(v5 - 8);
  uint64_t v84 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  sub_21472C6F4(0, (unint64_t *)&unk_26781D590);
  uint64_t v8 = v2;
  uint64_t v9 = sub_2147AD1F8();
  if (!v9) {
    goto LABEL_6;
  }
  uint64_t v10 = v9;
  sub_21472C6F4(0, &qword_26781D370);
  type metadata accessor for Reservation();
  uint64_t v11 = sub_2147AD1F8();
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_6:

    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v82 = v11;
  uint64_t v78 = a1;
  uint64_t v79 = v8;
  uint64_t v77 = (objc_class *)ObjectType;
  if ((v10 & 0xC000000000000001) != 0) {
    uint64_t v12 = sub_2147AD458();
  }
  else {
    uint64_t v12 = *(void *)(v10 + 16);
  }
  if (v12)
  {
    uint64_t v92 = MEMORY[0x263F8EE78];
    sub_21474D39C(0, v12 & ~(v12 >> 63), 0);
    uint64_t v89 = sub_214755EC0(v10);
    uint64_t v90 = v14;
    char v91 = v15 & 1;
    if ((v12 & 0x8000000000000000) == 0)
    {
      uint64_t v16 = v10 & 0xFFFFFFFFFFFFFF8;
      if (v10 < 0) {
        uint64_t v16 = v10;
      }
      uint64_t v81 = v16;
      while (1)
      {
        sub_21475620C(&v88, v89, v90, v91, v10);
        char v27 = v26;
        int64_t v28 = v88;
        uint64_t v29 = sub_2147ACF58();
        CredentialType.init(rawValue:)(v29, v30, &v86);
        uint64_t v31 = v87;
        if (v87 == 26) {
          goto LABEL_57;
        }
        uint64_t v32 = v86;
        uint64_t v33 = sub_2147AD148();

        uint64_t v34 = v92;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21474D39C(0, *(void *)(v34 + 16) + 1, 1);
          uint64_t v34 = v92;
        }
        unint64_t v36 = *(void *)(v34 + 16);
        unint64_t v35 = *(void *)(v34 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_21474D39C(v35 > 1, v36 + 1, 1);
          uint64_t v34 = v92;
        }
        *(void *)(v34 + 16) = v36 + 1;
        os_log_type_t v37 = (void *)(v34 + 24 * v36);
        v37[4] = v32;
        v37[5] = v31;
        v37[6] = v33;
        if ((v10 & 0xC000000000000001) != 0)
        {
          if ((v91 & 1) == 0) {
            goto LABEL_58;
          }
          if (sub_2147AD428()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26781D5C0);
          uint64_t v38 = (void (*)(uint64_t *, void))sub_2147ACEC8();
          sub_2147AD488();
          v38(&v86, 0);
          if (!--v12)
          {
LABEL_24:
            sub_214756438(v89, v90, v91);
            swift_bridgeObjectRelease();
            uint64_t v39 = v92;
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v17 = v89;
          uint64_t v18 = v90;
          char v19 = v91;
          sub_214755FAC(v89, v90, v91, v10, (unint64_t *)&qword_26781C5B0, 0x263F08B40, (void (*)())sub_21477EBE8);
          uint64_t v21 = v20;
          uint64_t v23 = v22;
          char v25 = v24;
          sub_214756438(v17, v18, v19);
          uint64_t v89 = v21;
          uint64_t v90 = v23;
          char v91 = v25 & 1;
          if (!--v12) {
            goto LABEL_24;
          }
        }
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = MEMORY[0x263F8EE78];
LABEL_26:
  uint64_t v40 = v79;
  uint64_t v41 = v82;
  if (*(void *)(v39 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D380);
    uint64_t v42 = sub_2147AD4E8();
  }
  else
  {
    uint64_t v42 = MEMORY[0x263F8EE80];
  }
  uint64_t v86 = v42;
  id v43 = (void *)swift_bridgeObjectRetain();
  sub_214754E14(v43, 1, &v86);
  swift_bridgeObjectRelease();
  *(void *)&v40[OBJC_IVAR____TtC9SEService16ReservationState_counts] = v86;
  unint64_t v44 = v41 & 0xC000000000000001;
  if ((v41 & 0xC000000000000001) != 0) {
    uint64_t v45 = sub_2147AD458();
  }
  else {
    uint64_t v45 = *(void *)(v41 + 16);
  }
  uint64_t v76 = 0;
  if (v45)
  {
    uint64_t v92 = MEMORY[0x263F8EE78];
    sub_21474D48C(0, v45 & ~(v45 >> 63), 0);
    uint64_t v89 = sub_214755EC0(v41);
    uint64_t v90 = v46;
    char v91 = v47 & 1;
    if (v45 < 0) {
      goto LABEL_56;
    }
    uint64_t v48 = v41 & 0xFFFFFFFFFFFFFF8;
    uint64_t v49 = &qword_26781D370;
    if (v41 < 0) {
      uint64_t v48 = v41;
    }
    uint64_t v80 = v7;
    uint64_t v81 = v48;
    do
    {
      while (1)
      {
        uint64_t v58 = v89;
        uint64_t v57 = v90;
        char v59 = v91;
        sub_214756A0C(&v86, v89, v90, v91, v41, v49, 0x263F08C38, (uint64_t (*)())sub_21477EB98, (void (*)(void))type metadata accessor for Reservation);
        Class v61 = v60;
        uint64_t v62 = v86;
        uint64_t v63 = *(int *)(v84 + 48);
        sub_2147ACD58();

        *(void *)&v7[v63] = v62;
        uint64_t v64 = v92;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21474D48C(0, *(void *)(v64 + 16) + 1, 1);
          uint64_t v64 = v92;
        }
        unint64_t v66 = *(void *)(v64 + 16);
        unint64_t v65 = *(void *)(v64 + 24);
        if (v66 >= v65 >> 1)
        {
          sub_21474D48C(v65 > 1, v66 + 1, 1);
          uint64_t v64 = v92;
        }
        *(void *)(v64 + 16) = v66 + 1;
        sub_214756444((uint64_t)v7, v64+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(void *)(v83 + 72) * v66, &qword_26781D220);
        if (v44) {
          break;
        }
        uint64_t v41 = v82;
        sub_214755FAC(v58, v57, v59, v82, v49, 0x263F08C38, (void (*)())sub_21477EB98);
        uint64_t v51 = v50;
        unint64_t v52 = v49;
        uint64_t v54 = v53;
        char v56 = v55;
        sub_214756438(v58, v57, v59);
        uint64_t v89 = v51;
        uint64_t v90 = v54;
        uint64_t v49 = v52;
        unint64_t v44 = 0;
        uint64_t v7 = v80;
        char v91 = v56 & 1;
        if (!--v45) {
          goto LABEL_47;
        }
      }
      uint64_t v41 = v82;
      if ((v59 & 1) == 0) {
        goto LABEL_59;
      }
      if (sub_2147AD428()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D388);
      uint64_t v67 = (void (*)(uint64_t *, void))sub_2147ACEC8();
      sub_2147AD488();
      v67(&v86, 0);
      --v45;
    }
    while (v45);
LABEL_47:
    sub_214756438(v89, v90, v91);
    swift_bridgeObjectRelease();
    uint64_t v68 = v92;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v68 = MEMORY[0x263F8EE78];
  }
  uint64_t v70 = v77;
  int64_t v69 = v78;
  uint64_t v71 = v79;
  if (*(void *)(v68 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D390);
    uint64_t v72 = sub_2147AD4E8();
  }
  else
  {
    uint64_t v72 = MEMORY[0x263F8EE80];
  }
  uint64_t v86 = v72;
  uint64_t v73 = swift_bridgeObjectRetain();
  uint64_t v74 = v76;
  sub_2147558EC(v73, 1, &v86);
  if (!v74)
  {
    swift_bridgeObjectRelease();
    *(void *)&v71[OBJC_IVAR____TtC9SEService16ReservationState_reservations] = v86;

    v85.receiver = v71;
    v85.super_class = v70;
    id v13 = objc_msgSendSuper2(&v85, sel_init);

    return (uint64_t)v13;
  }
LABEL_60:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t static ReservationState.supportsSecureCoding.getter()
{
  return byte_26781D320;
}

uint64_t static ReservationState.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26781D320 = a1;
  return result;
}

uint64_t (*static ReservationState.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

id ReservationState.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ReservationState.init()()
{
}

uint64_t sub_21475470C()
{
  if (*v0) {
    return 0x7461767265736572;
  }
  else {
    return 0x73746E756F63;
  }
}

uint64_t sub_21475474C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214756C38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214754774(uint64_t a1)
{
  unint64_t v2 = sub_2147564A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2147547B0(uint64_t a1)
{
  unint64_t v2 = sub_2147564A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

id ReservationState.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ReservationState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D398);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2147564A8();
  sub_2147AD768();
  uint64_t v9 = (uint64_t *)(v3 + OBJC_IVAR____TtC9SEService16ReservationState_counts);
  swift_beginAccess();
  uint64_t v14 = *v9;
  LOBYTE(v13) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D520);
  sub_2147565E0((unint64_t *)&qword_26781D3B0, (void (*)(void))sub_21472C02C);
  sub_2147AD608();
  if (!v2)
  {
    uint64_t v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC9SEService16ReservationState_reservations);
    swift_beginAccess();
    uint64_t v13 = *v10;
    v12[7] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D3C0);
    sub_2147564FC();
    sub_2147AD608();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t ReservationState.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ReservationState.init(from:)(a1);
}

unint64_t ReservationState.init(from:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D3E0);
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v7 = sub_2147564A8();
  uint64_t v8 = v1;
  sub_2147AD758();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D520);
    char v16 = 0;
    sub_2147565E0((unint64_t *)&unk_26781D3E8, (void (*)(void))sub_21472C118);
    uint64_t v10 = v13;
    sub_2147AD588();
    *(void *)&v8[OBJC_IVAR____TtC9SEService16ReservationState_counts] = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D3C0);
    char v16 = 1;
    sub_21475665C();
    sub_2147AD588();
    *(void *)&v8[OBJC_IVAR____TtC9SEService16ReservationState_reservations] = v17;

    v15.receiver = v8;
    v15.super_class = ObjectType;
    unint64_t v7 = (unint64_t)objc_msgSendSuper2(&v15, sel_init);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_214754DA0@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  unint64_t result = ReservationState.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_214754DF0(void *a1)
{
  return ReservationState.encode(to:)(a1);
}

void sub_214754E14(void *a1, char a2, void *a3)
{
  LOBYTE(v4) = a2;
  uint64_t v6 = a1[2];
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_3;
  }
  unint64_t v8 = a1[5];
  unint64_t v7 = a1[6];
  uint64_t v9 = a1[4];
  sub_21471ED54(v9, v8);
  if (v8 == 26) {
    goto LABEL_3;
  }
  uint64_t v10 = (void *)*a3;
  unint64_t v11 = sub_21477EA08(v9, v8);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  BOOL v15 = __OFADD__(v13, v14);
  uint64_t v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v17 = v12;
  if (v10[3] < v16)
  {
    sub_214791D00(v16, v4 & 1);
    unint64_t v11 = sub_21477EA08(v9, v8);
    if ((v17 & 1) == (v18 & 1)) {
      goto LABEL_9;
    }
LABEL_7:
    unint64_t v11 = sub_2147AD6B8();
    __break(1u);
  }
  if (v4)
  {
LABEL_9:
    if (v17) {
      goto LABEL_10;
    }
LABEL_13:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v23 = (uint64_t *)(v22[6] + 16 * v11);
    *uint64_t v23 = v9;
    v23[1] = v8;
    *(void *)(v22[7] + 8 * v11) = v7;
    uint64_t v24 = v22[2];
    BOOL v15 = __OFADD__(v24, 1);
    uint64_t v25 = v24 + 1;
    if (!v15)
    {
      v22[2] = v25;
      if (v6 == 1)
      {
LABEL_3:
        swift_bridgeObjectRelease_n();
        return;
      }
      uint64_t v4 = a1 + 9;
      unint64_t v7 = 1;
      while (v7 < a1[2])
      {
        unint64_t v8 = *(v4 - 1);
        uint64_t v26 = *v4;
        uint64_t v9 = *(v4 - 2);
        sub_21471ED54(v9, v8);
        if (v8 == 26) {
          goto LABEL_3;
        }
        char v27 = (void *)*a3;
        unint64_t v28 = sub_21477EA08(v9, v8);
        uint64_t v30 = v27[2];
        BOOL v31 = (v29 & 1) == 0;
        BOOL v15 = __OFADD__(v30, v31);
        uint64_t v32 = v30 + v31;
        if (v15) {
          goto LABEL_25;
        }
        char v17 = v29;
        if (v27[3] < v32)
        {
          sub_214791D00(v32, 1);
          unint64_t v28 = sub_21477EA08(v9, v8);
          if ((v17 & 1) != (v33 & 1)) {
            goto LABEL_7;
          }
        }
        if (v17) {
          goto LABEL_10;
        }
        uint64_t v34 = (void *)*a3;
        *(void *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
        unint64_t v35 = (uint64_t *)(v34[6] + 16 * v28);
        *unint64_t v35 = v9;
        v35[1] = v8;
        *(void *)(v34[7] + 8 * v28) = v26;
        uint64_t v36 = v34[2];
        BOOL v15 = __OFADD__(v36, 1);
        uint64_t v37 = v36 + 1;
        if (v15) {
          goto LABEL_26;
        }
        ++v7;
        v34[2] = v37;
        v4 += 3;
        if (v6 == v7) {
          goto LABEL_3;
        }
      }
      goto LABEL_27;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v21 = v11;
  sub_21479064C();
  unint64_t v11 = v21;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_10:
  char v19 = (void *)swift_allocError();
  swift_willThrow();
  id v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_2147201A0(v9, v8);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_28:
  sub_2147AD348();
  sub_2147ACFC8();
  sub_2147AD3F8();
  sub_2147ACFC8();
  sub_2147AD4A8();
  __break(1u);
}

void sub_2147551BC(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v7 = (void *)a1[4];
  unint64_t v8 = (void *)a1[5];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  id v10 = v7;
  id v11 = v8;
  unint64_t v13 = sub_21477EB98((uint64_t)v10);
  uint64_t v14 = v9[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15)) {
    goto LABEL_23;
  }
  char v17 = v12;
  if (v9[3] >= v16)
  {
    if (a2)
    {
      if (v12) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_2147909AC();
      if (v17) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
    uint64_t v23 = 8 * v13;
    *(void *)(v22[6] + v23) = v10;
    *(void *)(v22[7] + v23) = v11;
    uint64_t v24 = v22[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v22[2] = v26;
    uint64_t v27 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    unint64_t v28 = (void **)(a1 + 7);
    while (1)
    {
      char v29 = *v28;
      uint64_t v30 = (void *)*a3;
      id v10 = *(v28 - 1);
      id v11 = v29;
      unint64_t v31 = sub_21477EB98((uint64_t)v10);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v25 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v25) {
        break;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_2147924F0(v35, 1);
        unint64_t v31 = sub_21477EB98((uint64_t)v10);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      uint64_t v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = 8 * v31;
      *(void *)(v38[6] + v39) = v10;
      *(void *)(v38[7] + v39) = v11;
      uint64_t v40 = v38[2];
      BOOL v25 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v25) {
        goto LABEL_24;
      }
      v38[2] = v41;
      v28 += 2;
      if (!--v27) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2147924F0(v16, a2 & 1);
  unint64_t v18 = sub_21477EB98((uint64_t)v10);
  if ((v17 & 1) == (v19 & 1))
  {
    unint64_t v13 = v18;
    if ((v17 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    id v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_21472C6F4(0, &qword_26781D370);
  sub_2147AD6B8();
  __break(1u);
LABEL_26:
  sub_2147AD348();
  sub_2147ACFC8();
  sub_21472C6F4(0, &qword_26781D370);
  sub_2147AD3F8();
  sub_2147ACFC8();
  sub_2147AD4A8();
  __break(1u);
}

void sub_214755554(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v7 = (void *)a1[4];
  unint64_t v8 = (void *)a1[5];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  id v10 = v7;
  id v11 = v8;
  unint64_t v13 = sub_21477EBE8((uint64_t)v10);
  uint64_t v14 = v9[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15)) {
    goto LABEL_23;
  }
  char v17 = v12;
  if (v9[3] >= v16)
  {
    if (a2)
    {
      if (v12) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_2147909B8();
      if (v17) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
    uint64_t v23 = 8 * v13;
    *(void *)(v22[6] + v23) = v10;
    *(void *)(v22[7] + v23) = v11;
    uint64_t v24 = v22[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v22[2] = v26;
    uint64_t v27 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    unint64_t v28 = (void **)(a1 + 7);
    while (1)
    {
      char v29 = *v28;
      uint64_t v30 = (void *)*a3;
      id v10 = *(v28 - 1);
      id v11 = v29;
      unint64_t v31 = sub_21477EBE8((uint64_t)v10);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v25 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v25) {
        break;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_2147924FC(v35, 1);
        unint64_t v31 = sub_21477EBE8((uint64_t)v10);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      uint64_t v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = 8 * v31;
      *(void *)(v38[6] + v39) = v10;
      *(void *)(v38[7] + v39) = v11;
      uint64_t v40 = v38[2];
      BOOL v25 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v25) {
        goto LABEL_24;
      }
      v38[2] = v41;
      v28 += 2;
      if (!--v27) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2147924FC(v16, a2 & 1);
  unint64_t v18 = sub_21477EBE8((uint64_t)v10);
  if ((v17 & 1) == (v19 & 1))
  {
    unint64_t v13 = v18;
    if ((v17 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    id v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  sub_2147AD6B8();
  __break(1u);
LABEL_26:
  sub_2147AD348();
  sub_2147ACFC8();
  sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  sub_2147AD3F8();
  sub_2147ACFC8();
  sub_2147AD4A8();
  __break(1u);
}

void sub_2147558EC(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = sub_2147ACD88();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D220);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  BOOL v15 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v57) = a2;
  uint64_t v17 = *(int *)(v12 + 48);
  v54[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v54[1] = v3;
  uint64_t v18 = a1 + v54[0];
  uint64_t v59 = *(void *)(v13 + 72);
  uint64_t v56 = a1;
  swift_bridgeObjectRetain();
  sub_214756D48(v18, (uint64_t)v15);
  uint64_t v55 = v8;
  char v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v60 = v7;
  Class v61 = v19;
  v19((unint64_t)v10, v15, v7);
  uint64_t v58 = v17;
  id v20 = *(void **)&v15[v17];
  uint64_t v62 = a3;
  uint64_t v21 = *a3;
  unint64_t v23 = sub_21477EC38((uint64_t)v10);
  uint64_t v24 = *(void *)(v21 + 16);
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_24;
  }
  char v27 = v22;
  if (*(void *)(v21 + 24) >= v26)
  {
    if (v57)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_2147909C4();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    BOOL v34 = (void *)*v62;
    *(void *)(*v62 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    uint64_t v35 = v34[6];
    uint64_t v57 = *(void *)(v55 + 72);
    uint64_t v36 = v60;
    v61(v35 + v57 * v23, v10, v60);
    *(void *)(v34[7] + 8 * v23) = v20;
    uint64_t v37 = v34[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v34[2] = v39;
    uint64_t v40 = v16 - 1;
    if (v16 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v41 = v56 + v59 + v54[0];
    while (1)
    {
      sub_214756D48(v41, (uint64_t)v15);
      v61((unint64_t)v10, v15, v36);
      id v20 = *(void **)&v15[v58];
      uint64_t v42 = (void *)*v62;
      unint64_t v44 = sub_21477EC38((uint64_t)v10);
      uint64_t v45 = v42[2];
      BOOL v46 = (v43 & 1) == 0;
      uint64_t v47 = v45 + v46;
      if (__OFADD__(v45, v46)) {
        break;
      }
      char v48 = v43;
      if (v42[3] < v47)
      {
        sub_214792508(v47, 1);
        unint64_t v49 = sub_21477EC38((uint64_t)v10);
        if ((v48 & 1) != (v50 & 1)) {
          goto LABEL_26;
        }
        unint64_t v44 = v49;
      }
      if (v48) {
        goto LABEL_10;
      }
      uint64_t v51 = (void *)*v62;
      *(void *)(*v62 + 8 * (v44 >> 6) + 64) |= 1 << v44;
      uint64_t v36 = v60;
      v61(v51[6] + v57 * v44, v10, v60);
      *(void *)(v51[7] + 8 * v44) = v20;
      uint64_t v52 = v51[2];
      BOOL v38 = __OFADD__(v52, 1);
      uint64_t v53 = v52 + 1;
      if (v38) {
        goto LABEL_25;
      }
      v51[2] = v53;
      v41 += v59;
      if (!--v40) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_214792508(v26, v57 & 1);
  unint64_t v28 = sub_21477EC38((uint64_t)v10);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v30 = (void *)swift_allocError();
    swift_willThrow();
    id v65 = v30;
    id v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    char v32 = swift_dynamicCast();
    uint64_t v33 = v60;
    if ((v32 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v33);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_2147AD6B8();
  __break(1u);
LABEL_27:
  uint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  sub_2147AD348();
  sub_2147ACFC8();
  sub_2147AD3F8();
  sub_2147ACFC8();
  sub_2147AD4A8();
  __break(1u);
}

uint64_t sub_214755E38(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_214755EC0(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return sub_2147AD408();
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2)
  {
    uint64_t v3 = 0;
    return __clz(__rbit64(v2)) + v3;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v1 = 1 << v5;
  if (v6 < 7) {
    return v1;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = 64;
    return __clz(__rbit64(v2)) + v3;
  }
  unint64_t v7 = (unint64_t)(v1 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v3 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v2 = v10;
    --v8;
    v3 += 64;
    if (v10) {
      return __clz(__rbit64(v2)) + v3;
    }
  }
  return v1;
}

void sub_214755F84(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_214755FAC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, uint64_t a6, void (*a7)())
{
  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(unsigned char *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if ((*(void *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a1))
    {
      if (*(_DWORD *)(a4 + 36) == a2)
      {
        sub_2147AD2E8();
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (sub_2147AD438() != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_2147AD448();
  sub_214756D3C(a1, a2, 1);
  sub_21472C6F4(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  a7();
  char v12 = v11;

  if (v12)
  {
    sub_2147AD418();
    sub_2147AD468();
    sub_214756438(a1, a2, 1);
    swift_unknownObjectRelease();
    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_21475615C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21472C6F4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2147561AC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_21475620C(void *a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  unint64_t v6 = a2;
  if ((a5 & 0xC000000000000001) != 0)
  {
    if (a4)
    {
      sub_2147AD478();
      sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      sub_21472C6F4(0, (unint64_t *)&unk_26781D590);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v13;
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_18;
  }
  if (a4)
  {
LABEL_10:
    if (sub_2147AD438() == *(_DWORD *)(a5 + 36))
    {
      sub_2147AD448();
      sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v6 = sub_21477EBE8((uint64_t)v13);
      char v9 = v8;

      if (v9) {
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  unint64_t v10 = *(void **)(*(void *)(a5 + 48) + 8 * v6);
  char v11 = *(void **)(*(void *)(a5 + 56) + 8 * v6);
  *a1 = v11;
  v10;
  id v12 = v11;
}

uint64_t sub_214756438(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214756444(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_2147564A8()
{
  unint64_t result = qword_26781D3A0;
  if (!qword_26781D3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D3A0);
  }
  return result;
}

unint64_t sub_2147564FC()
{
  unint64_t result = qword_26781D3C8;
  if (!qword_26781D3C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D3C0);
    sub_214752F50((unint64_t *)&unk_26781C4E0, 255, MEMORY[0x263F07508]);
    sub_214752F50(&qword_26781D3D8, 255, (void (*)(uint64_t))type metadata accessor for Reservation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D3C8);
  }
  return result;
}

uint64_t sub_2147565E0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D520);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21475665C()
{
  unint64_t result = qword_26781D3F8;
  if (!qword_26781D3F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D3C0);
    sub_214752F50((unint64_t *)&unk_26781C500, 255, MEMORY[0x263F07508]);
    sub_214752F50((unint64_t *)&unk_26781D408, 255, (void (*)(uint64_t))type metadata accessor for Reservation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D3F8);
  }
  return result;
}

uint64_t method lookup function for ReservationState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ReservationState);
}

uint64_t dispatch thunk of ReservationState.__allocating_init(counts:reservations:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ReservationState.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ReservationState.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for ReservationState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214756874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReservationState.CodingKeys()
{
  return &type metadata for ReservationState.CodingKeys;
}

unint64_t sub_2147568B0()
{
  unint64_t result = qword_26781D418;
  if (!qword_26781D418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D418);
  }
  return result;
}

unint64_t sub_214756908()
{
  unint64_t result = qword_26781D420;
  if (!qword_26781D420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D420);
  }
  return result;
}

unint64_t sub_214756960()
{
  unint64_t result = qword_26781D428;
  if (!qword_26781D428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D428);
  }
  return result;
}

void sub_2147569B4(void *a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
}

void sub_214756A0C(void *a1, uint64_t a2, int a3, char a4, uint64_t a5, unint64_t *a6, uint64_t a7, uint64_t (*a8)(), void (*a9)(void))
{
  uint64_t v11 = a2;
  if ((a5 & 0xC000000000000001) != 0)
  {
    if (a4)
    {
      sub_2147AD478();
      sub_21472C6F4(0, a6);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      a9(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v19;
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_18;
  }
  if (a4)
  {
LABEL_10:
    if (sub_2147AD438() == *(_DWORD *)(a5 + 36))
    {
      sub_2147AD448();
      sub_21472C6F4(0, a6);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      uint64_t v11 = a8();
      char v15 = v14;

      if (v15) {
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v16 = *(void **)(*(void *)(a5 + 48) + 8 * v11);
  uint64_t v17 = *(void **)(*(void *)(a5 + 56) + 8 * v11);
  *a1 = v17;
  v16;
  id v18 = v17;
}

uint64_t sub_214756C38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73746E756F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461767265736572 && a2 == 0xEC000000736E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214756D3C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_214756D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_214756DB0()
{
  type metadata accessor for CredentialInternalXPCClient();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2147B7ED0;
  *(void *)(v0 + 32) = 0x80000002147C0090;
  uint64_t result = sub_2147ACE08();
  qword_26782C6D8 = v0;
  return result;
}

id sub_214756E50()
{
  uint64_t v1 = v0;
  BOOL v2 = *(void **)(v0 + 16);
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = sub_2147ACDF8();
    os_log_type_t v5 = sub_2147AD188();
    if (os_log_type_enabled(v4, v5))
    {
      char v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v6 = 0;
      _os_log_impl(&dword_2146ED000, v4, v5, "CredentialInternalXPCClient: already connected", v6, 2u);
      MEMORY[0x2166A8870](v6, -1, -1);
    }
  }
  else
  {
    unint64_t v7 = sub_2147ACDF8();
    os_log_type_t v8 = sub_2147AD188();
    if (os_log_type_enabled(v7, v8))
    {
      char v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v9 = 0;
      _os_log_impl(&dword_2146ED000, v7, v8, "CredentialInternalXPCClient: Starting new XPC connection", v9, 2u);
      MEMORY[0x2166A8870](v9, -1, -1);
    }

    id v10 = objc_allocWithZone(MEMORY[0x263F08D68]);
    swift_bridgeObjectRetain();
    id v3 = (id)sub_2147ACF38();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v10, sel_initWithMachServiceName_options_, v3, 4096);

    id v12 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v11;

    uint64_t v13 = *(void **)(v0 + 16);
    if (v13)
    {
      id v3 = v13;
      char v14 = (void *)sub_21472F208();
      objc_msgSend(v3, sel_setRemoteObjectInterface_, v14);

      objc_msgSend(v3, sel_setExportedObject_, v1);
      BOOL v25 = sub_214757698;
      uint64_t v26 = v1;
      uint64_t v21 = MEMORY[0x263EF8330];
      uint64_t v22 = 1107296256;
      unint64_t v23 = sub_214751554;
      uint64_t v24 = &block_descriptor_8;
      char v15 = _Block_copy(&v21);
      swift_retain();
      swift_release();
      objc_msgSend(v3, sel_setInterruptionHandler_, v15);
      _Block_release(v15);
      BOOL v25 = sub_2147576BC;
      uint64_t v26 = v1;
      uint64_t v21 = MEMORY[0x263EF8330];
      uint64_t v22 = 1107296256;
      unint64_t v23 = sub_214751554;
      uint64_t v24 = &block_descriptor_11;
      uint64_t v16 = _Block_copy(&v21);
      swift_retain();
      swift_release();
      objc_msgSend(v3, sel_setInvalidationHandler_, v16);
      _Block_release(v16);
      objc_msgSend(v3, sel_activate);
    }
    else
    {
      uint64_t v17 = sub_2147ACDF8();
      os_log_type_t v18 = sub_2147AD1A8();
      if (os_log_type_enabled(v17, v18))
      {
        char v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v19 = 0;
        _os_log_impl(&dword_2146ED000, v17, v18, "CredentialInternalXPCClient: Unable to start XPC Connection", v19, 2u);
        MEMORY[0x2166A8870](v19, -1, -1);
      }

      sub_214757644();
      swift_allocError();
      swift_willThrow();
    }
  }
  return v3;
}

void sub_214757204(uint64_t a1, const char *a2)
{
  uint64_t v4 = sub_2147ACDF8();
  os_log_type_t v5 = sub_2147AD188();
  if (os_log_type_enabled(v4, v5))
  {
    char v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v6 = 0;
    _os_log_impl(&dword_2146ED000, v4, v5, a2, v6, 2u);
    MEMORY[0x2166A8870](v6, -1, -1);
  }

  unint64_t v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_2147572C4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC9SEService27CredentialInternalXPCClient_logger;
  uint64_t v2 = sub_2147ACE18();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *((unsigned int *)*v0 + 12);
  uint64_t v4 = *((unsigned __int16 *)*v0 + 26);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_214757374()
{
  return type metadata accessor for CredentialInternalXPCClient();
}

uint64_t type metadata accessor for CredentialInternalXPCClient()
{
  uint64_t result = qword_26781D448;
  if (!qword_26781D448) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2147573C8()
{
  uint64_t result = sub_2147ACE18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_21475746C(uint64_t a1)
{
  id v2 = sub_214756E50();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  void v7[4] = sub_21475763C;
  v7[5] = v3;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_214778B30;
  v7[3] = &block_descriptor_5;
  uint64_t v4 = _Block_copy(v7);
  swift_release();
  id v5 = objc_msgSend(v2, sel_synchronousRemoteObjectProxyWithErrorHandler_, v4);
  _Block_release(v4);

  sub_2147AD288();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D458);
  if ((swift_dynamicCast() & 1) == 0) {
    os_log_type_t v8 = 0;
  }
  sub_214779CAC(&v8, a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_21475762C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21475763C(uint64_t a1)
{
  return sub_214778D58(a1, *(void *)(v1 + 16));
}

unint64_t sub_214757644()
{
  unint64_t result = qword_26781D460;
  if (!qword_26781D460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D460);
  }
  return result;
}

void sub_214757698()
{
  sub_214757204(v0, "CredentialInternalXPCClient: XPC Connection Interrupted");
}

void sub_2147576BC()
{
  sub_214757204(v0, "CredentialInternalXPCClient: XPC Connection invalidated");
}

uint64_t static SEApplet.supportsSecureCoding.getter()
{
  return byte_26781D470;
}

uint64_t static SEApplet.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26781D470 = a1;
  return result;
}

uint64_t (*static SEApplet.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall SEApplet.encode(with:)(NSCoder with)
{
  uint64_t v3 = (void *)sub_2147ACF38();
  uint64_t v4 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  id v5 = (void *)sub_2147ACF38();
  char v6 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState);
  id v8 = (id)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeInteger:v7 forKey:v8];
}

uint64_t SEApplet.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SEApplet.init(coder:)(a1);
}

uint64_t SEApplet.init(coder:)(void *a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_2147481BC();
  id v5 = v2;
  uint64_t v6 = sub_2147AD1E8();
  if (!v6) {
    goto LABEL_6;
  }
  uint64_t v7 = (void *)v6;
  uint64_t v8 = sub_2147AD1E8();
  if (!v8)
  {

LABEL_6:
    swift_deallocPartialClassInstance();
    return 0;
  }
  char v9 = (void *)v8;
  uint64_t v10 = sub_2147ACF58();
  id v11 = (uint64_t *)&v5[OBJC_IVAR____TtC9SEService8SEApplet_identifier];
  uint64_t *v11 = v10;
  v11[1] = v12;
  uint64_t v13 = sub_2147ACF58();
  char v14 = (uint64_t *)&v5[OBJC_IVAR____TtC9SEService8SEApplet_moduleIdentifier];
  *char v14 = v13;
  v14[1] = v15;
  uint64_t v16 = (void *)sub_2147ACF38();
  id v17 = objc_msgSend(a1, sel_decodeIntegerForKey_, v16);

  uint64_t result = sub_21472F12C((uint64_t)v17);
  if ((v19 & 1) == 0)
  {
    uint64_t v20 = result;

    *(void *)&v5[OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState] = v20;
    v22.receiver = v5;
    v22.super_class = ObjectType;
    id v21 = objc_msgSendSuper2(&v22, sel_init);

    return (uint64_t)v21;
  }
  __break(1u);
  return result;
}

uint64_t SEApplet.description.getter()
{
  return 0;
}

id SEApplet.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SEApplet.init()()
{
}

uint64_t sub_214757E68()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0x6C6379636566696CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_214757ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2147588DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214757F00(uint64_t a1)
{
  unint64_t v2 = sub_21475855C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214757F3C(uint64_t a1)
{
  unint64_t v2 = sub_21475855C();
  return MEMORY[0x270FA00B8](a1, v2);
}

id SEApplet.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SEApplet.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D498);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21475855C();
  sub_2147AD768();
  char v13 = 0;
  sub_2147AD5D8();
  if (!v2)
  {
    char v12 = 1;
    sub_2147AD5D8();
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState);
    v10[15] = 2;
    sub_2147585B0();
    sub_2147AD608();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id SEApplet.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SEApplet.init(from:)(a1);
}

id SEApplet.init(from:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4B0);
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21475855C();
  uint64_t v7 = v1;
  sub_2147AD758();
  if (v2)
  {
    id v17 = ObjectType;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v4;
    LOBYTE(v23) = 0;
    uint64_t v9 = v19;
    uint64_t v10 = sub_2147AD558();
    char v12 = (uint64_t *)&v7[OBJC_IVAR____TtC9SEService8SEApplet_identifier];
    uint64_t *v12 = v10;
    v12[1] = v13;
    LOBYTE(v23) = 1;
    uint64_t v14 = sub_2147AD558();
    uint64_t v15 = (uint64_t *)&v7[OBJC_IVAR____TtC9SEService8SEApplet_moduleIdentifier];
    *uint64_t v15 = v14;
    v15[1] = v16;
    char v22 = 2;
    sub_214758604();
    sub_2147AD588();
    *(void *)&v7[OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState] = v23;

    v21.receiver = v7;
    v21.super_class = ObjectType;
    id v17 = objc_msgSendSuper2(&v21, sel_init);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v17;
}

id sub_2147584E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = SEApplet.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_214758538(void *a1)
{
  return SEApplet.encode(to:)(a1);
}

unint64_t sub_21475855C()
{
  unint64_t result = qword_26781D4A0;
  if (!qword_26781D4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D4A0);
  }
  return result;
}

unint64_t sub_2147585B0()
{
  unint64_t result = qword_26781D4A8;
  if (!qword_26781D4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D4A8);
  }
  return result;
}

unint64_t sub_214758604()
{
  unint64_t result = qword_26781D4B8;
  if (!qword_26781D4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D4B8);
  }
  return result;
}

uint64_t type metadata accessor for SEApplet()
{
  return self;
}

uint64_t method lookup function for SEApplet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SEApplet);
}

uint64_t dispatch thunk of SEApplet.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SEApplet.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for SEApplet.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21475879CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SEApplet.CodingKeys()
{
  return &type metadata for SEApplet.CodingKeys;
}

unint64_t sub_2147587D8()
{
  unint64_t result = qword_26781D4C8;
  if (!qword_26781D4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D4C8);
  }
  return result;
}

unint64_t sub_214758830()
{
  unint64_t result = qword_26781D4D0;
  if (!qword_26781D4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D4D0);
  }
  return result;
}

unint64_t sub_214758888()
{
  unint64_t result = qword_26781D4D8;
  if (!qword_26781D4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D4D8);
  }
  return result;
}

uint64_t sub_2147588DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002147C00E0 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6379636566696CLL && a2 == 0xEE00657461745365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214758A5C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_21474D45C(0, v1, 0);
  uint64_t v2 = v29;
  uint64_t result = sub_214755E30(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v23 = v1;
  int v24 = v5;
  uint64_t v25 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v26 = v7;
    char v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = *v12;
    unint64_t v28 = v12[1];
    sub_21471ED54(*v12, v28);
    CredentialType.rawValue.getter();
    uint64_t v27 = sub_2147ACF38();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_2147AD158();
    uint64_t result = sub_2147201A0(v13, v28);
    unint64_t v16 = *(void *)(v29 + 16);
    unint64_t v15 = *(void *)(v29 + 24);
    if (v16 >= v15 >> 1) {
      uint64_t result = sub_21474D45C(v15 > 1, v16 + 1, 1);
    }
    *(void *)(v29 + 16) = v16 + 1;
    uint64_t v17 = v29 + 16 * v16;
    *(void *)(v17 + 32) = v27;
    *(void *)(v17 + 40) = v14;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v18 = *(void *)(v25 + 8 * v11);
    if ((v18 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v24;
    if (*(_DWORD *)(a1 + 36) != v24) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      int64_t v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v23;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v23;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v25 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(a1 + 80 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v26 + 1;
    uint64_t v6 = v9;
    if (v26 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_214758CAC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    int v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_214758D04@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    int v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_214758D5C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_214758DB4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap);
}

uint64_t sub_214758DC0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_214758E18(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices);
}

unint64_t sub_214758E24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D680);
  uint64_t v2 = (void *)sub_2147AD4E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_21477EA80(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214758F38(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D380);
  uint64_t v2 = (void *)sub_2147AD4E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    unint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    sub_21471ED54(v5, v6);
    unint64_t result = sub_21477EA08(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214759050(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D610);
  uint64_t v2 = (void *)sub_2147AD4E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_21477EA80(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21475916C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D600);
  uint64_t v2 = sub_2147AD4E8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_214765188(v6, (uint64_t)v15, &qword_26781D608);
    unint64_t result = sub_21477EB54((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_21476516C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t SESnapshot.CanFitResult.FailureReason.rawValue.getter()
{
  return *v0;
}

uint64_t SESnapshot.CanFitResult.FailureReason.rawValue.setter(uint64_t result)
{
  *int64_t v1 = result;
  return result;
}

uint64_t (*SESnapshot.CanFitResult.FailureReason.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t SESnapshot.CanFitResult.FailureReason.init(rawValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t SESnapshot.CanFitResult.FailureReason.debugDescription.getter()
{
  char v1 = *v0;
  if (*v0)
  {
    uint64_t v2 = sub_21475FF0C(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v4 = v2[2];
    unint64_t v3 = v2[3];
    if (v4 >= v3 >> 1) {
      uint64_t v2 = sub_21475FF0C((void *)(v3 > 1), v4 + 1, 1, v2);
    }
    v2[2] = v4 + 1;
    uint64_t v5 = &v2[2 * v4];
    v5[4] = 0x7061654870;
    v5[5] = 0xE500000000000000;
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  }
  if ((v1 & 2) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_21475FF0C(0, v2[2] + 1, 1, v2);
    }
    unint64_t v8 = v2[2];
    unint64_t v7 = v2[3];
    if (v8 >= v7 >> 1) {
      uint64_t v2 = sub_21475FF0C((void *)(v7 > 1), v8 + 1, 1, v2);
    }
    v2[2] = v8 + 1;
    uint64_t v9 = &v2[2 * v8];
    v9[4] = 7499619;
    void v9[5] = 0xE300000000000000;
    if ((v1 & 4) == 0)
    {
LABEL_8:
      if ((v1 & 8) == 0) {
        goto LABEL_9;
      }
LABEL_21:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_21475FF0C(0, v2[2] + 1, 1, v2);
      }
      unint64_t v14 = v2[2];
      unint64_t v13 = v2[3];
      if (v14 >= v13 >> 1) {
        uint64_t v2 = sub_21475FF0C((void *)(v13 > 1), v14 + 1, 1, v2);
      }
      v2[2] = v14 + 1;
      unint64_t v15 = &v2[2 * v14];
      v15[4] = 0x73656369646E69;
      void v15[5] = 0xE700000000000000;
      goto LABEL_26;
    }
  }
  else if ((v1 & 4) == 0)
  {
    goto LABEL_8;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_21475FF0C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v11 = v2[2];
  unint64_t v10 = v2[3];
  if (v11 >= v10 >> 1) {
    uint64_t v2 = sub_21475FF0C((void *)(v10 > 1), v11 + 1, 1, v2);
  }
  v2[2] = v11 + 1;
  uint64_t v12 = &v2[2 * v11];
  v12[4] = 6582115;
  void v12[5] = 0xE300000000000000;
  if ((v1 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_9:
  if (v2[2])
  {
LABEL_26:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
    sub_21475FEB0();
    uint64_t v6 = sub_2147ACF18();
    swift_bridgeObjectRelease();
    return v6;
  }
  swift_bridgeObjectRelease();
  return 0x73736563637573;
}

unsigned char *sub_21475957C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_21475958C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unsigned char *sub_214759594@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

unsigned char *sub_2147595A8@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

unsigned char *sub_2147595BC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_2147595D0(unsigned char *a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  int v4 = *v2;
  if ((v4 & v3) != v3) {
    *uint64_t v2 = v4 | v3;
  }
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_214759600@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  int v5 = v4 & v3;
  if ((v4 & v3) != 0) {
    *uint64_t v2 = v4 & ~(_BYTE)v3;
  }
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_21475962C@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *uint64_t v2 = v4 | v3;
  int v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned char *sub_214759650(unsigned char *result)
{
  *v1 |= *result;
  return result;
}

unsigned char *sub_214759664(unsigned char *result)
{
  *v1 &= *result;
  return result;
}

unsigned char *sub_214759678(unsigned char *result)
{
  *v1 ^= *result;
  return result;
}

unsigned char *sub_21475968C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2147596A0(unsigned __int8 *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_2147596B4(unsigned char *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_2147596C8(unsigned __int8 *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_2147596DC()
{
  return *v0 == 0;
}

unsigned char *sub_2147596EC(unsigned char *result)
{
  *v1 &= ~*result;
  return result;
}

unsigned __int8 *sub_214759700@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_214759710(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

BOOL static SESnapshot.CanFitResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1[1] == 1) {
    return (a2[1] & 1) != 0;
  }
  if (a2[1]) {
    return 0;
  }
  return *a1 == *a2;
}

BOOL sub_21475975C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1[1] == 1) {
    return (a2[1] & 1) != 0;
  }
  if (a2[1]) {
    return 0;
  }
  return *a1 == *a2;
}

uint64_t static SESnapshot.getCurrentSnapshot(with:seid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x270FA2498](sub_2147597BC, 0, 0);
}

uint64_t sub_2147597BC()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 56) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_26781D500 + dword_26781D500);
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *char v1 = v0;
  v1[1] = sub_214759894;
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);
  return v6(v4, v2, v3, v0 + 16, v0 + 56);
}

uint64_t sub_214759894(uint64_t a1)
{
  uint64_t v4 = *v2 + 16;
  uint64_t v5 = *v2;
  *(void *)(v5 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_21472C730(v4, &qword_26781D508);
    return MEMORY[0x270FA2498](sub_2147599F8, 0, 0);
  }
  else
  {
    sub_21472C730(v4, &qword_26781D508);
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_2147599F8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static SESnapshot.getCurrentSnapshot(with:seid:stateInfoProvider:dataSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_26781D500 + dword_26781D500);
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_214759AE8;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_214759AE8(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_214759BE8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x270FA2498](sub_214759C08, 0, 0);
}

uint64_t sub_214759C08()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_214759D04;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_214759E14;
  v0[13] = &block_descriptor_58;
  v0[14] = v2;
  objc_msgSend(v1, sel_getCredentialSizesWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214759D04()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_214765434;
  }
  else {
    uint64_t v2 = sub_214765438;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214759E14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    *uint64_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    type metadata accessor for SERCredentialInfo();
    **(void **)(*(void *)(v3 + 64) + 40) = sub_2147ACEA8();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_214759EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  return MEMORY[0x270FA2498](sub_214759F18, 0, 0);
}

uint64_t sub_214759F18()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  void *v4 = v0;
  v4[1] = sub_21475A024;
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[4];
  return v9(v7, v5, v6, v2, v3);
}

uint64_t sub_21475A024(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    return MEMORY[0x270FA2498](sub_21475A170, 0, 0);
  }
}

uint64_t sub_21475A170()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21475A194(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return MEMORY[0x270FA2498](sub_21475A1B4, 0, 0);
}

uint64_t sub_21475A1B4()
{
  if (qword_26781BF90 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26782C6D0;
  *(void *)(v0 + 32) = qword_26782C6D0;
  return MEMORY[0x270FA2498](sub_21475A24C, v1, 0);
}

uint64_t sub_21475A24C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_214763BD4((unint64_t *)&qword_26781D638, (void (*)(uint64_t))type metadata accessor for SERClient);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = v1;
  v3[3] = &unk_26781D670;
  v3[4] = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = type metadata accessor for ReservationState();
  void *v4 = v0;
  v4[1] = sub_21475A3A8;
  return MEMORY[0x270FA2360](v0 + 2, v1, v2, 0x786F725068746977, 0xED0000293A5F2879, sub_214765424, v3, v5);
}

uint64_t sub_21475A3A8()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[4];
    return MEMORY[0x270FA2498](sub_21476543C, v3, 0);
  }
  else
  {
    uint64_t v4 = (void *)v2[3];
    swift_task_dealloc();
    void *v4 = v2[2];
    uint64_t v5 = (uint64_t (*)(void))v2[1];
    return v5();
  }
}

uint64_t sub_21475A4F4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x270FA2498](sub_21475A514, 0, 0);
}

uint64_t sub_21475A514()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_214759D04;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_21475A610;
  v0[13] = &block_descriptor_54;
  v0[14] = v2;
  objc_msgSend(v1, sel_getStateWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_21475A614(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return MEMORY[0x270FA2498](sub_21475A634, 0, 0);
}

uint64_t sub_21475A634()
{
  if (qword_26781BF90 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26782C6D0;
  *(void *)(v0 + 32) = qword_26782C6D0;
  return MEMORY[0x270FA2498](sub_21475A6CC, v1, 0);
}

uint64_t sub_21475A6CC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_214763BD4((unint64_t *)&qword_26781D638, (void (*)(uint64_t))type metadata accessor for SERClient);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = v1;
  v3[3] = &unk_26781D668;
  v3[4] = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = type metadata accessor for DeviceCapability();
  void *v4 = v0;
  v4[1] = sub_21475A828;
  return MEMORY[0x270FA2360](v0 + 2, v1, v2, 0x786F725068746977, 0xED0000293A5F2879, sub_214765418, v3, v5);
}

uint64_t sub_21475A828()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[4];
    return MEMORY[0x270FA2498](sub_21475A974, v3, 0);
  }
  else
  {
    uint64_t v4 = (void *)v2[3];
    swift_task_dealloc();
    void *v4 = v2[2];
    uint64_t v5 = (uint64_t (*)(void))v2[1];
    return v5();
  }
}

uint64_t sub_21475A974()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21475A9D8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x270FA2498](sub_21475A9F8, 0, 0);
}

uint64_t sub_21475A9F8()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_21475AAF4;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_21475A610;
  v0[13] = &block_descriptor;
  v0[14] = v2;
  objc_msgSend(v1, sel_getDeviceCapabilityWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_21475AAF4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_21475AC24;
  }
  else {
    uint64_t v2 = sub_21475AC04;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21475AC04()
{
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21475AC24()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21475AC90(uint64_t result, void *a2, void *a3)
{
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    void *v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(void **)(*(void *)(*(void *)(result + 32) + 64) + 40) = a2;
    id v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SESnapshot.debugDescription.getter()
{
  sub_2147ACC28();
  swift_allocObject();
  sub_2147ACC18();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D520);
  sub_214763B58();
  uint64_t v0 = sub_2147ACC08();
  unint64_t v9 = v1;
  uint64_t v10 = v0;
  swift_bridgeObjectRelease();
  swift_allocObject();
  sub_2147ACC18();
  type metadata accessor for SEState();
  sub_214763BD4(&qword_26781D530, (void (*)(uint64_t))type metadata accessor for SEState);
  uint64_t v2 = sub_2147ACC08();
  unint64_t v4 = v3;
  sub_2147ACCB8();
  sub_21472BBFC(v2, v4);
  swift_release();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  swift_allocObject();
  sub_2147ACC18();
  type metadata accessor for ReservationState();
  sub_214763BD4((unint64_t *)&unk_26781D540, (void (*)(uint64_t))type metadata accessor for ReservationState);
  uint64_t v5 = sub_2147ACC08();
  unint64_t v7 = v6;
  sub_2147ACCB8();
  sub_21472BBFC(v5, v7);
  swift_release();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  sub_2147ACCB8();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_21472BBFC(v10, v9);
  swift_release();
  return 0;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SESnapshot.canFit(credentials:)(Swift::OpaquePointer credentials)
{
  SESnapshot.canFitWithReason(credentials:)((uint64_t)credentials._rawValue, v4);
  if (!v1) {
    char v2 = v4[1];
  }
  return v2 & 1;
}

uint64_t SESnapshot.canFitWithReason(credentials:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = v3;
  unint64_t v6 = v2;
  uint64_t v127 = *(void *)&v2[OBJC_IVAR____TtC9SEService10SESnapshot_seState];
  uint64_t v124 = OBJC_IVAR____TtC9SEService7SEState_freeMemory;
  uint64_t v8 = *(void *)(v127 + OBJC_IVAR____TtC9SEService7SEState_freeMemory);
  unint64_t v9 = (uint8_t **)(v8 + OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap);
  swift_beginAccess();
  uint64_t v122 = *v9;
  uint64_t v10 = (uint64_t *)(v8 + OBJC_IVAR____TtC9SEService11MemoryUsage_cor);
  swift_beginAccess();
  uint64_t v125 = *v10;
  unint64_t v11 = (uint64_t *)(v8 + OBJC_IVAR____TtC9SEService11MemoryUsage_cod);
  swift_beginAccess();
  uint64_t v123 = *v11;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v126 = a1;
  int64_t v129 = v12;
  if (v12)
  {
    uint64_t v130 = v6;
    uint64_t v140 = (void *)MEMORY[0x263F8EE78];
    sub_21474D39C(0, v12, 0);
    unint64_t v13 = v140;
    uint64_t v14 = (unint64_t *)(a1 + 40);
    uint64_t v4 = 1;
    do
    {
      uint64_t v15 = *(v14 - 1);
      unint64_t v16 = *v14;
      sub_21471ED54(v15, *v14);
      uint64_t v140 = v13;
      unint64_t v18 = v13[2];
      unint64_t v17 = v13[3];
      if (v18 >= v17 >> 1)
      {
        sub_21474D39C(v17 > 1, v18 + 1, 1);
        unint64_t v13 = v140;
      }
      v14 += 2;
      v13[2] = v18 + 1;
      unint64_t v19 = &v13[3 * v18];
      v19[4] = v15;
      v19[5] = v16;
      void v19[6] = 1;
      --v12;
    }
    while (v12);
    unint64_t v6 = v130;
    uint64_t v5 = v3;
    goto LABEL_8;
  }
  unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  if (*(void *)(MEMORY[0x263F8EE78] + 16))
  {
LABEL_8:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D380);
    uint64_t v20 = sub_2147AD4E8();
    goto LABEL_9;
  }
  uint64_t v20 = MEMORY[0x263F8EE80];
LABEL_9:
  uint64_t v140 = (void *)v20;
  sub_214764280(v13, 1, &v140);
  if (v5)
  {
LABEL_122:
    swift_bridgeObjectRelease();
    swift_release();
    __break(1u);
LABEL_123:
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t)v140;
  unint64_t v22 = (uint64_t *)(*(void *)&v6[OBJC_IVAR____TtC9SEService10SESnapshot_reservationState]
                  + OBJC_IVAR____TtC9SEService16ReservationState_counts);
  swift_beginAccess();
  uint64_t v23 = *v22;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_214730D6C(v24, v23);
  unint64_t v26 = sub_214730D6C(v21, v25);
  uint64_t v27 = (uint64_t)&v6[OBJC_IVAR____TtC9SEService10SESnapshot_memoryCalculator];
  swift_beginAccess();
  uint64_t v132 = v27;
  sub_214765188(v27, (uint64_t)&v138, &qword_26781D560);
  if (v139) {
    goto LABEL_94;
  }
  uint64_t v28 = MEMORY[0x263F8EE78];
  unint64_t v29 = sub_214758F38(MEMORY[0x263F8EE78]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = sub_21472F848(v29, KeyPath, 0, 1);
  swift_bridgeObjectRelease();
  swift_release();
  sub_214763C34((uint64_t)&v138);
  unint64_t v13 = (void *)v132;
  sub_214765188(v132, (uint64_t)&v138, &qword_26781D560);
  if (v139)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  id v31 = swift_getKeyPath();
  uint64_t v117 = sub_21472F848(v26, v31, 0, 1);
  uint64_t v130 = v6;
  swift_release();
  sub_214763C34((uint64_t)&v138);
  uint64_t v32 = qword_26C55EE18;
  if (qword_26C55EE18)
  {
    unint64_t v118 = v26;
    uint64_t v119 = v4;
    uint64_t v138 = v28;
    sub_21474D4CC(0, qword_26C55EE18, 0);
    uint64_t v33 = (unint64_t *)&unk_26C55EE30;
    uint64_t v34 = v138;
    do
    {
      uint64_t v35 = *(v33 - 1);
      unint64_t v36 = *v33;
      sub_21471ED54(v35, *v33);
      uint64_t v138 = v34;
      unint64_t v38 = *(void *)(v34 + 16);
      unint64_t v37 = *(void *)(v34 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_21474D4CC(v37 > 1, v38 + 1, 1);
        uint64_t v34 = v138;
      }
      v33 += 2;
      *(void *)(v34 + 16) = v38 + 1;
      uint64_t v39 = (void *)(v34 + 24 * v38);
      v39[4] = v35;
      v39[5] = v36;
      v39[6] = 0;
      --v32;
    }
    while (v32);
    unint64_t v26 = v118;
    unint64_t v13 = (void *)v132;
    goto LABEL_21;
  }
  if (*(void *)(v28 + 16))
  {
LABEL_21:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D568);
    uint64_t v40 = sub_2147AD4E8();
    goto LABEL_22;
  }
  uint64_t v40 = MEMORY[0x263F8EE80];
LABEL_22:
  uint64_t v138 = v40;
  uint64_t v41 = (void *)swift_bridgeObjectRetain();
  sub_214760834(v41, 1, &v138);
  swift_bridgeObjectRelease();
  uint64_t v42 = v138;
  swift_retain();
  uint64_t v43 = swift_bridgeObjectRetain();
  unint64_t v6 = (uint8_t *)sub_214764070(v43, v42, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_214763C88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v44 = swift_bridgeObjectRetain();
  unint64_t v120 = sub_214764070(v44, v42, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_214763E70);
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_214765188((uint64_t)v13, (uint64_t)&v138, &qword_26781D560);
  if (v139)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  unint64_t v45 = sub_214758F38(MEMORY[0x263F8EE78]);
  BOOL v46 = swift_getKeyPath();
  uint64_t v47 = sub_21472F848(v45, v46, 3uLL, 0);
  swift_bridgeObjectRelease();
  swift_release();
  sub_214763C34((uint64_t)&v138);
  sub_214765188((uint64_t)v13, (uint64_t)&v138, &qword_26781D560);
  if (v139)
  {
    __break(1u);
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  unint64_t v48 = sub_214758F38(MEMORY[0x263F8EE78]);
  unint64_t v49 = swift_getKeyPath();
  uint64_t v119 = sub_21472F848(v48, v49, 1uLL, 0);
  swift_bridgeObjectRelease();
  swift_release();
  sub_214763C34((uint64_t)&v138);
  sub_214765188((uint64_t)v13, (uint64_t)&v138, &qword_26781D560);
  if (v139)
  {
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
    goto LABEL_119;
  }
  unint64_t v50 = sub_214758F38(MEMORY[0x263F8EE78]);
  uint64_t v51 = swift_getKeyPath();
  uint64_t v52 = sub_21472F848(v50, v51, 1uLL, 0);
  swift_bridgeObjectRelease();
  swift_release();
  sub_214763C34((uint64_t)&v138);
  uint64_t v53 = v47 + v119;
  if (__OFADD__(v47, v119))
  {
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  unint64_t v118 = v52;
  sub_214765188((uint64_t)v13, (uint64_t)&v138, &qword_26781D560);
  if (v139)
  {
LABEL_119:
    __break(1u);
    goto LABEL_120;
  }
  uint64_t v54 = swift_getKeyPath();
  uint64_t v55 = sub_21472F848((unint64_t)v6, v54, 3uLL, 0);
  uint64_t v116 = v53;
  swift_release();
  swift_release();
  sub_214763C34((uint64_t)&v138);
  sub_214765188((uint64_t)v13, (uint64_t)&v138, &qword_26781D560);
  if (v139)
  {
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  uint64_t v56 = swift_getKeyPath();
  uint64_t v57 = sub_21472F848(v120, v56, 1uLL, 0);
  swift_release();
  swift_release();
  sub_214763C34((uint64_t)&v138);
  sub_214765188((uint64_t)v13, (uint64_t)&v138, &qword_26781D560);
  if (v139)
  {
LABEL_121:
    __break(1u);
    goto LABEL_122;
  }
  uint64_t v58 = swift_getKeyPath();
  unint64_t v13 = (void *)sub_21472F848(v26, v58, 1uLL, 0);
  swift_release();
  sub_214763C34((uint64_t)&v138);
  BOOL v59 = __OFADD__(v55, v57);
  unint64_t v6 = (uint8_t *)(v55 + v57);
  if (v59)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  if (*(unsigned __int8 *)(v127 + OBJC_IVAR____TtC9SEService7SEState_seType) >= 3u) {
    uint64_t v60 = 11500;
  }
  else {
    uint64_t v60 = 24526;
  }
  sub_214765188(v132, (uint64_t)&v138, &qword_26781D560);
  if (v139) {
    goto LABEL_123;
  }
  uint64_t v61 = swift_getKeyPath();
  uint64_t v62 = sub_214731E84(v26, v61);
  swift_release();
  swift_bridgeObjectRelease();
  sub_214763C34((uint64_t)&v138);
  char v141 = 0;
  if ((unint64_t)(v62 / 32 - 0x40000000000000) >> 55 != 511)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  unint64_t v26 = (v62 / 32) << 9;
  uint64_t v115 = v60;
  if ((uint64_t)(v62 & 0x800000000000001FLL) >= 1)
  {
    BOOL v59 = __OFADD__(v26, 512);
    v26 += 512;
    if (v59) {
      goto LABEL_109;
    }
  }
  uint64_t v63 = v53;
  unint64_t v64 = &v122[v4];
  if (__OFADD__(v122, v4))
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  BOOL v59 = __OFSUB__(v64, v117);
  id v65 = &v64[-v117];
  if (v59)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  uint64_t v119 = v4;
  BOOL v59 = __OFADD__(v65, -25600);
  unint64_t v66 = v65 - 25600;
  if (v59)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t v4 = (uint64_t)&v66[-v26];
  if (__OFSUB__(v66, v26))
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  uint64_t v132 = v62;
  if ((v4 & 0x8000000000000000) == 0) {
    goto LABEL_50;
  }
  if (qword_26781BFA8 != -1) {
    goto LABEL_112;
  }
  while (1)
  {
    uint64_t v67 = sub_2147ACE18();
    __swift_project_value_buffer(v67, (uint64_t)qword_26782C6E0);
    uint64_t v68 = sub_2147ACDF8();
    os_log_type_t v69 = sub_2147AD178();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = 134217984;
      if (__OFSUB__(0, v4)) {
        goto LABEL_118;
      }
      uint64_t v71 = v70;
      uint64_t v138 = -v4;
      sub_2147AD248();
      _os_log_impl(&dword_2146ED000, v68, v69, "Missing %ld bytes pHeap", v71, 0xCu);
      MEMORY[0x2166A8870](v71, -1, -1);
    }

    uint64_t v62 = v132;
    uint64_t v63 = v116;
    if ((v141 & 1) == 0) {
      v141 |= 1u;
    }
LABEL_50:
    if (__OFSUB__(v6, v63))
    {
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      swift_once();
      goto LABEL_80;
    }
    uint64_t v122 = &v6[-v63];
    if (v125 < (uint64_t)&v6[-v63])
    {
      if (qword_26781BFA8 != -1) {
LABEL_110:
      }
        swift_once();
      uint64_t v72 = sub_2147ACE18();
      __swift_project_value_buffer(v72, (uint64_t)qword_26782C6E0);
      uint64_t v73 = sub_2147ACDF8();
      os_log_type_t v74 = sub_2147AD178();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v75 = 134217984;
        if (__OFSUB__(v122, v125)) {
          goto LABEL_114;
        }
        uint64_t v76 = v75;
        uint64_t v138 = (uint64_t)&v122[-v125];
        sub_2147AD248();
        _os_log_impl(&dword_2146ED000, v73, v74, "Missing %ld bytes COR", v76, 0xCu);
        MEMORY[0x2166A8870](v76, -1, -1);
      }

      uint64_t v62 = v132;
      if ((v141 & 2) == 0) {
        v141 |= 2u;
      }
    }
    if (__OFSUB__(v13, v118)) {
      goto LABEL_104;
    }
    if ((unint64_t)((uint64_t)((uint64_t)v13 - v118) / 16 - 0x7FFFFFFFFFFFFFFLL) >> 60 != 15) {
      goto LABEL_105;
    }
    uint64_t v4 = (((unint64_t)v13 + ((uint64_t)((uint64_t)v13 - v118) < 0 ? 0xFuLL : 0) - v118) & 0xFFFFFFFFFFFFFFF0)
       + 16;
    if (v123 < v4)
    {
      if (qword_26781BFA8 != -1) {
        swift_once();
      }
      uint64_t v77 = sub_2147ACE18();
      __swift_project_value_buffer(v77, (uint64_t)qword_26782C6E0);
      uint64_t v78 = sub_2147ACDF8();
      os_log_type_t v79 = sub_2147AD178();
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v80 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v80 = 134217984;
        if (__OFSUB__(v4, v123)) {
          goto LABEL_115;
        }
        uint64_t v81 = v80;
        uint64_t v138 = v4 - v123;
        sub_2147AD248();
        _os_log_impl(&dword_2146ED000, v78, v79, "Missing %ld bytes COD", v81, 0xCu);
        MEMORY[0x2166A8870](v81, -1, -1);
      }

      uint64_t v62 = v132;
      if ((v141 & 4) == 0) {
        v141 |= 4u;
      }
    }
    uint64_t v82 = (void *)(*(void *)(v127 + v124) + OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices);
    swift_beginAccess();
    if (__OFADD__(v62, *v82)) {
      goto LABEL_106;
    }
    if (v115 < v62 + *v82)
    {
      if (qword_26781BFA8 != -1) {
        swift_once();
      }
      uint64_t v83 = sub_2147ACE18();
      __swift_project_value_buffer(v83, (uint64_t)qword_26782C6E0);
      uint64_t v84 = v130;
      objc_super v85 = sub_2147ACDF8();
      os_log_type_t v86 = sub_2147AD178();
      if (os_log_type_enabled(v85, v86))
      {
        unint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v6 = 134217984;
        uint64_t v87 = (void *)(*(void *)(v127 + v124) + OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices);
        swift_beginAccess();
        uint64_t v88 = v132 + *v87;
        if (__OFADD__(v132, *v87)) {
          goto LABEL_116;
        }
        BOOL v59 = __OFSUB__(v88, v115);
        uint64_t v89 = v88 - v115;
        if (v59) {
          goto LABEL_117;
        }
        uint64_t v136 = v89;
        sub_2147AD248();

        _os_log_impl(&dword_2146ED000, v85, v86, "Missing %ld indices", v6, 0xCu);
        MEMORY[0x2166A8870](v6, -1, -1);
      }
      else
      {

        objc_super v85 = v84;
      }

      if ((v141 & 8) == 0) {
        v141 |= 8u;
      }
    }
    if (qword_26781BFA8 != -1) {
      goto LABEL_107;
    }
LABEL_80:
    uint64_t v90 = sub_2147ACE18();
    __swift_project_value_buffer(v90, (uint64_t)qword_26782C6E0);
    char v91 = sub_2147ACDF8();
    os_log_type_t v92 = sub_2147AD178();
    if (!os_log_type_enabled(v91, v92)) {
      goto LABEL_83;
    }
    uint64_t v93 = (_DWORD *)swift_slowAlloc();
    *uint64_t v93 = 134219008;
    if (!__OFSUB__(v117, v119)) {
      break;
    }
    __break(1u);
LABEL_112:
    swift_once();
  }
  uint64_t v94 = v93;
  sub_2147AD248();
  *((_WORD *)v94 + 6) = 2048;
  sub_2147AD248();
  *((_WORD *)v94 + 11) = 2048;
  sub_2147AD248();
  *((_WORD *)v94 + 16) = 2048;
  sub_2147AD248();
  *((_WORD *)v94 + 21) = 2048;
  uint64_t v136 = v26;
  sub_2147AD248();
  _os_log_impl(&dword_2146ED000, v91, v92, "Requires pHeap:%ld COD:%ld COR:%ld Indices:%ld IndicesPHeap:%ld", (uint8_t *)v94, 0x34u);
  MEMORY[0x2166A8870](v94, -1, -1);
LABEL_83:

  char v95 = v141;
  swift_bridgeObjectRetain_n();
  uint64_t v96 = sub_2147ACDF8();
  os_log_type_t v97 = sub_2147AD178();
  if (os_log_type_enabled(v96, v97))
  {
    char v128 = v95;
    os_log_type_t v133 = v97;
    uint64_t v98 = swift_slowAlloc();
    uint64_t v131 = swift_slowAlloc();
    uint64_t v135 = v131;
    *(_DWORD *)uint64_t v98 = 136315650;
    uint64_t v136 = sub_2147601CC(0xD00000000000001ELL, 0x80000002147C0200, &v135);
    sub_2147AD248();
    *(_WORD *)(v98 + 12) = 2080;
    uint64_t v99 = MEMORY[0x263F8EE78];
    if (v129)
    {
      uint64_t v134 = MEMORY[0x263F8EE78];
      sub_21474D3BC(0, v129, 0);
      uint64_t v99 = v134;
      uint64_t v100 = (unint64_t *)(v126 + 40);
      do
      {
        unint64_t v101 = *v100;
        uint64_t v136 = *(v100 - 1);
        unint64_t v137 = v101;
        sub_21471ED54(v136, v101);
        uint64_t v102 = sub_2147ACF78();
        uint64_t v104 = v103;
        unint64_t v106 = *(void *)(v134 + 16);
        unint64_t v105 = *(void *)(v134 + 24);
        if (v106 >= v105 >> 1) {
          sub_21474D3BC(v105 > 1, v106 + 1, 1);
        }
        v100 += 2;
        *(void *)(v134 + 16) = v106 + 1;
        uint64_t v107 = v134 + 16 * v106;
        *(void *)(v107 + 32) = v102;
        *(void *)(v107 + 40) = v104;
        --v129;
      }
      while (v129);
    }
    uint64_t v108 = MEMORY[0x2166A7380](v99, MEMORY[0x263F8D310]);
    unint64_t v110 = v109;
    swift_bridgeObjectRelease();
    uint64_t v136 = sub_2147601CC(v108, v110, &v135);
    sub_2147AD248();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v98 + 22) = 2080;
    LOBYTE(v136) = v128;
    uint64_t CanFit = SESnapshot.CanFitResult.FailureReason.debugDescription.getter();
    uint64_t v136 = sub_2147601CC(CanFit, v112, &v135);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2146ED000, v96, v133, "%s %s => %s", (uint8_t *)v98, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v131, -1, -1);
    MEMORY[0x2166A8870](v98, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t result = swift_beginAccess();
  BOOL v114 = v141 == 0;
  *a2 = v141;
  a2[1] = v114;
  return result;
}

uint64_t sub_21475C660@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC9SEService11MemoryUsage_cor);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_21475C6B8(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC9SEService11MemoryUsage_cor);
}

uint64_t sub_21475C6C4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC9SEService11MemoryUsage_cod);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_21475C71C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC9SEService11MemoryUsage_cod);
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SESnapshot.addToSnapshot(credentials:)(Swift::OpaquePointer credentials)
{
  uint64_t v3 = v1;
  SESnapshot.canFitWithReason(credentials:)((uint64_t)credentials._rawValue, v32);
  if (v2) {
    return v5 & 1;
  }
  if ((v32[0] & 0x100) == 0)
  {
    char v5 = 0;
    return v5 & 1;
  }
  int64_t v6 = *((void *)credentials._rawValue + 2);
  rawValue = credentials._rawValue;
  if (v6)
  {
    v32[0] = MEMORY[0x263F8EE78];
    sub_21474D39C(0, v6, 0);
    unint64_t v7 = (void *)v32[0];
    uint64_t v8 = (unint64_t *)((char *)credentials._rawValue + 40);
    do
    {
      uint64_t v9 = *(v8 - 1);
      unint64_t v10 = *v8;
      sub_21471ED54(v9, *v8);
      v32[0] = (uint64_t)v7;
      unint64_t v12 = v7[2];
      unint64_t v11 = v7[3];
      if (v12 >= v11 >> 1)
      {
        sub_21474D39C(v11 > 1, v12 + 1, 1);
        unint64_t v7 = (void *)v32[0];
      }
      v8 += 2;
      v7[2] = v12 + 1;
      unint64_t v13 = &v7[3 * v12];
      id v13[4] = v9;
      void v13[5] = v10;
      void v13[6] = 1;
      --v6;
    }
    while (v6);
    uint64_t v3 = v1;
  }
  else
  {
    unint64_t v7 = (void *)MEMORY[0x263F8EE78];
    if (!*(void *)(MEMORY[0x263F8EE78] + 16))
    {
      uint64_t v14 = MEMORY[0x263F8EE80];
      goto LABEL_12;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D380);
  uint64_t v14 = sub_2147AD4E8();
LABEL_12:
  v32[0] = v14;
  sub_214764280(v7, 1, v32);
  swift_bridgeObjectRelease();
  uint64_t v15 = v32[0];
  unint64_t v16 = (uint64_t *)&v3[OBJC_IVAR____TtC9SEService10SESnapshot_globalCredentials];
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = *v16;
  uint64_t *v16 = 0x8000000000000000;
  sub_2147334D8(v15, (uint64_t)sub_2147621F0, 0, isUniquelyReferenced_nonNull_native, &v33);
  uint64_t *v16 = v33;
  swift_bridgeObjectRelease();
  swift_endAccess();
  unint64_t v18 = (uint64_t *)&v3[OBJC_IVAR____TtC9SEService10SESnapshot_stagedCredentials];
  swift_beginAccess();
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = *v18;
  *unint64_t v18 = 0x8000000000000000;
  sub_2147334D8(v15, (uint64_t)sub_2147621F0, 0, v19, &v33);
  *unint64_t v18 = v33;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (qword_26781BFA8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_2147ACE18();
  __swift_project_value_buffer(v20, (uint64_t)qword_26782C6E0);
  swift_bridgeObjectRetain_n();
  uint64_t v21 = v3;
  unint64_t v22 = sub_2147ACDF8();
  os_log_type_t v23 = sub_2147AD178();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v32[0] = v30;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v25 = MEMORY[0x2166A7380](rawValue, &type metadata for CredentialType);
    uint64_t v33 = sub_2147601CC(v25, v26, v32);
    sub_2147AD248();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v27 = sub_2147ACD18();
    uint64_t v33 = sub_2147601CC(v27, v28, v32);
    sub_2147AD248();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2146ED000, v22, v23, "Added %s to snapshot, UUID: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v30, -1, -1);
    MEMORY[0x2166A8870](v24, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  char v5 = 1;
  return v5 & 1;
}

void SESnapshot.removeFromSnapshot(credential:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  char v5 = (uint64_t *)&v1[OBJC_IVAR____TtC9SEService10SESnapshot_globalCredentials];
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (!*(void *)(*v5 + 16))
  {
    swift_endAccess();
    goto LABEL_10;
  }
  sub_21471ED54(v4, v3);
  unint64_t v7 = sub_21477EA08(v4, v3);
  if ((v8 & 1) == 0)
  {
    swift_endAccess();
    sub_2147201A0(v4, v3);
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
  swift_endAccess();
  sub_2147201A0(v4, v3);
  if (v9 <= 0)
  {
LABEL_10:
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v21 = 0;
    *(void *)(v21 + 8) = 0;
    *(unsigned char *)(v21 + 16) = 4;
    swift_willThrow();
    return;
  }
  uint64_t v53 = v2;
  unint64_t v10 = (uint64_t *)&v2[OBJC_IVAR____TtC9SEService10SESnapshot_stagedCredentials];
  swift_beginAccess();
  sub_21471ED54(v4, v3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v55 = (void *)*v10;
  uint64_t v12 = (uint64_t)v55;
  *unint64_t v10 = 0x8000000000000000;
  unint64_t v14 = sub_21477EA08(v4, v3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  char v18 = v13;
  if (*(void *)(v12 + 24) >= v17)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_21479064C();
      uint64_t v12 = (uint64_t)v55;
    }
  }
  else
  {
    sub_214791D00(v17, isUniquelyReferenced_nonNull_native);
    uint64_t v12 = (uint64_t)v55;
    unint64_t v19 = sub_21477EA08(v4, v3);
    if ((v18 & 1) != (v20 & 1)) {
      goto LABEL_40;
    }
    unint64_t v14 = v19;
  }
  *unint64_t v10 = v12;
  swift_bridgeObjectRelease();
  unint64_t v22 = (void *)*v10;
  if (v18)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v22[(v14 >> 6) + 8] |= 1 << v14;
    os_log_type_t v23 = (uint64_t *)(v22[6] + 16 * v14);
    *os_log_type_t v23 = v4;
    v23[1] = v3;
    *(void *)(v22[7] + 8 * v14) = 0;
    uint64_t v24 = v22[2];
    swift_bridgeObjectRetain();
    if (__OFADD__(v24, 1))
    {
      __break(1u);
LABEL_38:
      sub_21479064C();
      uint64_t v30 = (uint64_t)v55;
      goto LABEL_23;
    }
    v22[2] = v24 + 1;
    sub_21471ED54(v4, v3);
  }
  uint64_t v25 = v22[7];
  uint64_t v26 = *(void *)(v25 + 8 * v14);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27) {
    goto LABEL_33;
  }
  *(void *)(v25 + 8 * v14) = v28;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v55 = (void *)*v5;
  uint64_t v30 = (uint64_t)v55;
  *char v5 = 0x8000000000000000;
  unint64_t v14 = sub_21477EA08(v4, v3);
  uint64_t v32 = *(void *)(v30 + 16);
  BOOL v33 = (v31 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  LOBYTE(v10) = v31;
  if (*(void *)(v30 + 24) < v34)
  {
    sub_214791D00(v34, v29);
    uint64_t v30 = (uint64_t)v55;
    unint64_t v35 = sub_21477EA08(v4, v3);
    if ((v10 & 1) == (v36 & 1))
    {
      unint64_t v14 = v35;
      goto LABEL_23;
    }
LABEL_40:
    sub_2147AD6B8();
    __break(1u);
    return;
  }
  if ((v29 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_23:
  *char v5 = v30;
  swift_bridgeObjectRelease();
  unint64_t v37 = (void *)*v5;
  if (v10)
  {
    swift_bridgeObjectRetain();
    goto LABEL_27;
  }
  v37[(v14 >> 6) + 8] |= 1 << v14;
  unint64_t v38 = (uint64_t *)(v37[6] + 16 * v14);
  uint64_t *v38 = v4;
  v38[1] = v3;
  *(void *)(v37[7] + 8 * v14) = 0;
  uint64_t v39 = v37[2];
  swift_bridgeObjectRetain();
  if (__OFADD__(v39, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  v37[2] = v39 + 1;
  sub_21471ED54(v4, v3);
LABEL_27:
  uint64_t v40 = v37[7];
  uint64_t v41 = *(void *)(v40 + 8 * v14);
  BOOL v27 = __OFSUB__(v41, 1);
  uint64_t v42 = v41 - 1;
  if (!v27)
  {
    *(void *)(v40 + 8 * v14) = v42;
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_2147201A0(v4, v3);
    if (qword_26781BFA8 == -1) {
      goto LABEL_29;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  swift_once();
LABEL_29:
  uint64_t v43 = sub_2147ACE18();
  __swift_project_value_buffer(v43, (uint64_t)qword_26782C6E0);
  sub_21471ED54(v4, v3);
  id v44 = v53;
  sub_21471ED54(v4, v3);
  id v45 = v44;
  BOOL v46 = sub_2147ACDF8();
  os_log_type_t v47 = sub_2147AD178();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v55 = (void *)v54;
    *(_DWORD *)uint64_t v48 = 136315394;
    sub_21471ED54(v4, v3);
    uint64_t v49 = sub_2147ACF78();
    sub_2147601CC(v49, v50, (uint64_t *)&v55);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_2147201A0(v4, v3);
    sub_2147201A0(v4, v3);
    *(_WORD *)(v48 + 12) = 2080;
    uint64_t v51 = sub_2147ACD18();
    sub_2147601CC(v51, v52, (uint64_t *)&v55);
    sub_2147AD248();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2146ED000, v46, v47, "Removed %s from snapshot, UUID: %s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v54, -1, -1);
    MEMORY[0x2166A8870](v48, -1, -1);
  }
  else
  {
    sub_2147201A0(v4, v3);
    sub_2147201A0(v4, v3);
  }
}

Swift::Void __swiftcall SESnapshot.resetSnapshot()()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9SEService10SESnapshot_stagedCredentials];
  swift_beginAccess();
  BOOL v46 = v1;
  os_log_type_t v47 = v0;
  uint64_t v2 = *(void *)v1;
  uint64_t v48 = *(void *)v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(*(void *)v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(*(void *)v1 + 64);
  uint64_t v6 = (uint64_t *)&v0[OBJC_IVAR____TtC9SEService10SESnapshot_globalCredentials];
  int64_t v49 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v50 = v2;
  swift_bridgeObjectRetain();
  unint64_t v7 = 0;
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    unint64_t v14 = (uint64_t *)(*(void *)(v50 + 48) + 16 * i);
    uint64_t v16 = *v14;
    unint64_t v15 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(v50 + 56) + 8 * i);
    swift_beginAccess();
    sub_21471ED54(v16, v15);
    sub_21471ED54(v16, v15);
    sub_214750B28(v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *v6;
    uint64_t v19 = v51;
    uint64_t *v6 = 0x8000000000000000;
    unint64_t v7 = sub_21477EA08(v16, v15);
    uint64_t v21 = *(void *)(v19 + 16);
    BOOL v22 = (v20 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    char v24 = v20;
    if (*(void *)(v19 + 24) >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21479064C();
        uint64_t v19 = v51;
      }
    }
    else
    {
      sub_214791D00(v23, isUniquelyReferenced_nonNull_native);
      uint64_t v19 = v51;
      unint64_t v25 = sub_21477EA08(v16, v15);
      if ((v24 & 1) != (v26 & 1))
      {
        sub_2147AD6B8();
        __break(1u);
        return;
      }
      unint64_t v7 = v25;
    }
    uint64_t *v6 = v19;
    swift_bridgeObjectRelease();
    BOOL v27 = (void *)*v6;
    if (v24)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v27[(v7 >> 6) + 8] |= 1 << v7;
      uint64_t v28 = (uint64_t *)(v27[6] + 16 * v7);
      *uint64_t v28 = v16;
      v28[1] = v15;
      *(void *)(v27[7] + 8 * v7) = 0;
      uint64_t v29 = v27[2];
      uint64_t v30 = v29 + 1;
      BOOL v31 = __OFADD__(v29, 1);
      swift_bridgeObjectRetain();
      if (v31) {
        goto LABEL_42;
      }
      v27[2] = v30;
      sub_21471ED54(v16, v15);
    }
    uint64_t v32 = v27[7];
    uint64_t v33 = *(void *)(v32 + 8 * v7);
    BOOL v34 = __OFSUB__(v33, v17);
    uint64_t v35 = v33 - v17;
    if (v34) {
      goto LABEL_41;
    }
    *(void *)(v32 + 8 * v7) = v35;
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_2147201A0(v16, v15);
    sub_2147201A0(v16, v15);
    unint64_t v7 = (unint64_t)sub_21474B384;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_43;
    }
    if (v11 >= v49) {
      goto LABEL_35;
    }
    unint64_t v12 = *(void *)(v48 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v49) {
        goto LABEL_35;
      }
      unint64_t v12 = *(void *)(v48 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v49) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v48 + 8 * v8);
        if (!v12) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 3;
  if (v13 < v49)
  {
    unint64_t v12 = *(void *)(v48 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_44;
        }
        if (v8 >= v49) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v48 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_18;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_18;
  }
LABEL_35:
  swift_release();
  swift_beginAccess();
  uint64_t v36 = swift_bridgeObjectRetain();
  unint64_t v37 = sub_214760CDC(v36);
  swift_bridgeObjectRelease();
  uint64_t *v6 = (uint64_t)v37;
  swift_bridgeObjectRelease();
  *(void *)BOOL v46 = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  if (qword_26781BFA8 == -1) {
    goto LABEL_36;
  }
LABEL_45:
  swift_once();
LABEL_36:
  uint64_t v38 = sub_2147ACE18();
  __swift_project_value_buffer(v38, (uint64_t)qword_26782C6E0);
  id v39 = v47;
  uint64_t v40 = sub_2147ACDF8();
  os_log_type_t v41 = sub_2147AD178();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136315138;
    uint64_t v51 = v43;
    uint64_t v44 = sub_2147ACD18();
    sub_2147601CC(v44, v45, &v51);
    sub_2147AD248();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2146ED000, v40, v41, "Removed all staged credentials from snapshot, UUID: %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v43, -1, -1);
    MEMORY[0x2166A8870](v42, -1, -1);
  }
  else
  {
  }
  sub_214750B28(v7);
}

Swift::tuple_used_Int_total_Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SESnapshot.totalUsage()()
{
  uint64_t v2 = (uint64_t *)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC9SEService10SESnapshot_seState)
                             + OBJC_IVAR____TtC9SEService7SEState_freeMemory)
                 + OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = (uint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC9SEService10SESnapshot_reservationState)
                 + OBJC_IVAR____TtC9SEService16ReservationState_counts);
  swift_beginAccess();
  uint64_t v5 = *v4;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_214730D6C(v6, v5);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9SEService10SESnapshot_memoryCalculator;
  swift_beginAccess();
  Swift::Int v9 = sub_214765188(v8, (uint64_t)&v28, &qword_26781D560);
  if (v29) {
    goto LABEL_26;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = sub_21472F848(v7, KeyPath, 0, 1);
  if (!v1)
  {
    uint64_t v13 = v12;
    swift_release();
    sub_214763C34((uint64_t)&v28);
    Swift::Int v9 = sub_214765188(v8, (uint64_t)&v28, &qword_26781D560);
    if (v29)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    unint64_t v14 = swift_getKeyPath();
    uint64_t v15 = sub_21472F848(v7, v14, 0, 1);
    swift_release();
    swift_bridgeObjectRelease();
    sub_214763C34((uint64_t)&v28);
    Swift::Int v9 = sub_214765188(v8, (uint64_t)&v28, &qword_26781D560);
    if (v29)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    unint64_t v16 = sub_214758F38(MEMORY[0x263F8EE78]);
    uint64_t v17 = swift_getKeyPath();
    uint64_t v18 = sub_21472F848(v16, v17, 0, 1);
    swift_bridgeObjectRelease();
    swift_release();
    sub_214763C34((uint64_t)&v28);
    Swift::Int v9 = sub_214765188(v8, (uint64_t)&v28, &qword_26781D560);
    if (v29)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    unint64_t v19 = sub_214758F38(MEMORY[0x263F8EE78]);
    char v20 = swift_getKeyPath();
    uint64_t v21 = sub_21472F848(v19, v20, 0, 1);
    swift_bridgeObjectRelease();
    swift_release();
    Swift::Int v9 = sub_214763C34((uint64_t)&v28);
    uint64_t v22 = v13 + 25600;
    if (!__OFADD__(v13, 25600))
    {
      if ((unint64_t)(v15 / 32 - 0x40000000000000) >> 55 != 511)
      {
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      uint64_t v23 = (v15 / 32) << 9;
      if ((uint64_t)(v15 & 0x800000000000001FLL) >= 1)
      {
        BOOL v24 = __OFADD__(v23, 512);
        v23 += 512;
        if (v24) {
          goto LABEL_24;
        }
      }
      Swift::Int v9 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        goto LABEL_21;
      }
      uint64_t v25 = v18 + v3;
      if (__OFADD__(v18, v3))
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      if ((unint64_t)(v21 / 32 - 0x40000000000000) >> 55 != 511)
      {
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v26 = (v21 / 32) << 9;
      if ((uint64_t)(v21 & 0x800000000000001FLL) >= 1)
      {
        BOOL v24 = __OFADD__(v26, 512);
        v26 += 512;
        if (v24) {
          goto LABEL_25;
        }
      }
      Swift::Int v10 = v25 + v26;
      if (!__OFADD__(v25, v26)) {
        goto LABEL_30;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  swift_release();
  swift_bridgeObjectRelease();
  Swift::Int v9 = sub_214763C34((uint64_t)&v28);
LABEL_30:
  result.total = v10;
  result.used = v9;
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SESnapshot.usage(ofCredentials:)(Swift::OpaquePointer ofCredentials)
{
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_214764538(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v6 != *((void *)ofCredentials._rawValue + 2))
  {
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v14 = 0xD00000000000001FLL;
    *(void *)(v14 + 8) = 0x80000002147C0220;
    *(unsigned char *)(v14 + 16) = 1;
    swift_willThrow();
    return (Swift::Int)ofCredentials._rawValue;
  }
  id v7 = v1;
  uint64_t v8 = sub_2147626C4((uint64_t)ofCredentials._rawValue);

  if (v2) {
    return (Swift::Int)ofCredentials._rawValue;
  }
  uint64_t v10 = *(void *)(v8 + 16);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v11 = 0;
  ofCredentials._rawValue = 0;
  while (1)
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11 + 32);
    BOOL v13 = __OFADD__(ofCredentials._rawValue, v12);
    ofCredentials._rawValue = (char *)ofCredentials._rawValue + v12;
    if (v13) {
      break;
    }
    if (v10 == ++v11)
    {
      swift_bridgeObjectRelease();
      return (Swift::Int)ofCredentials._rawValue;
    }
  }
  __break(1u);
  return result;
}

uint64_t SESnapshot.usage(ofCredential:)(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC9SEService10SESnapshot_globalCredentials);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*(void *)(*v6 + 16))
  {
    sub_21471ED54(v4, v5);
    unint64_t v8 = sub_21477EA08(v4, v5);
    if (v9) {
      uint64_t v10 = *(void **)(*(void *)(v7 + 56) + 8 * v8);
    }
    else {
      uint64_t v10 = 0;
    }
    sub_2147201A0(v4, v5);
  }
  else
  {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v3 + OBJC_IVAR____TtC9SEService10SESnapshot_memoryCalculator;
  swift_beginAccess();
  uint64_t result = sub_214765188(v11, (uint64_t)&v20, &qword_26781D560);
  if (BYTE8(v20))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(void *)&long long v21 = v4;
  *((void *)&v21 + 1) = v5;
  uint64_t KeyPath = swift_getKeyPath();
  sub_214730DF8((uint64_t)&v21, v10, KeyPath);
  uint64_t v15 = v14;
  swift_release();
  sub_214763C34((uint64_t)&v20);
  if (v2) {
    return v15;
  }
  *(void *)&long long v21 = v4;
  *((void *)&v21 + 1) = v5;
  long long v20 = xmmword_2147B3E70;
  if ((_s9SEService14CredentialTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)&v21, (uint64_t *)&v20) & 1) == 0) {
    return v15;
  }
  uint64_t result = sub_214765188(v11, (uint64_t)&v20, &qword_26781D560);
  if ((BYTE8(v20) & 1) == 0)
  {
    long long v21 = xmmword_2147B3E80;
    unint64_t v16 = swift_getKeyPath();
    sub_214730DF8((uint64_t)&v21, v10, v16);
    uint64_t v18 = v17;
    swift_release();
    uint64_t result = sub_214763C34((uint64_t)&v20);
    BOOL v19 = __OFADD__(v15, v18);
    v15 += v18;
    if (!v19) {
      return v15;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t SESnapshot.usage(ofInstance:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = v1 + OBJC_IVAR____TtC9SEService10SESnapshot_memoryCalculator;
  swift_beginAccess();
  uint64_t result = sub_214765188(v4, (uint64_t)v9, &qword_26781D560);
  if (v9[8])
  {
    __break(1u);
  }
  else
  {
    v8[0] = v2;
    v8[1] = v3;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v7 = sub_214732E48((uint64_t)v8, KeyPath, 0);
    swift_release();
    sub_214763C34((uint64_t)v9);
    return (uint64_t)v7;
  }
  return result;
}

void SESnapshot.requiredUsage(for:count:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(unsigned char *)(v8 + 24) = 1;
  uint64_t v9 = SEState.friendlyDetails.getter();
  uint64_t v10 = *(void *)(v9 + 16);
  sub_21471ED54(v6, v7);
  if (v10 && (unint64_t v11 = sub_21477EA08(v6, v7), (v12 & 1) != 0)) {
    BOOL v13 = (char *)*(id *)(*(void *)(v9 + 56) + 8 * v11);
  }
  else {
    BOOL v13 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SEPackageDetails()), sel_init);
  }
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  sub_2147201A0(v6, v7);
  id v41 = v14;
  uint64_t v15 = &v14[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances];
  swift_beginAccess();
  unint64_t v16 = *(void *)v15;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = (char *)sub_2147AD4B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(char **)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC9SEService10SESnapshot_reservationState)
      + OBJC_IVAR____TtC9SEService16ReservationState_counts;
  swift_beginAccess();
  uint64_t v19 = *(void *)v18;
  if (!*(void *)(*(void *)v18 + 16)) {
    goto LABEL_13;
  }
  sub_21471ED54(v6, v7);
  unint64_t v20 = sub_21477EA08(v6, v7);
  if ((v21 & 1) == 0)
  {
LABEL_12:
    sub_2147201A0(v6, v7);
LABEL_13:
    swift_endAccess();
    goto LABEL_14;
  }
  uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
  swift_endAccess();
  sub_2147201A0(v6, v7);
  BOOL v23 = __OFADD__(v17, v22);
  v17 += v22;
  if (v23)
  {
    __break(1u);
    goto LABEL_12;
  }
LABEL_14:
  BOOL v24 = (uint64_t *)(v4 + OBJC_IVAR____TtC9SEService10SESnapshot_stagedCredentials);
  swift_beginAccess();
  uint64_t v25 = *v24;
  if (!*(void *)(*v24 + 16))
  {
LABEL_20:
    swift_endAccess();
    goto LABEL_21;
  }
  sub_21471ED54(v6, v7);
  unint64_t v26 = sub_21477EA08(v6, v7);
  if ((v27 & 1) == 0)
  {
LABEL_19:
    sub_2147201A0(v6, v7);
    goto LABEL_20;
  }
  uint64_t v28 = *(void *)(*(void *)(v25 + 56) + 8 * v26);
  swift_endAccess();
  sub_2147201A0(v6, v7);
  BOOL v23 = __OFADD__(v17, v28);
  v17 += v28;
  if (v23)
  {
    __break(1u);
    goto LABEL_19;
  }
LABEL_21:
  uint64_t v29 = v4 + OBJC_IVAR____TtC9SEService10SESnapshot_memoryCalculator;
  swift_beginAccess();
  sub_214765188(v29, (uint64_t)v39, &qword_26781D560);
  if ((v40 & 1) == 0)
  {
    uint64_t v37 = v6;
    unint64_t v38 = v7;
    if (__OFADD__(v17, a2))
    {
      __break(1u);
    }
    else
    {
      uint64_t KeyPath = swift_getKeyPath();
      sub_214730DF8((uint64_t)&v37, &v17[a2], KeyPath);
      if (v3)
      {
        swift_release();

        sub_214763C34((uint64_t)v39);
        sub_2147645E4(v6, v7, a2, v8);
        swift_release();
        return;
      }
      uint64_t v32 = v31;
      swift_release();
      sub_214763C34((uint64_t)v39);
      sub_214765188(v29, (uint64_t)v39, &qword_26781D560);
      if (v40) {
        goto LABEL_33;
      }
      uint64_t v37 = v6;
      unint64_t v38 = v7;
      uint64_t v33 = swift_getKeyPath();
      sub_214730DF8((uint64_t)&v37, v17, v33);
      uint64_t v35 = v34;
      swift_release();
      sub_214763C34((uint64_t)v39);

      BOOL v23 = __OFSUB__(v32, v35);
      uint64_t v36 = v32 - v35;
      if (!v23)
      {
        *(void *)(v8 + 16) = v36;
        *(unsigned char *)(v8 + 24) = 0;
        sub_2147645E4(v6, v7, a2, v8);
        swift_release();
        return;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t SESnapshot.getCredential(forAID:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2147AD008();
  if (result)
  {
    *(_OWORD *)a3 = xmmword_2147B80F0;
    return result;
  }
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2147B20F0;
  uint64_t v10 = v3;
  uint64_t v11 = sub_214762498((uint64_t)&unk_26C55E588, (uint64_t)v10);
  uint64_t v51 = v10;

  swift_arrayDestroy();
  if (*(void *)(v11 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DCA0);
    uint64_t v12 = sub_2147AD4E8();
  }
  else
  {
    uint64_t v12 = MEMORY[0x263F8EE80];
  }
  v58[0] = v12;
  BOOL v13 = (void *)swift_bridgeObjectRetain();
  sub_214725C5C(v13, 1, v58);
  if (v4)
  {
LABEL_66:
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = v58[0];
  swift_bridgeObjectRetain();
  sub_214720344(v14, a1, a2, v58);
  swift_release();
  if (!v58[2])
  {
    uint64_t v17 = *(void *)(*(void *)&v10[OBJC_IVAR____TtC9SEService10SESnapshot_seState]
                    + OBJC_IVAR____TtC9SEService7SEState_infoDictionary);
    uint64_t v18 = *(void *)(v17 + 64);
    uint64_t v48 = v17 + 64;
    uint64_t v19 = 1 << *(unsigned char *)(v17 + 32);
    uint64_t v20 = -1;
    if (v19 < 64) {
      uint64_t v20 = ~(-1 << v19);
    }
    unint64_t v21 = v20 & v18;
    int64_t v49 = (unint64_t)(v19 + 63) >> 6;
    uint64_t v53 = *(void *)(*(void *)&v10[OBJC_IVAR____TtC9SEService10SESnapshot_seState]
                    + OBJC_IVAR____TtC9SEService7SEState_infoDictionary);
    swift_bridgeObjectRetain();
    int64_t v22 = 0;
    uint64_t v52 = v9;
    uint64_t v50 = a3;
    while (1)
    {
      if (v21)
      {
        unint64_t v23 = __clz(__rbit64(v21));
        v21 &= v21 - 1;
        int64_t v54 = v22;
        unint64_t v24 = v23 | (v22 << 6);
      }
      else
      {
        int64_t v25 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_64;
        }
        if (v25 >= v49)
        {
LABEL_62:
          swift_release();
          sub_21472C78C(*(void *)(v9 + 16), *(void *)(v9 + 24));
          *(_OWORD *)(v9 + 16) = xmmword_2147B80E0;
          *(_OWORD *)a3 = xmmword_2147B80E0;
          goto LABEL_9;
        }
        unint64_t v26 = *(void *)(v48 + 8 * v25);
        int64_t v27 = v22 + 1;
        if (!v26)
        {
          int64_t v27 = v22 + 2;
          if (v22 + 2 >= v49) {
            goto LABEL_62;
          }
          unint64_t v26 = *(void *)(v48 + 8 * v27);
          if (!v26)
          {
            int64_t v27 = v22 + 3;
            if (v22 + 3 >= v49) {
              goto LABEL_62;
            }
            unint64_t v26 = *(void *)(v48 + 8 * v27);
            if (!v26)
            {
              int64_t v27 = v22 + 4;
              if (v22 + 4 >= v49) {
                goto LABEL_62;
              }
              unint64_t v26 = *(void *)(v48 + 8 * v27);
              if (!v26)
              {
                uint64_t v28 = v22 + 5;
                if (v22 + 5 >= v49) {
                  goto LABEL_62;
                }
                unint64_t v26 = *(void *)(v48 + 8 * v28);
                if (!v26)
                {
                  while (1)
                  {
                    int64_t v27 = v28 + 1;
                    if (__OFADD__(v28, 1)) {
                      break;
                    }
                    if (v27 >= v49) {
                      goto LABEL_62;
                    }
                    unint64_t v26 = *(void *)(v48 + 8 * v27);
                    ++v28;
                    if (v26) {
                      goto LABEL_31;
                    }
                  }
LABEL_65:
                  __break(1u);
                  goto LABEL_66;
                }
                int64_t v27 = v22 + 5;
              }
            }
          }
        }
LABEL_31:
        unint64_t v21 = (v26 - 1) & v26;
        int64_t v54 = v27;
        unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
      }
      uint64_t v29 = *(char **)(*(void *)(v53 + 56) + 8 * v24);
      uint64_t v30 = &v29[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances];
      swift_beginAccess();
      uint64_t v31 = *(void *)v30;
      uint64_t v55 = v29;
      if (*(void *)v30 >> 62)
      {
        swift_bridgeObjectRetain_n();
        id v41 = v29;
        uint64_t v32 = sub_2147AD4B8();
        swift_bridgeObjectRelease();
        if (!v32) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        uint64_t v33 = v29;
        if (!v32) {
          goto LABEL_13;
        }
      }
      if ((v31 & 0xC000000000000001) != 0) {
        uint64_t v34 = (char *)MEMORY[0x2166A7680](0, v31);
      }
      else {
        uint64_t v34 = (char *)*(id *)(v31 + 32);
      }
      uint64_t v35 = v34;
      BOOL v36 = *(void *)&v34[OBJC_IVAR____TtC9SEService8SEApplet_identifier] == a1
         && *(void *)&v34[OBJC_IVAR____TtC9SEService8SEApplet_identifier + 8] == a2;
      if (v36 || (sub_2147AD668() & 1) != 0)
      {
LABEL_57:
        swift_bridgeObjectRelease_n();
        uint64_t v43 = *(void *)&v35[OBJC_IVAR____TtC9SEService8SEApplet_moduleIdentifier];
        uint64_t v42 = *(void *)&v35[OBJC_IVAR____TtC9SEService8SEApplet_moduleIdentifier + 8];
        uint64_t v44 = *(void *)&v51[OBJC_IVAR____TtC9SEService10SESnapshot_dataSource + 8];
        uint64_t v45 = *(void *)&v51[OBJC_IVAR____TtC9SEService10SESnapshot_dataSource + 16];
        v56[0] = *(void *)&v51[OBJC_IVAR____TtC9SEService10SESnapshot_dataSource];
        v56[1] = v44;
        v56[2] = v45;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        CredentialType.init(moduleAID:dataSource:)(v43, v42, v56, &v57);
        unint64_t v46 = *((void *)&v57 + 1);
        if (*((void *)&v57 + 1) == 26)
        {
          sub_21472C78C(*(void *)(v52 + 16), *(void *)(v52 + 24));

          uint64_t v47 = 0;
          *(_OWORD *)(v52 + 16) = xmmword_2147B80E0;
          unint64_t v46 = 25;
        }
        else
        {
          uint64_t v47 = v57;
          sub_21472C78C(*(void *)(v52 + 16), *(void *)(v52 + 24));
          *(void *)(v52 + 16) = v47;
          *(void *)(v52 + 24) = v46;
          sub_21471ED54(v47, v46);
        }
        swift_release();
        *uint64_t v50 = v47;
        v50[1] = v46;
        sub_214764944(a1, a2, v52);
        return swift_release();
      }

      if (v32 != 1)
      {
        uint64_t v37 = 5;
        while (1)
        {
          unint64_t v38 = (v31 & 0xC000000000000001) != 0
              ? (char *)MEMORY[0x2166A7680](v37 - 4, v31)
              : (char *)*(id *)(v31 + 8 * v37);
          uint64_t v35 = v38;
          uint64_t v39 = v37 - 3;
          if (__OFADD__(v37 - 4, 1)) {
            break;
          }
          BOOL v40 = *(void *)&v38[OBJC_IVAR____TtC9SEService8SEApplet_identifier] == a1
             && *(void *)&v38[OBJC_IVAR____TtC9SEService8SEApplet_identifier + 8] == a2;
          if (v40 || (sub_2147AD668() & 1) != 0) {
            goto LABEL_57;
          }

          ++v37;
          if (v39 == v32) {
            goto LABEL_13;
          }
        }
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
LABEL_13:
      swift_bridgeObjectRelease_n();

      uint64_t v9 = v52;
      a3 = v50;
      int64_t v22 = v54;
    }
  }
  uint64_t v16 = v58[0];
  unint64_t v15 = v58[1];
  swift_bridgeObjectRelease();
  sub_21472C78C(*(void *)(v9 + 16), *(void *)(v9 + 24));
  *(void *)(v9 + 16) = v16;
  *(void *)(v9 + 24) = v15;
  *a3 = v16;
  a3[1] = v15;
  sub_21471ED54(v16, v15);
LABEL_9:
  sub_214764944(a1, a2, v9);
  return swift_release();
}

uint64_t SESnapshot.description.getter()
{
  return 0;
}

id sub_21475EA9C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  unint64_t v5 = (void *)sub_2147ACF38();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SESnapshot.globalCredentials.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SESnapshot.globalCredentials.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC9SEService10SESnapshot_globalCredentials);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*SESnapshot.globalCredentials.modify())()
{
  return j__swift_endAccess;
}

uint64_t static SESnapshot.seFreeSpaceMargin.getter()
{
  return 25600;
}

uint64_t sub_21475EC10()
{
  uint64_t v0 = sub_2147ACE18();
  __swift_allocate_value_buffer(v0, qword_26782C6E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26782C6E0);
  return sub_2147ACE08();
}

id sub_21475EC94(void *a1, void *a2, unint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = sub_2147ACD88();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a4 + 16);
  *(void *)&v6[OBJC_IVAR____TtC9SEService10SESnapshot_BYTES_PER_INDEX] = 16;
  *(void *)&v6[OBJC_IVAR____TtC9SEService10SESnapshot_BYTES_PER_PAGE] = 512;
  *(void *)&v6[OBJC_IVAR____TtC9SEService10SESnapshot_INDEX_PER_PAGE] = 32;
  uint64_t v17 = &v6[OBJC_IVAR____TtC9SEService10SESnapshot_memoryCalculator];
  *(void *)uint64_t v17 = 0;
  v17[8] = 1;
  *(void *)&v6[OBJC_IVAR____TtC9SEService10SESnapshot_seState] = a1;
  *(void *)&v6[OBJC_IVAR____TtC9SEService10SESnapshot_reservationState] = a2;
  uint64_t v18 = &v6[OBJC_IVAR____TtC9SEService10SESnapshot_dataSource];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)a4;
  *((void *)v18 + 2) = v16;
  uint64_t v19 = v6;
  id v20 = a1;
  id v21 = a2;
  if (!a3) {
    a3 = sub_214758F38(MEMORY[0x263F8EE78]);
  }
  *(void *)&v6[OBJC_IVAR____TtC9SEService10SESnapshot_stagedCredentials] = a3;
  uint64_t v22 = SEState.instances.getter();
  swift_beginAccess();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_214730D6C(v23, v22);
  swift_beginAccess();
  uint64_t v25 = swift_bridgeObjectRetain();
  *(void *)&v6[OBJC_IVAR____TtC9SEService10SESnapshot_globalCredentials] = sub_214730D6C(v25, v24);
  sub_2147ACD78();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v6[OBJC_IVAR____TtC9SEService10SESnapshot_uuid], v15, v12);
  *(void *)&v6[OBJC_IVAR____TtC9SEService10SESnapshot_deviceCapability] = a5;
  id v26 = a5;

  v33.receiver = v6;
  v33.super_class = ObjectType;
  id v27 = objc_msgSendSuper2(&v33, sel_init);
  swift_unknownObjectWeakInit();

  v32[8] = 0;
  uint64_t v28 = (uint64_t)v27 + OBJC_IVAR____TtC9SEService10SESnapshot_memoryCalculator;
  swift_beginAccess();
  sub_214764C54((uint64_t)v32, v28);
  swift_endAccess();
  return v27;
}

uint64_t static SESnapshot.supportsSecureCoding.getter()
{
  return byte_26781D4E0;
}

uint64_t static SESnapshot.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26781D4E0 = a1;
  return result;
}

uint64_t (*static SESnapshot.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall SESnapshot.encode(with:)(NSCoder with)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9SEService10SESnapshot_seState);
  unint64_t v5 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v4 forKey:v5];

  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC9SEService10SESnapshot_reservationState);
  unint64_t v7 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v6 forKey:v7];

  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_214758A5C(v8);
  swift_bridgeObjectRelease();
  if (*(void *)(v9 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D580);
    uint64_t v10 = sub_2147AD4E8();
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE80];
  }
  uint64_t v18 = v10;
  uint64_t v11 = (void *)swift_bridgeObjectRetain();
  sub_214755554(v11, 1, &v18);
  swift_bridgeObjectRelease();
  sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  sub_21472C6F4(0, (unint64_t *)&unk_26781D590);
  sub_214764BEC();
  uint64_t v12 = (void *)sub_2147ACE98();
  swift_release();
  uint64_t v13 = (void *)sub_2147ACF38();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v12, v13, v18);

  uint64_t v14 = (void *)sub_2147ACD38();
  unint64_t v15 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v14 forKey:v15];

  id v16 = *(id *)(v2 + OBJC_IVAR____TtC9SEService10SESnapshot_deviceCapability);
  uint64_t v17 = (void *)sub_2147ACF38();
  [(objc_class *)with.super.isa encodeObject:v16 forKey:v17];
}

uint64_t SESnapshot.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SESnapshot.init(coder:)(a1);
}

uint64_t SESnapshot.init(coder:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_2147ACD88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC9SEService10SESnapshot_BYTES_PER_INDEX] = 16;
  *(void *)&v1[OBJC_IVAR____TtC9SEService10SESnapshot_BYTES_PER_PAGE] = 512;
  *(void *)&v1[OBJC_IVAR____TtC9SEService10SESnapshot_INDEX_PER_PAGE] = 32;
  uint64_t v8 = (uint64_t)&v1[OBJC_IVAR____TtC9SEService10SESnapshot_memoryCalculator];
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  type metadata accessor for SEState();
  uint64_t v9 = v1;
  uint64_t v10 = sub_2147AD1E8();
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = (void *)v10;
  type metadata accessor for ReservationState();
  uint64_t v12 = (void *)sub_2147AD1E8();
  if (!v12)
  {

    goto LABEL_12;
  }
  id v82 = v12;
  id v83 = v11;
  uint64_t v81 = (objc_class *)ObjectType;
  sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  sub_21472C6F4(0, (unint64_t *)&unk_26781D590);
  uint64_t v13 = sub_2147AD1F8();
  if (!v13)
  {

LABEL_12:
    goto LABEL_13;
  }
  uint64_t v14 = v13;
  sub_21472C6F4(0, &qword_26781D370);
  uint64_t v15 = sub_2147AD1E8();
  if (!v15)
  {

LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  id v16 = (void *)v15;
  unint64_t v17 = sub_214759050(MEMORY[0x263F8EE78]);
  SERDataSource.init(credentialSizes:)((Swift::OpaquePointer)v17);
  if (v18)
  {

    swift_bridgeObjectRelease();
LABEL_13:
    sub_21472C730(v8, &qword_26781D560);

    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v76 = 0;
  id v78 = v16;
  uint64_t v21 = v92;
  uint64_t v77 = v91;
  uint64_t v22 = v93;
  type metadata accessor for DeviceCapability();
  uint64_t v23 = sub_2147AD1E8();
  if (!v23)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v75 = v21;
  uint64_t v73 = (void *)v23;
  uint64_t v74 = v22;
  sub_2147ACD58();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[OBJC_IVAR____TtC9SEService10SESnapshot_uuid], v7, v4);
  id v24 = v83;
  uint64_t v72 = OBJC_IVAR____TtC9SEService10SESnapshot_seState;
  *(void *)&v9[OBJC_IVAR____TtC9SEService10SESnapshot_seState] = v83;
  id v25 = v82;
  *(void *)&v9[OBJC_IVAR____TtC9SEService10SESnapshot_reservationState] = v82;
  unint64_t v80 = v14 & 0xC000000000000001;
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v26 = v24;
    id v27 = v25;
    uint64_t v28 = sub_2147AD458();
  }
  else
  {
    uint64_t v28 = *(void *)(v14 + 16);
    id v29 = v24;
    id v30 = v25;
  }
  if (v28)
  {
    uint64_t v84 = MEMORY[0x263F8EE78];
    sub_21474D39C(0, v28 & ~(v28 >> 63), 0);
    uint64_t v88 = sub_214755E34(v14);
    uint64_t v89 = v31;
    char v90 = v32 & 1;
    if (v28 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v33 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v14 < 0) {
        uint64_t v33 = v14;
      }
      uint64_t v79 = v33;
      while (1)
      {
        sub_21475620C(&v85, v88, v89, v90, v14);
        uint64_t v44 = v43;
        uint64_t v45 = v85;
        uint64_t v46 = sub_2147ACF58();
        CredentialType.init(rawValue:)(v46, v47, &v91);
        uint64_t v48 = v92;
        if (v92 == 26) {
          break;
        }
        uint64_t v49 = v91;
        uint64_t v50 = sub_2147AD148();

        uint64_t v51 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21474D39C(0, *(void *)(v51 + 16) + 1, 1);
          uint64_t v51 = v84;
        }
        unint64_t v53 = *(void *)(v51 + 16);
        unint64_t v52 = *(void *)(v51 + 24);
        if (v53 >= v52 >> 1)
        {
          sub_21474D39C(v52 > 1, v53 + 1, 1);
          uint64_t v51 = v84;
        }
        *(void *)(v51 + 16) = v53 + 1;
        int64_t v54 = (void *)(v51 + 24 * v53);
        v54[4] = v49;
        v54[5] = v48;
        v54[6] = v50;
        if (v80)
        {
          if ((v90 & 1) == 0) {
            goto LABEL_45;
          }
          if (sub_2147AD428()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26781D5C0);
          uint64_t v55 = (void (*)(uint64_t *, void))sub_2147ACEC8();
          sub_2147AD488();
          v55(&v91, 0);
          if (!--v28)
          {
LABEL_36:
            sub_214756438(v88, v89, v90);
            swift_bridgeObjectRelease();
            uint64_t v56 = v84;
            goto LABEL_38;
          }
        }
        else
        {
          uint64_t v34 = v88;
          uint64_t v35 = v89;
          char v36 = v90;
          sub_214755F84(v88, v89, v90, v14);
          uint64_t v38 = v37;
          uint64_t v40 = v39;
          char v42 = v41;
          sub_214756438(v34, v35, v36);
          uint64_t v88 = v38;
          uint64_t v89 = v40;
          char v90 = v42 & 1;
          if (!--v28) {
            goto LABEL_36;
          }
        }
      }
    }
    __break(1u);
LABEL_45:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v56 = MEMORY[0x263F8EE78];
LABEL_38:
    long long v57 = v81;
    id v58 = v83;
    if (*(void *)(v56 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D380);
      uint64_t v59 = sub_2147AD4E8();
    }
    else
    {
      uint64_t v59 = MEMORY[0x263F8EE80];
    }
    uint64_t v91 = v59;
    uint64_t v60 = (void *)swift_bridgeObjectRetain();
    uint64_t v61 = v76;
    sub_214754E14(v60, 1, &v91);
    if (!v61)
    {
      swift_bridgeObjectRelease();
      *(void *)&v9[OBJC_IVAR____TtC9SEService10SESnapshot_stagedCredentials] = v91;
      uint64_t v62 = SEState.instances.getter();
      id v63 = v82;
      swift_beginAccess();
      uint64_t v64 = swift_bridgeObjectRetain();
      uint64_t v65 = sub_214730D6C(v64, v62);
      swift_beginAccess();
      uint64_t v66 = swift_bridgeObjectRetain();
      *(void *)&v9[OBJC_IVAR____TtC9SEService10SESnapshot_globalCredentials] = sub_214730D6C(v66, v65);
      uint64_t v67 = (uint64_t *)&v9[OBJC_IVAR____TtC9SEService10SESnapshot_dataSource];
      uint64_t v68 = v75;
      uint64_t *v67 = v77;
      v67[1] = v68;
      v67[2] = v74;
      os_log_type_t v69 = v73;
      *(void *)&v9[OBJC_IVAR____TtC9SEService10SESnapshot_deviceCapability] = v73;
      id v70 = v69;

      v87.receiver = v9;
      v87.super_class = v57;
      id v19 = objc_msgSendSuper2(&v87, sel_init, v72);
      swift_unknownObjectWeakInit();

      char v86 = 0;
      uint64_t v71 = (uint64_t)v19 + OBJC_IVAR____TtC9SEService10SESnapshot_memoryCalculator;
      swift_beginAccess();
      sub_214764C54((uint64_t)&v85, v71);
      swift_endAccess();
      return (uint64_t)v19;
    }
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

id SESnapshot.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SESnapshot.init()()
{
}

id SESnapshot.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21475FE60()
{
  return swift_slowAlloc();
}

uint64_t sub_21475FE68(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_21475FEA4()
{
}

unint64_t sub_21475FEB0()
{
  unint64_t result = qword_26781D4F0;
  if (!qword_26781D4F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D4E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D4F0);
  }
  return result;
}

void *sub_21475FF0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D248);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2147623A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21476001C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D200);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2147627EC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21476012C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_214760154(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_2147601CC(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_2147AD248();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_2147601CC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_2147602A0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_21472B428((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_21472B428((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_2147602A0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2147AD258();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_21476045C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2147AD398();
  if (!v8)
  {
    sub_2147AD498();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2147AD4F8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_21476045C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_2147604F4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2147606D4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_2147606D4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2147604F4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_21476066C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2147AD358();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2147AD498();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2147ACFF8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_2147AD4F8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2147AD498();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_21476066C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D628);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  unsigned char v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2147606D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D628);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

unsigned char **sub_214760824(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  unsigned char *v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void sub_214760834(void *a1, char a2, void *a3)
{
  LOBYTE(v4) = a2;
  uint64_t v6 = a1[2];
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_3;
  }
  unint64_t v8 = a1[5];
  unint64_t v7 = a1[6];
  uint64_t v9 = a1[4];
  sub_21471ED54(v9, v8);
  if (v8 == 26) {
    goto LABEL_3;
  }
  uint64_t v10 = (void *)*a3;
  unint64_t v11 = sub_21477EA08(v9, v8);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  BOOL v15 = __OFADD__(v13, v14);
  uint64_t v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v17 = v12;
  if (v10[3] < v16)
  {
    sub_214793264(v16, v4 & 1);
    unint64_t v11 = sub_21477EA08(v9, v8);
    if ((v17 & 1) == (v18 & 1)) {
      goto LABEL_9;
    }
LABEL_7:
    unint64_t v11 = sub_2147AD6B8();
    __break(1u);
  }
  if (v4)
  {
LABEL_9:
    if (v17) {
      goto LABEL_10;
    }
LABEL_13:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v23 = (uint64_t *)(v22[6] + 16 * v11);
    *uint64_t v23 = v9;
    v23[1] = v8;
    *(void *)(v22[7] + 8 * v11) = v7;
    uint64_t v24 = v22[2];
    BOOL v15 = __OFADD__(v24, 1);
    uint64_t v25 = v24 + 1;
    if (!v15)
    {
      v22[2] = v25;
      if (v6 == 1)
      {
LABEL_3:
        swift_bridgeObjectRelease_n();
        return;
      }
      unint64_t v4 = a1 + 9;
      unint64_t v7 = 1;
      while (v7 < a1[2])
      {
        unint64_t v8 = *(v4 - 1);
        uint64_t v26 = *v4;
        uint64_t v9 = *(v4 - 2);
        sub_21471ED54(v9, v8);
        if (v8 == 26) {
          goto LABEL_3;
        }
        id v27 = (void *)*a3;
        unint64_t v28 = sub_21477EA08(v9, v8);
        uint64_t v30 = v27[2];
        BOOL v31 = (v29 & 1) == 0;
        BOOL v15 = __OFADD__(v30, v31);
        uint64_t v32 = v30 + v31;
        if (v15) {
          goto LABEL_25;
        }
        char v17 = v29;
        if (v27[3] < v32)
        {
          sub_214793264(v32, 1);
          unint64_t v28 = sub_21477EA08(v9, v8);
          if ((v17 & 1) != (v33 & 1)) {
            goto LABEL_7;
          }
        }
        if (v17) {
          goto LABEL_10;
        }
        uint64_t v34 = (void *)*a3;
        *(void *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
        uint64_t v35 = (uint64_t *)(v34[6] + 16 * v28);
        *uint64_t v35 = v9;
        v35[1] = v8;
        *(void *)(v34[7] + 8 * v28) = v26;
        uint64_t v36 = v34[2];
        BOOL v15 = __OFADD__(v36, 1);
        uint64_t v37 = v36 + 1;
        if (v15) {
          goto LABEL_26;
        }
        ++v7;
        v34[2] = v37;
        v4 += 3;
        if (v6 == v7) {
          goto LABEL_3;
        }
      }
      goto LABEL_27;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v21 = v11;
  sub_214790FC8();
  unint64_t v11 = v21;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_10:
  id v19 = (void *)swift_allocError();
  swift_willThrow();
  id v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_2147201A0(v9, v8);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_28:
  sub_2147AD348();
  sub_2147ACFC8();
  sub_2147AD3F8();
  sub_2147ACFC8();
  sub_2147AD4A8();
  __break(1u);
}

unint64_t sub_214760BDC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  size_t v5 = (void *)(a5[6] + 16 * result);
  *size_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_214760C24(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_2147ACD88();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t *sub_214760CDC(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_214760E34((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    BOOL v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_214760E34((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x2166A8870](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_214760E34(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_214760F80(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_214760F80(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_214760F80(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(void *)(*(void *)(a3 + 56) + 8 * v12))
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_214760F80(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_214760F80(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_214760F80(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_214760F80(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D380);
    uint64_t v7 = sub_2147AD4E8();
    uint64_t v8 = v7;
    uint64_t v33 = a2;
    if (a2 < 1) {
      unint64_t v9 = 0;
    }
    else {
      unint64_t v9 = *a1;
    }
    uint64_t v10 = 0;
    uint64_t v11 = v7 + 64;
    while (1)
    {
      if (v9)
      {
        unint64_t v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        uint64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_43;
        }
        if (v14 >= v33) {
          return v8;
        }
        unint64_t v15 = a1[v14];
        ++v10;
        if (!v15)
        {
          uint64_t v10 = v14 + 1;
          if (v14 + 1 >= v33) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v10 = v14 + 2;
            if (v14 + 2 >= v33) {
              return v8;
            }
            unint64_t v15 = a1[v10];
            if (!v15)
            {
              uint64_t v16 = v14 + 3;
              if (v16 >= v33) {
                return v8;
              }
              unint64_t v15 = a1[v16];
              if (!v15)
              {
                while (1)
                {
                  uint64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_44;
                  }
                  if (v10 >= v33) {
                    return v8;
                  }
                  unint64_t v15 = a1[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_24;
                  }
                }
              }
              uint64_t v10 = v16;
            }
          }
        }
LABEL_24:
        unint64_t v9 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      char v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      uint64_t v20 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
      sub_2147AD728();
      switch(v18)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
        case 25:
          sub_2147AD738();
          break;
        default:
          sub_2147AD738();
          swift_bridgeObjectRetain();
          sub_2147ACFA8();
          break;
      }
      uint64_t v21 = sub_2147AD748();
      uint64_t v22 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v23 = v21 & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_38;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          JUMPOUT(0x21476139CLL);
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
LABEL_38:
      *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      uint64_t v30 = (void *)(*(void *)(v8 + 48) + 16 * v25);
      *uint64_t v30 = v19;
      v30[1] = v18;
      *(void *)(*(void *)(v8 + 56) + 8 * v25) = v20;
      ++*(void *)(v8 + 16);
      if (__OFSUB__(v5--, 1)) {
        goto LABEL_42;
      }
      if (!v5) {
        return v8;
      }
    }
  }
  swift_retain();
  return v4;
}

uint64_t sub_214761404(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v5 = a2;
  uint64_t v20 = a2;
  unint64_t v21 = a3;
  uint64_t v7 = *v3;
  uint64_t v18 = a2;
  unint64_t v19 = a3;
  sub_2147AD728();
  swift_bridgeObjectRetain();
  CredentialType.hash(into:)();
  uint64_t v8 = sub_2147AD748();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      v17[0] = *(_OWORD *)(*(void *)(v7 + 48) + 16 * v10);
      if (_s9SEService14CredentialTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)v17, &v20)) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = v20;
        unint64_t v4 = v21;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_2147201A0(v5, v4);
    uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    *a1 = *v14;
    a1[1] = v16;
    sub_21471ED54(v15, v16);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v17[0] = *v3;
    *char v3 = 0x8000000000000000;
    sub_21471ED54(v5, v4);
    sub_214761A48(v5, v4, v10, isUniquelyReferenced_nonNull_native);
    *char v3 = *(void *)&v17[0];
    swift_bridgeObjectRelease();
    *a1 = v5;
    a1[1] = v4;
    return 1;
  }
}

uint64_t sub_21476158C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D620);
  uint64_t v3 = sub_2147AD338();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_40;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v31 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_41;
    }
    if (v15 >= v8) {
      break;
    }
    unint64_t v16 = v31[v15];
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v8) {
        break;
      }
      unint64_t v16 = v31[v10];
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v8) {
          break;
        }
        unint64_t v16 = v31[v10];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v8) {
            break;
          }
          unint64_t v16 = v31[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v10 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v10 >= v8) {
                goto LABEL_36;
              }
              unint64_t v16 = v31[v10];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v10 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_2147AD728();
    switch(v19)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
        sub_2147AD738();
        break;
      default:
        sub_2147AD738();
        sub_2147ACFA8();
        break;
    }
    uint64_t v21 = sub_2147AD748();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x2147619E0);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v9 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    void *v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
  }
LABEL_36:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
  if (v29 > 63) {
    bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v31 = -1 << v29;
  }
  *(void *)(v2 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_214761A48(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v7 = result;
  v21[0] = result;
  v21[1] = a2;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_12;
  }
  if (a4)
  {
    sub_21476158C();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (uint64_t)sub_214761BB0();
      goto LABEL_12;
    }
    sub_214761D64();
  }
  uint64_t v10 = *v4;
  uint64_t v19 = v7;
  uint64_t v20 = a2;
  sub_2147AD728();
  CredentialType.hash(into:)();
  uint64_t result = sub_2147AD748();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    do
    {
      v18[0] = *(_OWORD *)(*(void *)(v10 + 48) + 16 * a3);
      uint64_t result = _s9SEService14CredentialTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)v18, v21);
      if (result) {
        goto LABEL_15;
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_12:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v14 = (uint64_t *)(*(void *)(v13 + 48) + 16 * a3);
  *unint64_t v14 = v7;
  v14[1] = a2;
  uint64_t v15 = *(void *)(v13 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v13 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2147AD6A8();
  __break(1u);
  return result;
}

void *sub_214761BB0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D620);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2147AD328();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_21471ED54(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_214761D64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D620);
  uint64_t v3 = sub_2147AD338();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v30) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v30) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v30) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v10);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v30) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v10 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_40;
              }
              if (v10 >= v30) {
                goto LABEL_36;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v10);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v10 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    int64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_2147AD728();
    switch(v19)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
        sub_2147AD738();
        break;
      default:
        sub_2147AD738();
        swift_bridgeObjectRetain();
        sub_2147ACFA8();
        break;
    }
    uint64_t v21 = sub_2147AD748();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x214762188);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v9 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    void *v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
  }
LABEL_36:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_38:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2147621F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)a1;
  *(void *)a2 = *(void *)a1;
  long long v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  return sub_21471ED54(v2, v3);
}

uint64_t sub_21476220C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (v4)
  {
    uint64_t v7 = (v4 - 1) & v4;
    unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    uint64_t v9 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
    uint64_t v12 = *(void *)(*(void *)(v3 + 56) + 8 * v8);
    v1[3] = v6;
    v1[4] = v7;
    unint64_t v13 = (void (*)(void *))v1[5];
    v21[0] = v10;
    v21[1] = v11;
    uint64_t v21[2] = v12;
    sub_21471ED54(v10, v11);
    v13(v21);
    return sub_2147201A0(v10, v11);
  }
  int64_t v15 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    int64_t v16 = (unint64_t)(v1[2] + 64) >> 6;
    if (v15 < v16)
    {
      uint64_t v17 = v1[1];
      unint64_t v18 = *(void *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_7:
        uint64_t v7 = (v18 - 1) & v18;
        unint64_t v8 = __clz(__rbit64(v18)) + (v15 << 6);
        int64_t v6 = v15;
        goto LABEL_3;
      }
      int64_t v19 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v16)
      {
        unint64_t v18 = *(void *)(v17 + 8 * v19);
        if (v18)
        {
LABEL_10:
          int64_t v15 = v19;
          goto LABEL_7;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v16)
        {
          unint64_t v18 = *(void *)(v17 + 8 * (v5 + 3));
          if (v18)
          {
            int64_t v15 = v5 + 3;
            goto LABEL_7;
          }
          int64_t v19 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v16)
          {
            unint64_t v18 = *(void *)(v17 + 8 * v19);
            if (v18) {
              goto LABEL_10;
            }
            int64_t v15 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v16)
            {
              unint64_t v18 = *(void *)(v17 + 8 * v15);
              if (v18) {
                goto LABEL_7;
              }
              int64_t v6 = v16 - 1;
              int64_t v20 = v5 + 6;
              while (v16 != v20)
              {
                unint64_t v18 = *(void *)(v17 + 8 * v20++);
                if (v18)
                {
                  int64_t v15 = v20 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = xmmword_2147B20F0;
    *(void *)(a1 + 16) = 0;
  }
  return result;
}

uint64_t sub_2147623A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_214762498(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_21474D35C(0, v3, 0);
    uint64_t result = v21;
    uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC9SEService10SESnapshot_dataSource + 8);
    uint64_t v7 = (unint64_t *)(a1 + 40);
    uint64_t v19 = v6;
    while (1)
    {
      uint64_t v20 = result;
      uint64_t v9 = *(v7 - 1);
      unint64_t v8 = *v7;
      sub_21471ED54(v9, *v7);
      sub_21471ED54(v9, v8);
      sub_21471ED54(v9, v8);
      sub_21471ED54(v9, v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2147ACF78();
      uint64_t v10 = sub_2147ACF88();
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      sub_2147201A0(v9, v8);
      if (!*(void *)(v6 + 16)) {
        break;
      }
      uint64_t v13 = sub_21477EA80(v10, v12);
      if ((v14 & 1) == 0) {
        break;
      }
      uint64_t v15 = *(void *)(*(void *)(v6 + 56) + 32 * v13 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2147201A0(v9, v8);
      uint64_t result = v20;
      unint64_t v17 = *(void *)(v20 + 16);
      unint64_t v16 = *(void *)(v20 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_21474D35C(v16 > 1, v17 + 1, 1);
        uint64_t result = v20;
      }
      v7 += 2;
      *(void *)(result + 16) = v17 + 1;
      unint64_t v18 = (void *)(result + 24 * v17);
      v18[4] = v9;
      long long v18[5] = v8;
      void v18[6] = v15;
      --v3;
      uint64_t v6 = v19;
      if (!v3) {
        return result;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_2147626C4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_21474D37C(0, v2, 0);
    uint64_t v3 = v14;
    unint64_t v5 = (unint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v6 = *(v5 - 1);
      unint64_t v7 = *v5;
      v13[0] = v6;
      v13[1] = v7;
      sub_21471ED54(v6, v7);
      uint64_t v8 = SESnapshot.usage(ofCredential:)(v13);
      if (v1) {
        break;
      }
      uint64_t v9 = v8;
      sub_2147201A0(v6, v7);
      uint64_t v14 = v3;
      unint64_t v11 = *(void *)(v3 + 16);
      unint64_t v10 = *(void *)(v3 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_21474D37C(v10 > 1, v11 + 1, 1);
        uint64_t v3 = v14;
      }
      v5 += 2;
      *(void *)(v3 + 16) = v11 + 1;
      *(void *)(v3 + 8 * v11 + 32) = v9;
      if (!--v2) {
        return v3;
      }
    }
    sub_2147201A0(v6, v7);
    swift_release();
  }
  return v3;
}

char *sub_2147627EC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2147AD4F8();
  __break(1u);
  return result;
}

uint64_t sub_2147628D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 2712) = a4;
  *(void *)(v5 + 2664) = a3;
  *(void *)(v5 + 2616) = a2;
  *(void *)(v5 + 2568) = a1;
  *(_OWORD *)(v5 + 2760) = *(_OWORD *)a5;
  *(void *)(v5 + 2776) = *(void *)(a5 + 16);
  return MEMORY[0x270FA2498](sub_214762918, 0, 0);
}

uint64_t sub_214762918()
{
  uint64_t v1 = *(void *)(v0 + 2760);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 2776);
    uint64_t v3 = *(void *)(v0 + 2768);
    *(void *)(v0 + 2840) = v2;
    *(void *)(v0 + 2832) = v3;
    *(void *)(v0 + 2824) = v1;
    sub_214765188(*(void *)(v0 + 2712), v0 + 2056, &qword_26781D508);
    uint64_t v4 = *(void *)(v0 + 2760);
    if (*(void *)(v0 + 2080))
    {
      sub_2147652E4((long long *)(v0 + 2056), v0 + 2136);
      sub_2147651EC(v4);
    }
    else
    {
      *(void *)(v0 + 2160) = &type metadata for DefaultSEStateInfoProvider;
      *(void *)(v0 + 2168) = &off_26C561138;
      *(void *)(v0 + 2136) = v1;
      *(void *)(v0 + 2144) = v3;
      *(void *)(v0 + 2152) = v2;
      sub_2147651EC(v4);
      sub_2147651EC(v1);
      sub_21472C730(v0 + 2056, &qword_26781D508);
    }
    uint64_t v6 = *(void *)(v0 + 2664);
    uint64_t v7 = *(void *)(v0 + 2616);
    uint64_t v8 = *(void **)(v0 + 2568);
    sub_214765238(v0 + 2136, v0 + 1976);
    uint64_t v9 = (void *)swift_allocObject();
    *(void *)(v0 + 2848) = v9;
    sub_2147652E4((long long *)(v0 + 1976), (uint64_t)(v9 + 2));
    v9[7] = v8;
    v9[8] = v7;
    v9[9] = v6;
    id v10 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    type metadata accessor for SEState();
    swift_asyncLet_begin();
    type metadata accessor for ReservationState();
    swift_asyncLet_begin();
    type metadata accessor for DeviceCapability();
    swift_asyncLet_begin();
    return MEMORY[0x270FA23E8](v0 + 1296, v0 + 2424, sub_21476319C, v0 + 2240);
  }
  else
  {
    if (qword_26781BF90 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_26782C6D0;
    *(void *)(v0 + 2784) = qword_26782C6D0;
    return MEMORY[0x270FA2498](sub_214762BF8, v5, 0);
  }
}

uint64_t sub_214762BF8()
{
  uint64_t v1 = v0[348];
  uint64_t v2 = sub_214763BD4((unint64_t *)&qword_26781D638, (void (*)(uint64_t))type metadata accessor for SERClient);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[349] = v3;
  v3[2] = v1;
  v3[3] = &unk_26781D630;
  v3[4] = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[350] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D640);
  void *v4 = v0;
  v4[1] = sub_214762D5C;
  return MEMORY[0x270FA2360](v0 + 285, v1, v2, 0x786F725068746977, 0xED0000293A5F2879, sub_21476517C, v3, v5);
}

uint64_t sub_214762D5C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2808) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[348];
    uint64_t v4 = sub_214763138;
  }
  else
  {
    swift_task_dealloc();
    v2[352] = v2[285];
    uint64_t v4 = sub_214762E88;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214762E88()
{
  SERDataSource.init(credentialSizes:)(*(Swift::OpaquePointer *)(v0 + 2816));
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    *(void *)(v0 + 2840) = v12;
    *(void *)(v0 + 2832) = v11;
    *(void *)(v0 + 2824) = v10;
    sub_214765188(*(void *)(v0 + 2712), v0 + 2056, &qword_26781D508);
    uint64_t v4 = *(void *)(v0 + 2760);
    if (*(void *)(v0 + 2080))
    {
      sub_2147652E4((long long *)(v0 + 2056), v0 + 2136);
      sub_2147651EC(v4);
    }
    else
    {
      *(void *)(v0 + 2160) = &type metadata for DefaultSEStateInfoProvider;
      *(void *)(v0 + 2168) = &off_26C561138;
      *(void *)(v0 + 2136) = v10;
      *(void *)(v0 + 2144) = v11;
      *(void *)(v0 + 2152) = v12;
      sub_2147651EC(v4);
      sub_2147651EC(v10);
      sub_21472C730(v0 + 2056, &qword_26781D508);
    }
    uint64_t v5 = *(void *)(v0 + 2664);
    uint64_t v6 = *(void *)(v0 + 2616);
    uint64_t v7 = *(void **)(v0 + 2568);
    sub_214765238(v0 + 2136, v0 + 1976);
    uint64_t v8 = (void *)swift_allocObject();
    *(void *)(v0 + 2848) = v8;
    sub_2147652E4((long long *)(v0 + 1976), (uint64_t)(v8 + 2));
    v8[7] = v7;
    v8[8] = v6;
    v8[9] = v5;
    id v9 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    type metadata accessor for SEState();
    swift_asyncLet_begin();
    type metadata accessor for ReservationState();
    swift_asyncLet_begin();
    type metadata accessor for DeviceCapability();
    swift_asyncLet_begin();
    return MEMORY[0x270FA23E8](v0 + 1296, v0 + 2424, sub_21476319C, v0 + 2240);
  }
}

uint64_t sub_214763138()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21476319C()
{
  v1[357] = v0;
  if (v0)
  {
    sub_2147653CC(v1[353]);
    return MEMORY[0x270FA23D8](v1 + 2, v1 + 291, sub_214763820, v1 + 286);
  }
  else
  {
    uint64_t v2 = (void *)v1[303];
    v1[358] = v2;
    id v3 = v2;
    return MEMORY[0x270FA23E8](v1 + 82, v1 + 297, sub_214763284, v1 + 272);
  }
}

uint64_t sub_214763284()
{
  v1[359] = v0;
  if (v0)
  {
    uint64_t v2 = (void *)v1[358];
    sub_2147653CC(v1[353]);

    return MEMORY[0x270FA23D8](v1 + 2, v1 + 291, sub_214763928, v1 + 310);
  }
  else
  {
    return MEMORY[0x270FA2498](sub_214763358, 0, 0);
  }
}

uint64_t sub_214763358()
{
  uint64_t v1 = *(void *)(v0 + 2824);
  uint64_t v2 = *(void **)(v0 + 2376);
  *(void *)(v0 + 2880) = v2;
  *(void *)(v0 + 2216) = v1;
  *(_OWORD *)(v0 + 2224) = *(_OWORD *)(v0 + 2832);
  id v3 = v2;
  return MEMORY[0x270FA23E8](v0 + 16, v0 + 2328, sub_2147633EC, v0 + 2672);
}

uint64_t sub_2147633EC()
{
  v1[361] = v0;
  if (v0)
  {
    uint64_t v2 = (void *)v1[360];
    id v3 = (void *)v1[358];
    sub_2147653CC(v1[353]);

    uint64_t v4 = sub_214763A30;
  }
  else
  {
    uint64_t v4 = sub_214763484;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_214763484()
{
  uint64_t v19 = v0;
  uint64_t v1 = v0 + 291;
  uint64_t v2 = (void *)v0[360];
  id v3 = (void *)v0[358];
  uint64_t v4 = (void *)v0[291];
  objc_allocWithZone((Class)type metadata accessor for SESnapshot());
  id v5 = sub_21475EC94(v3, v2, 0, (uint64_t)(v0 + 277), v4);
  v0[362] = v5;
  if (qword_26781BFA8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_2147ACE18();
  __swift_project_value_buffer(v6, (uint64_t)qword_26782C6E0);
  id v7 = v5;
  uint64_t v8 = sub_2147ACDF8();
  os_log_type_t v9 = sub_2147AD178();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v11 = v18;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v12 = sub_2147ACD18();
    v0[309] = sub_2147601CC(v12, v13, &v18);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v14 = SESnapshot.debugDescription.getter();
    v0[315] = sub_2147601CC(v14, v15, &v18);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2146ED000, v8, v9, "Created new snapshot, UUID: %s! Debug code:\n%s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    uint64_t v16 = v11;
    uint64_t v1 = v0 + 291;
    MEMORY[0x2166A8870](v16, -1, -1);
    MEMORY[0x2166A8870](v10, -1, -1);
  }
  else
  {
  }
  return MEMORY[0x270FA23D8](v0 + 2, v1, sub_214763714, v0 + 262);
}

uint64_t sub_214763714()
{
  return MEMORY[0x270FA2498](sub_214763730, 0, 0);
}

uint64_t sub_214763730()
{
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 2376, sub_214763750, v0 + 2016);
}

uint64_t sub_214763750()
{
  return MEMORY[0x270FA2498](sub_21476376C, 0, 0);
}

uint64_t sub_21476376C()
{
  return MEMORY[0x270FA23D8](v0 + 1296, v0 + 2424, sub_21476378C, v0 + 1936);
}

uint64_t sub_21476378C()
{
  return MEMORY[0x270FA2498](sub_2147637A8, 0, 0);
}

uint64_t sub_2147637A8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 2136);
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 2896);
  return v1(v2);
}

uint64_t sub_214763820()
{
  return MEMORY[0x270FA2498](sub_21476383C, 0, 0);
}

uint64_t sub_21476383C()
{
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 2376, sub_21476385C, v0 + 2336);
}

uint64_t sub_21476385C()
{
  return MEMORY[0x270FA2498](sub_214763878, 0, 0);
}

uint64_t sub_214763878()
{
  return MEMORY[0x270FA23D8](v0 + 1296, v0 + 2424, sub_214763898, v0 + 2384);
}

uint64_t sub_214763898()
{
  return MEMORY[0x270FA2498](sub_2147638B4, 0, 0);
}

uint64_t sub_2147638B4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 2136);
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214763928()
{
  return MEMORY[0x270FA2498](sub_214763944, 0, 0);
}

uint64_t sub_214763944()
{
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 2376, sub_214763964, v0 + 2528);
}

uint64_t sub_214763964()
{
  return MEMORY[0x270FA2498](sub_214763980, 0, 0);
}

uint64_t sub_214763980()
{
  return MEMORY[0x270FA23D8](v0 + 1296, v0 + 2424, sub_2147639A0, v0 + 2576);
}

uint64_t sub_2147639A0()
{
  return MEMORY[0x270FA2498](sub_2147639BC, 0, 0);
}

uint64_t sub_2147639BC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 2136);
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214763A30()
{
  return MEMORY[0x270FA23D8](v0 + 16, v0 + 2328, sub_214763A50, v0 + 2720);
}

uint64_t sub_214763A50()
{
  return MEMORY[0x270FA2498](sub_214763A6C, 0, 0);
}

uint64_t sub_214763A6C()
{
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 2376, sub_214763A8C, v0 + 2624);
}

uint64_t sub_214763A8C()
{
  return MEMORY[0x270FA2498](sub_214763AA8, 0, 0);
}

uint64_t sub_214763AA8()
{
  return MEMORY[0x270FA23D8](v0 + 1296, v0 + 2424, sub_214763AC8, v0 + 2432);
}

uint64_t sub_214763AC8()
{
  return MEMORY[0x270FA2498](sub_214763AE4, 0, 0);
}

uint64_t sub_214763AE4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 2136);
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_214763B58()
{
  unint64_t result = qword_26781D3B0;
  if (!qword_26781D3B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D520);
    sub_21472C02C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D3B0);
  }
  return result;
}

uint64_t sub_214763BD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214763C1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap, a2);
}

uint64_t sub_214763C28(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap);
}

uint64_t sub_214763C34(uint64_t a1)
{
  return a1;
}

uint64_t sub_214763C88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v23 = (unint64_t *)result;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    while (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      if (*(void *)(a4 + 16))
      {
LABEL_19:
        uint64_t v16 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v12);
        uint64_t v17 = *v16;
        unint64_t v18 = v16[1];
        sub_21471ED54(*v16, v18);
        unint64_t v19 = sub_21477EA08(v17, v18);
        if (v20)
        {
          uint64_t v21 = *(void *)(*(void *)(a4 + 56) + 8 * v19);
          uint64_t result = sub_2147201A0(v17, v18);
          if (!v21)
          {
            *(unint64_t *)((char *)v23 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
            BOOL v13 = __OFADD__(v24++, 1);
            if (v13) {
              goto LABEL_31;
            }
          }
        }
        else
        {
          uint64_t result = sub_2147201A0(v17, v18);
        }
      }
    }
    BOOL v13 = __OFADD__(v5++, 1);
    if (v13)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v5 >= v10) {
      return sub_214760F80(v23, a2, v24, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    if (!v14) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
    if (*(void *)(a4 + 16)) {
      goto LABEL_19;
    }
  }
  int64_t v15 = v5 + 1;
  if (v5 + 1 >= v10) {
    return sub_214760F80(v23, a2, v24, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v5 + 2;
  if (v5 + 2 >= v10) {
    return sub_214760F80(v23, a2, v24, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v5 + 3;
  if (v5 + 3 >= v10) {
    return sub_214760F80(v23, a2, v24, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v5 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_214760F80(v23, a2, v24, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_214763E70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  BOOL v27 = (unint64_t *)result;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v29 = a3 + 64;
  while (1)
  {
    while (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      if (*(void *)(a4 + 16))
      {
LABEL_19:
        uint64_t v17 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v13);
        uint64_t v18 = *v17;
        unint64_t v19 = v17[1];
        sub_21471ED54(*v17, v19);
        unint64_t v20 = sub_21477EA08(v18, v19);
        if (v21)
        {
          int64_t v22 = v11;
          uint64_t v23 = v5;
          uint64_t v24 = *(void *)(*(void *)(a4 + 56) + 8 * v20);
          uint64_t result = sub_2147201A0(v18, v19);
          BOOL v25 = v24 == 1;
          uint64_t v5 = v23;
          int64_t v11 = v22;
          uint64_t v7 = v29;
          if (v25)
          {
            *(unint64_t *)((char *)v27 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
            BOOL v14 = __OFADD__(v28++, 1);
            if (v14) {
              goto LABEL_32;
            }
          }
        }
        else
        {
          uint64_t result = sub_2147201A0(v18, v19);
        }
      }
    }
    BOOL v14 = __OFADD__(v6++, 1);
    if (v14)
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v6 >= v11) {
      return sub_214760F80(v27, a2, v28, v5);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    if (!v15) {
      break;
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
    if (*(void *)(a4 + 16)) {
      goto LABEL_19;
    }
  }
  int64_t v16 = v6 + 1;
  if (v6 + 1 >= v11) {
    return sub_214760F80(v27, a2, v28, v5);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v6 + 2;
  if (v6 + 2 >= v11) {
    return sub_214760F80(v27, a2, v28, v5);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v6 + 3;
  if (v6 + 3 >= v11) {
    return sub_214760F80(v27, a2, v28, v5);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_17:
    int64_t v6 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      return sub_214760F80(v27, a2, v28, v5);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_214764070(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  v15[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = a3((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2);
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = a3((char *)v13, v9, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x2166A8870](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_214764238@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9SEService11MemoryUsage_cor, a2);
}

uint64_t sub_214764244(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC9SEService11MemoryUsage_cor);
}

uint64_t sub_214764250@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9SEService11MemoryUsage_cod, a2);
}

uint64_t sub_21476425C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC9SEService11MemoryUsage_cod);
}

uint64_t sub_214764268@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices, a2);
}

uint64_t sub_214764274(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices);
}

uint64_t sub_214764280(void *a1, char a2, void *a3)
{
  uint64_t v5 = a1[2];
  swift_bridgeObjectRetain();
  if (!v5) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v7 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v8 = a1[4];
  sub_21471ED54(v8, v7);
  if (v7 == 26) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v9 = (void *)*a3;
  unint64_t v11 = sub_21477EA08(v8, v7);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      uint64_t v18 = (void *)*a3;
      if ((v10 & 1) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_21479064C();
      uint64_t v18 = (void *)*a3;
      if ((v15 & 1) == 0) {
        goto LABEL_14;
      }
    }
    goto LABEL_10;
  }
  sub_214791D00(v14, a2 & 1);
  unint64_t v16 = sub_21477EA08(v8, v7);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    uint64_t v18 = (void *)*a3;
    if ((v15 & 1) == 0)
    {
LABEL_14:
      v18[(v11 >> 6) + 8] |= 1 << v11;
      int64_t v22 = (uint64_t *)(v18[6] + 16 * v11);
      uint64_t *v22 = v8;
      v22[1] = v7;
      *(void *)(v18[7] + 8 * v11) = v6;
      uint64_t v23 = v18[2];
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (!v24)
      {
        v18[2] = v25;
        uint64_t v21 = v5 - 1;
        if (!v21) {
          return swift_bridgeObjectRelease();
        }
        goto LABEL_17;
      }
      goto LABEL_30;
    }
LABEL_10:
    uint64_t v19 = v6;
    uint64_t v20 = *(void *)(v18[7] + 8 * v11);
    sub_2147201A0(v8, v7);
    if (!__OFADD__(v20, v19))
    {
      *(void *)(v18[7] + 8 * v11) = v20 + v19;
      uint64_t v21 = v5 - 1;
      if (!v21) {
        return swift_bridgeObjectRelease();
      }
LABEL_17:
      for (unint64_t i = a1 + 9; ; i += 3)
      {
        unint64_t v32 = *(i - 1);
        uint64_t v31 = *i;
        uint64_t v33 = *(i - 2);
        sub_21471ED54(v33, v32);
        if (v32 == 26) {
          break;
        }
        uint64_t v34 = (void *)*a3;
        unint64_t v36 = sub_21477EA08(v33, v32);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        uint64_t v39 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_29;
        }
        char v40 = v35;
        if (v34[3] < v39)
        {
          sub_214791D00(v39, 1);
          unint64_t v41 = sub_21477EA08(v33, v32);
          if ((v40 & 1) != (v42 & 1)) {
            goto LABEL_32;
          }
          unint64_t v36 = v41;
        }
        uint64_t v43 = (void *)*a3;
        if (v40)
        {
          uint64_t v44 = *(void *)(v43[7] + 8 * v36);
          sub_2147201A0(v33, v32);
          if (__OFADD__(v44, v31)) {
            goto LABEL_31;
          }
          *(void *)(v43[7] + 8 * v36) = v44 + v31;
        }
        else
        {
          v43[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v28 = (uint64_t *)(v43[6] + 16 * v36);
          *uint64_t v28 = v33;
          v28[1] = v32;
          *(void *)(v43[7] + 8 * v36) = v31;
          uint64_t v29 = v43[2];
          BOOL v24 = __OFADD__(v29, 1);
          uint64_t v30 = v29 + 1;
          if (v24) {
            goto LABEL_30;
          }
          v43[2] = v30;
        }
        if (!--v21) {
          return swift_bridgeObjectRelease();
        }
      }
      return swift_bridgeObjectRelease();
    }
    goto LABEL_31;
  }
LABEL_32:
  uint64_t result = sub_2147AD6B8();
  __break(1u);
  return result;
}

uint64_t sub_214764538(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_21473450C();
  uint64_t result = sub_2147AD128();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_21471ED54(v5, *v4);
      sub_214761404(v7, v5, v6);
      sub_2147201A0(v7[0], v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_2147645D4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2147645E4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_26781BFA8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_2147ACE18();
  __swift_project_value_buffer(v7, (uint64_t)qword_26782C6E0);
  sub_21471ED54(a1, a2);
  swift_retain();
  sub_21471ED54(a1, a2);
  swift_retain();
  uint64_t v8 = sub_2147ACDF8();
  os_log_type_t v9 = sub_2147AD178();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v11;
    *(_DWORD *)uint64_t v10 = 136315906;
    sub_2147601CC(0xD000000000000019, 0x80000002147C03D0, &v17);
    sub_2147AD248();
    *(_WORD *)(v10 + 12) = 2080;
    sub_21471ED54(a1, a2);
    uint64_t v12 = sub_2147ACF78();
    sub_2147601CC(v12, v13, &v17);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_2147201A0(a1, a2);
    sub_2147201A0(a1, a2);
    *(_WORD *)(v10 + 22) = 2048;
    sub_2147AD248();
    *(_WORD *)(v10 + 32) = 2080;
    swift_beginAccess();
    if (*(unsigned char *)(a4 + 24))
    {
      unint64_t v14 = 0xE500000000000000;
      uint64_t v15 = 0x726F727245;
    }
    else
    {
      sub_2147344B8();
      uint64_t v15 = sub_2147AD278();
      unint64_t v14 = v16;
    }
    sub_2147601CC(v15, v14, &v17);
    sub_2147AD248();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2146ED000, v8, v9, "%s %s %ld => %s", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v11, -1, -1);
    MEMORY[0x2166A8870](v10, -1, -1);
  }
  else
  {
    sub_2147201A0(a1, a2);
    sub_2147201A0(a1, a2);

    swift_release_n();
  }
}

uint64_t sub_214764904()
{
  if (*(void *)(v0 + 24) >= 0x1BuLL) {
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_214764944(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (qword_26781BFA8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_2147ACE18();
  __swift_project_value_buffer(v6, (uint64_t)qword_26782C6E0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v7 = sub_2147ACDF8();
  os_log_type_t v8 = sub_2147AD178();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136315650;
    sub_2147601CC(0xD000000000000016, 0x80000002147C03B0, &v15);
    sub_2147AD248();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_2147601CC(a1, a2, &v15);
    sub_2147AD248();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2080;
    swift_beginAccess();
    unint64_t v11 = *(void *)(a3 + 24);
    if (v11 == 26)
    {
      unint64_t v12 = 0xE500000000000000;
      uint64_t v13 = 0x726F727245;
    }
    else
    {
      sub_21471ED54(*(void *)(a3 + 16), v11);
      uint64_t v13 = sub_2147ACF78();
      unint64_t v12 = v14;
    }
    sub_2147601CC(v13, v12, &v15);
    sub_2147AD248();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2146ED000, v7, v8, "%s %s => %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v10, -1, -1);
    MEMORY[0x2166A8870](v9, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
}

unint64_t sub_214764BEC()
{
  unint64_t result = qword_26781D360;
  if (!qword_26781D360)
  {
    sub_21472C6F4(255, (unint64_t *)&qword_26781C5B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D360);
  }
  return result;
}

uint64_t sub_214764C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_214764CC0()
{
  unint64_t result = qword_26781D5C8;
  if (!qword_26781D5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D5C8);
  }
  return result;
}

unint64_t sub_214764D18()
{
  unint64_t result = qword_26781D5D0;
  if (!qword_26781D5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D5D0);
  }
  return result;
}

unint64_t sub_214764D70()
{
  unint64_t result = qword_26781D5D8;
  if (!qword_26781D5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D5D8);
  }
  return result;
}

unint64_t sub_214764DC8()
{
  unint64_t result = qword_26781D5E0;
  if (!qword_26781D5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D5E0);
  }
  return result;
}

uint64_t sub_214764E1C()
{
  return type metadata accessor for SESnapshot();
}

uint64_t type metadata accessor for SESnapshot()
{
  uint64_t result = qword_26781D5F0;
  if (!qword_26781D5F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_214764E70()
{
  uint64_t result = sub_2147ACD88();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SESnapshot(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SESnapshot);
}

uint64_t dispatch thunk of SESnapshot.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t getEnumTagSinglePayload for SESnapshot.CanFitResult(unsigned __int16 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  unsigned int v2 = a2 + 0xFFFF;
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF) {
    unsigned int v3 = 2;
  }
  else {
    unsigned int v3 = 4;
  }
  if (v2 < 0xFF0000) {
    unsigned int v3 = 1;
  }
  if (v2 >= 0x10000) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  switch(v4)
  {
    case 1:
      uint64_t v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        return v4;
      }
      goto LABEL_17;
    case 2:
      uint64_t v4 = a1[1];
      if (!a1[1]) {
        return v4;
      }
      goto LABEL_17;
    case 3:
      __break(1u);
      JUMPOUT(0x214765010);
    case 4:
      uint64_t v4 = *(unsigned int *)(a1 + 1);
      if (v4) {
LABEL_17:
      }
        uint64_t v4 = (*a1 | (v4 << 16)) - 0xFFFF;
      break;
    default:
      return v4;
  }
  return v4;
}

uint64_t storeEnumTagSinglePayload for SESnapshot.CanFitResult(uint64_t result, int a2, int a3)
{
  unsigned int v3 = a3 + 0xFFFF;
  if ((a3 + 0xFFFF) <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2)
  {
    unsigned int v7 = ((a2 - 1) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 1;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        return result;
      case 2:
        *(_WORD *)(result + 2) = v7;
        return result;
      case 3:
        goto LABEL_21;
      case 4:
        *(_DWORD *)(result + 2) = v7;
        return result;
      default:
        return result;
    }
  }
  switch(v6)
  {
    case 1:
      *(unsigned char *)(result + 2) = 0;
      break;
    case 2:
      *(_WORD *)(result + 2) = 0;
      break;
    case 3:
LABEL_21:
      __break(1u);
      JUMPOUT(0x2147650E0);
    case 4:
      *(_DWORD *)(result + 2) = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214765108(unsigned __int8 *a1)
{
  if (a1[1]) {
    return (*a1 | (a1[1] << 8)) - 255;
  }
  else {
    return 0;
  }
}

unsigned char *sub_214765128(unsigned char *result, int a2)
{
  if (a2)
  {
    *uint64_t result = a2 - 1;
    result[1] = ((unsigned __int16)(a2 - 1) >> 8) + 1;
  }
  else
  {
    result[1] = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SESnapshot.CanFitResult()
{
  return &type metadata for SESnapshot.CanFitResult;
}

ValueMetadata *type metadata accessor for SESnapshot.CanFitResult.FailureReason()
{
  return &type metadata for SESnapshot.CanFitResult.FailureReason;
}

_OWORD *sub_21476516C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_21476517C(uint64_t a1)
{
  return sub_2147825CC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_214765188(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2147651EC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_214765238(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21476529C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_2147652E4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2147652FC(uint64_t a1)
{
  uint64_t v4 = v1 + 16;
  long long v8 = *(_OWORD *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 32) = v8;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v4;
  *(void *)(v6 + 8) = sub_214751D8C;
  return MEMORY[0x270FA2498](sub_214759F18, 0, 0);
}

uint64_t sub_2147653CC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214765418(uint64_t a1)
{
  return sub_2147828A0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_214765424(uint64_t a1)
{
  return sub_214782878(a1, v1[2], v1[3], v1[4]);
}

uint64_t dispatch thunk of SEStateInfoProvider.getSEState(with:seid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_21476555C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_21476555C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  long long v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t destroy for DefaultSEStateInfoProvider()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s9SEService13SERDataSourceVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SERDataSource(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SERDataSource(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SERDataSource(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SERDataSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultSEStateInfoProvider()
{
  return &type metadata for DefaultSEStateInfoProvider;
}

uint64_t sub_214765864(uint64_t a1, unint64_t a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      uint64_t v29 = MEMORY[0x263F8EE78];
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_21474D3BC(0, v7, 0);
      uint64_t v3 = v29;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = sub_2147ACB08();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = sub_2147ACB28();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = sub_2147ACB08();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = sub_2147ACB28();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781D720);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_2147B7590;
        *(void *)(v16 + 56) = MEMORY[0x263F8E778];
        *(void *)(v16 + 64) = MEMORY[0x263F8E7C0];
        *(unsigned char *)(v16 + 32) = v13;
        unint64_t v2 = sub_2147ACF68();
        uint64_t v18 = v17;
        uint64_t v29 = v3;
        unint64_t v20 = *(void *)(v3 + 16);
        unint64_t v19 = *(void *)(v3 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_21474D3BC(v19 > 1, v20 + 1, 1);
          uint64_t v3 = v29;
        }
        *(void *)(v3 + 16) = v20 + 1;
        uint64_t v21 = v3 + 16 * v20;
        *(void *)(v21 + 32) = v2;
        *(void *)(v21 + 40) = v18;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_214765C0C()
{
  MEMORY[0x2166A7350]();
  if (*(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_2147AD088();
  }
  sub_2147AD0A8();
  return sub_2147AD078();
}

double sub_214765C80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (uint64_t v6 = sub_21477EA80(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 32 * v6;
    sub_21472B428(v8, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

void *sub_214765CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_21477EA80(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void **)(*(void *)(a3 + 56) + 8 * v4);
  id v7 = v6;
  return v6;
}

uint64_t sub_214765D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_21478B73C(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v16;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_21477EA80(a2, a3);
    char v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
    {
      char v12 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = *v3;
      uint64_t v17 = *v4;
      uint64_t *v4 = 0x8000000000000000;
      if ((v12 & 1) == 0)
      {
        sub_214790E14();
        uint64_t v13 = v17;
      }
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void **)(*(void *)(v13 + 56) + 8 * v9);
      sub_21478B138(v9, v13);
      uint64_t *v4 = v13;

      swift_bridgeObjectRelease();
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_214765E84(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_214765EA8, v2, 0);
}

uint64_t sub_214765EA8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  unint64_t v2 = sub_2147739E8();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  long long v4 = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  char v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  uint64_t v6 = sub_21472C6F4(0, (unint64_t *)&unk_26781D590);
  *char v5 = v0;
  v5[1] = sub_214765FD8;
  return MEMORY[0x270FA2360](v0 + 16, v1, v2, 0x786F725068746977, 0xED0000293A5F2879, sub_214773A4C, v3, v6);
}

uint64_t sub_214765FD8()
{
  unint64_t v2 = (void *)*v1;
  v2[8] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[5];
    return MEMORY[0x270FA2498](sub_214766118, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = v2[2];
    char v5 = (uint64_t (*)(uint64_t))v2[1];
    return v5(v4);
  }
}

uint64_t sub_214766118()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21476617C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  unsigned char v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_2147661A0, v3, 0);
}

uint64_t sub_2147661A0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  unint64_t v2 = sub_2147739E8();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  long long v4 = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  char v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  uint64_t v6 = sub_2147ACD88();
  *char v5 = v0;
  v5[1] = sub_2147662B4;
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v7, v1, v2, 0x786F725068746977, 0xED0000293A5F2879, sub_214773A40, v3, v6);
}

uint64_t sub_2147662B4()
{
  unint64_t v2 = (void *)*v1;
  v2[8] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[5];
    return MEMORY[0x270FA2498](sub_214766118, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_2147663F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 1088) = a3;
  *(void *)(v4 + 1080) = a2;
  *(void *)(v4 + 1072) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781C620);
  *(void *)(v4 + 1096) = swift_task_alloc();
  uint64_t v5 = sub_2147ACD88();
  *(void *)(v4 + 1104) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v4 + 1112) = v6;
  *(void *)(v4 + 1120) = *(void *)(v6 + 64);
  *(void *)(v4 + 1128) = swift_task_alloc();
  *(void *)(v4 + 1136) = swift_task_alloc();
  *(void *)(v4 + 1144) = swift_task_alloc();
  uint64_t v7 = sub_2147ACE18();
  *(void *)(v4 + 1152) = v7;
  *(void *)(v4 + 1160) = *(void *)(v7 - 8);
  *(void *)(v4 + 1168) = swift_task_alloc();
  *(void *)(v4 + 1176) = swift_task_alloc();
  *(void *)(v4 + 1184) = swift_task_alloc();
  *(void *)(v4 + 1192) = swift_task_alloc();
  *(void *)(v4 + 1200) = swift_task_alloc();
  *(_OWORD *)(v4 + 1208) = *(_OWORD *)v3;
  *(void *)(v4 + 1224) = *(void *)(v3 + 16);
  return MEMORY[0x270FA2498](sub_2147665E4, 0, 0);
}

void sub_2147665E4()
{
  uint64_t v467 = v0;
  uint64_t v466 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 1072);
  *(void *)(v0 + 1040) = 0;
  id v2 = objc_msgSend(v1, sel_stateInformationWithoutFilteringWithError_, v0 + 1040);
  uint64_t v3 = *(void **)(v0 + 1040);
  uint64_t v4 = MEMORY[0x263F8EE58];
  if (!v2)
  {
    id v8 = v3;
    uint64_t v9 = (void *)sub_2147ACC48();

    swift_willThrow();
    goto LABEL_24;
  }
  uint64_t v5 = v2;
  uint64_t v6 = sub_2147AD058();
  id v7 = v3;

  if (*(void *)(v6 + 16))
  {
    sub_21472B428(v6 + 32, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
    uint64_t v17 = v0 + 16;
LABEL_23:
    sub_21472C730(v17, &qword_26781C4C8);
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6A8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    uint64_t v18 = *(void **)(v0 + 1072);
    *(void *)&long long v464 = 0;
    *((void *)&v464 + 1) = 0xE000000000000000;
    sub_2147AD348();
    *(void *)&long long v463 = 0;
    *((void *)&v463 + 1) = 0xE000000000000000;
    sub_2147ACFC8();
    *(void *)(v0 + 944) = 0;
    id v19 = objc_msgSend(v18, sel_stateInformationWithError_, v0 + 944);
    unint64_t v20 = *(void **)(v0 + 944);
    if (v19)
    {
      uint64_t v21 = v19;
      uint64_t v22 = sub_2147AD058();
      id v23 = v20;

      MEMORY[0x2166A7380](v22, v4 + 8);
      swift_bridgeObjectRelease();
      sub_2147ACFC8();
      swift_bridgeObjectRelease();
      uint64_t v24 = *((void *)&v463 + 1);
      sub_214729BF0();
      swift_allocError();
      *(void *)uint64_t v25 = v463;
      *(void *)(v25 + 8) = v24;
      *(unsigned char *)(v25 + 16) = 1;
    }
    else
    {
      id v26 = v20;
      swift_bridgeObjectRelease();
      sub_2147ACC48();
    }
LABEL_28:
    swift_willThrow();
    goto LABEL_29;
  }
  uint64_t v10 = v0 + 144;
  uint64_t v11 = *(void *)(v0 + 928);
  sub_214765C80(0x656E6961746E6F63, 0xEA00000000007372, v11, (_OWORD *)(v0 + 144));
  if (!*(void *)(v0 + 168)) {
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v10 = v0 + 208;
  uint64_t v12 = *(void *)(v0 + 920);
  *(void *)(v0 + 1232) = v12;
  sub_214765C80(0x736567616B636170, 0xE800000000000000, v11, (_OWORD *)(v0 + 208));
  if (!*(void *)(v0 + 232))
  {
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v17 = v10;
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_36;
  }
  uint64_t v13 = v0 + 272;
  uint64_t v14 = *(void *)(v0 + 936);
  sub_214765C80(0x6572617764726168, 0xEC00000065707954, v11, (_OWORD *)(v0 + 272));
  if (!*(void *)(v0 + 296))
  {
    swift_bridgeObjectRelease();
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v13;
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  uint64_t v13 = v0 + 336;
  uint64_t v15 = *(void *)(v0 + 976);
  sub_214765C80(0x6C62616C69617661, 0xEF79726F6D654D65, v11, (_OWORD *)(v0 + 336));
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 360)) {
    goto LABEL_34;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6B8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  *(void *)(v0 + 1240) = *(void *)(v0 + 1024);
  char v16 = 1;
  switch(v15)
  {
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_214729BF0();
      swift_allocError();
      *(void *)uint64_t v28 = 0xD000000000000013;
      *(void *)(v28 + 8) = 0x80000002147C0840;
      *(unsigned char *)(v28 + 16) = 0;
      goto LABEL_28;
    case 5:
      goto LABEL_40;
    case 6:
    case 7:
    case 8:
      char v16 = 2;
      goto LABEL_40;
    case 9:
      char v16 = 3;
      goto LABEL_40;
    default:
      char v16 = 5;
LABEL_40:
      v426 = (uint64_t *)(v0 + 1032);
      *(unsigned char *)(v0 + 1418) = v16;
      *(void *)(v0 + 1032) = MEMORY[0x263F8EE80];
      uint64_t v443 = sub_21472994C(v14);
      if (!v443)
      {
        swift_bridgeObjectRelease();
        char v368 = 0;
        goto LABEL_107;
      }
      char v29 = 0;
      unint64_t v30 = 0;
      uint64_t v423 = v0 + 432;
      uint64_t v421 = v0 + 648;
      unint64_t v413 = v0 + 1048;
      uint64_t v415 = v0 + 1056;
      v420 = (_OWORD *)(v0 + 48);
      uint64_t v31 = *(void *)(v0 + 1160);
      uint64_t v442 = v14 + 32;
      uint64_t v437 = v31 + 8;
      v438 = (void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
      uint64_t v440 = v14;
      uint64_t v441 = v12;
      break;
  }
LABEL_42:
  char v407 = v29;
  do
  {
    uint64_t v32 = v14;
    sub_21472616C(v30, 1, v14);
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_218;
    }
    uint64_t v33 = *(void *)(v442 + 8 * v30);
    unint64_t v456 = ++v30;
    uint64_t v34 = *(void *)(v33 + 16);
    swift_bridgeObjectRetain();
    uint64_t v457 = v33;
    if (!v34
      || (uint64_t v35 = sub_21477EA80(0x416567616B636170, 0xEA00000000006469), (v36 & 1) == 0)
      || (sub_21472B428(*(void *)(v33 + 56) + 32 * v35, v423), (swift_dynamicCast() & 1) == 0))
    {
      unint64_t v452 = v30;
      if (qword_26781BFB0 != -1) {
        swift_once();
      }
      uint64_t v43 = *(void *)(v0 + 1192);
      uint64_t v44 = *(void *)(v0 + 1152);
      uint64_t v45 = __swift_project_value_buffer(v44, (uint64_t)qword_26782C710);
      (*v438)(v43, v45, v44);
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v457;
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = sub_214772928;
      *(void *)(v47 + 24) = v46;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v48 = sub_2147ACDF8();
      os_log_type_t v450 = sub_2147AD178();
      uint64_t v49 = swift_allocObject();
      *(unsigned char *)(v49 + 16) = 32;
      uint64_t v50 = swift_allocObject();
      *(unsigned char *)(v50 + 16) = 8;
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = sub_214772934;
      *(void *)(v51 + 24) = v47;
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = sub_2147729D8;
      *(void *)(v52 + 24) = v51;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_2147B8430;
      *(void *)(v53 + 32) = sub_2147729C0;
      *(void *)(v53 + 40) = v49;
      *(void *)(v53 + 48) = sub_214773A60;
      *(void *)(v53 + 56) = v50;
      *(void *)(v53 + 64) = sub_2147729E0;
      *(void *)(v53 + 72) = v52;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      os_log_type_t v54 = v450;
      v449 = v48;
      BOOL v55 = os_log_type_enabled(v48, v54);
      uint64_t v56 = *(void *)(v0 + 1192);
      uint64_t v446 = *(void *)(v0 + 1152);
      if (v55)
      {
        uint64_t v432 = *(void *)(v0 + 1192);
        uint64_t v57 = swift_slowAlloc();
        uint64_t v427 = swift_slowAlloc();
        *(void *)&long long v464 = v427;
        *(_WORD *)uint64_t v57 = 258;
        *(unsigned char *)(v57 + 2) = 32;
        swift_release();
        *(unsigned char *)(v57 + 3) = 8;
        swift_release();
        swift_bridgeObjectRetain();
        uint64_t v58 = sub_2147ACEB8();
        unint64_t v60 = v59;
        swift_bridgeObjectRelease();
        *(void *)(v57 + 4) = sub_2147601CC(v58, v60, (uint64_t *)&v464);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2146ED000, v449, v54, "Invalid packageAid field for %s", (uint8_t *)v57, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2166A8870](v427, -1, -1);
        MEMORY[0x2166A8870](v57, -1, -1);

        (*(void (**)(uint64_t, uint64_t))v437)(v432, v446);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();

        (*(void (**)(uint64_t, uint64_t))v437)(v56, v446);
      }
      uint64_t v14 = v440;
      uint64_t v12 = v441;
      unint64_t v30 = v452;
      continue;
    }
    uint64_t v37 = *(void *)(v0 + 656);
    uint64_t v447 = *(void *)(v0 + 648);
    unint64_t v445 = v37;
    if (sub_2147AD008())
    {
      unint64_t v454 = v30;
      swift_bridgeObjectRelease();
      if (qword_26781BFB0 != -1) {
        swift_once();
      }
      uint64_t v108 = *(void *)(v0 + 1200);
      uint64_t v109 = *(void *)(v0 + 1152);
      uint64_t v110 = __swift_project_value_buffer(v109, (uint64_t)qword_26782C710);
      (*v438)(v108, v110, v109);
      uint64_t v111 = swift_allocObject();
      *(void *)(v111 + 16) = v447;
      *(void *)(v111 + 24) = v37;
      swift_bridgeObjectRetain();
      uint64_t v457 = sub_2147ACDF8();
      os_log_type_t v451 = sub_2147AD188();
      uint64_t v112 = swift_allocObject();
      *(unsigned char *)(v112 + 16) = 32;
      uint64_t v113 = swift_allocObject();
      *(unsigned char *)(v113 + 16) = 8;
      uint64_t v114 = swift_allocObject();
      *(void *)(v114 + 16) = sub_214773990;
      *(void *)(v114 + 24) = v111;
      uint64_t v115 = swift_allocObject();
      *(void *)(v115 + 16) = sub_214773A58;
      *(void *)(v115 + 24) = v114;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
      uint64_t v116 = swift_allocObject();
      *(_OWORD *)(v116 + 16) = xmmword_2147B8430;
      *(void *)(v116 + 32) = sub_214773A60;
      *(void *)(v116 + 40) = v112;
      *(void *)(v116 + 48) = sub_214773A60;
      *(void *)(v116 + 56) = v113;
      *(void *)(v116 + 64) = sub_214773A5C;
      *(void *)(v116 + 72) = v115;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      os_log_type_t v117 = v451;
      BOOL v118 = os_log_type_enabled((os_log_t)v457, v451);
      v449 = *(NSObject **)(v0 + 1200);
      uint64_t v434 = *(void *)(v0 + 1152);
      if (v118)
      {
        uint64_t v119 = swift_slowAlloc();
        uint64_t v429 = swift_slowAlloc();
        *(void *)&long long v464 = v429;
        *(_WORD *)uint64_t v119 = 258;
        *(unsigned char *)(v119 + 2) = 32;
        swift_release();
        *(unsigned char *)(v119 + 3) = 8;
        swift_release();
        swift_bridgeObjectRetain();
        *(void *)(v119 + 4) = sub_2147601CC(v447, v445, (uint64_t *)&v464);
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl(&dword_2146ED000, (os_log_t)v457, v117, "Skipping %s processing due to having PTA prefix", (uint8_t *)v119, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2166A8870](v429, -1, -1);
        MEMORY[0x2166A8870](v119, -1, -1);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }

      (*(void (**)(NSObject *, uint64_t))v437)(v449, v434);
      char v29 = 1;
      unint64_t v30 = v454;
      uint64_t v14 = v440;
      uint64_t v12 = v441;
      if (v456 == v443)
      {
        swift_bridgeObjectRelease();
        char v368 = 1;
        goto LABEL_107;
      }
      goto LABEL_42;
    }
    id v38 = objc_allocWithZone((Class)type metadata accessor for SEPackageDetails());
    swift_bridgeObjectRetain();
    id v39 = objc_msgSend(v38, sel_init);
    uint64_t v40 = *v426;
    if (v39)
    {
      uint64_t v41 = (uint64_t)v39;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v464 = v40;
      sub_21478B73C(v41, v447, v37, isUniquelyReferenced_nonNull_native);
      uint64_t *v426 = v464;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v61 = sub_21477EA80(v447, v37);
      char v63 = v62;
      swift_bridgeObjectRelease();
      if (v63)
      {
        char v64 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v464 = v40;
        if ((v64 & 1) == 0)
        {
          sub_214790E14();
          uint64_t v40 = v464;
        }
        swift_bridgeObjectRelease();
        uint64_t v65 = *(void **)(*(void *)(v40 + 56) + 8 * v61);
        sub_21478B138(v61, v40);
        uint64_t *v426 = v40;
        swift_bridgeObjectRelease();
        uint64_t v66 = v37;
        swift_bridgeObjectRelease();

        goto LABEL_62;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v66 = v37;
LABEL_62:
    if (*(void *)(v457 + 16) && (uint64_t v67 = sub_21477EA80(0x6941656C75646F6DLL, 0xEA00000000007364), (v68 & 1) != 0))
    {
      sub_21472B428(*(void *)(v457 + 56) + 32 * v67, (uint64_t)v420);
    }
    else
    {
      _OWORD *v420 = 0u;
      *(_OWORD *)(v0 + 64) = 0u;
    }
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 72))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
      uint64_t v14 = v32;
      if (swift_dynamicCast())
      {
        unint64_t v453 = v30;
        uint64_t v69 = *(void *)(v0 + 1216);
        uint64_t v70 = *(void *)(v0 + 1208);
        uint64_t v71 = *(void *)(v0 + 1048);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v72 = sub_214773140(v71, v70, v69);
        swift_bridgeObjectRelease();
        uint64_t v66 = v445;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v72) {

        }
        unint64_t v30 = v453;
        uint64_t v73 = 32;
        v410 = (objc_super *)sub_21472994C(v71);
        if (v410)
        {
          uint64_t v74 = 0;
          v412 = (objc_super *)(v71 + 32);
          uint64_t v408 = v71;
          do
          {
            sub_214726168(v74, 1, v71);
            v433 = (objc_super *)((char *)&v74->receiver + 1);
            if (__OFADD__(v74, 1))
            {
LABEL_306:
              __break(1u);
              goto LABEL_307;
            }
            uint64_t v75 = (uint64_t *)&v412[(void)v74];
            uint64_t v76 = v75[1];
            uint64_t v417 = *v75;
            uint64_t v77 = *(void *)(v0 + 1216);
            uint64_t v78 = *(void *)(v0 + 1208);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v428 = v76;
            swift_bridgeObjectRetain();
            uint64_t v79 = sub_21472618C((uint64_t)&unk_26C55EE08, v78, v77);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (sub_214725A7C(v79))
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_26781DCA0);
              unint64_t v80 = (void *)sub_2147AD4E8();
            }
            else
            {
              unint64_t v80 = (void *)MEMORY[0x263F8EE80];
            }
            *(void *)&long long v463 = v80;
            uint64_t v81 = sub_21472994C(v79);
            swift_bridgeObjectRetain_n();
            uint64_t v457 = v81;
            if (v81)
            {
              uint64_t v82 = 0;
              id v83 = (uint64_t *)(v79 + 48);
              v449 = v79;
              while (1)
              {
                sub_214726168(v82, 1, v79);
                uint64_t v84 = v82 + 1;
                if (__OFADD__(v82, 1)) {
                  break;
                }
                unint64_t v86 = *(v83 - 1);
                uint64_t v85 = *v83;
                uint64_t v87 = *(v83 - 2);
                sub_21471ED54(v87, v86);
                swift_bridgeObjectRetain();
                if (!v85) {
                  goto LABEL_89;
                }
                *(void *)(v0 + 616) = v87;
                *(void *)(v0 + 624) = v86;
                unint64_t v88 = sub_21477EA08(v87, v86);
                uint64_t v90 = v80[2];
                BOOL v91 = (v89 & 1) == 0;
                BOOL v92 = __OFADD__(v90, v91);
                uint64_t v93 = v90 + v91;
                if (v92) {
                  goto LABEL_294;
                }
                char v94 = v89;
                if (v80[3] < v93)
                {
                  sub_214791318(v93, 1);
                  unint64_t v80 = (void *)v463;
                  unint64_t v88 = sub_21477EA08(v87, v86);
                  if ((v94 & 1) != (v95 & 1))
                  {
LABEL_177:
                    sub_2147AD6B8();
                    return;
                  }
                }
                if (v94)
                {
                  v266 = (void *)swift_allocError();
                  swift_willThrow();
                  *(void *)(v0 + 992) = v266;
                  id v267 = v266;
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
                  if (swift_dynamicCast())
                  {
                    *(void *)&long long v464 = 0;
                    *((void *)&v464 + 1) = 0xE000000000000000;
                    sub_2147AD348();
                    uint64_t v268 = *((void *)&v464 + 1);
                    *(void *)(v0 + 792) = v464;
                    *(void *)(v0 + 800) = v268;
                    sub_2147ACFC8();
                    sub_2147AD3F8();
                    sub_2147ACFC8();
                    sub_2147AD4A8();
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_2147201A0(*(void *)(v0 + 616), *(void *)(v0 + 624));
                    swift_bridgeObjectRelease();

                    swift_unexpectedError();
                  }
                  return;
                }
                v80[(v88 >> 6) + 8] |= 1 << v88;
                uint64_t v96 = (uint64_t *)(v80[6] + 16 * v88);
                uint64_t *v96 = v87;
                v96[1] = v86;
                *(void *)(v80[7] + 8 * v88) = v85;
                uint64_t v97 = v80[2];
                BOOL v92 = __OFADD__(v97, 1);
                uint64_t v98 = v97 + 1;
                if (v92) {
                  goto LABEL_295;
                }
                v80[2] = v98;
                v83 += 3;
                ++v82;
                uint64_t v79 = (uint64_t)v449;
                if (v84 == v457) {
                  goto LABEL_89;
                }
              }
              __break(1u);
LABEL_294:
              __break(1u);
LABEL_295:
              __break(1u);
              v367 = *(void **)(v0 + 1304);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();

              goto LABEL_199;
            }
LABEL_89:
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRetain();
            sub_214720344((uint64_t)v80, v417, v428, (uint64_t *)&v464);
            swift_bridgeObjectRelease();
            swift_release();
            if (v465)
            {
              long long v99 = v464;
              swift_bridgeObjectRelease();
              uint64_t v100 = *v426;
              swift_bridgeObjectRetain();
              unint64_t v101 = (char *)sub_214765CE4(v447, v445, v100);
              swift_bridgeObjectRelease();
              uint64_t v14 = v440;
              uint64_t v12 = v441;
              unint64_t v30 = v453;
              uint64_t v71 = v408;
              if (v101)
              {
                uint64_t v102 = *(void *)&v101[OBJC_IVAR____TtC9SEService16SEPackageDetails_type];
                unint64_t v103 = *(void *)&v101[OBJC_IVAR____TtC9SEService16SEPackageDetails_type + 8];
                *(_OWORD *)&v101[OBJC_IVAR____TtC9SEService16SEPackageDetails_type] = v99;
                sub_21472C78C(v102, v103);
              }
              else
              {
                sub_2147201A0(v99, *((unint64_t *)&v99 + 1));
              }
            }
            else
            {
              uint64_t v14 = v440;
              uint64_t v12 = v441;
              unint64_t v30 = v453;
              uint64_t v71 = v408;
            }
            uint64_t v74 = v433;
            uint64_t v73 = 32;
            uint64_t v66 = v445;
          }
          while (v433 != v410);
        }
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_21472C730((uint64_t)v420, &qword_26781C4C8);
      uint64_t v14 = v32;
    }
    uint64_t v104 = *v426;
    if (*(void *)(*v426 + 16) && (uint64_t v105 = sub_21477EA80(v447, v66), (v106 & 1) != 0))
    {
      uint64_t v107 = *(id *)(*(void *)(v104 + 56) + 8 * v105);
      swift_bridgeObjectRelease();
      v107[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded] = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  while (v456 != v443);
  swift_bridgeObjectRelease();
  char v368 = v407;
LABEL_107:
  uint64_t v437 = v0 + 1416;
  *(unsigned char *)(v0 + 1419) = v368 & 1;
  uint64_t v120 = sub_21472994C(v12);
  *(void *)(v0 + 1248) = v120;
  if (v120)
  {
    uint64_t v121 = 0;
    v418 = (_OWORD *)(v0 + 400);
    uint64_t v73 = v0 + 664;
    v404 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 680);
    uint64_t v430 = v0 + 880;
    v435 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
    uint64_t v422 = v0 + 896;
    uint64_t v424 = v0 + 888;
    uint64_t v402 = v0 + 960;
    uint64_t v403 = v0 + 952;
    uint64_t v401 = v0 + 968;
    v400 = (long long *)(v0 + 744);
    uint64_t v414 = v0 + 1000;
    v416 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 664);
    uint64_t v409 = v0 + 1016;
    v411 = (objc_super *)(v0 + 1008);
    while (1)
    {
      uint64_t v124 = *(void *)(*(void *)(v0 + 1232) + 8 * v121 + 32);
      *(void *)(v0 + 1256) = v121 + 1;
      if (__OFADD__(v121, 1))
      {
        __break(1u);
        goto LABEL_306;
      }
      if (!*(void *)(v124 + 16))
      {
        swift_bridgeObjectRetain();
LABEL_195:
        swift_bridgeObjectRelease();
        goto LABEL_196;
      }
      swift_bridgeObjectRetain();
      uint64_t v125 = sub_21477EA80(0x416567616B636170, 0xEA00000000006469);
      if ((v126 & 1) == 0) {
        goto LABEL_195;
      }
      sub_21472B428(*(void *)(v124 + 56) + 32 * v125, v0 + 240);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_195;
      }
      uint64_t v458 = *(void *)(v0 + 640);
      if (!*(void *)(v124 + 16)
        || (unint64_t v127 = *(void *)(v0 + 632),
            uint64_t v128 = sub_21477EA80(0x6941656C75646F6DLL, 0xE900000000000064),
            (v129 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_196;
      }
      unint64_t v456 = v127;
      sub_21472B428(*(void *)(v124 + 56) + 32 * v128, v0 + 176);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_194;
      }
      uint64_t v73 = *(void *)(v0 + 600);
      *(void *)(v0 + 1264) = v73;
      uint64_t v130 = *(void **)(v0 + 608);
      *(void *)(v0 + 1272) = v130;
      if (!*(void *)(v124 + 16)) {
        goto LABEL_188;
      }
      uint64_t v131 = sub_21477EA80(0x694174656C707061, 0xE900000000000064);
      if ((v132 & 1) == 0) {
        goto LABEL_188;
      }
      sub_21472B428(*(void *)(v124 + 56) + 32 * v131, v0 + 80);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_194;
      }
      *(void *)(v0 + 1280) = *(void *)(v0 + 584);
      *(void *)(v0 + 1288) = *(void *)(v0 + 592);
      if (!*(void *)(v124 + 16)
        || (uint64_t v133 = sub_21477EA80(0x6C6379436566696CLL, 0xEE00657461745365), (v134 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_188:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_196:
        swift_bridgeObjectRelease();
        *(void *)&long long v464 = 0;
        *((void *)&v464 + 1) = 0xE000000000000000;
        sub_2147AD348();
        uint64_t v270 = sub_2147ACEB8();
        uint64_t v272 = v271;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v464 = v270;
        *((void *)&v464 + 1) = v272;
        sub_2147ACFC8();
        long long v273 = v464;
        sub_214729BF0();
        swift_allocError();
        *(_OWORD *)uint64_t v274 = v273;
        *(unsigned char *)(v274 + 16) = 1;
        swift_willThrow();
        goto LABEL_199;
      }
      sub_21472B428(*(void *)(v124 + 56) + 32 * v133, v0 + 112);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_194:
        swift_bridgeObjectRelease();
        goto LABEL_195;
      }
      *(void *)(v0 + 1296) = *(void *)(v0 + 1064);
      if (sub_2147AD008())
      {
        uint64_t v135 = *(void *)(v0 + 1184);
        uint64_t v136 = *(void *)(v0 + 1160);
        uint64_t v137 = *(void *)(v0 + 1152);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v138 = sub_2147713B4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v135, v138, v137);
        uint64_t v139 = swift_allocObject();
        *(void *)(v139 + 16) = v127;
        *(void *)(v139 + 24) = v458;
        uint64_t v140 = sub_2147ACDF8();
        os_log_type_t v141 = sub_2147AD188();
        uint64_t v142 = swift_allocObject();
        *(unsigned char *)(v142 + 16) = 32;
        uint64_t v143 = swift_allocObject();
        *(unsigned char *)(v143 + 16) = 8;
        uint64_t v144 = swift_allocObject();
        *(void *)(v144 + 16) = sub_214773AA8;
        *(void *)(v144 + 24) = v139;
        uint64_t v145 = swift_allocObject();
        *(void *)(v145 + 16) = sub_214773A58;
        *(void *)(v145 + 24) = v144;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
        uint64_t v146 = swift_allocObject();
        *(_OWORD *)(v146 + 16) = xmmword_2147B8430;
        *(void *)(v146 + 32) = sub_214773A60;
        *(void *)(v146 + 40) = v142;
        *(void *)(v146 + 48) = sub_214773A60;
        *(void *)(v146 + 56) = v143;
        *(void *)(v146 + 64) = sub_214773A5C;
        *(void *)(v146 + 72) = v145;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v140, v141))
        {
          v459 = v140;
          uint64_t v147 = (uint8_t *)sub_21475FE60();
          uint64_t v148 = swift_slowAlloc();
          *(void *)(v0 + 1008) = 0;
          uint64_t v395 = v148;
          *(void *)(v0 + 1016) = v148;
          *(_WORD *)uint64_t v147 = 258;
          *(void *)(v0 + 1000) = v147 + 2;
          *(void *)(v0 + 664) = sub_214773A60;
          *(void *)(v0 + 672) = v142;
          sub_21475FE68(v416, v414, (uint64_t)v411, v409);
          swift_release();
          *(void *)(v0 + 664) = sub_214773A60;
          *(void *)(v0 + 672) = v143;
          sub_21475FE68(v416, v414, (uint64_t)v411, v409);
          swift_release();
          *(void *)(v0 + 664) = sub_214773A5C;
          *(void *)(v0 + 672) = v145;
          sub_21475FE68(v416, v414, (uint64_t)v411, v409);
          swift_release();
          _os_log_impl(&dword_2146ED000, v459, v141, "Skipping %s processing due to having PTA prefix", v147, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2166A8870](v395, -1, -1);
          sub_21475FEA4();
        }
        uint64_t v122 = *(void *)(v0 + 1184);
        uint64_t v123 = *(void *)(v0 + 1160);
        uint64_t v73 = *(void *)(v0 + 1152);
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v122, v73);
        goto LABEL_110;
      }
      uint64_t v149 = *(void *)(v0 + 1224);
      uint64_t v150 = *(void *)(v0 + 1216);
      *(void *)(v0 + 488) = *(void *)(v0 + 1208);
      *(void *)(v0 + 496) = v150;
      *(void *)(v0 + 504) = v149;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v151._uint64_t countAndFlagsBits = v73;
      v151._object = v130;
      Swift::Bool v152 = SERDataSource.isSystemApplet(moduleAID:)(v151);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v152)
      {
LABEL_128:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_110;
      }
      sub_214765C80(0xD000000000000011, 0x80000002147C0760, v124, v418);
      uint64_t v153 = v458;
      if (*(void *)(v0 + 424))
      {
        uint64_t v154 = (_OWORD *)(v0 + 368);
        char v155 = swift_dynamicCast() ? *(unsigned char *)v437 : 0;
      }
      else
      {
        sub_21472C730((uint64_t)v418, &qword_26781C4C8);
        char v155 = 0;
        uint64_t v154 = (_OWORD *)(v0 + 368);
      }
      *(unsigned char *)(v0 + 1420) = v155;
      sub_214765C80(0x736E4979786F7270, 0xED000065636E6174, v124, v154);
      if (*(void *)(v0 + 392))
      {
        if swift_dynamicCast() && (*(unsigned char *)(v0 + 1417)) {
          goto LABEL_128;
        }
      }
      else
      {
        sub_21472C730((uint64_t)v154, &qword_26781C4C8);
      }
      uint64_t v156 = *v426;
      swift_bridgeObjectRetain();
      uint64_t v157 = v456;
      uint64_t v158 = sub_214765CE4(v456, v458, v156);
      swift_bridgeObjectRelease();

      if (!v158)
      {
        uint64_t v159 = *(void *)(v0 + 1176);
        uint64_t v160 = *(void *)(v0 + 1160);
        uint64_t v161 = *(void *)(v0 + 1152);
        uint64_t v162 = sub_2147713B4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16))(v159, v162, v161);
        uint64_t v163 = swift_allocObject();
        *(void *)(v163 + 16) = v456;
        *(void *)(v163 + 24) = v458;
        swift_bridgeObjectRetain();
        uint64_t v164 = sub_2147ACDF8();
        os_log_type_t v165 = sub_2147AD178();
        uint64_t v166 = swift_allocObject();
        *(unsigned char *)(v166 + 16) = 32;
        uint64_t v167 = swift_allocObject();
        *(unsigned char *)(v167 + 16) = 8;
        uint64_t v168 = swift_allocObject();
        *(void *)(v168 + 16) = sub_214773AA8;
        *(void *)(v168 + 24) = v163;
        uint64_t v169 = swift_allocObject();
        *(void *)(v169 + 16) = sub_214773A58;
        *(void *)(v169 + 24) = v168;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
        uint64_t v170 = swift_allocObject();
        *(_OWORD *)(v170 + 16) = xmmword_2147B8430;
        *(void *)(v170 + 32) = sub_214773A60;
        *(void *)(v170 + 40) = v166;
        *(void *)(v170 + 48) = sub_214773A60;
        *(void *)(v170 + 56) = v167;
        *(void *)(v170 + 64) = sub_214773A5C;
        *(void *)(v170 + 72) = v169;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_type_t v396 = v165;
        buf = (uint8_t *)v164;
        if (os_log_type_enabled(v164, v165))
        {
          uint64_t v171 = (uint8_t *)sub_21475FE60();
          uint64_t v172 = swift_slowAlloc();
          *(void *)(v0 + 960) = 0;
          *(void *)(v0 + 968) = v172;
          *(_WORD *)uint64_t v171 = 258;
          *(void *)(v0 + 952) = v171 + 2;
          *(void *)(v0 + 680) = sub_214773A60;
          *(void *)(v0 + 688) = v166;
          sub_21475FE68(v404, v403, v402, v401);
          swift_release();
          *(void *)(v0 + 680) = sub_214773A60;
          *(void *)(v0 + 688) = v167;
          sub_21475FE68(v404, v403, v402, v401);
          swift_release();
          *(void *)(v0 + 680) = sub_214773A5C;
          *(void *)(v0 + 688) = v169;
          sub_21475FE68(v404, v403, v402, v401);
          swift_release();
          _os_log_impl(&dword_2146ED000, (os_log_t)buf, v396, "Adding %s to dictionary", v171, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2166A8870](v172, -1, -1);
          sub_21475FEA4();
        }
        uint64_t v173 = *(void *)(v0 + 1176);
        uint64_t v174 = *(void *)(v0 + 1160);
        uint64_t v175 = *(void *)(v0 + 1152);
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v173, v175);
        type metadata accessor for SEPackageDetails();
        uint64_t v153 = v458;
        swift_bridgeObjectRetain();
        id v176 = sub_2147483A8();
        uint64_t v157 = v456;
        sub_214765D2C((uint64_t)v176, v456, v458);
        uint64_t v156 = *v426;
      }
      uint64_t v177 = sub_214765CE4(v157, v153, v156);
      *(void *)(v0 + 1304) = v177;
      swift_bridgeObjectRelease();
      if (!v177) {
        goto LABEL_330;
      }
      uint64_t v178 = swift_allocObject();
      *(void *)(v0 + 1312) = v178;
      *(_OWORD *)(v178 + 16) = xmmword_2147B20F0;
      sub_214765C80(0xD000000000000011, 0x80000002147C0780, v124, (_OWORD *)(v0 + 304));
      swift_bridgeObjectRelease();
      if (!*(void *)(v0 + 328)) {
        break;
      }
      if (swift_dynamicCast())
      {
        uint64_t v179 = sub_214773324(*(void *)(v0 + 696), *(void *)(v0 + 704));
        *(void *)(v0 + 1320) = v179;
        *(void *)(v0 + 1328) = v180;
        if (v180 >> 60 != 15)
        {
          uint64_t v181 = v179;
          unint64_t v182 = v180;
          uint64_t v183 = *(void *)(v0 + 1112);
          uint64_t v184 = *(void *)(v0 + 1104);
          uint64_t v185 = *(void *)(v0 + 1096);
          sub_21472BBA4(v179, v180);
          sub_214771418(v181, v182, v185);
          uint64_t v186 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v183 + 48);
          uint64_t v157 = v183 + 48;
          if (v186(v185, 1, v184) != 1)
          {
            uint64_t v371 = *(void *)(v0 + 1144);
            uint64_t v372 = *(void *)(v0 + 1112);
            uint64_t v373 = *(void *)(v0 + 1104);
            uint64_t v374 = *(void *)(v0 + 1096);
            v375 = *(void (**)(uint64_t, uint64_t, uint64_t))(v372 + 32);
            *(void *)(v0 + 1336) = v375;
            *(void *)(v0 + 1344) = (v372 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
            v375(v371, v374, v373);
            *(void *)(v0 + 1352) = sub_214750CDC();
            uint64_t v376 = swift_allocObject();
            *(void *)(v0 + 1360) = v376;
            *(void *)(v376 + 16) = v181;
            *(void *)(v376 + 24) = v182;
            sub_21472BBA4(v181, v182);
            uint64_t v377 = dword_26781D6E8;
            v378 = (void *)swift_task_alloc();
            *(void *)(v0 + 1368) = v378;
            void *v378 = v0;
            v378[1] = sub_21476AA98;
            ((void (*)(uint64_t, uint64_t))((char *)&dword_26781D6E8 + v377))((uint64_t)&unk_26781D6E0, v376);
            return;
          }
          uint64_t v187 = *(void *)(v0 + 1096);
          sub_21474B19C(v181, v182);
          uint64_t v188 = v187;
          uint64_t v189 = (uint64_t *)&unk_26781C620;
          goto LABEL_150;
        }
      }
LABEL_151:
      uint64_t v190 = *(void *)(v0 + 1312);
      swift_beginAccess();
      if (*(void *)(v190 + 24) == 26)
      {
        uint64_t v191 = *(void *)(v0 + 1272);
        uint64_t v192 = *(void *)(v0 + 1264);
        uint64_t v193 = *(void *)(v0 + 1224);
        uint64_t v194 = *(void *)(v0 + 1216);
        *(void *)(v0 + 536) = *(void *)(v0 + 1208);
        *(void *)(v0 + 544) = v194;
        *(void *)(v0 + 552) = v193;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        CredentialType.init(moduleAID:dataSource:)(v192, v191, (uint64_t *)(v0 + 536), v400);
        uint64_t v195 = *(void *)(v0 + 1312);
        uint64_t v196 = *(void *)(v195 + 16);
        unint64_t v197 = *(void *)(v195 + 24);
        *(_OWORD *)(v195 + 16) = *v400;
        sub_21472C78C(v196, v197);
      }
      uint64_t v198 = *(void *)(v0 + 1312);
      v199 = (uint64_t *)(*(void *)(v0 + 1304) + OBJC_IVAR____TtC9SEService16SEPackageDetails_type);
      uint64_t v201 = *v199;
      unint64_t v200 = v199[1];
      uint64_t v73 = *(void *)(v198 + 16);
      unint64_t v202 = *(void *)(v198 + 24);
      if (v200 == 26)
      {
        uint64_t *v199 = v73;
        v199[1] = v202;
        sub_214773278(v73, v202);
        sub_21472C78C(v201, 0x1AuLL);
        goto LABEL_161;
      }
      *(void *)(v0 + 712) = v201;
      *(void *)(v0 + 720) = v200;
      if (v202 == 26)
      {
        sub_21471ED54(v201, v200);
        sub_21471ED54(v201, v200);
        sub_2147201A0(v201, v200);
        sub_21472C78C(v201, v200);
        sub_21472C78C(v73, 0x1AuLL);
      }
      else
      {
        *(void *)(v0 + 760) = v73;
        *(void *)(v0 + 768) = v202;
        sub_214773278(v201, v200);
        sub_214773278(v201, v200);
        uint64_t v73 = _s9SEService14CredentialTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)(v0 + 712), (uint64_t *)(v0 + 760));
        sub_2147201A0(*(void *)(v0 + 712), *(void *)(v0 + 720));
        sub_21472C78C(v201, v200);
        if (v73) {
          goto LABEL_161;
        }
      }
      uint64_t v393 = *(void *)(v0 + 1312);
      v203 = *(void **)(v0 + 1304);
      uint64_t v204 = *(void *)(v0 + 1288);
      uint64_t v205 = *(void *)(v0 + 1280);
      uint64_t v206 = *(void *)(v0 + 1168);
      uint64_t v207 = *(void *)(v0 + 1160);
      uint64_t v208 = *(void *)(v0 + 1152);
      uint64_t v209 = sub_2147713B4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v206, v209, v208);
      uint64_t v210 = swift_allocObject();
      *(void *)(v210 + 16) = v205;
      *(void *)(v210 + 24) = v204;
      uint64_t v211 = swift_allocObject();
      *(void *)(v211 + 16) = v203;
      swift_bridgeObjectRetain();
      id v212 = v203;
      swift_retain();
      oslog = sub_2147ACDF8();
      os_log_type_t v391 = sub_2147AD198();
      uint64_t v460 = swift_allocObject();
      *(unsigned char *)(v460 + 16) = 32;
      uint64_t v213 = swift_allocObject();
      *(unsigned char *)(v213 + 16) = 8;
      uint64_t v214 = v213;
      uint64_t v215 = swift_allocObject();
      *(void *)(v215 + 16) = sub_214773AA8;
      *(void *)(v215 + 24) = v210;
      uint64_t v216 = swift_allocObject();
      *(void *)(v216 + 16) = sub_214773A58;
      *(void *)(v216 + 24) = v215;
      uint64_t v217 = v216;
      unint64_t v456 = v216;
      bufa = (uint8_t *)swift_allocObject();
      bufa[16] = 32;
      uint64_t v397 = swift_allocObject();
      *(unsigned char *)(v397 + 16) = 8;
      uint64_t v218 = swift_allocObject();
      *(void *)(v218 + 16) = sub_214772A60;
      *(void *)(v218 + 24) = v211;
      uint64_t v219 = swift_allocObject();
      *(void *)(v219 + 16) = sub_214773A58;
      *(void *)(v219 + 24) = v218;
      uint64_t v220 = swift_allocObject();
      *(unsigned char *)(v220 + 16) = 32;
      uint64_t v221 = swift_allocObject();
      *(unsigned char *)(v221 + 16) = 8;
      uint64_t v222 = swift_allocObject();
      *(void *)(v222 + 16) = sub_214772A68;
      *(void *)(v222 + 24) = v393;
      uint64_t v223 = swift_allocObject();
      *(void *)(v223 + 16) = sub_214773A58;
      *(void *)(v223 + 24) = v222;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
      uint64_t v224 = swift_allocObject();
      *(_OWORD *)(v224 + 16) = xmmword_2147B8440;
      *(void *)(v224 + 32) = sub_214773A60;
      *(void *)(v224 + 40) = v460;
      *(void *)(v224 + 48) = sub_214773A60;
      uint64_t v225 = v214;
      *(void *)(v224 + 56) = v214;
      *(void *)(v224 + 64) = sub_214773A5C;
      *(void *)(v224 + 72) = v217;
      *(void *)(v224 + 80) = sub_214773A60;
      *(void *)(v224 + 88) = bufa;
      *(void *)(v224 + 96) = sub_214773A60;
      *(void *)(v224 + 104) = v397;
      *(void *)(v224 + 112) = sub_214773A5C;
      *(void *)(v224 + 120) = v219;
      *(void *)(v224 + 128) = sub_214773A60;
      *(void *)(v224 + 136) = v220;
      *(void *)(v224 + 144) = sub_214773A60;
      *(void *)(v224 + 152) = v221;
      *(void *)(v224 + 160) = sub_214773A5C;
      *(void *)(v224 + 168) = v223;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v392 = v221;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(oslog, v391))
      {
        v226 = (uint8_t *)sub_21475FE60();
        uint64_t v227 = swift_slowAlloc();
        *(void *)(v0 + 888) = 0;
        *(void *)(v0 + 896) = v227;
        *(_WORD *)v226 = 770;
        *(void *)(v0 + 880) = v226 + 2;
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = v460;
        sub_21475FE68(v435, v430, v424, v422);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = v225;
        sub_21475FE68(v435, v430, v424, v422);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A5C;
        *(void *)(v0 + 784) = v456;
        sub_21475FE68(v435, v430, v424, v422);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = bufa;
        sub_21475FE68(v435, v430, v424, v422);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = v397;
        sub_21475FE68(v435, v430, v424, v422);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A5C;
        *(void *)(v0 + 784) = v219;
        sub_21475FE68(v435, v430, v424, v422);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = v220;
        sub_21475FE68(v435, v430, v424, v422);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = v392;
        sub_21475FE68(v435, v430, v424, v422);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A5C;
        *(void *)(v0 + 784) = v223;
        sub_21475FE68(v435, v430, v424, v422);
        swift_release();
        _os_log_impl(&dword_2146ED000, oslog, v391, "Type mismatch for %s: %s && %s", v226, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2166A8870](v227, -1, -1);
        sub_21475FEA4();
      }
      uint64_t v73 = *(void *)(v0 + 1168);
      uint64_t v228 = *(void *)(v0 + 1160);
      uint64_t v157 = *(void *)(v0 + 1152);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v73, v157);
LABEL_161:
      if (*(unsigned char *)(v0 + 1420) == 1)
      {
        uint64_t v229 = *(void *)(v0 + 1304);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v230 = *(void *)(v229 + OBJC_IVAR____TtC9SEService16SEPackageDetails_containers);
        BOOL v92 = __OFADD__(v230, 1);
        uint64_t v231 = v230 + 1;
        if (v92) {
          goto LABEL_315;
        }
        v232 = *(void **)(v0 + 1304);
        *(void *)(v229 + OBJC_IVAR____TtC9SEService16SEPackageDetails_containers) = v231;

        swift_release();
      }
      else
      {
        v233 = *(void **)(v0 + 1304);
        uint64_t v234 = *(void *)(v0 + 1296);
        uint64_t v235 = *(void *)(v0 + 1288);
        uint64_t v236 = *(void *)(v0 + 1280);
        uint64_t v237 = *(void *)(v0 + 1272);
        uint64_t v238 = *(void *)(v0 + 1264);
        v239 = (objc_class *)type metadata accessor for SEApplet();
        v240 = (char *)objc_allocWithZone(v239);
        v241 = &v240[OBJC_IVAR____TtC9SEService8SEApplet_identifier];
        *(void *)v241 = v236;
        *((void *)v241 + 1) = v235;
        v242 = &v240[OBJC_IVAR____TtC9SEService8SEApplet_moduleIdentifier];
        *(void *)v242 = v238;
        *((void *)v242 + 1) = v237;
        uint64_t v243 = sub_21472F12C(v234);
        uint64_t v245 = 7;
        if ((v244 & 1) == 0) {
          uint64_t v245 = v243;
        }
        *(void *)&v240[OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState] = v245;
        *(void *)(v0 + 728) = v240;
        *(void *)(v0 + 736) = v239;
        id v246 = objc_msgSendSuper2((objc_super *)(v0 + 728), sel_init);
        uint64_t v73 = (uint64_t)v233 + OBJC_IVAR____TtC9SEService16SEPackageDetails_instances;
        swift_beginAccess();
        id v247 = v246;
        sub_214765C0C();
        swift_endAccess();

        swift_release();
      }
LABEL_110:
      uint64_t v121 = *(void *)(v0 + 1256);
      if (v121 == *(void *)(v0 + 1248)) {
        goto LABEL_167;
      }
    }
    uint64_t v188 = v0 + 304;
    uint64_t v189 = &qword_26781C4C8;
LABEL_150:
    sub_21472C730(v188, v189);
    goto LABEL_151;
  }
LABEL_167:
  v248 = *(void **)(v0 + 1072);
  swift_bridgeObjectRelease();
  v249 = (void *)sub_2147ACF38();
  id v250 = SESEndPointListWithSession(v248, v249, 0);

  if (!v250)
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v464 = 0;
    *((void *)&v464 + 1) = 0xE000000000000000;
    sub_2147AD348();
    swift_bridgeObjectRelease();
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v269 = 0xD000000000000018;
    *(void *)(v269 + 8) = 0x80000002147C07A0;
    *(unsigned char *)(v269 + 16) = 0;
    swift_willThrow();
    goto LABEL_199;
  }
  uint64_t v251 = *(void *)(v0 + 1224);
  uint64_t v252 = *(void *)(v0 + 1216);
  uint64_t v253 = *(void *)(v0 + 1208);
  sub_21472C6F4(0, &qword_26781D6C8);
  uint64_t v254 = sub_2147AD058();

  *(void *)&long long v464 = v253;
  *((void *)&v464 + 1) = v252;
  uint64_t v465 = v251;
  long long v463 = xmmword_2147B3E70;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v255 = SERDataSource.getNameInfo(type:for:)((uint64_t *)&v463);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v255)
  {
LABEL_198:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v275 = 0xD000000000000016;
    *(void *)(v275 + 8) = 0x80000002147C07C0;
    *(unsigned char *)(v275 + 16) = 0;
    swift_willThrow();
    goto LABEL_199;
  }
  if (!sub_21472994C(v255)) {
    goto LABEL_197;
  }
  uint64_t v256 = *(void *)(v0 + 1224);
  uint64_t v257 = *(void *)(v0 + 1216);
  uint64_t v258 = *(void *)(v0 + 1208);
  sub_214726168(0, 1, v255);
  uint64_t v259 = *(void *)(v255 + 40);
  uint64_t v441 = *(void *)(v255 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&long long v464 = v258;
  *((void *)&v464 + 1) = v257;
  uint64_t v465 = v256;
  long long v463 = xmmword_2147B8450;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v260 = SERDataSource.getNameInfo(type:for:)((uint64_t *)&v463);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v260)
  {
LABEL_197:
    swift_bridgeObjectRelease();
    goto LABEL_198;
  }
  uint64_t v442 = v259;
  uint64_t v455 = v254;
  if (!sub_21472994C(v260))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_198;
  }
  uint64_t v157 = *(void *)(v0 + 1216);
  uint64_t v261 = *(void *)(v0 + 1208);
  sub_214726168(0, 1, v260);
  uint64_t v421 = *(void *)(v260 + 32);
  uint64_t v423 = *(void *)(v260 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D248);
  uint64_t v262 = swift_allocObject();
  *(_OWORD *)(v262 + 16) = xmmword_2147B8460;
  strcpy((char *)(v262 + 32), "COPERNICUSHOME");
  *(unsigned char *)(v262 + 47) = -18;
  strcpy((char *)(v262 + 48), "COPERNICUSCAR");
  *(_WORD *)(v262 + 62) = -4864;
  unint64_t v413 = (unint64_t)"Could not get PTA info";
  *(void *)(v262 + 64) = 0xD000000000000010;
  *(void *)(v262 + 72) = 0x80000002147C07E0;
  *(void *)(v262 + 80) = 0x43494E5245504F43;
  *(void *)(v262 + 88) = 0xEF4F52494C415355;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v263 = sub_214772AD0(v262, v261, v157);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v264 = sub_21472994C(v263);
  uint64_t v457 = MEMORY[0x263F8EE80];
  if (v264)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781DCB0);
    uint64_t v265 = sub_2147AD4E8();
  }
  else
  {
    uint64_t v265 = MEMORY[0x263F8EE80];
  }
  *(void *)&long long v464 = v265;
  v276 = (void *)swift_bridgeObjectRetain();
  sub_21477255C(v276, 1, &v464);
  swift_bridgeObjectRelease();
  uint64_t v415 = v464;
  *(void *)&long long v464 = MEMORY[0x263F8EE80];
  unint64_t v277 = swift_bridgeObjectRetain();
  v449 = sub_214729948(v277);
  if (v449)
  {
    uint64_t v278 = 0;
    uint64_t v279 = v455;
    unint64_t v280 = v455 & 0xC000000000000001;
    uint64_t v457 = MEMORY[0x263F8EE80];
    v281 = (SEL *)&property descriptor for Reservation.type;
    while (1)
    {
      id v284 = v280 ? (id)MEMORY[0x2166A7680](v278) : *(id *)(v279 + 8 * v278 + 32);
      v285 = (v278 + 1);
      if (__OFADD__(v278, 1)) {
        break;
      }
      unint64_t v456 = (unint64_t)v284;
      id v286 = [v284 v281[180]];
      uint64_t v287 = sub_2147ACCD8();
      unint64_t v289 = v288;

      v290 = (void *)v457;
      uint64_t v157 = sub_21477ECD4(v287, v289);
      uint64_t v292 = *(void *)(v457 + 16);
      BOOL v293 = (v291 & 1) == 0;
      uint64_t v294 = v292 + v293;
      if (__OFADD__(v292, v293)) {
        goto LABEL_314;
      }
      char v295 = v291;
      if (*(void *)(v457 + 24) < v294)
      {
        uint64_t v461 = v278;
        v296 = (v278 + 1);
        v297 = v281;
        unint64_t v298 = v280;
        sub_214792930(v294, 1);
        v299 = (void *)v464;
        uint64_t v300 = sub_21477ECD4(v287, v289);
        if ((v295 & 1) != (v301 & 1)) {
          goto LABEL_177;
        }
        uint64_t v157 = v300;
        v290 = v299;
        unint64_t v280 = v298;
        v281 = v297;
        v285 = v296;
        uint64_t v278 = v461;
      }
      uint64_t v457 = (uint64_t)v290;
      if (v295)
      {
        uint64_t v282 = sub_21472BBFC(v287, v289);
        v283 = (void *)(v290[7] + 8 * v157);
        MEMORY[0x2166A7350](v282);
        sub_214772530(*(void *)((*v283 & 0xFFFFFFFFFFFFFF8) + 0x10));
        sub_2147AD0A8();
        sub_2147AD078();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6D0);
        uint64_t v302 = swift_allocObject();
        *(_OWORD *)(v302 + 16) = xmmword_2147B8470;
        *(void *)(v302 + 32) = v456;
        *(void *)&long long v463 = v302;
        sub_2147AD078();
        uint64_t v303 = v463;
        v290[((unint64_t)v157 >> 6) + 8] |= 1 << v157;
        v304 = (uint64_t *)(v290[6] + 16 * v157);
        uint64_t *v304 = v287;
        v304[1] = v289;
        *(void *)(v290[7] + 8 * v157) = v303;
        uint64_t v305 = v290[2];
        BOOL v92 = __OFADD__(v305, 1);
        uint64_t v306 = v305 + 1;
        if (v92) {
          goto LABEL_316;
        }
        v290[2] = v306;
      }
      ++v278;
      uint64_t v279 = v455;
      if (v285 == v449) {
        goto LABEL_218;
      }
    }
    __break(1u);
LABEL_314:
    __break(1u);
LABEL_315:
    __break(1u);
LABEL_316:
    __break(1u);
LABEL_317:
    __break(1u);
LABEL_318:
    __break(1u);
LABEL_319:
    __break(1u);
LABEL_320:
    __break(1u);
LABEL_321:
    __break(1u);
LABEL_322:
    __break(1u);
LABEL_323:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&long long v464 = 0;
    *((void *)&v464 + 1) = 0xE000000000000000;
    sub_2147AD348();
    sub_2147AD648();
    sub_21471F124();
    sub_2147AD648();
    long long v389 = v464;
    sub_214729BF0();
    swift_allocError();
    *(_OWORD *)uint64_t v390 = v389;
    *(unsigned char *)(v390 + 16) = 1;
    swift_willThrow();
    sub_21472BBFC(v157, v456);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_298:
    swift_release();
    goto LABEL_199;
  }
LABEL_218:
  swift_bridgeObjectRelease();
  uint64_t v73 = 0;
  int64_t v436 = 0;
  uint64_t v307 = *(void *)(v457 + 64);
  uint64_t v405 = v457 + 64;
  uint64_t v308 = -1;
  uint64_t v309 = -1 << *(unsigned char *)(v457 + 32);
  if (-v309 < 64) {
    uint64_t v308 = ~(-1 << -(char)v309);
  }
  unint64_t v439 = v308 & v307;
  int64_t v406 = (unint64_t)(63 - v309) >> 6;
  if ((v308 & v307) == 0) {
    goto LABEL_222;
  }
  while (2)
  {
    unint64_t v310 = __clz(__rbit64(v439));
    v439 &= v439 - 1;
    unint64_t v311 = v310 | (v436 << 6);
LABEL_236:
    v315 = (uint64_t *)(*(void *)(v457 + 48) + 16 * v311);
    uint64_t v157 = *v315;
    unint64_t v316 = v315[1];
    unint64_t v317 = *(void *)(*(void *)(v457 + 56) + 8 * v311);
    sub_21472BBA4(*v315, v316);
    sub_21472BBA4(v157, v316);
    unint64_t v425 = v317;
    swift_bridgeObjectRetain();
    uint64_t v448 = sub_214772E40(v415, v157, v316);
    uint64_t v319 = v318;
    unint64_t v456 = v316;
    sub_21472BBFC(v157, v316);
    if (!v319)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)&long long v464 = 0;
      *((void *)&v464 + 1) = 0xE000000000000000;
      sub_2147AD348();
      swift_bridgeObjectRelease();
      strcpy((char *)&v464, "Invalid AID ");
      BYTE13(v464) = 0;
      HIWORD(v464) = -5120;
      *(void *)(v0 + 984) = sub_214765864(v157, v316);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
      sub_2147271C4((unint64_t *)&qword_26781D4F0, &qword_26781D4E8);
      sub_2147ACF18();
      swift_bridgeObjectRelease();
      sub_2147ACFC8();
      swift_bridgeObjectRelease();
      sub_2147ACFC8();
      long long v369 = v464;
      sub_214729BF0();
      swift_allocError();
      *(_OWORD *)uint64_t v370 = v369;
      *(unsigned char *)(v370 + 16) = 1;
      swift_willThrow();
      sub_21472BBFC(v157, v316);
      goto LABEL_298;
    }
    BOOL v320 = v448 == 0x43494E5245504F43 && v319 == 0xEF4F52494C415355;
    uint64_t v321 = v423;
    uint64_t v431 = v421;
    if (!v320)
    {
      char v322 = sub_2147AD668();
      uint64_t v321 = v423;
      uint64_t v431 = v421;
      if ((v322 & 1) == 0)
      {
        BOOL v323 = v448 == 0x43494E5245504F43 && v319 == 0xEE00454D4F485355;
        uint64_t v321 = v442;
        uint64_t v431 = v441;
        if (!v323)
        {
          char v324 = sub_2147AD668();
          BOOL v325 = v448 == 0x43494E5245504F43 && v319 == 0xED00005241435355;
          BOOL v326 = v325;
          uint64_t v321 = v442;
          uint64_t v431 = v441;
          if ((v324 & 1) == 0)
          {
            uint64_t v321 = v442;
            uint64_t v431 = v441;
            if (!v326)
            {
              char v327 = sub_2147AD668();
              uint64_t v321 = v442;
              uint64_t v431 = v441;
              if ((v327 & 1) == 0)
              {
                if (v448 != 0xD000000000000010 || (uint64_t v321 = v442, v431 = v441, v319 != (v413 | 0x8000000000000000)))
                {
                  char v328 = sub_2147AD668();
                  uint64_t v321 = v442;
                  uint64_t v431 = v441;
                  if ((v328 & 1) == 0) {
                    goto LABEL_323;
                  }
                }
              }
            }
          }
        }
      }
    }
    unint64_t v329 = v316 >> 62;
    uint64_t v419 = v321;
    swift_bridgeObjectRetain();
    switch(v316 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v157), v157)) {
          goto LABEL_326;
        }
        int64_t v330 = HIDWORD(v157) - (int)v157;
LABEL_263:
        if (v330)
        {
          *(void *)&long long v463 = sub_21474D0F8();
          sub_21474D104(v330);
          if (!v329)
          {
            if ((v330 & 0x8000000000000000) == 0)
            {
              uint64_t v333 = 0;
              goto LABEL_272;
            }
            goto LABEL_328;
          }
          if (v329 == 1) {
            uint64_t v333 = (int)v157;
          }
          else {
            uint64_t v333 = *(void *)(v157 + 16);
          }
          if (v330 < 0) {
            goto LABEL_325;
          }
          do
          {
LABEL_272:
            if (v329)
            {
              if (v329 == 1)
              {
                if (v333 < (int)v157 || v333 >= v157 >> 32) {
                  goto LABEL_317;
                }
                uint64_t v335 = sub_2147ACB08();
                if (!v335) {
                  goto LABEL_331;
                }
                uint64_t v336 = v335;
                uint64_t v337 = sub_2147ACB28();
                uint64_t v338 = v333 - v337;
                if (__OFSUB__(v333, v337)) {
                  goto LABEL_320;
                }
              }
              else
              {
                if (v333 < *(void *)(v157 + 16)) {
                  goto LABEL_319;
                }
                if (v333 >= *(void *)(v157 + 24)) {
                  goto LABEL_321;
                }
                uint64_t v340 = sub_2147ACB08();
                if (!v340) {
                  goto LABEL_332;
                }
                uint64_t v336 = v340;
                uint64_t v341 = sub_2147ACB28();
                uint64_t v338 = v333 - v341;
                if (__OFSUB__(v333, v341)) {
                  goto LABEL_322;
                }
              }
              char v339 = *(unsigned char *)(v336 + v338);
            }
            else
            {
              if (v333 >= BYTE6(v316)) {
                goto LABEL_318;
              }
              *(void *)&long long v464 = v157;
              DWORD2(v464) = v316;
              BYTE12(v464) = BYTE4(v316);
              BYTE13(v464) = BYTE5(v316);
              char v339 = *((unsigned char *)&v464 + v333);
            }
            v462[0] = v339;
            sub_2147724A4(v462, (uint64_t *)&v464);
            long long v342 = v464;
            sub_21474D2C0();
            uint64_t v343 = *(void *)(v463 + 16);
            sub_21474D31C(v343);
            uint64_t v344 = sub_21474D344(v343, v342, *((uint64_t *)&v342 + 1));
            nullsub_1(v344);
            ++v333;
            --v330;
          }
          while (v330);
          uint64_t v73 = 0;
          uint64_t v334 = v463;
        }
        else
        {
LABEL_267:
          uint64_t v334 = sub_21474D224(0);
        }
        *(void *)(v0 + 872) = v334;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
        sub_2147271C4((unint64_t *)&qword_26781D4F0, &qword_26781D4E8);
        uint64_t v345 = sub_2147ACF18();
        uint64_t v347 = v346;
        swift_bridgeObjectRelease();
        v348 = (objc_class *)type metadata accessor for SEApplet();
        v349 = (char *)objc_allocWithZone(v348);
        v350 = (uint64_t *)&v349[OBJC_IVAR____TtC9SEService8SEApplet_identifier];
        uint64_t *v350 = v345;
        v350[1] = v347;
        v351 = (uint64_t *)&v349[OBJC_IVAR____TtC9SEService8SEApplet_moduleIdentifier];
        uint64_t *v351 = v431;
        v351[1] = v419;
        uint64_t v352 = sub_21472F12C(15);
        uint64_t v354 = 7;
        if ((v353 & 1) == 0) {
          uint64_t v354 = v352;
        }
        *(void *)&v349[OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState] = v354;
        *(void *)(v0 + 824) = v349;
        *(void *)(v0 + 832) = v348;
        id v355 = objc_msgSendSuper2((objc_super *)(v0 + 824), sel_init);
        uint64_t v356 = sub_214725A84(v425);
        swift_bridgeObjectRelease();
        uint64_t v444 = sub_214772090(v355, v356);
        *(void *)(v0 + 856) = sub_214765864(v157, v456);
        uint64_t v357 = sub_2147ACF18();
        uint64_t v359 = v358;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        CredentialType.init(from:)((uint64_t *)&v464);
        swift_bridgeObjectRelease();
        long long v360 = v464;
        v361 = (objc_class *)type metadata accessor for SEPackageDetails();
        v362 = objc_allocWithZone(v361);
        v363 = &v362[OBJC_IVAR____TtC9SEService16SEPackageDetails_type];
        *(_OWORD *)v363 = xmmword_2147B20F0;
        v362[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded] = 1;
        *(void *)&v362[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers] = 1;
        *(void *)&v362[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances] = v444;
        uint64_t v364 = *(void *)v363;
        unint64_t v365 = *((void *)v363 + 1);
        *(_OWORD *)v363 = v360;
        sub_21472C78C(v364, v365);
        *(void *)(v0 + 840) = v362;
        *(void *)(v0 + 848) = v361;
        id v366 = objc_msgSendSuper2((objc_super *)(v0 + 840), sel_init);
        sub_214765D2C((uint64_t)v366, v357, v359);
        sub_21472BBFC(v157, v456);
        if (v439) {
          continue;
        }
LABEL_222:
        int64_t v312 = v436 + 1;
        if (__OFADD__(v436, 1))
        {
          __break(1u);
LABEL_325:
          __break(1u);
LABEL_326:
          __break(1u);
LABEL_327:
          __break(1u);
LABEL_328:
          __break(1u);
LABEL_329:
          __break(1u);
LABEL_330:
          __break(1u);
LABEL_331:
          __break(1u);
LABEL_332:
          __break(1u);
          JUMPOUT(0x21476AA6CLL);
        }
        if (v312 >= v406) {
          goto LABEL_302;
        }
        unint64_t v313 = *(void *)(v405 + 8 * v312);
        ++v436;
        if (v313) {
          goto LABEL_235;
        }
        int64_t v436 = v312 + 1;
        if (v312 + 1 >= v406) {
          goto LABEL_302;
        }
        unint64_t v313 = *(void *)(v405 + 8 * v436);
        if (v313) {
          goto LABEL_235;
        }
        int64_t v436 = v312 + 2;
        if (v312 + 2 >= v406) {
          goto LABEL_302;
        }
        unint64_t v313 = *(void *)(v405 + 8 * v436);
        if (v313) {
          goto LABEL_235;
        }
        int64_t v314 = v312 + 3;
        if (v314 < v406)
        {
          unint64_t v313 = *(void *)(v405 + 8 * v314);
          if (!v313)
          {
            while (1)
            {
              int64_t v436 = v314 + 1;
              if (__OFADD__(v314, 1)) {
                goto LABEL_329;
              }
              if (v436 >= v406) {
                goto LABEL_302;
              }
              unint64_t v313 = *(void *)(v405 + 8 * v436);
              ++v314;
              if (v313) {
                goto LABEL_235;
              }
            }
          }
          int64_t v436 = v314;
LABEL_235:
          unint64_t v439 = (v313 - 1) & v313;
          unint64_t v311 = __clz(__rbit64(v313)) + (v436 << 6);
          goto LABEL_236;
        }
LABEL_302:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        if (!v449 && (*(unsigned char *)(v437 + 3) & 1) != 0)
        {
          uint64_t v379 = sub_21474D17C(0);
          long long v464 = xmmword_2147B8480;
          id v380 = sub_2147499B0(1, 1, v379, v441, v442, &v464);
          sub_214765D2C((uint64_t)v380, 0xD000000000000018, 0x80000002147BDF10);
          goto LABEL_308;
        }
LABEL_307:
        swift_bridgeObjectRelease();
LABEL_308:
        uint64_t v381 = sub_214772184(*(void *)(v0 + 1240));
        if (v73)
        {
          swift_bridgeObjectRelease();
LABEL_199:
          swift_bridgeObjectRelease();
LABEL_29:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          int v27 = *(void (**)(void))(v0 + 8);
          v27();
        }
        else
        {
          uint64_t v382 = v381;
          char v383 = *(unsigned char *)(v0 + 1418);
          swift_bridgeObjectRelease();
          uint64_t v384 = *(void *)(v0 + 1032);
          v385 = (objc_class *)type metadata accessor for SEState();
          v386 = objc_allocWithZone(v385);
          v386[OBJC_IVAR____TtC9SEService7SEState_seType] = v383;
          *(void *)&v386[OBJC_IVAR____TtC9SEService7SEState_freeMemory] = v382;
          *(void *)&v386[OBJC_IVAR____TtC9SEService7SEState_infoDictionary] = v384;
          *(void *)(v0 + 808) = v386;
          *(void *)(v0 + 816) = v385;
          swift_bridgeObjectRetain();
          id v387 = objc_msgSendSuper2((objc_super *)(v0 + 808), sel_init);
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v388 = *(void (**)(id))(v0 + 8);
          v388(v387);
        }
        return;
      case 2uLL:
        uint64_t v332 = *(void *)(v157 + 16);
        uint64_t v331 = *(void *)(v157 + 24);
        int64_t v330 = v331 - v332;
        if (!__OFSUB__(v331, v332)) {
          goto LABEL_263;
        }
        goto LABEL_327;
      case 3uLL:
        goto LABEL_267;
      default:
        int64_t v330 = BYTE6(v316);
        goto LABEL_263;
    }
  }
}

uint64_t sub_21476AA98(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1376) = a1;
  *(void *)(v3 + 1384) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2147710EC;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_21476AC44;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

void sub_21476AC44()
{
  uint64_t v354 = v0;
  uint64_t v353 = *MEMORY[0x263EF8340];
  sub_21472C6F4(0, &qword_26781D6F0);
  sub_21472C6F4(0, (unint64_t *)&unk_26781D590);
  uint64_t v1 = (void *)sub_2147AD218();
  char v2 = sub_2147AD238();

  if (v2)
  {
    uint64_t v3 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 1336);
    uint64_t v4 = *(void *)(v0 + 1128);
    uint64_t v5 = *(void *)(v0 + 1112);
    uint64_t v6 = *(void *)(v0 + 1104);
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 16))(v4, *(void *)(v0 + 1144), v6);
    unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 1392) = v8;
    v3(v8 + v7, v4, v6);
    uint64_t v9 = dword_26781D708;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 1400) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_21476DEAC;
    uint64_t v11 = *(void *)(v0 + 1136);
    ((void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26781D708 + v9))(v11, (uint64_t)&unk_26781D700, v8);
    return;
  }
  uint64_t v12 = (long long *)(v0 + 744);
  v315 = (_OWORD *)(v0 + 304);
  BOOL v326 = (_OWORD *)(v0 + 400);
  unint64_t v316 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 664);
  int64_t v312 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 680);
  uint64_t v321 = v0 + 880;
  char v322 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
  uint64_t v319 = v0 + 896;
  uint64_t v320 = v0 + 888;
  uint64_t v13 = *(void **)(v0 + 1376);
  unint64_t v14 = *(void *)(v0 + 1328);
  uint64_t v310 = v0 + 960;
  uint64_t v311 = v0 + 952;
  uint64_t v15 = *(void *)(v0 + 1320);
  uint64_t v309 = v0 + 968;
  uint64_t v313 = v0 + 1008;
  uint64_t v314 = v0 + 1000;
  unint64_t v317 = (uint64_t *)(v0 + 1032);
  uint64_t v318 = v0 + 1016;
  (*(void (**)(void, void))(*(void *)(v0 + 1112) + 8))(*(void *)(v0 + 1144), *(void *)(v0 + 1104));
  sub_21474B19C(v15, v14);

  char v16 = *(uint8_t **)(v0 + 1384);
  while (2)
  {
    uint64_t v17 = *(void *)(v0 + 1312);
    swift_beginAccess();
    if (*(void *)(v17 + 24) == 26)
    {
      uint64_t v18 = *(void *)(v0 + 1272);
      uint64_t v19 = *(void *)(v0 + 1264);
      uint64_t v20 = *(void *)(v0 + 1224);
      uint64_t v21 = *(void *)(v0 + 1216);
      *(void *)(v0 + 536) = *(void *)(v0 + 1208);
      *(void *)(v0 + 544) = v21;
      *(void *)(v0 + 552) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      CredentialType.init(moduleAID:dataSource:)(v19, v18, (uint64_t *)(v0 + 536), v12);
      uint64_t v22 = *(void *)(v0 + 1312);
      uint64_t v302 = v16;
      if (v16)
      {
        uint64_t v179 = *(void **)(v0 + 1304);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

        goto LABEL_90;
      }
      uint64_t v23 = *(void *)(v22 + 16);
      unint64_t v24 = *(void *)(v22 + 24);
      *(_OWORD *)(v22 + 16) = *v12;
      sub_21472C78C(v23, v24);
    }
    uint64_t v25 = *(void *)(v0 + 1312);
    id v26 = (uint64_t *)(*(void *)(v0 + 1304) + OBJC_IVAR____TtC9SEService16SEPackageDetails_type);
    uint64_t v28 = *v26;
    unint64_t v27 = v26[1];
    uint64_t v30 = *(void *)(v25 + 16);
    unint64_t v29 = *(void *)(v25 + 24);
    if (v27 == 26)
    {
      *id v26 = v30;
      v26[1] = v29;
      sub_214773278(v30, v29);
      sub_21472C78C(v28, 0x1AuLL);
      goto LABEL_18;
    }
    *(void *)(v0 + 712) = v28;
    *(void *)(v0 + 720) = v27;
    if (v29 == 26)
    {
      sub_21471ED54(v28, v27);
      sub_21471ED54(v28, v27);
      sub_2147201A0(v28, v27);
      sub_21472C78C(v28, v27);
      sub_21472C78C(v30, 0x1AuLL);
    }
    else
    {
      *(void *)(v0 + 760) = v30;
      *(void *)(v0 + 768) = v29;
      sub_214773278(v28, v27);
      sub_214773278(v28, v27);
      uint64_t v30 = _s9SEService14CredentialTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)(v0 + 712), (uint64_t *)(v0 + 760));
      sub_2147201A0(*(void *)(v0 + 712), *(void *)(v0 + 720));
      sub_21472C78C(v28, v27);
      if (v30) {
        goto LABEL_18;
      }
    }
    uint64_t v333 = v16;
    uint64_t v345 = *(void *)(v0 + 1312);
    uint64_t v31 = *(void **)(v0 + 1304);
    uint64_t v32 = *(void *)(v0 + 1288);
    uint64_t v33 = *(void *)(v0 + 1280);
    uint64_t v34 = *(void *)(v0 + 1168);
    uint64_t v35 = *(void *)(v0 + 1160);
    uint64_t v36 = *(void *)(v0 + 1152);
    uint64_t v37 = sub_2147713B4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v37, v36);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v33;
    *(void *)(v38 + 24) = v32;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v31;
    swift_bridgeObjectRetain();
    id v40 = v31;
    swift_retain();
    osos_log_type_t log = sub_2147ACDF8();
    os_log_type_t log = sub_2147AD198();
    uint64_t v41 = swift_allocObject();
    *(unsigned char *)(v41 + 16) = 32;
    uint64_t v305 = (uint8_t *)swift_allocObject();
    v305[16] = 8;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_214773AA8;
    *(void *)(v42 + 24) = v38;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = sub_214773A58;
    *(void *)(v43 + 24) = v42;
    uint64_t v44 = swift_allocObject();
    *(unsigned char *)(v44 + 16) = 32;
    uint64_t v45 = swift_allocObject();
    *(unsigned char *)(v45 + 16) = 8;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_214772A60;
    *(void *)(v46 + 24) = v39;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = sub_214773A58;
    *(void *)(v47 + 24) = v46;
    uint64_t v48 = swift_allocObject();
    *(unsigned char *)(v48 + 16) = 32;
    uint64_t v49 = swift_allocObject();
    *(unsigned char *)(v49 + 16) = 8;
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = sub_214772A68;
    *(void *)(v50 + 24) = v345;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_214773A58;
    *(void *)(v30 + 24) = v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_2147B8440;
    *(void *)(v51 + 32) = sub_214773A60;
    *(void *)(v51 + 40) = v41;
    *(void *)(v51 + 48) = sub_214773A60;
    *(void *)(v51 + 56) = v305;
    *(void *)(v51 + 64) = sub_214773A5C;
    *(void *)(v51 + 72) = v43;
    *(void *)(v51 + 80) = sub_214773A60;
    *(void *)(v51 + 88) = v44;
    *(void *)(v51 + 96) = sub_214773A60;
    *(void *)(v51 + 104) = v45;
    *(void *)(v51 + 112) = sub_214773A5C;
    *(void *)(v51 + 120) = v47;
    *(void *)(v51 + 128) = sub_214773A60;
    *(void *)(v51 + 136) = v48;
    *(void *)(v51 + 144) = sub_214773A60;
    *(void *)(v51 + 152) = v49;
    *(void *)(v51 + 160) = sub_214773A5C;
    *(void *)(v51 + 168) = v30;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(oslog, log))
    {
      uint64_t v301 = v48;
      uint64_t v303 = v47;
      uint64_t v52 = (uint8_t *)sub_21475FE60();
      uint64_t v53 = swift_slowAlloc();
      *(void *)(v0 + 888) = 0;
      uint64_t v300 = v53;
      *(void *)(v0 + 896) = v53;
      *(_WORD *)uint64_t v52 = 770;
      *(void *)(v0 + 880) = v52 + 2;
      *(void *)(v0 + 776) = sub_214773A60;
      *(void *)(v0 + 784) = v41;
      os_log_type_t v54 = v333;
      sub_21475FE68(v322, v321, v320, v319);
      if (!v333)
      {
        swift_release();
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = v305;
        sub_21475FE68(v322, v321, v320, v319);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A5C;
        *(void *)(v0 + 784) = v43;
        sub_21475FE68(v322, v321, v320, v319);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = v44;
        sub_21475FE68(v322, v321, v320, v319);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = v45;
        sub_21475FE68(v322, v321, v320, v319);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A5C;
        *(void *)(v0 + 784) = v303;
        sub_21475FE68(v322, v321, v320, v319);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = v301;
        sub_21475FE68(v322, v321, v320, v319);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A60;
        *(void *)(v0 + 784) = v49;
        sub_21475FE68(v322, v321, v320, v319);
        swift_release();
        *(void *)(v0 + 776) = sub_214773A5C;
        *(void *)(v0 + 784) = v30;
        sub_21475FE68(v322, v321, v320, v319);
        swift_release();
        _os_log_impl(&dword_2146ED000, oslog, log, "Type mismatch for %s: %s && %s", v52, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2166A8870](v300, -1, -1);
        sub_21475FEA4();
      }
      goto LABEL_93;
    }
    uint64_t v55 = *(void *)(v0 + 1168);
    uint64_t v56 = *(void *)(v0 + 1160);
    os_log_t loga = *(os_log_t *)(v0 + 1152);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v57 = *(void (**)(uint64_t, os_log_t))(v56 + 8);
    unint64_t v27 = v56 + 8;
    v57(v55, loga);
    char v16 = v333;
LABEL_18:
    uint64_t v334 = v16;
    if (*(unsigned char *)(v0 + 1420) == 1)
    {
      uint64_t v58 = *(void *)(v0 + 1304);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v59 = *(void *)(v58 + OBJC_IVAR____TtC9SEService16SEPackageDetails_containers);
      BOOL v60 = __OFADD__(v59, 1);
      uint64_t v61 = v59 + 1;
      if (v60)
      {
        __break(1u);
LABEL_208:
        uint64_t v280 = *(void *)(v0 + 1144);
        uint64_t v281 = *(void *)(v0 + 1112);
        uint64_t v282 = *(void *)(v0 + 1104);
        uint64_t v283 = *(void *)(v0 + 1096);
        id v284 = *(void (**)(uint64_t, uint64_t, uint64_t))(v281 + 32);
        *(void *)(v0 + 1336) = v284;
        *(void *)(v0 + 1344) = (v281 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
        v284(v280, v283, v282);
        *(void *)(v0 + 1352) = sub_214750CDC();
        uint64_t v285 = swift_allocObject();
        *(void *)(v0 + 1360) = v285;
        *(void *)(v285 + 16) = v27;
        *(void *)(v285 + 24) = v30;
        sub_21472BBA4(v27, v30);
        uint64_t v286 = dword_26781D6E8;
        uint64_t v287 = (void *)swift_task_alloc();
        *(void *)(v0 + 1368) = v287;
        *uint64_t v287 = v0;
        v287[1] = sub_21476AA98;
        ((void (*)(uint64_t, uint64_t))((char *)&dword_26781D6E8 + v286))((uint64_t)&unk_26781D6E0, v285);
        return;
      }
      char v62 = *(void **)(v0 + 1304);
      *(void *)(v58 + OBJC_IVAR____TtC9SEService16SEPackageDetails_containers) = v61;
    }
    else
    {
      char v62 = *(void **)(v0 + 1304);
      uint64_t v63 = *(void *)(v0 + 1296);
      uint64_t v64 = *(void *)(v0 + 1288);
      uint64_t v65 = *(void *)(v0 + 1280);
      uint64_t v66 = *(void *)(v0 + 1272);
      uint64_t v67 = *(void *)(v0 + 1264);
      char v68 = (objc_class *)type metadata accessor for SEApplet();
      uint64_t v69 = (char *)objc_allocWithZone(v68);
      uint64_t v70 = &v69[OBJC_IVAR____TtC9SEService8SEApplet_identifier];
      *(void *)uint64_t v70 = v65;
      *((void *)v70 + 1) = v64;
      uint64_t v71 = &v69[OBJC_IVAR____TtC9SEService8SEApplet_moduleIdentifier];
      *(void *)uint64_t v71 = v67;
      *((void *)v71 + 1) = v66;
      uint64_t v72 = sub_21472F12C(v63);
      uint64_t v74 = 7;
      if ((v73 & 1) == 0) {
        uint64_t v74 = v72;
      }
      *(void *)&v69[OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState] = v74;
      *(void *)(v0 + 728) = v69;
      *(void *)(v0 + 736) = v68;
      id v75 = objc_msgSendSuper2((objc_super *)(v0 + 728), sel_init);
      swift_beginAccess();
      id v76 = v75;
      sub_214765C0C();
      swift_endAccess();
    }
    swift_release();
    uint64_t v77 = *(void *)(v0 + 1256);
    uint64_t v78 = (unsigned char *)(v0 + 1417);
    if (v77 == *(void *)(v0 + 1248))
    {
LABEL_75:
      uint64_t v149 = *(void **)(v0 + 1072);
      swift_bridgeObjectRelease();
      uint64_t v150 = (void *)sub_2147ACF38();
      id v151 = SESEndPointListWithSession(v149, v150, 0);

      if (v151)
      {
        uint64_t v152 = *(void *)(v0 + 1224);
        uint64_t v153 = *(void *)(v0 + 1216);
        uint64_t v154 = *(void *)(v0 + 1208);
        sub_21472C6F4(0, &qword_26781D6C8);
        uint64_t v155 = sub_2147AD058();

        *(void *)&long long v351 = v154;
        *((void *)&v351 + 1) = v153;
        uint64_t v352 = v152;
        long long v350 = xmmword_2147B3E70;
        swift_getKeyPath();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v156 = SERDataSource.getNameInfo(type:for:)((uint64_t *)&v350);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v156)
        {
          if (sub_21472994C(v156))
          {
            uint64_t v157 = *(void *)(v0 + 1224);
            uint64_t v158 = *(void *)(v0 + 1216);
            uint64_t v159 = *(void *)(v0 + 1208);
            sub_214726168(0, 1, v156);
            uint64_t v339 = *(void *)(v156 + 32);
            uint64_t v342 = *(void *)(v156 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)&long long v351 = v159;
            *((void *)&v351 + 1) = v158;
            uint64_t v352 = v157;
            long long v350 = xmmword_2147B8450;
            swift_getKeyPath();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v160 = SERDataSource.getNameInfo(type:for:)((uint64_t *)&v350);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v160)
            {
              if (sub_21472994C(v160))
              {
                uint64_t v161 = *(void *)(v0 + 1216);
                uint64_t v162 = *(void *)(v0 + 1208);
                sub_214726168(0, 1, v160);
                uint64_t v337 = *(objc_super **)(v160 + 32);
                uint64_t v338 = *(void *)(v160 + 40);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                __swift_instantiateConcreteTypeFromMangledName(&qword_26781D248);
                uint64_t v163 = swift_allocObject();
                *(_OWORD *)(v163 + 16) = xmmword_2147B8460;
                strcpy((char *)(v163 + 32), "COPERNICUSHOME");
                *(unsigned char *)(v163 + 47) = -18;
                strcpy((char *)(v163 + 48), "COPERNICUSCAR");
                *(_WORD *)(v163 + 62) = -4864;
                *(void *)(v163 + 64) = 0xD000000000000010;
                *(void *)(v163 + 72) = 0x80000002147C07E0;
                *(void *)(v163 + 80) = 0x43494E5245504F43;
                *(void *)(v163 + 88) = 0xEF4F52494C415355;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v164 = sub_214772AD0(v163, v162, v161);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v165 = sub_21472994C(v164);
                uint64_t v166 = MEMORY[0x263F8EE80];
                if (v165)
                {
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781DCB0);
                  uint64_t v167 = sub_2147AD4E8();
                }
                else
                {
                  uint64_t v167 = MEMORY[0x263F8EE80];
                }
                uint64_t v180 = v166;
                *(void *)&long long v351 = v167;
                uint64_t v181 = (void *)swift_bridgeObjectRetain();
                sub_21477255C(v181, 1, &v351);
                if (v334)
                {
                  swift_unexpectedError();
                  return;
                }
                swift_bridgeObjectRelease();
                uint64_t v327 = v351;
                *(void *)&long long v351 = v166;
                unint64_t v182 = swift_bridgeObjectRetain();
                uint64_t v348 = v155;
                uint64_t v341 = sub_214729948(v182);
                if (v341)
                {
                  uint64_t v183 = 0;
                  unint64_t v343 = v155 & 0xC000000000000001;
                  uint64_t v180 = MEMORY[0x263F8EE80];
                  while (1)
                  {
                    id v187 = v343 ? (id)MEMORY[0x2166A7680](v183, v155) : *(id *)(v155 + 8 * v183 + 32);
                    id v188 = v187;
                    uint64_t v189 = v183 + 1;
                    if (__OFADD__(v183, 1)) {
                      break;
                    }
                    uint64_t v190 = v180;
                    id v191 = objc_msgSend(v187, sel_appletIdentifier);
                    uint64_t v192 = sub_2147ACCD8();
                    unint64_t v194 = v193;

                    uint64_t v180 = v190;
                    unint64_t v196 = sub_21477ECD4(v192, v194);
                    uint64_t v197 = *(void *)(v190 + 16);
                    BOOL v198 = (v195 & 1) == 0;
                    uint64_t v199 = v197 + v198;
                    if (__OFADD__(v197, v198)) {
                      goto LABEL_221;
                    }
                    char v200 = v195;
                    if (*(void *)(v180 + 24) < v199)
                    {
                      sub_214792930(v199, 1);
                      uint64_t v201 = v351;
                      uint64_t v202 = sub_21477ECD4(v192, v194);
                      if ((v200 & 1) != (v203 & 1))
                      {
                        sub_2147AD6B8();
                        return;
                      }
                      unint64_t v196 = v202;
                      uint64_t v180 = v201;
                    }
                    if (v200)
                    {
                      uint64_t v184 = sub_21472BBFC(v192, v194);
                      uint64_t v185 = v180;
                      uint64_t v186 = (void *)(*(void *)(v180 + 56) + 8 * v196);
                      MEMORY[0x2166A7350](v184);
                      sub_214772530(*(void *)((*v186 & 0xFFFFFFFFFFFFFF8) + 0x10));
                      sub_2147AD0A8();
                      sub_2147AD078();
                      uint64_t v180 = v185;
                    }
                    else
                    {
                      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6D0);
                      uint64_t v204 = swift_allocObject();
                      *(_OWORD *)(v204 + 16) = xmmword_2147B8470;
                      *(void *)(v204 + 32) = v188;
                      *(void *)&long long v350 = v204;
                      sub_2147AD078();
                      uint64_t v205 = v350;
                      *(void *)(v180 + 8 * (v196 >> 6) + 64) |= 1 << v196;
                      uint64_t v206 = (uint64_t *)(*(void *)(v180 + 48) + 16 * v196);
                      *uint64_t v206 = v192;
                      v206[1] = v194;
                      *(void *)(*(void *)(v180 + 56) + 8 * v196) = v205;
                      uint64_t v207 = *(void *)(v180 + 16);
                      BOOL v60 = __OFADD__(v207, 1);
                      uint64_t v208 = v207 + 1;
                      if (v60) {
                        goto LABEL_222;
                      }
                      *(void *)(v180 + 16) = v208;
                    }
                    uint64_t v155 = v348;
                    ++v183;
                    if (v189 == v341) {
                      goto LABEL_126;
                    }
                  }
                  __break(1u);
LABEL_221:
                  __break(1u);
LABEL_222:
                  __break(1u);
LABEL_223:
                  __break(1u);
LABEL_224:
                  __break(1u);
LABEL_225:
                  __break(1u);
LABEL_226:
                  __break(1u);
LABEL_227:
                  __break(1u);
LABEL_228:
                  __break(1u);
LABEL_211:
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                  if (v341 || (*(unsigned char *)(v0 + 1419) & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    uint64_t v288 = sub_21474D17C(0);
                    long long v351 = xmmword_2147B8480;
                    id v289 = sub_2147499B0(1, 1, v288, v339, v342, &v351);
                    sub_214765D2C((uint64_t)v289, 0xD000000000000018, 0x80000002147BDF10);
                  }
                  uint64_t v290 = sub_214772184(*(void *)(v0 + 1240));
                  if (v183)
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_90;
                  }
                  uint64_t v291 = v290;
                  char v292 = *(unsigned char *)(v0 + 1418);
                  swift_bridgeObjectRelease();
                  uint64_t v293 = *(void *)(v0 + 1032);
                  uint64_t v294 = (objc_class *)type metadata accessor for SEState();
                  char v295 = objc_allocWithZone(v294);
                  v295[OBJC_IVAR____TtC9SEService7SEState_seType] = v292;
                  *(void *)&v295[OBJC_IVAR____TtC9SEService7SEState_freeMemory] = v291;
                  *(void *)&v295[OBJC_IVAR____TtC9SEService7SEState_infoDictionary] = v293;
                  *(void *)(v0 + 808) = v295;
                  *(void *)(v0 + 816) = v294;
                  swift_bridgeObjectRetain();
                  id v296 = objc_msgSendSuper2((objc_super *)(v0 + 808), sel_init);
                  swift_bridgeObjectRelease();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  v297 = *(void (**)(id))(v0 + 8);
                  v297(v296);
                  return;
                }
LABEL_126:
                swift_bridgeObjectRelease();
                uint64_t v183 = 0;
                int64_t v209 = 0;
                uint64_t v210 = *(void *)(v180 + 64);
                uint64_t v323 = v180 + 64;
                uint64_t v211 = -1;
                uint64_t v212 = -1 << *(unsigned char *)(v180 + 32);
                if (-v212 < 64) {
                  uint64_t v211 = ~(-1 << -(char)v212);
                }
                unint64_t v213 = v211 & v210;
                int64_t v324 = (unint64_t)(63 - v212) >> 6;
                uint64_t v325 = v180;
                if ((v211 & v210) == 0) {
                  goto LABEL_130;
                }
LABEL_129:
                unint64_t v214 = __clz(__rbit64(v213));
                uint64_t v215 = (v213 - 1) & v213;
                int64_t v336 = v209;
                unint64_t v216 = v214 | (v209 << 6);
                uint64_t v217 = v342;
                while (1)
                {
                  uint64_t v222 = (uint64_t *)(*(void *)(v180 + 48) + 16 * v216);
                  uint64_t v224 = *v222;
                  unint64_t v223 = v222[1];
                  uint64_t v225 = *(uint8_t **)(*(void *)(v180 + 56) + 8 * v216);
                  sub_21472BBA4(*v222, v223);
                  sub_21472BBA4(v224, v223);
                  uint64_t v335 = v225;
                  swift_bridgeObjectRetain();
                  uint64_t v226 = sub_214772E40(v327, v224, v223);
                  uint64_t v228 = v227;
                  unint64_t v344 = v223;
                  sub_21472BBFC(v224, v223);
                  if (!v228)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    *(void *)&long long v351 = 0;
                    *((void *)&v351 + 1) = 0xE000000000000000;
                    sub_2147AD348();
                    swift_bridgeObjectRelease();
                    strcpy((char *)&v351, "Invalid AID ");
                    BYTE13(v351) = 0;
                    HIWORD(v351) = -5120;
                    *(void *)(v0 + 984) = sub_214765864(v224, v223);
                    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
                    sub_2147271C4((unint64_t *)&qword_26781D4F0, &qword_26781D4E8);
                    sub_2147ACF18();
                    swift_bridgeObjectRelease();
                    sub_2147ACFC8();
                    swift_bridgeObjectRelease();
                    sub_2147ACFC8();
                    long long v278 = v351;
                    sub_214729BF0();
                    swift_allocError();
                    *(_OWORD *)uint64_t v279 = v278;
                    *(unsigned char *)(v279 + 16) = 1;
                    swift_willThrow();
                    sub_21472BBFC(v224, v223);
                    swift_release();
                    goto LABEL_90;
                  }
                  BOOL v229 = v226 == 0x43494E5245504F43 && v228 == 0xEF4F52494C415355;
                  uint64_t v231 = v337;
                  uint64_t v230 = v338;
                  if (!v229)
                  {
                    char v232 = sub_2147AD668();
                    uint64_t v231 = v337;
                    uint64_t v230 = v338;
                    if ((v232 & 1) == 0)
                    {
                      BOOL v233 = v226 == 0x43494E5245504F43 && v228 == 0xEE00454D4F485355;
                      uint64_t v230 = v217;
                      uint64_t v231 = (objc_super *)v339;
                      if (!v233)
                      {
                        char v234 = sub_2147AD668();
                        uint64_t v231 = (objc_super *)v339;
                        BOOL v235 = v226 == 0x43494E5245504F43 && v228 == 0xED00005241435355;
                        BOOL v236 = v235;
                        uint64_t v230 = v217;
                        if ((v234 & 1) == 0)
                        {
                          uint64_t v230 = v217;
                          uint64_t v231 = (objc_super *)v339;
                          if (!v236)
                          {
                            char v237 = sub_2147AD668();
                            uint64_t v231 = (objc_super *)v339;
                            uint64_t v230 = v217;
                            if ((v237 & 1) == 0)
                            {
                              if (v226 != 0xD000000000000010
                                || (uint64_t v230 = v217, v231 = (objc_super *)v339, v228 != 0x80000002147C07E0))
                              {
                                char v238 = sub_2147AD668();
                                uint64_t v231 = (objc_super *)v339;
                                uint64_t v230 = v217;
                                if ((v238 & 1) == 0) {
                                  break;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  char v328 = v231;
                  unint64_t v239 = v223 >> 62;
                  unint64_t v329 = (objc_super *)v230;
                  swift_bridgeObjectRetain();
                  os_log_t oslogb = (os_log_t)v215;
                  switch(v223 >> 62)
                  {
                    case 1uLL:
                      if (__OFSUB__(HIDWORD(v224), v224)) {
                        goto LABEL_233;
                      }
                      int64_t v240 = HIDWORD(v224) - (int)v224;
LABEL_172:
                      if (v240)
                      {
                        *(void *)&long long v350 = sub_21474D0F8();
                        sub_21474D104(v240);
                        if (!v239)
                        {
                          if ((v240 & 0x8000000000000000) == 0)
                          {
                            uint64_t v243 = 0;
                            goto LABEL_181;
                          }
                          goto LABEL_235;
                        }
                        if (v239 == 1) {
                          uint64_t v243 = (int)v224;
                        }
                        else {
                          uint64_t v243 = *(void *)(v224 + 16);
                        }
                        if (v240 < 0) {
                          goto LABEL_232;
                        }
                        do
                        {
LABEL_181:
                          if (v239)
                          {
                            if (v239 == 1)
                            {
                              if (v243 < (int)v224 || v243 >= v224 >> 32) {
                                goto LABEL_223;
                              }
                              uint64_t v245 = sub_2147ACB08();
                              if (!v245) {
                                goto LABEL_238;
                              }
                              uint64_t v246 = v245;
                              uint64_t v247 = sub_2147ACB28();
                              uint64_t v248 = v243 - v247;
                              if (__OFSUB__(v243, v247)) {
                                goto LABEL_226;
                              }
                            }
                            else
                            {
                              if (v243 < *(void *)(v224 + 16)) {
                                goto LABEL_225;
                              }
                              if (v243 >= *(void *)(v224 + 24)) {
                                goto LABEL_227;
                              }
                              uint64_t v250 = sub_2147ACB08();
                              if (!v250) {
                                goto LABEL_239;
                              }
                              uint64_t v246 = v250;
                              uint64_t v251 = sub_2147ACB28();
                              uint64_t v248 = v243 - v251;
                              if (__OFSUB__(v243, v251)) {
                                goto LABEL_228;
                              }
                            }
                            char v249 = *(unsigned char *)(v246 + v248);
                          }
                          else
                          {
                            if (v243 >= BYTE6(v344)) {
                              goto LABEL_224;
                            }
                            *(void *)&long long v351 = v224;
                            DWORD2(v351) = v344;
                            WORD6(v351) = WORD2(v344);
                            char v249 = *((unsigned char *)&v351 + v243);
                          }
                          v349[0] = v249;
                          sub_2147724A4(v349, (uint64_t *)&v351);
                          uint64_t v253 = *((void *)&v351 + 1);
                          uint64_t v252 = v351;
                          sub_21474D2C0();
                          uint64_t v254 = *(void *)(v350 + 16);
                          sub_21474D31C(v254);
                          uint64_t v255 = sub_21474D344(v254, v252, v253);
                          nullsub_1(v255);
                          uint64_t v183 = 0;
                          ++v243;
                          --v240;
                        }
                        while (v240);
                        uint64_t v183 = 0;
                        uint64_t v244 = v350;
                      }
                      else
                      {
LABEL_176:
                        uint64_t v244 = sub_21474D224(0);
                      }
                      *(void *)(v0 + 872) = v244;
                      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
                      sub_2147271C4((unint64_t *)&qword_26781D4F0, &qword_26781D4E8);
                      uint64_t v256 = sub_2147ACF18();
                      uint64_t v258 = v257;
                      swift_bridgeObjectRelease();
                      uint64_t v259 = (objc_class *)type metadata accessor for SEApplet();
                      uint64_t v260 = (char *)objc_allocWithZone(v259);
                      uint64_t v261 = (uint64_t *)&v260[OBJC_IVAR____TtC9SEService8SEApplet_identifier];
                      *uint64_t v261 = v256;
                      v261[1] = v258;
                      uint64_t v262 = (objc_super **)&v260[OBJC_IVAR____TtC9SEService8SEApplet_moduleIdentifier];
                      *uint64_t v262 = v328;
                      v262[1] = v329;
                      uint64_t v263 = sub_21472F12C(15);
                      uint64_t v265 = 7;
                      if ((v264 & 1) == 0) {
                        uint64_t v265 = v263;
                      }
                      *(void *)&v260[OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState] = v265;
                      *(void *)(v0 + 824) = v260;
                      *(void *)(v0 + 832) = v259;
                      id v266 = objc_msgSendSuper2((objc_super *)(v0 + 824), sel_init);
                      uint64_t v267 = sub_214725A84((unint64_t)v335);
                      swift_bridgeObjectRelease();
                      uint64_t v340 = sub_214772090(v266, v267);
                      *(void *)(v0 + 856) = sub_214765864(v224, v344);
                      uint64_t v268 = sub_2147ACF18();
                      uint64_t v270 = v269;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      CredentialType.init(from:)((uint64_t *)&v351);
                      swift_bridgeObjectRelease();
                      long long v271 = v351;
                      uint64_t v272 = (objc_class *)type metadata accessor for SEPackageDetails();
                      long long v273 = objc_allocWithZone(v272);
                      uint64_t v274 = &v273[OBJC_IVAR____TtC9SEService16SEPackageDetails_type];
                      *(_OWORD *)uint64_t v274 = xmmword_2147B20F0;
                      v273[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded] = 1;
                      *(void *)&v273[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers] = 1;
                      *(void *)&v273[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances] = v340;
                      uint64_t v275 = *(void *)v274;
                      unint64_t v276 = *((void *)v274 + 1);
                      *(_OWORD *)uint64_t v274 = v271;
                      sub_21472C78C(v275, v276);
                      *(void *)(v0 + 840) = v273;
                      *(void *)(v0 + 848) = v272;
                      id v277 = objc_msgSendSuper2((objc_super *)(v0 + 840), sel_init);
                      sub_214765D2C((uint64_t)v277, v268, v270);
                      sub_21472BBFC(v224, v344);
                      uint64_t v180 = v325;
                      int64_t v209 = v336;
                      unint64_t v213 = (unint64_t)oslogb;
                      if (oslogb) {
                        goto LABEL_129;
                      }
LABEL_130:
                      int64_t v218 = v209 + 1;
                      uint64_t v217 = v342;
                      if (__OFADD__(v209, 1))
                      {
                        __break(1u);
LABEL_232:
                        __break(1u);
LABEL_233:
                        __break(1u);
LABEL_234:
                        __break(1u);
LABEL_235:
                        __break(1u);
LABEL_236:
                        __break(1u);
LABEL_237:
                        __break(1u);
LABEL_238:
                        __break(1u);
LABEL_239:
                        __break(1u);
                        JUMPOUT(0x21476DE9CLL);
                      }
                      if (v218 >= v324) {
                        goto LABEL_211;
                      }
                      unint64_t v219 = *(void *)(v323 + 8 * v218);
                      int64_t v220 = v209 + 1;
                      if (!v219)
                      {
                        int64_t v220 = v209 + 2;
                        if (v209 + 2 >= v324) {
                          goto LABEL_211;
                        }
                        unint64_t v219 = *(void *)(v323 + 8 * v220);
                        if (!v219)
                        {
                          int64_t v220 = v209 + 3;
                          if (v209 + 3 >= v324) {
                            goto LABEL_211;
                          }
                          unint64_t v219 = *(void *)(v323 + 8 * v220);
                          if (!v219)
                          {
                            uint64_t v221 = v209 + 4;
                            if (v209 + 4 >= v324) {
                              goto LABEL_211;
                            }
                            unint64_t v219 = *(void *)(v323 + 8 * v221);
                            if (!v219)
                            {
                              uint64_t v217 = v342;
                              uint64_t v180 = v325;
                              while (1)
                              {
                                int64_t v220 = v221 + 1;
                                if (__OFADD__(v221, 1)) {
                                  goto LABEL_236;
                                }
                                if (v220 >= v324) {
                                  goto LABEL_211;
                                }
                                unint64_t v219 = *(void *)(v323 + 8 * v220);
                                ++v221;
                                if (v219) {
                                  goto LABEL_144;
                                }
                              }
                            }
                            int64_t v220 = v209 + 4;
                            uint64_t v217 = v342;
                            uint64_t v180 = v325;
                          }
                        }
                      }
LABEL_144:
                      uint64_t v215 = (v219 - 1) & v219;
                      int64_t v336 = v220;
                      unint64_t v216 = __clz(__rbit64(v219)) + (v220 << 6);
                      break;
                    case 2uLL:
                      uint64_t v242 = *(void *)(v224 + 16);
                      uint64_t v241 = *(void *)(v224 + 24);
                      int64_t v240 = v241 - v242;
                      if (!__OFSUB__(v241, v242)) {
                        goto LABEL_172;
                      }
                      goto LABEL_234;
                    case 3uLL:
                      goto LABEL_176;
                    default:
                      int64_t v240 = BYTE6(v223);
                      goto LABEL_172;
                  }
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                *(void *)&long long v351 = 0;
                *((void *)&v351 + 1) = 0xE000000000000000;
                sub_2147AD348();
                sub_2147AD648();
                sub_21471F124();
                sub_2147AD648();
                long long v298 = v351;
                sub_214729BF0();
                swift_allocError();
                *(_OWORD *)uint64_t v299 = v298;
                *(unsigned char *)(v299 + 16) = 1;
                swift_willThrow();
                sub_21472BBFC(v224, v223);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
LABEL_90:
                swift_bridgeObjectRelease();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                uint64_t v174 = *(void (**)(void))(v0 + 8);
                v174();
                return;
              }
              swift_bridgeObjectRelease();
            }
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_214729BF0();
        swift_allocError();
        uint64_t v177 = "Could not get PTA info";
        unint64_t v178 = 0xD000000000000016;
      }
      else
      {
        swift_bridgeObjectRelease();
        *(void *)&long long v351 = 0;
        *((void *)&v351 + 1) = 0xE000000000000000;
        sub_2147AD348();
        swift_bridgeObjectRelease();
        sub_214729BF0();
        swift_allocError();
        uint64_t v177 = "could not get endpoints ";
        unint64_t v178 = 0xD000000000000018;
      }
      *(void *)uint64_t v176 = v178;
      *(void *)(v176 + 8) = (unint64_t)(v177 - 32) | 0x8000000000000000;
      *(unsigned char *)(v176 + 16) = 0;
LABEL_89:
      swift_willThrow();
      goto LABEL_90;
    }
    while (1)
    {
      uint64_t v79 = *(void *)(*(void *)(v0 + 1232) + 8 * v77 + 32);
      *(void *)(v0 + 1256) = v77 + 1;
      if (__OFADD__(v77, 1))
      {
        __break(1u);
        uint64_t v175 = v302;
        goto LABEL_94;
      }
      if (!*(void *)(v79 + 16))
      {
        swift_bridgeObjectRetain();
LABEL_87:
        swift_bridgeObjectRelease();
        goto LABEL_88;
      }
      swift_bridgeObjectRetain();
      uint64_t v80 = sub_21477EA80(0x416567616B636170, 0xEA00000000006469);
      if ((v81 & 1) == 0) {
        goto LABEL_87;
      }
      sub_21472B428(*(void *)(v79 + 56) + 32 * v80, v0 + 240);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_87;
      }
      uint64_t v82 = *(void *)(v0 + 640);
      if (!*(void *)(v79 + 16)
        || (uint64_t v83 = *(void *)(v0 + 632), v84 = sub_21477EA80(0x6941656C75646F6DLL, 0xE900000000000064), (v85 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_88;
      }
      sub_21472B428(*(void *)(v79 + 56) + 32 * v84, v0 + 176);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_86;
      }
      uint64_t v86 = *(void *)(v0 + 600);
      *(void *)(v0 + 1264) = v86;
      uint64_t v87 = *(void **)(v0 + 608);
      *(void *)(v0 + 1272) = v87;
      if (!*(void *)(v79 + 16)) {
        goto LABEL_74;
      }
      uint64_t v88 = sub_21477EA80(0x694174656C707061, 0xE900000000000064);
      if ((v89 & 1) == 0) {
        goto LABEL_74;
      }
      sub_21472B428(*(void *)(v79 + 56) + 32 * v88, v0 + 80);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_86;
      }
      uint64_t v346 = v83;
      *(void *)(v0 + 1280) = *(void *)(v0 + 584);
      *(void *)(v0 + 1288) = *(void *)(v0 + 592);
      if (!*(void *)(v79 + 16) || (uint64_t v90 = sub_21477EA80(0x6C6379436566696CLL, 0xEE00657461745365), (v91 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_74:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_88:
        swift_bridgeObjectRelease();
        sub_2147AD348();
        uint64_t v168 = sub_2147ACEB8();
        uint64_t v170 = v169;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v351 = v168;
        *((void *)&v351 + 1) = v170;
        sub_2147ACFC8();
        uint64_t v172 = v168;
        uint64_t v171 = *((void *)&v351 + 1);
        sub_214729BF0();
        swift_allocError();
        *(void *)uint64_t v173 = v172;
        *(void *)(v173 + 8) = v171;
        *(unsigned char *)(v173 + 16) = 1;
        goto LABEL_89;
      }
      sub_21472B428(*(void *)(v79 + 56) + 32 * v90, v0 + 112);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_86:
        swift_bridgeObjectRelease();
        goto LABEL_87;
      }
      *(void *)(v0 + 1296) = *(void *)(v0 + 1064);
      uint64_t v92 = v82;
      if ((sub_2147AD008() & 1) == 0) {
        break;
      }
      uint64_t v93 = *(void *)(v0 + 1184);
      uint64_t v94 = *(void *)(v0 + 1160);
      uint64_t v95 = *(void *)(v0 + 1152);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v96 = sub_2147713B4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(v93, v96, v95);
      uint64_t v97 = swift_allocObject();
      *(void *)(v97 + 16) = v83;
      *(void *)(v97 + 24) = v92;
      uint64_t v98 = sub_2147ACDF8();
      os_log_type_t v99 = sub_2147AD188();
      uint64_t v100 = swift_allocObject();
      *(unsigned char *)(v100 + 16) = 32;
      uint64_t v101 = swift_allocObject();
      *(unsigned char *)(v101 + 16) = 8;
      uint64_t v102 = swift_allocObject();
      *(void *)(v102 + 16) = sub_214773AA8;
      *(void *)(v102 + 24) = v97;
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = sub_214773A58;
      *(void *)(v103 + 24) = v102;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
      uint64_t v104 = swift_allocObject();
      *(_OWORD *)(v104 + 16) = xmmword_2147B8430;
      *(void *)(v104 + 32) = sub_214773A60;
      *(void *)(v104 + 40) = v100;
      *(void *)(v104 + 48) = sub_214773A60;
      *(void *)(v104 + 56) = v101;
      *(void *)(v104 + 64) = sub_214773A5C;
      *(void *)(v104 + 72) = v103;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v98, v99))
      {
        uint64_t v116 = (uint8_t *)sub_21475FE60();
        uint64_t v117 = swift_slowAlloc();
        *(void *)(v0 + 1008) = 0;
        uint64_t v347 = v117;
        *(void *)(v0 + 1016) = v117;
        *(_WORD *)uint64_t v116 = 258;
        *(void *)(v0 + 1000) = v116 + 2;
        *(void *)(v0 + 664) = sub_214773A60;
        *(void *)(v0 + 672) = v100;
        os_log_type_t v54 = v334;
        sub_21475FE68(v316, v314, v313, v318);
        if (!v334)
        {
          swift_release();
          *(void *)(v0 + 664) = sub_214773A60;
          *(void *)(v0 + 672) = v101;
          sub_21475FE68(v316, v314, v313, v318);
          swift_release();
          *(void *)(v0 + 664) = sub_214773A5C;
          *(void *)(v0 + 672) = v103;
          sub_21475FE68(v316, v314, v313, v318);
          swift_release();
          _os_log_impl(&dword_2146ED000, v98, v99, "Skipping %s processing due to having PTA prefix", v116, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2166A8870](v347, -1, -1);
          sub_21475FEA4();
        }
        goto LABEL_93;
      }
      uint64_t v105 = *(void *)(v0 + 1184);
      uint64_t v106 = *(void *)(v0 + 1160);
      uint64_t v107 = *(void *)(v0 + 1152);
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v105, v107);
      uint64_t v78 = (unsigned char *)(v0 + 1417);
LABEL_52:
      uint64_t v77 = *(void *)(v0 + 1256);
      if (v77 == *(void *)(v0 + 1248)) {
        goto LABEL_75;
      }
    }
    osos_log_t loga = (os_log_t)v82;
    uint64_t v108 = *(void *)(v0 + 1224);
    uint64_t v109 = *(void *)(v0 + 1216);
    *(void *)(v0 + 488) = *(void *)(v0 + 1208);
    *(void *)(v0 + 496) = v109;
    *(void *)(v0 + 504) = v108;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v110._uint64_t countAndFlagsBits = v86;
    v110._object = v87;
    Swift::Bool v111 = SERDataSource.isSystemApplet(moduleAID:)(v110);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v111)
    {
LABEL_51:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_52;
    }
    sub_214765C80(0xD000000000000011, 0x80000002147C0760, v79, v326);
    if (*(void *)(v0 + 424))
    {
      uint64_t v112 = v0 + 1416;
      if (swift_dynamicCast()) {
        char v113 = *(unsigned char *)(v0 + 1416);
      }
      else {
        char v113 = 0;
      }
      uint64_t v114 = (_OWORD *)(v0 + 368);
    }
    else
    {
      sub_21472C730((uint64_t)v326, &qword_26781C4C8);
      char v113 = 0;
      uint64_t v112 = v0 + 1416;
      uint64_t v114 = (_OWORD *)(v0 + 368);
    }
    *(unsigned char *)(v112 + 4) = v113;
    uint64_t v115 = (uint64_t)v114;
    sub_214765C80(0x736E4979786F7270, 0xED000065636E6174, v79, v114);
    if (*(void *)(v0 + 392))
    {
      if (!swift_dynamicCast() || (*v78 & 1) == 0) {
        goto LABEL_57;
      }
      goto LABEL_51;
    }
    sub_21472C730(v115, &qword_26781C4C8);
LABEL_57:
    uint64_t v118 = *v317;
    swift_bridgeObjectRetain();
    uint64_t v119 = v83;
    uint64_t v120 = v82;
    uint64_t v121 = sub_214765CE4(v346, v82, v118);
    swift_bridgeObjectRelease();

    if (v121)
    {
      char v16 = v334;
LABEL_63:
      uint64_t v140 = sub_214765CE4(v119, v120, v118);
      *(void *)(v0 + 1304) = v140;
      swift_bridgeObjectRelease();
      if (!v140) {
        goto LABEL_237;
      }
      uint64_t v141 = swift_allocObject();
      *(void *)(v0 + 1312) = v141;
      *(_OWORD *)(v141 + 16) = xmmword_2147B20F0;
      sub_214765C80(0xD000000000000011, 0x80000002147C0780, v79, v315);
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 328))
      {
        uint64_t v12 = (long long *)(v0 + 744);
        if (swift_dynamicCast())
        {
          uint64_t v142 = sub_214773324(*(void *)(v0 + 696), *(void *)(v0 + 704));
          *(void *)(v0 + 1320) = v142;
          *(void *)(v0 + 1328) = v143;
          if (v143 >> 60 != 15)
          {
            unint64_t v27 = v142;
            uint64_t v30 = v143;
            uint64_t v144 = v16;
            uint64_t v145 = *(void *)(v0 + 1112);
            uint64_t v146 = *(void *)(v0 + 1104);
            uint64_t v147 = *(void *)(v0 + 1096);
            sub_21472BBA4(v142, v143);
            sub_214771418(v27, v30, v147);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v147, 1, v146) != 1) {
              goto LABEL_208;
            }
            uint64_t v148 = *(void *)(v0 + 1096);
            sub_21474B19C(v27, v30);
            sub_21472C730(v148, (uint64_t *)&unk_26781C620);
            char v16 = v144;
          }
        }
      }
      else
      {
        sub_21472C730((uint64_t)v315, &qword_26781C4C8);
        uint64_t v12 = (long long *)(v0 + 744);
      }
      continue;
    }
    break;
  }
  uint64_t v122 = *(void *)(v0 + 1176);
  uint64_t v123 = *(void *)(v0 + 1160);
  uint64_t v124 = *(void *)(v0 + 1152);
  uint64_t v125 = sub_2147713B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16))(v122, v125, v124);
  uint64_t v126 = swift_allocObject();
  *(void *)(v126 + 16) = v346;
  *(void *)(v126 + 24) = osloga;
  swift_bridgeObjectRetain();
  unint64_t v127 = sub_2147ACDF8();
  os_log_type_t v128 = sub_2147AD178();
  uint64_t v129 = swift_allocObject();
  *(unsigned char *)(v129 + 16) = 32;
  uint64_t v130 = swift_allocObject();
  *(unsigned char *)(v130 + 16) = 8;
  uint64_t v131 = swift_allocObject();
  *(void *)(v131 + 16) = sub_214773AA8;
  *(void *)(v131 + 24) = v126;
  uint64_t v132 = swift_allocObject();
  *(void *)(v132 + 16) = sub_214773A58;
  *(void *)(v132 + 24) = v131;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
  uint64_t v133 = swift_allocObject();
  *(_OWORD *)(v133 + 16) = xmmword_2147B8430;
  *(void *)(v133 + 32) = sub_214773A60;
  *(void *)(v133 + 40) = v129;
  *(void *)(v133 + 48) = sub_214773A60;
  *(void *)(v133 + 56) = v130;
  *(void *)(v133 + 64) = sub_214773A5C;
  *(void *)(v133 + 72) = v132;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v127, v128))
  {
    uint64_t v136 = *(void *)(v0 + 1176);
    uint64_t v137 = *(void *)(v0 + 1160);
    uint64_t v138 = *(void *)(v0 + 1152);
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v136, v138);
    char v16 = v334;
    type metadata accessor for SEPackageDetails();
    uint64_t v120 = (uint64_t)osloga;
    swift_bridgeObjectRetain();
    id v139 = sub_2147483A8();
    uint64_t v119 = v346;
    sub_214765D2C((uint64_t)v139, v346, (uint64_t)osloga);
    uint64_t v118 = *v317;
    goto LABEL_63;
  }
  os_log_type_t v306 = v128;
  char v134 = (uint8_t *)sub_21475FE60();
  uint64_t v135 = swift_slowAlloc();
  *(void *)(v0 + 960) = 0;
  uint64_t v304 = v135;
  *(void *)(v0 + 968) = v135;
  *(_WORD *)char v134 = 258;
  *(void *)(v0 + 952) = v134 + 2;
  *(void *)(v0 + 680) = sub_214773A60;
  *(void *)(v0 + 688) = v129;
  os_log_type_t v54 = v334;
  sub_21475FE68(v312, v311, v310, v309);
  if (!v334)
  {
    swift_release();
    *(void *)(v0 + 680) = sub_214773A60;
    *(void *)(v0 + 688) = v130;
    sub_21475FE68(v312, v311, v310, v309);
    swift_release();
    *(void *)(v0 + 680) = sub_214773A5C;
    *(void *)(v0 + 688) = v132;
    sub_21475FE68(v312, v311, v310, v309);
    swift_release();
    _os_log_impl(&dword_2146ED000, v127, v306, "Adding %s to dictionary", v134, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v304, -1, -1);
    sub_21475FEA4();
  }
LABEL_93:
  uint64_t v175 = v54;
LABEL_94:
}

uint64_t sub_21476DEAC()
{
  *(void *)(*(void *)v1 + 1408) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v2 = sub_214771248;
  }
  else
  {
    swift_release();
    char v2 = sub_21476E04C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_21476E04C()
{
  uint64_t v354 = v0;
  char v328 = (long long *)(v0 + 93);
  uint64_t v333 = (char *)(v0 + 177);
  uint64_t v341 = (uint64_t)(v0 + 10);
  uint64_t v353 = *MEMORY[0x263EF8340];
  uint64_t v340 = (uint64_t)(v0 + 14);
  uint64_t v343 = (uint64_t)(v0 + 22);
  uint64_t v347 = (uint64_t)(v0 + 30);
  uint64_t v308 = v0 + 38;
  uint64_t v321 = v0 + 50;
  char v322 = v0 + 46;
  uint64_t v327 = v0 + 67;
  uint64_t v310 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 83);
  uint64_t v304 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 85);
  int64_t v324 = (objc_super *)(v0 + 91);
  v315 = v0 + 95;
  unint64_t v316 = v0 + 89;
  uint64_t v299 = (objc_super *)(v0 + 105);
  uint64_t v300 = (objc_super *)(v0 + 103);
  uint64_t v313 = (uint64_t)(v0 + 110);
  uint64_t v314 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 97);
  uint64_t v1 = (void *)v0[172];
  uint64_t v311 = (uint64_t)(v0 + 112);
  uint64_t v312 = (uint64_t)(v0 + 111);
  unint64_t v2 = v0[166];
  uint64_t v3 = v0[165];
  uint64_t v302 = (uint64_t)(v0 + 120);
  uint64_t v303 = (uint64_t)(v0 + 119);
  uint64_t v4 = v0[164];
  uint64_t v301 = (uint64_t)(v0 + 121);
  uint64_t v5 = v0[143];
  uint64_t v306 = (uint64_t)(v0 + 126);
  uint64_t v307 = (uint64_t)(v0 + 125);
  uint64_t v6 = v0[142];
  uint64_t v305 = (uint64_t)(v0 + 127);
  uint64_t v309 = v0 + 129;
  uint64_t v7 = v0[139];
  uint64_t v319 = (char *)v0 + 1417;
  uint64_t v8 = v0[138];
  uint64_t v9 = sub_2147ACD18();
  uint64_t v335 = v10;
  uint64_t v338 = v9;

  sub_21474B19C(v3, v2);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v11(v6, v8);
  v11(v5, v8);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v4 + 16);
  unint64_t v13 = *(void *)(v4 + 24);
  *(void *)(v4 + 16) = v338;
  *(void *)(v4 + 24) = v335;
  unint64_t v14 = v0;
  sub_21472C78C(v12, v13);
  int64_t v336 = (void *)v0[176];
  while (1)
  {
    uint64_t v15 = v14[164];
    swift_beginAccess();
    if (*(void *)(v15 + 24) == 26)
    {
      uint64_t v16 = v14[159];
      uint64_t v17 = v14[158];
      uint64_t v18 = v14[153];
      uint64_t v19 = v14[152];
      v14[67] = v14[151];
      v14[68] = v19;
      v14[69] = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      CredentialType.init(moduleAID:dataSource:)(v17, v16, v327, v328);
      uint64_t v20 = v14[164];
      if (v336)
      {
        uint64_t v174 = (void *)v14[163];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

LABEL_86:
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v170 = (void (*)(void))v14[1];
        v170();
        return;
      }
      uint64_t v21 = *(void *)(v20 + 16);
      unint64_t v22 = *(void *)(v20 + 24);
      *(_OWORD *)(v20 + 16) = *v328;
      sub_21472C78C(v21, v22);
      int64_t v336 = 0;
    }
    uint64_t v23 = v14[164];
    unint64_t v24 = (uint64_t *)(v14[163] + OBJC_IVAR____TtC9SEService16SEPackageDetails_type);
    uint64_t v26 = *v24;
    unint64_t v25 = v24[1];
    uint64_t v28 = *(void *)(v23 + 16);
    unint64_t v27 = *(void *)(v23 + 24);
    if (v25 == 26)
    {
      *unint64_t v24 = v28;
      v24[1] = v27;
      sub_214773278(v28, v27);
      sub_21472C78C(v26, 0x1AuLL);
      goto LABEL_14;
    }
    v14[89] = v26;
    v14[90] = v25;
    if (v27 == 26) {
      break;
    }
    v14[95] = v28;
    v14[96] = v27;
    sub_214773278(v26, v25);
    sub_214773278(v26, v25);
    uint64_t v28 = _s9SEService14CredentialTypeO2eeoiySbAC_ACtFZ_0(v316, v315);
    sub_2147201A0(v14[89], v14[90]);
    sub_21472C78C(v26, v25);
    if ((v28 & 1) == 0) {
      goto LABEL_10;
    }
LABEL_14:
    if (v333[4] == 1)
    {
      uint64_t v54 = v14[163];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v55 = *(void *)(v54 + OBJC_IVAR____TtC9SEService16SEPackageDetails_containers);
      BOOL v56 = __OFADD__(v55, 1);
      uint64_t v57 = v55 + 1;
      if (v56)
      {
        __break(1u);
LABEL_203:
        uint64_t v269 = v14[143];
        uint64_t v270 = v14[139];
        uint64_t v271 = v14[138];
        uint64_t v272 = v14[137];
        long long v273 = *(void (**)(uint64_t, uint64_t, uint64_t))(v270 + 32);
        v14[167] = v273;
        v14[168] = (v270 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
        v273(v269, v272, v271);
        v14[169] = sub_214750CDC();
        uint64_t v274 = swift_allocObject();
        v14[170] = v274;
        *(void *)(v274 + 16) = v25;
        *(void *)(v274 + 24) = v28;
        sub_21472BBA4(v25, v28);
        uint64_t v275 = dword_26781D6E8;
        unint64_t v276 = (void *)swift_task_alloc();
        v14[171] = v276;
        void *v276 = v14;
        v276[1] = sub_21476AA98;
        ((void (*)(uint64_t, uint64_t))((char *)&dword_26781D6E8 + v275))((uint64_t)&unk_26781D6E0, v274);
        return;
      }
      uint64_t v58 = (void *)v14[163];
      *(void *)(v54 + OBJC_IVAR____TtC9SEService16SEPackageDetails_containers) = v57;
    }
    else
    {
      uint64_t v58 = (void *)v14[163];
      uint64_t v59 = v14[162];
      uint64_t v60 = v14[161];
      uint64_t v61 = v14[160];
      uint64_t v62 = v14[159];
      uint64_t v63 = v14[158];
      uint64_t v64 = (objc_class *)type metadata accessor for SEApplet();
      uint64_t v65 = (char *)objc_allocWithZone(v64);
      uint64_t v66 = &v65[OBJC_IVAR____TtC9SEService8SEApplet_identifier];
      *(void *)uint64_t v66 = v61;
      *((void *)v66 + 1) = v60;
      uint64_t v67 = &v65[OBJC_IVAR____TtC9SEService8SEApplet_moduleIdentifier];
      *(void *)uint64_t v67 = v63;
      *((void *)v67 + 1) = v62;
      uint64_t v68 = sub_21472F12C(v59);
      uint64_t v70 = 7;
      if ((v69 & 1) == 0) {
        uint64_t v70 = v68;
      }
      *(void *)&v65[OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState] = v70;
      v14[91] = v65;
      v14[92] = v64;
      uint64_t v71 = [(objc_super *)v324 init];
      swift_beginAccess();
      uint64_t v72 = v71;
      sub_214765C0C();
      swift_endAccess();
    }
    swift_release();
    uint64_t v73 = v14[157];
    if (v73 == v14[156])
    {
LABEL_71:
      uint64_t v145 = v336;
      uint64_t v146 = (void *)v14[134];
      swift_bridgeObjectRelease();
      uint64_t v147 = (void *)sub_2147ACF38();
      id v148 = SESEndPointListWithSession(v146, v147, 0);

      if (v148)
      {
        uint64_t v149 = v14[153];
        uint64_t v150 = v14[152];
        uint64_t v151 = v14[151];
        sub_21472C6F4(0, &qword_26781D6C8);
        uint64_t v348 = sub_2147AD058();

        *(void *)&long long v351 = v151;
        *((void *)&v351 + 1) = v150;
        uint64_t v352 = v149;
        long long v350 = xmmword_2147B3E70;
        swift_getKeyPath();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v152 = SERDataSource.getNameInfo(type:for:)((uint64_t *)&v350);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v152)
        {
          if (sub_21472994C(v152))
          {
            uint64_t v153 = v14[153];
            uint64_t v154 = v14[152];
            uint64_t v155 = v14[151];
            sub_214726168(0, 1, v152);
            uint64_t v342 = *(void *)(v152 + 32);
            uint64_t v345 = *(void *)(v152 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)&long long v351 = v155;
            *((void *)&v351 + 1) = v154;
            uint64_t v352 = v153;
            long long v350 = xmmword_2147B8450;
            swift_getKeyPath();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v156 = SERDataSource.getNameInfo(type:for:)((uint64_t *)&v350);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v156)
            {
              if (sub_21472994C(v156))
              {
                unint64_t v157 = 0x43494E5245504F43;
                uint64_t v158 = v14[152];
                uint64_t v159 = v14[151];
                sub_214726168(0, 1, v156);
                uint64_t v337 = *(objc_super **)(v156 + 32);
                uint64_t v339 = *(void *)(v156 + 40);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                __swift_instantiateConcreteTypeFromMangledName(&qword_26781D248);
                uint64_t v160 = swift_allocObject();
                *(_OWORD *)(v160 + 16) = xmmword_2147B8460;
                strcpy((char *)(v160 + 32), "COPERNICUSHOME");
                *(unsigned char *)(v160 + 47) = -18;
                strcpy((char *)(v160 + 48), "COPERNICUSCAR");
                *(_WORD *)(v160 + 62) = -4864;
                *(void *)(v160 + 64) = 0xD000000000000010;
                *(void *)(v160 + 72) = 0x80000002147C07E0;
                *(void *)(v160 + 80) = 0x43494E5245504F43;
                *(void *)(v160 + 88) = 0xEF4F52494C415355;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v161 = v145;
                uint64_t v162 = sub_214772AD0(v160, v159, v158);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v163 = sub_21472994C(v162);
                unint64_t v164 = MEMORY[0x263F8EE80];
                if (v163)
                {
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781DCB0);
                  uint64_t v165 = sub_2147AD4E8();
                }
                else
                {
                  uint64_t v165 = MEMORY[0x263F8EE80];
                }
                unint64_t v175 = v164;
                *(void *)&long long v351 = v165;
                uint64_t v176 = (void *)swift_bridgeObjectRetain();
                sub_21477255C(v176, 1, &v351);
                if (v161)
                {
                  swift_unexpectedError();
                  return;
                }
                swift_bridgeObjectRelease();
                uint64_t v323 = v351;
                *(void *)&long long v351 = v164;
                unint64_t v177 = swift_bridgeObjectRetain();
                uint64_t v346 = v14;
                uint64_t v344 = sub_214729948(v177);
                if (v344)
                {
                  uint64_t v178 = 0;
                  unint64_t v175 = MEMORY[0x263F8EE80];
                  while (1)
                  {
                    id v182 = (v348 & 0xC000000000000001) != 0
                         ? (id)MEMORY[0x2166A7680](v178, v348)
                         : *(id *)(v348 + 8 * v178 + 32);
                    uint64_t v183 = (uint64_t)v182;
                    uint64_t v184 = v178 + 1;
                    if (__OFADD__(v178, 1)) {
                      break;
                    }
                    unint64_t v185 = v175;
                    id v186 = objc_msgSend(v182, sel_appletIdentifier);
                    unint64_t v14 = (void *)sub_2147ACCD8();
                    unint64_t v188 = v187;

                    unint64_t v175 = v185;
                    unint64_t v190 = sub_21477ECD4((uint64_t)v14, v188);
                    uint64_t v191 = *(void *)(v185 + 16);
                    BOOL v192 = (v189 & 1) == 0;
                    uint64_t v193 = v191 + v192;
                    if (__OFADD__(v191, v192)) {
                      goto LABEL_214;
                    }
                    char v194 = v189;
                    if (*(void *)(v175 + 24) < v193)
                    {
                      sub_214792930(v193, 1);
                      unint64_t v157 = v351;
                      uint64_t v195 = sub_21477ECD4((uint64_t)v14, v188);
                      if ((v194 & 1) != (v196 & 1)) {
                        goto LABEL_198;
                      }
                      unint64_t v190 = v195;
                      unint64_t v175 = v157;
                    }
                    if (v194)
                    {
                      uint64_t v179 = sub_21472BBFC((uint64_t)v14, v188);
                      unint64_t v180 = v175;
                      uint64_t v181 = (void *)(*(void *)(v175 + 56) + 8 * v190);
                      MEMORY[0x2166A7350](v179);
                      sub_214772530(*(void *)((*v181 & 0xFFFFFFFFFFFFFF8) + 0x10));
                      sub_2147AD0A8();
                      sub_2147AD078();
                      unint64_t v175 = v180;
                    }
                    else
                    {
                      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6D0);
                      uint64_t v197 = swift_allocObject();
                      *(_OWORD *)(v197 + 16) = xmmword_2147B8470;
                      *(void *)(v197 + 32) = v183;
                      *(void *)&long long v350 = v197;
                      unint64_t v157 = v175;
                      sub_2147AD078();
                      uint64_t v198 = v350;
                      *(void *)(v175 + 8 * (v190 >> 6) + 64) |= 1 << v190;
                      uint64_t v199 = (void *)(*(void *)(v175 + 48) + 16 * v190);
                      void *v199 = v14;
                      v199[1] = v188;
                      *(void *)(*(void *)(v175 + 56) + 8 * v190) = v198;
                      uint64_t v200 = *(void *)(v175 + 16);
                      BOOL v56 = __OFADD__(v200, 1);
                      uint64_t v201 = v200 + 1;
                      if (v56) {
                        goto LABEL_215;
                      }
                      *(void *)(v175 + 16) = v201;
                    }
                    unint64_t v14 = v346;
                    ++v178;
                    if (v184 == v344) {
                      goto LABEL_121;
                    }
                  }
                  __break(1u);
LABEL_214:
                  __break(1u);
LABEL_215:
                  __break(1u);
LABEL_216:
                  __break(1u);
LABEL_217:
                  __break(1u);
LABEL_218:
                  __break(1u);
LABEL_219:
                  __break(1u);
LABEL_220:
                  __break(1u);
LABEL_221:
                  __break(1u);
LABEL_222:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                  *(void *)&long long v351 = 0;
                  *((void *)&v351 + 1) = 0xE000000000000000;
                  sub_2147AD348();
                  sub_2147AD648();
                  sub_21471F124();
                  sub_2147AD648();
                  long long v286 = v351;
                  sub_214729BF0();
                  swift_allocError();
                  *(_OWORD *)uint64_t v287 = v286;
                  *(unsigned char *)(v287 + 16) = 1;
                  swift_willThrow();
                  sub_21472BBFC(v183, v157);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                }
                else
                {
LABEL_121:
                  swift_bridgeObjectRelease();
                  int64_t v202 = 0;
                  uint64_t v203 = *(void *)(v175 + 64);
                  unint64_t v317 = v175 + 64;
                  uint64_t v204 = -1;
                  uint64_t v205 = -1 << *(unsigned char *)(v175 + 32);
                  if (-v205 < 64) {
                    uint64_t v204 = ~(-1 << -(char)v205);
                  }
                  unint64_t v206 = v204 & v203;
                  int64_t v318 = (unint64_t)(63 - v205) >> 6;
                  unint64_t v320 = v175;
                  if ((v204 & v203) == 0) {
                    goto LABEL_125;
                  }
LABEL_124:
                  unint64_t v207 = __clz(__rbit64(v206));
                  uint64_t v208 = (v206 - 1) & v206;
                  unint64_t v209 = v207 | (v202 << 6);
                  while (1)
                  {
                    unint64_t v213 = (uint64_t *)(*(void *)(v175 + 48) + 16 * v209);
                    uint64_t v183 = *v213;
                    unint64_t v157 = v213[1];
                    unint64_t v214 = *(void *)(*(void *)(v175 + 56) + 8 * v209);
                    sub_21472BBA4(*v213, v157);
                    sub_21472BBA4(v183, v157);
                    unint64_t v334 = v214;
                    swift_bridgeObjectRetain();
                    uint64_t v215 = sub_214772E40(v323, v183, v157);
                    uint64_t v217 = v216;
                    sub_21472BBFC(v183, v157);
                    if (!v217) {
                      break;
                    }
                    BOOL v218 = v215 == 0x43494E5245504F43 && v217 == 0xEF4F52494C415355;
                    int64_t v220 = v337;
                    uint64_t v219 = v339;
                    if (!v218)
                    {
                      char v221 = sub_2147AD668();
                      int64_t v220 = v337;
                      uint64_t v219 = v339;
                      if ((v221 & 1) == 0)
                      {
                        BOOL v222 = v215 == 0x43494E5245504F43 && v217 == 0xEE00454D4F485355;
                        uint64_t v219 = v345;
                        int64_t v220 = (objc_super *)v342;
                        if (!v222)
                        {
                          char v223 = sub_2147AD668();
                          BOOL v224 = v215 == 0x43494E5245504F43 && v217 == 0xED00005241435355;
                          BOOL v225 = v224;
                          uint64_t v219 = v345;
                          int64_t v220 = (objc_super *)v342;
                          if ((v223 & 1) == 0)
                          {
                            uint64_t v219 = v345;
                            int64_t v220 = (objc_super *)v342;
                            if (!v225)
                            {
                              char v226 = sub_2147AD668();
                              uint64_t v219 = v345;
                              int64_t v220 = (objc_super *)v342;
                              if ((v226 & 1) == 0)
                              {
                                if (v215 != 0xD000000000000010
                                  || (uint64_t v219 = v345, v220 = (objc_super *)v342, v217 != 0x80000002147C07E0))
                                {
                                  char v227 = sub_2147AD668();
                                  uint64_t v219 = v345;
                                  int64_t v220 = (objc_super *)v342;
                                  if ((v227 & 1) == 0) {
                                    goto LABEL_222;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    uint64_t v325 = v220;
                    BOOL v326 = (objc_super *)v219;
                    unint64_t v228 = v157 >> 62;
                    swift_bridgeObjectRetain();
                    int64_t v332 = v202;
                    unint64_t v331 = v208;
                    switch(v157 >> 62)
                    {
                      case 1uLL:
                        if (__OFSUB__(HIDWORD(v183), v183)) {
                          goto LABEL_225;
                        }
                        int64_t v229 = HIDWORD(v183) - (int)v183;
LABEL_166:
                        if (v229)
                        {
                          *(void *)&long long v350 = sub_21474D0F8();
                          sub_21474D104(v229);
                          if (v228)
                          {
                            if (v228 == 1) {
                              uint64_t v232 = (int)v183;
                            }
                            else {
                              uint64_t v232 = *(void *)(v183 + 16);
                            }
                            if (v229 < 0) {
                              goto LABEL_224;
                            }
                          }
                          else
                          {
                            if (v229 < 0)
                            {
                              __break(1u);
                              goto LABEL_228;
                            }
                            uint64_t v232 = 0;
                          }
                          unint64_t v14 = (void *)(v157 & 0x3FFFFFFFFFFFFFFFLL);
                          do
                          {
                            if (v228)
                            {
                              if (v228 == 1)
                              {
                                if (v232 < (int)v183 || v232 >= v183 >> 32) {
                                  goto LABEL_216;
                                }
                                uint64_t v234 = sub_2147ACB08();
                                if (!v234) {
                                  goto LABEL_230;
                                }
                                uint64_t v235 = v234;
                                uint64_t v236 = sub_2147ACB28();
                                uint64_t v237 = v232 - v236;
                                if (__OFSUB__(v232, v236)) {
                                  goto LABEL_219;
                                }
                              }
                              else
                              {
                                if (v232 < *(void *)(v183 + 16)) {
                                  goto LABEL_218;
                                }
                                if (v232 >= *(void *)(v183 + 24)) {
                                  goto LABEL_220;
                                }
                                uint64_t v239 = sub_2147ACB08();
                                if (!v239) {
                                  goto LABEL_231;
                                }
                                uint64_t v235 = v239;
                                uint64_t v240 = sub_2147ACB28();
                                uint64_t v237 = v232 - v240;
                                if (__OFSUB__(v232, v240)) {
                                  goto LABEL_221;
                                }
                              }
                              char v238 = *(unsigned char *)(v235 + v237);
                            }
                            else
                            {
                              if (v232 >= BYTE6(v157)) {
                                goto LABEL_217;
                              }
                              *(void *)&long long v351 = v183;
                              WORD4(v351) = v157;
                              BYTE10(v351) = BYTE2(v157);
                              BYTE11(v351) = BYTE3(v157);
                              BYTE12(v351) = BYTE4(v157);
                              BYTE13(v351) = BYTE5(v157);
                              char v238 = *((unsigned char *)&v351 + v232);
                            }
                            v349[0] = v238;
                            sub_2147724A4(v349, (uint64_t *)&v351);
                            long long v241 = v351;
                            sub_21474D2C0();
                            uint64_t v242 = *(void *)(v350 + 16);
                            sub_21474D31C(v242);
                            uint64_t v243 = sub_21474D344(v242, v241, *((uint64_t *)&v241 + 1));
                            nullsub_1(v243);
                            ++v232;
                            --v229;
                          }
                          while (v229);
                          uint64_t v233 = v350;
                          unint64_t v14 = v346;
                        }
                        else
                        {
LABEL_170:
                          uint64_t v233 = sub_21474D224(0);
                        }
                        v14[109] = v233;
                        __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
                        sub_2147271C4((unint64_t *)&qword_26781D4F0, &qword_26781D4E8);
                        uint64_t v244 = sub_2147ACF18();
                        uint64_t v246 = v245;
                        swift_bridgeObjectRelease();
                        uint64_t v247 = (objc_class *)type metadata accessor for SEApplet();
                        uint64_t v248 = (char *)objc_allocWithZone(v247);
                        char v249 = (uint64_t *)&v248[OBJC_IVAR____TtC9SEService8SEApplet_identifier];
                        uint64_t *v249 = v244;
                        v249[1] = v246;
                        uint64_t v250 = (objc_super **)&v248[OBJC_IVAR____TtC9SEService8SEApplet_moduleIdentifier];
                        *uint64_t v250 = v325;
                        v250[1] = v326;
                        uint64_t v251 = sub_21472F12C(15);
                        uint64_t v253 = 7;
                        if ((v252 & 1) == 0) {
                          uint64_t v253 = v251;
                        }
                        *(void *)&v248[OBJC_IVAR____TtC9SEService8SEApplet_lifecycleState] = v253;
                        v346[103] = v248;
                        v346[104] = v247;
                        uint64_t v254 = [(objc_super *)v300 init];
                        uint64_t v255 = sub_214725A84(v334);
                        swift_bridgeObjectRelease();
                        uint64_t v256 = sub_214772090(v254, v255);
                        v346[107] = sub_214765864(v183, v157);
                        uint64_t v257 = sub_2147ACF18();
                        uint64_t v259 = v258;
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        CredentialType.init(from:)((uint64_t *)&v351);
                        swift_bridgeObjectRelease();
                        long long v260 = v351;
                        uint64_t v261 = (objc_class *)type metadata accessor for SEPackageDetails();
                        uint64_t v262 = objc_allocWithZone(v261);
                        uint64_t v263 = &v262[OBJC_IVAR____TtC9SEService16SEPackageDetails_type];
                        *(_OWORD *)uint64_t v263 = xmmword_2147B20F0;
                        v262[OBJC_IVAR____TtC9SEService16SEPackageDetails_packageLoaded] = 1;
                        *(void *)&v262[OBJC_IVAR____TtC9SEService16SEPackageDetails_containers] = 1;
                        *(void *)&v262[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances] = v256;
                        uint64_t v264 = *(void *)v263;
                        unint64_t v265 = *((void *)v263 + 1);
                        *(_OWORD *)uint64_t v263 = v260;
                        sub_21472C78C(v264, v265);
                        v346[105] = v262;
                        unint64_t v14 = v346;
                        v346[106] = v261;
                        id v266 = [(objc_super *)v299 init];
                        sub_214765D2C((uint64_t)v266, v257, v259);
                        sub_21472BBFC(v183, v157);
                        unint64_t v175 = v320;
                        int64_t v202 = v332;
                        unint64_t v206 = v331;
                        if (v331) {
                          goto LABEL_124;
                        }
LABEL_125:
                        int64_t v210 = v202 + 1;
                        if (__OFADD__(v202, 1))
                        {
                          __break(1u);
LABEL_224:
                          __break(1u);
LABEL_225:
                          __break(1u);
LABEL_226:
                          __break(1u);
                        }
                        if (v210 >= v318) {
                          goto LABEL_206;
                        }
                        unint64_t v211 = *(void *)(v317 + 8 * v210);
                        ++v202;
                        if (v211) {
                          goto LABEL_138;
                        }
                        int64_t v202 = v210 + 1;
                        if (v210 + 1 >= v318) {
                          goto LABEL_206;
                        }
                        unint64_t v211 = *(void *)(v317 + 8 * v202);
                        if (v211) {
                          goto LABEL_138;
                        }
                        int64_t v202 = v210 + 2;
                        if (v210 + 2 >= v318) {
                          goto LABEL_206;
                        }
                        unint64_t v211 = *(void *)(v317 + 8 * v202);
                        if (v211) {
                          goto LABEL_138;
                        }
                        int64_t v212 = v210 + 3;
                        if (v212 >= v318)
                        {
LABEL_206:
                          swift_release();
                          swift_bridgeObjectRelease();
                          swift_release();
                          swift_bridgeObjectRelease();
                          if (v344 || (*((unsigned char *)v328 + 675) & 1) == 0)
                          {
                            swift_bridgeObjectRelease();
                          }
                          else
                          {
                            uint64_t v277 = sub_21474D17C(0);
                            long long v351 = xmmword_2147B8480;
                            id v278 = sub_2147499B0(1, 1, v277, v342, v345, &v351);
                            sub_214765D2C((uint64_t)v278, 0xD000000000000018, 0x80000002147BDF10);
                          }
                          uint64_t v279 = sub_214772184(v14[155]);
                          char v280 = *((unsigned char *)v346 + 1418);
                          swift_bridgeObjectRelease();
                          uint64_t v281 = v346[129];
                          uint64_t v282 = (objc_class *)type metadata accessor for SEState();
                          uint64_t v283 = objc_allocWithZone(v282);
                          v283[OBJC_IVAR____TtC9SEService7SEState_seType] = v280;
                          *(void *)&v283[OBJC_IVAR____TtC9SEService7SEState_freeMemory] = v279;
                          *(void *)&v283[OBJC_IVAR____TtC9SEService7SEState_infoDictionary] = v281;
                          v346[101] = v283;
                          v346[102] = v282;
                          swift_bridgeObjectRetain();
                          id v284 = objc_msgSendSuper2((objc_super *)(v346 + 101), sel_init);
                          swift_bridgeObjectRelease();
                          swift_task_dealloc();
                          swift_task_dealloc();
                          swift_task_dealloc();
                          swift_task_dealloc();
                          swift_task_dealloc();
                          swift_task_dealloc();
                          swift_task_dealloc();
                          swift_task_dealloc();
                          swift_task_dealloc();
                          uint64_t v285 = (void (*)(id))v346[1];
                          v285(v284);
                          return;
                        }
                        unint64_t v211 = *(void *)(v317 + 8 * v212);
                        if (!v211)
                        {
                          while (1)
                          {
                            int64_t v202 = v212 + 1;
                            if (__OFADD__(v212, 1)) {
                              break;
                            }
                            if (v202 >= v318) {
                              goto LABEL_206;
                            }
                            unint64_t v211 = *(void *)(v317 + 8 * v202);
                            ++v212;
                            if (v211) {
                              goto LABEL_138;
                            }
                          }
LABEL_228:
                          __break(1u);
LABEL_229:
                          __break(1u);
LABEL_230:
                          __break(1u);
LABEL_231:
                          __break(1u);
                          JUMPOUT(0x2147710DCLL);
                        }
                        int64_t v202 = v212;
LABEL_138:
                        uint64_t v208 = (v211 - 1) & v211;
                        unint64_t v209 = __clz(__rbit64(v211)) + (v202 << 6);
                        break;
                      case 2uLL:
                        uint64_t v231 = *(void *)(v183 + 16);
                        uint64_t v230 = *(void *)(v183 + 24);
                        int64_t v229 = v230 - v231;
                        if (!__OFSUB__(v230, v231)) {
                          goto LABEL_166;
                        }
                        goto LABEL_226;
                      case 3uLL:
                        goto LABEL_170;
                      default:
                        int64_t v229 = BYTE6(v157);
                        goto LABEL_166;
                    }
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                  *(void *)&long long v351 = 0;
                  *((void *)&v351 + 1) = 0xE000000000000000;
                  sub_2147AD348();
                  swift_bridgeObjectRelease();
                  strcpy((char *)&v351, "Invalid AID ");
                  BYTE13(v351) = 0;
                  HIWORD(v351) = -5120;
                  v14[123] = sub_214765864(v183, v157);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
                  sub_2147271C4((unint64_t *)&qword_26781D4F0, &qword_26781D4E8);
                  sub_2147ACF18();
                  swift_bridgeObjectRelease();
                  sub_2147ACFC8();
                  swift_bridgeObjectRelease();
                  sub_2147ACFC8();
                  long long v267 = v351;
                  sub_214729BF0();
                  swift_allocError();
                  *(_OWORD *)uint64_t v268 = v267;
                  *(unsigned char *)(v268 + 16) = 1;
                  swift_willThrow();
                  sub_21472BBFC(v183, v157);
                  swift_release();
                }
                goto LABEL_86;
              }
              swift_bridgeObjectRelease();
            }
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_214729BF0();
        swift_allocError();
        uint64_t v172 = "Could not get PTA info";
        unint64_t v173 = 0xD000000000000016;
      }
      else
      {
        swift_bridgeObjectRelease();
        *(void *)&long long v351 = 0;
        *((void *)&v351 + 1) = 0xE000000000000000;
        sub_2147AD348();
        swift_bridgeObjectRelease();
        sub_214729BF0();
        swift_allocError();
        uint64_t v172 = "could not get endpoints ";
        unint64_t v173 = 0xD000000000000018;
      }
      *(void *)uint64_t v171 = v173;
      *(void *)(v171 + 8) = (unint64_t)(v172 - 32) | 0x8000000000000000;
      *(unsigned char *)(v171 + 16) = 0;
LABEL_85:
      swift_willThrow();
      goto LABEL_86;
    }
    while (1)
    {
      uint64_t v74 = *(void *)(v14[154] + 8 * v73 + 32);
      v14[157] = v73 + 1;
      if (__OFADD__(v73, 1))
      {
        __break(1u);
LABEL_198:
        sub_2147AD6B8();
        return;
      }
      if (!*(void *)(v74 + 16))
      {
        swift_bridgeObjectRetain();
LABEL_83:
        swift_bridgeObjectRelease();
        goto LABEL_84;
      }
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_21477EA80(0x416567616B636170, 0xEA00000000006469);
      if ((v76 & 1) == 0) {
        goto LABEL_83;
      }
      sub_21472B428(*(void *)(v74 + 56) + 32 * v75, v347);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_83;
      }
      uint64_t v77 = v14[80];
      if (!*(void *)(v74 + 16)
        || (uint64_t v78 = v14[79], v79 = sub_21477EA80(0x6941656C75646F6DLL, 0xE900000000000064), (v80 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_84;
      }
      sub_21472B428(*(void *)(v74 + 56) + 32 * v79, v343);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_82;
      }
      uint64_t v81 = v14[75];
      v14[158] = v81;
      uint64_t v82 = (void *)v14[76];
      v14[159] = v82;
      if (!*(void *)(v74 + 16)) {
        goto LABEL_70;
      }
      uint64_t v83 = sub_21477EA80(0x694174656C707061, 0xE900000000000064);
      if ((v84 & 1) == 0) {
        goto LABEL_70;
      }
      sub_21472B428(*(void *)(v74 + 56) + 32 * v83, v341);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_82;
      }
      v14[160] = v14[73];
      v14[161] = v14[74];
      if (!*(void *)(v74 + 16) || (uint64_t v85 = sub_21477EA80(0x6C6379436566696CLL, 0xEE00657461745365), (v86 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_70:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_84:
        swift_bridgeObjectRelease();
        sub_2147AD348();
        uint64_t v166 = sub_2147ACEB8();
        uint64_t v168 = v167;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v351 = v166;
        *((void *)&v351 + 1) = v168;
        sub_2147ACFC8();
        sub_214729BF0();
        swift_allocError();
        *(void *)uint64_t v169 = v166;
        *(void *)(v169 + 8) = v168;
        *(unsigned char *)(v169 + 16) = 1;
        goto LABEL_85;
      }
      sub_21472B428(*(void *)(v74 + 56) + 32 * v85, v340);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_82:
        swift_bridgeObjectRelease();
        goto LABEL_83;
      }
      v14[162] = v14[133];
      uint64_t v87 = v78;
      if ((sub_2147AD008() & 1) == 0) {
        break;
      }
      uint64_t v88 = v14[148];
      uint64_t v89 = v14[145];
      uint64_t v90 = v14[144];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v91 = sub_2147713B4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v88, v91, v90);
      uint64_t v92 = swift_allocObject();
      *(void *)(v92 + 16) = v87;
      *(void *)(v92 + 24) = v77;
      uint64_t v93 = sub_2147ACDF8();
      os_log_type_t v94 = sub_2147AD188();
      uint64_t v95 = swift_allocObject();
      *(unsigned char *)(v95 + 16) = 32;
      uint64_t v96 = swift_allocObject();
      *(unsigned char *)(v96 + 16) = 8;
      uint64_t v97 = swift_allocObject();
      *(void *)(v97 + 16) = sub_214773AA8;
      *(void *)(v97 + 24) = v92;
      uint64_t v98 = swift_allocObject();
      *(void *)(v98 + 16) = sub_214773A58;
      *(void *)(v98 + 24) = v97;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
      uint64_t v99 = swift_allocObject();
      *(_OWORD *)(v99 + 16) = xmmword_2147B8430;
      *(void *)(v99 + 32) = sub_214773A60;
      *(void *)(v99 + 40) = v95;
      *(void *)(v99 + 48) = sub_214773A60;
      *(void *)(v99 + 56) = v96;
      *(void *)(v99 + 64) = sub_214773A5C;
      *(void *)(v99 + 72) = v98;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v93, v94))
      {
        uint64_t v112 = (uint8_t *)sub_21475FE60();
        uint64_t v113 = swift_slowAlloc();
        v14[126] = 0;
        os_log_t oslogb = (os_log_t)v113;
        v14[127] = v113;
        *(_WORD *)uint64_t v112 = 258;
        v14[125] = v112 + 2;
        v14[83] = sub_214773A60;
        v14[84] = v95;
        uint64_t v52 = v336;
        sub_21475FE68(v310, v307, v306, v305);
        if (!v336)
        {
          swift_release();
          v14[83] = sub_214773A60;
          v14[84] = v96;
          sub_21475FE68(v310, v307, v306, v305);
          swift_release();
          v14[83] = sub_214773A5C;
          v14[84] = v98;
          sub_21475FE68(v310, v307, v306, v305);
          swift_release();
          _os_log_impl(&dword_2146ED000, v93, v94, "Skipping %s processing due to having PTA prefix", v112, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2166A8870](oslogb, -1, -1);
          sub_21475FEA4();
        }
        goto LABEL_89;
      }
      uint64_t v100 = v14[148];
      uint64_t v101 = v14[145];
      uint64_t v102 = v14[144];
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v102);
LABEL_49:
      uint64_t v73 = v14[157];
      if (v73 == v14[156]) {
        goto LABEL_71;
      }
    }
    osos_log_t loga = v78;
    int64_t v330 = (uint8_t *)v77;
    uint64_t v103 = v14;
    uint64_t v104 = v14[153];
    uint64_t v105 = v103[152];
    v103[61] = v103[151];
    v103[62] = v105;
    v103[63] = v104;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v106._uint64_t countAndFlagsBits = v81;
    v106._object = v82;
    Swift::Bool v107 = SERDataSource.isSystemApplet(moduleAID:)(v106);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v107)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = v103;
      goto LABEL_49;
    }
    sub_214765C80(0xD000000000000011, 0x80000002147C0760, v74, v321);
    unint64_t v14 = v103;
    if (v103[53])
    {
      if (swift_dynamicCast()) {
        char v108 = *v333;
      }
      else {
        char v108 = 0;
      }
      uint64_t v109 = v322;
      Swift::String v110 = v319;
    }
    else
    {
      sub_21472C730((uint64_t)v321, &qword_26781C4C8);
      char v108 = 0;
      uint64_t v109 = v322;
      Swift::String v110 = v319;
    }
    v333[4] = v108;
    uint64_t v111 = (uint64_t)v109;
    sub_214765C80(0x736E4979786F7270, 0xED000065636E6174, v74, v109);
    if (v14[49])
    {
      if (!swift_dynamicCast() || (*v110 & 1) == 0) {
        goto LABEL_54;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
    sub_21472C730(v111, &qword_26781C4C8);
LABEL_54:
    uint64_t v114 = *v309;
    swift_bridgeObjectRetain();
    uint64_t v115 = (uint64_t)osloga;
    uint64_t v116 = v77;
    uint64_t v117 = sub_214765CE4((uint64_t)osloga, v77, v114);
    swift_bridgeObjectRelease();

    if (!v117)
    {
      uint64_t v118 = v14[147];
      uint64_t v119 = v14[145];
      uint64_t v120 = v14[144];
      uint64_t v121 = sub_2147713B4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16))(v118, v121, v120);
      uint64_t v122 = swift_allocObject();
      *(void *)(v122 + 16) = osloga;
      *(void *)(v122 + 24) = v330;
      swift_bridgeObjectRetain();
      uint64_t v123 = sub_2147ACDF8();
      os_log_type_t v124 = sub_2147AD178();
      uint64_t v125 = v14;
      uint64_t v126 = swift_allocObject();
      *(unsigned char *)(v126 + 16) = 32;
      uint64_t v127 = swift_allocObject();
      *(unsigned char *)(v127 + 16) = 8;
      uint64_t v128 = swift_allocObject();
      *(void *)(v128 + 16) = sub_214773AA8;
      *(void *)(v128 + 24) = v122;
      uint64_t v129 = swift_allocObject();
      *(void *)(v129 + 16) = sub_214773A58;
      *(void *)(v129 + 24) = v128;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
      uint64_t v130 = swift_allocObject();
      *(_OWORD *)(v130 + 16) = xmmword_2147B8430;
      *(void *)(v130 + 32) = sub_214773A60;
      *(void *)(v130 + 40) = v126;
      *(void *)(v130 + 48) = sub_214773A60;
      *(void *)(v130 + 56) = v127;
      *(void *)(v130 + 64) = sub_214773A5C;
      *(void *)(v130 + 72) = v129;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v123, v124))
      {
        uint64_t v131 = (uint8_t *)sub_21475FE60();
        uint64_t v132 = swift_slowAlloc();
        v125[120] = 0;
        uint64_t v290 = v132;
        v125[121] = v132;
        *(_WORD *)uint64_t v131 = 258;
        v125[119] = v131 + 2;
        v125[85] = sub_214773A60;
        v125[86] = v126;
        uint64_t v52 = v336;
        sub_21475FE68(v304, v303, v302, v301);
        if (!v336)
        {
          swift_release();
          v125[85] = sub_214773A60;
          v125[86] = v127;
          sub_21475FE68(v304, v303, v302, v301);
          swift_release();
          v125[85] = sub_214773A5C;
          v125[86] = v129;
          sub_21475FE68(v304, v303, v302, v301);
          swift_release();
          _os_log_impl(&dword_2146ED000, v123, v124, "Adding %s to dictionary", v131, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2166A8870](v290, -1, -1);
          sub_21475FEA4();
        }
        goto LABEL_89;
      }
      uint64_t v133 = v125[147];
      uint64_t v134 = v125[145];
      uint64_t v135 = v125[144];
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v135);
      unint64_t v14 = v125;
      type metadata accessor for SEPackageDetails();
      uint64_t v116 = (uint64_t)v330;
      swift_bridgeObjectRetain();
      id v136 = sub_2147483A8();
      uint64_t v115 = (uint64_t)osloga;
      sub_214765D2C((uint64_t)v136, (uint64_t)osloga, (uint64_t)v330);
      uint64_t v114 = *v309;
    }
    uint64_t v137 = sub_214765CE4(v115, v116, v114);
    v14[163] = v137;
    swift_bridgeObjectRelease();
    if (!v137) {
      goto LABEL_229;
    }
    uint64_t v138 = swift_allocObject();
    v14[164] = v138;
    *(_OWORD *)(v138 + 16) = xmmword_2147B20F0;
    sub_214765C80(0xD000000000000011, 0x80000002147C0780, v74, v308);
    swift_bridgeObjectRelease();
    if (v14[41])
    {
      if (swift_dynamicCast())
      {
        uint64_t v139 = sub_214773324(v14[87], v14[88]);
        v14[165] = v139;
        v14[166] = v140;
        if (v140 >> 60 != 15)
        {
          unint64_t v25 = v139;
          uint64_t v28 = v140;
          uint64_t v141 = v14[139];
          uint64_t v142 = v14[138];
          uint64_t v143 = v14[137];
          sub_21472BBA4(v139, v140);
          sub_214771418(v25, v28, v143);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v143, 1, v142) != 1) {
            goto LABEL_203;
          }
          uint64_t v144 = v14[137];
          sub_21474B19C(v25, v28);
          sub_21472C730(v144, (uint64_t *)&unk_26781C620);
        }
      }
    }
    else
    {
      sub_21472C730((uint64_t)v308, &qword_26781C4C8);
    }
  }
  sub_21471ED54(v26, v25);
  sub_21471ED54(v26, v25);
  sub_2147201A0(v26, v25);
  sub_21472C78C(v26, v25);
  sub_21472C78C(v28, 0x1AuLL);
LABEL_10:
  uint64_t v292 = v14[164];
  unint64_t v29 = (void *)v14[163];
  uint64_t v30 = v14[161];
  uint64_t v31 = v14[160];
  uint64_t v32 = v14[146];
  uint64_t v33 = v14[145];
  uint64_t v34 = v14[144];
  uint64_t v35 = sub_2147713B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v35, v34);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v31;
  *(void *)(v36 + 24) = v30;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v29;
  swift_bridgeObjectRetain();
  id v38 = v29;
  swift_retain();
  osos_log_type_t log = (os_log_t)sub_2147ACDF8();
  os_log_type_t log = sub_2147AD198();
  unint64_t v329 = (uint8_t *)swift_allocObject();
  v329[16] = 32;
  uint64_t v39 = swift_allocObject();
  *(unsigned char *)(v39 + 16) = 8;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_214773AA8;
  *(void *)(v40 + 24) = v36;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_214773A58;
  *(void *)(v41 + 24) = v40;
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 16) = 32;
  uint64_t v43 = swift_allocObject();
  *(unsigned char *)(v43 + 16) = 8;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_214772A60;
  *(void *)(v44 + 24) = v37;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_214773A58;
  *(void *)(v45 + 24) = v44;
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = 32;
  uint64_t v46 = swift_allocObject();
  *(unsigned char *)(v46 + 16) = 8;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = sub_214772A68;
  *(void *)(v47 + 24) = v292;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = sub_214773A58;
  *(void *)(v48 + 24) = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6C0);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_2147B8440;
  *(void *)(v49 + 32) = sub_214773A60;
  *(void *)(v49 + 40) = v329;
  *(void *)(v49 + 48) = sub_214773A60;
  *(void *)(v49 + 56) = v39;
  *(void *)(v49 + 64) = sub_214773A5C;
  *(void *)(v49 + 72) = v41;
  *(void *)(v49 + 80) = sub_214773A60;
  *(void *)(v49 + 88) = v42;
  *(void *)(v49 + 96) = sub_214773A60;
  *(void *)(v49 + 104) = v43;
  *(void *)(v49 + 112) = sub_214773A5C;
  *(void *)(v49 + 120) = v45;
  *(void *)(v49 + 128) = sub_214773A60;
  *(void *)(v49 + 136) = v28;
  *(void *)(v49 + 144) = sub_214773A60;
  *(void *)(v49 + 152) = v46;
  *(void *)(v49 + 160) = sub_214773A5C;
  *(void *)(v49 + 168) = v48;
  swift_retain();
  uint64_t v293 = v39;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  unint64_t v25 = (unint64_t)oslog;
  if (!os_log_type_enabled(oslog, log))
  {
    os_log_t loga = (os_log_t)v14[146];
    uint64_t v53 = v14[145];
    uint64_t v291 = (uint8_t *)v14[144];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(os_log_t, uint8_t *))(v53 + 8))(loga, v291);
    goto LABEL_14;
  }
  uint64_t v289 = v46;
  uint64_t v50 = (uint8_t *)sub_21475FE60();
  uint64_t v51 = swift_slowAlloc();
  v14[111] = 0;
  uint64_t v288 = v51;
  v14[112] = v51;
  *(_WORD *)uint64_t v50 = 770;
  v14[110] = v50 + 2;
  v14[97] = sub_214773A60;
  v14[98] = v329;
  uint64_t v52 = v336;
  sub_21475FE68(v314, v313, v312, v311);
  if (!v336)
  {
    swift_release();
    v14[97] = sub_214773A60;
    v14[98] = v293;
    sub_21475FE68(v314, v313, v312, v311);
    swift_release();
    v14[97] = sub_214773A5C;
    v14[98] = v41;
    sub_21475FE68(v314, v313, v312, v311);
    swift_release();
    v14[97] = sub_214773A60;
    v14[98] = v42;
    sub_21475FE68(v314, v313, v312, v311);
    swift_release();
    v14[97] = sub_214773A60;
    v14[98] = v43;
    sub_21475FE68(v314, v313, v312, v311);
    swift_release();
    v14[97] = sub_214773A5C;
    v14[98] = v45;
    sub_21475FE68(v314, v313, v312, v311);
    swift_release();
    v14[97] = sub_214773A60;
    v14[98] = v28;
    sub_21475FE68(v314, v313, v312, v311);
    swift_release();
    v14[97] = sub_214773A60;
    v14[98] = v289;
    sub_21475FE68(v314, v313, v312, v311);
    swift_release();
    v14[97] = sub_214773A5C;
    v14[98] = v48;
    sub_21475FE68(v314, v313, v312, v311);
    swift_release();
    _os_log_impl(&dword_2146ED000, oslog, log, "Type mismatch for %s: %s && %s", v50, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v288, -1, -1);
    sub_21475FEA4();
  }
LABEL_89:
}

uint64_t sub_2147710EC()
{
  uint64_t v1 = (void *)v0[163];
  uint64_t v2 = v0[143];
  uint64_t v3 = v0[139];
  uint64_t v4 = v0[138];
  sub_21474B19C(v0[165], v0[166]);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214771248()
{
  unint64_t v1 = *(void *)(v0 + 1328);
  uint64_t v2 = *(void *)(v0 + 1320);
  uint64_t v3 = *(void **)(v0 + 1304);
  uint64_t v4 = *(void *)(v0 + 1144);
  uint64_t v5 = *(void *)(v0 + 1112);
  uint64_t v6 = *(void *)(v0 + 1104);

  sub_21474B19C(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_2147713B4()
{
  if (qword_26781BFB0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_2147ACE18();
  return __swift_project_value_buffer(v0, (uint64_t)qword_26782C710);
}

uint64_t sub_214771418@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v7 = (int)v7;
LABEL_6:
      if (v7 != 16)
      {
LABEL_13:
        sub_21472BBFC(a1, a2);
        uint64_t v11 = sub_2147ACD88();
        uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
        uint64_t v13 = v11;
        uint64_t v14 = a3;
        uint64_t v15 = 1;
        goto LABEL_19;
      }
      if (v4)
      {
        if (v4 != 1)
        {
          uint64_t v16 = *(void *)(a1 + 16);
          swift_retain();
          swift_retain();
          if (!sub_2147ACB08())
          {
LABEL_28:
            sub_2147ACB18();
            __break(1u);
            JUMPOUT(0x21477172CLL);
          }
          if (!__OFSUB__(v16, sub_2147ACB28()))
          {
            sub_2147ACB18();
            swift_release();
            swift_release();
            goto LABEL_18;
          }
          goto LABEL_25;
        }
        if ((int)a1 <= a1 >> 32)
        {
          if (!sub_2147ACB08())
          {
LABEL_27:
            sub_2147ACB18();
            __break(1u);
            goto LABEL_28;
          }
          if (!__OFSUB__((int)a1, sub_2147ACB28()))
          {
            sub_2147ACB18();
            goto LABEL_18;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
LABEL_18:
      sub_2147ACD68();
      sub_21472BBFC(a1, a2);
      uint64_t v17 = sub_2147ACD88();
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
      uint64_t v13 = v17;
      uint64_t v14 = a3;
      uint64_t v15 = 0;
LABEL_19:
      return v12(v14, v15, 1, v13);
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v10) {
        goto LABEL_6;
      }
      goto LABEL_23;
    case 3uLL:
      goto LABEL_13;
    default:
      uint64_t v7 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_21477173C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  return MEMORY[0x270FA2498](sub_214771760, 0, 0);
}

uint64_t sub_214771760()
{
  unint64_t v1 = (void *)v0[17];
  uint64_t v2 = sub_2147ACCA8();
  v0[20] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_214771878;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_21475AC90;
  v0[13] = &block_descriptor_150;
  v0[14] = v3;
  objc_msgSend(v1, sel_isSPAppletWithData_completionHandler_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214771878()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_2147719F4;
  }
  else {
    uint64_t v2 = sub_214771988;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214771988()
{
  uint64_t v1 = *(void **)(v0 + 160);
  **(void **)(v0 + 128) = *(void *)(v0 + 120);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2147719F4()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214771A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  uint64_t v4 = sub_2147ACD88();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214771B28, 0, 0);
}

uint64_t sub_214771B28()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = (void *)v0[16];
  uint64_t v3 = sub_2147ACD38();
  v0[21] = v3;
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_214771C3C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_214771E50;
  v0[13] = &block_descriptor_0;
  v0[14] = v4;
  objc_msgSend(v2, sel_getCredentialConfigUUIDFor_completionHandler_, v3, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214771C3C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    uint64_t v2 = sub_214771DD4;
  }
  else {
    uint64_t v2 = sub_214771D4C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214771D4C()
{
  uint64_t v1 = (void *)v0[21];
  (*(void (**)(void, void, void))(v0[19] + 32))(v0[15], v0[20], v0[18]);

  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_214771DD4()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214771E50(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_2147ACD88();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    *BOOL v10 = a3;
    id v11 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_2147ACD58();
    (*(void (**)(void, char *, uint64_t))(v6 + 32))(*(void *)(*(void *)(v9 + 64) + 40), v8, v5);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_214771FAC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC9SEService16SEPackageDetails_type + 8);
  if (v1 == 26) {
    return 0x296C696E28;
  }
  sub_21471ED54(*(void *)(a1 + OBJC_IVAR____TtC9SEService16SEPackageDetails_type), v1);
  return sub_2147ACF78();
}

uint64_t sub_214772014(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 == 26) {
    return 0x296C696E28;
  }
  sub_21471ED54(*v2, v3);
  return sub_2147ACF78();
}

uint64_t sub_214772090(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_2147AD498();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      type metadata accessor for SEApplet();
      uint64_t v4 = sub_2147AD098();
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
      *(void *)(v5 + 16) = a2;
      uint64_t v11 = v4;
      *(void *)(v5 + 32) = a1;
      if (a2 != 1)
      {
        *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x28) = a1;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          uint64_t v7 = (void *)(v5 + 48);
          do
          {
            *v7++ = a1;
            id v8 = a1;
            --v6;
          }
          while (v6);
        }
        id v9 = a1;
      }
    }
    else
    {
      uint64_t v11 = MEMORY[0x263F8EE78];
    }
    sub_2147AD078();
    return v11;
  }
  return result;
}

uint64_t sub_214772184(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    goto LABEL_13;
  }
  uint64_t v2 = sub_21477EA80(0xD000000000000010, 0x80000002147C0920);
  if ((v3 & 1) == 0) {
    goto LABEL_13;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)(*(void *)(a1 + 56) + 8 * v2);
  uint64_t v5 = sub_21477EA80(0xD000000000000012, 0x80000002147C0980);
  if ((v6 & 1) == 0) {
    goto LABEL_13;
  }
  if (*(void *)(a1 + 16)
    && (uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8 * v5),
        uint64_t v8 = sub_21477EA80(0xD000000000000015, 0x80000002147C09A0),
        (v9 & 1) != 0)
    && *(void *)(a1 + 16)
    && (uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8 * v8),
        uint64_t v11 = sub_21477EA80(0xD000000000000011, 0x80000002147C09C0),
        (v12 & 1) != 0)
    && *(void *)(a1 + 16)
    && (uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * v11),
        uint64_t result = sub_21477EA80(0xD000000000000015, 0x80000002147C09E0),
        (v15 & 1) != 0))
  {
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * result);
    uint64_t v17 = v16 - v13;
    if (__OFSUB__(v16, v13))
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = (objc_class *)type metadata accessor for MemoryUsage();
      uint64_t v19 = (char *)objc_allocWithZone(v18);
      *(void *)&v19[OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap] = v4;
      *(void *)&v19[OBJC_IVAR____TtC9SEService11MemoryUsage_cor] = v7;
      *(void *)&v19[OBJC_IVAR____TtC9SEService11MemoryUsage_cod] = v10;
      *(void *)&v19[OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices] = v17;
      v21.receiver = v19;
      v21.super_class = v18;
      return (uint64_t)objc_msgSendSuper2(&v21, sel_init);
    }
  }
  else
  {
LABEL_13:
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v20 = 0xD000000000000033;
    *(void *)(v20 + 8) = 0x80000002147C0940;
    *(unsigned char *)(v20 + 16) = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_214772374()
{
  uint64_t v0 = sub_2147ACE18();
  __swift_allocate_value_buffer(v0, qword_26782C710);
  __swift_project_value_buffer(v0, (uint64_t)qword_26782C710);
  return sub_2147ACE08();
}

uint64_t sub_2147723F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_214759AE8;
  return sub_2147663F0(a1, a2, a3);
}

uint64_t sub_2147724A4@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D720);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x263F8E778];
  *(_OWORD *)(v4 + 16) = xmmword_2147B7590;
  uint64_t v6 = MEMORY[0x263F8E7C0];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(unsigned char *)(v4 + 32) = v3;
  uint64_t result = sub_2147ACF68();
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t sub_214772530(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return sub_2147AD088();
  }
  return result;
}

void sub_21477255C(void *a1, char a2, void *a3)
{
  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v42 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[6];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_21477EA80(v7, v6);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_214790C5C();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    objc_super v21 = (uint64_t *)(v20[6] + 16 * v11);
    *objc_super v21 = v7;
    v21[1] = v6;
    *(void *)(v20[7] + 8 * v11) = v8;
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    uint64_t v25 = v42 - 1;
    if (v42 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v26 = a1 + 9;
    while (1)
    {
      uint64_t v28 = *(v26 - 2);
      uint64_t v27 = *(v26 - 1);
      uint64_t v29 = *v26;
      uint64_t v30 = (void *)*a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_21477EA80(v28, v27);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v23 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v23) {
        break;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_214792C3C(v35, 1);
        unint64_t v31 = sub_21477EA80(v28, v27);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      id v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = (uint64_t *)(v38[6] + 16 * v31);
      *uint64_t v39 = v28;
      v39[1] = v27;
      *(void *)(v38[7] + 8 * v31) = v29;
      uint64_t v40 = v38[2];
      BOOL v23 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v38[2] = v41;
      v26 += 3;
      if (!--v25) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_214792C3C(v14, a2 & 1);
  uint64_t v16 = sub_21477EA80(v7, v6);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v18 = (void *)swift_allocError();
    swift_willThrow();
    id v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_2147AD6B8();
  __break(1u);
LABEL_26:
  sub_2147AD348();
  sub_2147ACFC8();
  sub_2147AD3F8();
  sub_2147ACFC8();
  sub_2147AD4A8();
  __break(1u);
}

uint64_t sub_2147728F0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_214772928@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_214772934()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  uint64_t v1 = sub_2147ACEB8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2147729B0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char **sub_2147729C0(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_214760824(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_2147729C8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2147729D8()
{
  return sub_21476012C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_2147729E0(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_214760154(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_2147729E8()
{
  if (*(void *)(v0 + 24) >= 0x1BuLL) {
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214772A28()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_214772A60()
{
  return sub_214771FAC(*(void *)(v0 + 16));
}

uint64_t sub_214772A68()
{
  return sub_214772014(v0);
}

uint64_t sub_214772A70()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_214772A80()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_214772A90()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_214772AA0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_214772AB0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_214772AC0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_214772AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_21474D4AC(0, v4, 0);
    uint64_t v7 = 0;
    uint64_t result = v35;
    uint64_t v31 = a3;
    uint64_t v32 = a1 + 32;
    int64_t v30 = v4;
    while (1)
    {
      uint64_t v34 = result;
      uint64_t v8 = (uint64_t *)(v32 + 16 * v7);
      uint64_t v9 = *v8;
      uint64_t v10 = v8[1];
      uint64_t v11 = qword_26C55EE18;
      swift_bridgeObjectRetain_n();
      if (!v11) {
        break;
      }
      uint64_t v33 = v7 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = (unint64_t *)&unk_26C55EE30;
      while (1)
      {
        uint64_t v13 = *(v12 - 1);
        unint64_t v14 = *v12;
        sub_21471ED54(v13, *v12);
        sub_21471ED54(v13, v14);
        sub_21471ED54(v13, v14);
        sub_2147ACF78();
        uint64_t v15 = sub_2147ACF88();
        uint64_t v17 = v16;
        swift_bridgeObjectRelease();
        sub_2147201A0(v13, v14);
        if (v15 == sub_2147ACF88() && v17 == v18) {
          break;
        }
        char v20 = sub_2147AD668();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_13;
        }
        v12 += 2;
        sub_2147201A0(v13, v14);
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          __break(1u);
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      sub_21471ED54(v13, v14);
      sub_21471ED54(v13, v14);
      sub_2147ACF78();
      uint64_t v21 = sub_2147ACF88();
      uint64_t v23 = v22;
      swift_bridgeObjectRelease();
      sub_2147201A0(v13, v14);
      if (!*(void *)(v31 + 16) || (uint64_t v24 = sub_21477EA80(v21, v23), (v25 & 1) == 0))
      {
LABEL_19:
        swift_bridgeObjectRelease();
        sub_2147201A0(v13, v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
        break;
      }
      uint64_t v26 = *(void *)(*(void *)(v31 + 56) + 32 * v24 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2147201A0(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = v34;
      unint64_t v28 = *(void *)(v34 + 16);
      unint64_t v27 = *(void *)(v34 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_21474D4AC(v27 > 1, v28 + 1, 1);
        uint64_t result = v34;
      }
      *(void *)(result + 16) = v28 + 1;
      uint64_t v29 = (void *)(result + 24 * v28);
      v29[4] = v9;
      v29[5] = v10;
      v29[6] = v26;
      uint64_t v7 = v33;
      if (v33 == v30) {
        return result;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    __break(1u);
  }
  return result;
}

uint64_t sub_214772E40(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
    }
    else
    {
      if (__OFADD__(v9++, 1)) {
        goto LABEL_43;
      }
      if (v9 >= v27)
      {
LABEL_41:
        swift_release();
        return 0;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v9);
      if (!v13)
      {
        int64_t v14 = v9 + 1;
        if (v9 + 1 >= v27) {
          goto LABEL_41;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v14);
        if (v13) {
          goto LABEL_16;
        }
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v27) {
          goto LABEL_41;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v14);
        if (v13) {
          goto LABEL_16;
        }
        int64_t v14 = v9 + 3;
        if (v9 + 3 >= v27) {
          goto LABEL_41;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v14);
        if (v13)
        {
LABEL_16:
          int64_t v9 = v14;
        }
        else
        {
          int64_t v25 = v9 + 4;
          if (v9 + 4 >= v27) {
            goto LABEL_41;
          }
          unint64_t v13 = *(void *)(v26 + 8 * v25);
          for (v9 += 4; !v13; ++v25)
          {
            int64_t v9 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_44;
            }
            if (v9 >= v27) {
              goto LABEL_41;
            }
            unint64_t v13 = *(void *)(v26 + 8 * v9);
          }
        }
      }
      unint64_t v7 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    }
    uint64_t v28 = *(void *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v15 = *(void **)(*(void *)(a1 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = v4;
    sub_214765864(a2, a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
    sub_2147271C4((unint64_t *)&qword_26781D4F0, &qword_26781D4E8);
    uint64_t v16 = sub_2147ACF18();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v19 = v15[2];
    if (v19)
    {
      BOOL v20 = v15[4] == v16 && v15[5] == v18;
      if (v20 || (uint64_t result = sub_2147AD668(), (result & 1) != 0))
      {
LABEL_40:
        swift_release();
        swift_bridgeObjectRelease();
        return v28;
      }
      if (v19 != 1) {
        break;
      }
    }
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = v32;
  }
  uint64_t v21 = v15 + 7;
  uint64_t v22 = 1;
  while (1)
  {
    uint64_t v23 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (*(v21 - 1) == v16 && *v21 == v18) {
      goto LABEL_40;
    }
    uint64_t result = sub_2147AD668();
    if (result) {
      goto LABEL_40;
    }
    v21 += 2;
    ++v22;
    if (v23 == v19) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_214773140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = v3 - 1;
    uint64_t v7 = v5 + 40;
    do
    {
      uint64_t v8 = v6;
      MEMORY[0x270FA5388](v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      char v9 = sub_21477FFC8(a3, (uint64_t (*)(uint64_t, uint64_t, void *))sub_2147739E0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = swift_bridgeObjectRelease_n();
      if (v9) {
        break;
      }
      uint64_t v6 = v8 - 1;
      v7 += 16;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_214773278(uint64_t a1, unint64_t a2)
{
  if (a2 != 26) {
    return sub_21471ED54(a1, a2);
  }
  return a1;
}

uint64_t sub_214773288(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_2147ACB48();
      swift_allocObject();
      sub_2147ACB38();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_2147ACC78();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_214773324(uint64_t a1, unint64_t a2)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t v2 = HIBYTE(a2) & 0xF;
  v21[0] = a1;
  v21[1] = a2;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v21[2] = 0;
  uint64_t v22 = v2;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    sub_2147ACFE8();
    if (!v4) {
      break;
    }
    uint64_t v5 = sub_2147ACEF8();
    char v7 = v6;
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_21476001C(0, v3[2] + 1, 1, v3);
      }
      unint64_t v9 = v3[2];
      unint64_t v8 = v3[3];
      if (v9 >= v8 >> 1) {
        uint64_t v3 = sub_21476001C((void *)(v8 > 1), v9 + 1, 1, v3);
      }
      v3[2] = v9 + 1;
      v3[v9 + 4] = v5;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v10 = v3[2];
  if (v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v11 = sub_2147ACFB8();
  swift_bridgeObjectRelease();
  if (v10 != v11)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = sub_214773288(v10 >> 1);
  uint64_t v24 = v12;
  uint64_t v25 = v13;
  if (v10)
  {
    unint64_t v14 = 0;
    do
    {
      unint64_t v16 = v3[2];
      if (v14 >= v16)
      {
        __break(1u);
LABEL_27:
        __break(1u);
      }
      unint64_t v17 = v14 + 1;
      if (v14 + 1 >= v16) {
        goto LABEL_27;
      }
      unint64_t v18 = v3[v14 + 5] | (16 * v3[v14 + 4]);
      if ((v18 & 0x8000000000000000) != 0 || v18 >= 0x100)
      {
        sub_2147AD498();
        __break(1u);
        JUMPOUT(0x214773660);
      }
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D710);
      uint64_t v22 = v15;
      uint64_t v23 = sub_2147271C4(&qword_26781D718, &qword_26781D710);
      LOBYTE(v21[0]) = v18;
      __swift_project_boxed_opaque_existential_1(v21, v15);
      sub_2147ACC88();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      unint64_t v14 = v17 + 1;
    }
    while (v17 + 1 < v10);
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
    uint64_t v19 = v12;
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_214773670()
{
  sub_21472BBFC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2147736A8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_214752080;
  v8[18] = v7;
  v8[19] = v6;
  v8[16] = a1;
  v8[17] = a2;
  return MEMORY[0x270FA2498](sub_214771760, 0, 0);
}

uint64_t sub_214773768()
{
  uint64_t v1 = sub_2147ACD88();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2147737F8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(sub_2147ACD88() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_214751D8C;
  return sub_214771A64(a1, a2, v7);
}

uint64_t sub_2147738E0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2147738F0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_214773900()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214773938()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214773970()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_214773980()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_214773990()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2147739C0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2147739D0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2147739E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21477AAE0(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

unint64_t sub_2147739E8()
{
  unint64_t result = qword_26781D638;
  if (!qword_26781D638)
  {
    type metadata accessor for SERClient();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D638);
  }
  return result;
}

uint64_t sub_214773A40(uint64_t a1)
{
  return sub_2147825F4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_214773A4C(uint64_t a1)
{
  return sub_214782850(a1, v1[2], v1[3], v1[4]);
}

void *JPKIInternalClient.__allocating_init(passIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_allocObject();
  unsigned char v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for JPKIXPCClient();
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  v4[4] = v5;
  return v4;
}

void *JPKIInternalClient.init(passIdentifier:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for JPKIXPCClient();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  v2[4] = v3;
  return v2;
}

uint64_t JPKIInternalClient.installedCertificateTypes()(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_214773C08;
  v3[24] = v2 + 16;
  v3[25] = v1;
  return MEMORY[0x270FA2498](sub_214773E94, 0, 0);
}

uint64_t sub_214773C08()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214773D04, 0, 0);
}

uint64_t sub_214773D04()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  char v6 = *(unsigned char *)(v0 + 56);
  if (*(unsigned char *)(v0 + 57))
  {
    uint64_t v7 = *(void *)(v0 + 64);
    *(void *)uint64_t v7 = v1;
    *(void *)(v7 + 8) = v2;
    *(void *)(v7 + 16) = v4;
    *(void *)(v7 + 24) = v3;
    *(void *)(v7 + 32) = v5;
    *(unsigned char *)(v7 + 40) = v6;
    *(unsigned char *)(v7 + 41) = 1;
  }
  else
  {
    int64_t v8 = *(void *)(v1 + 16);
    uint64_t v9 = MEMORY[0x263F8EE78];
    if (v8)
    {
      uint64_t v17 = *(void *)(v0 + 40);
      uint64_t v18 = *(void *)(v0 + 48);
      char v19 = *(unsigned char *)(v0 + 56);
      uint64_t v20 = MEMORY[0x263F8EE78];
      sub_21474D4EC(0, v8, 0);
      uint64_t v9 = v20;
      uint64_t v10 = (char *)(v1 + 32);
      unint64_t v11 = *(void *)(v20 + 16);
      do
      {
        char v12 = *v10;
        uint64_t v21 = v9;
        unint64_t v13 = *(void *)(v9 + 24);
        if (v11 >= v13 >> 1)
        {
          sub_21474D4EC(v13 > 1, v11 + 1, 1);
          uint64_t v9 = v21;
        }
        *(void *)(v9 + 16) = v11 + 1;
        *(unsigned char *)(v9 + v11 + 32) = v12;
        v10 += 2;
        ++v11;
        --v8;
      }
      while (v8);
      char v6 = v19;
      uint64_t v3 = v17;
      uint64_t v5 = v18;
    }
    uint64_t v14 = *(void *)(v0 + 64);
    *(void *)uint64_t v14 = v9;
    *(unsigned char *)(v14 + 41) = 0;
    sub_2147789C4(v1, v2, v4, v3, v5, v6, 0);
  }
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t JPKIInternalClient.installedCertificates()(uint64_t a1)
{
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = v1;
  return MEMORY[0x270FA2498](sub_214773E94, 0, 0);
}

uint64_t sub_214773E94()
{
  uint64_t v1 = *(void **)(v0 + 200);
  uint64_t v3 = v1[2];
  uint64_t v2 = v1[3];
  *(void *)(v0 + 208) = v2;
  uint64_t v4 = v1[4];
  *(void *)(v0 + 216) = v4;
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 64) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(unsigned char *)(v0 + 72) = -64;
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_214773F28, v4, 0);
}

uint64_t sub_214773F28()
{
  sub_214749C54(v0 + 16, (uint64_t *)(v0 + 80));
  *(void *)(v0 + 224) = 0;
  return MEMORY[0x270FA2498](sub_214773FBC, 0, 0);
}

uint64_t sub_214773FBC()
{
  uint64_t v30 = v0;
  uint64_t v2 = *(void *)(v0 + 80);
  unint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  unsigned int v6 = *(unsigned __int8 *)(v0 + 120);
  if (qword_26781BFB8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_2147ACE18();
  __swift_project_value_buffer(v7, (uint64_t)qword_26781D728);
  unsigned int v21 = v6 >> 5;
  sub_21473F85C(v2, v1, v3, v4, v5, v6);
  sub_21473F85C(v2, v1, v3, v4, v5, v6);
  int64_t v8 = sub_2147ACDF8();
  os_log_type_t v9 = sub_2147AD1B8();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t log = v8;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    buf = v10;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v24 = v2;
    unint64_t v25 = v1;
    uint64_t v26 = v3;
    uint64_t v27 = v4;
    uint64_t v28 = v5;
    char v29 = v6;
    unint64_t v11 = JPKIXPCResponse.description.getter();
    *(void *)(v0 + 16) = sub_2147601CC(v11, v12, &v22);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_21473F988(v2, v1, v3, v4, v5, v6);
    sub_21473F988(v2, v1, v3, v4, v5, v6);
    int64_t v8 = log;
    _os_log_impl(&dword_2146ED000, log, v9, "Response %s", buf, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v19, -1, -1);
    MEMORY[0x2166A8870](buf, -1, -1);
  }
  else
  {
    sub_21473F988(v2, v1, v3, v4, v5, v6);
    sub_21473F988(v2, v1, v3, v4, v5, v6);
  }

  if (v21)
  {
    if (v21 == 1)
    {
      swift_bridgeObjectRelease();
      sub_21473D560(0, 0, 0, 0, 0, 0xC0u);
      unint64_t v1 = 0;
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      LOBYTE(v6) = 0;
      char v13 = 0;
      goto LABEL_12;
    }
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_2147AD348();
    swift_bridgeObjectRelease();
    uint64_t v22 = 0xD00000000000002ELL;
    unint64_t v23 = 0x80000002147C0A00;
    uint64_t v24 = v2;
    unint64_t v25 = v1;
    uint64_t v26 = v3;
    uint64_t v27 = v4;
    uint64_t v28 = v5;
    char v29 = v6;
    JPKIXPCResponse.description.getter();
    sub_2147ACFC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21473D560(0, 0, 0, 0, 0, 0xC0u);
    sub_21473F988(v2, v1, v3, v4, v5, v6);
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    LOBYTE(v6) = 0;
    uint64_t v2 = v22;
    unint64_t v1 = v23;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_21473D560(0, 0, 0, 0, 0, 0xC0u);
  }
  char v13 = 1;
LABEL_12:
  uint64_t v14 = *(uint64_t **)(v0 + 192);
  *uint64_t v14 = v2;
  v14[1] = v1;
  void v14[2] = v3;
  v14[3] = v4;
  v14[4] = v5;
  uint64_t v15 = *(void *)(v0 + 192);
  *(unsigned char *)(v15 + 40) = v6;
  *(unsigned char *)(v15 + 41) = v13;
  unint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_2147743BC()
{
  unsigned int v21 = v0;
  if (qword_26781BFB8 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)v0[28];
  uint64_t v2 = sub_2147ACE18();
  __swift_project_value_buffer(v2, (uint64_t)qword_26781D728);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_2147ACDF8();
  os_log_type_t v6 = sub_2147AD198();
  BOOL v7 = os_log_type_enabled(v5, v6);
  int64_t v8 = (void *)v0[28];
  if (v7)
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)os_log_type_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v11 = sub_2147AD6C8();
    v0[2] = sub_2147601CC(v11, v12, &v20);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2146ED000, v5, v6, "Unhandled XPC error : %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v10, -1, -1);
    MEMORY[0x2166A8870](v9, -1, -1);
  }
  else
  {
  }
  char v13 = (void *)v0[28];
  uint64_t v14 = (uint64_t *)v0[24];
  swift_getErrorValue();
  uint64_t v15 = sub_2147AD6C8();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_21473D560(0, 0, 0, 0, 0, 0xC0u);

  *uint64_t v14 = v15;
  v14[1] = v17;
  v14[3] = 0;
  v14[4] = 0;
  void v14[2] = 0;
  *(_WORD *)(v0[24] + 40) = 257;
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t JPKIInternalClient.read(certificateType:userAuthentication:)(uint64_t a1, unsigned char *a2, _OWORD *a3)
{
  *(void *)(v4 + 296) = a1;
  *(void *)(v4 + 304) = v3;
  *(unsigned char *)(v4 + 73) = *a2;
  *(_OWORD *)(v4 + 248) = *a3;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v4 + 312) = v5;
  *(void *)uint64_t v5 = v4;
  *(void *)(v5 + 8) = sub_21477471C;
  *(void *)(v5 + 176) = v3;
  *(void *)(v5 + 184) = v4 + 128;
  *(void *)(v5 + 168) = v4 + 224;
  *(_OWORD *)(v5 + 192) = *(_OWORD *)(v4 + 248);
  return MEMORY[0x270FA2498](sub_214775368, 0, 0);
}

uint64_t sub_21477471C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 320) = a1;
  *(void *)(v3 + 328) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_214774E0C;
  }
  else {
    uint64_t v4 = sub_214774830;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_214774830()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 73);
  uint64_t v2 = *(void **)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 224);
  unint64_t v3 = *(void *)(v0 + 232);
  *(void *)(v0 + 336) = v4;
  *(void *)(v0 + 344) = v3;
  uint64_t v5 = *(unsigned __int8 *)(v0 + 240);
  *(unsigned char *)(v0 + 74) = v5;
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  *(void *)(v0 + 352) = v6;
  uint64_t v8 = v2[4];
  *(void *)(v0 + 360) = v8;
  *(void *)(v0 + 16) = v7;
  *(void *)(v0 + 24) = v6;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v5;
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 72) = 0;
  swift_bridgeObjectRetain();
  sub_21473C428(v4, v3, v5);
  return MEMORY[0x270FA2498](sub_2147748E8, v8, 0);
}

uint64_t sub_2147748E8()
{
  uint64_t v1 = v0[41];
  sub_214749C54((uint64_t)(v0 + 2), v0 + 10);
  v0[46] = v1;
  if (v1) {
    uint64_t v2 = sub_2147750A0;
  }
  else {
    uint64_t v2 = sub_21477497C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21477497C()
{
  uint64_t v47 = v0;
  uint64_t v2 = *(void *)(v0 + 80);
  unint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  unsigned int v6 = *(unsigned __int8 *)(v0 + 120);
  if (qword_26781BFB8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_2147ACE18();
  __swift_project_value_buffer(v7, (uint64_t)qword_26781D728);
  unsigned int v37 = v6 >> 5;
  sub_21473F85C(v2, v1, v3, v4, v5, v6);
  sub_21473F85C(v2, v1, v3, v4, v5, v6);
  uint64_t v8 = sub_2147ACDF8();
  os_log_type_t v9 = sub_2147AD1B8();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t log = v8;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v39 = v32;
    buf = v10;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v41 = v2;
    unint64_t v42 = v1;
    uint64_t v43 = v3;
    uint64_t v44 = v4;
    uint64_t v45 = v5;
    char v46 = v6;
    unint64_t v11 = JPKIXPCResponse.description.getter();
    *(void *)(v0 + 288) = sub_2147601CC(v11, v12, &v39);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_21473F988(v2, v1, v3, v4, v5, v6);
    sub_21473F988(v2, v1, v3, v4, v5, v6);
    uint64_t v8 = log;
    _os_log_impl(&dword_2146ED000, log, v9, "Response %s", buf, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v32, -1, -1);
    MEMORY[0x2166A8870](buf, -1, -1);
  }
  else
  {
    sub_21473F988(v2, v1, v3, v4, v5, v6);
    sub_21473F988(v2, v1, v3, v4, v5, v6);
  }

  if (v37)
  {
    if (v37 == 2)
    {
      unint64_t v13 = *(void *)(v0 + 344);
      uint64_t v14 = *(unsigned __int8 *)(v0 + 74);
      unint64_t v15 = *(void *)(v0 + 336);
      uint64_t v16 = *(unsigned __int8 *)(v0 + 73);
      swift_bridgeObjectRelease();
      sub_21473D560(v16, v15, v13, v14, 0, 0);
      sub_21473D400(v15, v13, v14);
      unint64_t v17 = 0;
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      LOBYTE(v6) = 0;
      char v18 = 0;
      goto LABEL_12;
    }
    unint64_t v36 = v1;
    uint64_t v38 = *(unsigned __int8 *)(v0 + 74);
    unint64_t v24 = v1;
    unint64_t v25 = *(void *)(v0 + 336);
    unint64_t v26 = *(void *)(v0 + 344);
    uint64_t loga = *(unsigned __int8 *)(v0 + 73);
    uint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
    sub_2147AD348();
    swift_bridgeObjectRelease();
    uint64_t v39 = 0xD000000000000021;
    unint64_t v40 = 0x80000002147C0A30;
    uint64_t v41 = v2;
    unint64_t v42 = v24;
    uint64_t v43 = v3;
    uint64_t v44 = v4;
    uint64_t v45 = v5;
    char v46 = v6;
    JPKIXPCResponse.description.getter();
    sub_2147ACFC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21473D560(loga, v25, v26, v38, 0, 0);
    sub_21473D400(v25, v26, v38);
    sub_21473F988(v2, v36, v3, v4, v5, v6);
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    LOBYTE(v6) = 0;
    uint64_t v2 = v39;
    unint64_t v17 = v40;
  }
  else
  {
    unint64_t v19 = *(void *)(v0 + 344);
    uint64_t v20 = *(unsigned __int8 *)(v0 + 74);
    unint64_t v21 = *(void *)(v0 + 336);
    unint64_t v35 = v1;
    uint64_t v22 = *(unsigned __int8 *)(v0 + 73);
    swift_bridgeObjectRelease();
    uint64_t v23 = v22;
    unint64_t v17 = v35;
    sub_21473D560(v23, v21, v19, v20, 0, 0);
    sub_21473D400(v21, v19, v20);
  }
  char v18 = 1;
LABEL_12:
  uint64_t v27 = *(void **)(v0 + 320);
  uint64_t v28 = *(void *)(v0 + 296);
  *(void *)uint64_t v28 = v2;
  *(void *)(v28 + 8) = v17;
  *(void *)(v28 + 16) = v3;
  *(void *)(v28 + 24) = v4;
  *(void *)(v28 + 32) = v5;
  *(unsigned char *)(v28 + 40) = v6;
  *(unsigned char *)(v28 + 41) = v18;

  char v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_214774E0C()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  long long v22 = *(_OWORD *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  char v4 = *(unsigned char *)(v0 + 168);
  sub_214741898();
  uint64_t v5 = (void *)swift_allocError();
  *(void *)uint64_t v6 = v1;
  *(_OWORD *)(v6 + 8) = v22;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v3;
  *(unsigned char *)(v6 + 40) = v4;
  if (qword_26781BFB8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_2147ACE18();
  __swift_project_value_buffer(v7, (uint64_t)qword_26781D728);
  id v8 = v5;
  id v9 = v5;
  uint64_t v10 = sub_2147ACDF8();
  os_log_type_t v11 = sub_2147AD198();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v13;
    *(_DWORD *)unint64_t v12 = 136315138;
    swift_getErrorValue();
    uint64_t v14 = sub_2147AD6C8();
    *(void *)(v0 + 264) = sub_2147601CC(v14, v15, &v23);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2146ED000, v10, v11, "Unhandled XPC error : %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v13, -1, -1);
    MEMORY[0x2166A8870](v12, -1, -1);
  }
  else
  {
  }
  uint64_t v16 = *(void *)(v0 + 296);
  swift_getErrorValue();
  uint64_t v17 = sub_2147AD6C8();
  uint64_t v19 = v18;

  *(void *)uint64_t v16 = v17;
  *(void *)(v16 + 8) = v19;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = 0;
  *(void *)(v16 + 16) = 0;
  *(_WORD *)(v16 + 40) = 257;
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_2147750A0()
{
  uint64_t v23 = v0;
  unint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 74);
  unint64_t v3 = *(void *)(v0 + 336);
  char v4 = *(void **)(v0 + 320);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 73);
  sub_21473D400(v3, v1, *(unsigned char *)(v0 + 74));
  swift_bridgeObjectRelease();
  sub_21473D560(v5, v3, v1, v2, 0, 0);

  uint64_t v6 = *(void **)(v0 + 368);
  if (qword_26781BFB8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_2147ACE18();
  __swift_project_value_buffer(v7, (uint64_t)qword_26781D728);
  id v8 = v6;
  id v9 = v6;
  uint64_t v10 = sub_2147ACDF8();
  os_log_type_t v11 = sub_2147AD198();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = v13;
    *(_DWORD *)unint64_t v12 = 136315138;
    swift_getErrorValue();
    uint64_t v14 = sub_2147AD6C8();
    *(void *)(v0 + 264) = sub_2147601CC(v14, v15, &v22);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2146ED000, v10, v11, "Unhandled XPC error : %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v13, -1, -1);
    MEMORY[0x2166A8870](v12, -1, -1);
  }
  else
  {
  }
  uint64_t v16 = *(void *)(v0 + 296);
  swift_getErrorValue();
  uint64_t v17 = sub_2147AD6C8();
  uint64_t v19 = v18;

  *(void *)uint64_t v16 = v17;
  *(void *)(v16 + 8) = v19;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = 0;
  *(void *)(v16 + 16) = 0;
  *(_WORD *)(v16 + 40) = 257;
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_21477533C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(v4 + 176) = v3;
  *(void *)(v4 + 184) = a3;
  *(void *)(v4 + 168) = a1;
  *(_OWORD *)(v4 + 192) = *a2;
  return MEMORY[0x270FA2498](sub_214775368, 0, 0);
}

uint64_t sub_214775368()
{
  uint64_t v18 = v0;
  uint64_t v1 = v0[25];
  if (v1)
  {
    swift_bridgeObjectRetain();
    if (!os_variant_has_internal_diagnostics()) {
      goto LABEL_5;
    }
    v0[14] = v0[24];
    v0[15] = v1;
    v0[12] = 2426707952;
    v0[13] = 0xA400000000000000;
    sub_214778A20();
    if ((sub_2147AD268() & 1) == 0) {
      goto LABEL_5;
    }
    v0[16] = v0[24];
    v0[17] = v1;
    v0[18] = 2426707952;
    v0[19] = 0xA400000000000000;
    sub_214778A74();
    sub_2147AD168();
    MEMORY[0x2166A72B0](v0[8], v0[9], v0[10], v0[11]);
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2147ACC68();
    unint64_t v4 = v3;
    swift_bridgeObjectRelease();
    if (v4 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      if (qword_26781BFB8 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_2147ACE18();
      __swift_project_value_buffer(v10, (uint64_t)qword_26781D728);
      sub_21472BBA4(v2, v4);
      sub_21472BBA4(v2, v4);
      os_log_type_t v11 = sub_2147ACDF8();
      os_log_type_t v12 = sub_2147AD198();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        uint64_t v17 = v14;
        *(_DWORD *)uint64_t v13 = 136315138;
        uint64_t v15 = sub_2147ACC58();
        v0[20] = sub_2147601CC(v15, v16, &v17);
        sub_2147AD248();
        swift_bridgeObjectRelease();
        sub_21474B19C(v2, v4);
        sub_21474B19C(v2, v4);
        _os_log_impl(&dword_2146ED000, v11, v12, "QA OVERRIDE extAuth %s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2166A8870](v14, -1, -1);
        MEMORY[0x2166A8870](v13, -1, -1);
      }
      else
      {
        sub_21474B19C(v2, v4);
        sub_21474B19C(v2, v4);
      }

      uint64_t v6 = v0[21];
      *(void *)uint64_t v6 = v2;
      char v5 = 1;
    }
    else
    {
LABEL_5:
      char v5 = 0;
      unint64_t v4 = v0[25];
      uint64_t v6 = v0[21];
      *(void *)uint64_t v6 = v0[24];
    }
    *(void *)(v6 + 8) = v4;
    *(unsigned char *)(v6 + 16) = v5;
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7(0);
  }
  else
  {
    id v9 = (void *)swift_task_alloc();
    v0[26] = v9;
    void *v9 = v0;
    v9[1] = sub_214775720;
    return sub_214776C40((uint64_t)(v0 + 2));
  }
}

uint64_t sub_214775720(uint64_t a1)
{
  *(void *)(*(void *)v2 + 216) = a1;
  swift_task_dealloc();
  if (v1) {
    unint64_t v3 = sub_2147758EC;
  }
  else {
    unint64_t v3 = sub_214775834;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

id sub_214775834()
{
  id result = objc_msgSend(*(id *)(v0 + 216), sel_externalizedContext);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)(v0 + 216);
    uint64_t v4 = *(void *)(v0 + 168);
    uint64_t v5 = sub_2147ACCD8();
    uint64_t v7 = v6;

    *(void *)uint64_t v4 = v5;
    *(void *)(v4 + 8) = v7;
    *(unsigned char *)(v4 + 16) = 1;
    id v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return (id)v8(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2147758EC()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 48);
  char v3 = *(unsigned char *)(v0 + 56);
  long long v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v4;
  *(void *)(v1 + 32) = v2;
  *(unsigned char *)(v1 + 40) = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t JPKIInternalClient.changeAuthorization(certificateType:prevAuthentication:newAuthentication:)(uint64_t a1, unsigned char *a2, _OWORD *a3, long long *a4)
{
  *(void *)(v5 + 192) = a1;
  *(void *)(v5 + 200) = v4;
  *(unsigned char *)(v5 + 73) = *a2;
  long long v6 = *a4;
  *(_OWORD *)(v5 + 208) = *a3;
  *(_OWORD *)(v5 + 224) = v6;
  return MEMORY[0x270FA2498](sub_214775954, 0, 0);
}

uint64_t sub_214775954()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 73);
  uint64_t v4 = *(void **)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v6 = v4[2];
  uint64_t v5 = v4[3];
  *(void *)(v0 + 240) = v5;
  uint64_t v7 = v4[4];
  *(void *)(v0 + 248) = v7;
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 24) = v5;
  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v3;
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 216);
  *(void *)(v0 + 64) = v1;
  *(unsigned char *)(v0 + 72) = 64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_214775A10, v7, 0);
}

uint64_t sub_214775A10()
{
  sub_214749C54(v0 + 16, (uint64_t *)(v0 + 80));
  *(void *)(v0 + 256) = 0;
  return MEMORY[0x270FA2498](sub_214775AA4, 0, 0);
}

uint64_t sub_214775AA4()
{
  uint64_t v45 = v0;
  uint64_t v1 = *(void *)(v0 + 80);
  unint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  unsigned int v6 = *(unsigned __int8 *)(v0 + 120);
  if (qword_26781BFB8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_2147ACE18();
  __swift_project_value_buffer(v7, (uint64_t)qword_26781D728);
  unsigned int v34 = v6 >> 5;
  sub_21473F85C(v1, v2, v3, v4, v5, v6);
  sub_21473F85C(v1, v2, v3, v4, v5, v6);
  id v8 = sub_2147ACDF8();
  os_log_type_t v9 = sub_2147AD1B8();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t log = v8;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v37 = v29;
    buf = v10;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v39 = v1;
    unint64_t v40 = v2;
    uint64_t v41 = v3;
    uint64_t v42 = v4;
    uint64_t v43 = v5;
    char v44 = v6;
    unint64_t v11 = JPKIXPCResponse.description.getter();
    *(void *)(v0 + 16) = sub_2147601CC(v11, v12, &v37);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_21473F988(v1, v2, v3, v4, v5, v6);
    sub_21473F988(v1, v2, v3, v4, v5, v6);
    id v8 = log;
    _os_log_impl(&dword_2146ED000, log, v9, "Response %s", buf, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v29, -1, -1);
    MEMORY[0x2166A8870](buf, -1, -1);
  }
  else
  {
    sub_21473F988(v1, v2, v3, v4, v5, v6);
    sub_21473F988(v1, v2, v3, v4, v5, v6);
  }

  if (v34)
  {
    if (v34 == 5 && !(v2 | v1 | v3 | v4 | v5) && v6 == 160)
    {
      unint64_t v13 = *(void *)(v0 + 232);
      unint64_t v15 = *(void *)(v0 + 216);
      uint64_t v14 = *(void *)(v0 + 224);
      unint64_t v16 = *(void *)(v0 + 208);
      uint64_t v17 = *(unsigned __int8 *)(v0 + 73);
      swift_bridgeObjectRelease();
      sub_21473D560(v17, v16, v15, v14, v13, 0x40u);
      uint64_t v1 = 0;
      unint64_t v2 = 0;
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      LOBYTE(v6) = 0;
      char v18 = 0;
      goto LABEL_14;
    }
    os_log_t loga = *(os_log_t *)(v0 + 224);
    unint64_t v35 = *(void *)(v0 + 232);
    bufa = *(uint8_t **)(v0 + 208);
    unint64_t v30 = *(void *)(v0 + 216);
    uint64_t v26 = *(unsigned __int8 *)(v0 + 73);
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_2147AD348();
    swift_bridgeObjectRelease();
    uint64_t v37 = 0xD000000000000025;
    unint64_t v38 = 0x80000002147C0A60;
    uint64_t v39 = v1;
    unint64_t v40 = v2;
    uint64_t v41 = v3;
    uint64_t v42 = v4;
    uint64_t v43 = v5;
    char v44 = v6;
    JPKIXPCResponse.description.getter();
    sub_2147ACFC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21473D560(v26, (unint64_t)bufa, v30, (uint64_t)loga, v35, 0x40u);
    sub_21473F988(v1, v2, v3, v4, v5, v6);
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    LOBYTE(v6) = 0;
    uint64_t v1 = v37;
    unint64_t v2 = v38;
  }
  else
  {
    unint64_t v19 = *(void *)(v0 + 216);
    os_log_t logb = *(os_log_t *)(v0 + 224);
    unint64_t v36 = *(void *)(v0 + 232);
    unint64_t v20 = *(void *)(v0 + 208);
    uint64_t v21 = *(unsigned __int8 *)(v0 + 73);
    swift_bridgeObjectRelease();
    sub_21473D560(v21, v20, v19, (uint64_t)logb, v36, 0x40u);
  }
  char v18 = 1;
LABEL_14:
  uint64_t v22 = *(uint64_t **)(v0 + 192);
  uint64_t *v22 = v1;
  v22[1] = v2;
  v22[2] = v3;
  v22[3] = v4;
  v22[4] = v5;
  uint64_t v23 = *(void *)(v0 + 192);
  *(unsigned char *)(v23 + 40) = v6;
  *(unsigned char *)(v23 + 41) = v18;
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_214775EE8()
{
  uint64_t v26 = v0;
  if (qword_26781BFB8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v2 = sub_2147ACE18();
  __swift_project_value_buffer(v2, (uint64_t)qword_26781D728);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_2147ACDF8();
  os_log_type_t v6 = sub_2147AD198();
  BOOL v7 = os_log_type_enabled(v5, v6);
  id v8 = *(void **)(v0 + 256);
  if (v7)
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v25 = v10;
    *(_DWORD *)os_log_type_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v11 = sub_2147AD6C8();
    *(void *)(v0 + 16) = sub_2147601CC(v11, v12, &v25);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2146ED000, v5, v6, "Unhandled XPC error : %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v10, -1, -1);
    MEMORY[0x2166A8870](v9, -1, -1);
  }
  else
  {
  }
  unint64_t v13 = *(void **)(v0 + 256);
  unint64_t v24 = *(void *)(v0 + 232);
  unint64_t v15 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 224);
  unint64_t v16 = *(void *)(v0 + 208);
  uint64_t v17 = *(unsigned __int8 *)(v0 + 73);
  char v18 = *(uint64_t **)(v0 + 192);
  swift_getErrorValue();
  uint64_t v19 = sub_2147AD6C8();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  sub_21473D560(v17, v16, v15, v14, v24, 0x40u);

  *char v18 = v19;
  v18[1] = v21;
  v18[3] = 0;
  v18[4] = 0;
  v18[2] = 0;
  *(_WORD *)(*(void *)(v0 + 192) + 40) = 257;
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t JPKIInternalClient.sign(data:certificateType:userAuthentication:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, _OWORD *a5)
{
  *(void *)(v6 + 312) = a3;
  *(void *)(v6 + 320) = v5;
  *(void *)(v6 + 296) = a1;
  *(void *)(v6 + 304) = a2;
  *(unsigned char *)(v6 + 73) = *a4;
  *(_OWORD *)(v6 + 248) = *a5;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v6 + 328) = v7;
  *(void *)uint64_t v7 = v6;
  *(void *)(v7 + 8) = sub_21477625C;
  *(void *)(v7 + 176) = v5;
  *(void *)(v7 + 184) = v6 + 128;
  *(void *)(v7 + 168) = v6 + 224;
  *(_OWORD *)(v7 + 192) = *(_OWORD *)(v6 + 248);
  return MEMORY[0x270FA2498](sub_214775368, 0, 0);
}

uint64_t sub_21477625C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 336) = a1;
  *(void *)(v3 + 344) = v1;
  swift_task_dealloc();
  if (v1) {
    id v4 = sub_214774E0C;
  }
  else {
    id v4 = sub_214776370;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_214776370()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 73);
  unint64_t v3 = *(void *)(v0 + 312);
  uint64_t v2 = *(void **)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 224);
  unint64_t v6 = *(void *)(v0 + 232);
  *(void *)(v0 + 352) = v5;
  *(void *)(v0 + 360) = v6;
  char v7 = *(unsigned char *)(v0 + 240);
  *(unsigned char *)(v0 + 74) = v7;
  uint64_t v9 = v2[2];
  uint64_t v8 = v2[3];
  *(void *)(v0 + 368) = v8;
  uint64_t v10 = v2[4];
  *(void *)(v0 + 376) = v10;
  *(void *)(v0 + 16) = v9;
  *(void *)(v0 + 24) = v8;
  *(void *)(v0 + 32) = v4;
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v5;
  *(void *)(v0 + 64) = v6;
  *(unsigned char *)(v0 + 72) = v7 | 0x80;
  swift_bridgeObjectRetain();
  sub_21472BBA4(v4, v3);
  sub_21473C428(v5, v6, v7);
  return MEMORY[0x270FA2498](sub_214776444, v10, 0);
}

uint64_t sub_214776444()
{
  uint64_t v1 = v0[43];
  sub_214749C54((uint64_t)(v0 + 2), v0 + 10);
  v0[48] = v1;
  if (v1) {
    uint64_t v2 = sub_2147769A0;
  }
  else {
    uint64_t v2 = sub_2147764D8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2147764D8()
{
  uint64_t v60 = v0;
  uint64_t v2 = *(void *)(v0 + 80);
  unint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  LODWORD(v6) = *(unsigned __int8 *)(v0 + 120);
  if (qword_26781BFB8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_2147ACE18();
  __swift_project_value_buffer(v7, (uint64_t)qword_26781D728);
  unsigned int v49 = v6 >> 5;
  sub_21473F85C(v2, v1, v3, v4, v5, v6);
  sub_21473F85C(v2, v1, v3, v4, v5, v6);
  uint64_t v8 = sub_2147ACDF8();
  os_log_type_t v9 = sub_2147AD1B8();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t log = v8;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v52 = v44;
    buf = v10;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v54 = v2;
    unint64_t v55 = v1;
    uint64_t v56 = v3;
    uint64_t v57 = v4;
    uint64_t v58 = v5;
    char v59 = v6;
    unint64_t v11 = JPKIXPCResponse.description.getter();
    *(void *)(v0 + 288) = sub_2147601CC(v11, v12, &v52);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_21473F988(v2, v1, v3, v4, v5, v6);
    sub_21473F988(v2, v1, v3, v4, v5, v6);
    uint64_t v8 = log;
    _os_log_impl(&dword_2146ED000, log, v9, "Response %s", buf, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v44, -1, -1);
    MEMORY[0x2166A8870](buf, -1, -1);
  }
  else
  {
    sub_21473F988(v2, v1, v3, v4, v5, v6);
    sub_21473F988(v2, v1, v3, v4, v5, v6);
  }

  if (v49)
  {
    if (v49 == 3)
    {
      unint64_t v13 = *(void *)(v0 + 360);
      char v14 = *(unsigned char *)(v0 + 74);
      uint64_t v15 = *(void *)(v0 + 352);
      unint64_t v16 = *(unsigned __int8 *)(v0 + 73);
      uint64_t v6 = *(void *)(v0 + 304);
      unint64_t v17 = *(void *)(v0 + 312);
      swift_bridgeObjectRelease();
      sub_21473D560(v6, v17, v16, v15, v13, v14 | 0x80);
      sub_21473D400(v15, v13, v14);
      unint64_t v18 = 0;
      uint64_t v19 = 0;
      os_log_t v20 = 0;
      uint64_t v21 = 0;
      LOBYTE(v6) = 0;
      char v22 = 0;
      goto LABEL_12;
    }
    char v51 = *(unsigned char *)(v0 + 74);
    unint64_t v33 = v1;
    unint64_t v40 = v1;
    uint64_t v34 = *(void *)(v0 + 352);
    unint64_t v35 = *(void *)(v0 + 360);
    unint64_t logb = *(unsigned __int8 *)(v0 + 73);
    unint64_t v42 = *(void *)(v0 + 312);
    uint64_t v41 = *(void *)(v0 + 304);
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_2147AD348();
    swift_bridgeObjectRelease();
    uint64_t v52 = 0xD00000000000001BLL;
    unint64_t v53 = 0x80000002147C0A90;
    uint64_t v54 = v2;
    unint64_t v55 = v33;
    uint64_t v56 = v3;
    uint64_t v57 = v4;
    uint64_t v58 = v5;
    char v59 = v6;
    JPKIXPCResponse.description.getter();
    sub_2147ACFC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21473D560(v41, v42, logb, v34, v35, v51 | 0x80);
    sub_21473D400(v34, v35, v51);
    sub_21473F988(v2, v40, v3, v4, v5, v6);
    uint64_t v19 = 0;
    os_log_t v20 = 0;
    uint64_t v21 = 0;
    LOBYTE(v6) = 0;
    uint64_t v2 = v52;
    unint64_t v18 = v53;
  }
  else
  {
    unint64_t v23 = *(void *)(v0 + 360);
    char v24 = *(unsigned char *)(v0 + 74);
    uint64_t v25 = *(void *)(v0 + 352);
    unint64_t v45 = *(unsigned __int8 *)(v0 + 73);
    os_log_t loga = (os_log_t)v4;
    uint64_t v50 = v5;
    uint64_t v26 = v3;
    uint64_t v27 = v2;
    unint64_t v28 = v1;
    uint64_t v29 = *(void *)(v0 + 304);
    unint64_t v30 = *(void *)(v0 + 312);
    swift_bridgeObjectRelease();
    uint64_t v31 = v29;
    unint64_t v18 = v28;
    unint64_t v32 = v30;
    uint64_t v2 = v27;
    uint64_t v19 = v26;
    os_log_t v20 = loga;
    uint64_t v21 = v50;
    sub_21473D560(v31, v32, v45, v25, v23, v24 | 0x80);
    sub_21473D400(v25, v23, v24);
  }
  char v22 = 1;
LABEL_12:
  unint64_t v36 = *(void **)(v0 + 336);
  uint64_t v37 = *(void *)(v0 + 296);
  *(void *)uint64_t v37 = v2;
  *(void *)(v37 + 8) = v18;
  *(void *)(v37 + 16) = v19;
  *(void *)(v37 + 24) = v20;
  *(void *)(v37 + 32) = v21;
  *(unsigned char *)(v37 + 40) = v6;
  *(unsigned char *)(v37 + 41) = v22;

  unint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_2147769A0()
{
  uint64_t v26 = v0;
  unint64_t v1 = *(void *)(v0 + 360);
  char v2 = *(unsigned char *)(v0 + 74);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void **)(v0 + 336);
  unint64_t v5 = *(unsigned __int8 *)(v0 + 73);
  uint64_t v7 = *(void *)(v0 + 304);
  unint64_t v6 = *(void *)(v0 + 312);
  unsigned __int8 v8 = v2 | 0x80;
  sub_21473D400(v3, v1, v2);
  swift_bridgeObjectRelease();
  sub_21473D560(v7, v6, v5, v3, v1, v8);

  os_log_type_t v9 = *(void **)(v0 + 384);
  if (qword_26781BFB8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_2147ACE18();
  __swift_project_value_buffer(v10, (uint64_t)qword_26781D728);
  id v11 = v9;
  id v12 = v9;
  unint64_t v13 = sub_2147ACDF8();
  os_log_type_t v14 = sub_2147AD198();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v25 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_getErrorValue();
    uint64_t v17 = sub_2147AD6C8();
    *(void *)(v0 + 264) = sub_2147601CC(v17, v18, &v25);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2146ED000, v13, v14, "Unhandled XPC error : %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v16, -1, -1);
    MEMORY[0x2166A8870](v15, -1, -1);
  }
  else
  {
  }
  uint64_t v19 = *(void *)(v0 + 296);
  swift_getErrorValue();
  uint64_t v20 = sub_2147AD6C8();
  uint64_t v22 = v21;

  *(void *)uint64_t v19 = v20;
  *(void *)(v19 + 8) = v22;
  *(void *)(v19 + 24) = 0;
  *(void *)(v19 + 32) = 0;
  *(void *)(v19 + 16) = 0;
  *(_WORD *)(v19 + 40) = 257;
  unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_214776C40(uint64_t a1)
{
  v2[40] = v1;
  v2[41] = a1;
  uint64_t v3 = (void *)swift_task_alloc();
  v2[42] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_214776CF0;
  v3[25] = v1;
  v3[26] = v2 + 16;
  return MEMORY[0x270FA2498](sub_21477764C, 0, 0);
}

uint64_t sub_214776CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[43] = a1;
  v4[44] = a2;
  v4[45] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_2147771E0;
  }
  else {
    uint64_t v5 = sub_214776E08;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_214776E08()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = sub_214778644(*(void *)(v0 + 344), *(void *)(v0 + 352), (char *)(v0 + 80));
  *(void *)(v0 + 368) = v2;
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 328);
    sub_21472BBFC(*(void *)(v0 + 344), *(void *)(v0 + 352));
    uint64_t v4 = *(void *)(v0 + 112);
    char v5 = *(unsigned char *)(v0 + 120);
    long long v6 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)uint64_t v3 = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v3 + 16) = v6;
    *(void *)(v3 + 32) = v4;
    *(unsigned char *)(v3 + 40) = v5;
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    os_log_type_t v9 = v2;
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10468]), sel_init);
    *(void *)(v0 + 376) = v10;
    id v11 = v9;
    uint64_t v12 = sub_2147ACF38();
    *(void *)(v0 + 384) = v12;
    sub_21475916C(MEMORY[0x263F8EE78]);
    uint64_t v13 = sub_2147ACE98();
    *(void *)(v0 + 392) = v13;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 296;
    *(void *)(v0 + 24) = sub_21477702C;
    uint64_t v14 = swift_continuation_init();
    *(void *)(v0 + 224) = MEMORY[0x263EF8330];
    *(void *)(v0 + 232) = 0x40000000;
    *(void *)(v0 + 240) = sub_2147787EC;
    *(void *)(v0 + 248) = &block_descriptor_1;
    *(void *)(v0 + 256) = v14;
    objc_msgSend(v10, sel_evaluateAccessControl_aksOperation_options_reply_, v11, v12, v13, v0 + 224);
    return MEMORY[0x270FA23F0](v0 + 16);
  }
}

uint64_t sub_21477702C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 400) = v1;
  if (v1) {
    uint64_t v2 = sub_214777214;
  }
  else {
    uint64_t v2 = sub_21477713C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21477713C()
{
  uint64_t v2 = (void *)v0[48];
  uint64_t v1 = (void *)v0[49];
  uint64_t v3 = (void *)v0[46];
  uint64_t v4 = v0[43];
  unint64_t v5 = v0[44];

  sub_21472BBFC(v4, v5);
  swift_bridgeObjectRelease();
  long long v6 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v7 = v0[47];
  return v6(v7);
}

uint64_t sub_2147771E0()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 160);
  char v3 = *(unsigned char *)(v0 + 168);
  long long v4 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v1 + 16) = v4;
  *(void *)(v1 + 32) = v2;
  *(unsigned char *)(v1 + 40) = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214777214()
{
  uint64_t v38 = v0;
  uint64_t v1 = *(void **)(v0 + 392);
  uint64_t v2 = *(void **)(v0 + 384);
  char v3 = *(void **)(v0 + 368);
  swift_willThrow();

  if (qword_26781BFB8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 344);
  unint64_t v4 = *(void *)(v0 + 352);
  uint64_t v6 = sub_2147ACE18();
  __swift_project_value_buffer(v6, (uint64_t)qword_26781D728);
  sub_21472BBA4(v5, v4);
  sub_21472BBA4(v5, v4);
  uint64_t v7 = sub_2147ACDF8();
  os_log_type_t v8 = sub_2147AD198();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v11 = *(void *)(v0 + 344);
  unint64_t v10 = *(void *)(v0 + 352);
  if (v9)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v37[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v14 = sub_2147ACCB8();
    *(void *)(v0 + 312) = sub_2147601CC(v14, v15, v37);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_21472BBFC(v11, v10);
    sub_21472BBFC(v11, v10);
    _os_log_impl(&dword_2146ED000, v7, v8, "ACL is %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v13, -1, -1);
    MEMORY[0x2166A8870](v12, -1, -1);
  }
  else
  {
    sub_21472BBFC(*(void *)(v0 + 344), *(void *)(v0 + 352));
    sub_21472BBFC(v11, v10);
  }

  uint64_t v16 = *(void **)(v0 + 400);
  id v17 = v16;
  id v18 = v16;
  uint64_t v19 = sub_2147ACDF8();
  os_log_type_t v20 = sub_2147AD198();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v22 = *(void **)(v0 + 400);
  if (v21)
  {
    unint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v37[0] = v24;
    *(_DWORD *)unint64_t v23 = 136315138;
    swift_getErrorValue();
    uint64_t v25 = sub_2147AD6C8();
    *(void *)(v0 + 304) = sub_2147601CC(v25, v26, v37);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2146ED000, v19, v20, "LAContext error %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v24, -1, -1);
    MEMORY[0x2166A8870](v23, -1, -1);
  }
  else
  {
  }
  uint64_t v27 = *(void **)(v0 + 400);
  uint64_t v29 = *(void **)(v0 + 368);
  unint64_t v28 = *(void **)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 344);
  unint64_t v30 = *(void *)(v0 + 352);
  uint64_t v32 = *(void *)(v0 + 328);
  unint64_t v33 = (void *)sub_2147ACC38();
  id v34 = objc_msgSend(v33, sel_code);

  *(void *)uint64_t v32 = v34;
  *(_OWORD *)(v32 + 8) = 0u;
  *(_OWORD *)(v32 + 24) = 0u;
  *(unsigned char *)(v32 + 40) = 2;
  *(void *)(v0 + 176) = v34;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(unsigned char *)(v0 + 216) = 2;
  sub_214741898();
  swift_willThrowTypedImpl();

  sub_21472BBFC(v31, v30);
  unint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_21477762C(uint64_t a1)
{
  *(void *)(v2 + 200) = v1;
  *(void *)(v2 + 208) = a1;
  return MEMORY[0x270FA2498](sub_21477764C, 0, 0);
}

uint64_t sub_21477764C()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)(v0 + 216) = v2;
  uint64_t v4 = qword_26781BFB8;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2147ACE18();
  *(void *)(v0 + 224) = __swift_project_value_buffer(v5, (uint64_t)qword_26781D728);
  uint64_t v6 = sub_2147ACDF8();
  os_log_type_t v7 = sub_2147AD178();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl(&dword_2146ED000, v6, v7, "Sending getACL request", v8, 2u);
    MEMORY[0x2166A8870](v8, -1, -1);
  }
  uint64_t v9 = *(void *)(v0 + 200);

  uint64_t v10 = *(void *)(v9 + 32);
  *(void *)(v0 + 232) = v10;
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = 1;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(unsigned char *)(v0 + 72) = -64;
  return MEMORY[0x270FA2498](sub_2147777B0, v10, 0);
}

uint64_t sub_2147777B0()
{
  sub_214749C54(v0 + 16, (uint64_t *)(v0 + 80));
  *(void *)(v0 + 240) = 0;
  return MEMORY[0x270FA2498](sub_214777844, 0, 0);
}

uint64_t sub_214777844()
{
  uint64_t v62 = v0;
  uint64_t v1 = v0 + 80;
  uint64_t v2 = *(void *)(v0 + 80);
  unint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  unsigned int v7 = *(unsigned __int8 *)(v0 + 120);
  unsigned int v8 = v7 >> 5;
  sub_21473F85C(v2, v3, v4, v6, v5, *(unsigned char *)(v0 + 120));
  sub_21473F85C(v2, v3, v4, v6, v5, v7);
  uint64_t v9 = sub_2147ACDF8();
  os_log_type_t type = sub_2147AD1B8();
  uint64_t v52 = v0;
  if (!os_log_type_enabled(v9, type))
  {
    sub_21473F988(v2, v3, v4, v6, v5, v7);
    sub_21473F988(v2, v3, v4, v6, v5, v7);

    if (v8) {
      goto LABEL_3;
    }
LABEL_8:
    sub_214741898();
    id v17 = (void *)swift_allocError();
    *(void *)uint64_t v18 = v2;
    *(void *)(v18 + 8) = v3;
    *(void *)(v18 + 16) = v4;
    *(void *)(v18 + 24) = v6;
    *(void *)(v18 + 32) = v5;
    *(unsigned char *)(v18 + 40) = v7;
    swift_willThrow();
    goto LABEL_10;
  }
  os_log_t v53 = (os_log_t)v6;
  uint64_t v10 = v4;
  uint64_t v11 = (uint8_t *)swift_slowAlloc();
  uint64_t v48 = swift_slowAlloc();
  uint64_t v54 = v48;
  *(_DWORD *)uint64_t v11 = 136315138;
  uint64_t v56 = v2;
  unint64_t v57 = v3;
  uint64_t v58 = v10;
  uint64_t v59 = (uint64_t)v53;
  uint64_t v60 = v5;
  char v61 = v7;
  unint64_t v12 = JPKIXPCResponse.description.getter();
  *(void *)(v0 + 16) = sub_2147601CC(v12, v13, &v54);
  sub_2147AD248();
  swift_bridgeObjectRelease();
  sub_21473F988(v2, v3, v10, (uint64_t)v53, v5, v7);
  sub_21473F988(v2, v3, v10, (uint64_t)v53, v5, v7);
  _os_log_impl(&dword_2146ED000, v9, type, "Response %s", v11, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2166A8870](v48, -1, -1);
  uint64_t v14 = v11;
  uint64_t v4 = v10;
  uint64_t v6 = (uint64_t)v53;
  MEMORY[0x2166A8870](v14, -1, -1);

  if (!v8) {
    goto LABEL_8;
  }
LABEL_3:
  if (v8 == 4)
  {
    swift_bridgeObjectRelease();
    sub_21473D560(1, 0, 0, 0, 0, 0xC0u);
    unint64_t v15 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
    return v15(v2, v3);
  }
  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  sub_2147AD348();
  swift_bridgeObjectRelease();
  uint64_t v54 = 0xD000000000000018;
  unint64_t v55 = 0x80000002147C0B10;
  uint64_t v56 = v2;
  unint64_t v57 = v3;
  uint64_t v58 = v4;
  uint64_t v59 = v6;
  uint64_t v60 = v5;
  char v61 = v7;
  JPKIXPCResponse.description.getter();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  uint64_t v19 = v54;
  unint64_t v20 = v55;
  sub_214741898();
  id v17 = (void *)swift_allocError();
  *(void *)uint64_t v21 = v19;
  *(void *)(v21 + 8) = v20;
  *(void *)(v21 + 24) = 0;
  *(void *)(v21 + 32) = 0;
  *(void *)(v21 + 16) = 0;
  *(unsigned char *)(v21 + 40) = 0;
  swift_willThrow();
  sub_21473F988(v2, v3, v4, v6, v5, v7);
LABEL_10:
  *(void *)(v52 + 192) = v17;
  id v22 = v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
  if (swift_dynamicCast())
  {

    uint64_t v23 = *(void *)(v52 + 80);
    unint64_t v24 = *(void *)(v52 + 88);
    uint64_t v25 = *(void *)(v52 + 96);
    uint64_t v26 = *(void *)(v52 + 104);
    uint64_t v27 = *(void *)(v52 + 112);
    char v28 = *(unsigned char *)(v52 + 120);
    sub_21473F8B0(v23, v24, v25, v26, v27, v28);
    sub_21473F8B0(v23, v24, v25, v26, v27, v28);
    uint64_t v29 = sub_2147ACDF8();
    os_log_type_t v30 = sub_2147AD198();
    if (os_log_type_enabled(v29, v30))
    {
      os_log_type_t v49 = v30;
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t typea = swift_slowAlloc();
      uint64_t v54 = typea;
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v56 = v23;
      unint64_t v57 = v24;
      uint64_t v58 = v25;
      uint64_t v59 = v26;
      uint64_t v60 = v27;
      char v61 = v28;
      unint64_t v32 = JPKIInternalTypes.InternalError.localizedDescription.getter();
      *(void *)(v52 + 16) = sub_2147601CC(v32, v33, &v54);
      sub_2147AD248();
      swift_bridgeObjectRelease();
      sub_21473F9DC(v23, v24, v25, v26, v27, v28);
      sub_21473F9DC(v23, v24, v25, v26, v27, v28);
      _os_log_impl(&dword_2146ED000, v29, v49, "Internal error: %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166A8870](typea, -1, -1);
      MEMORY[0x2166A8870](v31, -1, -1);
    }
    else
    {
      sub_21473F9DC(v23, v24, v25, v26, v27, v28);
      sub_21473F9DC(v23, v24, v25, v26, v27, v28);
    }

    uint64_t v42 = *(void *)(v52 + 208);
    *(void *)uint64_t v42 = v23;
    *(void *)(v42 + 8) = v24;
    *(void *)(v42 + 16) = v25;
    *(void *)(v42 + 24) = v26;
    *(void *)(v42 + 32) = v27;
    *(unsigned char *)(v42 + 40) = v28;
    *(void *)(v52 + 16) = v23;
    *(void *)(v52 + 24) = v24;
    *(void *)(v52 + 32) = v25;
    *(void *)(v52 + 40) = v26;
    *(void *)(v52 + 48) = v27;
    *(unsigned char *)(v52 + 56) = v28;
    sub_21473F8B0(v23, v24, v25, v26, v27, v28);
    sub_214741898();
    swift_willThrowTypedImpl();
    swift_bridgeObjectRelease();
    sub_21473D560(1, 0, 0, 0, 0, 0xC0u);
    sub_21473F9DC(v23, v24, v25, v26, v27, v28);
    uint64_t v43 = *(void **)(v52 + 192);
  }
  else
  {

    id v34 = v17;
    id v35 = v17;
    unint64_t v36 = sub_2147ACDF8();
    os_log_type_t v37 = sub_2147AD198();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v56 = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      swift_getErrorValue();
      uint64_t v40 = sub_2147AD6C8();
      *(void *)(v52 + 16) = sub_2147601CC(v40, v41, &v56);
      sub_2147AD248();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2146ED000, v36, v37, "Unhandled XPC error : %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166A8870](v39, -1, -1);
      MEMORY[0x2166A8870](v38, -1, -1);
    }
    else
    {
    }
    uint64_t v44 = *(void *)(v52 + 208);
    swift_getErrorValue();
    uint64_t v45 = sub_2147AD6C8();
    *(void *)uint64_t v44 = v45;
    *(void *)(v44 + 8) = v46;
    *(void *)(v44 + 24) = 0;
    *(void *)(v44 + 32) = 0;
    *(void *)(v44 + 16) = 0;
    *(unsigned char *)(v44 + 40) = 1;
    *(void *)(v52 + 16) = v45;
    *(void *)(v52 + 24) = v46;
    *(void *)(v52 + 40) = 0;
    *(void *)(v52 + 48) = 0;
    *(void *)(v52 + 32) = 0;
    *(unsigned char *)(v52 + 56) = 1;
    sub_214741898();
    swift_willThrowTypedImpl();
    swift_bridgeObjectRelease();
    sub_21473D560(1, 0, 0, 0, 0, 0xC0u);
    uint64_t v43 = v17;
  }

  uint64_t v47 = *(uint64_t (**)(void))(v52 + 8);
  return v47();
}

uint64_t sub_21477810C()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void **)(v0 + 240);
  *(void *)(v0 + 192) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
  if (swift_dynamicCast())
  {

    uint64_t v3 = *(void *)(v0 + 80);
    unint64_t v4 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 112);
    char v8 = *(unsigned char *)(v0 + 120);
    sub_21473F8B0(v3, v4, v5, v6, v7, v8);
    sub_21473F8B0(v3, v4, v5, v6, v7, v8);
    uint64_t v9 = sub_2147ACDF8();
    os_log_type_t v10 = sub_2147AD198();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = v29;
      v31[0] = v3;
      *(_DWORD *)uint64_t v11 = 136315138;
      v31[1] = v4;
      v31[2] = v5;
      v31[3] = v6;
      v31[4] = v7;
      char v32 = v8;
      unint64_t v12 = JPKIInternalTypes.InternalError.localizedDescription.getter();
      *(void *)(v0 + 16) = sub_2147601CC(v12, v13, &v30);
      sub_2147AD248();
      swift_bridgeObjectRelease();
      sub_21473F9DC(v3, v4, v5, v6, v7, v8);
      sub_21473F9DC(v3, v4, v5, v6, v7, v8);
      _os_log_impl(&dword_2146ED000, v9, v10, "Internal error: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166A8870](v29, -1, -1);
      MEMORY[0x2166A8870](v11, -1, -1);
    }
    else
    {
      sub_21473F9DC(v3, v4, v5, v6, v7, v8);
      sub_21473F9DC(v3, v4, v5, v6, v7, v8);
    }

    uint64_t v22 = *(void *)(v0 + 208);
    *(void *)uint64_t v22 = v3;
    *(void *)(v22 + 8) = v4;
    *(void *)(v22 + 16) = v5;
    *(void *)(v22 + 24) = v6;
    *(void *)(v22 + 32) = v7;
    *(unsigned char *)(v22 + 40) = v8;
    *(void *)(v0 + 16) = v3;
    *(void *)(v0 + 24) = v4;
    *(void *)(v0 + 32) = v5;
    *(void *)(v0 + 40) = v6;
    *(void *)(v0 + 48) = v7;
    *(unsigned char *)(v0 + 56) = v8;
    sub_21473F8B0(v3, v4, v5, v6, v7, v8);
    sub_214741898();
    swift_willThrowTypedImpl();
    swift_bridgeObjectRelease();
    sub_21473D560(1, 0, 0, 0, 0, 0xC0u);
    sub_21473F9DC(v3, v4, v5, v6, v7, v8);
    uint64_t v23 = *(void **)(v0 + 192);
  }
  else
  {

    id v14 = v1;
    id v15 = v1;
    uint64_t v16 = sub_2147ACDF8();
    os_log_type_t v17 = sub_2147AD198();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v31[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_getErrorValue();
      uint64_t v20 = sub_2147AD6C8();
      *(void *)(v0 + 16) = sub_2147601CC(v20, v21, v31);
      sub_2147AD248();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2146ED000, v16, v17, "Unhandled XPC error : %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166A8870](v19, -1, -1);
      MEMORY[0x2166A8870](v18, -1, -1);
    }
    else
    {
    }
    uint64_t v24 = *(void *)(v0 + 208);
    swift_getErrorValue();
    uint64_t v25 = sub_2147AD6C8();
    *(void *)uint64_t v24 = v25;
    *(void *)(v24 + 8) = v26;
    *(void *)(v24 + 24) = 0;
    *(void *)(v24 + 32) = 0;
    *(void *)(v24 + 16) = 0;
    *(unsigned char *)(v24 + 40) = 1;
    *(void *)(v0 + 16) = v25;
    *(void *)(v0 + 24) = v26;
    *(void *)(v0 + 40) = 0;
    *(void *)(v0 + 48) = 0;
    *(void *)(v0 + 32) = 0;
    *(unsigned char *)(v0 + 56) = 1;
    sub_214741898();
    swift_willThrowTypedImpl();
    swift_bridgeObjectRelease();
    sub_21473D560(1, 0, 0, 0, 0, 0xC0u);
    uint64_t v23 = v1;
  }

  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

char *sub_214778644(uint64_t a1, unint64_t a2, char *a3)
{
  sub_21472BBA4(a1, a2);
  uint64_t v6 = (void *)sub_2147ACCA8();
  id v7 = objc_msgSend(self, sel_recordFromData_, v6);
  sub_21472BBFC(a1, a2);

  if (!v7
    || (id v8 = objc_msgSend(v7, sel_propertyList), v7, !v8)
    || (__swift_instantiateConcreteTypeFromMangledName(&qword_26781D798),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781D7A0),
        (swift_dynamicCast() & 1) == 0))
  {
    *(void *)a3 = 1;
    *(_OWORD *)(a3 + 8) = 0u;
    *(_OWORD *)(a3 + 24) = 0u;
    a3[40] = 14;
    sub_214741898();
    swift_willThrowTypedImpl();
    return a3;
  }
  id result = (char *)SecAccessControlCreate();
  if (result)
  {
    a3 = result;
    os_log_type_t v10 = (void *)sub_2147ACE98();
    swift_bridgeObjectRelease();
    SecAccessControlSetConstraints();

    return a3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2147787EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    *uint64_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2) {
      uint64_t v8 = sub_2147ACEA8();
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v9 = v8;
    sub_214778AC8((uint64_t)&v9, *(void *)(*(void *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t JPKIInternalClient.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t JPKIInternalClient.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t sub_214778944()
{
  uint64_t v0 = sub_2147ACE18();
  __swift_allocate_value_buffer(v0, qword_26781D728);
  __swift_project_value_buffer(v0, (uint64_t)qword_26781D728);
  return sub_2147ACE08();
}

uint64_t sub_2147789C4(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  if (a7) {
    return sub_21473F9DC(result, a2, a3, a4, a5, a6);
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for JPKIInternalClient()
{
  return self;
}

uint64_t method lookup function for JPKIInternalClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for JPKIInternalClient);
}

uint64_t dispatch thunk of JPKIInternalClient.__allocating_init(passIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_214778A20()
{
  unint64_t result = qword_26781D778;
  if (!qword_26781D778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D778);
  }
  return result;
}

unint64_t sub_214778A74()
{
  unint64_t result = qword_26781D780;
  if (!qword_26781D780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26781D780);
  }
  return result;
}

uint64_t sub_214778AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_214778B30(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_214778B98(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t))
{
  id v5 = sub_214756E50();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  v10[4] = sub_21477A278;
  void v10[5] = v6;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_214778B30;
  v10[3] = &block_descriptor_17;
  id v7 = _Block_copy(v10);
  swift_release();
  id v8 = objc_msgSend(v5, sel_synchronousRemoteObjectProxyWithErrorHandler_, v7);
  _Block_release(v7);

  sub_2147AD288();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D458);
  if ((swift_dynamicCast() & 1) == 0) {
    uint64_t v11 = 0;
  }
  a3(&v11, a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_214778D5C(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
  swift_allocError();
  *id v2 = a1;
  id v3 = a1;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_214778DD0()
{
  type metadata accessor for CredentialInternalClient();
  uint64_t v0 = swift_allocObject();
  if (qword_26781BFA0 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = qword_26782C6D8;
  swift_retain();
  uint64_t result = sub_2147ACE08();
  qword_26781D7A8 = v0;
  return result;
}

uint64_t static CredentialInternalClient.shared.getter()
{
  if (qword_26781BFC0 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t CredentialInternalClient.listCredentials()()
{
  *(void *)(v1 + 144) = v0;
  return MEMORY[0x270FA2498](sub_214778F10, 0, 0);
}

uint64_t sub_214778F10()
{
  *(void *)(v0 + 152) = *(void *)(*(void *)(v0 + 144) + 16);
  return MEMORY[0x270FA2498](sub_214778F38, 0, 0);
}

uint64_t sub_214778F38()
{
  uint64_t v1 = v0;
  id v2 = v0;
  id v3 = v0 + 2;
  v1[2] = v2;
  v1[7] = v1 + 16;
  v1[3] = sub_214779148;
  uint64_t v4 = swift_continuation_init();
  id v5 = sub_214756E50();
  uint64_t v6 = (void **)(v1 + 17);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  v1[14] = sub_214779298;
  v1[15] = v7;
  v1[10] = MEMORY[0x263EF8330];
  v1[11] = 1107296256;
  v1[12] = sub_214778B30;
  v1[13] = &block_descriptor_6;
  id v8 = _Block_copy(v1 + 10);
  swift_release();
  id v9 = objc_msgSend(v5, sel_synchronousRemoteObjectProxyWithErrorHandler_, v8);
  _Block_release(v8);

  sub_2147AD288();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D458);
  if ((swift_dynamicCast() & 1) == 0) {
    void *v6 = 0;
  }
  sub_2147792B4(v6, v4);
  swift_unknownObjectRelease();
  return MEMORY[0x270FA23F0](v3);
}

uint64_t sub_214779148()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48))
  {
    swift_willThrow();
    id v2 = *(uint64_t (**)(void))(v1 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(void *)(*v0 + 128);
    id v5 = *(uint64_t (**)(uint64_t))(v1 + 8);
    return v5(v4);
  }
}

uint64_t sub_214779288()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_214779298(void *a1)
{
  return sub_214778D5C(a1);
}

uint64_t sub_2147792B4(void **a1, uint64_t a2)
{
  id v3 = *a1;
  if (*a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a2;
    v9[4] = sub_21477A140;
    void v9[5] = v4;
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 1107296256;
    void v9[2] = sub_2147794D8;
    v9[3] = &block_descriptor_29;
    id v5 = _Block_copy(v9);
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v3, sel_listCredentialsInternalWithReply_, v5);
    _Block_release(v5);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_214757644();
    uint64_t v7 = swift_allocError();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    uint64_t *v8 = v7;
    return swift_continuation_throwingResumeWithError();
  }
}

uint64_t sub_214779414(uint64_t result, void *a2, uint64_t a3)
{
  if (result)
  {
    **(void **)(*(void *)(a3 + 64) + 40) = result;
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume();
  }
  else if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    void *v4 = a2;
    id v5 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2147794D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    type metadata accessor for CredentialInternal();
    uint64_t v4 = sub_2147AD058();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t CredentialInternalClient.deleteCredental(_:)(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = v1;
  return MEMORY[0x270FA2498](sub_21477958C, 0, 0);
}

uint64_t sub_21477958C()
{
  uint64_t v1 = v0[10];
  v0[12] = *(void *)(v0[11] + 16);
  uint64_t v2 = swift_task_alloc();
  v0[13] = v2;
  *(void *)(v2 + 16) = v1;
  return MEMORY[0x270FA2498](sub_214779608, 0, 0);
}

uint64_t sub_214779608()
{
  uint64_t v1 = v0[12];
  v0[2] = v0;
  v0[3] = sub_2147796C0;
  uint64_t v2 = swift_continuation_init();
  sub_214778B98(v2, v1, (void (*)(uint64_t *, uint64_t))sub_2147799E4);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2147796C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 112) = v2;
  if (v2)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_214779810, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    id v3 = *(uint64_t (**)(void))(v1 + 8);
    return v3();
  }
}

uint64_t sub_214779810()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_214779874(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (*a1)
  {
    swift_unknownObjectRetain();
    uint64_t v4 = (void *)sub_2147ACD38();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a2;
    v9[4] = sub_21477A114;
    void v9[5] = v5;
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 1107296256;
    void v9[2] = sub_2147799EC;
    v9[3] = &block_descriptor_23;
    id v6 = _Block_copy(v9);
    swift_release();
    objc_msgSend(v3, sel_deleteCredentialWithUuid_reply_, v4, v6);
    _Block_release(v6);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_214757644();
    uint64_t v7 = swift_allocError();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    uint64_t *v8 = v7;
    swift_continuation_throwingResumeWithError();
  }
}

void sub_2147799E4(void **a1, uint64_t a2)
{
}

void sub_2147799EC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t CredentialInternalClient.deleteApplication(_:)(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  return MEMORY[0x270FA2498](sub_214779A7C, 0, 0);
}

uint64_t sub_214779A7C()
{
  *(void *)(v0 + 104) = *(void *)(*(void *)(v0 + 96) + 16);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_214779AF0, 0, 0);
}

uint64_t sub_214779AF0()
{
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_214779BA4;
  uint64_t v1 = swift_continuation_init();
  sub_21475746C(v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_214779BA4()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

void sub_214779CAC(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (*a1)
  {
    swift_unknownObjectRetain();
    uint64_t v4 = (void *)sub_2147ACF38();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a2;
    v9[4] = sub_21477A27C;
    void v9[5] = v5;
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 1107296256;
    void v9[2] = sub_2147799EC;
    v9[3] = &block_descriptor_11_0;
    id v6 = _Block_copy(v9);
    swift_release();
    objc_msgSend(v3, sel_deleteApplicationWithIdentifier_reply_, v4, v6);
    _Block_release(v6);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_214757644();
    uint64_t v7 = swift_allocError();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    uint64_t *v8 = v7;
    swift_continuation_throwingResumeWithError();
  }
}

uint64_t sub_214779E28(void *a1)
{
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    *uint64_t v2 = a1;
    id v3 = a1;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t CredentialInternalClient.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9SEService24CredentialInternalClient_logger;
  uint64_t v2 = sub_2147ACE18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t CredentialInternalClient.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9SEService24CredentialInternalClient_logger;
  uint64_t v2 = sub_2147ACE18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_214779FD8()
{
  return type metadata accessor for CredentialInternalClient();
}

uint64_t type metadata accessor for CredentialInternalClient()
{
  uint64_t result = qword_26781D7D0;
  if (!qword_26781D7D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21477A02C()
{
  uint64_t result = sub_2147ACE18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CredentialInternalClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CredentialInternalClient);
}

uint64_t sub_21477A0E4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21477A0F4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21477A104()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21477A114(void *a1)
{
  return sub_214779E28(a1);
}

uint64_t sub_21477A130()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21477A140(uint64_t a1, void *a2)
{
  return sub_214779414(a1, a2, *(void *)(v2 + 16));
}

unsigned char *storeEnumTagSinglePayload for CredentialInternalClient.ErrorCode(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21477A1E4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CredentialInternalClient.ErrorCode()
{
  return &type metadata for CredentialInternalClient.ErrorCode;
}

unint64_t sub_21477A224()
{
  unint64_t result = qword_26781D7E0;
  if (!qword_26781D7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D7E0);
  }
  return result;
}

uint64_t SERDataSource.getNameInfo(type:for:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t v10 = a1[1];
  sub_21471ED54(*a1, v10);
  sub_21471ED54(v2, v10);
  sub_2147ACF78();
  uint64_t v4 = sub_2147ACF88();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  sub_2147201A0(v2, v10);
  if (*(void *)(v3 + 16)
    && (sub_21477ED00(v4, v6, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21477EE38),
        (v7 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

id SERDataSource.getMemoryInfo(type:seType:)(uint64_t *a1, unsigned char *a2)
{
  uint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  if (v3 < 0x1A)
  {
    uint64_t v5 = *v2;
    uint64_t v6 = 0xE300000000000000;
    uint64_t v7 = 3356496;
    switch(*a2)
    {
      case 0:
        __break(1u);
        JUMPOUT(0x21477A650);
      case 1:
        goto LABEL_10;
      case 2:
        uint64_t v6 = 0xE600000000000000;
        uint64_t v7 = 0x303143333750;
        if (!*(void *)(v5 + 16)) {
          goto LABEL_18;
        }
        goto LABEL_11;
      case 3:
        uint64_t v7 = 5459781;
        if (!*(void *)(v5 + 16)) {
          goto LABEL_18;
        }
        goto LABEL_11;
      default:
        uint64_t v6 = 0xE600000000000000;
        uint64_t v7 = 0x313242534F45;
LABEL_10:
        if (!*(void *)(v5 + 16)) {
          goto LABEL_18;
        }
LABEL_11:
        uint64_t v13 = sub_21477ED00(v7, v6, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21477EE38);
        if ((v14 & 1) == 0) {
          goto LABEL_18;
        }
        uint64_t v15 = *(void *)(*(void *)(v5 + 56) + 8 * v13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_21471ED54(v4, v3);
        sub_21471ED54(v4, v3);
        sub_2147ACF78();
        uint64_t v16 = sub_2147ACF88();
        uint64_t v18 = v17;
        swift_bridgeObjectRelease();
        sub_2147201A0(v4, v3);
        if (*(void *)(v15 + 16))
        {
          uint64_t v19 = sub_21477ED00(v16, v18, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21477EE38);
          if (v20)
          {
            id v11 = *(id *)(*(void *)(v15 + 56) + 8 * v19);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v11;
          }
        }
        swift_bridgeObjectRelease();
LABEL_18:
        swift_bridgeObjectRelease();
        break;
    }
    return 0;
  }
  uint64_t v8 = v2[2];
  if (!*(void *)(v8 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_21477ED00(v4, v3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21477EE38);
  if ((v10 & 1) == 0)
  {
    sub_2147201A0(v4, v3);
    return 0;
  }
  id v11 = *(id *)(*(void *)(v8 + 56) + 8 * v9);
  id v12 = v11;
  sub_2147201A0(v4, v3);
  return v11;
}

SEService::SERDataSource __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SERDataSource.init(credentialSizes:)(Swift::OpaquePointer credentialSizes)
{
  uint64_t v4 = v1;
  id v5 = objc_allocWithZone(MEMORY[0x263EFF8F8]);
  uint64_t v6 = (void *)sub_2147ACF38();
  id v7 = objc_msgSend(v5, sel_initWithContentsOfFile_, v6);

  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  uint64_t v25 = v4;
  id v8 = v7;
  uint64_t v9 = sub_2147ACCD8();
  unint64_t v11 = v10;

  sub_2147ACBF8();
  swift_allocObject();
  sub_2147ACBE8();
  sub_21477EAAC();
  sub_2147ACBD8();
  if (v2)
  {
    swift_bridgeObjectRelease();
    sub_21472BBFC(v9, v11);

    swift_release();
LABEL_5:
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v12 = 0xD00000000000002BLL;
    *(void *)(v12 + 8) = 0x80000002147C0BB0;
    *(unsigned char *)(v12 + 16) = 0;
    uint64_t v13 = (void *)swift_willThrow();
    goto LABEL_9;
  }
  swift_release();
  id v16 = objc_allocWithZone(MEMORY[0x263EFF8F8]);
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_2147ACF38();
  id v18 = objc_msgSend(v16, sel_initWithContentsOfFile_, v17);

  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = sub_2147ACCD8();
    unint64_t v22 = v21;

    swift_allocObject();
    sub_2147ACBE8();
    sub_21477EB00();
    sub_2147ACBD8();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_21477FC58((uint64_t)credentialSizes._rawValue);
    sub_21472BBFC(v9, v11);
    sub_21472BBFC(v20, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)swift_bridgeObjectRelease_n();
    *uint64_t v25 = v26;
    v25[1] = v26;
    v25[2] = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214729BF0();
    swift_allocError();
    *(void *)uint64_t v23 = 0xD000000000000028;
    *(void *)(v23 + 8) = 0x80000002147C0C10;
    *(unsigned char *)(v23 + 16) = 0;
    swift_willThrow();
    sub_21472BBFC(v9, v11);
    uint64_t v13 = (void *)swift_bridgeObjectRelease();
  }
LABEL_9:
  result.credentialSizes._rawValue = v15;
  result.midNameDict.nameToMID._rawValue = v14;
  result.memoryUsageDict.memoryUsageForSEType._rawValue = v13;
  return result;
}

Swift::Bool __swiftcall SERDataSource.isSystemApplet(moduleAID:)(Swift::String moduleAID)
{
  uint64_t v1 = swift_bridgeObjectRetain();
  char v2 = sub_21477FFC8(v1, (uint64_t (*)(uint64_t, uint64_t, void *))sub_2147739E0);
  swift_bridgeObjectRelease();
  return v2 & 1;
}

id MemoryUsage.__allocating_init(pHeap:cor:cod:usedIndices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap] = a1;
  *(void *)&v9[OBJC_IVAR____TtC9SEService11MemoryUsage_cor] = a2;
  *(void *)&v9[OBJC_IVAR____TtC9SEService11MemoryUsage_cod] = a3;
  *(void *)&v9[OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices] = a4;
  v11.receiver = v9;
  v11.super_class = v4;
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t sub_21477AAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(unsigned char *)(a3 + 24) != 1) {
    return 0;
  }
  id v8 = *(void **)a3;
  id v7 = *(void **)(a3 + 8);
  uint64_t v9 = *(void **)(a3 + 16);
  uint64_t v10 = *(void *)(*(void *)a3 + 16);
  if (v10)
  {
    if (v8[4] == a4 && v8[5] == a5) {
      return 1;
    }
    uint64_t result = sub_2147AD668();
    if (result) {
      return 1;
    }
    if (v10 != 1)
    {
      uint64_t v13 = v8 + 7;
      uint64_t v14 = 1;
      while (1)
      {
        uint64_t v15 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        if (*(v13 - 1) == a4 && *v13 == a5) {
          return 1;
        }
        uint64_t result = sub_2147AD668();
        if (result) {
          return 1;
        }
        v13 += 2;
        ++v14;
        if (v15 == v10) {
          goto LABEL_17;
        }
      }
      __break(1u);
      goto LABEL_38;
    }
  }
LABEL_17:
  uint64_t v17 = v7[2];
  if (v17)
  {
    if (v7[4] == a4 && v7[5] == a5) {
      return 1;
    }
    uint64_t result = sub_2147AD668();
    if (result) {
      return 1;
    }
    if (v17 != 1)
    {
      id v19 = v7 + 7;
      uint64_t v20 = 1;
      while (1)
      {
        uint64_t v21 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          break;
        }
        if (*(v19 - 1) == a4 && *v19 == a5) {
          return 1;
        }
        uint64_t result = sub_2147AD668();
        if (result) {
          return 1;
        }
        v19 += 2;
        ++v20;
        if (v21 == v17) {
          goto LABEL_34;
        }
      }
LABEL_38:
      __break(1u);
      return result;
    }
  }
LABEL_34:
  return sub_21471EC24(a4, a5, v9);
}

unint64_t sub_21477AC68()
{
  return 0xD000000000000014;
}

uint64_t sub_21477AC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2147807A4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_21477ACB0(uint64_t a1)
{
  unint64_t v2 = sub_214780208();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21477ACEC(uint64_t a1)
{
  unint64_t v2 = sub_214780208();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MemoryInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D830);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214780208();
  sub_2147AD768();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D840);
  sub_21478032C(&qword_26781D848, (void (*)(void))sub_21478025C);
  sub_2147AD608();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MemoryInfo.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D868);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214780208();
  sub_2147AD758();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D840);
    sub_21478032C(&qword_26781D870, (void (*)(void))sub_2147803A8);
    sub_2147AD588();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_21477B060@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return MemoryInfo.init(from:)(a1, a2);
}

uint64_t sub_21477B078(void *a1)
{
  return MemoryInfo.encode(to:)(a1);
}

uint64_t sub_21477B090()
{
  return 0x494D6F54656D616ELL;
}

uint64_t sub_21477B0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x494D6F54656D616ELL && a2 == 0xE900000000000044)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2147AD668();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_21477B150(uint64_t a1)
{
  unint64_t v2 = sub_214780454();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21477B18C(uint64_t a1)
{
  unint64_t v2 = sub_214780454();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NameInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D888);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214780454();
  sub_2147AD768();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D898);
  sub_2147804A8(&qword_26781D8A0, (void (*)(void))sub_214780524);
  sub_2147AD608();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t NameInfo.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D8B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214780454();
  sub_2147AD758();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D898);
    sub_2147804A8(&qword_26781D8B8, (void (*)(void))sub_214780578);
    sub_2147AD588();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_21477B500@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return NameInfo.init(from:)(a1, a2);
}

uint64_t sub_21477B518(void *a1)
{
  return NameInfo.encode(to:)(a1);
}

uint64_t sub_21477B530()
{
  uint64_t result = 0x7972616D697270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656E6961746E6F63;
      break;
    case 2:
      uint64_t result = 0x65636E6174736E69;
      break;
    case 3:
      uint64_t result = 0x6D65747379537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21477B5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21478082C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21477B5F8(uint64_t a1)
{
  unint64_t v2 = sub_2147805CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21477B634(uint64_t a1)
{
  unint64_t v2 = sub_2147805CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MIDContainer.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D8C8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v14 = v8;
  v12[1] = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2147805CC();
  sub_2147AD768();
  uint64_t v16 = v9;
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
  sub_214780620(&qword_26781D8E0);
  sub_2147AD608();
  if (!v2)
  {
    uint64_t v10 = v13;
    uint64_t v16 = v14;
    char v15 = 1;
    sub_2147AD608();
    uint64_t v16 = v10;
    char v15 = 2;
    sub_2147AD608();
    LOBYTE(v16) = 3;
    sub_2147AD5E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MIDContainer.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D8E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2147805CC();
  sub_2147AD758();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
  char v19 = 0;
  sub_214780620(&qword_26781D8F0);
  sub_2147AD588();
  id v18 = a2;
  uint64_t v9 = v20;
  char v19 = 1;
  swift_bridgeObjectRetain();
  sub_2147AD588();
  uint64_t v17 = v9;
  uint64_t v10 = v20;
  char v19 = 2;
  swift_bridgeObjectRetain();
  sub_2147AD588();
  uint64_t v11 = v10;
  uint64_t v12 = v20;
  LOBYTE(v20) = 3;
  swift_bridgeObjectRetain();
  char v14 = sub_2147AD568();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v15 = v18;
  *id v18 = v17;
  v15[1] = v11;
  void v15[2] = v12;
  *((unsigned char *)v15 + 24) = v14 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21477BC28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return MIDContainer.init(from:)(a1, a2);
}

uint64_t sub_21477BC40(void *a1)
{
  return MIDContainer.encode(to:)(a1);
}

BOOL AppletPolicy.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t sub_21477BC7C()
{
  return sub_2147AD028();
}

uint64_t sub_21477BCDC()
{
  return sub_2147AD018();
}

uint64_t sub_21477BD44()
{
  uint64_t v1 = v0;
  sub_2147AD348();
  sub_2147ACFC8();
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory), sel_description));
  sub_2147ACF58();

  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory), sel_description));
  sub_2147ACF58();

  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_selectableMemory), sel_description));
  sub_2147ACF58();

  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_personalizedMemory), sel_description));
  sub_2147ACF58();

  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  sub_2147AD3F8();
  sub_2147ACFC8();
  return 0;
}

uint64_t static AppletMemoryInfo.supportsSecureCoding.getter()
{
  return byte_26781D7F0;
}

uint64_t static AppletMemoryInfo.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26781D7F0 = a1;
  return result;
}

uint64_t (*static AppletMemoryInfo.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

void sub_21477C10C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_pids);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_2147AD3C8();
    uint64_t v6 = v4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2147ACF38();
      swift_bridgeObjectRelease();
      sub_2147AD3A8();
      sub_2147AD3D8();
      sub_2147AD3E8();
      sub_2147AD3B8();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  uint64_t v7 = (void *)sub_2147AD048();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory);
  uint64_t v10 = (void *)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory);
  uint64_t v12 = (void *)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_selectableMemory);
  char v14 = (void *)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);

  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_personalizedMemory);
  uint64_t v16 = (void *)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeObject_forKey_, v15, v16);

  uint64_t v17 = sub_2147AD698();
  id v18 = (void *)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeObject_forKey_, v17, v18);
  swift_unknownObjectRelease();
}

uint64_t AppletMemoryInfo.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AppletMemoryInfo.init(coder:)(a1);
}

uint64_t AppletMemoryInfo.init(coder:)(void *a1)
{
  sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  id v3 = v1;
  uint64_t v4 = sub_2147AD208();
  if (!v4) {
    goto LABEL_21;
  }
  unint64_t v5 = v4;
  type metadata accessor for MemoryUsage();
  uint64_t v6 = sub_2147AD1E8();
  if (!v6)
  {
    swift_bridgeObjectRelease();
LABEL_21:

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v7 = (void *)v6;
  uint64_t v8 = sub_2147AD1E8();
  if (!v8)
  {
    swift_bridgeObjectRelease();

    goto LABEL_21;
  }
  uint64_t v9 = (void *)v8;
  uint64_t v10 = sub_2147AD1E8();
  if (!v10)
  {
    swift_bridgeObjectRelease();

    goto LABEL_21;
  }
  uint64_t v11 = (void *)v10;
  uint64_t v12 = sub_2147AD1E8();
  if (!v12)
  {
    swift_bridgeObjectRelease();

    goto LABEL_21;
  }
  uint64_t v13 = (void *)v12;
  char v14 = (void *)sub_2147ACF38();
  id v15 = objc_msgSend(a1, sel_decodeIntegerForKey_, v14);

  if ((unint64_t)v15 >= 2)
  {
    swift_bridgeObjectRelease();

    goto LABEL_21;
  }
  if (!(v5 >> 62))
  {
    uint64_t v16 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v40 = v11;
    if (v16) {
      goto LABEL_9;
    }
LABEL_29:

    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x263F8EE78];
LABEL_30:
    uint64_t v34 = (objc_class *)type metadata accessor for AppletMemoryInfo();
    id v35 = (char *)objc_allocWithZone(v34);
    *(void *)&v35[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_pids] = v18;
    *(void *)&v35[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory] = v7;
    *(void *)&v35[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory] = v9;
    *(void *)&v35[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_selectableMemory] = v40;
    *(void *)&v35[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_personalizedMemory] = v13;
    *(void *)&v35[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_policy] = v15;
    v41.receiver = v35;
    v41.super_class = v34;
    id v26 = objc_msgSendSuper2(&v41, sel_init);

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return (uint64_t)v26;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_2147AD4B8();
  swift_bridgeObjectRelease();
  uint64_t v40 = v11;
  if (!v16) {
    goto LABEL_29;
  }
LABEL_9:
  uint64_t v42 = MEMORY[0x263F8EE78];
  uint64_t result = sub_21474D3BC(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    id v36 = v15;
    os_log_type_t v37 = v13;
    uint64_t v38 = v9;
    uint64_t v39 = v7;
    uint64_t v18 = v42;
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v19 = 0;
      do
      {
        MEMORY[0x2166A7680](v19, v5);
        uint64_t v20 = sub_2147ACF58();
        uint64_t v22 = v21;
        swift_unknownObjectRelease();
        uint64_t v42 = v18;
        unint64_t v24 = *(void *)(v18 + 16);
        unint64_t v23 = *(void *)(v18 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_21474D3BC(v23 > 1, v24 + 1, 1);
          uint64_t v18 = v42;
        }
        ++v19;
        *(void *)(v18 + 16) = v24 + 1;
        uint64_t v25 = v18 + 16 * v24;
        *(void *)(v25 + 32) = v20;
        *(void *)(v25 + 40) = v22;
      }
      while (v16 != v19);
    }
    else
    {
      unint64_t v27 = v5 + 32;
      do
      {
        uint64_t v28 = sub_2147ACF58();
        uint64_t v30 = v29;
        uint64_t v42 = v18;
        unint64_t v32 = *(void *)(v18 + 16);
        unint64_t v31 = *(void *)(v18 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_21474D3BC(v31 > 1, v32 + 1, 1);
          uint64_t v18 = v42;
        }
        *(void *)(v18 + 16) = v32 + 1;
        uint64_t v33 = v18 + 16 * v32;
        *(void *)(v33 + 32) = v28;
        *(void *)(v33 + 40) = v30;
        v27 += 8;
        --v16;
      }
      while (v16);
    }

    swift_bridgeObjectRelease();
    uint64_t v9 = v38;
    uint64_t v7 = v39;
    id v15 = v36;
    uint64_t v13 = v37;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

void AppletMemoryInfo.init()()
{
}

unint64_t sub_21477C954(char a1)
{
  unint64_t result = 1935960432;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4D6567616B636170;
      break;
    case 2:
      unint64_t result = 0x656E6961746E6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x7963696C6F70;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21477CA38()
{
  return sub_21477C954(*v0);
}

uint64_t sub_21477CA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214780A18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21477CA68(uint64_t a1)
{
  unint64_t v2 = sub_2147806A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21477CAA4(uint64_t a1)
{
  unint64_t v2 = sub_2147806A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

id AppletMemoryInfo.__deallocating_deinit()
{
  return sub_21477E424(type metadata accessor for AppletMemoryInfo);
}

uint64_t sub_21477CB74(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D930);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2147806A8();
  sub_2147AD768();
  uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_pids);
  HIBYTE(v11) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
  sub_214780620(&qword_26781D8E0);
  sub_2147AD608();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory);
    HIBYTE(v11) = 1;
    type metadata accessor for MemoryUsage();
    sub_214781F50(&qword_26781D940, v9, (void (*)(uint64_t))type metadata accessor for MemoryUsage);
    sub_2147AD608();
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory);
    HIBYTE(v11) = 2;
    sub_2147AD608();
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_selectableMemory);
    HIBYTE(v11) = 3;
    sub_2147AD608();
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_personalizedMemory);
    HIBYTE(v11) = 4;
    sub_2147AD608();
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC9SEService16AppletMemoryInfo_policy);
    HIBYTE(v11) = 5;
    sub_2147806FC();
    sub_2147AD608();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id AppletMemoryInfo.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AppletMemoryInfo.init(from:)(a1);
}

id AppletMemoryInfo.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D950);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v17 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_2147806A8();
  uint64_t v18 = v1;
  sub_2147AD758();
  if (v2)
  {
    uint64_t v9 = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    id v15 = v9;

    type metadata accessor for AppletMemoryInfo();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D4E8);
    char v20 = 0;
    sub_214780620(&qword_26781D8F0);
    sub_2147AD588();
    uint64_t v11 = v18;
    *(void *)&v18[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_pids] = v21;
    type metadata accessor for MemoryUsage();
    char v20 = 1;
    sub_214781F50(&qword_26781D958, v12, (void (*)(uint64_t))type metadata accessor for MemoryUsage);
    sub_2147AD588();
    *(void *)&v11[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory] = v21;
    char v20 = 2;
    sub_2147AD588();
    *(void *)&v11[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory] = v21;
    char v20 = 3;
    sub_2147AD588();
    *(void *)&v18[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_selectableMemory] = v21;
    char v20 = 4;
    sub_2147AD588();
    *(void *)&v18[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_personalizedMemory] = v21;
    char v20 = 5;
    sub_214780750();
    sub_2147AD588();
    uint64_t v13 = v18;
    *(void *)&v18[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_policy] = v21;

    char v14 = (objc_class *)type metadata accessor for AppletMemoryInfo();
    v19.receiver = v13;
    v19.super_class = v14;
    id v15 = objc_msgSendSuper2(&v19, sel_init);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  return v15;
}

uint64_t sub_21477D3E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21477E984(a1, type metadata accessor for AppletMemoryInfo, (uint64_t (*)(uint64_t))AppletMemoryInfo.init(from:), a2);
}

uint64_t sub_21477D420(void *a1)
{
  return sub_21477CB74(a1);
}

id MemoryUsage.init(pHeap:cor:cod:usedIndices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap] = a1;
  *(void *)&v4[OBJC_IVAR____TtC9SEService11MemoryUsage_cor] = a2;
  *(void *)&v4[OBJC_IVAR____TtC9SEService11MemoryUsage_cod] = a3;
  *(void *)&v4[OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices] = a4;
  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for MemoryUsage();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_21477D5E4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_21477D678(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_21477D6C4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_21477D768()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9SEService11MemoryUsage_cor;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_21477D7FC(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC9SEService11MemoryUsage_cor);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_21477D848())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_21477D8EC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9SEService11MemoryUsage_cod;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_21477D980(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC9SEService11MemoryUsage_cod);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_21477D9CC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_21477DA70()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_21477DB04(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_21477DB50())()
{
  return j__swift_endAccess;
}

id sub_21477DBC4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_2147ACF38();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_21477DC34()
{
  return 0x203A70616548705BLL;
}

uint64_t static MemoryUsage.supportsSecureCoding.getter()
{
  return byte_26781D7F1;
}

uint64_t static MemoryUsage.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26781D7F1 = a1;
  return result;
}

uint64_t (*static MemoryUsage.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

void sub_21477DFB4(void *a1)
{
  id v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = (void *)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v4, v5);

  objc_super v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC9SEService11MemoryUsage_cor);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = (void *)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v7, v8);

  uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC9SEService11MemoryUsage_cod);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = (void *)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v10, v11);

  uint64_t v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices);
  swift_beginAccess();
  uint64_t v13 = *v12;
  char v14 = (void *)sub_2147ACF38();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v13, v14);
}

id MemoryUsage.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_214780CC0(a1);

  return v4;
}

id MemoryUsage.init(coder:)(void *a1)
{
  id v2 = sub_214780CC0(a1);

  return v2;
}

id MemoryUsage.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MemoryUsage.init()()
{
}

uint64_t sub_21477E2E4()
{
  uint64_t result = 0x7061654870;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7499619;
      break;
    case 2:
      uint64_t result = 6582115;
      break;
    case 3:
      uint64_t result = 0x69646E4964657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21477E36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214781D54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21477E394(uint64_t a1)
{
  unint64_t v2 = sub_214780E10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21477E3D0(uint64_t a1)
{
  unint64_t v2 = sub_214780E10();
  return MEMORY[0x270FA00B8](a1, v2);
}

id MemoryUsage.__deallocating_deinit()
{
  return sub_21477E424(type metadata accessor for MemoryUsage);
}

id sub_21477E424(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_21477E45C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D968);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  objc_super v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214780E10();
  sub_2147AD768();
  swift_beginAccess();
  v8[64] = 0;
  sub_2147AD5F8();
  if (!v1)
  {
    swift_beginAccess();
    v8[40] = 1;
    sub_2147AD5F8();
    swift_beginAccess();
    v8[16] = 2;
    sub_2147AD5F8();
    swift_beginAccess();
    v8[15] = 3;
    sub_2147AD5F8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

id MemoryUsage.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MemoryUsage.init(from:)(a1);
}

id MemoryUsage.init(from:)(void *a1)
{
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D978);
  uint64_t v4 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  objc_super v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v16 = a1;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_214780E10();
  uint64_t v9 = v1;
  id v10 = v8;
  sub_2147AD758();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    type metadata accessor for MemoryUsage();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v4;
    char v18 = 0;
    uint64_t v12 = v15;
    *(void *)&v9[OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap] = sub_2147AD578();
    char v18 = 1;
    *(void *)&v9[OBJC_IVAR____TtC9SEService11MemoryUsage_cor] = sub_2147AD578();
    char v18 = 2;
    *(void *)&v9[OBJC_IVAR____TtC9SEService11MemoryUsage_cod] = sub_2147AD578();
    char v18 = 3;
    *(void *)&v9[OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices] = sub_2147AD578();

    char v14 = (objc_class *)type metadata accessor for MemoryUsage();
    v17.receiver = v9;
    v17.super_class = v14;
    id v10 = objc_msgSendSuper2(&v17, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  return v10;
}

uint64_t sub_21477E944@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21477E984(a1, type metadata accessor for MemoryUsage, (uint64_t (*)(uint64_t))MemoryUsage.init(from:), a2);
}

uint64_t sub_21477E984@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  id v8 = objc_allocWithZone((Class)a2());
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_21477E9E4(void *a1)
{
  return sub_21477E45C(a1);
}

unint64_t sub_21477EA08(uint64_t a1, uint64_t a2)
{
  sub_2147AD728();
  CredentialType.hash(into:)();
  uint64_t v4 = sub_2147AD748();
  return sub_21477ED94(a1, a2, v4);
}

uint64_t sub_21477EA80(uint64_t a1, uint64_t a2)
{
  return sub_21477ED00(a1, a2, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21477EE38);
}

unint64_t sub_21477EAAC()
{
  unint64_t result = qword_26781D800;
  if (!qword_26781D800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D800);
  }
  return result;
}

unint64_t sub_21477EB00()
{
  unint64_t result = qword_26781D808;
  if (!qword_26781D808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D808);
  }
  return result;
}

unint64_t sub_21477EB54(uint64_t a1)
{
  uint64_t v2 = sub_2147AD2F8();
  return sub_21477EF1C(a1, v2);
}

unint64_t sub_21477EB98(uint64_t a1)
{
  uint64_t v2 = sub_2147AD228();
  return sub_21477EFE4(a1, v2, &qword_26781D370);
}

unint64_t sub_21477EBE8(uint64_t a1)
{
  uint64_t v2 = sub_2147AD228();
  return sub_21477EFE4(a1, v2, (unint64_t *)&qword_26781C5B0);
}

unint64_t sub_21477EC38(uint64_t a1)
{
  sub_2147ACD88();
  sub_214781F50((unint64_t *)&unk_26781D550, 255, MEMORY[0x263F07508]);
  uint64_t v2 = sub_2147ACED8();
  return sub_21477F0F8(a1, v2);
}

uint64_t sub_21477ECD4(uint64_t a1, uint64_t a2)
{
  return sub_21477ED00(a1, a2, MEMORY[0x263F06F38], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21477F2BC);
}

uint64_t sub_21477ED00(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_2147AD728();
  a3(v10, a1, a2);
  uint64_t v7 = sub_2147AD748();
  return a4(a1, a2, v7);
}

unint64_t sub_21477ED94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[0] = a1;
  v9[1] = a2;
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a3 & ~v4;
  if ((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    do
    {
      long long v8 = *(_OWORD *)(*(void *)(v3 + 48) + 16 * v5);
      if (_s9SEService14CredentialTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)&v8, v9)) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_21477EE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2147AD668() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2147AD668() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_21477EF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_214781F98(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x2166A7620](v9, a1);
      sub_214750C38((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_21477EFE4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_21472C6F4(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_2147AD238();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_2147AD238();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_21477F0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_2147ACD88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_214781F50(&qword_26781DA10, 255, MEMORY[0x263F07508]);
      char v15 = sub_2147ACF28();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_21477F2BC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    unint64_t v8 = a2;
    uint64_t v10 = ~v5;
    unint64_t v80 = HIDWORD(a1);
    size_t v86 = HIDWORD(a1) - (int)a1;
    uint64_t v87 = ~v5;
    BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v85 = v11;
    unint64_t v88 = a2 >> 62;
    uint64_t v83 = v3 + 64;
    uint64_t v84 = (int)a1;
    uint64_t v81 = a1 >> 32;
    uint64_t v79 = (a1 >> 32) - (int)a1;
    unint64_t v89 = a2 >> 62;
    size_t __n = BYTE6(a2);
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v14 = *v12;
      unint64_t v13 = v12[1];
      uint64_t v15 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
          }
          uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_14:
          sub_21472BBA4(v14, v13);
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v14 + 16);
          uint64_t v16 = *(void *)(v14 + 24);
          uint64_t v15 = v16 - v17;
          if (!__OFSUB__(v16, v17)) {
            goto LABEL_14;
          }
          goto LABEL_122;
        case 3uLL:
          break;
        default:
          uint64_t v15 = BYTE6(v13);
          break;
      }
      size_t v18 = __n;
      switch(v89)
      {
        case 1uLL:
          size_t v18 = v86;
          if (v85) {
            goto LABEL_123;
          }
          goto LABEL_19;
        case 2uLL:
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v19 = *(void *)(a1 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          size_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_19;
          }
          goto LABEL_124;
        case 3uLL:
          if (v15) {
            goto LABEL_7;
          }
          goto LABEL_119;
        default:
LABEL_19:
          if (v15 == v18)
          {
            if (v15 < 1)
            {
LABEL_119:
              sub_21472BBFC(v14, v13);
              return v6;
            }
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)v14 > v14 >> 32) {
                  goto LABEL_125;
                }
                uint64_t v26 = sub_2147ACB08();
                if (v26)
                {
                  uint64_t v27 = v26;
                  uint64_t v28 = sub_2147ACB28();
                  if (__OFSUB__((int)v14, v28)) {
                    goto LABEL_127;
                  }
                  uint64_t v29 = (const void *)(v27 + (int)v14 - v28);
                }
                else
                {
                  uint64_t v29 = 0;
                }
                sub_2147ACB18();
                if (!v88)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v29) {
                    goto LABEL_155;
                  }
                  int v46 = memcmp(v29, __s1, __n);
LABEL_102:
                  sub_21472BBFC(v14, v13);
                  uint64_t v10 = v87;
                  if (!v46) {
                    return v6;
                  }
                  break;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_136;
                  }
                  swift_retain();
                  uint64_t v47 = sub_2147ACB08();
                  if (v47)
                  {
                    uint64_t v48 = sub_2147ACB28();
                    if (__OFSUB__(v84, v48)) {
                      goto LABEL_143;
                    }
                    v47 += v84 - v48;
                  }
                  uint64_t v49 = sub_2147ACB18();
                  size_t v50 = v79;
                  if (v49 < v79) {
                    size_t v50 = v49;
                  }
                  if (!v29) {
                    goto LABEL_148;
                  }
                  if (!v47) {
                    goto LABEL_149;
                  }
                  size_t v39 = v50;
                  uint64_t v40 = v29;
                  uint64_t v38 = (const void *)v47;
LABEL_71:
                  int v46 = memcmp(v40, v38, v39);
                  sub_21472BBFC(a1, v8);
                  goto LABEL_102;
                }
                uint64_t v69 = *(void *)(a1 + 16);
                uint64_t v78 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v70 = sub_2147ACB08();
                if (v70)
                {
                  uint64_t v71 = v70;
                  uint64_t v72 = sub_2147ACB28();
                  if (__OFSUB__(v69, v72)) {
                    goto LABEL_142;
                  }
                  uint64_t v73 = (const void *)(v71 + v69 - v72);
                }
                else
                {
                  uint64_t v73 = 0;
                }
                if (__OFSUB__(v78, v69)) {
                  goto LABEL_137;
                }
                uint64_t v74 = sub_2147ACB18();
                if (v74 >= v78 - v69) {
                  size_t v75 = v78 - v69;
                }
                else {
                  size_t v75 = v74;
                }
                if (!v29) {
                  goto LABEL_156;
                }
                uint64_t v4 = v83;
                if (!v73) {
                  goto LABEL_157;
                }
                int v62 = memcmp(v29, v73, v75);
LABEL_115:
                swift_release();
LABEL_116:
                swift_release();
                sub_21472BBFC(v14, v13);
                unint64_t v8 = a2;
                uint64_t v10 = v87;
                if (!v62) {
                  return v6;
                }
                break;
              case 2uLL:
                uint64_t v30 = *(void *)(v14 + 16);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_2147ACB08();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_2147ACB28();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_126;
                  }
                  uint64_t v34 = (const void *)(v32 + v30 - v33);
                }
                else
                {
                  uint64_t v34 = 0;
                }
                sub_2147ACB18();
                uint64_t v4 = v83;
                if (!v88)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LODWORD(__s1[1]) = a2;
                  WORD2(__s1[1]) = WORD2(a2);
                  if (!v34) {
                    goto LABEL_152;
                  }
                  int v62 = memcmp(v34, __s1, __n);
                  swift_release();
                  goto LABEL_116;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_130;
                  }
                  swift_retain();
                  uint64_t v42 = (char *)sub_2147ACB08();
                  if (v42)
                  {
                    uint64_t v43 = sub_2147ACB28();
                    if (__OFSUB__(v84, v43)) {
                      goto LABEL_141;
                    }
                    v42 += v84 - v43;
                  }
                  uint64_t v44 = sub_2147ACB18();
                  size_t v45 = v79;
                  if (v44 < v79) {
                    size_t v45 = v44;
                  }
                  if (!v34) {
                    goto LABEL_146;
                  }
                  if (!v42) {
                    goto LABEL_147;
                  }
                  int v46 = memcmp(v34, v42, v45);
                  unint64_t v8 = a2;
                  sub_21472BBFC(a1, a2);
                  swift_release();
                  swift_release();
                  goto LABEL_102;
                }
                uint64_t v63 = *(void *)(a1 + 16);
                uint64_t v77 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v64 = (char *)sub_2147ACB08();
                if (v64)
                {
                  uint64_t v65 = sub_2147ACB28();
                  if (__OFSUB__(v63, v65)) {
                    goto LABEL_140;
                  }
                  v64 += v63 - v65;
                }
                BOOL v21 = __OFSUB__(v77, v63);
                int64_t v66 = v77 - v63;
                if (v21) {
                  goto LABEL_135;
                }
                uint64_t v67 = sub_2147ACB18();
                if (v67 >= v66) {
                  size_t v68 = v66;
                }
                else {
                  size_t v68 = v67;
                }
                if (!v34) {
                  goto LABEL_153;
                }
                uint64_t v4 = v83;
                if (!v64) {
                  goto LABEL_154;
                }
                int v62 = memcmp(v34, v64, v68);
                swift_release();
                swift_release();
                goto LABEL_115;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v88) {
                  goto LABEL_45;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_129;
                  }
                  sub_21472BBA4(a1, v8);
                  uint64_t v35 = sub_2147ACB08();
                  if (!v35) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v35;
                  uint64_t v36 = sub_2147ACB28();
                  uint64_t v25 = v84 - v36;
                  if (__OFSUB__(v84, v36)) {
                    goto LABEL_134;
                  }
LABEL_41:
                  uint64_t v37 = sub_2147ACB18();
                  uint64_t v38 = (const void *)(v23 + v25);
                  if (v37 >= v79) {
                    size_t v39 = v79;
                  }
                  else {
                    size_t v39 = v37;
                  }
                  uint64_t v40 = __s1;
                  goto LABEL_71;
                }
                uint64_t v57 = *(void *)(a1 + 16);
                uint64_t v58 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                os_log_t v53 = (char *)sub_2147ACB08();
                if (v53)
                {
                  uint64_t v59 = sub_2147ACB28();
                  if (__OFSUB__(v57, v59)) {
                    goto LABEL_139;
                  }
                  v53 += v57 - v59;
                }
                BOOL v21 = __OFSUB__(v58, v57);
                int64_t v55 = v58 - v57;
                if (v21) {
                  goto LABEL_132;
                }
                uint64_t v56 = sub_2147ACB18();
                if (!v53) {
                  goto LABEL_151;
                }
LABEL_83:
                if (v56 >= v55) {
                  size_t v60 = v55;
                }
                else {
                  size_t v60 = v56;
                }
                int v61 = memcmp(__s1, v53, v60);
                swift_release();
                swift_release();
                sub_21472BBFC(v14, v13);
                uint64_t v4 = v83;
                uint64_t v10 = v87;
                if (!v61) {
                  return v6;
                }
                break;
              default:
                __s1[0] = v14;
                LOWORD(__s1[1]) = v13;
                BYTE2(__s1[1]) = BYTE2(v13);
                BYTE3(__s1[1]) = BYTE3(v13);
                BYTE4(__s1[1]) = BYTE4(v13);
                BYTE5(__s1[1]) = BYTE5(v13);
                if (!v88)
                {
LABEL_45:
                  __int16 __s2 = a1;
                  char v92 = BYTE2(a1);
                  char v93 = BYTE3(a1);
                  char v94 = v80;
                  char v95 = BYTE5(a1);
                  char v96 = BYTE6(a1);
                  char v97 = HIBYTE(a1);
                  __int16 v98 = v8;
                  char v99 = BYTE2(v8);
                  char v100 = BYTE3(v8);
                  char v101 = BYTE4(v8);
                  char v102 = BYTE5(v8);
                  int v41 = memcmp(__s1, &__s2, __n);
                  sub_21472BBFC(v14, v13);
                  if (!v41) {
                    return v6;
                  }
                  break;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_128;
                  }
                  sub_21472BBA4(a1, v8);
                  uint64_t v22 = sub_2147ACB08();
                  if (!v22)
                  {
                    sub_2147ACB18();
                    __break(1u);
LABEL_145:
                    sub_2147ACB18();
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
                    JUMPOUT(0x21477FC28);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = sub_2147ACB28();
                  uint64_t v25 = v84 - v24;
                  if (__OFSUB__(v84, v24)) {
                    goto LABEL_133;
                  }
                  goto LABEL_41;
                }
                uint64_t v51 = *(void *)(a1 + 16);
                uint64_t v52 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                os_log_t v53 = (char *)sub_2147ACB08();
                if (v53)
                {
                  uint64_t v54 = sub_2147ACB28();
                  if (__OFSUB__(v51, v54)) {
                    goto LABEL_138;
                  }
                  v53 += v51 - v54;
                }
                BOOL v21 = __OFSUB__(v52, v51);
                int64_t v55 = v52 - v51;
                if (v21) {
                  goto LABEL_131;
                }
                uint64_t v56 = sub_2147ACB18();
                if (!v53) {
                  goto LABEL_150;
                }
                goto LABEL_83;
            }
          }
          else
          {
LABEL_7:
            sub_21472BBFC(v14, v13);
          }
          unint64_t v6 = (v6 + 1) & v10;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

uint64_t sub_21477FC58(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DA18);
  uint64_t result = sub_2147AD4C8();
  int64_t v3 = 0;
  uint64_t v38 = (void *)result;
  uint64_t v39 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  uint64_t v35 = v5;
  int64_t v36 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v37 = result + 64;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v40 = (v9 - 1) & v9;
  int64_t v41 = v3;
  for (unint64_t i = __clz(__rbit64(v9)) | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    uint64_t v15 = *(void *)(v39 + 56);
    uint64_t v16 = (uint64_t *)(*(void *)(v39 + 48) + 16 * i);
    uint64_t v43 = *v16;
    uint64_t v42 = v16[1];
    uint64_t v47 = 8 * i;
    uint64_t v17 = *(char **)(v15 + 8 * i);
    size_t v18 = *(void **)&v17[OBJC_IVAR____TtC9SEService17SERCredentialInfo_containerSize];
    uint64_t v19 = (objc_class *)type metadata accessor for MemoryUsage();
    uint64_t v20 = (char *)objc_allocWithZone(v19);
    *(void *)&v20[OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap] = 0;
    *(void *)&v20[OBJC_IVAR____TtC9SEService11MemoryUsage_cor] = 0;
    *(void *)&v20[OBJC_IVAR____TtC9SEService11MemoryUsage_cod] = 0;
    *(void *)&v20[OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices] = 0;
    v46.receiver = v20;
    v46.super_class = v19;
    swift_bridgeObjectRetain();
    BOOL v21 = v17;
    id v22 = v18;
    id v23 = objc_msgSendSuper2(&v46, sel_init);
    uint64_t v24 = *(void **)&v21[OBJC_IVAR____TtC9SEService17SERCredentialInfo_requiredMemoryForCredential];
    uint64_t v25 = (char *)objc_allocWithZone(v19);
    *(void *)&v25[OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap] = 0;
    *(void *)&v25[OBJC_IVAR____TtC9SEService11MemoryUsage_cor] = 0;
    *(void *)&v25[OBJC_IVAR____TtC9SEService11MemoryUsage_cod] = 0;
    *(void *)&v25[OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices] = 0;
    v45.receiver = v25;
    v45.super_class = v19;
    id v26 = v24;
    id v27 = objc_msgSendSuper2(&v45, sel_init);
    uint64_t v28 = (objc_class *)type metadata accessor for AppletMemoryInfo();
    uint64_t v29 = (char *)objc_allocWithZone(v28);
    *(void *)&v29[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_pids] = MEMORY[0x263F8EE78];
    *(void *)&v29[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_packageMemory] = v22;
    *(void *)&v29[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_containerMemory] = v23;
    *(void *)&v29[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_selectableMemory] = v26;
    *(void *)&v29[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_personalizedMemory] = v27;
    *(void *)&v29[OBJC_IVAR____TtC9SEService16AppletMemoryInfo_policy] = 0;
    v44.receiver = v29;
    v44.super_class = v28;
    id v30 = objc_msgSendSuper2(&v44, sel_init);

    uint64_t result = (uint64_t)v38;
    *(void *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v31 = (void *)(v38[6] + 16 * i);
    *uint64_t v31 = v43;
    v31[1] = v42;
    *(void *)(v38[7] + v47) = v30;
    uint64_t v32 = v38[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v38[2] = v34;
    unint64_t v9 = v40;
    int64_t v3 = v41;
    if (v40) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v11 >= v36) {
      return result;
    }
    unint64_t v12 = *(void *)(v35 + 8 * v11);
    int64_t v13 = v3 + 1;
    if (!v12)
    {
      int64_t v13 = v3 + 2;
      if (v3 + 2 >= v36) {
        return result;
      }
      unint64_t v12 = *(void *)(v35 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v3 + 3;
        if (v3 + 3 >= v36) {
          return result;
        }
        unint64_t v12 = *(void *)(v35 + 8 * v13);
        if (!v12) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v40 = (v12 - 1) & v12;
    int64_t v41 = v13;
  }
  uint64_t v14 = v3 + 4;
  if (v3 + 4 >= v36) {
    return result;
  }
  unint64_t v12 = *(void *)(v35 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v3 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v36) {
      return result;
    }
    unint64_t v12 = *(void *)(v35 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21477FFC8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, void *))
{
  uint64_t v25 = a2;
  uint64_t v21 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (v5)
  {
    unint64_t v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    uint64_t v13 = *(void *)(a1 + 56) + 32 * v9;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    uint64_t v16 = *(void *)(v13 + 16);
    LOBYTE(v13) = *(unsigned char *)(v13 + 24);
    v23[0] = v14;
    v23[1] = v15;
    v23[2] = v16;
    char v24 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v17 = v25(v11, v12, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17)
    {
      swift_release();
      return 1;
    }
  }
  int64_t v18 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v18 >= v22) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v18);
  ++v7;
  if (v19) {
    goto LABEL_21;
  }
  int64_t v7 = v18 + 1;
  if (v18 + 1 >= v22) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v7);
  if (v19) {
    goto LABEL_21;
  }
  int64_t v7 = v18 + 2;
  if (v18 + 2 >= v22) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v7);
  if (v19) {
    goto LABEL_21;
  }
  int64_t v7 = v18 + 3;
  if (v18 + 3 >= v22) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v7);
  if (v19) {
    goto LABEL_21;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v22)
  {
LABEL_23:
    swift_release();
    return 0;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v20);
  int64_t v7 = v20;
  if (v19)
  {
LABEL_21:
    unint64_t v5 = (v19 - 1) & v19;
    unint64_t v9 = __clz(__rbit64(v19)) + (v7 << 6);
    goto LABEL_5;
  }
  while (1)
  {
    int64_t v7 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v7 >= v22) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v21 + 8 * v7);
    ++v20;
    if (v19) {
      goto LABEL_21;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_214780208()
{
  unint64_t result = qword_26781D838;
  if (!qword_26781D838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D838);
  }
  return result;
}

unint64_t sub_21478025C()
{
  unint64_t result = qword_26781D850;
  if (!qword_26781D850)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D858);
    sub_214781F50(&qword_26781D860, v1, (void (*)(uint64_t))type metadata accessor for AppletMemoryInfo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D850);
  }
  return result;
}

uint64_t type metadata accessor for AppletMemoryInfo()
{
  return self;
}

uint64_t sub_21478032C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D840);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2147803A8()
{
  unint64_t result = qword_26781D878;
  if (!qword_26781D878)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D858);
    sub_214781F50(&qword_26781D880, v1, (void (*)(uint64_t))type metadata accessor for AppletMemoryInfo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D878);
  }
  return result;
}

unint64_t sub_214780454()
{
  unint64_t result = qword_26781D890;
  if (!qword_26781D890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D890);
  }
  return result;
}

uint64_t sub_2147804A8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D898);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_214780524()
{
  unint64_t result = qword_26781D8A8;
  if (!qword_26781D8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D8A8);
  }
  return result;
}

unint64_t sub_214780578()
{
  unint64_t result = qword_26781D8C0;
  if (!qword_26781D8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D8C0);
  }
  return result;
}

unint64_t sub_2147805CC()
{
  unint64_t result = qword_26781D8D0;
  if (!qword_26781D8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D8D0);
  }
  return result;
}

uint64_t sub_214780620(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781D4E8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MemoryUsage()
{
  return self;
}

unint64_t sub_2147806A8()
{
  unint64_t result = qword_26781D938;
  if (!qword_26781D938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D938);
  }
  return result;
}

unint64_t sub_2147806FC()
{
  unint64_t result = qword_26781D948;
  if (!qword_26781D948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D948);
  }
  return result;
}

unint64_t sub_214780750()
{
  unint64_t result = qword_26781D960;
  if (!qword_26781D960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D960);
  }
  return result;
}

uint64_t sub_2147807A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000002147C0E90)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_2147AD668();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_21478082C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972616D697270 && a2 == 0xE700000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E6961746E6F63 && a2 == 0xE900000000000072 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65636E6174736E69 && a2 == 0xE800000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D65747379537369 && a2 == 0xEE0074656C707041)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_214780A18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1935960432 && a2 == 0xE400000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D6567616B636170 && a2 == 0xED000079726F6D65 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6961746E6F63 && a2 == 0xEF79726F6D654D72 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002147C0CC0 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002147C0CE0 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7963696C6F70 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

id sub_214780CC0(void *a1)
{
  char v3 = v1;
  uint64_t v4 = (void *)sub_2147ACF38();
  id v5 = objc_msgSend(a1, sel_decodeIntegerForKey_, v4);

  *(void *)&v3[OBJC_IVAR____TtC9SEService11MemoryUsage_pHeap] = v5;
  char v6 = (void *)sub_2147ACF38();
  id v7 = objc_msgSend(a1, sel_decodeIntegerForKey_, v6);

  *(void *)&v3[OBJC_IVAR____TtC9SEService11MemoryUsage_cor] = v7;
  unint64_t v8 = (void *)sub_2147ACF38();
  id v9 = objc_msgSend(a1, sel_decodeIntegerForKey_, v8);

  *(void *)&v3[OBJC_IVAR____TtC9SEService11MemoryUsage_cod] = v9;
  uint64_t v10 = (void *)sub_2147ACF38();
  id v11 = objc_msgSend(a1, sel_decodeIntegerForKey_, v10);

  *(void *)&v3[OBJC_IVAR____TtC9SEService11MemoryUsage_usedIndices] = v11;
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for MemoryUsage();
  return objc_msgSendSuper2(&v13, sel_init);
}

unint64_t sub_214780E10()
{
  unint64_t result = qword_26781D970;
  if (!qword_26781D970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D970);
  }
  return result;
}

unint64_t sub_214780E68()
{
  unint64_t result = qword_26781D980;
  if (!qword_26781D980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D980);
  }
  return result;
}

ValueMetadata *type metadata accessor for SERDataSource()
{
  return &type metadata for SERDataSource;
}

ValueMetadata *type metadata accessor for MemoryInfo()
{
  return &type metadata for MemoryInfo;
}

ValueMetadata *type metadata accessor for NameInfo()
{
  return &type metadata for NameInfo;
}

uint64_t initializeWithCopy for MIDContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MIDContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MIDContainer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MIDContainer(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MIDContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MIDContainer()
{
  return &type metadata for MIDContainer;
}

ValueMetadata *type metadata accessor for AppletPolicy()
{
  return &type metadata for AppletPolicy;
}

uint64_t method lookup function for AppletMemoryInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AppletMemoryInfo);
}

uint64_t dispatch thunk of AppletMemoryInfo.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AppletMemoryInfo.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of AppletMemoryInfo.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AppletMemoryInfo.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t method lookup function for MemoryUsage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MemoryUsage);
}

uint64_t dispatch thunk of MemoryUsage.__allocating_init(pHeap:cor:cod:usedIndices:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of MemoryUsage.pHeap.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MemoryUsage.pHeap.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MemoryUsage.pHeap.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MemoryUsage.cor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MemoryUsage.cor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MemoryUsage.cor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MemoryUsage.cod.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MemoryUsage.cod.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MemoryUsage.cod.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of MemoryUsage.usedIndices.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of MemoryUsage.usedIndices.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MemoryUsage.usedIndices.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MemoryUsage.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of MemoryUsage.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of MemoryUsage.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MemoryUsage.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

ValueMetadata *type metadata accessor for MemoryUsage.CodingKeys()
{
  return &type metadata for MemoryUsage.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AppletMemoryInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214781608);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppletMemoryInfo.CodingKeys()
{
  return &type metadata for AppletMemoryInfo.CodingKeys;
}

unsigned char *_s9SEService11MemoryUsageC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21478170CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MIDContainer.CodingKeys()
{
  return &type metadata for MIDContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for NameInfo.CodingKeys()
{
  return &type metadata for NameInfo.CodingKeys;
}

unsigned char *_s9SEService8NameInfoV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2147817F4);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MemoryInfo.CodingKeys()
{
  return &type metadata for MemoryInfo.CodingKeys;
}

unint64_t sub_214781830()
{
  unint64_t result = qword_26781D988;
  if (!qword_26781D988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D988);
  }
  return result;
}

unint64_t sub_214781888()
{
  unint64_t result = qword_26781D990;
  if (!qword_26781D990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D990);
  }
  return result;
}

unint64_t sub_2147818E0()
{
  unint64_t result = qword_26781D998;
  if (!qword_26781D998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D998);
  }
  return result;
}

unint64_t sub_214781938()
{
  unint64_t result = qword_26781D9A0;
  if (!qword_26781D9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9A0);
  }
  return result;
}

unint64_t sub_214781990()
{
  unint64_t result = qword_26781D9A8;
  if (!qword_26781D9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9A8);
  }
  return result;
}

unint64_t sub_2147819E8()
{
  unint64_t result = qword_26781D9B0;
  if (!qword_26781D9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9B0);
  }
  return result;
}

unint64_t sub_214781A40()
{
  unint64_t result = qword_26781D9B8;
  if (!qword_26781D9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9B8);
  }
  return result;
}

unint64_t sub_214781A98()
{
  unint64_t result = qword_26781D9C0;
  if (!qword_26781D9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9C0);
  }
  return result;
}

unint64_t sub_214781AF0()
{
  unint64_t result = qword_26781D9C8;
  if (!qword_26781D9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9C8);
  }
  return result;
}

unint64_t sub_214781B48()
{
  unint64_t result = qword_26781D9D0;
  if (!qword_26781D9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9D0);
  }
  return result;
}

unint64_t sub_214781BA0()
{
  unint64_t result = qword_26781D9D8;
  if (!qword_26781D9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9D8);
  }
  return result;
}

unint64_t sub_214781BF8()
{
  unint64_t result = qword_26781D9E0;
  if (!qword_26781D9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9E0);
  }
  return result;
}

unint64_t sub_214781C50()
{
  unint64_t result = qword_26781D9E8;
  if (!qword_26781D9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9E8);
  }
  return result;
}

unint64_t sub_214781CA8()
{
  unint64_t result = qword_26781D9F0;
  if (!qword_26781D9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9F0);
  }
  return result;
}

unint64_t sub_214781D00()
{
  unint64_t result = qword_26781D9F8;
  if (!qword_26781D9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781D9F8);
  }
  return result;
}

uint64_t sub_214781D54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7061654870 && a2 == 0xE500000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7499619 && a2 == 0xE300000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6582115 && a2 == 0xE300000000000000 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69646E4964657375 && a2 == 0xEB00000000736563)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_214781EFC()
{
  unint64_t result = qword_26781DA00;
  if (!qword_26781DA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DA00);
  }
  return result;
}

uint64_t sub_214781F50(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214781F98(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t static SEStorageManagementSheet.supports(configuration:)()
{
  return 0;
}

uint64_t SEStorageManagementSheet.init(snapshot:provisioning:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t SEStorageManagementSheet.present(overSceneWithIdentifier:)()
{
  return sub_214782044(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_214782044(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t SEStorageManagementSheet.dismiss()()
{
  return sub_214782090(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_214782090(uint64_t (*a1)(void))
{
  return a1();
}

BOOL static SEStorageManagementSheet.ProvisioningDeviceConfiguration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SEStorageManagementSheet.ProvisioningDeviceConfiguration.hash(into:)()
{
  return sub_2147AD738();
}

uint64_t SEStorageManagementSheet.ProvisioningDeviceConfiguration.hashValue.getter()
{
  return sub_2147AD748();
}

uint64_t static SEStorageManagementSheet.ErrorCode.== infix(_:_:)()
{
  return 1;
}

uint64_t SEStorageManagementSheet.ErrorCode.hash(into:)()
{
  return sub_2147AD738();
}

uint64_t SEStorageManagementSheet.ErrorCode.hashValue.getter()
{
  return sub_2147AD748();
}

unint64_t sub_2147821A0()
{
  unint64_t result = qword_26781DA30;
  if (!qword_26781DA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DA30);
  }
  return result;
}

unint64_t sub_2147821F8()
{
  unint64_t result = qword_26781DA38;
  if (!qword_26781DA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DA38);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SEStorageManagementSheet(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SEStorageManagementSheet(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for SEStorageManagementSheet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for SEStorageManagementSheet(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SEStorageManagementSheet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SEStorageManagementSheet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SEStorageManagementSheet()
{
  return &type metadata for SEStorageManagementSheet;
}

unsigned char *storeEnumTagSinglePayload for SEStorageManagementSheet.ProvisioningDeviceConfiguration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2147824BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SEStorageManagementSheet.ProvisioningDeviceConfiguration()
{
  return &type metadata for SEStorageManagementSheet.ProvisioningDeviceConfiguration;
}

unsigned char *storeEnumTagSinglePayload for SEStorageManagementSheet.ErrorCode(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x214782590);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SEStorageManagementSheet.ErrorCode()
{
  return &type metadata for SEStorageManagementSheet.ErrorCode;
}

uint64_t sub_2147825CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21478261C(a1, a2, a3, a4, &qword_26781DB80, (uint64_t)&unk_26C562700, (uint64_t)&unk_26781DB90);
}

uint64_t sub_2147825F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21478261C(a1, a2, a3, a4, &qword_26781DB98, (uint64_t)&unk_26C562750, (uint64_t)&unk_26781DBA8);
}

uint64_t sub_21478261C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a3;
  uint64_t v23 = a7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D2A8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2147AD0F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  uint64_t v17 = sub_21478CBDC((unint64_t *)&qword_26781D638, (void (*)(uint64_t))type metadata accessor for SERClient);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a2;
  *((void *)v19 + 3) = v17;
  *((void *)v19 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v19[v18], (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  int64_t v20 = &v19[(v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)int64_t v20 = v22;
  *((void *)v20 + 1) = a4;
  swift_retain_n();
  swift_retain();
  sub_2147857A4((uint64_t)v15, v23, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_214782850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21478261C(a1, a2, a3, a4, &qword_26781DBB0, (uint64_t)&unk_26C5627A0, (uint64_t)&unk_26781DBC0);
}

uint64_t sub_214782878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21478261C(a1, a2, a3, a4, &qword_26781DB68, (uint64_t)&unk_26C5626B0, (uint64_t)&unk_26781DB78);
}

uint64_t sub_2147828A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21478261C(a1, a2, a3, a4, &qword_26781DB50, (uint64_t)&unk_26C562660, (uint64_t)&unk_26781DB60);
}

uint64_t sub_2147828C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return MEMORY[0x270FA2498](sub_2147828EC, a4, 0);
}

uint64_t sub_2147828EC()
{
  id v1 = sub_214750F1C();
  v0[23] = v1;
  v0[6] = sub_214750D28;
  v0[7] = 0;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_214778B30;
  v0[5] = &block_descriptor_100;
  uint64_t v2 = _Block_copy(v0 + 2);
  id v3 = objc_msgSend(v1, sel_synchronousRemoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);
  sub_2147AD288();
  swift_unknownObjectRelease();
  sub_21472B428((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAE8);
  if (swift_dynamicCast())
  {
    unsigned int v4 = (int *)v0[21];
    uint64_t v5 = v0[16];
    v0[24] = v5;
    uint64_t v14 = (int *)((char *)v4 + *v4);
    unsigned int v6 = (void *)swift_task_alloc();
    v0[25] = v6;
    void *v6 = v0;
    v6[1] = sub_214782BF4;
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 18, v5);
  }
  else
  {
    unint64_t v8 = (void *)sub_2147ACF38();
    __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
    id v9 = &unk_26C5771C8;
    uint64_t v10 = (void *)sub_2147AD658();
    SESPrivateLogSERProtocolDetails(v8, v9, v10);
    swift_unknownObjectRelease();

    sub_214729BF0();
    uint64_t v11 = swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_2147B9050;
    *(unsigned char *)(v12 + 16) = 4;
    v0[17] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB80);
    sub_2147AD0C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_214782BF4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  if (v0) {
    unsigned int v4 = sub_21478D8A8;
  }
  else {
    unsigned int v4 = sub_214782D20;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214782D20()
{
  id v1 = *(void **)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB80);
  sub_2147AD0D8();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214782DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[20] = a6;
  v7[21] = a7;
  v7[18] = a4;
  v7[19] = a5;
  sub_2147ACD88();
  v7[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214782E60, a4, 0);
}

uint64_t sub_214782E60()
{
  id v1 = sub_214750F1C();
  v0[23] = v1;
  v0[6] = sub_214750D28;
  v0[7] = 0;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_214778B30;
  v0[5] = &block_descriptor_109;
  uint64_t v2 = _Block_copy(v0 + 2);
  id v3 = objc_msgSend(v1, sel_synchronousRemoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);
  sub_2147AD288();
  swift_unknownObjectRelease();
  sub_21472B428((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAE8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (int *)v0[20];
    uint64_t v5 = v0[16];
    v0[24] = v5;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[25] = v6;
    void *v6 = v0;
    v6[1] = sub_214783168;
    uint64_t v7 = v0[22];
    return v15(v7, v5);
  }
  else
  {
    id v9 = (void *)sub_2147ACF38();
    __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
    uint64_t v10 = &unk_26C5771C8;
    uint64_t v11 = (void *)sub_2147AD658();
    SESPrivateLogSERProtocolDetails(v9, v10, v11);
    swift_unknownObjectRelease();

    sub_214729BF0();
    uint64_t v12 = swift_allocError();
    *(_OWORD *)uint64_t v13 = xmmword_2147B9050;
    *(unsigned char *)(v13 + 16) = 4;
    v0[17] = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB98);
    sub_2147AD0C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_214783168()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v4 = sub_214783344;
  }
  else {
    uint64_t v4 = sub_214783294;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214783294()
{
  id v1 = *(void **)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB98);
  sub_2147AD0D8();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214783344()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2147833D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return MEMORY[0x270FA2498](sub_2147833F4, a4, 0);
}

uint64_t sub_2147833F4()
{
  id v1 = sub_214750F1C();
  v0[23] = v1;
  v0[6] = sub_214750D28;
  v0[7] = 0;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_214778B30;
  v0[5] = &block_descriptor_118;
  uint64_t v2 = _Block_copy(v0 + 2);
  id v3 = objc_msgSend(v1, sel_synchronousRemoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);
  sub_2147AD288();
  swift_unknownObjectRelease();
  sub_21472B428((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAE8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (int *)v0[21];
    uint64_t v5 = v0[16];
    v0[24] = v5;
    uint64_t v14 = (int *)((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[25] = v6;
    void *v6 = v0;
    v6[1] = sub_2147836FC;
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 18, v5);
  }
  else
  {
    unint64_t v8 = (void *)sub_2147ACF38();
    __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
    id v9 = &unk_26C5771C8;
    uint64_t v10 = (void *)sub_2147AD658();
    SESPrivateLogSERProtocolDetails(v8, v9, v10);
    swift_unknownObjectRelease();

    sub_214729BF0();
    uint64_t v11 = swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_2147B9050;
    *(unsigned char *)(v12 + 16) = 4;
    v0[17] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DBB0);
    sub_2147AD0C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_2147836FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v4 = sub_21478D8A8;
  }
  else {
    uint64_t v4 = sub_214783828;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214783828()
{
  id v1 = *(void **)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DBB0);
  sub_2147AD0D8();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2147838D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return MEMORY[0x270FA2498](sub_2147838F4, a4, 0);
}

uint64_t sub_2147838F4()
{
  id v1 = sub_214750F1C();
  v0[23] = v1;
  v0[6] = sub_214750D28;
  v0[7] = 0;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_214778B30;
  v0[5] = &block_descriptor_91;
  uint64_t v2 = _Block_copy(v0 + 2);
  id v3 = objc_msgSend(v1, sel_synchronousRemoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);
  sub_2147AD288();
  swift_unknownObjectRelease();
  sub_21472B428((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAE8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (int *)v0[21];
    uint64_t v5 = v0[16];
    v0[24] = v5;
    uint64_t v14 = (int *)((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[25] = v6;
    void *v6 = v0;
    v6[1] = sub_214783BFC;
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 18, v5);
  }
  else
  {
    unint64_t v8 = (void *)sub_2147ACF38();
    __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
    id v9 = &unk_26C5771C8;
    uint64_t v10 = (void *)sub_2147AD658();
    SESPrivateLogSERProtocolDetails(v8, v9, v10);
    swift_unknownObjectRelease();

    sub_214729BF0();
    uint64_t v11 = swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_2147B9050;
    *(unsigned char *)(v12 + 16) = 4;
    v0[17] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB68);
    sub_2147AD0C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_214783BFC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v4 = sub_21478D8A8;
  }
  else {
    uint64_t v4 = sub_214783D28;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214783D28()
{
  id v1 = *(void **)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB68);
  sub_2147AD0D8();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214783DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return MEMORY[0x270FA2498](sub_214783DF4, a4, 0);
}

uint64_t sub_214783DF4()
{
  id v1 = sub_214750F1C();
  v0[23] = v1;
  v0[6] = sub_214750D28;
  v0[7] = 0;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_214778B30;
  v0[5] = &block_descriptor_82;
  uint64_t v2 = _Block_copy(v0 + 2);
  id v3 = objc_msgSend(v1, sel_synchronousRemoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);
  sub_2147AD288();
  swift_unknownObjectRelease();
  sub_21472B428((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAE8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (int *)v0[21];
    uint64_t v5 = v0[16];
    v0[24] = v5;
    uint64_t v14 = (int *)((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[25] = v6;
    void *v6 = v0;
    v6[1] = sub_2147840FC;
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 18, v5);
  }
  else
  {
    unint64_t v8 = (void *)sub_2147ACF38();
    __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
    id v9 = &unk_26C5771C8;
    uint64_t v10 = (void *)sub_2147AD658();
    SESPrivateLogSERProtocolDetails(v8, v9, v10);
    swift_unknownObjectRelease();

    sub_214729BF0();
    uint64_t v11 = swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_2147B9050;
    *(unsigned char *)(v12 + 16) = 4;
    v0[17] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB50);
    sub_2147AD0C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_2147840FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v4 = sub_21478D8A8;
  }
  else {
    uint64_t v4 = sub_214784228;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214784228()
{
  id v1 = *(void **)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB50);
  sub_2147AD0D8();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2147842D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return MEMORY[0x270FA2498](sub_2147842F4, a4, 0);
}

uint64_t sub_2147842F4()
{
  id v1 = sub_214750F1C();
  v0[23] = v1;
  v0[6] = sub_214750D28;
  v0[7] = 0;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_214778B30;
  v0[5] = &block_descriptor_71;
  uint64_t v2 = _Block_copy(v0 + 2);
  id v3 = objc_msgSend(v1, sel_synchronousRemoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);
  sub_2147AD288();
  swift_unknownObjectRelease();
  sub_21472B428((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAE8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (int *)v0[21];
    uint64_t v5 = v0[16];
    v0[24] = v5;
    uint64_t v14 = (int *)((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[25] = v6;
    void *v6 = v0;
    v6[1] = sub_2147845FC;
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 18, v5);
  }
  else
  {
    unint64_t v8 = (void *)sub_2147ACF38();
    __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
    id v9 = &unk_26C5771C8;
    uint64_t v10 = (void *)sub_2147AD658();
    SESPrivateLogSERProtocolDetails(v8, v9, v10);
    swift_unknownObjectRelease();

    sub_214729BF0();
    uint64_t v11 = swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_2147B9050;
    *(unsigned char *)(v12 + 16) = 4;
    v0[17] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB38);
    sub_2147AD0C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_2147845FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v4 = sub_21478D8A8;
  }
  else {
    uint64_t v4 = sub_214784728;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214784728()
{
  id v1 = *(void **)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB38);
  sub_2147AD0D8();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2147847D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return MEMORY[0x270FA2498](sub_2147847F4, a4, 0);
}

uint64_t sub_2147847F4()
{
  id v1 = sub_214750F1C();
  v0[23] = v1;
  v0[6] = sub_214750D28;
  v0[7] = 0;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_214778B30;
  v0[5] = &block_descriptor_58_0;
  uint64_t v2 = _Block_copy(v0 + 2);
  id v3 = objc_msgSend(v1, sel_synchronousRemoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);
  sub_2147AD288();
  swift_unknownObjectRelease();
  sub_21472B428((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAE8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (int *)v0[21];
    uint64_t v5 = v0[16];
    v0[24] = v5;
    uint64_t v14 = (int *)((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[25] = v6;
    void *v6 = v0;
    v6[1] = sub_214784AFC;
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 18, v5);
  }
  else
  {
    unint64_t v8 = (void *)sub_2147ACF38();
    __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
    id v9 = &unk_26C5771C8;
    uint64_t v10 = (void *)sub_2147AD658();
    SESPrivateLogSERProtocolDetails(v8, v9, v10);
    swift_unknownObjectRelease();

    sub_214729BF0();
    uint64_t v11 = swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_2147B9050;
    *(unsigned char *)(v12 + 16) = 4;
    v0[17] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB20);
    sub_2147AD0C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_214784AFC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v4 = sub_214784CD0;
  }
  else {
    uint64_t v4 = sub_214784C28;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214784C28()
{
  id v1 = *(void **)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB20);
  sub_2147AD0D8();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214784CD0()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214784D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[20] = a6;
  v7[21] = a7;
  v7[18] = a4;
  v7[19] = a5;
  return MEMORY[0x270FA2498](sub_214784D6C, a4, 0);
}

uint64_t sub_214784D6C()
{
  id v1 = sub_214750F1C();
  v0[22] = v1;
  v0[6] = sub_214750D28;
  v0[7] = 0;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_214778B30;
  v0[5] = &block_descriptor_41;
  uint64_t v2 = _Block_copy(v0 + 2);
  id v3 = objc_msgSend(v1, sel_synchronousRemoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);
  sub_2147AD288();
  swift_unknownObjectRelease();
  sub_21472B428((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAE8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (int *)v0[20];
    v0[23] = v0[16];
    uint64_t v13 = (uint64_t (*)(void))((char *)v4 + *v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[24] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_214785068;
    return v13();
  }
  else
  {
    uint64_t v7 = (void *)sub_2147ACF38();
    __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
    unint64_t v8 = &unk_26C5771C8;
    id v9 = (void *)sub_2147AD658();
    SESPrivateLogSERProtocolDetails(v7, v8, v9);
    swift_unknownObjectRelease();

    sub_214729BF0();
    uint64_t v10 = swift_allocError();
    *(_OWORD *)uint64_t v11 = xmmword_2147B9050;
    *(unsigned char *)(v11 + 16) = 4;
    v0[17] = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAF0);
    sub_2147AD0C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_214785068()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v4 = sub_21478522C;
  }
  else {
    uint64_t v4 = sub_214785194;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214785194()
{
  id v1 = *(void **)(v0 + 176);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAF0);
  sub_2147AD0D8();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_21478522C()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2147852A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return MEMORY[0x270FA2498](sub_2147852C8, a4, 0);
}

uint64_t sub_2147852C8()
{
  id v1 = sub_214750F1C();
  v0[23] = v1;
  v0[6] = sub_214750D28;
  v0[7] = 0;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_214778B30;
  v0[5] = &block_descriptor_30;
  uint64_t v2 = _Block_copy(v0 + 2);
  id v3 = objc_msgSend(v1, sel_synchronousRemoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);
  sub_2147AD288();
  swift_unknownObjectRelease();
  sub_21472B428((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAE8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (int *)v0[21];
    uint64_t v5 = v0[16];
    v0[24] = v5;
    uint64_t v14 = (int *)((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[25] = v6;
    void *v6 = v0;
    v6[1] = sub_2147855D0;
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 18, v5);
  }
  else
  {
    unint64_t v8 = (void *)sub_2147ACF38();
    __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
    id v9 = &unk_26C5771C8;
    uint64_t v10 = (void *)sub_2147AD658();
    SESPrivateLogSERProtocolDetails(v8, v9, v10);
    swift_unknownObjectRelease();

    sub_214729BF0();
    uint64_t v11 = swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_2147B9050;
    *(unsigned char *)(v12 + 16) = 4;
    v0[17] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAD0);
    sub_2147AD0C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_2147855D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v4 = sub_21478D8A8;
  }
  else {
    uint64_t v4 = sub_2147856FC;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2147856FC()
{
  id v1 = *(void **)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAD0);
  sub_2147AD0D8();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2147857A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2147AD0F8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2147AD0E8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_214751E80(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2147AD0B8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t SESnapshot.addReservation(type:metadata:removeFromStaged:)(_OWORD *a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v4 + 105) = a3;
  *(void *)(v4 + 184) = a2;
  *(void *)(v4 + 192) = v3;
  uint64_t v6 = sub_2147ACD88();
  *(void *)(v4 + 200) = v6;
  *(void *)(v4 + 208) = *(void *)(v6 - 8);
  *(void *)(v4 + 216) = swift_task_alloc();
  uint64_t v7 = sub_2147ACE18();
  *(void *)(v4 + 224) = v7;
  *(void *)(v4 + 232) = *(void *)(v7 - 8);
  *(void *)(v4 + 240) = swift_task_alloc();
  *(_OWORD *)(v4 + 248) = *a1;
  return MEMORY[0x270FA2498](sub_214785A84, 0, 0);
}

uint64_t sub_214785A84()
{
  uint64_t v74 = v0;
  uint64_t v73 = *MEMORY[0x263EF8340];
  if (qword_26781BFA8 != -1) {
    swift_once();
  }
  id v1 = (id *)(v0 + 184);
  uint64_t v2 = *(void **)(v0 + 184);
  uint64_t v3 = (id *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 248);
  unint64_t v5 = *(void *)(v0 + 256);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 224);
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_26782C6E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  sub_21471ED54(v4, v5);
  id v10 = v2;
  sub_21471ED54(v4, v5);
  id v11 = v10;
  uint64_t v12 = sub_2147ACDF8();
  os_log_type_t v13 = sub_2147AD178();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = *(void *)(v0 + 248);
  unint64_t v16 = *(void *)(v0 + 256);
  if (v14)
  {
    os_log_type_t v67 = v13;
    os_log_type_t log = v12;
    uint64_t v70 = *(void *)(v0 + 184);
    uint64_t v17 = swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    *(void *)&long long v72 = v66;
    *(_DWORD *)uint64_t v17 = 136315906;
    *(void *)(v0 + 144) = sub_2147601CC(0xD00000000000002FLL, 0x80000002147C0EB0, (uint64_t *)&v72);
    sub_2147AD248();
    *(_WORD *)(v17 + 12) = 2080;
    *(void *)(v0 + 112) = v15;
    *(void *)(v0 + 120) = v16;
    sub_21471ED54(v15, v16);
    uint64_t v18 = sub_2147ACF78();
    *(void *)(v0 + 160) = sub_2147601CC(v18, v19, (uint64_t *)&v72);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    sub_2147201A0(v15, v16);
    sub_2147201A0(v15, v16);
    *(_WORD *)(v17 + 22) = 2080;
    int64_t v20 = self;
    *(void *)(v0 + 168) = 0;
    id v21 = objc_msgSend(v20, sel_dataWithJSONObject_options_error_, v70, 0, v0 + 168);
    uint64_t v22 = *(void **)(v0 + 168);
    if (!v21)
    {

      id v57 = v22;
      sub_2147ACC48();

      swift_willThrow();
      return swift_unexpectedError();
    }
    uint64_t v23 = v21;
    id v24 = v22;
    uint64_t v25 = sub_2147ACCD8();
    unint64_t v27 = v26;

    id v28 = objc_allocWithZone(NSString);
    uint64_t v29 = (void *)sub_2147ACCA8();
    id v30 = objc_msgSend(v28, sel_initWithData_encoding_, v29, 1);
    sub_21472BBFC(v25, v27);

    if (!v30)
    {

      __break(1u);
      return MEMORY[0x270FA2498](v54, v55, v56);
    }
    uint64_t v31 = *(void *)(v0 + 232);
    uint64_t v69 = *(void *)(v0 + 224);
    uint64_t v71 = *(void *)(v0 + 240);
    int v65 = *(unsigned __int8 *)(v0 + 105);
    uint64_t v32 = *(void **)(v0 + 184);
    uint64_t v33 = sub_2147ACF58();
    unint64_t v35 = v34;

    *(void *)(v0 + 176) = sub_2147601CC(v33, v35, (uint64_t *)&v72);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    *(_WORD *)(v17 + 32) = 1024;
    *(_DWORD *)(v0 + 108) = v65;
    sub_2147AD248();
    _os_log_impl(&dword_2146ED000, log, v67, "%s (%s, %s, %{BOOL}d)", (uint8_t *)v17, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v66, -1, -1);
    MEMORY[0x2166A8870](v17, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v71, v69);
    uint64_t v3 = (id *)(v0 + 152);
  }
  else
  {
    uint64_t v36 = *(void *)(v0 + 232);
    uint64_t v37 = *(void *)(v0 + 240);
    uint64_t v38 = *(void *)(v0 + 224);
    uint64_t v39 = *(void **)(v0 + 184);
    sub_2147201A0(*(void *)(v0 + 248), *(void *)(v0 + 256));
    sub_2147201A0(v15, v16);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v38);
  }
  if (*(unsigned char *)(v0 + 105) == 1)
  {
    long long v72 = *(_OWORD *)(v0 + 248);
    SESnapshot.removeFromSnapshot(credential:)((uint64_t *)&v72);
  }
  uint64_t v41 = *(void *)(v0 + 248);
  unint64_t v40 = *(void *)(v0 + 256);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DA48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2147B7590;
  *(void *)(inited + 32) = v41;
  *(void *)(inited + 40) = v40;
  sub_21471ED54(v41, v40);
  SESnapshot.canFitWithReason(credentials:)(inited, &v72);
  swift_setDeallocating();
  swift_arrayDestroy();
  if (BYTE1(v72))
  {
    id v43 = *v1;
    objc_super v44 = self;
    *uint64_t v3 = 0;
    id v45 = objc_msgSend(v44, sel_dataWithPropertyList_format_options_error_, v43, 200, 0, v3);
    id v46 = *v3;
    if (v45)
    {
      uint64_t v47 = sub_2147ACCD8();
      unint64_t v49 = v48;

      *(void *)(v0 + 264) = v47;
      *(void *)(v0 + 272) = v49;
      if (qword_26781BF90 != -1) {
        swift_once();
      }
      uint64_t v51 = *(void *)(v0 + 248);
      unint64_t v50 = *(void *)(v0 + 256);
      uint64_t v52 = qword_26782C6D0;
      *(void *)(v0 + 280) = qword_26782C6D0;
      os_log_t v53 = (void *)swift_allocObject();
      *(void *)(v0 + 288) = v53;
      v53[2] = v51;
      v53[3] = v50;
      v53[4] = v47;
      v53[5] = v49;
      sub_21471ED54(v51, v50);
      sub_21472BBA4(v47, v49);
      uint64_t v54 = sub_2147862AC;
      uint64_t v55 = v52;
      uint64_t v56 = 0;
      return MEMORY[0x270FA2498](v54, v55, v56);
    }
    int v61 = v46;
    uint64_t v63 = *(void *)(v0 + 248);
    unint64_t v62 = *(void *)(v0 + 256);
    uint64_t v64 = *(void ***)(v0 + 192);
    sub_2147ACC48();

    swift_willThrow();
    sub_2147868DC(v64, v63, v62);
  }
  else
  {
    sub_214729BF0();
    swift_allocError();
    *(_OWORD *)uint64_t v59 = xmmword_2147B9060;
    *(unsigned char *)(v59 + 16) = 4;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  size_t v60 = *(uint64_t (**)(void))(v0 + 8);
  return v60();
}

uint64_t sub_2147862AC()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[36];
  uint64_t v3 = sub_21478CBDC((unint64_t *)&qword_26781D638, (void (*)(uint64_t))type metadata accessor for SERClient);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  unsigned char v4[2] = v1;
  v4[3] = &unk_26781DA58;
  v4[4] = v2;
  unint64_t v5 = (void *)swift_task_alloc();
  v0[38] = v5;
  uint64_t v6 = type metadata accessor for Reservation();
  *unint64_t v5 = v0;
  v5[1] = sub_214786430;
  return MEMORY[0x270FA2360](v0 + 17, v1, v3, 0x786F725068746977, 0xED0000293A5F2879, sub_21478AE40, v4, v6);
}

uint64_t sub_214786430()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[35];
    uint64_t v4 = sub_2147865B0;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    v2[40] = v2[17];
    uint64_t v4 = sub_21478671C;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2147865B0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214786644, 0, 0);
}

uint64_t sub_214786644()
{
  uint64_t v2 = v0[31];
  unint64_t v1 = v0[32];
  uint64_t v3 = (void **)v0[24];
  sub_21472BBFC(v0[33], v0[34]);
  swift_release();
  sub_2147868DC(v3, v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_21478671C()
{
  unint64_t v1 = (void *)v0[40];
  uint64_t v2 = v0[33];
  unint64_t v14 = v0[34];
  uint64_t v15 = v0[31];
  unint64_t v16 = v0[32];
  uint64_t v4 = (void **)v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC9SEService10SESnapshot_reservationState);
  uint64_t v7 = v0[26];
  uint64_t v6 = v0[27];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC9SEService11Reservation_uuid, v3);
  uint64_t v8 = (uint64_t *)(v5 + OBJC_IVAR____TtC9SEService16ReservationState_reservations);
  swift_beginAccess();
  id v9 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v8;
  uint64_t *v8 = 0x8000000000000000;
  sub_21478B87C((uint64_t)v9, v6, isUniquelyReferenced_nonNull_native);
  uint64_t *v8 = v17;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v3);
  swift_endAccess();
  sub_21472BBFC(v2, v14);
  sub_2147868DC(v4, v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  id v11 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v12 = v0[40];
  return v11(v12);
}

uint64_t sub_2147868DC(void **a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(uint64_t *)((char *)a1 + OBJC_IVAR____TtC9SEService10SESnapshot_reservationState)
     + OBJC_IVAR____TtC9SEService16ReservationState_counts;
  swift_beginAccess();
  sub_21471ED54(a2, a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v9 = *(void **)v7;
  unint64_t v34 = *(void **)v7;
  *(void *)uint64_t v7 = 0x8000000000000000;
  unint64_t v11 = sub_21477EA08(a2, a3);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_20;
  }
  char v3 = v10;
  if (v9[3] >= v14)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_23;
    }
    while (1)
    {
LABEL_6:
      *(void *)uint64_t v7 = v9;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void **)v7;
      if ((v3 & 1) == 0)
      {
        sub_214760BDC(v11, a2, a3, 0, *(void **)v7);
        sub_21471ED54(a2, a3);
      }
      uint64_t v18 = v17[7];
      uint64_t v19 = *(void *)(v18 + 8 * v11);
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        break;
      }
      *(void *)(v18 + 8 * v11) = v21;
      swift_endAccess();
      uint64_t v6 = (void **)((char *)v6 + OBJC_IVAR____TtC9SEService10SESnapshot_globalCredentials);
      swift_beginAccess();
      char v3 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v22 = *v6;
      unint64_t v34 = *v6;
      void *v6 = (void *)0x8000000000000000;
      uint64_t v7 = sub_21477EA08(a2, a3);
      uint64_t v24 = v22[2];
      BOOL v25 = (v23 & 1) == 0;
      uint64_t v26 = v24 + v25;
      if (__OFADD__(v24, v25)) {
        goto LABEL_21;
      }
      unint64_t v11 = v23;
      if (v22[3] >= v26)
      {
        if ((v3 & 1) == 0)
        {
          sub_21479064C();
          uint64_t v22 = v34;
        }
      }
      else
      {
        sub_214791D00(v26, v3);
        uint64_t v22 = v34;
        unint64_t v27 = sub_21477EA08(a2, a3);
        if ((v11 & 1) != (v28 & 1)) {
          goto LABEL_24;
        }
        uint64_t v7 = v27;
      }
      void *v6 = v22;
      swift_bridgeObjectRelease();
      uint64_t v29 = *v6;
      if ((v11 & 1) == 0)
      {
        sub_214760BDC(v7, a2, a3, 0, *v6);
        sub_21471ED54(a2, a3);
      }
      uint64_t v30 = v29[7];
      uint64_t v31 = *(void *)(v30 + 8 * v7);
      BOOL v20 = __OFADD__(v31, 1);
      uint64_t v32 = v31 + 1;
      if (!v20)
      {
        *(void *)(v30 + 8 * v7) = v32;
        swift_endAccess();
        return sub_2147201A0(a2, a3);
      }
LABEL_22:
      __break(1u);
LABEL_23:
      sub_21479064C();
      id v9 = v34;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_214791D00(v14, isUniquelyReferenced_nonNull_native);
  id v9 = v34;
  unint64_t v15 = sub_21477EA08(a2, a3);
  if ((v3 & 1) == (v16 & 1))
  {
    unint64_t v11 = v15;
    goto LABEL_6;
  }
LABEL_24:
  uint64_t result = sub_2147AD6B8();
  __break(1u);
  return result;
}

uint64_t sub_214786B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[20] = a5;
  v6[21] = a6;
  v6[18] = a3;
  v6[19] = a4;
  v6[16] = a1;
  v6[17] = a2;
  return MEMORY[0x270FA2498](sub_214786BB4, 0, 0);
}

uint64_t sub_214786BB4()
{
  unint64_t v1 = *(void **)(v0 + 136);
  long long v6 = *(_OWORD *)(v0 + 144);
  CredentialType.rawValue.getter();
  uint64_t v2 = sub_2147ACF38();
  *(void *)(v0 + 176) = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_2147ACCA8();
  *(void *)(v0 + 184) = v3;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_214786D14;
  uint64_t v4 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_21475AC90;
  *(void *)(v0 + 104) = &block_descriptor_74;
  *(void *)(v0 + 112) = v4;
  objc_msgSend(v1, sel_addReservationWithType_metadata_completionHandler_, v2, v3, v0 + 80, v6);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_214786D14()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    uint64_t v2 = sub_214786E94;
  }
  else {
    uint64_t v2 = sub_214786E24;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214786E24()
{
  uint64_t v2 = *(void **)(v0 + 176);
  uint64_t v1 = *(void **)(v0 + 184);
  **(void **)(v0 + 128) = *(void *)(v0 + 120);

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_214786E94()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[22];
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t SESnapshot.editReservation(uuid:newMetadata:)(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  uint64_t v3 = sub_2147ACD88();
  v2[10] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[11] = v4;
  v2[12] = *(void *)(v4 + 64);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v5 = sub_2147ACE18();
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21478706C, 0, 0);
}

uint64_t sub_21478706C()
{
  uint64_t v71 = v0;
  v70[1] = *MEMORY[0x263EF8340];
  if (qword_26781BFA8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(void **)(v0 + 72);
  uint64_t v9 = __swift_project_value_buffer(v4, (uint64_t)qword_26782C6E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v4);
  uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v69(v5, v1, v6);
  id v10 = v8;
  unint64_t v11 = sub_2147ACDF8();
  os_log_type_t v12 = sub_2147AD178();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t v63 = v12;
    os_log_type_t log = v11;
    uint64_t v13 = *(void *)(v0 + 112);
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v65 = *(void *)(v0 + 80);
    uint64_t v67 = *(void *)(v0 + 72);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    v70[0] = v62;
    *(_DWORD *)uint64_t v15 = 136315650;
    *(void *)(v0 + 32) = sub_2147601CC(0xD000000000000022, 0x80000002147C0F10, v70);
    sub_2147AD248();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v16 = sub_2147ACD18();
    *(void *)(v0 + 40) = sub_2147601CC(v16, v17, v70);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v65);
    *(_WORD *)(v15 + 22) = 2080;
    uint64_t v18 = self;
    *(void *)(v0 + 48) = 0;
    id v19 = objc_msgSend(v18, sel_dataWithJSONObject_options_error_, v67, 0, v0 + 48);
    BOOL v20 = *(void **)(v0 + 48);
    if (!v19)
    {

      id v61 = v20;
      sub_2147ACC48();

      swift_willThrow();
      return swift_unexpectedError();
    }
    uint64_t v21 = v19;
    id v22 = v20;
    uint64_t v23 = sub_2147ACCD8();
    unint64_t v25 = v24;

    id v26 = objc_allocWithZone(NSString);
    unint64_t v27 = (void *)sub_2147ACCA8();
    id v28 = objc_msgSend(v26, sel_initWithData_encoding_, v27, 1);
    sub_21472BBFC(v23, v25);

    if (!v28)
    {

      __break(1u);
      return MEMORY[0x270FA2498](v55, v56, v57);
    }
    uint64_t v29 = *(void *)(v0 + 128);
    uint64_t v66 = *(void *)(v0 + 120);
    uint64_t v68 = *(void *)(v0 + 136);
    uint64_t v30 = *(void **)(v0 + 72);
    uint64_t v31 = sub_2147ACF58();
    unint64_t v33 = v32;

    *(void *)(v0 + 56) = sub_2147601CC(v31, v33, v70);
    sub_2147AD248();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2146ED000, log, v63, "%s (%s, %s)", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v62, -1, -1);
    MEMORY[0x2166A8870](v15, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v68, v66);
  }
  else
  {
    uint64_t v34 = *(void *)(v0 + 128);
    uint64_t v35 = *(void *)(v0 + 136);
    uint64_t v36 = *(void *)(v0 + 120);
    uint64_t v37 = *(void **)(v0 + 72);
    (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 80));

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
  }
  uint64_t v38 = *(void *)(v0 + 72);
  uint64_t v39 = self;
  *(void *)(v0 + 16) = 0;
  id v40 = objc_msgSend(v39, sel_dataWithPropertyList_format_options_error_, v38, 200, 0, v0 + 16);
  id v41 = *(id *)(v0 + 16);
  if (v40)
  {
    uint64_t v42 = sub_2147ACCD8();
    unint64_t v44 = v43;

    *(void *)(v0 + 144) = v42;
    *(void *)(v0 + 152) = v44;
    if (qword_26781BF90 != -1) {
      swift_once();
    }
    uint64_t v46 = *(void *)(v0 + 96);
    uint64_t v45 = *(void *)(v0 + 104);
    uint64_t v47 = *(void *)(v0 + 80);
    uint64_t v48 = *(void *)(v0 + 88);
    uint64_t v49 = *(void *)(v0 + 64);
    uint64_t v50 = qword_26782C6D0;
    *(void *)(v0 + 160) = qword_26782C6D0;
    v69(v45, v49, v47);
    unint64_t v51 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    unint64_t v52 = (v46 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v53 = swift_allocObject();
    *(void *)(v0 + 168) = v53;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 32))(v53 + v51, v45, v47);
    uint64_t v54 = (uint64_t *)(v53 + v52);
    uint64_t *v54 = v42;
    v54[1] = v44;
    sub_21472BBA4(v42, v44);
    uint64_t v55 = sub_2147876DC;
    uint64_t v56 = v50;
    uint64_t v57 = 0;
    return MEMORY[0x270FA2498](v55, v56, v57);
  }
  uint64_t v58 = v41;
  sub_2147ACC48();

  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v59 = *(uint64_t (**)(void))(v0 + 8);
  return v59();
}

uint64_t sub_2147876DC()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = sub_21478CBDC((unint64_t *)&qword_26781D638, (void (*)(uint64_t))type metadata accessor for SERClient);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[22] = v4;
  unsigned char v4[2] = v1;
  v4[3] = &unk_26781DA70;
  v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[23] = v5;
  uint64_t v6 = type metadata accessor for Reservation();
  *uint64_t v5 = v0;
  v5[1] = sub_214787860;
  return MEMORY[0x270FA2360](v0 + 3, v1, v3, 0x786F725068746977, 0xED0000293A5F2879, sub_21478D880, v4, v6);
}

uint64_t sub_214787860()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[20];
    uint64_t v4 = sub_214787A9C;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    v2[25] = v2[3];
    uint64_t v4 = sub_2147879E0;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2147879E0()
{
  sub_21472BBFC(v0[18], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[25];
  return v1(v2);
}

uint64_t sub_214787A9C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214787B30, 0, 0);
}

uint64_t sub_214787B30()
{
  sub_21472BBFC(v0[18], v0[19]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_214787BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[19] = a4;
  v5[20] = a5;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  return MEMORY[0x270FA2498](sub_214787C18, 0, 0);
}

uint64_t sub_214787C18()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = sub_2147ACD38();
  v0[21] = v2;
  uint64_t v3 = sub_2147ACCA8();
  v0[22] = v3;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_214787D54;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_21475AC90;
  v0[13] = &block_descriptor_63;
  v0[14] = v4;
  objc_msgSend(v1, sel_editReservationWithUuid_metadata_completionHandler_, v2, v3, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214787D54()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_214787ED4;
  }
  else {
    uint64_t v2 = sub_214787E64;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214787E64()
{
  uint64_t v2 = *(void **)(v0 + 168);
  uint64_t v1 = *(void **)(v0 + 176);
  **(void **)(v0 + 128) = *(void *)(v0 + 120);

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_214787ED4()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[21];
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t SESnapshot.findReservation(uuid:fromCache:)(uint64_t a1, char a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, char))((char *)&dword_26781DA80 + dword_26781DA80);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214788004;
  return v7(a1, a2);
}

uint64_t sub_214788004(void *a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
  if (v1)
  {
    return v5();
  }
  else
  {
    uint64_t v8 = *(uint64_t (**)(id))(v4 + 8);
    id v7 = a1;
    return v8(v7);
  }
}

uint64_t sub_214788140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return MEMORY[0x270FA2498](sub_214788164, 0, 0);
}

uint64_t sub_214788164()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = sub_2147ACD38();
  v0[19] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_214788278;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_214788464;
  v0[13] = &block_descriptor_61;
  v0[14] = v3;
  objc_msgSend(v1, sel_findReservationWithUuid_completionHandler_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214788278()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_2147883F4;
  }
  else {
    uint64_t v2 = sub_214788388;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214788388()
{
  uint64_t v1 = *(void **)(v0 + 152);
  **(void **)(v0 + 128) = *(void *)(v0 + 120);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2147883F4()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214788464(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    *uint64_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    id v10 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_214756444((uint64_t)&v10, v8, &qword_26781DB18);
    return swift_continuation_throwingResume();
  }
}

uint64_t SESnapshot.removeReservation(uuid:)(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  uint64_t v3 = sub_2147ACD88();
  v2[18] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[19] = v4;
  v2[20] = *(void *)(v4 + 64);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214788608, 0, 0);
}

uint64_t sub_214788608()
{
  uint64_t v23 = v0;
  if (qword_26781BFA8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v5 = sub_2147ACE18();
  __swift_project_value_buffer(v5, (uint64_t)qword_26782C6E0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[23] = v6;
  v0[24] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v3);
  id v7 = sub_2147ACDF8();
  os_log_type_t v8 = sub_2147AD178();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[22];
  uint64_t v12 = v0[18];
  uint64_t v11 = v0[19];
  if (v9)
  {
    os_log_type_t type = v8;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v22 = v20;
    *(_DWORD *)uint64_t v13 = 136315394;
    v0[14] = sub_2147601CC(0xD000000000000018, 0x80000002147C0F40, &v22);
    sub_2147AD248();
    *(_WORD *)(v13 + 12) = 2080;
    sub_21478CBDC(&qword_26781DAA0, MEMORY[0x263F07508]);
    uint64_t v14 = sub_2147AD638();
    v0[15] = sub_2147601CC(v14, v15, &v22);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    _os_log_impl(&dword_2146ED000, v7, type, "%s (%s)", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v20, -1, -1);
    MEMORY[0x2166A8870](v13, -1, -1);
  }
  else
  {
    (*(void (**)(void, void))(v11 + 8))(v0[22], v0[18]);
  }

  uint64_t v21 = (uint64_t (*)(uint64_t, char))((char *)&dword_26781DA80 + dword_26781DA80);
  uint64_t v16 = (void *)swift_task_alloc();
  v0[25] = v16;
  void *v16 = v0;
  v16[1] = sub_214788904;
  uint64_t v17 = v0[16];
  return v21(v17, 1);
}

uint64_t sub_214788904(void *a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    uint64_t v5 = sub_214788C98;
  }
  else
  {
    *(void *)(v4 + 208) = a1;
    id v6 = a1;
    uint64_t v5 = sub_214788A38;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_214788A38()
{
  uint64_t v1 = (char *)v0[26];
  uint64_t v2 = v0[17];
  uint64_t v3 = &v1[OBJC_IVAR____TtC9SEService11Reservation_type];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC9SEService11Reservation_type];
  v0[27] = v4;
  unint64_t v5 = *((void *)v3 + 1);
  v0[28] = v5;
  sub_21471ED54(v4, v5);

  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC9SEService10SESnapshot_reservationState);
  uint64_t v7 = OBJC_IVAR____TtC9SEService16ReservationState_counts;
  v0[29] = v6;
  v0[30] = v7;
  uint64_t v8 = v6 + v7;
  swift_beginAccess();
  if (*(void *)(*(void *)v8 + 16))
  {
    sub_21471ED54(v4, v5);
    sub_21477EA08(v4, v5);
    if (v9)
    {
      swift_endAccess();
      sub_2147201A0(v4, v5);
      if (qword_26781BF90 != -1) {
        swift_once();
      }
      uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))v0[23];
      uint64_t v11 = v0[21];
      uint64_t v12 = v0[18];
      uint64_t v13 = v0[19];
      uint64_t v14 = v0[16];
      uint64_t v15 = qword_26782C6D0;
      v0[31] = qword_26782C6D0;
      v10(v11, v14, v12);
      unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v17 = swift_allocObject();
      v0[32] = v17;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 32))(v17 + v16, v11, v12);
      return MEMORY[0x270FA2498](sub_214788D3C, v15, 0);
    }
    sub_2147201A0(v4, v5);
  }
  swift_endAccess();
  sub_2147201A0(v4, v5);
  sub_214729BF0();
  swift_allocError();
  *(void *)uint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 4;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  id v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_214788C98()
{
  sub_214729BF0();
  swift_allocError();
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 4;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214788D3C()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[32];
  uint64_t v3 = sub_21478CBDC((unint64_t *)&qword_26781D638, (void (*)(uint64_t))type metadata accessor for SERClient);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[33] = v4;
  unsigned char v4[2] = v1;
  v4[3] = &unk_26781DA98;
  v4[4] = v2;
  unint64_t v5 = (void *)swift_task_alloc();
  v0[34] = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_214788E84;
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2360](v5, v1, v3, 0x786F725068746977, 0xED0000293A5F2879, sub_21478CA24, v4, v6);
}

uint64_t sub_214788E84()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 248);
    uint64_t v4 = sub_214789354;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = sub_214788FB0;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214788FB0()
{
  uint64_t v2 = v0[27];
  unint64_t v1 = v0[28];
  uint64_t v3 = (void *)(v0[29] + v0[30]);
  swift_beginAccess();
  sub_21471ED54(v2, v1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v45 = (void *)*v3;
  unint64_t v5 = (void *)*v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_21471ED54(v2, v1);
  unint64_t v7 = sub_21477EA08(v2, v1);
  uint64_t v8 = v5[2];
  BOOL v9 = (v6 & 1) == 0;
  uint64_t result = v8 + v9;
  if (__OFADD__(v8, v9))
  {
    __break(1u);
    goto LABEL_25;
  }
  LOBYTE(v1) = v6;
  if (v5[3] < result)
  {
    uint64_t v12 = v0[27];
    uint64_t v11 = v0[28];
    sub_214791D00(result, isUniquelyReferenced_nonNull_native);
    uint64_t result = sub_21477EA08(v12, v11);
    if ((v1 & 1) != (v13 & 1))
    {
LABEL_12:
      return sub_2147AD6B8();
    }
    unint64_t v7 = result;
    if (v1) {
      goto LABEL_8;
    }
LABEL_29:
    __break(1u);
    return result;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_28;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_29;
  }
  while (1)
  {
LABEL_8:
    uint64_t v14 = v45[7];
    uint64_t v15 = *(void *)(v14 + 8 * v7);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    unint64_t v1 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[27];
    unint64_t v19 = v0[28];
    uint64_t v43 = v0[16];
    uint64_t v44 = v0[17];
    *(void *)(v14 + 8 * v7) = v17;
    sub_2147201A0(v20, v19);
    *(void *)(v1 + v18) = v45;
    swift_endAccess();
    sub_2147201A0(v20, v19);
    LOBYTE(v1) = (_BYTE)v0 + 88;
    swift_beginAccess();
    uint64_t v21 = (void *)sub_21478B040(v43);
    swift_endAccess();

    uint64_t v22 = (void *)(v44 + OBJC_IVAR____TtC9SEService10SESnapshot_globalCredentials);
    swift_beginAccess();
    sub_21471ED54(v20, v19);
    unint64_t v7 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = (void *)*v22;
    uint64_t v23 = (void *)*v22;
    void *v22 = 0x8000000000000000;
    unint64_t v25 = sub_21477EA08(v20, v19);
    uint64_t v26 = v23[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (!__OFADD__(v26, v27)) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    uint64_t result = (uint64_t)sub_21479064C();
    if ((v1 & 1) == 0) {
      goto LABEL_29;
    }
  }
  char v29 = v24;
  if (v23[3] >= v28)
  {
    if ((v7 & 1) == 0)
    {
      sub_21479064C();
      uint64_t v23 = v45;
    }
  }
  else
  {
    uint64_t v31 = v0[27];
    uint64_t v30 = v0[28];
    sub_214791D00(v28, v7);
    uint64_t v23 = v45;
    unint64_t v32 = sub_21477EA08(v31, v30);
    if ((v29 & 1) != (v33 & 1)) {
      goto LABEL_12;
    }
    unint64_t v25 = v32;
  }
  void *v22 = v23;
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)*v22;
  swift_bridgeObjectRetain();
  if ((v29 & 1) == 0)
  {
    uint64_t v36 = v0[27];
    unint64_t v35 = v0[28];
    sub_214760BDC(v25, v36, v35, 0, v34);
    sub_21471ED54(v36, v35);
  }
  uint64_t v37 = v34[7];
  uint64_t v38 = *(void *)(v37 + 8 * v25);
  BOOL v16 = __OFSUB__(v38, 1);
  uint64_t v39 = v38 - 1;
  if (v16) {
    goto LABEL_27;
  }
  uint64_t v41 = v0[27];
  unint64_t v40 = v0[28];
  *(void *)(v37 + 8 * v25) = v39;
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_2147201A0(v41, v40);
  sub_2147201A0(v41, v40);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v42 = (uint64_t (*)(void))v0[1];
  return v42();
}

uint64_t sub_214789354()
{
  uint64_t v2 = *(void *)(v0 + 216);
  unint64_t v1 = *(void *)(v0 + 224);
  swift_release();
  sub_2147201A0(v2, v1);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2147893DC, 0, 0);
}

uint64_t sub_2147893DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214789448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 120) = a2;
  *(void *)(v3 + 128) = a3;
  return MEMORY[0x270FA2498](sub_214789468, 0, 0);
}

uint64_t sub_214789468()
{
  unint64_t v1 = (void *)v0[15];
  uint64_t v2 = sub_2147ACD38();
  v0[17] = v2;
  v0[2] = v0;
  v0[3] = sub_21478956C;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_214789750;
  v0[13] = &block_descriptor_44;
  v0[14] = v3;
  objc_msgSend(v1, sel_removeReservationWithUuid_completionHandler_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_21478956C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_2147896E0;
  }
  else {
    uint64_t v2 = sub_21478967C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21478967C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2147896E0()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214789750(uint64_t a1, void *a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    *uint64_t v3 = a2;
    id v4 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t SESnapshot.reservations(fromCache:)(char a1)
{
  *(void *)(v2 + 80) = v1;
  *(unsigned char *)(v2 + 156) = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781D220);
  *(void *)(v2 + 88) = v3;
  *(void *)(v2 + 96) = *(void *)(v3 - 8);
  *(void *)(v2 + 104) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2147898B0, 0, 0);
}

uint64_t sub_2147898B0()
{
  uint64_t v13 = v0;
  if (qword_26781BFA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_2147ACE18();
  __swift_project_value_buffer(v1, (uint64_t)qword_26782C6E0);
  uint64_t v2 = sub_2147ACDF8();
  os_log_type_t v3 = sub_2147AD178();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 156);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)(v0 + 72) = sub_2147601CC(0xD000000000000018, 0x80000002147C0F60, &v12);
    sub_2147AD248();
    *(_WORD *)(v5 + 12) = 1024;
    *(_DWORD *)(v0 + 152) = v4;
    sub_2147AD248();
    _os_log_impl(&dword_2146ED000, v2, v3, "%s (%{BOOL}d)", (uint8_t *)v5, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v6, -1, -1);
    MEMORY[0x2166A8870](v5, -1, -1);
  }

  if (*(unsigned char *)(v0 + 156))
  {
    swift_beginAccess();
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_21478AE84(v7);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    BOOL v9 = *(uint64_t (**)(void *))(v0 + 8);
    return v9(v8);
  }
  else
  {
    if (qword_26781BF90 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_26782C6D0;
    *(void *)(v0 + 112) = qword_26782C6D0;
    return MEMORY[0x270FA2498](sub_214789B7C, v11, 0);
  }
}

uint64_t sub_214789B7C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = sub_21478CBDC((unint64_t *)&qword_26781D638, (void (*)(uint64_t))type metadata accessor for SERClient);
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  v3[2] = v1;
  v3[3] = &unk_26781DAB0;
  v3[4] = 0;
  int v4 = (void *)swift_task_alloc();
  v0[16] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781DAB8);
  void *v4 = v0;
  v4[1] = sub_214789CE0;
  return MEMORY[0x270FA2360](v0 + 8, v1, v2, 0x786F725068746977, 0xED0000293A5F2879, sub_21478CA68, v3, v5);
}

uint64_t sub_214789CE0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[14];
    int v4 = sub_21478A174;
  }
  else
  {
    swift_task_dealloc();
    v2[18] = v2[8];
    int v4 = sub_214789E0C;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214789E0C()
{
  uint64_t v30 = v0;
  unint64_t v1 = v0[18];
  uint64_t v2 = *(void *)(v0[10] + OBJC_IVAR____TtC9SEService10SESnapshot_reservationState);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_2147AD4B8();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_3:
      uint64_t v29 = MEMORY[0x263F8EE78];
      uint64_t result = sub_21474D48C(0, v3 & ~(v3 >> 63), 0);
      if (v3 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v5 = 0;
      uint64_t v6 = v0[12];
      uint64_t v28 = v0[11];
      uint64_t v7 = v29;
      unint64_t v8 = v1 & 0xC000000000000001;
      uint64_t v26 = v2;
      uint64_t v27 = v0[18] + 32;
      do
      {
        if (v8) {
          BOOL v9 = (char *)MEMORY[0x2166A7680](v5, v0[18]);
        }
        else {
          BOOL v9 = (char *)*(id *)(v27 + 8 * v5);
        }
        uint64_t v10 = v9;
        uint64_t v11 = v0[13];
        uint64_t v12 = *(int *)(v28 + 48);
        uint64_t v13 = &v9[OBJC_IVAR____TtC9SEService11Reservation_uuid];
        uint64_t v14 = sub_2147ACD88();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v11, v13, v14);
        *(void *)(v11 + v12) = v10;
        uint64_t v29 = v7;
        unint64_t v16 = *(void *)(v7 + 16);
        unint64_t v15 = *(void *)(v7 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_21474D48C(v15 > 1, v16 + 1, 1);
          uint64_t v7 = v29;
        }
        uint64_t v17 = v0[13];
        ++v5;
        *(void *)(v7 + 16) = v16 + 1;
        sub_214756444(v17, v7+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, &qword_26781D220);
      }
      while (v3 != v5);
      swift_bridgeObjectRelease();
      uint64_t v2 = v26;
      if (*(void *)(v7 + 16)) {
        goto LABEL_12;
      }
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  if (*(void *)(MEMORY[0x263F8EE78] + 16))
  {
LABEL_12:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781D390);
    uint64_t v18 = sub_2147AD4E8();
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v18 = MEMORY[0x263F8EE80];
LABEL_16:
  uint64_t v19 = v0[17];
  uint64_t v29 = v18;
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_2147558EC(v20, 1, &v29);
  if (v19)
  {
    return swift_unexpectedError();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = v29;
    uint64_t v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC9SEService16ReservationState_reservations);
    swift_beginAccess();
    uint64_t *v22 = v21;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v23 = swift_bridgeObjectRetain();
    char v24 = sub_21478AE84(v23);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    unint64_t v25 = (uint64_t (*)(void *))v0[1];
    return v25(v24);
  }
}

uint64_t sub_21478A174()
{
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21478A1E4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x270FA2498](sub_21478A204, 0, 0);
}

uint64_t sub_21478A204()
{
  unint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_21475AAF4;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_21478A300;
  v0[13] = &block_descriptor_33;
  v0[14] = v2;
  objc_msgSend(v1, sel_reservationsWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_21478A300(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    swift_allocError();
    *uint64_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    type metadata accessor for Reservation();
    **(void **)(*(void *)(v3 + 64) + 40) = sub_2147AD058();
    return swift_continuation_throwingResume();
  }
}

uint64_t SESnapshot.clearReservations()()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x270FA2498](sub_21478A3EC, 0, 0);
}

uint64_t sub_21478A3EC()
{
  uint64_t v9 = v0;
  if (qword_26781BFA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_2147ACE18();
  __swift_project_value_buffer(v1, (uint64_t)qword_26782C6E0);
  uint64_t v2 = sub_2147ACDF8();
  os_log_type_t v3 = sub_2147AD178();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v8 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    *(void *)(v0 + 112) = sub_2147601CC(0xD000000000000013, 0x80000002147C0F80, &v8);
    sub_2147AD248();
    _os_log_impl(&dword_2146ED000, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v5, -1, -1);
    MEMORY[0x2166A8870](v4, -1, -1);
  }

  if (qword_26781BF90 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_26782C6D0;
  *(void *)(v0 + 128) = qword_26782C6D0;
  return MEMORY[0x270FA2498](sub_21478A5DC, v6, 0);
}

uint64_t sub_21478A5DC()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = sub_21478CBDC((unint64_t *)&qword_26781D638, (void (*)(uint64_t))type metadata accessor for SERClient);
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  v3[2] = v1;
  v3[3] = &unk_26781DAC8;
  v3[4] = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  void *v4 = v0;
  v4[1] = sub_21478A724;
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2360](v4, v1, v2, 0x786F725068746977, 0xED0000293A5F2879, sub_21478D884, v3, v5);
}

uint64_t sub_21478A724()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 128);
    uint64_t v4 = sub_21478A92C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = sub_21478A848;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_21478A848()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 120) + OBJC_IVAR____TtC9SEService10SESnapshot_reservationState);
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC9SEService16ReservationState_counts);
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x263F8EE80];
  *uint64_t v2 = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC9SEService16ReservationState_reservations);
  swift_beginAccess();
  void *v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_21478A92C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21478A994, 0, 0);
}

uint64_t sub_21478A994()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 120) + OBJC_IVAR____TtC9SEService10SESnapshot_reservationState);
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC9SEService16ReservationState_counts);
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x263F8EE80];
  *uint64_t v2 = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC9SEService16ReservationState_reservations);
  swift_beginAccess();
  void *v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_21478AA78(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 120) = a2;
  return MEMORY[0x270FA2498](sub_21478AA98, 0, 0);
}

uint64_t sub_21478AA98()
{
  uint64_t v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_21478AB8C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_214789750;
  v0[13] = &block_descriptor_2;
  v0[14] = v2;
  objc_msgSend(v1, sel_clearReservationsWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_21478AB8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 128) = v1;
  if (v1) {
    uint64_t v2 = sub_21478ACB4;
  }
  else {
    uint64_t v2 = sub_21478AC9C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21478AC9C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21478ACB4()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21478AD20()
{
  if (v0[3] >= 0x1AuLL) {
    swift_bridgeObjectRelease();
  }
  sub_21472BBFC(v0[4], v0[5]);
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21478AD68(uint64_t a1, uint64_t a2)
{
  long long v10 = *(_OWORD *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *(void *)uint64_t v8 = v3;
  *(void *)(v8 + 8) = sub_214751D8C;
  *(void *)(v8 + 160) = v7;
  *(void *)(v8 + 168) = v6;
  *(_OWORD *)(v8 + 144) = v10;
  *(void *)(v8 + 128) = a1;
  *(void *)(v8 + 136) = a2;
  return MEMORY[0x270FA2498](sub_214786BB4, 0, 0);
}

uint64_t sub_21478AE40(uint64_t a1)
{
  return sub_21478261C(a1, v1[2], v1[3], v1[4], &qword_26781DB38, (uint64_t)&unk_26C562610, (uint64_t)&unk_26781DB48);
}

void *sub_21478AE84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D6D0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  uint64_t v6 = sub_21478BC00(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2147347DC();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_21478AF70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_21477EA80(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_214790E14();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_21478B138(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21478B040(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_21477EC38(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2147909C4();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_2147ACD88();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_21478B310(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_21478B138(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2147AD2D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2147AD728();
        swift_bridgeObjectRetain();
        sub_2147ACFA8();
        uint64_t v9 = sub_2147AD748();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *unint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21478B310(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2147ACD88();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_2147AD2D8();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      unint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_21478CBDC((unint64_t *)&unk_26781D550, MEMORY[0x263F07508]);
        uint64_t v17 = sub_2147ACED8();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            char v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    unint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *unint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_21478B608(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21477EA80(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2147907FC();
    goto LABEL_7;
  }
  sub_2147921E4(result, a4 & 1);
  uint64_t result = sub_21477EA80(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = sub_2147AD6B8();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  unint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_214760BDC(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

void sub_21478B73C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21477EA80(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_214790E14();
    goto LABEL_7;
  }
  sub_214792F54(v15, a4 & 1);
  uint64_t v20 = sub_21477EA80(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    sub_2147AD6B8();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_214760BDC(v12, a2, a3, a1, v18);
  swift_bridgeObjectRetain();
}

void sub_21478B87C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_2147ACD88();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_21477EC38(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_2147909C4();
    goto LABEL_7;
  }
  sub_214792508(v17, a3 & 1);
  unint64_t v22 = sub_21477EC38(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_2147AD6B8();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_214760C24(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_21478BA24()
{
  uint64_t v1 = sub_2147ACD88();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_21472BBFC(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8));
  return MEMORY[0x270FA0238](v0, v6 + 16, v5);
}

uint64_t sub_21478BACC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(sub_2147ACD88() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v2 + v7;
  uint64_t v9 = (uint64_t *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  void *v12 = v3;
  v12[1] = sub_214752080;
  v12[19] = v10;
  v12[20] = v11;
  v12[17] = a2;
  v12[18] = v8;
  v12[16] = a1;
  return MEMORY[0x270FA2498](sub_214787C18, 0, 0);
}

void *sub_21478BC00(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    void *v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21478BDFC(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 244) = a2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v2;
  uint64_t v4 = sub_2147ACD88();
  *(void *)(v3 + 128) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v3 + 136) = v5;
  *(void *)(v3 + 144) = *(void *)(v5 + 64);
  *(void *)(v3 + 152) = swift_task_alloc();
  *(void *)(v3 + 160) = swift_task_alloc();
  *(void *)(v3 + 168) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21478BEE4, 0, 0);
}

uint64_t sub_21478BEE4()
{
  uint64_t v38 = v0;
  if (qword_26781BFA8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = sub_2147ACE18();
  __swift_project_value_buffer(v5, (uint64_t)qword_26782C6E0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v2, v1, v3);
  uint64_t v7 = sub_2147ACDF8();
  os_log_type_t v8 = sub_2147AD178();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 136);
  if (v9)
  {
    uint64_t v34 = *(void *)(v0 + 128);
    int v35 = *(unsigned __int8 *)(v0 + 244);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315650;
    v37[0] = v36;
    *(void *)(v0 + 96) = sub_2147601CC(0xD000000000000020, 0x80000002147C0FA0, v37);
    sub_2147AD248();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v13 = sub_2147ACD18();
    *(void *)(v0 + 104) = sub_2147601CC(v13, v14, v37);
    sub_2147AD248();
    swift_bridgeObjectRelease();
    unint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v10, v34);
    *(_WORD *)(v12 + 22) = 1024;
    *(_DWORD *)(v0 + 240) = v35;
    sub_2147AD248();
    _os_log_impl(&dword_2146ED000, v7, v8, "%s (%s, %{BOOL}d)", (uint8_t *)v12, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x2166A8870](v36, -1, -1);
    MEMORY[0x2166A8870](v12, -1, -1);
  }
  else
  {
    unint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(*(void *)(v0 + 168), *(void *)(v0 + 128));
  }

  *(void *)(v0 + 176) = v15;
  int v16 = *(unsigned __int8 *)(v0 + 244);
  uint64_t v17 = *(void *)(*(void *)(v0 + 120) + OBJC_IVAR____TtC9SEService10SESnapshot_reservationState);
  *(void *)(v0 + 184) = v17;
  if (v16 == 1)
  {
    unint64_t v18 = (uint64_t *)(v17 + OBJC_IVAR____TtC9SEService16ReservationState_reservations);
    swift_beginAccess();
    uint64_t v19 = *v18;
    if (*(void *)(v19 + 16) && (unint64_t v20 = sub_21477EC38(*(void *)(v0 + 112)), (v21 & 1) != 0))
    {
      uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
      swift_endAccess();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      char v23 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v23(v22);
    }
    else
    {
      swift_endAccess();
      sub_214729BF0();
      swift_allocError();
      *(void *)uint64_t v32 = 0;
      *(void *)(v32 + 8) = 0;
      *(unsigned char *)(v32 + 16) = 4;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
      return v33();
    }
  }
  else
  {
    v6(*(void *)(v0 + 160), *(void *)(v0 + 112), *(void *)(v0 + 128));
    if (qword_26781BF90 != -1) {
      swift_once();
    }
    uint64_t v25 = *(void *)(v0 + 152);
    uint64_t v26 = *(void *)(v0 + 128);
    uint64_t v27 = *(void *)(v0 + 136);
    uint64_t v28 = *(void *)(v0 + 112);
    uint64_t v29 = qword_26782C6D0;
    *(void *)(v0 + 192) = qword_26782C6D0;
    v6(v25, v28, v26);
    unint64_t v30 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v31 = swift_allocObject();
    *(void *)(v0 + 200) = v31;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 32))(v31 + v30, v25, v26);
    return MEMORY[0x270FA2498](sub_21478C3BC, v29, 0);
  }
}

uint64_t sub_21478C3BC()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v3 = sub_21478CBDC((unint64_t *)&qword_26781D638, (void (*)(uint64_t))type metadata accessor for SERClient);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  unsigned char v4[2] = v1;
  v4[3] = &unk_26781DB10;
  v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[27] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781DB18);
  *uint64_t v5 = v0;
  v5[1] = sub_21478C51C;
  return MEMORY[0x270FA2360](v0 + 11, v1, v3, 0x786F725068746977, 0xED0000293A5F2879, sub_21478CEE0, v4, v6);
}

uint64_t sub_21478C51C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[24];
    uint64_t v4 = sub_21478C814;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    v2[29] = v2[11];
    uint64_t v4 = sub_21478C650;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_21478C650()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[23] + OBJC_IVAR____TtC9SEService16ReservationState_reservations;
  swift_beginAccess();
  if (v1)
  {
    uint64_t v3 = v0[29];
    uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[22];
    uint64_t v5 = v0[20];
    uint64_t v6 = v0[16];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *(void *)v2;
    *(void *)uint64_t v2 = 0x8000000000000000;
    sub_21478B87C(v3, v5, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v2 = v18;
    swift_bridgeObjectRelease();
    v4(v5, v6);
  }
  else
  {
    uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[22];
    uint64_t v9 = v0[20];
    uint64_t v10 = v0[16];
    uint64_t v11 = (void *)sub_21478B040(v9);
    v8(v9, v10);
  }
  swift_endAccess();
  swift_beginAccess();
  uint64_t v12 = *(void *)v2;
  if (*(void *)(*(void *)v2 + 16) && (unint64_t v13 = sub_21477EC38(v0[14]), (v14 & 1) != 0))
  {
    uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v16 = (uint64_t (*)(uint64_t))v0[1];
    return v16(v15);
  }
  else
  {
    uint64_t result = swift_endAccess();
    __break(1u);
  }
  return result;
}

uint64_t sub_21478C814()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[22];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[16];
  swift_task_dealloc();
  v1(v2, v3);
  swift_release();
  return MEMORY[0x270FA2498](sub_21478C8B8, 0, 0);
}

uint64_t sub_21478C8B8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21478C93C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_2147ACD88() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_214752080;
  v7[15] = a2;
  v7[16] = v6;
  return MEMORY[0x270FA2498](sub_214789468, 0, 0);
}

uint64_t sub_21478CA24(uint64_t a1)
{
  return sub_21478261C(a1, v1[2], v1[3], v1[4], &qword_26781DAF0, (uint64_t)&unk_26C562548, (uint64_t)&unk_26781DB00);
}

uint64_t sub_21478CA68(uint64_t a1)
{
  return sub_21478261C(a1, v1[2], v1[3], v1[4], &qword_26781DAD0, (uint64_t)&unk_26C5624F8, (uint64_t)&unk_26781DAE0);
}

uint64_t sub_21478CAAC()
{
  return objectdestroy_27Tm(&qword_26781DAD0);
}

uint64_t sub_21478CAB8()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781DAD0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_214752080;
  *(_OWORD *)(v7 + 168) = v8;
  *(void *)(v7 + 152) = v5;
  *(void *)(v7 + 160) = v6;
  return MEMORY[0x270FA2498](sub_2147852C8, v5, 0);
}

uint64_t sub_21478CBDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21478CC24()
{
  return objectdestroy_27Tm(&qword_26781DAF0);
}

uint64_t sub_21478CC30()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781DAF0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_214752080;
  *(_OWORD *)(v7 + 160) = v8;
  *(void *)(v7 + 144) = v5;
  *(void *)(v7 + 152) = v6;
  return MEMORY[0x270FA2498](sub_214784D6C, v5, 0);
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v1 = sub_2147ACD88();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_21478CDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(sub_2147ACD88() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_214752080;
  v8[17] = a2;
  v8[18] = v7;
  v8[16] = a1;
  return MEMORY[0x270FA2498](sub_214788164, 0, 0);
}

uint64_t sub_21478CEE0(uint64_t a1)
{
  return sub_21478261C(a1, v1[2], v1[3], v1[4], &qword_26781DB20, (uint64_t)&unk_26C5625C0, (uint64_t)&unk_26781DB30);
}

uint64_t sub_21478CF24()
{
  return objectdestroy_27Tm(&qword_26781DB20);
}

uint64_t sub_21478CF30()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781DB20) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_214752080;
  *(_OWORD *)(v7 + 168) = v8;
  *(void *)(v7 + 152) = v5;
  *(void *)(v7 + 160) = v6;
  return MEMORY[0x270FA2498](sub_2147847F4, v5, 0);
}

uint64_t sub_21478D054()
{
  return objectdestroy_27Tm(&qword_26781DB38);
}

uint64_t sub_21478D060()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781DB38) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_214752080;
  *(_OWORD *)(v7 + 168) = v8;
  *(void *)(v7 + 152) = v5;
  *(void *)(v7 + 160) = v6;
  return MEMORY[0x270FA2498](sub_2147842F4, v5, 0);
}

uint64_t sub_21478D184()
{
  return objectdestroy_27Tm(&qword_26781DB50);
}

uint64_t sub_21478D190()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781DB50) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_214752080;
  *(_OWORD *)(v7 + 168) = v8;
  *(void *)(v7 + 152) = v5;
  *(void *)(v7 + 160) = v6;
  return MEMORY[0x270FA2498](sub_214783DF4, v5, 0);
}

uint64_t sub_21478D2B4()
{
  return objectdestroy_27Tm(&qword_26781DB68);
}

uint64_t sub_21478D2C0()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781DB68) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_214752080;
  *(_OWORD *)(v7 + 168) = v8;
  *(void *)(v7 + 152) = v5;
  *(void *)(v7 + 160) = v6;
  return MEMORY[0x270FA2498](sub_2147838F4, v5, 0);
}

uint64_t sub_21478D3E4()
{
  return objectdestroy_27Tm(&qword_26781DB80);
}

uint64_t sub_21478D3F0()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781DB80) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_214752080;
  *(_OWORD *)(v7 + 168) = v8;
  *(void *)(v7 + 152) = v5;
  *(void *)(v7 + 160) = v6;
  return MEMORY[0x270FA2498](sub_2147828EC, v5, 0);
}

uint64_t sub_21478D514()
{
  return objectdestroy_27Tm(&qword_26781DB98);
}

uint64_t sub_21478D520(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781DB98) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  void *v13 = v2;
  v13[1] = sub_214752080;
  return sub_214782DC8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_21478D660()
{
  return objectdestroy_27Tm(&qword_26781DBB0);
}

uint64_t objectdestroy_27Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();
  return MEMORY[0x270FA0238](v1, v7, v6);
}

uint64_t sub_21478D75C()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26781DBB0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_214752080;
  *(_OWORD *)(v7 + 168) = v8;
  *(void *)(v7 + 152) = v5;
  *(void *)(v7 + 160) = v6;
  return MEMORY[0x270FA2498](sub_2147833F4, v5, 0);
}

uint64_t sub_21478D8CC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_21474D50C(0, v1, 0);
  uint64_t v2 = v28;
  uint64_t result = sub_214755E30(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v23 = v3 + 80;
  int64_t v24 = v1;
  int v25 = v5;
  uint64_t v26 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = *(void **)(*(void *)(v3 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    id v27 = v12;
    uint64_t v13 = sub_2147ACF38();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v14 = v3;
    unint64_t v16 = *(void *)(v28 + 16);
    unint64_t v15 = *(void *)(v28 + 24);
    if (v16 >= v15 >> 1) {
      uint64_t result = sub_21474D50C(v15 > 1, v16 + 1, 1);
    }
    *(void *)(v28 + 16) = v16 + 1;
    uint64_t v17 = v28 + 16 * v16;
    *(void *)(v17 + 32) = v13;
    *(void *)(v17 + 40) = v27;
    int64_t v9 = 1 << *(unsigned char *)(v14 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v26;
    uint64_t v18 = *(void *)(v26 + 8 * v11);
    if ((v18 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    uint64_t v3 = v14;
    int v5 = v25;
    if (*(_DWORD *)(v14 + 36) != v25) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      int64_t v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v24;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v24;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(v23 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_21478DB00(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v2 = sub_2147AD458();
  }
  else {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_21474D53C(0, v2 & ~(v2 >> 63), 0);
    uint64_t result = sub_214755E34(v1);
    uint64_t v29 = result;
    uint64_t v30 = v4;
    char v31 = v5 & 1;
    if (v2 < 0)
    {
      __break(1u);
LABEL_20:
      __break(1u);
    }
    else
    {
      uint64_t v25 = v1;
      do
      {
        while (1)
        {
          uint64_t v12 = v29;
          char v13 = v31;
          uint64_t v27 = v30;
          sub_2147569B4(v28, v29, v30, v31, v1);
          unint64_t v15 = v14;
          uint64_t v16 = v28[0];
          uint64_t v17 = sub_2147ACF58();
          uint64_t v19 = v18;

          uint64_t v20 = v32;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = sub_21474D53C(0, *(void *)(v20 + 16) + 1, 1);
            uint64_t v20 = v32;
          }
          unint64_t v22 = *(void *)(v20 + 16);
          unint64_t v21 = *(void *)(v20 + 24);
          if (v22 >= v21 >> 1)
          {
            uint64_t result = sub_21474D53C(v21 > 1, v22 + 1, 1);
            uint64_t v20 = v32;
          }
          *(void *)(v20 + 16) = v22 + 1;
          uint64_t v23 = (void *)(v20 + 24 * v22);
          v23[4] = v17;
          v23[5] = v19;
          void v23[6] = v16;
          if (v26) {
            break;
          }
          uint64_t v1 = v25;
          sub_214755F84(v12, v27, v13, v25);
          uint64_t v7 = v6;
          uint64_t v9 = v8;
          char v11 = v10;
          sub_214756438(v12, v27, v13);
          uint64_t v29 = v7;
          uint64_t v30 = v9;
          char v31 = v11 & 1;
          if (!--v2) {
            goto LABEL_17;
          }
        }
        uint64_t v1 = v25;
        if ((v13 & 1) == 0) {
          goto LABEL_20;
        }
        if (sub_2147AD428()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781DC88);
        int64_t v24 = (void (*)(void *, void))sub_2147ACEC8();
        sub_2147AD488();
        v24(v28, 0);
        --v2;
      }
      while (v2);
LABEL_17:
      sub_214756438(v29, v30, v31);
      return v32;
    }
  }
  return result;
}

uint64_t SEState.friendlyDetails.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService7SEState_infoDictionary);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x263F8EE80];
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_5:
    char v11 = *(char **)(*(void *)(v1 + 56) + 8 * v10);
    unint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC9SEService16SEPackageDetails_type + 8];
    if (v12 != 26)
    {
      uint64_t v16 = *(void *)&v11[OBJC_IVAR____TtC9SEService16SEPackageDetails_type];
      int v35 = v11;
      sub_214773278(v16, v12);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = v16;
      unint64_t v19 = sub_21477EA08(v16, v12);
      uint64_t v20 = v8[2];
      BOOL v21 = (v18 & 1) == 0;
      uint64_t v22 = v20 + v21;
      if (__OFADD__(v20, v21)) {
        goto LABEL_37;
      }
      char v23 = v18;
      if (v8[3] >= v22)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_214790498();
        }
        uint64_t v24 = v36;
        if (v23) {
          goto LABEL_32;
        }
      }
      else
      {
        sub_2147917F4(v22, isUniquelyReferenced_nonNull_native);
        uint64_t v24 = v36;
        unint64_t v25 = sub_21477EA08(v36, v12);
        if ((v23 & 1) != (v26 & 1)) {
          goto LABEL_39;
        }
        unint64_t v19 = v25;
        if (v23)
        {
LABEL_32:
          uint64_t v32 = v8[7];
          uint64_t v33 = 8 * v19;

          *(void *)(v32 + v33) = v35;
          char v31 = v35;
          goto LABEL_33;
        }
      }
      v8[(v19 >> 6) + 8] |= 1 << v19;
      uint64_t v27 = (uint64_t *)(v8[6] + 16 * v19);
      *uint64_t v27 = v24;
      v27[1] = v12;
      *(void *)(v8[7] + 8 * v19) = v35;
      uint64_t v28 = v8[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_38;
      }
      char v31 = v35;
      void v8[2] = v30;
      sub_21471ED54(v24, v12);
LABEL_33:
      swift_bridgeObjectRelease();
      sub_21472C78C(v24, v12);
    }
  }
  int64_t v13 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v13 >= v6) {
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v13);
  ++v7;
  if (v14) {
    goto LABEL_22;
  }
  int64_t v7 = v13 + 1;
  if (v13 + 1 >= v6) {
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v7);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v7 = v13 + 2;
  if (v13 + 2 >= v6) {
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v7);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v7 = v13 + 3;
  if (v13 + 3 >= v6) {
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v7);
  if (v14)
  {
LABEL_22:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_5;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v6)
  {
LABEL_34:
    swift_release();
    return (uint64_t)v8;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v15);
  if (v14)
  {
    int64_t v7 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = sub_2147AD6B8();
  __break(1u);
  return result;
}

uint64_t SEState.description.getter()
{
  sub_2147AD348();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "FreeMemory: ");
  BYTE5(v3[1]) = 0;
  HIWORD(v3[1]) = -5120;
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC9SEService7SEState_freeMemory), sel_description);
  sub_2147ACF58();

  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  type metadata accessor for SEPackageDetails();
  swift_bridgeObjectRetain();
  sub_2147ACEB8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  sub_2147ACFC8();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  return v3[0];
}

uint64_t SEState.stringValue.getter()
{
  swift_getObjectType();
  sub_2147ACC28();
  swift_allocObject();
  sub_2147ACC18();
  sub_214794068(&qword_26781D530, v0, (void (*)(uint64_t))type metadata accessor for SEState);
  uint64_t v1 = sub_2147ACC08();
  unint64_t v3 = v2;
  uint64_t v4 = sub_2147ACCB8();
  sub_21472BBFC(v1, v3);
  swift_release();
  return v4;
}

uint64_t SEState.instances.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9SEService7SEState_infoDictionary);
  uint64_t v58 = v1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(v1 + 64);
  int64_t v59 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  int64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x263F8EE80];
  uint64_t v57 = v1;
  while (1)
  {
    while (1)
    {
      if (v4)
      {
        unint64_t v9 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
        unint64_t v10 = v9 | (v7 << 6);
      }
      else
      {
        int64_t v11 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_63;
        }
        if (v11 >= v59)
        {
LABEL_59:
          swift_release();
          sub_214750B28((uint64_t)v5);
          sub_214750B28((uint64_t)v6);
          return (uint64_t)v8;
        }
        unint64_t v12 = *(void *)(v58 + 8 * v11);
        ++v7;
        if (!v12)
        {
          int64_t v7 = v11 + 1;
          if (v11 + 1 >= v59) {
            goto LABEL_59;
          }
          unint64_t v12 = *(void *)(v58 + 8 * v7);
          if (!v12)
          {
            int64_t v7 = v11 + 2;
            if (v11 + 2 >= v59) {
              goto LABEL_59;
            }
            unint64_t v12 = *(void *)(v58 + 8 * v7);
            if (!v12)
            {
              int64_t v7 = v11 + 3;
              if (v11 + 3 >= v59) {
                goto LABEL_59;
              }
              unint64_t v12 = *(void *)(v58 + 8 * v7);
              if (!v12)
              {
                int64_t v13 = v11 + 4;
                if (v13 >= v59) {
                  goto LABEL_59;
                }
                unint64_t v12 = *(void *)(v58 + 8 * v13);
                if (!v12)
                {
                  while (1)
                  {
                    int64_t v7 = v13 + 1;
                    if (__OFADD__(v13, 1)) {
                      goto LABEL_64;
                    }
                    if (v7 >= v59) {
                      goto LABEL_59;
                    }
                    unint64_t v12 = *(void *)(v58 + 8 * v7);
                    ++v13;
                    if (v12) {
                      goto LABEL_21;
                    }
                  }
                }
                int64_t v7 = v13;
              }
            }
          }
        }
LABEL_21:
        unint64_t v4 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
      }
      unint64_t v14 = *(char **)(*(void *)(v1 + 56) + 8 * v10);
      unint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC9SEService16SEPackageDetails_type + 8];
      uint64_t v16 = &v14[OBJC_IVAR____TtC9SEService16SEPackageDetails_instances];
      if (v15 == 26) {
        break;
      }
      uint64_t v35 = *(void *)&v14[OBJC_IVAR____TtC9SEService16SEPackageDetails_type];
      swift_beginAccess();
      if (*(void *)v16 >> 62)
      {
        uint64_t v54 = v14;
        sub_214773278(v35, v15);
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_2147AD4B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v56 = *(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v36 = v14;
        sub_214773278(v35, v15);
      }
      sub_214750B28((uint64_t)v5);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v39 = sub_21477EA08(v35, v15);
      uint64_t v40 = v8[2];
      BOOL v41 = (v38 & 1) == 0;
      uint64_t v42 = v40 + v41;
      if (__OFADD__(v40, v41)) {
        goto LABEL_65;
      }
      char v43 = v38;
      if (v8[3] >= v42)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_21479064C();
        }
      }
      else
      {
        sub_214791D00(v42, isUniquelyReferenced_nonNull_native);
        unint64_t v44 = sub_21477EA08(v35, v15);
        if ((v43 & 1) != (v45 & 1)) {
          goto LABEL_68;
        }
        unint64_t v39 = v44;
      }
      uint64_t v1 = v57;
      swift_bridgeObjectRelease();
      if (v43)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v8[(v39 >> 6) + 8] |= 1 << v39;
        uint64_t v46 = (uint64_t *)(v8[6] + 16 * v39);
        uint64_t *v46 = v35;
        v46[1] = v15;
        *(void *)(v8[7] + 8 * v39) = 0;
        uint64_t v47 = v8[2];
        uint64_t v48 = v47 + 1;
        BOOL v49 = __OFADD__(v47, 1);
        swift_bridgeObjectRetain();
        if (v49) {
          goto LABEL_67;
        }
        void v8[2] = v48;
        sub_21471ED54(v35, v15);
        uint64_t v1 = v57;
      }
      uint64_t v50 = v8[7];
      swift_bridgeObjectRelease();
      uint64_t v51 = *(void *)(v50 + 8 * v39);
      BOOL v33 = __OFADD__(v51, v56);
      uint64_t v52 = v51 + v56;
      if (v33) {
        goto LABEL_66;
      }
      *(void *)(v50 + 8 * v39) = v52;

      sub_21472C78C(v35, v15);
      unint64_t v5 = sub_21474B384;
    }
    swift_beginAccess();
    if (*(void *)v16 >> 62)
    {
      uint64_t v53 = v14;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_2147AD4B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      char v18 = v14;
    }
    sub_214750B28((uint64_t)v6);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = sub_21477EA08(0, 25);
    uint64_t v22 = v8[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (v8[3] >= v24)
    {
      if ((v19 & 1) == 0) {
        sub_21479064C();
      }
    }
    else
    {
      sub_214791D00(v24, v19);
      unint64_t v26 = sub_21477EA08(0, 25);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_68;
      }
      unint64_t v21 = v26;
    }
    swift_bridgeObjectRelease();
    if (v25)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v8[(v21 >> 6) + 8] |= 1 << v21;
      *(_OWORD *)(v8[6] + 16 * v21) = xmmword_2147B80E0;
      *(void *)(v8[7] + 8 * v21) = 0;
      uint64_t v28 = v8[2];
      uint64_t v29 = v28 + 1;
      BOOL v30 = __OFADD__(v28, 1);
      swift_bridgeObjectRetain();
      if (v30) {
        goto LABEL_62;
      }
      void v8[2] = v29;
    }
    uint64_t v31 = v8[7];
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void *)(v31 + 8 * v21);
    BOOL v33 = __OFADD__(v32, v17);
    uint64_t v34 = v32 + v17;
    if (v33) {
      goto LABEL_61;
    }
    *(void *)(v31 + 8 * v21) = v34;

    int64_t v6 = sub_21474B384;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  uint64_t result = sub_2147AD6B8();
  __break(1u);
  return result;
}

id SEState.__allocating_init(seType:freeMemory:infoDictionary:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  int64_t v7 = objc_allocWithZone(v3);
  v7[OBJC_IVAR____TtC9SEService7SEState_seType] = *a1;
  *(void *)&v7[OBJC_IVAR____TtC9SEService7SEState_freeMemory] = a2;
  *(void *)&v7[OBJC_IVAR____TtC9SEService7SEState_infoDictionary] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, sel_init);
}

id SEState.init(seType:freeMemory:infoDictionary:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v3[OBJC_IVAR____TtC9SEService7SEState_seType] = *a1;
  *(void *)&v3[OBJC_IVAR____TtC9SEService7SEState_freeMemory] = a2;
  *(void *)&v3[OBJC_IVAR____TtC9SEService7SEState_infoDictionary] = a3;
  v9.receiver = v3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_21478EB04(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  unint64_t v5 = (void *)sub_2147ACF38();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SEState.debugDescription.getter()
{
  swift_getObjectType();
  sub_2147AD348();
  uint64_t v0 = SEState.description.getter();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0;
  sub_2147ACFC8();
  sub_2147ACC28();
  swift_allocObject();
  sub_2147ACC18();
  sub_214794068(&qword_26781D530, v1, (void (*)(uint64_t))type metadata accessor for SEState);
  uint64_t v2 = sub_2147ACC08();
  unint64_t v4 = v3;
  sub_2147ACCB8();
  sub_21472BBFC(v2, v4);
  swift_release();
  sub_2147ACFC8();
  swift_bridgeObjectRelease();
  return v6;
}

Swift::Void __swiftcall SEState.encode(with:)(NSCoder with)
{
  switch(*(unsigned char *)(v1 + OBJC_IVAR____TtC9SEService7SEState_seType))
  {
    case 0:
      __break(1u);
      swift_unexpectedError();
      __break(1u);
      JUMPOUT(0x21478F070);
    default:
      unint64_t v3 = (void *)sub_2147ACF38();
      swift_bridgeObjectRelease();
      unint64_t v4 = (void *)sub_2147ACF38();
      [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

      id v5 = *(id *)(v1 + OBJC_IVAR____TtC9SEService7SEState_freeMemory);
      uint64_t v6 = (void *)sub_2147ACF38();
      [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_21478D8CC(v7);
      swift_bridgeObjectRelease();
      if (*(void *)(v8 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781DBF0);
        uint64_t v9 = sub_2147AD4E8();
      }
      else
      {
        uint64_t v9 = MEMORY[0x263F8EE80];
      }
      uint64_t v13 = v9;
      unint64_t v10 = (void *)swift_bridgeObjectRetain();
      sub_21478FBC0(v10, 1, &v13);
      swift_bridgeObjectRelease();
      sub_2147481BC();
      type metadata accessor for SEPackageDetails();
      sub_214794068((unint64_t *)&qword_26781D360, 255, (void (*)(uint64_t))sub_2147481BC);
      int64_t v11 = (void *)sub_2147ACE98();
      swift_release();
      unint64_t v12 = (void *)sub_2147ACF38();
      [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];

      return;
  }
}

uint64_t SEState.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SEState.init(coder:)(a1);
}

uint64_t SEState.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_2147481BC();
  unint64_t v4 = v1;
  uint64_t v5 = sub_2147AD1E8();
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = (void *)v5;
  type metadata accessor for MemoryUsage();
  uint64_t v7 = sub_2147AD1E8();
  if (!v7)
  {
LABEL_9:

LABEL_10:
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v8 = (void *)v7;
  type metadata accessor for SEPackageDetails();
  uint64_t v9 = sub_2147AD1F8();
  if (!v9)
  {

    uint64_t v6 = v8;
    goto LABEL_9;
  }
  uint64_t v10 = v9;
  v11._uint64_t countAndFlagsBits = sub_2147ACF58();
  SEType.init(plistString:)(v11);
  if (!v12)
  {
    if (v20 != 6)
    {
      v4[OBJC_IVAR____TtC9SEService7SEState_seType] = v20;
      *(void *)&v4[OBJC_IVAR____TtC9SEService7SEState_freeMemory] = v8;
      id v13 = v8;
      uint64_t v14 = sub_21478DB00(v10);
      swift_bridgeObjectRelease();
      if (*(void *)(v14 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26781DBF8);
        uint64_t v15 = sub_2147AD4E8();
      }
      else
      {
        uint64_t v15 = MEMORY[0x263F8EE80];
      }
      uint64_t v20 = v15;
      uint64_t v17 = (void *)swift_bridgeObjectRetain();
      sub_21478FF50(v17, 1, &v20);

      swift_bridgeObjectRelease();
      *(void *)&v4[OBJC_IVAR____TtC9SEService7SEState_infoDictionary] = v20;

      v19.receiver = v4;
      v19.super_class = ObjectType;
      id v16 = objc_msgSendSuper2(&v19, sel_init);

      return (uint64_t)v16;
    }
    __break(1u);
  }
  swift_unexpectedError();
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t static SEState.supportsSecureCoding.getter()
{
  return 1;
}

id SEState.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SEState.init()()
{
}

uint64_t sub_21478F438()
{
  uint64_t v1 = 0x6F6D654D65657266;
  if (*v0 != 1) {
    uint64_t v1 = 0x746369446F666E69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x657079546573;
  }
}

uint64_t sub_21478F4A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214793EE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21478F4C8(uint64_t a1)
{
  unint64_t v2 = sub_214793A18();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21478F504(uint64_t a1)
{
  unint64_t v2 = sub_214793A18();
  return MEMORY[0x270FA00B8](a1, v2);
}

id SEState.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SEState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781DC00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214793A18();
  sub_2147AD768();
  LOBYTE(v10) = *(unsigned char *)(v3 + OBJC_IVAR____TtC9SEService7SEState_seType);
  char v11 = 0;
  sub_214793A6C();
  sub_2147AD608();
  if (!v2)
  {
    uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC9SEService7SEState_freeMemory);
    char v11 = 1;
    type metadata accessor for MemoryUsage();
    sub_214794068(&qword_26781D940, 255, (void (*)(uint64_t))type metadata accessor for MemoryUsage);
    sub_2147AD608();
    uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC9SEService7SEState_infoDictionary);
    char v11 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DC20);
    sub_214793AC0();
    sub_2147AD608();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id SEState.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SEState.init(from:)(a1);
}

id SEState.init(from:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26781DC38);
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214793A18();
  uint64_t v7 = v1;
  sub_2147AD758();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    id v11 = v7;

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v4;
    char v17 = 0;
    sub_214793B70();
    uint64_t v9 = v13;
    sub_2147AD588();
    v7[OBJC_IVAR____TtC9SEService7SEState_seType] = v16;
    type metadata accessor for MemoryUsage();
    char v17 = 1;
    sub_214794068(&qword_26781D958, 255, (void (*)(uint64_t))type metadata accessor for MemoryUsage);
    sub_2147AD588();
    *(void *)&v7[OBJC_IVAR____TtC9SEService7SEState_freeMemory] = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26781DC20);
    char v17 = 2;
    sub_214793BC4();
    sub_2147AD588();
    *(void *)&v7[OBJC_IVAR____TtC9SEService7SEState_infoDictionary] = v16;

    v15.receiver = v7;
    v15.super_class = ObjectType;
    id v11 = objc_msgSendSuper2(&v15, sel_init);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v11;
}

id sub_21478FB4C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = SEState.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_21478FB9C(void *a1)
{
  return SEState.encode(to:)(a1);
}

void sub_21478FBC0(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = (void *)a1[4];
  uint64_t v8 = (void *)a1[5];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  id v10 = v7;
  id v11 = v8;
  unint64_t v13 = sub_21477EBE8((uint64_t)v10);
  uint64_t v14 = v9[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15)) {
    goto LABEL_23;
  }
  char v17 = v12;
  if (v9[3] >= v16)
  {
    if (a2)
    {
      if (v12) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_214791178(&qword_26781DBF0);
      if (v17) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
    uint64_t v23 = 8 * v13;
    *(void *)(v22[6] + v23) = v10;
    *(void *)(v22[7] + v23) = v11;
    uint64_t v24 = v22[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v22[2] = v26;
    uint64_t v27 = v4 - 1;
    if (!v27)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v28 = (void **)(a1 + 7);
    while (1)
    {
      uint64_t v29 = *v28;
      BOOL v30 = (void *)*a3;
      id v10 = *(v28 - 1);
      id v11 = v29;
      unint64_t v31 = sub_21477EBE8((uint64_t)v10);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v25 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v25) {
        break;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_214793748(v35, 1, &qword_26781DBF0);
        unint64_t v31 = sub_21477EBE8((uint64_t)v10);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      char v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = 8 * v31;
      *(void *)(v38[6] + v39) = v10;
      *(void *)(v38[7] + v39) = v11;
      uint64_t v40 = v38[2];
      BOOL v25 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v25) {
        goto LABEL_24;
      }
      v38[2] = v41;
      v28 += 2;
      if (!--v27) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_214793748(v16, a2 & 1, &qword_26781DBF0);
  unint64_t v18 = sub_21477EBE8((uint64_t)v10);
  if ((v17 & 1) == (v19 & 1))
  {
    unint64_t v13 = v18;
    if ((v17 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_2147481BC();
  sub_2147AD6B8();
  __break(1u);
LABEL_26:
  sub_2147AD348();
  sub_2147ACFC8();
  sub_2147481BC();
  sub_2147AD3F8();
  sub_2147ACFC8();
  sub_2147AD4A8();
  __break(1u);
}

void sub_21478FF50(void *a1, char a2, void *a3)
{
  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v43 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = (void *)a1[6];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  id v10 = v8;
  unint64_t v12 = sub_21477EA80(v7, v6);
  uint64_t v13 = v9[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (v9[3] >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_214790E14();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    id v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    uint64_t v22 = (uint64_t *)(v21[6] + 16 * v12);
    uint64_t *v22 = v7;
    v22[1] = v6;
    *(void *)(v21[7] + 8 * v12) = v10;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v21[2] = v25;
    uint64_t v26 = v43 - 1;
    if (v43 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v27 = (void **)(a1 + 9);
    while (1)
    {
      uint64_t v29 = (uint64_t)*(v27 - 2);
      uint64_t v28 = (uint64_t)*(v27 - 1);
      BOOL v30 = *v27;
      unint64_t v31 = (void *)*a3;
      swift_bridgeObjectRetain();
      id v10 = v30;
      unint64_t v32 = sub_21477EA80(v29, v28);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v24 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v24) {
        break;
      }
      char v37 = v33;
      if (v31[3] < v36)
      {
        sub_214792F54(v36, 1);
        unint64_t v32 = sub_21477EA80(v29, v28);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      uint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
      *uint64_t v40 = v29;
      v40[1] = v28;
      *(void *)(v39[7] + 8 * v32) = v10;
      uint64_t v41 = v39[2];
      BOOL v24 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v24) {
        goto LABEL_24;
      }
      v39[2] = v42;
      v27 += 3;
      if (!--v26) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_214792F54(v15, a2 & 1);
  uint64_t v17 = sub_21477EA80(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    char v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D430);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_2147AD6B8();
  __break(1u);
LABEL_26:
  sub_2147AD348();
  sub_2147ACFC8();
  sub_2147AD3F8();
  sub_2147ACFC8();
  sub_2147AD4A8();
  __break(1u);
}

void *sub_2147902E0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DCA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2147AD4C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    sub_21471ED54(v19, *((unint64_t *)&v19 + 1));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_214790498()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DC98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2147AD4C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    sub_21471ED54(v19, *((unint64_t *)&v19 + 1));
    id result = v17;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21479064C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D380);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2147AD4C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)sub_21471ED54(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2147907FC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D680);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2147AD4C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2147909AC()
{
  return sub_214791178(&qword_26781DC90);
}

id sub_2147909B8()
{
  return sub_214791178((uint64_t *)&unk_26781D580);
}

id sub_2147909C4()
{
  uint64_t v1 = sub_2147ACD88();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D390);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_2147AD4C8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_214790C5C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781DCB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2147AD4C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_214790E14()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DBF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2147AD4C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_214790FC8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D568);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2147AD4C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)sub_21471ED54(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_214791178(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2147AD4C8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    long long v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_214791318(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DCA0);
  uint64_t v6 = sub_2147AD4D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_22;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_42;
    }
    if (v16 >= v31) {
      break;
    }
    unint64_t v17 = v32[v16];
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v31) {
        break;
      }
      unint64_t v17 = v32[v12];
      if (!v17)
      {
        int64_t v18 = v16 + 2;
        if (v18 >= v31) {
          break;
        }
        unint64_t v17 = v32[v18];
        if (!v17)
        {
          while (1)
          {
            int64_t v12 = v18 + 1;
            if (__OFADD__(v18, 1)) {
              goto LABEL_43;
            }
            if (v12 >= v31) {
              goto LABEL_36;
            }
            unint64_t v17 = v32[v12];
            ++v18;
            if (v17) {
              goto LABEL_21;
            }
          }
        }
        int64_t v12 = v18;
      }
    }
LABEL_21:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_22:
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    long long v33 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v15);
    unint64_t v20 = *(void *)(*(void *)(v5 + 48) + 16 * v15 + 8);
    if ((a2 & 1) == 0)
    {
      sub_21471ED54(v33, v20);
      swift_bridgeObjectRetain();
    }
    sub_2147AD728();
    switch(v20)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
      case 8uLL:
      case 9uLL:
      case 0xAuLL:
      case 0xBuLL:
      case 0xCuLL:
      case 0xDuLL:
      case 0xEuLL:
      case 0xFuLL:
      case 0x10uLL:
      case 0x11uLL:
      case 0x12uLL:
      case 0x13uLL:
      case 0x14uLL:
      case 0x15uLL:
      case 0x16uLL:
      case 0x17uLL:
      case 0x18uLL:
      case 0x19uLL:
        sub_2147AD738();
        break;
      default:
        sub_2147AD738();
        sub_2147ACFA8();
        break;
    }
    uint64_t v21 = sub_2147AD748();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        JUMPOUT(0x21479178CLL);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v11 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v13) = v33;
    *(void *)(*(void *)(v7 + 56) + 8 * v13) = v19;
    ++*(void *)(v7 + 16);
  }
LABEL_36:
  swift_release();
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2147917F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DC98);
  uint64_t v6 = sub_2147AD4D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v33 = v2;
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_44;
  }
  if (v16 >= v34)
  {
    swift_release();
    uint64_t v3 = v33;
    unint64_t v17 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_39:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v17, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v17 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v35 + 8 * v16);
    ++v12;
    if (v18) {
      goto LABEL_21;
    }
    int64_t v12 = v16 + 1;
    if (v16 + 1 >= v34) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v35 + 8 * v12);
    if (v18)
    {
LABEL_21:
      unint64_t v10 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
      unint64_t v20 = *(void **)(*(void *)(v5 + 56) + 8 * v15);
      long long v36 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v15);
      unint64_t v21 = *(void *)(*(void *)(v5 + 48) + 16 * v15 + 8);
      if ((a2 & 1) == 0)
      {
        sub_21471ED54(v36, v21);
        id v22 = v20;
      }
      sub_2147AD728();
      switch(v21)
      {
        case 0uLL:
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
        case 0x18uLL:
        case 0x19uLL:
          sub_2147AD738();
          break;
        default:
          sub_2147AD738();
          sub_2147ACFA8();
          break;
      }
      uint64_t v23 = sub_2147AD748();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v26);
        if (v30 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(_OWORD *)(*(void *)(v7 + 48) + 16 * v13) = v36;
          *(void *)(*(void *)(v7 + 56) + 8 * v13) = v20;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      JUMPOUT(0x214791C74);
    }
    int64_t v19 = v16 + 2;
    if (v19 < v34)
    {
      unint64_t v18 = *(void *)(v35 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          int64_t v12 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_45;
          }
          if (v12 >= v34) {
            goto LABEL_36;
          }
          unint64_t v18 = *(void *)(v35 + 8 * v12);
          ++v19;
          if (v18) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v19;
      goto LABEL_21;
    }
LABEL_36:
    swift_release();
    uint64_t v3 = v33;
    if (a2) {
      goto LABEL_39;
    }
  }
LABEL_43:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t type metadata accessor for SEState()
{
  return self;
}

uint64_t sub_214791D00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D380);
  uint64_t v6 = sub_2147AD4D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v32 = v2;
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_44;
  }
  if (v16 >= v33)
  {
    swift_release();
    uint64_t v3 = v32;
    unint64_t v17 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_39:
      uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
      if (v30 >= 64) {
        bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v17 = -1 << v30;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v34 + 8 * v16);
    ++v12;
    if (v18) {
      goto LABEL_21;
    }
    int64_t v12 = v16 + 1;
    if (v16 + 1 >= v33) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v34 + 8 * v12);
    if (v18)
    {
LABEL_21:
      unint64_t v10 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      long long v35 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v15);
      unint64_t v21 = *(void *)(*(void *)(v5 + 48) + 16 * v15 + 8);
      if ((a2 & 1) == 0) {
        sub_21471ED54(v35, v21);
      }
      sub_2147AD728();
      switch(v21)
      {
        case 0uLL:
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
        case 0x18uLL:
        case 0x19uLL:
          sub_2147AD738();
          break;
        default:
          sub_2147AD738();
          sub_2147ACFA8();
          break;
      }
      uint64_t v22 = sub_2147AD748();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = v22 & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
        if (v29 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v29)) + (v25 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(_OWORD *)(*(void *)(v7 + 48) + 16 * v13) = v35;
          *(void *)(*(void *)(v7 + 56) + 8 * v13) = v20;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      JUMPOUT(0x21479217CLL);
    }
    int64_t v19 = v16 + 2;
    if (v19 < v33)
    {
      unint64_t v18 = *(void *)(v34 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          int64_t v12 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_45;
          }
          if (v12 >= v33) {
            goto LABEL_36;
          }
          unint64_t v18 = *(void *)(v34 + 8 * v12);
          ++v19;
          if (v18) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v19;
      goto LABEL_21;
    }
LABEL_36:
    swift_release();
    uint64_t v3 = v32;
    if (a2) {
      goto LABEL_39;
    }
  }
LABEL_43:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2147921E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781D680);
  char v37 = a2;
  uint64_t v6 = sub_2147AD4D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_2147AD728();
    sub_2147ACFA8();
    uint64_t result = sub_2147AD748();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2147924F0(uint64_t a1, char a2)
{
  return sub_214793748(a1, a2, &qword_26781DC90);
}

uint64_t sub_2147924FC(uint64_t a1, char a2)
{
  return sub_214793748(a1, a2, (uint64_t *)&unk_26781D580);
}

uint64_t sub_214792508(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2147ACD88();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D390);
  int v46 = a2;
  uint64_t v10 = sub_2147AD4D8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_214794068((unint64_t *)&unk_26781D550, 255, MEMORY[0x263F07508]);
    uint64_t result = sub_2147ACED8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_214792930(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DCA8);
  uint64_t v6 = sub_2147AD4D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v33 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0)
    {
      sub_21472BBA4(v34, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
      swift_bridgeObjectRetain();
    }
    sub_2147AD728();
    sub_2147ACCE8();
    uint64_t result = sub_2147AD748();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v34;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v23, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214792C3C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26781DCB0);
  char v36 = a2;
  uint64_t v6 = sub_2147AD4D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2147AD728();
    sub_2147ACFA8();
    uint64_t result = sub_2147AD748();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214792F54(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781DBF8);
  char v38 = a2;
  uint64_t v6 = sub_2147AD4D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_2147AD728();
    sub_2147ACFA8();
    uint64_t result = sub_2147AD748();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214793264(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781D568);
  uint64_t v6 = sub_2147AD4D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v32 = v2;
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_44;
  }
  if (v16 >= v33)
  {
    swift_release();
    uint64_t v3 = v32;
    unint64_t v17 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_39:
      uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
      if (v30 >= 64) {
        bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v17 = -1 << v30;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v34 + 8 * v16);
    ++v12;
    if (v18) {
      goto LABEL_21;
    }
    int64_t v12 = v16 + 1;
    if (v16 + 1 >= v33) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v34 + 8 * v12);
    if (v18)
    {
LABEL_21:
      unint64_t v10 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      long long v35 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v15);
      unint64_t v21 = *(void *)(*(void *)(v5 + 48) + 16 * v15 + 8);
      if ((a2 & 1) == 0) {
        sub_21471ED54(v35, v21);
      }
      sub_2147AD728();
      switch(v21)
      {
        case 0uLL:
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
        case 0x18uLL:
        case 0x19uLL:
          sub_2147AD738();
          break;
        default:
          sub_2147AD738();
          sub_2147ACFA8();
          break;
      }
      uint64_t v22 = sub_2147AD748();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = v22 & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
        if (v29 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v29)) + (v25 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(_OWORD *)(*(void *)(v7 + 48) + 16 * v13) = v35;
          *(void *)(*(void *)(v7 + 56) + 8 * v13) = v20;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      JUMPOUT(0x2147936E0);
    }
    int64_t v19 = v16 + 2;
    if (v19 < v33)
    {
      unint64_t v18 = *(void *)(v34 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          int64_t v12 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_45;
          }
          if (v12 >= v33) {
            goto LABEL_36;
          }
          unint64_t v18 = *(void *)(v34 + 8 * v12);
          ++v19;
          if (v18) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v19;
      goto LABEL_21;
    }
LABEL_36:
    swift_release();
    uint64_t v3 = v32;
    if (a2) {
      goto LABEL_39;
    }
  }
LABEL_43:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214793748(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = sub_2147AD4D8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    unint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    int64_t v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = sub_2147AD228();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  unint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

unint64_t sub_214793A18()
{
  unint64_t result = qword_26781DC08;
  if (!qword_26781DC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DC08);
  }
  return result;
}

unint64_t sub_214793A6C()
{
  unint64_t result = qword_26781DC10;
  if (!qword_26781DC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DC10);
  }
  return result;
}

unint64_t sub_214793AC0()
{
  unint64_t result = qword_26781DC28;
  if (!qword_26781DC28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781DC20);
    sub_214794068(&qword_26781DC30, 255, (void (*)(uint64_t))type metadata accessor for SEPackageDetails);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DC28);
  }
  return result;
}

unint64_t sub_214793B70()
{
  unint64_t result = qword_26781DC40;
  if (!qword_26781DC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DC40);
  }
  return result;
}

unint64_t sub_214793BC4()
{
  unint64_t result = qword_26781DC50;
  if (!qword_26781DC50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781DC20);
    sub_214794068((unint64_t *)&unk_26781DC58, 255, (void (*)(uint64_t))type metadata accessor for SEPackageDetails);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DC50);
  }
  return result;
}

uint64_t method lookup function for SEState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SEState);
}

uint64_t dispatch thunk of SEState.__allocating_init(seType:freeMemory:infoDictionary:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SEState.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SEState.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for SEState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214793DA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SEState.CodingKeys()
{
  return &type metadata for SEState.CodingKeys;
}

unint64_t sub_214793DE4()
{
  unint64_t result = qword_26781DC68;
  if (!qword_26781DC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DC68);
  }
  return result;
}

unint64_t sub_214793E3C()
{
  unint64_t result = qword_26781DC70;
  if (!qword_26781DC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DC70);
  }
  return result;
}

unint64_t sub_214793E94()
{
  unint64_t result = qword_26781DC78;
  if (!qword_26781DC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DC78);
  }
  return result;
}

uint64_t sub_214793EE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657079546573 && a2 == 0xE600000000000000;
  if (v2 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6D654D65657266 && a2 == 0xEA00000000007972 || (sub_2147AD668() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746369446F666E69 && a2 == 0xEE007972616E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2147AD668();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214794068(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

const char *SESFeature.RuntimeFlag.domain.getter()
{
  return "SecureElementService";
}

const char *SESFeature.RuntimeFlag.feature.getter()
{
  uint64_t v1 = "secDynamicSE";
  if (*v0 != 1) {
    uint64_t v1 = "secGDPR";
  }
  if (*v0) {
    return v1;
  }
  else {
    return "secureElementCredential";
  }
}

BOOL static SESFeature.RuntimeFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SESFeature.RuntimeFlag.hash(into:)()
{
  return sub_2147AD738();
}

uint64_t SESFeature.RuntimeFlag.hashValue.getter()
{
  return sub_2147AD748();
}

const char *sub_214794194()
{
  return "SecureElementService";
}

const char *sub_2147941A8()
{
  uint64_t v1 = "secDynamicSE";
  if (*v0 != 1) {
    uint64_t v1 = "secGDPR";
  }
  if (*v0) {
    return v1;
  }
  else {
    return "secureElementCredential";
  }
}

uint64_t static SESFeature.isEnabled(_:)(char *a1)
{
  char v1 = *a1;
  uint64_t v5 = &type metadata for SESFeature.RuntimeFlag;
  unint64_t v6 = sub_214794248();
  v4[0] = v1;
  char v2 = sub_2147ACD98();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_214794248()
{
  unint64_t result = qword_26781DCC0;
  if (!qword_26781DCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DCC0);
  }
  return result;
}

unint64_t sub_2147942A0()
{
  unint64_t result = qword_26781DCC8;
  if (!qword_26781DCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DCC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SESFeature()
{
  return &type metadata for SESFeature;
}

unsigned char *storeEnumTagSinglePayload for SESFeature.RuntimeFlag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2147943D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SESFeature.RuntimeFlag()
{
  return &type metadata for SESFeature.RuntimeFlag;
}

NSXPCInterface __swiftcall SERInterface()()
{
  objc_msgSend(self, sel_interfaceWithProtocol_, &unk_26C5771C8);
  uint64_t v0 = (void *)sub_2147ACF38();
  SESPrivateLogSERProtocolDetails(v0, &unk_26C5771C8, 0);

  sub_21472C6F4(0, &qword_26781C680);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26781C688);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2147B3E40;
  uint64_t v2 = type metadata accessor for ReservationState();
  *(void *)(v1 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781DCD0);
  *(void *)(v1 + 32) = v2;
  uint64_t v3 = type metadata accessor for Reservation();
  *(void *)(v1 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781DCD8);
  *(void *)(v1 + 64) = v3;
  uint64_t v4 = sub_21472C6F4(0, &qword_26781D370);
  *(void *)(v1 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6B8);
  *(void *)(v1 + 96) = v4;
  uint64_t v9 = sub_21472C6F4(0, (unint64_t *)&unk_26781D590);
  *(void *)(v1 + 152) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781DCE0);
  *(void *)(v1 + 128) = v9;
  uint64_t v8 = sub_21472C6F4(0, (unint64_t *)&qword_26781C5B0);
  *(void *)(v1 + 184) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6C0);
  *(void *)(v1 + 160) = v8;
  uint64_t v5 = sub_21472C6F4(0, (unint64_t *)&qword_26781D110);
  *(void *)(v1 + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781C6C8);
  *(void *)(v1 + 192) = v5;
  uint64_t v6 = sub_21472C6F4(0, &qword_26781DCE8);
  *(void *)(v1 + 248) = __swift_instantiateConcreteTypeFromMangledName(&qword_26781DCF0);
  *(void *)(v1 + 224) = v6;
  MEMORY[0x2166A74F0](v1);
  result.super.Class isa = (Class)sub_2147AD118();
  __break(1u);
  __break(1u);
  __break(1u);
  __break(1u);
  __break(1u);
  return result;
}

BOOL SEType.isEOS.getter()
{
  return *v0 > 2u;
}

SEService::SEType_optional __swiftcall SEType.init(hwType:)(Swift::Int hwType)
{
  if ((unint64_t)(hwType - 3) >= 7) {
    char v2 = 5;
  }
  else {
    char v2 = 0x3020202010500uLL >> (8 * (hwType - 3));
  }
  *uint64_t v1 = v2;
  return (SEService::SEType_optional)hwType;
}

uint64_t SEType.plistString.getter()
{
  unint64_t v1 = *v0;
  if (v1 > 3) {
    return 0x313242534F45;
  }
  else {
    return qword_2147B9420[v1];
  }
}

SEService::SEType_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SEType.init(plistString:)(Swift::String plistString)
{
  object = plistString._object;
  uint64_t countAndFlagsBits = plistString._countAndFlagsBits;
  uint64_t v4 = v1;
  uint64_t v5 = 3356496;
  char v6 = byte_26C560B18;
  uint64_t v7 = (void *)0xE300000000000000;
  uint64_t v8 = 3356496;
  switch(byte_26C560B18)
  {
    case 0:
      goto LABEL_8;
    case 1:
      goto LABEL_5;
    case 2:
      uint64_t v7 = (void *)0xE600000000000000;
      if (countAndFlagsBits != 0x303143333750) {
        goto LABEL_7;
      }
      goto LABEL_6;
    case 3:
      if (countAndFlagsBits != 5459781) {
        goto LABEL_7;
      }
      goto LABEL_6;
    default:
      uint64_t v7 = (void *)0xE600000000000000;
      uint64_t v8 = 0x313242534F45;
LABEL_5:
      if (v8 != countAndFlagsBits) {
        goto LABEL_7;
      }
LABEL_6:
      if (v7 == plistString._object)
      {
LABEL_46:
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
LABEL_7:
      char v9 = sub_2147AD668();
      swift_bridgeObjectRelease();
      if (v9)
      {
LABEL_48:
        result.value = swift_bridgeObjectRelease();
        goto LABEL_49;
      }
LABEL_8:
      char v6 = byte_26C560B19;
      unint64_t v10 = 0xE300000000000000;
      uint64_t v11 = 3356496;
      switch(byte_26C560B19)
      {
        case 0:
          goto LABEL_19;
        case 1:
          goto LABEL_14;
        case 2:
          unint64_t v10 = 0xE600000000000000;
          if (countAndFlagsBits != 0x303143333750) {
            goto LABEL_18;
          }
          goto LABEL_17;
        case 3:
          if (countAndFlagsBits == 5459781) {
            goto LABEL_17;
          }
          goto LABEL_18;
        default:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x313242534F45;
LABEL_14:
          if (v11 != countAndFlagsBits) {
            goto LABEL_18;
          }
LABEL_17:
          if ((void *)v10 == object) {
            goto LABEL_46;
          }
LABEL_18:
          char v12 = sub_2147AD668();
          swift_bridgeObjectRelease();
          if (v12) {
            goto LABEL_48;
          }
LABEL_19:
          char v6 = byte_26C560B1A;
          unint64_t v13 = 0xE300000000000000;
          uint64_t v14 = 3356496;
          switch(byte_26C560B1A)
          {
            case 0:
              goto LABEL_26;
            case 1:
              break;
            case 2:
              unint64_t v13 = 0xE600000000000000;
              uint64_t v14 = 0x303143333750;
              break;
            case 3:
              uint64_t v14 = 5459781;
              break;
            default:
              unint64_t v13 = 0xE600000000000000;
              uint64_t v14 = 0x313242534F45;
              break;
          }
          if (v14 == countAndFlagsBits && (void *)v13 == object) {
            goto LABEL_46;
          }
          char v15 = sub_2147AD668();
          swift_bridgeObjectRelease();
          if (v15) {
            goto LABEL_48;
          }
LABEL_26:
          char v6 = byte_26C560B1B;
          unint64_t v16 = 0xE300000000000000;
          uint64_t v17 = 3356496;
          switch(byte_26C560B1B)
          {
            case 0:
              goto LABEL_33;
            case 1:
              break;
            case 2:
              unint64_t v16 = 0xE600000000000000;
              uint64_t v17 = 0x303143333750;
              break;
            case 3:
              uint64_t v17 = 5459781;
              break;
            default:
              unint64_t v16 = 0xE600000000000000;
              uint64_t v17 = 0x313242534F45;
              break;
          }
          if (v17 == countAndFlagsBits && (void *)v16 == object) {
            goto LABEL_46;
          }
          char v18 = sub_2147AD668();
          swift_bridgeObjectRelease();
          if (v18) {
            goto LABEL_48;
          }
LABEL_33:
          char v6 = byte_26C560B1C;
          unint64_t v19 = 0xE300000000000000;
          uint64_t v20 = 3356496;
          switch(byte_26C560B1C)
          {
            case 0:
              goto LABEL_40;
            case 1:
              break;
            case 2:
              unint64_t v19 = 0xE600000000000000;
              uint64_t v20 = 0x303143333750;
              break;
            case 3:
              uint64_t v20 = 5459781;
              break;
            default:
              unint64_t v19 = 0xE600000000000000;
              uint64_t v20 = 0x313242534F45;
              break;
          }
          if (v20 == countAndFlagsBits && (void *)v19 == object) {
            goto LABEL_46;
          }
          char v21 = sub_2147AD668();
          swift_bridgeObjectRelease();
          if (v21) {
            goto LABEL_48;
          }
LABEL_40:
          char v6 = byte_26C560B1D;
          unint64_t v22 = 0xE300000000000000;
          switch(byte_26C560B1D)
          {
            case 0:
              goto LABEL_50;
            case 1:
              break;
            case 2:
              unint64_t v22 = 0xE600000000000000;
              uint64_t v5 = 0x303143333750;
              break;
            case 3:
              uint64_t v5 = 5459781;
              break;
            default:
              unint64_t v22 = 0xE600000000000000;
              uint64_t v5 = 0x313242534F45;
              break;
          }
          if (v5 == countAndFlagsBits && (void *)v22 == object) {
            goto LABEL_46;
          }
          char v23 = sub_2147AD668();
          swift_bridgeObjectRelease();
          if (v23) {
            goto LABEL_48;
          }
LABEL_50:
          result.value = swift_bridgeObjectRelease();
          char v6 = 6;
          break;
      }
LABEL_49:
      char *v4 = v6;
      return result;
  }
}

void *static SEType.allCases.getter()
{
  return &unk_26C560B48;
}

uint64_t SEType.rawValue.getter()
{
  return *v0 + 1;
}

void *static SEType.supportedPlatforms.getter()
{
  return &unk_26C560B20;
}

SEService::SEType_optional __swiftcall SEType.init(rawValue:)(Swift::Int rawValue)
{
  unint64_t v2 = 0x5040302010006uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 7) {
    LOBYTE(v2) = 6;
  }
  *unint64_t v1 = v2;
  return (SEService::SEType_optional)rawValue;
}

unint64_t sub_214795164()
{
  unint64_t result = qword_26781DD18;
  if (!qword_26781DD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DD18);
  }
  return result;
}

uint64_t sub_2147951B8()
{
  return sub_2147AD748();
}

uint64_t sub_214795200()
{
  return sub_2147AD738();
}

uint64_t sub_214795230()
{
  return sub_2147AD748();
}

SEService::SEType_optional sub_214795274(Swift::Int *a1)
{
  return SEType.init(rawValue:)(*a1);
}

void sub_21479527C(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t sub_21479528C()
{
  return sub_2147AD028();
}

uint64_t sub_2147952EC()
{
  return sub_2147AD018();
}

unint64_t sub_214795340()
{
  unint64_t result = qword_26781DD20;
  if (!qword_26781DD20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26781DD28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DD20);
  }
  return result;
}

void sub_21479539C(void *a1@<X8>)
{
  *a1 = &unk_26C560B48;
}

unsigned char *storeEnumTagSinglePayload for SEType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214795478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SEType()
{
  return &type metadata for SEType;
}

unint64_t sub_2147954B0()
{
  unint64_t result = qword_26781DD30;
  if (!qword_26781DD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26781DD30);
  }
  return result;
}

uint64_t SSEIsFeatureSupported(int a1)
{
  unsigned int v11 = 0;
  uint64_t v10 = 0;
  init();
  if (_hasSSE)
  {
    uint64_t v2 = SSEGetVersion(&v11);
    if (v2)
    {
      uint64_t v3 = v2;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEIsFeatureSupported_cold_4();
      }
    }
    else
    {
      uint64_t v3 = 0;
      switch(a1)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 8:
        case 9:
        case 10:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
          return v3;
        case 7:
        case 11:
        case 15:
        case 26:
        case 27:
        case 28:
          unsigned int v4 = HIWORD(v11);
          goto LABEL_8;
        case 12:
        case 25:
          BOOL v5 = v11 > 1;
          goto LABEL_26;
        case 13:
        case 14:
          BOOL v5 = v11 > 2;
          goto LABEL_26;
        case 16:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
          unsigned int v4 = v11 >> 18;
          goto LABEL_8;
        case 17:
        case 40:
          unsigned int v6 = v11;
          unsigned int v7 = 393215;
          goto LABEL_25;
        case 29:
        case 30:
        case 31:
          unsigned int v4 = v11 >> 17;
          goto LABEL_8;
        case 32:
        case 45:
        case 46:
        case 47:
        case 48:
          unsigned int v4 = v11 >> 19;
LABEL_8:
          if (v4) {
            return 0;
          }
          else {
            return 4294967279;
          }
        case 33:
          unsigned int v6 = v11;
          unsigned int v7 = 655359;
          goto LABEL_25;
        case 34:
          uint64_t DeviceFeatures = getDeviceFeatures(&v10);
          if (DeviceFeatures)
          {
            uint64_t v3 = DeviceFeatures;
            if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
              SSEIsFeatureSupported_cold_3();
            }
          }
          else if (v10)
          {
            return 0;
          }
          else
          {
            return 4294967279;
          }
          return v3;
        case 41:
        case 42:
          BOOL v5 = HIWORD(v11) > 4u;
          goto LABEL_26;
        case 43:
        case 44:
          unsigned int v6 = v11;
          unsigned int v7 = 458751;
          goto LABEL_25;
        case 49:
          unsigned int v6 = v11;
          unsigned int v7 = 589823;
LABEL_25:
          BOOL v5 = v6 > v7;
LABEL_26:
          if (v5) {
            uint64_t v3 = 0;
          }
          else {
            uint64_t v3 = 4294967279;
          }
          break;
        default:
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEIsFeatureSupported_cold_2();
          }
          return 4294967279;
      }
    }
  }
  else
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEIsFeatureSupported_cold_1();
    }
    return 4294967279;
  }
  return v3;
}

uint64_t SSEGetVersion(_DWORD *a1)
{
  if (SSEGetVersion_protocolVersion)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  uint64_t inputStruct = 0x153534563;
  unsigned int outputStruct = 0;
  uint64_t v3 = init();
  if (v3)
  {
    uint64_t v2 = v3;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetVersion_cold_4();
    }
  }
  else
  {
    size_t outputStructCnt = 4;
    uint64_t v4 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, &outputStruct, &outputStructCnt);
    if (!v4)
    {
      if (outputStructCnt == 4)
      {
        int v5 = outputStruct;
        if (outputStruct)
        {
          uint64_t v2 = 0;
          if (outputStruct >= 0xA0000) {
            int v5 = 655360;
          }
          SSEGetVersion_protocolVersion = v5;
          goto LABEL_10;
        }
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEGetVersion_cold_1();
        }
      }
      else if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
      {
        SSEGetVersion_cold_2();
      }
      uint64_t v2 = 4294967290;
      goto LABEL_10;
    }
    uint64_t v2 = v4;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetVersion_cold_3();
    }
  }
LABEL_10:
  if (a1) {
    *a1 = SSEGetVersion_protocolVersion;
  }
  return v2;
}

uint64_t getDeviceFeatures(void *a1)
{
  if (a1)
  {
    if (getDeviceFeatures_featuresValid)
    {
LABEL_10:
      uint64_t v5 = 0;
      *a1 = getDeviceFeatures_deviceFeatures;
      return v5;
    }
    unsigned int v10 = 0;
    uint64_t v2 = SSEGetVersion(&v10);
    if (v2)
    {
      uint64_t v5 = v2;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        getDeviceFeatures_cold_5();
      }
    }
    else
    {
      if (v10 < 0x30000)
      {
LABEL_9:
        getDeviceFeatures_featuresValid = 1;
        goto LABEL_10;
      }
      uint64_t outputStruct = 0;
      uint64_t inputStruct = 0x1E53534563;
      uint64_t v3 = init();
      if (v3)
      {
        uint64_t v5 = v3;
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          getDeviceFeatures_cold_4();
        }
      }
      else
      {
        size_t v7 = 8;
        uint64_t v4 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, &outputStruct, &v7);
        if (v4)
        {
          uint64_t v5 = v4;
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            getDeviceFeatures_cold_3();
          }
        }
        else
        {
          if (v7 == 8)
          {
            getDeviceFeatures_deviceFeatures = outputStruct;
            goto LABEL_9;
          }
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            getDeviceFeatures_cold_2();
          }
          return 4294967290;
        }
      }
    }
  }
  else
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getDeviceFeatures_cold_1();
    }
    return 4294967292;
  }
  return v5;
}

uint64_t init()
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if ((_initialized & 1) == 0)
  {
    if (isRestoreMode_onceToken != -1) {
      dispatch_once(&isRestoreMode_onceToken, &__block_literal_global_162);
    }
    if ((isRestoreMode_restoreMode & 1) != 0 || _skipSEAvailabilityCheck)
    {
      _hasSSE = 1;
    }
    else
    {
      if (getMGAnswers_onceToken != -1) {
        dispatch_once(&getMGAnswers_onceToken, &__block_literal_global_167);
      }
      _hasSSE = getMGAnswers_cachedHasSE;
      if (!getMGAnswers_cachedHasSE)
      {
        _initialized = 1;
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          init_cold_5();
        }
        goto LABEL_13;
      }
    }
    mach_port_t v1 = *MEMORY[0x263F0EC90];
    CFDictionaryRef v2 = IOServiceMatching("AppleSSE");
    io_service_t MatchingService = IOServiceGetMatchingService(v1, v2);
    if (!MatchingService)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        init_cold_1();
      }
      uint64_t v0 = 4294967276;
      goto LABEL_14;
    }
    io_object_t v4 = MatchingService;
    uint64_t v5 = IOServiceOpen(MatchingService, *MEMORY[0x263EF8960], 0, (io_connect_t *)&_connect);
    if (v5)
    {
      uint64_t v0 = v5;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        init_cold_4();
      }
      IOObjectRelease(v4);
      goto LABEL_14;
    }
    unsigned int v6 = IONotificationPortCreate(v1);
    _notifyport = (uint64_t)v6;
    if (v6) {
      goto LABEL_24;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      init_cold_3();
    }
    unsigned int v6 = (IONotificationPort *)_notifyport;
    if (_notifyport)
    {
LABEL_24:
      size_t v7 = dispatch_get_global_queue(21, 0);
      IONotificationPortSetDispatchQueue(v6, v7);

      if (IOServiceAddInterestNotification((IONotificationPortRef)_notifyport, v4, "IOGeneralInterest", (IOServiceInterestCallback)serviceNotificationHandler, 0, (io_object_t *)&_notifyobj)&& os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
      {
        init_cold_2();
      }
    }
    if (getMGAnswers_onceToken != -1) {
      dispatch_once(&getMGAnswers_onceToken, &__block_literal_global_167);
    }
    if (getMGAnswers_cachedIsInternal)
    {
      if (isRestoreMode_onceToken != -1) {
        dispatch_once(&isRestoreMode_onceToken, &__block_literal_global_162);
      }
      if ((isRestoreMode_restoreMode & 1) == 0)
      {
        _logFile = (uint64_t)fopen("/var/mobile/Library/Logs/AppleSSE.log", "a");
        if (_logFile)
        {
          if (MEMORY[0x2166A7F80]() < 1) {
            chmod("/var/mobile/Library/Logs/AppleSSE.log", 0x1B6u);
          }
          else {
            fputs("\n", (FILE *)_logFile);
          }
          v18[1] = 0;
          *(void *)unint64_t v19 = 0x4100000001;
          size_t v17 = 16;
          v18[0] = 0;
          sysctl(v19, 2u, v18, &v17, 0, 0);
          logLine("AppleSSE Log Starts - System Version %s", v8, v9, v10, v11, v12, v13, v14, (char)v18);
          logState(0, 0);
        }
      }
    }
    _initialized = 1;
    char v15 = dispatch_get_global_queue(21, 0);
    dispatch_async(v15, &__block_literal_global_10);

    IOObjectRelease(v4);
    return 0;
  }
  if (_hasSSE) {
    return 0;
  }
LABEL_13:
  uint64_t v0 = 4294967279;
LABEL_14:
  if (_notifyobj)
  {
    IOObjectRelease(_notifyobj);
    _notifyid obj = 0;
  }
  if (_notifyport)
  {
    IONotificationPortDestroy((IONotificationPortRef)_notifyport);
    _notifyport = 0;
  }
  if (_connect)
  {
    IOServiceClose(_connect);
    _connect = 0;
  }
  return v0;
}

uint64_t SSEGetHostChallenge(CFDataRef *a1)
{
  outputStruct[1] = *MEMORY[0x263EF8340];
  uint64_t inputStruct = 0;
  outputStruct[0] = 0;
  size_t v10 = 0;
  if (a1)
  {
    uint64_t v2 = init();
    if (v2)
    {
      uint64_t v8 = v2;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetHostChallenge_cold_5();
      }
    }
    else
    {
      LODWORD(inputStruct) = 1397966179;
      WORD2(inputStruct) = 2;
      size_t v10 = 8;
      uint64_t v3 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, outputStruct, &v10);
      if (v3)
      {
        uint64_t v8 = v3;
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEGetHostChallenge_cold_4();
        }
      }
      else if (v10 == 8)
      {
        CFDataRef v4 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const UInt8 *)outputStruct, 8);
        *a1 = v4;
        if (v4)
        {
          uint64_t v8 = 0;
        }
        else
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEGetHostChallenge_cold_2();
          }
          uint64_t v8 = 4294967291;
        }
      }
      else
      {
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEGetHostChallenge_cold_3();
        }
        uint64_t v8 = 4294967290;
      }
    }
  }
  else
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetHostChallenge_cold_1();
    }
    uint64_t v8 = 4294967292;
  }
  logCmdCall((uint64_t)"SSEGetHostChallenge", v8, 0, 0, 0, v5, v6, v7);
  return v8;
}

uint64_t logCmdCall(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a2 || a3) && _logFile)
  {
    logLine("%s() -> %d", a2, a3, a4, a5, a6, a7, a8, result);
    return logState(a4, a5);
  }
  return result;
}

uint64_t SSEAuthorize(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, _DWORD *a8, CFDataRef *a9)
{
  return authorize(0, a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, 0, 0, 0);
}

uint64_t authorize(int a1, int a2, const __CFData *a3, int a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, char a9, _DWORD *a10, CFDataRef *a11, CFDataRef *a12, CFDataRef *a13, CFTypeRef *a14)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  int v45 = a4;
  memset(v47, 0, 126);
  long long inputStruct = 0u;
  CFTypeRef cf = 0;
  size_t outputStructCnt = 0;
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_1();
    }
    goto LABEL_76;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_2();
    }
    goto LABEL_76;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_3();
    }
    goto LABEL_76;
  }
  if (!a7)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_4();
    }
    goto LABEL_76;
  }
  if (!a8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_5();
    }
    goto LABEL_76;
  }
  if (!a10)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_6();
    }
    goto LABEL_76;
  }
  if (!a11)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_7();
    }
    goto LABEL_76;
  }
  if (a1)
  {
    if (a12)
    {
      if (a13) {
        goto LABEL_11;
      }
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        authorize_cold_9();
      }
    }
    else if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
    {
      authorize_cold_8();
    }
LABEL_76:
    unint64_t v25 = 0;
LABEL_77:
    uint64_t CertificatesFromBuffer = 4294967292;
    goto LABEL_78;
  }
LABEL_11:
  int64_t v41 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x722A5B9EuLL);
  if (!v41)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_10();
    }
    unint64_t v25 = 0;
    goto LABEL_92;
  }
  uint64_t v22 = init();
  if (v22)
  {
    uint64_t CertificatesFromBuffer = v22;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_24();
    }
    goto LABEL_61;
  }
  if (a9 == 2 && a1)
  {
    uint64_t v23 = SSEIsFeatureSupported(7);
    if (v23)
    {
      uint64_t CertificatesFromBuffer = v23;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        authorize_cold_23();
      }
      goto LABEL_61;
    }
    uint64_t v24 = baaPrepare();
    if (v24)
    {
      uint64_t CertificatesFromBuffer = v24;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        authorize_cold_22();
      }
      goto LABEL_61;
    }
  }
  LODWORD(inputStruct) = 1397966179;
  WORD2(inputStruct) = 3;
  DWORD2(inputStruct) = a2;
  if ((unint64_t)CFDataGetLength(a3) >= 0x41)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_11();
    }
    goto LABEL_60;
  }
  v49.length = CFDataGetLength(a3);
  v49.location = 0;
  CFDataGetBytes(a3, v49, (UInt8 *)v47);
  HIDWORD(inputStruct) = CFDataGetLength(a3);
  LODWORD(v47[4]) = a4;
  if ((unint64_t)CFDataGetLength(a5) >= 0x19)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_12();
    }
LABEL_60:
    uint64_t CertificatesFromBuffer = 4294967292;
LABEL_61:
    unint64_t v25 = v41;
    goto LABEL_78;
  }
  v50.length = CFDataGetLength(a5);
  v50.location = 0;
  CFDataGetBytes(a5, v50, (UInt8 *)&v47[4] + 4);
  if (CFDataGetLength(a6) != 8)
  {
    unint64_t v25 = v41;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_21();
    }
    goto LABEL_77;
  }
  v51.length = CFDataGetLength(a6);
  v51.location = 0;
  CFDataGetBytes(a6, v51, (UInt8 *)&v47[5] + 12);
  unint64_t v25 = v41;
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_20();
    }
    goto LABEL_77;
  }
  v52.length = CFDataGetLength(a7);
  v52.location = 0;
  CFDataGetBytes(a7, v52, (UInt8 *)&v47[6] + 4);
  if (CFDataGetLength(a8) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_19();
    }
    goto LABEL_77;
  }
  v53.length = CFDataGetLength(a8);
  v53.location = 0;
  CFDataGetBytes(a8, v53, (UInt8 *)&v47[6] + 12);
  *(void *)((char *)&v47[7] + 4) = 0;
  if (a1)
  {
    BYTE12(v47[7]) = 1;
    BYTE13(v47[7]) = a9;
  }
  size_t outputStructCnt = 0x4000;
  uint64_t v26 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 0x8EuLL, v41, &outputStructCnt);
  if (v26)
  {
    uint64_t CertificatesFromBuffer = v26;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_18();
    }
    goto LABEL_78;
  }
  CFAllocatorRef v27 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFDataRef v28 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v41 + 4, 8);
  if (!v28)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_13();
    }
    goto LABEL_92;
  }
  CFDataRef v29 = v28;
  if (!a1)
  {
    uint64_t CertificatesFromBuffer = 0;
    *a10 = *(_DWORD *)v41;
    *a11 = v28;
    goto LABEL_35;
  }
  CFIndex v30 = *((unsigned int *)v41 + 3);
  if (outputStructCnt < v30 + (unint64_t)*((unsigned int *)v41 + 4) + 20)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_14();
    }
    CFRelease(v29);
    uint64_t CertificatesFromBuffer = 4294967290;
    goto LABEL_78;
  }
  CFDataRef v31 = CFDataCreate(v27, v41 + 20, v30);
  if (!v31)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_15();
    }
    CFRelease(v29);
LABEL_92:
    uint64_t CertificatesFromBuffer = 4294967291;
    goto LABEL_78;
  }
  CFDataRef v32 = v31;
  int64_t v33 = &v41[*((unsigned int *)v41 + 3) + 20];
  CFDataRef v34 = CFDataCreate(v27, v33, *((unsigned int *)v41 + 4));
  CFDataRef v35 = v34;
  if (v34)
  {
    if (!a14)
    {
      uint64_t CertificatesFromBuffer = 0;
      *a10 = *(_DWORD *)v41;
      *a11 = v29;
      *a12 = v32;
      *a13 = v34;
      goto LABEL_35;
    }
    int v42 = 0;
    uint64_t CertificatesFromBuffer = getCertificatesFromBuffer((int *)&v33[*((unsigned int *)v41 + 4)], (unint64_t)&v41[outputStructCnt], &cf, &v42);
    if (!CertificatesFromBuffer)
    {
      *a10 = *(_DWORD *)v41;
      *a11 = v29;
      *a12 = v32;
      *a13 = v35;
      *a14 = cf;
LABEL_35:
      free(v25);
      goto LABEL_36;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_17();
    }
  }
  else
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorize_cold_16();
    }
    uint64_t CertificatesFromBuffer = 4294967291;
  }
  CFRelease(v29);
  CFRelease(v32);
  if (v35) {
    CFRelease(v35);
  }
LABEL_78:
  if (cf) {
    CFRelease(cf);
  }
  if (v25) {
    goto LABEL_35;
  }
LABEL_36:
  logCmdCall((uint64_t)"authorize", CertificatesFromBuffer, 0, (uint64_t)&v45, (uint64_t)&v47[4] + 4, v37, v38, v39);
  return CertificatesFromBuffer;
}

uint64_t SSEAuthorize(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, char a8, _DWORD *a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12, CFTypeRef *a13)
{
  return authorize(1, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t SSEAuthorizeWithPIN(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, _DWORD *a8, CFDataRef *a9, CFDataRef *a10)
{
  return authorizeWithPIN(0, a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, a10, 0, 0, 0);
}

uint64_t authorizeWithPIN(int a1, int a2, const __CFData *a3, int a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, char a9, _DWORD *a10, CFDataRef *a11, CFDataRef *a12, CFDataRef *a13, CFDataRef *a14, CFTypeRef *a15)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  int v48 = a4;
  memset(v50, 0, 126);
  long long inputStruct = 0u;
  CFTypeRef cf = 0;
  size_t outputStructCnt = 0;
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_1();
    }
    goto LABEL_83;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_2();
    }
    goto LABEL_83;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_3();
    }
    goto LABEL_83;
  }
  if (!a7)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_4();
    }
    goto LABEL_83;
  }
  if (!a8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_5();
    }
    goto LABEL_83;
  }
  if (!a10)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_6();
    }
    goto LABEL_83;
  }
  if (!a11)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_7();
    }
    goto LABEL_83;
  }
  if (!a12)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_8();
    }
    goto LABEL_83;
  }
  if (a1)
  {
    if (a13)
    {
      if (a14) {
        goto LABEL_12;
      }
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        authorizeWithPIN_cold_10();
      }
    }
    else if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
    {
      authorizeWithPIN_cold_9();
    }
LABEL_83:
    uint64_t v26 = 0;
LABEL_84:
    uint64_t CertificatesFromBuffer = 4294967292;
    goto LABEL_85;
  }
LABEL_12:
  unint64_t v44 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x468DD742uLL);
  if (!v44)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_11();
    }
    uint64_t v26 = 0;
    goto LABEL_78;
  }
  uint64_t v23 = init();
  if (v23)
  {
    uint64_t CertificatesFromBuffer = v23;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_26();
    }
    goto LABEL_93;
  }
  if (a9 == 2 && a1)
  {
    uint64_t v24 = SSEIsFeatureSupported(11);
    if (v24)
    {
      uint64_t CertificatesFromBuffer = v24;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        authorizeWithPIN_cold_25();
      }
      goto LABEL_93;
    }
    uint64_t v25 = baaPrepare();
    if (v25)
    {
      uint64_t CertificatesFromBuffer = v25;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        authorizeWithPIN_cold_24();
      }
      goto LABEL_93;
    }
  }
  strcpy((char *)&inputStruct, "cESS\b");
  DWORD2(inputStruct) = a2;
  if ((unint64_t)CFDataGetLength(a3) >= 0x41)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_12();
    }
    uint64_t CertificatesFromBuffer = 4294967292;
LABEL_93:
    uint64_t v26 = v44;
    goto LABEL_85;
  }
  v52.length = CFDataGetLength(a3);
  v52.location = 0;
  CFDataGetBytes(a3, v52, (UInt8 *)v50);
  HIDWORD(inputStruct) = CFDataGetLength(a3);
  LODWORD(v50[4]) = a4;
  if ((unint64_t)CFDataGetLength(a5) >= 0x19)
  {
    uint64_t v26 = v44;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_13();
    }
    goto LABEL_84;
  }
  v53.length = CFDataGetLength(a5);
  v53.location = 0;
  CFDataGetBytes(a5, v53, (UInt8 *)&v50[4] + 4);
  uint64_t v26 = v44;
  if (CFDataGetLength(a6) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_23();
    }
    goto LABEL_84;
  }
  v54.length = CFDataGetLength(a6);
  v54.location = 0;
  CFDataGetBytes(a6, v54, (UInt8 *)&v50[5] + 12);
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_22();
    }
    goto LABEL_84;
  }
  v55.length = CFDataGetLength(a7);
  v55.location = 0;
  CFDataGetBytes(a7, v55, (UInt8 *)&v50[6] + 4);
  if (CFDataGetLength(a8) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      authorizeWithPIN_cold_21();
    }
    goto LABEL_84;
  }
  v56.length = CFDataGetLength(a8);
  v56.location = 0;
  CFDataGetBytes(a8, v56, (UInt8 *)&v50[6] + 12);
  *(void *)((char *)&v50[7] + 4) = 0;
  if (a1)
  {
    BYTE12(v50[7]) = 1;
    BYTE13(v50[7]) = a9;
  }
  size_t outputStructCnt = 0x4000;
  uint64_t v27 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 0x8EuLL, v44, &outputStructCnt);
  if (!v27)
  {
    CFAllocatorRef v28 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFDataRef v29 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v44 + 4, 16);
    if (v29)
    {
      CFDataRef v30 = v29;
      CFDataRef v31 = CFDataCreate(v28, v44 + 20, 8);
      if (v31)
      {
        CFDataRef v32 = v31;
        if (!a1)
        {
          uint64_t CertificatesFromBuffer = 0;
          *a10 = *(_DWORD *)v44;
          *a11 = v30;
          *a12 = v31;
          goto LABEL_37;
        }
        CFIndex v33 = *((unsigned int *)v44 + 7);
        if (outputStructCnt < v33 + (unint64_t)*((unsigned int *)v44 + 8) + 36)
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            authorizeWithPIN_cold_16();
          }
          CFDataRef v38 = 0;
          CFDataRef v35 = 0;
          uint64_t CertificatesFromBuffer = 4294967290;
        }
        else
        {
          CFDataRef v34 = CFDataCreate(v28, v44 + 36, v33);
          if (v34)
          {
            CFDataRef v35 = v34;
            uint64_t v36 = &v44[*((unsigned int *)v44 + 7) + 36];
            CFDataRef v37 = CFDataCreate(v28, v36, *((unsigned int *)v44 + 8));
            if (v37)
            {
              CFDataRef v38 = v37;
              if (!a15)
              {
                uint64_t CertificatesFromBuffer = 0;
                *a10 = *(_DWORD *)v44;
                *a11 = v30;
                *a12 = v32;
                *a13 = v35;
                *a14 = v37;
                goto LABEL_37;
              }
              int v45 = 0;
              uint64_t CertificatesFromBuffer = getCertificatesFromBuffer((int *)&v36[*((unsigned int *)v44 + 8)], (unint64_t)&v44[outputStructCnt], &cf, &v45);
              if (!CertificatesFromBuffer)
              {
                *a10 = *(_DWORD *)v44;
                *a11 = v30;
                *a12 = v32;
                *a13 = v35;
                *a14 = v38;
                *a15 = cf;
LABEL_37:
                free(v26);
                goto LABEL_38;
              }
              if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                authorizeWithPIN_cold_19();
              }
              goto LABEL_106;
            }
            if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
              authorizeWithPIN_cold_18();
            }
            CFDataRef v38 = 0;
          }
          else
          {
            if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
              authorizeWithPIN_cold_17();
            }
            CFDataRef v38 = 0;
            CFDataRef v35 = 0;
          }
          uint64_t CertificatesFromBuffer = 4294967291;
        }
LABEL_106:
        CFRelease(v30);
        CFRelease(v32);
        if (v35) {
          CFRelease(v35);
        }
        if (v38) {
          CFRelease(v38);
        }
        goto LABEL_85;
      }
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        authorizeWithPIN_cold_15();
      }
      CFRelease(v30);
    }
    else if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
    {
      authorizeWithPIN_cold_14();
    }
LABEL_78:
    uint64_t CertificatesFromBuffer = 4294967291;
    goto LABEL_85;
  }
  uint64_t CertificatesFromBuffer = v27;
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    authorizeWithPIN_cold_20();
  }
LABEL_85:
  if (cf) {
    CFRelease(cf);
  }
  if (v26) {
    goto LABEL_37;
  }
LABEL_38:
  logCmdCall((uint64_t)"authorizeWithPIN", CertificatesFromBuffer, 0, (uint64_t)&v48, (uint64_t)&v50[4] + 4, v40, v41, v42);
  return CertificatesFromBuffer;
}

uint64_t SSEAuthorizeWithPIN(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, char a8, _DWORD *a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12, CFDataRef *a13, CFTypeRef *a14)
{
  return authorizeWithPIN(1, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t SSEAuthorizeAndSignECommerceBlob(const __CFData *a1, int a2, const __CFData *a3, char a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, const __CFData **a9)
{
  int v32 = a2;
  size_t outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_38;
  }
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_38;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_38;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_38;
  }
  if (!a7)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_38;
  }
  if (!a8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_38;
  }
  if (!a9)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
LABEL_38:
    uint64_t v25 = 4294967292;
    goto LABEL_23;
  }
  size_t v17 = malloc_type_calloc(0x4000uLL, 1uLL, 0x27E86296uLL);
  if (!v17)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_44;
  }
  char v18 = v17;
  uint64_t outputStruct = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x1855B243uLL);
  if (!outputStruct)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    free(v18);
LABEL_44:
    uint64_t v25 = 4294967291;
    goto LABEL_23;
  }
  uint64_t v19 = init();
  if (v19)
  {
    uint64_t v25 = v19;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_60;
  }
  *char v18 = 1397966179;
  *((_WORD *)v18 + 2) = 15;
  if ((unint64_t)CFDataGetLength(a1) >= 0x41)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_59;
  }
  v33.length = CFDataGetLength(a1);
  v33.location = 0;
  CFDataGetBytes(a1, v33, (UInt8 *)v18 + 12);
  void v18[2] = CFDataGetLength(a1);
  v18[19] = a2;
  if ((unint64_t)CFDataGetLength(a3) >= 0x19)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_59;
  }
  v34.length = CFDataGetLength(a3);
  v34.location = 0;
  CFDataGetBytes(a3, v34, (UInt8 *)v18 + 80);
  *((unsigned char *)v18 + 104) = a4;
  if (CFDataGetLength(a5) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_59;
  }
  v35.length = CFDataGetLength(a5);
  v35.location = 0;
  CFDataGetBytes(a5, v35, (UInt8 *)v18 + 105);
  if (CFDataGetLength(a6) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_59;
  }
  v36.length = CFDataGetLength(a6);
  v36.location = 0;
  CFDataGetBytes(a6, v36, (UInt8 *)v18 + 113);
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_59;
  }
  v37.length = CFDataGetLength(a7);
  v37.location = 0;
  CFDataGetBytes(a7, v37, (UInt8 *)v18 + 121);
  if ((unint64_t)CFDataGetLength(a8) >> 2 >= 0xFDD)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
LABEL_59:
    uint64_t v25 = 4294967292;
LABEL_60:
    char v21 = outputStruct;
    goto LABEL_22;
  }
  *(_DWORD *)((char *)v18 + 137) = CFDataGetLength(a8);
  v38.length = CFDataGetLength(a8);
  v38.location = 0;
  CFDataGetBytes(a8, v38, (UInt8 *)v18 + 141);
  *(void *)((char *)v18 + 129) = 0;
  size_t v20 = *(unsigned int *)((char *)v18 + 137) + 141;
  size_t outputStructCnt = 0x4000;
  char v21 = outputStruct;
  uint64_t v22 = IOConnectCallStructMethod(_connect, 0, v18, v20, outputStruct, &outputStructCnt);
  if (v22)
  {
    uint64_t v25 = v22;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_22;
  }
  if (outputStructCnt <= 3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
  }
  else
  {
    CFIndex v23 = *(unsigned int *)outputStruct;
    if (outputStructCnt == v23 + 4)
    {
      CFDataRef v24 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], outputStruct + 4, v23);
      if (v24)
      {
        uint64_t v25 = 0;
        *a9 = v24;
      }
      else
      {
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEAuthorizeAndSignECommerceBlob();
        }
        uint64_t v25 = 4294967291;
      }
      goto LABEL_22;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
  }
  uint64_t v25 = 4294967290;
LABEL_22:
  free(v18);
  free(v21);
LABEL_23:
  logCmdCall((uint64_t)"SSEAuthorizeAndSignECommerceBlob", v25, 0, (uint64_t)&v32, 0, v26, v27, v28);
  return v25;
}

uint64_t SSEAuthorizeAndSignECommerceBlob(const __CFData *a1, int a2, const __CFData *a3, char a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, unsigned __int8 a9, const __CFData **a10, const __CFData **a11, const __CFData **a12, const __CFArray **a13)
{
  int v53 = a2;
  CFTypeRef cf = 0;
  size_t outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_55;
  }
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_55;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_55;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_55;
  }
  if (!a7)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_55;
  }
  if (!a8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_55;
  }
  if (!a10)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_55;
  }
  if (!a11)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_55;
  }
  if (!a12)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
LABEL_55:
    char v21 = 0;
    CFIndex v23 = 0;
    uint64_t CertificatesFromBuffer = 4294967292;
    goto LABEL_106;
  }
  size_t v20 = (char *)malloc_type_calloc(0x4000uLL, 1uLL, 0xA48A32DEuLL);
  if (!v20)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    char v21 = 0;
    goto LABEL_61;
  }
  char v21 = v20;
  uint64_t v22 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xDC724F47uLL);
  if (!v22)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
LABEL_61:
    CFIndex v23 = 0;
LABEL_88:
    uint64_t CertificatesFromBuffer = 4294967291;
    goto LABEL_106;
  }
  CFIndex v23 = v22;
  uint64_t v24 = init();
  if (v24)
  {
    uint64_t CertificatesFromBuffer = v24;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_106;
  }
  if (a9 - 2 <= 2)
  {
    uint64_t v25 = SSEIsFeatureSupported((a9 - 2) + 15);
    if (v25)
    {
      uint64_t CertificatesFromBuffer = v25;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEAuthorizeAndSignECommerceBlob();
      }
      goto LABEL_106;
    }
    uint64_t v26 = baaPrepare();
    if (v26)
    {
      uint64_t CertificatesFromBuffer = v26;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEAuthorizeAndSignECommerceBlob();
      }
      goto LABEL_106;
    }
  }
  *(_DWORD *)char v21 = 1397966179;
  *((_WORD *)v21 + 2) = 17;
  if ((unint64_t)CFDataGetLength(a1) >= 0x41)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_76;
  }
  v54.length = CFDataGetLength(a1);
  v54.location = 0;
  CFDataGetBytes(a1, v54, (UInt8 *)v21 + 12);
  *((_DWORD *)v21 + 2) = CFDataGetLength(a1);
  *((_DWORD *)v21 + 19) = a2;
  if ((unint64_t)CFDataGetLength(a3) >= 0x19)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_76;
  }
  v55.length = CFDataGetLength(a3);
  v55.location = 0;
  CFDataGetBytes(a3, v55, (UInt8 *)v21 + 80);
  v21[104] = a4;
  if (CFDataGetLength(a5) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_76;
  }
  v56.length = CFDataGetLength(a5);
  v56.location = 0;
  CFDataGetBytes(a5, v56, (UInt8 *)v21 + 105);
  if (CFDataGetLength(a6) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_76;
  }
  v57.length = CFDataGetLength(a6);
  v57.location = 0;
  CFDataGetBytes(a6, v57, (UInt8 *)v21 + 113);
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_76;
  }
  v58.length = CFDataGetLength(a7);
  v58.location = 0;
  CFDataGetBytes(a7, v58, (UInt8 *)v21 + 121);
  if ((unint64_t)CFDataGetLength(a8) >= 0x3F7B)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
LABEL_76:
    uint64_t CertificatesFromBuffer = 4294967292;
    goto LABEL_106;
  }
  *(_DWORD *)(v21 + 129) = CFDataGetLength(a8);
  v59.length = CFDataGetLength(a8);
  v59.location = 0;
  CFDataGetBytes(a8, v59, (UInt8 *)v21 + 134);
  v21[133] = a9;
  size_t v27 = *(unsigned int *)(v21 + 129) + 134;
  size_t outputStructCnt = 0x4000;
  uint64_t v28 = IOConnectCallStructMethod(_connect, 0, v21, v27, v23, &outputStructCnt);
  if (v28)
  {
    uint64_t CertificatesFromBuffer = v28;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_106;
  }
  size_t v29 = outputStructCnt;
  if (outputStructCnt <= 0xB)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_92;
  }
  if (outputStructCnt > 0x4000)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_92;
  }
  CFDataRef v31 = (unsigned int *)(v23 + 12);
  unint64_t v30 = *(unsigned int *)v23;
  if (outputStructCnt - 12 < v30)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_92;
  }
  CFAllocatorRef v32 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFDataRef v33 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v23 + 12, v30);
  if (!v33)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    goto LABEL_88;
  }
  CFDataRef v34 = v33;
  unint64_t v35 = (unint64_t)&v23[v29];
  CFIndex v36 = *((unsigned int *)v23 + 1);
  CFRange v37 = (char *)v31 + *(unsigned int *)v23;
  if ((uint64_t)(v35 - (void)v37) < v36)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    CFRelease(v34);
LABEL_92:
    uint64_t CertificatesFromBuffer = 4294967290;
    goto LABEL_106;
  }
  CFDataRef v38 = CFDataCreate(v32, (const UInt8 *)v31 + *(unsigned int *)v23, v36);
  CFIndex v39 = *((unsigned int *)v23 + 2);
  uint64_t v40 = (const UInt8 *)&v37[*((unsigned int *)v23 + 1)];
  if ((uint64_t)(v35 - (void)v40) < v39)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
    CFDataRef v42 = 0;
    uint64_t CertificatesFromBuffer = 4294967290;
  }
  else
  {
    CFDataRef v41 = CFDataCreate(v32, v40, v39);
    CFDataRef v42 = v41;
    if (!a13)
    {
      uint64_t CertificatesFromBuffer = 0;
      *a10 = v34;
      *a11 = v38;
      *a12 = v41;
      goto LABEL_33;
    }
    uint64_t v43 = (int *)&v40[*((unsigned int *)v23 + 2)];
    int v50 = 0;
    uint64_t CertificatesFromBuffer = getCertificatesFromBuffer(v43, v35, &cf, &v50);
    if (!CertificatesFromBuffer)
    {
      *a10 = v34;
      *a11 = v38;
      *a12 = v42;
      *a13 = (const __CFArray *)cf;
LABEL_33:
      free(v21);
      goto LABEL_34;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignECommerceBlob();
    }
  }
  CFRelease(v34);
  if (v38) {
    CFRelease(v38);
  }
  if (v42) {
    CFRelease(v42);
  }
LABEL_106:
  if (cf) {
    CFRelease(cf);
  }
  if (v21) {
    goto LABEL_33;
  }
LABEL_34:
  if (v23) {
    free(v23);
  }
  logCmdCall((uint64_t)"SSEAuthorizeAndSignECommerceBlob", CertificatesFromBuffer, 0, (uint64_t)&v53, 0, v45, v46, v47);
  return CertificatesFromBuffer;
}

uint64_t baaPrepare()
{
  if (baaInit_onceToken != -1) {
    dispatch_once(&baaInit_onceToken, &__block_literal_global_203);
  }
  uint64_t v0 = (void *)_baaSupportClass;
  if (!_baaSupportClass) {
    return 4294967290;
  }
  return [v0 prepare];
}

uint64_t getCertificatesFromBuffer(int *a1, unint64_t a2, void *a3, _DWORD *a4)
{
  id v8 = (id)[MEMORY[0x263EFF980] array];
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getCertificatesFromBuffer_cold_1();
    }
    goto LABEL_32;
  }
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getCertificatesFromBuffer_cold_2();
    }
    goto LABEL_32;
  }
  if ((unint64_t)a1 > a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getCertificatesFromBuffer_cold_3();
    }
    goto LABEL_32;
  }
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getCertificatesFromBuffer_cold_4();
    }
    goto LABEL_32;
  }
  if (!a4)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getCertificatesFromBuffer_cold_5();
    }
LABEL_32:
    uint64_t v16 = 4294967292;
    goto LABEL_16;
  }
  if ((unint64_t)a1 < a2)
  {
    if (a2 - (unint64_t)a1 <= 3)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        getCertificatesFromBuffer_cold_6();
      }
LABEL_21:
      uint64_t v16 = 4294967290;
      goto LABEL_16;
    }
    int v9 = *a1;
    if (*a1)
    {
      int v10 = 0;
      uint64_t v11 = (unsigned int *)(a1 + 1);
      while (a2 - (unint64_t)v11 > 3)
      {
        unsigned int v14 = *v11;
        uint64_t v12 = v11 + 1;
        uint64_t v13 = v14;
        if ((uint64_t)(a2 - (void)v12) < v14)
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            getCertificatesFromBuffer_cold_8();
          }
          goto LABEL_21;
        }
        id v15 = (id)[MEMORY[0x263EFF8F8] dataWithBytes:v12 length:v13];
        [v8 addObject:v15];

        uint64_t v11 = (_DWORD *)((char *)v12 + v13);
        v10 += v13 + 4;
        if (!--v9) {
          goto LABEL_15;
        }
      }
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        getCertificatesFromBuffer_cold_7();
      }
      goto LABEL_21;
    }
  }
  int v10 = 0;
LABEL_15:
  uint64_t v16 = 0;
  *a3 = v8;
  *a4 = v10;
LABEL_16:

  return v16;
}

uint64_t SSEAuthorizeAndSignAPDU(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, CFDataRef *a9)
{
  int v32 = a3;
  size_t outputStructCnt = 0;
  if (a1 != 8 && !a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_41;
  }
  if (!a4)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_41;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_41;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_41;
  }
  if (!a7)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_41;
  }
  if (!a8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_41;
  }
  if (!a9)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
LABEL_41:
    uint64_t v25 = 4294967292;
    goto LABEL_26;
  }
  size_t v17 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xE7B35AA9uLL);
  if (!v17)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_47;
  }
  char v18 = v17;
  uint64_t outputStruct = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x939AC92CuLL);
  if (!outputStruct)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    free(v18);
LABEL_47:
    uint64_t v25 = 4294967291;
    goto LABEL_26;
  }
  uint64_t v19 = init();
  if (v19)
  {
    uint64_t v25 = v19;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_73;
  }
  *(_DWORD *)char v18 = 1397966179;
  *((_WORD *)v18 + 2) = 31;
  *((_DWORD *)v18 + 2) = a1;
  if (a1 != 8)
  {
    if ((unint64_t)CFDataGetLength(a2) >= 0x41)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEAuthorizeAndSignAPDU();
      }
      goto LABEL_72;
    }
    v33.length = CFDataGetLength(a2);
    v33.location = 0;
    CFDataGetBytes(a2, v33, v18 + 16);
    *((_DWORD *)v18 + 3) = CFDataGetLength(a2);
  }
  *((_DWORD *)v18 + 20) = a3;
  if ((unint64_t)CFDataGetLength(a4) >= 0x19)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_72;
  }
  v34.length = CFDataGetLength(a4);
  v34.location = 0;
  CFDataGetBytes(a4, v34, v18 + 84);
  if (CFDataGetLength(a5) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_72;
  }
  v35.length = CFDataGetLength(a5);
  v35.location = 0;
  CFDataGetBytes(a5, v35, v18 + 108);
  if (CFDataGetLength(a6) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_72;
  }
  v36.length = CFDataGetLength(a6);
  v36.location = 0;
  CFDataGetBytes(a6, v36, v18 + 116);
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_72;
  }
  v37.length = CFDataGetLength(a7);
  v37.location = 0;
  CFDataGetBytes(a7, v37, v18 + 124);
  if ((unint64_t)CFDataGetLength(a8) >= 0x3F79)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
LABEL_72:
    uint64_t v25 = 4294967292;
LABEL_73:
    char v21 = outputStruct;
    goto LABEL_25;
  }
  *((_DWORD *)v18 + 33) = CFDataGetLength(a8);
  v38.length = CFDataGetLength(a8);
  v38.location = 0;
  CFDataGetBytes(a8, v38, v18 + 136);
  size_t v20 = *((unsigned int *)v18 + 33) + 136;
  size_t outputStructCnt = 0x4000;
  char v21 = outputStruct;
  uint64_t v22 = IOConnectCallStructMethod(_connect, 0, v18, v20, outputStruct, &outputStructCnt);
  if (v22)
  {
    uint64_t v25 = v22;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_25;
  }
  if (outputStructCnt <= 3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
  }
  else
  {
    CFIndex v23 = *(unsigned int *)outputStruct;
    if (outputStructCnt == v23 + 4)
    {
      CFDataRef v24 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], outputStruct + 4, v23);
      if (v24)
      {
        uint64_t v25 = 0;
        *a9 = v24;
      }
      else
      {
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEAuthorizeAndSignAPDU();
        }
        uint64_t v25 = 4294967291;
      }
      goto LABEL_25;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
  }
  uint64_t v25 = 4294967290;
LABEL_25:
  free(v18);
  free(v21);
LABEL_26:
  logCmdCall((uint64_t)"SSEAuthorizeAndSignAPDU", v25, 0, (uint64_t)&v32, 0, v26, v27, v28);
  return v25;
}

uint64_t SSEGetActivationTimeout(int a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, unsigned __int16 *a6, const __CFData **a7)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  int v23 = a1;
  memset(inputStruct, 0, sizeof(inputStruct));
  __int16 v25 = 0;
  uint64_t outputStruct = 0;
  size_t v22 = 0;
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetActivationTimeout();
    }
    goto LABEL_39;
  }
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetActivationTimeout();
    }
    goto LABEL_39;
  }
  if (!a4)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetActivationTimeout();
    }
    goto LABEL_39;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetActivationTimeout();
    }
    goto LABEL_39;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetActivationTimeout();
    }
    goto LABEL_39;
  }
  if (!a7)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetActivationTimeout();
    }
    goto LABEL_39;
  }
  uint64_t v14 = init();
  if (!v14)
  {
    *(_DWORD *)long long inputStruct = 1397966179;
    *(_WORD *)&inputStruct[4] = 4;
    *(_DWORD *)&inputStruct[8] = a1;
    if ((unint64_t)CFDataGetLength(a2) >= 0x19)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetActivationTimeout();
      }
    }
    else
    {
      v28.length = CFDataGetLength(a2);
      v28.location = 0;
      CFDataGetBytes(a2, v28, (UInt8 *)((unint64_t)inputStruct | 0xC));
      if (CFDataGetLength(a3) == 8)
      {
        v29.length = CFDataGetLength(a3);
        v29.location = 0;
        CFDataGetBytes(a3, v29, &inputStruct[36]);
        if (CFDataGetLength(a4) == 8)
        {
          v30.length = CFDataGetLength(a4);
          v30.location = 0;
          CFDataGetBytes(a4, v30, &inputStruct[44]);
          if (CFDataGetLength(a5) == 8)
          {
            v31.length = CFDataGetLength(a5);
            v31.location = 0;
            CFDataGetBytes(a5, v31, &inputStruct[52]);
            *(void *)&inputStruct[60] = 0;
            size_t v22 = 10;
            uint64_t v15 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x44uLL, &outputStruct, &v22);
            if (v15)
            {
              uint64_t v20 = v15;
              if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                SSEGetActivationTimeout();
              }
            }
            else if (v22 == 10)
            {
              CFDataRef v16 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const UInt8 *)&outputStruct + 2, 8);
              *a7 = v16;
              if (v16)
              {
                uint64_t v20 = 0;
                *a6 = outputStruct;
              }
              else
              {
                if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                  SSEGetActivationTimeout();
                }
                uint64_t v20 = 4294967291;
              }
            }
            else
            {
              if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                SSEGetActivationTimeout();
              }
              uint64_t v20 = 4294967290;
            }
            goto LABEL_16;
          }
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEGetActivationTimeout();
          }
        }
        else if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
        {
          SSEGetActivationTimeout();
        }
      }
      else if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
      {
        SSEGetActivationTimeout();
      }
    }
LABEL_39:
    uint64_t v20 = 4294967292;
    goto LABEL_16;
  }
  uint64_t v20 = v14;
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    SSEGetActivationTimeout();
  }
LABEL_16:
  logCmdCall((uint64_t)"SSEGetActivationTimeout", v20, 0, (uint64_t)&v23, (unint64_t)inputStruct | 0xC, v17, v18, v19);
  return v20;
}

uint64_t SSEAuthorizeAndSignAPDU(unsigned int a1, const __CFData *a2, unsigned int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, unsigned __int8 a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12, CFTypeRef *a13)
{
  unsigned int v53 = a3;
  CFTypeRef cf = 0;
  size_t outputStructCnt = 0;
  if (a1 != 8 && !a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_58;
  }
  if (!a4)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_58;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_58;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_58;
  }
  if (!a7)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_58;
  }
  if (!a8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_58;
  }
  if (!a10)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_58;
  }
  if (!a11)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_58;
  }
  if (!a12)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
LABEL_58:
    size_t v22 = 0;
    uint64_t v26 = 0;
LABEL_59:
    uint64_t CertificatesFromBuffer = 4294967292;
    goto LABEL_110;
  }
  char v21 = (unsigned int *)malloc_type_calloc(0x4000uLL, 1uLL, 0x6BB45F19uLL);
  if (!v21)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    size_t v22 = 0;
    goto LABEL_65;
  }
  size_t v22 = v21;
  CFRange v49 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xDD1224E4uLL);
  if (!v49)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
LABEL_65:
    uint64_t v26 = 0;
LABEL_88:
    uint64_t CertificatesFromBuffer = 4294967291;
    goto LABEL_110;
  }
  uint64_t v23 = init();
  if (v23)
  {
    uint64_t CertificatesFromBuffer = v23;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_109;
  }
  if (a9 - 2 <= 2)
  {
    uint64_t v24 = SSEIsFeatureSupported((a9 - 2) + 38);
    if (v24)
    {
      uint64_t CertificatesFromBuffer = v24;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEAuthorizeAndSignAPDU();
      }
      goto LABEL_109;
    }
    uint64_t v25 = baaPrepare();
    if (v25)
    {
      uint64_t CertificatesFromBuffer = v25;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEAuthorizeAndSignAPDU();
      }
      goto LABEL_109;
    }
  }
  strcpy((char *)v22, "cESS ");
  v22[2] = a1;
  if (a1 != 8)
  {
    if ((unint64_t)CFDataGetLength(a2) >= 0x41)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEAuthorizeAndSignAPDU();
      }
      goto LABEL_108;
    }
    v54.length = CFDataGetLength(a2);
    v54.location = 0;
    CFDataGetBytes(a2, v54, (UInt8 *)v22 + 16);
    v22[3] = CFDataGetLength(a2);
  }
  v22[20] = a3;
  if ((unint64_t)CFDataGetLength(a4) >= 0x19)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
LABEL_108:
    uint64_t CertificatesFromBuffer = 4294967292;
LABEL_109:
    uint64_t v26 = v49;
    goto LABEL_110;
  }
  v55.length = CFDataGetLength(a4);
  v55.location = 0;
  CFDataGetBytes(a4, v55, (UInt8 *)v22 + 84);
  if (CFDataGetLength(a5) != 8)
  {
    uint64_t v26 = v49;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_59;
  }
  v56.length = CFDataGetLength(a5);
  v56.location = 0;
  CFDataGetBytes(a5, v56, (UInt8 *)v22 + 108);
  uint64_t v26 = v49;
  if (CFDataGetLength(a6) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_59;
  }
  v57.length = CFDataGetLength(a6);
  v57.location = 0;
  CFDataGetBytes(a6, v57, (UInt8 *)v22 + 116);
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_59;
  }
  v58.length = CFDataGetLength(a7);
  v58.location = 0;
  CFDataGetBytes(a7, v58, (UInt8 *)v22 + 124);
  if ((unint64_t)CFDataGetLength(a8) >> 3 >= 0x7EF)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_59;
  }
  v22[33] = CFDataGetLength(a8);
  v59.length = CFDataGetLength(a8);
  v59.location = 0;
  CFDataGetBytes(a8, v59, (UInt8 *)v22 + 137);
  *((unsigned char *)v22 + 136) = a9;
  size_t v27 = v22[33] + 137;
  size_t outputStructCnt = 0x4000;
  uint64_t v28 = IOConnectCallStructMethod(_connect, 0, v22, v27, v49, &outputStructCnt);
  if (v28)
  {
    uint64_t CertificatesFromBuffer = v28;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_110;
  }
  size_t v29 = outputStructCnt;
  if (outputStructCnt <= 0xB)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_92;
  }
  if (outputStructCnt > 0x4000)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_92;
  }
  CFRange v31 = (unsigned int *)(v49 + 12);
  unint64_t v30 = *(unsigned int *)v49;
  if (outputStructCnt - 12 < v30)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_92;
  }
  CFAllocatorRef v32 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFDataRef v33 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v49 + 12, v30);
  if (!v33)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    goto LABEL_88;
  }
  CFDataRef v34 = v33;
  unint64_t v35 = (unint64_t)&v49[v29];
  CFIndex v36 = *((unsigned int *)v49 + 1);
  CFRange v37 = (char *)v31 + *(unsigned int *)v49;
  if ((uint64_t)(v35 - (void)v37) < v36)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    CFRelease(v34);
LABEL_92:
    uint64_t CertificatesFromBuffer = 4294967290;
    goto LABEL_110;
  }
  CFDataRef v38 = CFDataCreate(v32, (const UInt8 *)v31 + *(unsigned int *)v49, v36);
  CFIndex v39 = *((unsigned int *)v49 + 2);
  uint64_t v40 = (const UInt8 *)&v37[*((unsigned int *)v49 + 1)];
  if ((uint64_t)(v35 - (void)v40) < v39)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
    CFDataRef v42 = 0;
    uint64_t CertificatesFromBuffer = 4294967290;
  }
  else
  {
    CFDataRef v41 = CFDataCreate(v32, v40, v39);
    CFDataRef v42 = v41;
    if (!a13)
    {
      uint64_t CertificatesFromBuffer = 0;
      *a10 = v34;
      *a11 = v38;
      *a12 = v41;
      goto LABEL_36;
    }
    uint64_t v43 = (int *)&v40[*((unsigned int *)v49 + 2)];
    int v50 = 0;
    uint64_t CertificatesFromBuffer = getCertificatesFromBuffer(v43, v35, &cf, &v50);
    if (!CertificatesFromBuffer)
    {
      *a10 = v34;
      *a11 = v38;
      *a12 = v42;
      *a13 = cf;
LABEL_36:
      free(v22);
      goto LABEL_37;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEAuthorizeAndSignAPDU();
    }
  }
  CFRelease(v34);
  if (v38) {
    CFRelease(v38);
  }
  if (v42) {
    CFRelease(v42);
  }
LABEL_110:
  if (cf) {
    CFRelease(cf);
  }
  if (v22) {
    goto LABEL_36;
  }
LABEL_37:
  if (v26) {
    free(v26);
  }
  logCmdCall((uint64_t)"SSEAuthorizeAndSignAPDU", CertificatesFromBuffer, 0, (uint64_t)&v53, 0, v45, v46, v47);
  return CertificatesFromBuffer;
}

uint64_t SSEUseEntangledAuthorizationRandom(char a1)
{
  char v10 = 0;
  uint64_t v9 = 0;
  uint64_t v2 = init();
  if (v2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEUseEntangledAuthorizationRandom_cold_2();
    }
  }
  else
  {
    strcpy((char *)&v9, "cESS!");
    char v10 = a1;
    uint64_t v3 = IOConnectCallStructMethod(_connect, 0, &v9, 9uLL, 0, 0);
    if (v3)
    {
      uint64_t v8 = v3;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEUseEntangledAuthorizationRandom_cold_1();
      }
      uint64_t v2 = v8;
    }
  }
  logCmdCall((uint64_t)"SSEUseEntangledAuthorizationRandom", v2, 0, 0, 0, v4, v5, v6);
  return v2;
}

uint64_t SSEGetAuthorizationRandom(int a1, const __CFData *a2, const __CFData **a3, const __CFData **a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v20 = a1;
  memset(inputStruct, 0, 44);
  outputStruct[0] = 0;
  outputStruct[1] = 0;
  uint64_t v22 = 0;
  size_t outputStructCnt = 0;
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAuthorizationRandom();
    }
    goto LABEL_22;
  }
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAuthorizationRandom();
    }
    goto LABEL_22;
  }
  if (!a4)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAuthorizationRandom();
    }
    goto LABEL_22;
  }
  uint64_t v8 = init();
  if (v8)
  {
    uint64_t v17 = v8;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAuthorizationRandom();
    }
    goto LABEL_11;
  }
  LODWORD(inputStruct[0]) = 1397966179;
  WORD2(inputStruct[0]) = 5;
  DWORD2(inputStruct[0]) = a1;
  if ((unint64_t)CFDataGetLength(a2) >= 0x19)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAuthorizationRandom();
    }
LABEL_22:
    uint64_t v17 = 4294967292;
    goto LABEL_11;
  }
  v25.length = CFDataGetLength(a2);
  v25.location = 0;
  CFDataGetBytes(a2, v25, (UInt8 *)((unint64_t)inputStruct | 0xC));
  *(void *)((char *)&inputStruct[2] + 4) = 0;
  size_t outputStructCnt = 24;
  uint64_t v9 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x2CuLL, outputStruct, &outputStructCnt);
  if (v9)
  {
    uint64_t v17 = v9;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAuthorizationRandom();
    }
  }
  else
  {
    if (outputStructCnt == 24)
    {
      CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFDataRef v11 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const UInt8 *)outputStruct, 16);
      if (v11)
      {
        CFDataRef v12 = v11;
        CFDataRef v13 = CFDataCreate(v10, (const UInt8 *)&v22, 8);
        if (v13)
        {
          uint64_t v17 = 0;
          *a3 = v12;
          *a4 = v13;
          goto LABEL_11;
        }
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEGetAuthorizationRandom();
        }
        CFRelease(v12);
      }
      else if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
      {
        SSEGetAuthorizationRandom();
      }
      uint64_t v17 = 4294967291;
      goto LABEL_11;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAuthorizationRandom();
    }
    uint64_t v17 = 4294967290;
  }
LABEL_11:
  logCmdCall((uint64_t)"SSEGetAuthorizationRandom", v17, 1, (uint64_t)&v20, (unint64_t)inputStruct | 0xC, v14, v15, v16);
  return v17;
}

uint64_t SSEGetEntangledAuthorizationRandom(int a1, const __CFData *a2, char a3, CFDataRef *a4, CFDataRef *a5)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  int v27 = a1;
  memset(inputStruct, 0, sizeof(inputStruct));
  size_t v26 = 0;
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetEntangledAuthorizationRandom_cold_1();
    }
    goto LABEL_23;
  }
  if (!a4)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetEntangledAuthorizationRandom_cold_2();
    }
    goto LABEL_23;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetEntangledAuthorizationRandom_cold_3();
    }
LABEL_23:
    uint64_t v21 = 4294967292;
    goto LABEL_16;
  }
  CFAllocatorRef v10 = (UInt8 *)malloc_type_calloc(0x108uLL, 1uLL, 0x2AD6A872uLL);
  if (v10)
  {
    CFDataRef v11 = v10;
    uint64_t v12 = init();
    if (v12)
    {
      uint64_t v21 = v12;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetEntangledAuthorizationRandom_cold_13();
      }
      goto LABEL_15;
    }
    strcpy(inputStruct, "cESS\"");
    *(_DWORD *)&inputStruct[8] = a1;
    if ((unint64_t)CFDataGetLength(a2) >= 0x19)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetEntangledAuthorizationRandom_cold_5();
      }
      uint64_t v21 = 4294967292;
      goto LABEL_15;
    }
    v30.length = CFDataGetLength(a2);
    v30.location = 0;
    CFDataGetBytes(a2, v30, (UInt8 *)((unint64_t)inputStruct | 0xC));
    inputStruct[36] = a3;
    size_t v26 = 264;
    uint64_t v13 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x25uLL, v11, &v26);
    if (v13)
    {
      uint64_t v21 = v13;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetEntangledAuthorizationRandom_cold_12();
      }
      goto LABEL_15;
    }
    size_t v14 = v26;
    if (v26 <= 7)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetEntangledAuthorizationRandom_cold_6();
      }
    }
    else if (v26 >= 0x109)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetEntangledAuthorizationRandom_cold_7();
      }
    }
    else
    {
      unint64_t v15 = *(unsigned int *)v11;
      if (v26 - 8 >= v15)
      {
        CFAllocatorRef v16 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFDataRef v17 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v11 + 8, v15);
        if (!v17)
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEGetEntangledAuthorizationRandom_cold_9();
          }
          uint64_t v21 = 4294967291;
          goto LABEL_15;
        }
        CFDataRef v18 = v17;
        CFIndex v19 = *((unsigned int *)v11 + 1);
        if ((uint64_t)(v14 - (*(unsigned int *)v11 + 8)) < v19)
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEGetEntangledAuthorizationRandom_cold_10();
          }
          uint64_t v21 = 4294967290;
        }
        else
        {
          CFDataRef v20 = CFDataCreate(v16, &v11[*(unsigned int *)v11 + 8], v19);
          if (v20)
          {
            uint64_t v21 = 0;
            *a4 = v18;
            *a5 = v20;
LABEL_15:
            free(v11);
            goto LABEL_16;
          }
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEGetEntangledAuthorizationRandom_cold_11();
          }
          uint64_t v21 = 4294967291;
        }
        CFRelease(v18);
        goto LABEL_15;
      }
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetEntangledAuthorizationRandom_cold_8();
      }
    }
    uint64_t v21 = 4294967290;
    goto LABEL_15;
  }
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    SSEGetEntangledAuthorizationRandom_cold_4();
  }
  uint64_t v21 = 4294967291;
LABEL_16:
  logCmdCall((uint64_t)"SSEGetEntangledAuthorizationRandom", v21, 1, (uint64_t)&v27, (unint64_t)inputStruct | 0xC, v22, v23, v24);
  return v21;
}

uint64_t SSEEffaceAuthorizationRandom()
{
  uint64_t inputStruct = 0;
  uint64_t v0 = init();
  if (v0)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEffaceAuthorizationRandom_cold_2();
    }
  }
  else
  {
    LODWORD(inputStruct) = 1397966179;
    WORD2(inputStruct) = 6;
    uint64_t v1 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, 0, 0);
    if (v1)
    {
      uint64_t v6 = v1;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEEffaceAuthorizationRandom_cold_1();
      }
      uint64_t v0 = v6;
    }
  }
  logCmdCall((uint64_t)"SSEEffaceAuthorizationRandom", v0, 1, 0, 0, v2, v3, v4);
  return v0;
}

uint64_t SSEEnableOffWristAuthorization(char a1, const __CFData *a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  memset(v12, 0, 77);
  uint64_t v4 = init();
  if (v4)
  {
    uint64_t v9 = v4;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEnableOffWristAuthorization_cold_3();
    }
  }
  else
  {
    strcpy((char *)v12, "cESS\n");
    BYTE8(v12[0]) = a1;
    if (!a2) {
      goto LABEL_5;
    }
    if ((unint64_t)CFDataGetLength(a2) < 0x41)
    {
      v14.length = CFDataGetLength(a2);
      v14.location = 0;
      CFDataGetBytes(a2, v14, (UInt8 *)((unint64_t)v12 | 0xD));
      *(_DWORD *)((char *)v12 + 9) = CFDataGetLength(a2);
LABEL_5:
      uint64_t v5 = IOConnectCallStructMethod(_connect, 0, v12, 0x4DuLL, 0, 0);
      uint64_t v9 = 0;
      if (v5)
      {
        uint64_t v11 = v5;
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEEnableOffWristAuthorization_cold_1();
        }
        uint64_t v9 = v11;
      }
      goto LABEL_6;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEnableOffWristAuthorization_cold_2();
    }
    uint64_t v9 = 4294967292;
  }
LABEL_6:
  logCmdCall((uint64_t)"SSEEnableOffWristAuthorization", v9, 0, 0, 0, v6, v7, v8);
  return v9;
}

uint64_t SSEIsOffWristAuthorizationEnabled(BOOL *a1)
{
  uint64_t inputStruct = 0;
  char outputStruct = 0;
  size_t outputStructCnt = 0;
  if (a1)
  {
    uint64_t v2 = init();
    if (v2)
    {
      uint64_t v7 = v2;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEIsOffWristAuthorizationEnabled_cold_4();
      }
    }
    else
    {
      strcpy((char *)&inputStruct, "cESS\v");
      size_t outputStructCnt = 1;
      uint64_t v3 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, &outputStruct, &outputStructCnt);
      if (v3)
      {
        uint64_t v7 = v3;
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEIsOffWristAuthorizationEnabled_cold_3();
        }
      }
      else if (outputStructCnt == 1)
      {
        uint64_t v7 = 0;
        *a1 = outputStruct != 0;
      }
      else
      {
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEIsOffWristAuthorizationEnabled_cold_2();
        }
        uint64_t v7 = 4294967290;
      }
    }
  }
  else
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEIsOffWristAuthorizationEnabled_cold_1();
    }
    uint64_t v7 = 4294967292;
  }
  logCmdCall((uint64_t)"SSEIsOffWristAuthorizationEnabled", v7, 0, 0, 0, v4, v5, v6);
  return v7;
}

uint64_t SSESetBlessedUser(uint64_t a1, const unsigned __int8 *a2)
{
  inputStruct[4] = *MEMORY[0x263EF8340];
  memset(inputStruct, 0, 28);
  if (a2)
  {
    uint64_t v4 = init();
    if (v4)
    {
      uint64_t v9 = v4;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSESetBlessedUser();
      }
    }
    else
    {
      LODWORD(inputStruct[0]) = 1397966179;
      WORD2(inputStruct[0]) = 14;
      LODWORD(inputStruct[1]) = a1;
      *(_OWORD *)((char *)&inputStruct[1] + 4) = *(_OWORD *)a2;
      uint64_t v5 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x1CuLL, 0, 0);
      if (v5)
      {
        uint64_t v9 = v5;
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSESetBlessedUser();
        }
      }
      else
      {
        if (baaInit_onceToken != -1) {
          dispatch_once(&baaInit_onceToken, &__block_literal_global_203);
        }
        if (_baaSupportClass) {
          [(id)_baaSupportClass setBlessedUser:a1 keybagUUID:a2];
        }
        uint64_t v9 = 0;
      }
    }
  }
  else
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSESetBlessedUser();
    }
    uint64_t v9 = 4294967292;
  }
  logCmdCall((uint64_t)"SSESetBlessedUser", v9, 0, 0, 0, v6, v7, v8);
  return v9;
}

uint64_t SSESetEffacementNotificationHandler(void *a1, void *a2)
{
  id v4 = a1;
  id v5 = a2;
  int v6 = init();
  uint64_t v7 = v6;
  if (v6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSESetEffacementNotificationHandler();
    }
  }
  else
  {
    objc_storeStrong((id *)&_effacemenNtfQueue, a1);
    uint64_t v8 = _Block_copy(v5);
    uint64_t v9 = (void *)_effacemenNtfHandler;
    _effacemenNtfHandler = (uint64_t)v8;
  }
  logCmdCall((uint64_t)"SSESetEffacementNotificationHandler", v7, 0, 0, 0, v10, v11, v12);

  return v7;
}

uint64_t SSEGetSignedDeviceData(const __CFData *a1, CFDataRef *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  memset(inputStruct, 0, sizeof(inputStruct));
  int v14 = 0;
  memset(outputStruct, 0, sizeof(outputStruct));
  size_t outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetSignedDeviceData_cold_1();
    }
    goto LABEL_19;
  }
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetSignedDeviceData_cold_2();
    }
    goto LABEL_19;
  }
  uint64_t v4 = init();
  if (v4)
  {
    uint64_t v10 = v4;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetSignedDeviceData_cold_8();
    }
    goto LABEL_10;
  }
  inputStruct[0] = 1397966179;
  LOWORD(inputStruct[1]) = 16;
  if ((unint64_t)CFDataGetLength(a1) >= 0x19)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetSignedDeviceData_cold_3();
    }
LABEL_19:
    uint64_t v10 = 4294967292;
    goto LABEL_10;
  }
  v18.length = CFDataGetLength(a1);
  v18.location = 0;
  CFDataGetBytes(a1, v18, (UInt8 *)&inputStruct[2]);
  uint64_t v16 = 0;
  size_t outputStructCnt = 260;
  uint64_t v5 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x28uLL, outputStruct, &outputStructCnt);
  if (!v5)
  {
    if (outputStructCnt <= 3)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetSignedDeviceData_cold_4();
      }
    }
    else
    {
      if (outputStructCnt == LODWORD(outputStruct[0]) + 4)
      {
        CFDataRef v6 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const UInt8 *)outputStruct + 4, LODWORD(outputStruct[0]));
        if (v6)
        {
          uint64_t v10 = 0;
          *a2 = v6;
        }
        else
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEGetSignedDeviceData_cold_5();
          }
          uint64_t v10 = 4294967291;
        }
        goto LABEL_10;
      }
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetSignedDeviceData_cold_6();
      }
    }
    uint64_t v10 = 4294967290;
    goto LABEL_10;
  }
  uint64_t v10 = v5;
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    SSEGetSignedDeviceData_cold_7();
  }
LABEL_10:
  logCmdCall((uint64_t)"SSEGetSignedDeviceData", v10, 0, 0, (uint64_t)&inputStruct[2], v7, v8, v9);
  return v10;
}

uint64_t SSEGetCertificateExpirationDate(int a1, void *a2)
{
  uint64_t v7 = 0;
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetCertificateExpirationDate_cold_1();
    }
    return 4294967292;
  }
  if (a1 != 1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetCertificateExpirationDate_cold_4();
    }
    return 4294967292;
  }
  uint64_t v3 = SSEIsFeatureSupported(26);
  if (v3)
  {
    uint64_t v5 = v3;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetCertificateExpirationDate_cold_3();
    }
  }
  else
  {
    if (baaInit_onceToken != -1) {
      dispatch_once(&baaInit_onceToken, &__block_literal_global_203);
    }
    if (_baaSupportClass)
    {
      uint64_t v4 = [(id)_baaSupportClass getCertificateExpirationDate:&v7];
      if (!v4)
      {
        uint64_t v5 = 0;
        *a2 = v7;
        return v5;
      }
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v5 = 4294967290;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetCertificateExpirationDate_cold_2();
    }
  }
  return v5;
}

uint64_t SSEGetCertificate(int a1, void *a2)
{
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetCertificate_cold_1();
    }
    return 4294967292;
  }
  if (a1 != 1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetCertificate_cold_4();
    }
    return 4294967292;
  }
  uint64_t v3 = SSEIsFeatureSupported(27);
  if (v3)
  {
    uint64_t v5 = v3;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetCertificate_cold_3();
    }
  }
  else
  {
    uint64_t v9 = 0;
    if (baaInit_onceToken != -1) {
      dispatch_once(&baaInit_onceToken, &__block_literal_global_203);
    }
    uint64_t v4 = (void *)_baaSupportClass;
    if (_baaSupportClass)
    {
      uint64_t v5 = [(id)_baaSupportClass getCertificates:&v9];
      uint64_t v4 = v9;
    }
    else
    {
      uint64_t v5 = 4294967290;
    }
    id v6 = v4;
    uint64_t v7 = v6;
    if (v5)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetCertificate_cold_2();
      }
    }
    else
    {
      *a2 = v6;
    }
  }
  return v5;
}

uint64_t SSEIssueNewCertificate(int a1)
{
  if (a1 == 1)
  {
    uint64_t v1 = SSEIsFeatureSupported(28);
    if (v1)
    {
      uint64_t v2 = v1;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEIssueNewCertificate_cold_2();
      }
    }
    else
    {
      uint64_t v2 = baaIssueNewCertificate();
      if (v2 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEIssueNewCertificate_cold_1();
      }
    }
  }
  else
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEIssueNewCertificate_cold_3();
    }
    return 4294967292;
  }
  return v2;
}

uint64_t baaIssueNewCertificate()
{
  if (baaInit_onceToken != -1) {
    dispatch_once(&baaInit_onceToken, &__block_literal_global_203);
  }
  uint64_t v0 = (void *)_baaSupportClass;
  if (!_baaSupportClass) {
    return 4294967290;
  }
  return [v0 issueNewCertificate];
}

uint64_t SSECreateSecureElementACLRequest(int a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData **a5, const __CFData **a6)
{
  size_t outputStructCnt = 0;
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    return 4294967292;
  }
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    return 4294967292;
  }
  if (!a4)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    return 4294967292;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    return 4294967292;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    return 4294967292;
  }
  uint64_t v12 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xDB9775F9uLL);
  if (!v12)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    return 4294967291;
  }
  uint64_t v13 = v12;
  int v14 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x877EE47CuLL);
  if (!v14)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    free(v13);
    return 4294967291;
  }
  unint64_t v15 = v14;
  uint64_t v16 = init();
  if (v16)
  {
    uint64_t v31 = v16;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    goto LABEL_20;
  }
  *(_DWORD *)uint64_t v13 = 1397966179;
  *((_WORD *)v13 + 2) = 26;
  *((_DWORD *)v13 + 2) = a1;
  unint64_t Length = CFDataGetLength(a2);
  if (Length >= 0x19)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    goto LABEL_47;
  }
  v34.length = Length;
  v34.location = 0;
  CFDataGetBytes(a2, v34, v13 + 12);
  unint64_t v18 = CFDataGetLength(a3);
  if (v18 >= 0x3FD5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    goto LABEL_47;
  }
  unint64_t v19 = v18;
  *((_DWORD *)v13 + 9) = v18;
  v35.location = 0;
  v35.length = v18;
  CFDataGetBytes(a3, v35, v13 + 44);
  CFDataRef v20 = &v13[v19 + 44];
  unint64_t v21 = CFDataGetLength(a4);
  if (v13 - v20 + 0x4000 < v21)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
LABEL_47:
    uint64_t v31 = 4294967292;
    goto LABEL_20;
  }
  unint64_t v22 = v21;
  *((_DWORD *)v13 + 10) = v21;
  v36.location = 0;
  v36.length = v21;
  CFDataGetBytes(a4, v36, v20);
  size_t outputStructCnt = 0x4000;
  uint64_t v23 = IOConnectCallStructMethod(_connect, 0, v13, &v20[v22] - v13, v15, &outputStructCnt);
  if (v23)
  {
    uint64_t v31 = v23;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    goto LABEL_20;
  }
  size_t v24 = outputStructCnt;
  if (outputStructCnt <= 7)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    goto LABEL_56;
  }
  if (outputStructCnt > 0x4000)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    goto LABEL_56;
  }
  unint64_t v25 = *(unsigned int *)v15;
  if (outputStructCnt - 8 < v25)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
LABEL_56:
    uint64_t v31 = 4294967290;
    goto LABEL_20;
  }
  CFAllocatorRef v26 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFDataRef v27 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v15 + 8, v25);
  if (!v27)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    uint64_t v31 = 4294967291;
    goto LABEL_20;
  }
  CFDataRef v28 = v27;
  CFIndex v29 = *((unsigned int *)v15 + 1);
  if ((uint64_t)(v24 - (*(unsigned int *)v15 + 8)) < v29)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    uint64_t v31 = 4294967290;
    goto LABEL_66;
  }
  CFDataRef v30 = CFDataCreate(v26, &v15[*(unsigned int *)v15 + 8], v29);
  if (!v30)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSECreateSecureElementACLRequest();
    }
    uint64_t v31 = 4294967291;
LABEL_66:
    CFRelease(v28);
    goto LABEL_20;
  }
  uint64_t v31 = 0;
  *a5 = v28;
  *a6 = v30;
LABEL_20:
  free(v13);
  free(v15);
  return v31;
}

uint64_t SSEEvaluateSecureElementACL(const __CFData *a1, int a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, const __CFString *a6, const __CFData *a7, unsigned int a8, const __CFData **a9, const __CFData **a10)
{
  size_t outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEvaluateSecureElementACL();
    }
    return 4294967292;
  }
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEvaluateSecureElementACL();
    }
    return 4294967292;
  }
  if (!a4)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEvaluateSecureElementACL();
    }
    return 4294967292;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEvaluateSecureElementACL();
    }
    return 4294967292;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEvaluateSecureElementACL();
    }
    return 4294967292;
  }
  if (!a7)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEvaluateSecureElementACL();
    }
    return 4294967292;
  }
  if (a8 - 4 <= 0xFFFFFFFC)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEvaluateSecureElementACL();
    }
    return 4294967292;
  }
  if (!a9)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEvaluateSecureElementACL();
    }
    return 4294967292;
  }
  if (!a10)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEEvaluateSecureElementACL();
    }
    return 4294967292;
  }
  if (a8 < 2 || (uint64_t v18 = SSEIsFeatureSupported(32), !v18))
  {
    unint64_t v19 = (char *)malloc_type_calloc(0x4000uLL, 1uLL, 0x29CD736uLL);
    if (v19)
    {
      CFDataRef v20 = v19;
      char outputStruct = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xAE84491FuLL);
      if (outputStruct)
      {
        uint64_t v21 = init();
        if (v21)
        {
          uint64_t v47 = v21;
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEEvaluateSecureElementACL();
          }
          goto LABEL_73;
        }
        *(_DWORD *)CFDataRef v20 = 1397966179;
        id v20[4] = 27;
        void v20[5] = a8 > 1;
        unint64_t Length = CFDataGetLength(a1);
        if (Length >= 0x41)
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEEvaluateSecureElementACL();
          }
        }
        else
        {
          int v23 = Length;
          v51.location = 0;
          v51.length = Length;
          CFDataGetBytes(a1, v51, (UInt8 *)v20 + 12);
          *((_DWORD *)v20 + 2) = v23;
          *((_DWORD *)v20 + 19) = a2;
          unint64_t v24 = CFDataGetLength(a3);
          if (v24 >= 0x19)
          {
            if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
              SSEEvaluateSecureElementACL();
            }
          }
          else
          {
            v52.length = v24;
            v52.location = 0;
            CFDataGetBytes(a3, v52, (UInt8 *)v20 + 80);
            unint64_t v25 = v20 + 0x4000;
            if (a8 < 2)
            {
              CFAllocatorRef v26 = (UInt8 *)(v20 + 120);
            }
            else
            {
              v20[120] = a8;
              CFAllocatorRef v26 = (UInt8 *)(v20 + 121);
            }
            unint64_t v27 = CFDataGetLength(a4);
            if (v25 - (char *)v26 < v27)
            {
              if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                SSEEvaluateSecureElementACL();
              }
            }
            else
            {
              unint64_t v28 = v27;
              *((_DWORD *)v20 + 26) = v27;
              v53.location = 0;
              v53.length = v27;
              CFDataGetBytes(a4, v53, v26);
              CFIndex v29 = &v26[v28];
              unint64_t v30 = CFDataGetLength(a5);
              if (v25 - (char *)v29 < v30)
              {
                if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                  SSEEvaluateSecureElementACL();
                }
              }
              else
              {
                unint64_t v31 = v30;
                *((_DWORD *)v20 + 27) = v30;
                v54.location = 0;
                v54.length = v30;
                CFDataGetBytes(a5, v54, v29);
                CFAllocatorRef v32 = &v29[v31];
                unint64_t v33 = CFStringGetLength(a6);
                if (v25 - (char *)v32 >= v33)
                {
                  unint64_t v34 = v33;
                  v55.location = 0;
                  v55.length = v33;
                  if (CFStringGetBytes(a6, v55, 0x8000100u, 0, 0, v32, v25 - (char *)v32, 0) == v33)
                  {
                    *((_DWORD *)v20 + 28) = v34;
                    CFRange v35 = &v32[v34];
                    unint64_t v36 = CFDataGetLength(a7);
                    if (v25 - (char *)v35 < v36)
                    {
                      CFDataRef v38 = outputStruct;
                      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                        SSEEvaluateSecureElementACL();
                      }
                      uint64_t v47 = 4294967292;
                      goto LABEL_33;
                    }
                    unint64_t v37 = v36;
                    *((_DWORD *)v20 + 29) = v36;
                    v56.location = 0;
                    v56.length = v36;
                    CFDataGetBytes(a7, v56, v35);
                    size_t outputStructCnt = 0x4000;
                    CFDataRef v38 = outputStruct;
                    uint64_t v39 = IOConnectCallStructMethod(_connect, 0, v20, &v35[v37] - (UInt8 *)v20, outputStruct, &outputStructCnt);
                    if (v39)
                    {
                      uint64_t v47 = v39;
                      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                        SSEEvaluateSecureElementACL();
                      }
                      goto LABEL_33;
                    }
                    size_t v40 = outputStructCnt;
                    if (outputStructCnt <= 7)
                    {
                      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                        SSEEvaluateSecureElementACL();
                      }
                    }
                    else if (outputStructCnt > 0x4000)
                    {
                      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                        SSEEvaluateSecureElementACL();
                      }
                    }
                    else
                    {
                      unint64_t v41 = *(unsigned int *)outputStruct;
                      if (outputStructCnt - 8 >= v41)
                      {
                        CFAllocatorRef v42 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
                        CFDataRef v43 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], outputStruct + 8, v41);
                        if (!v43)
                        {
                          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                            SSEEvaluateSecureElementACL();
                          }
                          uint64_t v47 = 4294967291;
                          goto LABEL_33;
                        }
                        CFDataRef v44 = v43;
                        CFIndex v45 = *((unsigned int *)outputStruct + 1);
                        if ((uint64_t)(v40 - (*(unsigned int *)outputStruct + 8)) < v45)
                        {
                          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                            SSEEvaluateSecureElementACL();
                          }
                          uint64_t v47 = 4294967290;
                        }
                        else
                        {
                          CFDataRef v46 = CFDataCreate(v42, &outputStruct[*(unsigned int *)outputStruct + 8], v45);
                          if (v46)
                          {
                            uint64_t v47 = 0;
                            *a9 = v44;
                            *a10 = v46;
LABEL_33:
                            free(v20);
                            free(v38);
                            return v47;
                          }
                          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                            SSEEvaluateSecureElementACL();
                          }
                          uint64_t v47 = 4294967291;
                        }
                        CFRelease(v44);
                        goto LABEL_33;
                      }
                      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                        SSEEvaluateSecureElementACL();
                      }
                    }
                    uint64_t v47 = 4294967290;
                    goto LABEL_33;
                  }
                  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                    SSEEvaluateSecureElementACL();
                  }
                  uint64_t v47 = 4294967290;
LABEL_73:
                  CFDataRef v38 = outputStruct;
                  goto LABEL_33;
                }
                if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                  SSEEvaluateSecureElementACL();
                }
              }
            }
          }
        }
        uint64_t v47 = 4294967292;
        goto LABEL_73;
      }
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEEvaluateSecureElementACL();
      }
      free(v20);
    }
    else if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
    {
      SSEEvaluateSecureElementACL();
    }
    return 4294967291;
  }
  uint64_t v47 = v18;
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    SSEEvaluateSecureElementACL();
  }
  return v47;
}

uint64_t SSEGetRosePairingInfo(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData **a4)
{
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetRosePairingInfo();
    }
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetRosePairingInfo();
    }
    return 4294967292;
  }
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetRosePairingInfo();
    }
    return 4294967292;
  }
  if (!a4)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetRosePairingInfo();
    }
    return 4294967292;
  }
  uint64_t RosePairingInfo = getRosePairingInfo(a1, a2, 0, 0, a3, a4);
  if (RosePairingInfo && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    SSEGetRosePairingInfo();
  }
  return RosePairingInfo;
}

uint64_t getRosePairingInfo(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, CFDataRef *a6)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  size_t outputStructCnt = 0;
  uint64_t v32 = 0;
  *(_OWORD *)buffer = 0u;
  long long v31 = 0u;
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getRosePairingInfo_cold_1();
    }
    goto LABEL_54;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getRosePairingInfo_cold_2();
    }
LABEL_54:
    unint64_t v19 = 0;
    uint64_t v26 = 4294967292;
    goto LABEL_42;
  }
  uint64_t v12 = malloc_type_calloc(0x4000uLL, 1uLL, 0xAA037781uLL);
  if (!v12)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getRosePairingInfo_cold_3();
    }
    goto LABEL_60;
  }
  uint64_t v13 = v12;
  int v14 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xE079FC04uLL);
  if (!v14)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getRosePairingInfo_cold_4();
    }
    free(v13);
LABEL_60:
    unint64_t v19 = 0;
    uint64_t v26 = 4294967291;
    goto LABEL_42;
  }
  unint64_t v15 = v14;
  uint64_t v16 = init();
  if (v16)
  {
    uint64_t v26 = v16;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getRosePairingInfo_cold_17();
    }
    unint64_t v19 = 0;
    goto LABEL_41;
  }
  unint64_t Length = CFDataGetLength(a1);
  if (Length >= 0x19)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getRosePairingInfo_cold_5();
    }
    goto LABEL_83;
  }
  v34.length = Length;
  v34.location = 0;
  CFDataGetBytes(a1, v34, buffer);
  if (a2)
  {
    if (CFDataGetLength(a2) >= 0x100000000)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        getRosePairingInfo_cold_16();
      }
      goto LABEL_83;
    }
    DWORD2(v31) = CFDataGetLength(a2);
  }
  if (a3)
  {
    if (CFDataGetLength(a3) >= 0x100000000)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        getRosePairingInfo_cold_15();
      }
      goto LABEL_83;
    }
    HIDWORD(v31) = CFDataGetLength(a3);
  }
  if (a4)
  {
    if (CFDataGetLength(a4) >= 0x100000000)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        getRosePairingInfo_cold_14();
      }
      goto LABEL_83;
    }
    LODWORD(v32) = CFDataGetLength(a4);
  }
  if (!a5)
  {
LABEL_19:
    id v18 = (id)[MEMORY[0x263EFF990] dataWithBytes:buffer length:40];
    unint64_t v19 = v18;
    if (a2) {
      [v18 appendData:a2];
    }
    if (a3) {
      [v19 appendData:a3];
    }
    if (a4) {
      [v19 appendData:a4];
    }
    if (a5) {
      [v19 appendData:a5];
    }
    if (!((unint64_t)[v19 length] >> 32))
    {
      unint64_t v28 = a6;
      LODWORD(v20) = 0;
      while (1)
      {
        _DWORD *v13 = 1397966179;
        *((_WORD *)v13 + 2) = 29;
        unsigned int v21 = (objc_msgSend(v19, "length", v28, outputStructCnt, *(void *)buffer, *(void *)&buffer[8], v31, v32, v33)- (unint64_t)v20) >> 2 > 0xFFA? 16364: objc_msgSend(v19, "length") - v20;
        uint64_t v13[2] = [v19 length];
        v13[3] = v20;
        id v13[4] = v21;
        id v22 = v19;
        [v22 bytes];
        __memcpy_chk();
        size_t outputStructCnt = 0x4000;
        uint64_t v23 = IOConnectCallStructMethod(_connect, 0, v13, v21 + 20, v15, &outputStructCnt);
        if (v23) {
          break;
        }
        if (outputStructCnt <= 3)
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            getRosePairingInfo_cold_7();
          }
          goto LABEL_49;
        }
        if (outputStructCnt > 0x4000)
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            getRosePairingInfo_cold_8();
          }
          goto LABEL_49;
        }
        unint64_t v20 = v20 + v21;
        if ([v22 length] <= v20)
        {
          if (outputStructCnt <= 3)
          {
            if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
              getRosePairingInfo_cold_9();
            }
          }
          else
          {
            CFIndex v24 = *(unsigned int *)v15;
            if (outputStructCnt - 4 == v24)
            {
              CFDataRef v25 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v15 + 4, v24);
              if (v25)
              {
                uint64_t v26 = 0;
                *unint64_t v28 = v25;
              }
              else
              {
                if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                  getRosePairingInfo_cold_10();
                }
                uint64_t v26 = 4294967291;
              }
              goto LABEL_40;
            }
            if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
              getRosePairingInfo_cold_11();
            }
          }
LABEL_49:
          uint64_t v26 = 4294967290;
          goto LABEL_40;
        }
      }
      uint64_t v26 = v23;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        getRosePairingInfo_cold_12();
      }
LABEL_40:
      unint64_t v19 = v22;
      goto LABEL_41;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      getRosePairingInfo_cold_6();
    }
    goto LABEL_84;
  }
  if (CFDataGetLength(a5) < 0x100000000)
  {
    HIDWORD(v32) = CFDataGetLength(a5);
    goto LABEL_19;
  }
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    getRosePairingInfo_cold_13();
  }
LABEL_83:
  unint64_t v19 = 0;
LABEL_84:
  uint64_t v26 = 4294967292;
LABEL_41:
  free(v13);
  free(v15);
LABEL_42:

  return v26;
}

uint64_t SSEGetRosePairingInfo(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, const __CFData **a6)
{
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetRosePairingInfo();
    }
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetRosePairingInfo();
    }
    return 4294967292;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetRosePairingInfo();
    }
    return 4294967292;
  }
  if (!a6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetRosePairingInfo();
    }
    return 4294967292;
  }
  uint64_t RosePairingInfo = getRosePairingInfo(a1, a2, a3, a4, a5, a6);
  if (RosePairingInfo && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    SSEGetRosePairingInfo();
  }
  return RosePairingInfo;
}

uint64_t SSEGetAttV2AuthKey(const __CFData *a1, const __CFData *a2, CFDataRef *a3)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  int v17 = 0;
  long long v16 = 0u;
  *(_OWORD *)&inputStruct[4] = 0u;
  size_t outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAttV2AuthKey_cold_1();
    }
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAttV2AuthKey_cold_2();
    }
    return 4294967292;
  }
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAttV2AuthKey_cold_3();
    }
    return 4294967292;
  }
  id v6 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x7290607BuLL);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = init();
    if (v8)
    {
      uint64_t v12 = v8;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetAttV2AuthKey_cold_11();
      }
      goto LABEL_13;
    }
    strcpy(inputStruct, "cESS#");
    if ((unint64_t)CFDataGetLength(a1) >= 0x19)
    {
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetAttV2AuthKey_cold_5();
      }
    }
    else
    {
      v19.length = CFDataGetLength(a1);
      v19.location = 0;
      CFDataGetBytes(a1, v19, &inputStruct[8]);
      if ((unint64_t)CFDataGetLength(a2) < 9)
      {
        v20.length = CFDataGetLength(a2);
        v20.location = 0;
        CFDataGetBytes(a2, v20, (UInt8 *)&v16 + 12);
        size_t outputStructCnt = 0x4000;
        uint64_t v9 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x28uLL, v7, &outputStructCnt);
        if (v9)
        {
          uint64_t v12 = v9;
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEGetAttV2AuthKey_cold_10();
          }
          goto LABEL_13;
        }
        if (outputStructCnt <= 3)
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEGetAttV2AuthKey_cold_7();
          }
        }
        else
        {
          CFIndex v10 = *(unsigned int *)v7;
          if (outputStructCnt - 4 == v10)
          {
            CFDataRef v11 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v7 + 4, v10);
            if (v11)
            {
              uint64_t v12 = 0;
              *a3 = v11;
            }
            else
            {
              if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
                SSEGetAttV2AuthKey_cold_8();
              }
              uint64_t v12 = 4294967291;
            }
            goto LABEL_13;
          }
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSEGetAttV2AuthKey_cold_9();
          }
        }
        uint64_t v12 = 4294967290;
LABEL_13:
        free(v7);
        return v12;
      }
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSEGetAttV2AuthKey_cold_6();
      }
    }
    uint64_t v12 = 4294967292;
    goto LABEL_13;
  }
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    SSEGetAttV2AuthKey_cold_4();
  }
  return 4294967291;
}

uint64_t SSESetSEPubKey(const __CFData *a1, const __CFData *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  *(void *)buffer = 0;
  uint64_t v16 = 0;
  int v18 = 0;
  uint64_t v17 = 0;
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSESetSEPubKey_cold_1();
    }
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSESetSEPubKey_cold_2();
    }
    return 4294967292;
  }
  uint64_t v4 = (char *)malloc_type_calloc(0x4000uLL, 1uLL, 0xB0967022uLL);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = init();
    if (v6)
    {
      uint64_t v13 = v6;
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
        SSESetSEPubKey_cold_8();
      }
    }
    else
    {
      unint64_t Length = CFDataGetLength(a1);
      if (Length >= 0x19)
      {
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSESetSEPubKey_cold_4();
        }
      }
      else
      {
        v20.length = Length;
        v20.location = 0;
        CFDataGetBytes(a1, v20, buffer);
        if (CFDataGetLength(a2) >= 0x100000000)
        {
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSESetSEPubKey_cold_5();
          }
        }
        else
        {
          int v18 = CFDataGetLength(a2);
          id v8 = (id)[MEMORY[0x263EFF990] dataWithBytes:buffer length:28];
          [v8 appendData:a2];
          if (!((unint64_t)[v8 length] >> 32))
          {
            LODWORD(v9) = 0;
            while (1)
            {
              strcpy(v5, "cESS%");
              unsigned int v10 = ([v8 length] - (unint64_t)v9) >> 2 > 0xFFA
                  ? 16364
                  : [v8 length] - v9;
              *((_DWORD *)v5 + 2) = [v8 length];
              *((_DWORD *)v5 + 3) = v9;
              *((_DWORD *)v5 + 4) = v10;
              id v11 = v8;
              [v11 bytes];
              __memcpy_chk();
              uint64_t v12 = IOConnectCallStructMethod(_connect, 0, v5, v10 + 20, 0, 0);
              if (v12) {
                break;
              }
              unint64_t v9 = v9 + v10;
              if ([v11 length] <= v9)
              {

                uint64_t v13 = 0;
                goto LABEL_15;
              }
            }
            uint64_t v13 = v12;
            if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
              SSESetSEPubKey_cold_7();
            }

            goto LABEL_15;
          }
          if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
            SSESetSEPubKey_cold_6();
          }
        }
      }
      uint64_t v13 = 4294967292;
    }
LABEL_15:
    free(v5);
    return v13;
  }
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    SSESetSEPubKey_cold_3();
  }
  return 4294967291;
}

uint64_t SSEGetAuthKeySharingState(const __CFData *a1, _DWORD *a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v11 = 0;
  *(void *)&inputStruct[4] = 0;
  int v13 = 0;
  uint64_t v12 = 0;
  int outputStruct = 0;
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAuthKeySharingState_cold_1();
    }
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAuthKeySharingState_cold_2();
    }
    return 4294967292;
  }
  uint64_t v4 = init();
  if (!v4)
  {
    strcpy(inputStruct, "cESS&");
    if ((unint64_t)CFDataGetLength(a1) < 0x19)
    {
      v15.length = CFDataGetLength(a1);
      v15.location = 0;
      CFDataGetBytes(a1, v15, &inputStruct[8]);
      size_t outputStructCnt = 4;
      uint64_t v5 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x20uLL, &outputStruct, &outputStructCnt);
      if (v5)
      {
        uint64_t v6 = v5;
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEGetAuthKeySharingState_cold_5();
        }
      }
      else if (outputStructCnt == 4)
      {
        uint64_t v6 = 0;
        *a2 = outputStruct;
      }
      else
      {
        if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
          SSEGetAuthKeySharingState_cold_4();
        }
        return 4294967290;
      }
      return v6;
    }
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEGetAuthKeySharingState_cold_3();
    }
    return 4294967292;
  }
  uint64_t v6 = v4;
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    SSEGetAuthKeySharingState_cold_6();
  }
  return v6;
}

uint64_t SSEPerformAuthKeySharing(const __CFData *a1, const __CFData *a2, const __CFData *a3, CFDataRef *a4, CFDataRef *a5)
{
  size_t outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_1();
    }
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_2();
    }
    return 4294967292;
  }
  if (!a3)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_3();
    }
    return 4294967292;
  }
  if (!a4)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_4();
    }
    return 4294967292;
  }
  if (!a5)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_5();
    }
    return 4294967292;
  }
  unsigned int v10 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xD2063E45uLL);
  if (!v10)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_6();
    }
    return 4294967291;
  }
  uint64_t v11 = v10;
  uint64_t v12 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x43BFE140uLL);
  if (!v12)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_7();
    }
    free(v11);
    return 4294967291;
  }
  int v13 = v12;
  uint64_t v14 = init();
  if (v14)
  {
    uint64_t v28 = v14;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_18();
    }
    goto LABEL_20;
  }
  strcpy((char *)v11, "cESS$");
  if ((unint64_t)CFDataGetLength(a1) >= 0x19)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_8();
    }
    goto LABEL_47;
  }
  v31.length = CFDataGetLength(a1);
  v31.location = 0;
  CFDataGetBytes(a1, v31, v11 + 8);
  unint64_t Length = CFDataGetLength(a2);
  if (Length >= 0x3FD9)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_9();
    }
    goto LABEL_47;
  }
  unint64_t v16 = Length;
  *((_DWORD *)v11 + 8) = Length;
  v32.location = 0;
  v32.length = Length;
  CFDataGetBytes(a2, v32, v11 + 40);
  uint64_t v17 = &v11[v16 + 40];
  unint64_t v18 = CFDataGetLength(a3);
  if (v11 - v17 + 0x4000 < v18)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_10();
    }
LABEL_47:
    uint64_t v28 = 4294967292;
    goto LABEL_20;
  }
  unint64_t v19 = v18;
  *((_DWORD *)v11 + 9) = v18;
  v33.location = 0;
  v33.length = v18;
  CFDataGetBytes(a3, v33, v17);
  size_t outputStructCnt = 0x4000;
  uint64_t v20 = IOConnectCallStructMethod(_connect, 0, v11, &v17[v19] - v11, v13, &outputStructCnt);
  if (v20)
  {
    uint64_t v28 = v20;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_17();
    }
    goto LABEL_20;
  }
  size_t v21 = outputStructCnt;
  if (outputStructCnt <= 7)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_11();
    }
    goto LABEL_56;
  }
  if (outputStructCnt > 0x4000)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_12();
    }
    goto LABEL_56;
  }
  unint64_t v22 = *(unsigned int *)v13;
  if (outputStructCnt - 8 < v22)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_13();
    }
LABEL_56:
    uint64_t v28 = 4294967290;
    goto LABEL_20;
  }
  CFAllocatorRef v23 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFDataRef v24 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v13 + 8, v22);
  if (!v24)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_14();
    }
    uint64_t v28 = 4294967291;
    goto LABEL_20;
  }
  CFDataRef v25 = v24;
  CFIndex v26 = *((unsigned int *)v13 + 1);
  if ((uint64_t)(v21 - (*(unsigned int *)v13 + 8)) < v26)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_15();
    }
    uint64_t v28 = 4294967290;
    goto LABEL_66;
  }
  CFDataRef v27 = CFDataCreate(v23, &v13[*(unsigned int *)v13 + 8], v26);
  if (!v27)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSEPerformAuthKeySharing_cold_16();
    }
    uint64_t v28 = 4294967291;
LABEL_66:
    CFRelease(v25);
    goto LABEL_20;
  }
  uint64_t v28 = 0;
  *a4 = v25;
  *a5 = v27;
LABEL_20:
  free(v11);
  free(v13);
  return v28;
}

uint64_t SSESetAuthKeyRevocationNotificationHandler(void *a1, void *a2)
{
  id v4 = a1;
  id v5 = a2;
  int v6 = init();
  uint64_t v7 = v6;
  if (v6)
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
      SSESetAuthKeyRevocationNotificationHandler();
    }
  }
  else
  {
    objc_storeStrong((id *)&_authKeyRevocationNtfQueue, a1);
    id v8 = _Block_copy(v5);
    unint64_t v9 = (void *)_authKeyRevocationNtfHandler;
    _authKeyRevocationNtfHandler = (uint64_t)v8;
  }
  return v7;
}

uint64_t SSEAuthorize(int a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, _DWORD *a7, CFDataRef *a8)
{
  return authorize(0, a1, a2, -1, a3, a4, a5, a6, 0, a7, a8, 0, 0, 0);
}

uint64_t SSEAuthorize(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, _DWORD *a8, CFDataRef *a9, CFDataRef *a10, CFDataRef *a11)
{
  return authorize(1, a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, a10, a11, 0);
}

uint64_t SSEAuthorize(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, char a8, _DWORD *a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12)
{
  return authorize(1, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 0);
}

uint64_t SSEAuthorizeWithPIN(int a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, _DWORD *a7, CFDataRef *a8, CFDataRef *a9)
{
  return authorizeWithPIN(0, a1, a2, -1, a3, a4, a5, a6, 0, a7, a8, a9, 0, 0, 0);
}

uint64_t SSEAuthorizeWithPIN(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, _DWORD *a8, CFDataRef *a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12)
{
  return authorizeWithPIN(1, a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, a10, a11, a12, 0);
}

uint64_t SSEAuthorizeWithPIN(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, char a8, _DWORD *a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12, CFDataRef *a13)
{
  return authorizeWithPIN(1, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, 0);
}

uint64_t SSEAuthorizeAndSignECommerceBlob(const __CFData *a1, int a2, const __CFData *a3, char a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, char a9, const __CFData **a10, const __CFData **a11, const __CFData **a12)
{
  return SSEAuthorizeAndSignECommerceBlob(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 0);
}

uint64_t SSEGetActivationTimeout(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, unsigned __int16 *a5, const __CFData **a6)
{
  return SSEGetActivationTimeout(-1, a1, a2, a3, a4, a5, a6);
}

uint64_t SSEGetAuthorizationRandom(const __CFData *a1, const __CFData **a2, const __CFData **a3)
{
  return SSEGetAuthorizationRandom(-1, a1, a2, a3);
}

uint64_t SSESetBlessedUser(uint64_t a1)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  *(void *)uint64_t v2 = 0;
  uint64_t v3 = 0;
  return SSESetBlessedUser(a1, v2);
}

uint64_t SSECreateSecureElementACLRequest(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData **a4, const __CFData **a5)
{
  return SSECreateSecureElementACLRequest(-1, a1, a2, a3, a4, a5);
}

uint64_t SSEEvaluateSecureElementACL(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFString *a5, const __CFData *a6, const __CFData **a7, const __CFData **a8)
{
  return SSEEvaluateSecureElementACL(a1, -1, a2, a3, a4, a5, a6, 1u, a7, a8);
}

uint64_t SSEEvaluateSecureElementACL(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFString *a5, const __CFData *a6, unsigned int a7, const __CFData **a8, const __CFData **a9)
{
  return SSEEvaluateSecureElementACL(a1, -1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t SSESetEffacementNotificationHandler(void *a1)
{
  return SSESetEffacementNotificationHandler(0, a1);
}

uint64_t SSESetAuthKeyRevocationNotificationHandler(void *a1)
{
  return SSESetAuthKeyRevocationNotificationHandler(0, a1);
}

void serviceNotificationHandler(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a3 == -469794813)
  {
    id v5 = (id)_authKeyRevocationNtfQueue;
    int v6 = v5;
    if (!v5) {
      int v6 = dispatch_get_global_queue(21, 0);
    }
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 3221225472;
    uint64_t v9[2] = __serviceNotificationHandler_block_invoke_3;
    v9[3] = &__block_descriptor_40_e5_v8__0l;
    v9[4] = a4;
    uint64_t v7 = v9;
    goto LABEL_10;
  }
  if (a3 == -469794814)
  {
    if (!_doNotIssueNewBAACertificate)
    {
      id v8 = dispatch_get_global_queue(21, 0);
      dispatch_async(v8, &__block_literal_global_176);
    }
    goto LABEL_14;
  }
  if (a3 != -469794815)
  {
LABEL_14:
    id v5 = 0;
    goto LABEL_15;
  }
  id v5 = (id)_effacemenNtfQueue;
  int v6 = v5;
  if (!v5) {
    int v6 = dispatch_get_global_queue(21, 0);
  }
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  void v10[2] = __serviceNotificationHandler_block_invoke;
  v10[3] = &__block_descriptor_40_e5_v8__0l;
  v10[4] = a4;
  uint64_t v7 = v10;
LABEL_10:
  dispatch_async(v6, v7);
  if (!v5) {

  }
LABEL_15:
}

const char *__isRestoreMode_block_invoke()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  size_t v2 = 1024;
  unint64_t result = (const char *)sysctlbyname("kern.bootargs", __str, &v2, 0, 0);
  if (!result)
  {
    __lasts = 0;
    unint64_t result = strtok_r(__str, " \t", &__lasts);
    if (result)
    {
      while (1)
      {
        unint64_t result = (const char *)strcmp(result, "rd=md0");
        if (!result) {
          break;
        }
        unint64_t result = strtok_r(0, " \t", &__lasts);
        if (!result) {
          return result;
        }
      }
      isRestoreMode_restoreMode = 1;
    }
  }
  return result;
}

void *__getMGAnswers_block_invoke()
{
  unint64_t result = dlopen("/usr/lib/libMobileGestalt.dylib", 1);
  if (result)
  {
    uint64_t v1 = result;
    size_t v2 = (uint64_t (*)(__CFString *))dlsym(result, "MGGetBoolAnswer");
    if (v2)
    {
      uint64_t v3 = v2;
      getMGAnswers_cachedHasSE = v2(@"0dnM19zBqLw5ZPhIo4GEkg");
      getMGAnswers_cachedIsInternal = v3(@"InternalBuild");
    }
    return (void *)dlclose(v1);
  }
  return result;
}

uint64_t __serviceNotificationHandler_block_invoke()
{
  uint64_t result = _effacemenNtfHandler;
  if (_effacemenNtfHandler) {
    return (*(uint64_t (**)(void))(_effacemenNtfHandler + 16))();
  }
  return result;
}

uint64_t __serviceNotificationHandler_block_invoke_3()
{
  uint64_t result = _authKeyRevocationNtfHandler;
  if (_authKeyRevocationNtfHandler) {
    return (*(uint64_t (**)(void))(_authKeyRevocationNtfHandler + 16))();
  }
  return result;
}

const char *logLine(const char *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (_logFile)
  {
    unint64_t v9 = result;
    *(_OWORD *)uint64_t v14 = 0u;
    long long v15 = 0u;
    time_t v13 = time(0);
    unsigned int v10 = localtime(&v13);
    strftime(v14, 0x20uLL, "%F %T (%z)", v10);
    uint64_t v11 = (FILE *)_logFile;
    uint64_t v12 = getprogname();
    fprintf(v11, "%s [%s]: ", v14, v12);
    vfprintf((FILE *)_logFile, v9, &a9);
    fputs("\n", (FILE *)_logFile);
    return (const char *)fflush((FILE *)_logFile);
  }
  return result;
}

uint64_t logState(uint64_t result, uint64_t a2)
{
  if (_logFile)
  {
    uint64_t v3 = (_DWORD *)result;
    uint64_t inputStruct = 0x953534563;
    long long v7 = 0u;
    long long v8 = 0u;
    long long outputStruct = 0u;
    size_t outputStructCnt = 48;
    uint64_t result = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, &outputStruct, &outputStructCnt);
    if (!result)
    {
      if (v3) {
        fprintf((FILE *)_logFile, "\tuserID        = %u\n", *v3);
      }
      if (a2)
      {
        fwrite("\tseid          = ", 0x11uLL, 1uLL, (FILE *)_logFile);
        for (uint64_t i = 0; i != 24; ++i)
          fprintf((FILE *)_logFile, "%02x", *(unsigned __int8 *)(a2 + i));
        fputs("\n", (FILE *)_logFile);
      }
      fprintf((FILE *)_logFile, "\tsseKey hash   = %016llx\n", (void)outputStruct);
      fprintf((FILE *)_logFile, "\tauthRand hash = %016llx\n", *((void *)&outputStruct + 1));
      fprintf((FILE *)_logFile, "\tsubcounter    = %llu\n", (void)v7);
      fprintf((FILE *)_logFile, "\tentropy hash  = %016llx\n", *((void *)&v7 + 1));
      fprintf((FILE *)_logFile, "\tkeybag hash   = %016llx\n", (void)v8);
      fprintf((FILE *)_logFile, "\tnoPasscodeCnt = %u\n", DWORD2(v8));
      return fflush((FILE *)_logFile);
    }
  }
  return result;
}

void __baaInit_block_invoke()
{
  if (isRestoreMode_onceToken != -1) {
    dispatch_once(&isRestoreMode_onceToken, &__block_literal_global_162);
  }
  if ((isRestoreMode_restoreMode & 1) == 0)
  {
    init();
    if (_hasSSE)
    {
      if (isEntitledForBAA_onceToken != -1) {
        dispatch_once(&isEntitledForBAA_onceToken, &__block_literal_global_210);
      }
      if (isEntitledForBAA_entitled == 1)
      {
        if (dlopen("/usr/lib/libAppleSSEExt.dylib", 1))
        {
          Class Class = objc_getClass("BAASupport");
          _baaSupportClass Class = (uint64_t)Class;
          if (!Class)
          {
            if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
              __baaInit_block_invoke_cold_2();
            }
            Class Class = (Class)_baaSupportClass;
          }
          [(objc_class *)Class setDelegate:objc_opt_class()];
        }
        else if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
        {
          __baaInit_block_invoke_cold_1();
        }
      }
    }
  }
}

void __isEntitledForBAA_block_invoke()
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  id v0 = (id)[MEMORY[0x263F08AB0] processInfo];
  id v1 = (id)[v0 processName];
  int v2 = [v1 isEqualToString:@"nfcd"];

  if (v2)
  {
    isEntitledForBAA_entitled = 1;
  }
  else
  {
    uint64_t v3 = dlopen("/System/Library/Frameworks/Security.framework/Security", 1);
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = (uint64_t (*)(void))dlsym(v3, "SecTaskCreateFromSelf");
      if (v5)
      {
        uint64_t v6 = v5(*MEMORY[0x263EFFB08]);
        if (v6)
        {
          long long v7 = (const void *)v6;
          long long v8 = (uint64_t (*)(const void *, __CFString *, void))dlsym(v4, "SecTaskCopyValueForEntitlement");
          if (v8)
          {
            unint64_t v9 = v8;
            unsigned int v10 = (void *)v8(v7, @"com.apple.private.applesse.allow", 0);
            uint64_t v11 = (void *)v9(v7, @"com.apple.private.applesse.baa", 0);
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              if ([v10 BOOLValue])
              {
                objc_opt_class();
                if (objc_opt_isKindOfClass())
                {
                  if ([v11 BOOLValue]) {
                    isEntitledForBAA_entitled = 1;
                  }
                }
              }
            }
          }
          CFRelease(v7);
        }
      }
      dlclose(v4);
    }
  }
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_DEFAULT))
  {
    v12[0] = 67109120;
    v12[1] = isEntitledForBAA_entitled;
    _os_log_impl(&dword_2146ED000, &_os_log_internal, OS_LOG_TYPE_DEFAULT, "isEntitledForBAA(): entitled = %u", (uint8_t *)v12, 8u);
  }
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x30u);
}

void SSEIsFeatureSupported_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEIsFeatureSupported_cold_2()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEIsFeatureSupported_cold_3()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEIsFeatureSupported_cold_4()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEGetVersion_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEGetVersion_cold_2()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEGetVersion_cold_3()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEGetVersion_cold_4()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void getDeviceFeatures_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void getDeviceFeatures_cold_2()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void getDeviceFeatures_cold_3()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void getDeviceFeatures_cold_4()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void getDeviceFeatures_cold_5()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void init_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void init_cold_2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void init_cold_3()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void init_cold_4()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void init_cold_5()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEGetHostChallenge_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEGetHostChallenge_cold_2()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEGetHostChallenge_cold_3()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEGetHostChallenge_cold_4()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void SSEGetHostChallenge_cold_5()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_2()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_3()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_4()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_5()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_6()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_7()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_8()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_9()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_10()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_11()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_12()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_13()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_14()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_15()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_16()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_17()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_18()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_19()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_20()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_21()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}

void authorize_cold_22()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_2(&dword_2146ED000, &_os_log_internal, v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
}