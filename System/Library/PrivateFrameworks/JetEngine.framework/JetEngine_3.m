uint64_t sub_19EFAEDE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void v6[3];
  uint64_t v7;
  uint64_t v8;
  unsigned char v9[40];

  v0 = sub_19F1DD90C();
  JSONObject.subscript.getter(v0, v1, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_19EEC3ED8((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1E946FD20);
  v2 = v7;
  if (v7)
  {
    v3 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
    LOBYTE(v2) = v4 ^ 1;
  }
  else
  {
    sub_19EEBD664((uint64_t)v6, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418((uint64_t)v9);
  return v2 & 1;
}

uint64_t sub_19EFAEEB8()
{
  uint64_t v0 = sub_19F1DD90C();
  JSONObject.subscript.getter(v0, v1, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_19EEC3ED8((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1E946FD20);
  uint64_t v2 = v7;
  if (v7)
  {
    uint64_t v3 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  }
  else
  {
    sub_19EEBD664((uint64_t)v6, (uint64_t *)&unk_1E946FD20);
    char v4 = 1;
  }
  sub_19EEC3418((uint64_t)v9);
  return v4 & 1;
}

uint64_t sub_19EFAEF94(uint64_t a1, uint64_t a2)
{
  sub_19EE6F420(a1, (void (*)(unsigned char *, void *))sub_19EFAEFEC, 0, a2);
  if (!v2) {
    char v3 = v5;
  }
  return v3 & 1;
}

uint64_t sub_19EFAEFEC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  char v3 = sub_19EFABFE4();
  uint64_t result = swift_release();
  if (!v1) {
    *a1 = v3 & 1;
  }
  return result;
}

uint64_t sub_19EFAF068(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_19EE6F420(a1, (void (*)(unsigned char *, void *))sub_19EFAF0BC, 0, a2);
  if (!v2) {
    return v4;
  }
  return result;
}

uint64_t sub_19EFAF0BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v8 = v7;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if (v8)
    {
      *a2 = v6;
      a2[1] = v8;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3ED8(a1, (uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v10 = v15;
  if (v15)
  {
    uint64_t v11 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v11 + 96))(v13, v10, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
  else
  {
    sub_19EEBD664((uint64_t)v14, (uint64_t *)&unk_1E946FD20);
    memset(v13, 0, sizeof(v13));
  }
  sub_19F1DCDCC();
  swift_allocError();
  sub_19EFAC1D0(MEMORY[0x1E4FBB1A0], (uint64_t)v13, v12);
  sub_19EEBD664((uint64_t)v13, &qword_1EB393260);
  return swift_willThrow();
}

double sub_19EFAF248(uint64_t a1, uint64_t a2)
{
  sub_19EE6F420(a1, (void (*)(unsigned char *, void *))sub_19EFAF29C, 0, a2);
  if (!v2) {
    return v4;
  }
  return result;
}

uint64_t sub_19EFAF29C@<X0>(double *a1@<X8>)
{
  swift_getKeyPath();
  double v3 = sub_19EFAC398();
  uint64_t result = swift_release();
  if (!v1) {
    *a1 = v3;
  }
  return result;
}

float sub_19EFAF31C(uint64_t a1, uint64_t a2)
{
  sub_19EE6F420(a1, (void (*)(unsigned char *, void *))sub_19EFAF370, 0, a2);
  if (!v2) {
    return v4;
  }
  return result;
}

uint64_t sub_19EFAF370@<X0>(float *a1@<X8>)
{
  swift_getKeyPath();
  float v3 = sub_19EFAC71C();
  uint64_t result = swift_release();
  if (!v1) {
    *a1 = v3;
  }
  return result;
}

uint64_t sub_19EFAF3F0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = sub_19EFACAA0(KeyPath, a1, MEMORY[0x1E4FBB550], MEMORY[0x1E4F27F38], 7630409);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_19EFAF490@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  char v6 = sub_19EFACE2C(KeyPath, a1, MEMORY[0x1E4FBC098], MEMORY[0x1E4F28100], 947154505);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_19EFAF530@<X0>(uint64_t a1@<X1>, _WORD *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  __int16 v6 = sub_19EFAD1B8(KeyPath, a1, MEMORY[0x1E4FBC0F8], MEMORY[0x1E4F28120], 0x3631746E49);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_19EFAF5D4@<X0>(uint64_t a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  int v6 = sub_19EFAD544(KeyPath, a1, MEMORY[0x1E4FBC150], MEMORY[0x1E4F28128], 0x3233746E49);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_19EFAF678@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = sub_19EFACAA0(KeyPath, a1, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4F28130], 0x3436746E49);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_19EFAF71C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = sub_19EFACAA0(KeyPath, a1, MEMORY[0x1E4FBB808], MEMORY[0x1E4F280C8], 1953384789);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_19EFAF7BC(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, void *))
{
  uint64_t result = sub_19EE6F420(a1, a3, 0, a2);
  if (!v3) {
    return v5;
  }
  return result;
}

uint64_t sub_19EFAF7FC@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  char v6 = sub_19EFACE2C(KeyPath, a1, MEMORY[0x1E4FBC358], MEMORY[0x1E4F28150], 0x38746E4955);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_19EFAF8A0(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, void *))
{
  uint64_t result = sub_19EE6F420(a1, a3, 0, a2);
  if (!v3) {
    return v5;
  }
  return result;
}

uint64_t sub_19EFAF8E0@<X0>(uint64_t a1@<X1>, _WORD *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  __int16 v6 = sub_19EFAD1B8(KeyPath, a1, MEMORY[0x1E4FBC450], MEMORY[0x1E4F28168], 0x3631746E4955);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_19EFAF984(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, void *))
{
  uint64_t result = sub_19EE6F420(a1, a3, 0, a2);
  if (!v3) {
    return v5;
  }
  return result;
}

uint64_t sub_19EFAF9C4@<X0>(uint64_t a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  int v6 = sub_19EFAD544(KeyPath, a1, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4F28170], 0x3233746E4955);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_19EFAFA68(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, void *))
{
  uint64_t result = sub_19EE6F420(a1, a3, 0, a2);
  if (!v3) {
    return v5;
  }
  return result;
}

uint64_t sub_19EFAFAA8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = sub_19EFACAA0(KeyPath, a1, MEMORY[0x1E4FBC538], MEMORY[0x1E4F28178], 0x3436746E4955);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_19EFAFB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a3 + 24);
  v9[2] = *(void *)(a3 + 16);
  v9[3] = a4;
  v9[4] = v7;
  v9[5] = a5;
  v9[7] = a1;
  sub_19F1DD1EC();
  return sub_19EE6F420(a2, (void (*)(unsigned char *, void *))sub_19EFB2A60, (uint64_t)v9, a3);
}

uint64_t sub_19EFAFBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a8;
  sub_19EEC3ED8(a1, (uint64_t)v27, (uint64_t *)&unk_1E946FD20);
  uint64_t v11 = v28;
  if (v28)
  {
    uint64_t v12 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 104))(v11, v12);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  }
  else
  {
    sub_19EEBD664((uint64_t)v27, (uint64_t *)&unk_1E946FD20);
    char v13 = 1;
  }
  uint64_t v14 = type metadata accessor for _JSONObjectKeyedDecodingContainer();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v15 + 16))(v27, a3, v14);
  if ((v13 & 1) != 0 && (char v16 = sub_19EE71C18(0xD00000000000002BLL, 0x800000019F26B930, v30), v16 != 2))
  {
    char v19 = v16;
    (*(void (**)(void *, uint64_t))(v15 + 8))(v27, v14);
    if (v19)
    {
      uint64_t v20 = sub_19F1DCDCC();
      swift_allocError();
      v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
      void *v22 = a4;
      swift_bridgeObjectRetain();
      sub_19F1DCDAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA80], v20);
      return swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v27, v14);
  }
  sub_19EEC355C(a1, (uint64_t)v25);
  uint64_t v17 = *(void *)(a3 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_19EE4A844((uint64_t)v25, v17, a2, (uint64_t)v26);
  if (!v24)
  {
    type metadata accessor for _JSONObjectKeyedDecodingContainer();
    swift_getWitnessTable();
    return sub_19F1DD1FC();
  }
  return result;
}

uint64_t sub_19EFAFEC8(uint64_t a1, uint64_t a2)
{
  v5[1] = *(_OWORD *)(a2 + 16);
  uint64_t v6 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EA8);
  return sub_19EE6F420(a1, (void (*)(unsigned char *, void *))sub_19EFB2A40, (uint64_t)v5, a2);
}

uint64_t sub_19EFAFF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v32, (uint64_t *)&unk_1E946FD20);
  uint64_t v13 = v33;
  if (v33)
  {
    uint64_t v14 = v34;
    __swift_project_boxed_opaque_existential_1(v32, v33);
    char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 104))(v13, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  }
  else
  {
    sub_19EEBD664((uint64_t)v32, (uint64_t *)&unk_1E946FD20);
    char v15 = 1;
  }
  uint64_t v16 = type metadata accessor for _JSONObjectKeyedDecodingContainer();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v17 + 16))(v32, a3, v16);
  if ((v15 & 1) != 0 && (char v18 = sub_19EE71C18(0xD00000000000002BLL, 0x800000019F26B930, v35), v18 != 2))
  {
    char v25 = v18;
    (*(void (**)(void *, uint64_t))(v17 + 8))(v32, v16);
    if (v25)
    {
      uint64_t v26 = sub_19F1DCDCC();
      swift_allocError();
      uint64_t v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EB0);
      v28[3] = a5;
      v28[4] = a6;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v28);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_2Tm, a4, a5);
      swift_bridgeObjectRetain();
      sub_19F1DCDAC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x1E4FBBA68], v26);
      return swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v32, v16);
  }
  sub_19EEC355C(a1, (uint64_t)v31);
  uint64_t v19 = *(void *)(a3 + 40);
  a7[3] = (uint64_t)&type metadata for _JSONObjectUnkeyedDecodingContainer;
  a7[4] = sub_19EFAB9D8();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v20 + 16;
  *a7 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = v21;
  uint64_t v23 = v36;
  uint64_t result = sub_19EFAB604((uint64_t)v31, v19, a2, v22);
  if (v23) {
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)a7);
  }
  return result;
}

uint64_t sub_19EFB0250@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  JSONObject.subscript.getter(0x7265707573, 0xE500000000000000, (uint64_t)v24);
  uint64_t v6 = sub_19EFDD710(0x7265707573, 0xE500000000000000, 1, *(void **)(v2 + 48));
  sub_19EEC3ED8((uint64_t)v24, (uint64_t)v20, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = v21;
  if (v21)
  {
    uint64_t v8 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    char v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
  else
  {
    sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E946FD20);
    char v9 = 1;
  }
  uint64_t v10 = *(void *)(a1 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v10 + 16))(v20, v3, a1);
  if ((v9 & 1) == 0 || (char v11 = sub_19EE71C18(0xD00000000000002BLL, 0x800000019F26B930, v23), v11 == 2))
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v20, a1);
LABEL_7:
    a2[3] = (uint64_t)&type metadata for _JSONObjectDecoder;
    a2[4] = sub_19EE70560();
    uint64_t v12 = swift_allocObject();
    *a2 = v12;
    long long v13 = v24[1];
    *(_OWORD *)(v12 + 16) = v24[0];
    *(_OWORD *)(v12 + 32) = v13;
    uint64_t v14 = *(void *)(v3 + 40);
    *(void *)(v12 + 48) = v25;
    *(void *)(v12 + 56) = v14;
    *(void *)(v12 + 64) = v6;
    return swift_bridgeObjectRetain();
  }
  char v16 = v11;
  (*(void (**)(void *, uint64_t))(v10 + 8))(v20, a1);
  if ((v16 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v17 = sub_19F1DCDCC();
  swift_allocError();
  uint64_t v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
  *uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946F6F8);
  sub_19F1DCDAC();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBA80], v17);
  swift_willThrow();
  return sub_19EEC3418((uint64_t)v24);
}

uint64_t sub_19EFB0528(uint64_t a1, uint64_t a2)
{
  v5[1] = *(_OWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946F6F8);
  return sub_19EE6F420(a1, (void (*)(unsigned char *, void *))sub_19EFB2A1C, (uint64_t)v5, a2);
}

uint64_t sub_19EFB05AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v20, (uint64_t *)&unk_1E946FD20);
  uint64_t v8 = v21;
  if (v21)
  {
    uint64_t v9 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 104))(v8, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
  else
  {
    sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E946FD20);
    char v10 = 1;
  }
  uint64_t v11 = type metadata accessor for _JSONObjectKeyedDecodingContainer();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v12 + 16))(v20, a3, v11);
  if ((v10 & 1) != 0 && (char v13 = sub_19EE71C18(0xD00000000000002BLL, 0x800000019F26B930, v23), v13 != 2))
  {
    char v16 = v13;
    (*(void (**)(void *, uint64_t))(v12 + 8))(v20, v11);
    if (v16)
    {
      uint64_t v17 = sub_19F1DCDCC();
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
      *uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946F6F8);
      swift_bridgeObjectRetain();
      sub_19F1DCDAC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBA80], v17);
      return swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v20, v11);
  }
  a4[3] = (uint64_t)&type metadata for _JSONObjectDecoder;
  a4[4] = sub_19EE70560();
  uint64_t v14 = swift_allocObject();
  *a4 = v14;
  sub_19EEC355C(a1, v14 + 16);
  *(void *)(v14 + 56) = *(void *)(a3 + 40);
  *(void *)(v14 + 64) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFB0860()
{
  return sub_19EFAEEB8() & 1;
}

uint64_t sub_19EFB087C(uint64_t a1, uint64_t a2)
{
  return sub_19EFAEF94(a1, a2) & 1;
}

uint64_t sub_19EFB0898(uint64_t a1, uint64_t a2)
{
  return sub_19EFAF068(a1, a2);
}

double sub_19EFB08B0(uint64_t a1, uint64_t a2)
{
  return sub_19EFAF248(a1, a2);
}

float sub_19EFB08C8(uint64_t a1, uint64_t a2)
{
  return sub_19EFAF31C(a1, a2);
}

uint64_t sub_19EFB08E0(uint64_t a1, uint64_t a2)
{
  return sub_19EFAFA68(a1, a2, (void (*)(unsigned char *, void *))sub_19EFAF3F0);
}

uint64_t sub_19EFB0914(uint64_t a1, uint64_t a2)
{
  return sub_19EFAF7BC(a1, a2, (void (*)(unsigned char *, void *))sub_19EFAF490);
}

uint64_t sub_19EFB0948(uint64_t a1, uint64_t a2)
{
  return sub_19EFAF8A0(a1, a2, (void (*)(unsigned char *, void *))sub_19EFAF530);
}

uint64_t sub_19EFB097C(uint64_t a1, uint64_t a2)
{
  return sub_19EFAF984(a1, a2, (void (*)(unsigned char *, void *))sub_19EFAF5D4);
}

uint64_t sub_19EFB09B0(uint64_t a1, uint64_t a2)
{
  return sub_19EFAFA68(a1, a2, (void (*)(unsigned char *, void *))sub_19EFAF678);
}

uint64_t sub_19EFB09E4()
{
  return sub_19F1DD5DC();
}

uint64_t sub_19EFB09FC(uint64_t a1, uint64_t a2)
{
  return sub_19EFAFA68(a1, a2, (void (*)(unsigned char *, void *))sub_19EFAF71C);
}

uint64_t sub_19EFB0A30(uint64_t a1, uint64_t a2)
{
  return sub_19EFAF7BC(a1, a2, (void (*)(unsigned char *, void *))sub_19EFAF7FC);
}

uint64_t sub_19EFB0A64(uint64_t a1, uint64_t a2)
{
  return sub_19EFAF8A0(a1, a2, (void (*)(unsigned char *, void *))sub_19EFAF8E0);
}

uint64_t sub_19EFB0A98(uint64_t a1, uint64_t a2)
{
  return sub_19EFAF984(a1, a2, (void (*)(unsigned char *, void *))sub_19EFAF9C4);
}

uint64_t sub_19EFB0ACC(uint64_t a1, uint64_t a2)
{
  return sub_19EFAFA68(a1, a2, (void (*)(unsigned char *, void *))sub_19EFAFAA8);
}

uint64_t sub_19EFB0B00()
{
  return sub_19F1DD5EC();
}

uint64_t sub_19EFB0B18()
{
  return sub_19F1DD56C();
}

uint64_t sub_19EFB0B30()
{
  return sub_19F1DD55C();
}

uint64_t sub_19EFB0B48()
{
  uint64_t result = sub_19F1DD57C();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19EFB0B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFB0D98(a1, a2, a3, MEMORY[0x1E4FBBF60]);
}

uint64_t sub_19EFB0B98()
{
  uint64_t result = sub_19F1DD58C();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19EFB0BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFB0CE0(a1, a2, a3, MEMORY[0x1E4FBBF78]);
}

uint64_t sub_19EFB0BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFB0D3C(a1, a2, a3, MEMORY[0x1E4FBBF80]);
}

uint64_t sub_19EFB0C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFB0D98(a1, a2, a3, MEMORY[0x1E4FBBF88]);
}

uint64_t sub_19EFB0C40()
{
  uint64_t result = sub_19F1DD5BC();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19EFB0C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFB0E20(a1, a2, a3, MEMORY[0x1E4FBBFA0]);
}

uint64_t sub_19EFB0C90()
{
  uint64_t result = sub_19F1DD59C();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19EFB0CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFB0CE0(a1, a2, a3, MEMORY[0x1E4FBBF98]);
}

uint64_t sub_19EFB0CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_19EFB0D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFB0D3C(a1, a2, a3, MEMORY[0x1E4FBBFA8]);
}

uint64_t sub_19EFB0D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_19EFB0D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFB0D98(a1, a2, a3, MEMORY[0x1E4FBBFB0]);
}

uint64_t sub_19EFB0D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_19EFB0DD0()
{
  uint64_t result = sub_19F1DD5CC();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19EFB0DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFB0E20(a1, a2, a3, MEMORY[0x1E4FBBFC0]);
}

uint64_t sub_19EFB0E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a4();
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_19EFB0E4C()
{
  return sub_19F1DD5AC();
}

uint64_t sub_19EFB0E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19EFAFB4C(a1, a2, a5, a3, a4);
}

uint64_t sub_19EFB0EA0(uint64_t a1, uint64_t a2)
{
  return sub_19EFAFEC8(a1, a2);
}

uint64_t sub_19EFB0EB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19EFB0250(a1, a2);
}

uint64_t sub_19EFB0ED0(uint64_t a1, uint64_t a2)
{
  return sub_19EFB0528(a1, a2);
}

void *sub_19EFB0EE8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = sub_19EFDD710(v1, 0, 0, *(void **)(v0 + 48));
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v0, v3);
  if (v1 >= (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4))
  {
    uint64_t v7 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
    *uint64_t v9 = MEMORY[0x1E4FBC840] + 8;
    sub_19F1DCDAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v7 - 8) + 104))(v9, *MEMORY[0x1E4FBBA80], v7);
    swift_willThrow();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t v6 = *(void *)(v0 + 32);
    __swift_project_boxed_opaque_existential_1((void *)v0, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v1, v5, v6);
  }
  return v2;
}

uint64_t sub_19EFB1070()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v0, v3);
  if (v2 >= (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4))
  {
    sub_19EFDD710(v2, 0, 0, *(void **)(v0 + 48));
    uint64_t v12 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v14 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
    *uint64_t v14 = MEMORY[0x1E4FBC840] + 8;
    sub_19F1DCDAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x1E4FBBA80], v12);
    swift_willThrow();
    return v11 & 1;
  }
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v0, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v6 + 24))(v21, v2, v5, v6);
  sub_19EEC3ED8((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = v19;
  if (v19)
  {
    uint64_t v8 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    char v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    uint64_t result = sub_19EEC3418((uint64_t)v21);
    if ((v9 & 1) == 0)
    {
      char v11 = 0;
      return v11 & 1;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v18, (uint64_t *)&unk_1E946FD20);
    uint64_t result = sub_19EEC3418((uint64_t)v21);
  }
  uint64_t v15 = *(void *)(v1 + 56);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v1 + 56) = v17;
    char v11 = 1;
    return v11 & 1;
  }
  __break(1u);
  return result;
}

void *sub_19EFB1294@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, void *a4@<X8>)
{
  v80 = a3;
  uint64_t v81 = a1;
  v78 = a4;
  uint64_t v79 = *((void *)a2 - 1);
  MEMORY[0x1F4188790](a1);
  v76 = (char *)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v75);
  uint64_t v8 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DCAAC();
  uint64_t v77 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v66 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v66 - v19;
  uint64_t v21 = v91;
  uint64_t result = sub_19EFB0EE8();
  if (!v21)
  {
    v74 = v20;
    v66[1] = v11;
    v66[2] = v9;
    v67 = v17;
    v68 = v8;
    v69 = v14;
    uint64_t v70 = v12;
    v72 = a2;
    v73 = result;
    uint64_t v91 = v4;
    uint64_t v23 = v81;
    uint64_t v71 = 0;
    sub_19EEC3ED8((uint64_t)v90, (uint64_t)v85, (uint64_t *)&unk_1E946FD20);
    uint64_t v24 = v86;
    if (v86)
    {
      uint64_t v25 = v87;
      __swift_project_boxed_opaque_existential_1(v85, v86);
      char v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 104))(v24, v25);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v85);
      v27 = v74;
      if ((v26 & 1) == 0) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)v85, (uint64_t *)&unk_1E946FD20);
      v27 = v74;
    }
    if (sub_19EE71C18(0xD00000000000002BLL, 0x800000019F26B930, *(void *)(v91 + 40)))
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = sub_19F1DCDCC();
      swift_allocError();
      v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
      uint64_t *v38 = v23;
      swift_bridgeObjectRetain();
      sub_19F1DCDAC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v38, *MEMORY[0x1E4FBBA80], v36);
      swift_willThrow();
      return (void *)sub_19EEC3418((uint64_t)v90);
    }
LABEL_8:
    sub_19EEC355C((uint64_t)v90, (uint64_t)v85);
    uint64_t v28 = v72;
    int v29 = swift_dynamicCast();
    uint64_t v30 = v79;
    uint64_t v31 = *(char **)(v79 + 56);
    if (v29)
    {
      ((void (*)(char *, void, uint64_t, char *))v31)(v27, 0, 1, v28);
      swift_bridgeObjectRelease();
      sub_19EEC3418((uint64_t)v90);
      uint64_t result = (void *)(*(uint64_t (**)(void *, char *, char *))(v30 + 32))(v78, v27, v28);
      uint64_t v32 = v91;
      uint64_t v33 = *(void *)(v91 + 56);
      BOOL v34 = __OFADD__(v33, 1);
      uint64_t v35 = v33 + 1;
      if (!v34)
      {
LABEL_10:
        *(void *)(v32 + 56) = v35;
        return result;
      }
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    ((void (*)(char *, uint64_t, uint64_t, char *))v31)(v27, 1, 1, v28);
    uint64_t v39 = *(void *)(v77 + 8);
    ((void (*)(char *, uint64_t))v39)(v27, v70);
    if (sub_19F1DB34C() != v23)
    {
      if (sub_19F1DB57C() != v23)
      {
        sub_19EEC355C((uint64_t)v90, (uint64_t)v85);
        uint64_t v40 = v91;
        uint64_t v88 = *(void *)(v91 + 40);
        v89 = v73;
        *((void *)&v83 + 1) = &type metadata for _JSONObjectDecoder;
        unint64_t v84 = sub_19EE70560();
        *(void *)&long long v82 = swift_allocObject();
        sub_19EE70470((uint64_t)v85, v82 + 16);
        swift_bridgeObjectRetain();
        v41 = v76;
        uint64_t v42 = v71;
        sub_19F1DC59C();
        sub_19EE703B4((uint64_t)v85);
        sub_19EEC3418((uint64_t)v90);
        uint64_t result = v78;
        if (v42) {
          return result;
        }
        uint64_t v43 = *(void *)(v40 + 56);
        BOOL v34 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (!v34)
        {
          *(void *)(v40 + 56) = v44;
          return (void *)(*(uint64_t (**)(void *, char *, char *))(v79 + 32))(result, v41, v72);
        }
        goto LABEL_39;
      }
LABEL_23:
      v80 = (void (*)(char *, uint64_t))v39;
      v51 = v31;
      sub_19EEC3ED8((uint64_t)v90, (uint64_t)v85, (uint64_t *)&unk_1E946FD20);
      uint64_t v52 = v86;
      if (v86)
      {
        uint64_t v53 = v87;
        __swift_project_boxed_opaque_existential_1(v85, v86);
        v54 = *(void (**)(uint64_t, uint64_t))(v53 + 112);
        uint64_t v55 = v53;
        uint64_t v30 = v79;
        v54(v52, v55);
        uint64_t v28 = v72;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v85);
      }
      else
      {
        sub_19EEBD664((uint64_t)v85, (uint64_t *)&unk_1E946FD20);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v68, 1, 1, v23);
      }
      uint64_t v56 = v70;
      v57 = v69;
      if (swift_dynamicCast())
      {
        ((void (*)(char *, void, uint64_t, char *))v51)(v57, 0, 1, v28);
        swift_bridgeObjectRelease();
        sub_19EEC3418((uint64_t)v90);
        uint64_t result = (void *)(*(uint64_t (**)(void *, char *, char *))(v30 + 32))(v78, v57, v28);
        uint64_t v32 = v91;
        uint64_t v58 = *(void *)(v91 + 56);
        BOOL v34 = __OFADD__(v58, 1);
        uint64_t v35 = v58 + 1;
        if (!v34) {
          goto LABEL_10;
        }
        __break(1u);
      }
      ((void (*)(char *, uint64_t, uint64_t, char *))v51)(v57, 1, 1, v28);
      v80(v57, v56);
      goto LABEL_32;
    }
    sub_19EEC3ED8((uint64_t)v90, (uint64_t)v85, (uint64_t *)&unk_1E946FD20);
    uint64_t v45 = v86;
    if (v86)
    {
      v46 = (void (*)(char *, uint64_t))v39;
      uint64_t v39 = v87;
      __swift_project_boxed_opaque_existential_1(v85, v86);
      uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v45, v39);
      uint64_t v48 = v47;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v85);
      if (v48)
      {
        v49 = v31;
        sub_19F1DB2FC();
        swift_bridgeObjectRelease();
        uint64_t v28 = v67;
        uint64_t v31 = v72;
        if ((swift_dynamicCast() & 1) == 0)
        {
          ((void (*)(char *, uint64_t, uint64_t, char *))v49)(v28, 1, 1, v31);
          v46(v28, v70);
          uint64_t v63 = sub_19F1DCDCC();
          swift_allocError();
          uint64_t v65 = v64;
          sub_19F1DCDAC();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v63 - 8) + 104))(v65, *MEMORY[0x1E4FBBA78], v63);
LABEL_36:
          swift_willThrow();
          return (void *)sub_19EEC3418((uint64_t)v90);
        }
        ((void (*)(char *, void, uint64_t, char *))v49)(v28, 0, 1, v31);
        swift_bridgeObjectRelease();
        sub_19EEC3418((uint64_t)v90);
        uint64_t result = (void *)(*(uint64_t (**)(void *, char *, char *))(v79 + 32))(v78, v28, v31);
        uint64_t v32 = v91;
        uint64_t v50 = *(void *)(v91 + 56);
        BOOL v34 = __OFADD__(v50, 1);
        uint64_t v35 = v50 + 1;
        if (!v34) {
          goto LABEL_10;
        }
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)v85, (uint64_t *)&unk_1E946FD20);
    }
LABEL_32:
    sub_19EEC3ED8((uint64_t)v90, (uint64_t)v85, (uint64_t *)&unk_1E946FD20);
    uint64_t v59 = v86;
    if (v86)
    {
      uint64_t v60 = v87;
      __swift_project_boxed_opaque_existential_1(v85, v86);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v60 + 96))(&v82, v59, v60);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v85);
    }
    else
    {
      sub_19EEBD664((uint64_t)v85, (uint64_t *)&unk_1E946FD20);
      long long v82 = 0u;
      long long v83 = 0u;
    }
    sub_19EEBD664((uint64_t)&v82, &qword_1EB393260);
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393260);
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EB8);
    v85[0] = v61;
    sub_19F1DCDCC();
    swift_allocError();
    sub_19EFAC1D0(v23, (uint64_t)v85, v62);
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)v85, &qword_1EB393260);
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_19EFB1D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t result = (uint64_t)sub_19EFB0EE8();
  if (!v3)
  {
    uint64_t v8 = result;
    uint64_t v24 = a2;
    sub_19EEC3ED8((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_1E946FD20);
    uint64_t v9 = v21;
    if (v21)
    {
      uint64_t v10 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 104))(v9, v10);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
      if ((v11 & 1) == 0)
      {
LABEL_7:
        sub_19EEC355C((uint64_t)v23, (uint64_t)v19);
        uint64_t v12 = *(void *)(v4 + 40);
        swift_bridgeObjectRetain();
        sub_19EE4A844((uint64_t)v19, v12, v8, (uint64_t)v20);
        type metadata accessor for _JSONObjectKeyedDecodingContainer();
        swift_getWitnessTable();
        sub_19F1DD1FC();
        uint64_t result = sub_19EEC3418((uint64_t)v23);
        uint64_t v13 = *(void *)(v4 + 56);
        BOOL v14 = __OFADD__(v13, 1);
        uint64_t v15 = v13 + 1;
        if (v14) {
          __break(1u);
        }
        else {
          *(void *)(v4 + 56) = v15;
        }
        return result;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E946FD20);
    }
    if (sub_19EE71C18(0xD00000000000002BLL, 0x800000019F26B930, *(void *)(v4 + 40)))
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = sub_19F1DCDCC();
      swift_allocError();
      uint64_t v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
      *uint64_t v18 = a1;
      swift_bridgeObjectRetain();
      sub_19F1DCDAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x1E4FBBA80], v16);
      swift_willThrow();
      return sub_19EEC3418((uint64_t)v23);
    }
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_19EFB1FA0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t result = (uint64_t)sub_19EFB0EE8();
  if (!v2)
  {
    uint64_t v6 = result;
    sub_19EEC3ED8((uint64_t)v25, (uint64_t)&v21, (uint64_t *)&unk_1E946FD20);
    uint64_t v7 = *((void *)&v22 + 1);
    if (*((void *)&v22 + 1))
    {
      uint64_t v8 = v23;
      __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
      char v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v21);
      if ((v9 & 1) == 0) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)&v21, (uint64_t *)&unk_1E946FD20);
    }
    if (sub_19EE71C18(0xD00000000000002BLL, 0x800000019F26B930, *(void *)(v3 + 40)))
    {
      uint64_t v17 = sub_19F1DCDCC();
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
      *uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EA8);
      sub_19F1DCDAC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBA80], v17);
      swift_willThrow();
      return sub_19EEC3418((uint64_t)v25);
    }
LABEL_7:
    sub_19EEC355C((uint64_t)v25, (uint64_t)v20);
    uint64_t v10 = *(void *)(v3 + 40);
    swift_bridgeObjectRetain();
    uint64_t result = sub_19EFAB604((uint64_t)v20, v10, v6, (uint64_t)&v21);
    uint64_t v11 = *(void *)(v3 + 56);
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12)
    {
      __break(1u);
      return result;
    }
    *(void *)(v3 + 56) = v13;
    a1[3] = &type metadata for _JSONObjectUnkeyedDecodingContainer;
    a1[4] = sub_19EFAB9D8();
    BOOL v14 = (_OWORD *)swift_allocObject();
    *a1 = v14;
    long long v15 = v22;
    v14[1] = v21;
    v14[2] = v15;
    long long v16 = v24;
    void v14[3] = v23;
    v14[4] = v16;
    return sub_19EEC3418((uint64_t)v25);
  }
  return result;
}

void *sub_19EFB21E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t result = sub_19EFB0EE8();
  if (!v2)
  {
    uint64_t v6 = result;
    sub_19EEC3ED8((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1E946FD20);
    uint64_t v7 = v18;
    if (v18)
    {
      uint64_t v8 = v19;
      __swift_project_boxed_opaque_existential_1(v17, v18);
      char v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
      if ((v9 & 1) == 0) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)v17, (uint64_t *)&unk_1E946FD20);
    }
    if (sub_19EE71C18(0xD00000000000002BLL, 0x800000019F26B930, *(void *)(v3 + 40)))
    {
      uint64_t v14 = sub_19F1DCDCC();
      swift_allocError();
      long long v16 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
      *long long v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946F6F8);
      sub_19F1DCDAC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, *MEMORY[0x1E4FBBA80], v14);
      swift_willThrow();
      return (void *)sub_19EEC3418((uint64_t)v20);
    }
LABEL_7:
    a1[3] = (uint64_t)&type metadata for _JSONObjectDecoder;
    a1[4] = sub_19EE70560();
    uint64_t v10 = swift_allocObject();
    *a1 = v10;
    sub_19EEC355C((uint64_t)v20, v10 + 16);
    uint64_t result = *(void **)(v3 + 40);
    *(void *)(v10 + 56) = result;
    *(void *)(v10 + 64) = v6;
    uint64_t v11 = *(void *)(v3 + 56);
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12)
    {
      __break(1u);
      return result;
    }
    *(void *)(v3 + 56) = v13;
    swift_bridgeObjectRetain();
    return (void *)sub_19EEC3418((uint64_t)v20);
  }
  return result;
}

uint64_t sub_19EFB23FC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

BOOL sub_19EFB2454()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return v1 >= (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_19EFB24B4()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_19EFB24BC()
{
  return sub_19EFB1070() & 1;
}

uint64_t sub_19EFB24D8()
{
  return sub_19EFB2FF0() & 1;
}

uint64_t sub_19EFB24F4()
{
  return sub_19EFB30B8();
}

uint64_t sub_19EFB250C()
{
  return sub_19EFB3280();
}

uint64_t sub_19EFB2524()
{
  return sub_19EFB3350();
}

uint64_t sub_19EFB253C()
{
  return sub_19EFB3420();
}

uint64_t sub_19EFB2554()
{
  return sub_19EFB3510();
}

uint64_t sub_19EFB256C()
{
  return sub_19EFB3600();
}

uint64_t sub_19EFB2584()
{
  return sub_19EFB36F4();
}

uint64_t sub_19EFB259C()
{
  return sub_19EFB37E8();
}

uint64_t sub_19EFB25B4()
{
  return sub_19F1DD3CC();
}

uint64_t sub_19EFB25CC()
{
  return sub_19EFB38DC();
}

uint64_t sub_19EFB25E4()
{
  return sub_19EFB39CC();
}

uint64_t sub_19EFB25FC()
{
  return sub_19EFB3AC0();
}

uint64_t sub_19EFB2614()
{
  return sub_19EFB3BB4();
}

uint64_t sub_19EFB262C()
{
  return sub_19EFB3CA8();
}

uint64_t sub_19EFB2644()
{
  return sub_19F1DD3DC();
}

void *sub_19EFB265C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, void *a4@<X8>)
{
  return sub_19EFB1294(a1, a2, a3, a4);
}

uint64_t sub_19EFB2674()
{
  return sub_19F1DD35C();
}

uint64_t sub_19EFB268C()
{
  return sub_19F1DD34C();
}

uint64_t sub_19EFB26A4()
{
  uint64_t result = sub_19F1DD36C();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19EFB26C8(uint64_t a1, uint64_t a2)
{
  return sub_19EFB28F4(a1, a2, MEMORY[0x1E4FBBE18]);
}

uint64_t sub_19EFB26F4()
{
  uint64_t result = sub_19F1DD37C();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19EFB2718(uint64_t a1, uint64_t a2)
{
  return sub_19EFB283C(a1, a2, MEMORY[0x1E4FBBE20]);
}

uint64_t sub_19EFB2744(uint64_t a1, uint64_t a2)
{
  return sub_19EFB2898(a1, a2, MEMORY[0x1E4FBBE28]);
}

uint64_t sub_19EFB2770(uint64_t a1, uint64_t a2)
{
  return sub_19EFB28F4(a1, a2, MEMORY[0x1E4FBBE30]);
}

uint64_t sub_19EFB279C()
{
  uint64_t result = sub_19F1DD3AC();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19EFB27C0(uint64_t a1, uint64_t a2)
{
  return sub_19EFB297C(a1, a2, MEMORY[0x1E4FBBE40]);
}

uint64_t sub_19EFB27EC()
{
  uint64_t result = sub_19F1DD38C();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19EFB2810(uint64_t a1, uint64_t a2)
{
  return sub_19EFB283C(a1, a2, MEMORY[0x1E4FBBE38]);
}

uint64_t sub_19EFB283C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_19EFB286C(uint64_t a1, uint64_t a2)
{
  return sub_19EFB2898(a1, a2, MEMORY[0x1E4FBBE48]);
}

uint64_t sub_19EFB2898(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_19EFB28C8(uint64_t a1, uint64_t a2)
{
  return sub_19EFB28F4(a1, a2, MEMORY[0x1E4FBBE50]);
}

uint64_t sub_19EFB28F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_19EFB292C()
{
  uint64_t result = sub_19F1DD3BC();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19EFB2950(uint64_t a1, uint64_t a2)
{
  return sub_19EFB297C(a1, a2, MEMORY[0x1E4FBBE58]);
}

uint64_t sub_19EFB297C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_19EFB29A8()
{
  return sub_19F1DD39C();
}

uint64_t sub_19EFB29D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EFB1D2C(a1, a2);
}

uint64_t sub_19EFB29EC@<X0>(void *a1@<X8>)
{
  return sub_19EFB1FA0(a1);
}

void *sub_19EFB2A04@<X0>(uint64_t *a1@<X8>)
{
  return sub_19EFB21E8(a1);
}

uint64_t sub_19EFB2A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_19EFB05AC(a1, a2, *(void *)(v3 + 32), a3);
}

uint64_t sub_19EFB2A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_19EFAFF4C(a1, a2, v3[4], v3[5], v3[2], v3[3], a3);
}

uint64_t sub_19EFB2A60(uint64_t a1, uint64_t a2)
{
  return sub_19EE6F774(a1, a2, sub_19EFAFBD8);
}

char *keypath_get_selector_unsignedLongLongValue()
{
  return sel_unsignedLongLongValue;
}

id sub_19EFB2A98@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_unsignedLongLongValue);
  *a2 = result;
  return result;
}

char *keypath_get_selector_unsignedIntValue()
{
  return sel_unsignedIntValue;
}

id sub_19EFB2AD8@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_unsignedIntValue);
  *a2 = result;
  return result;
}

char *keypath_get_selector_unsignedShortValue()
{
  return sel_unsignedShortValue;
}

id sub_19EFB2B18@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_unsignedShortValue);
  *a2 = (_WORD)result;
  return result;
}

char *keypath_get_selector_unsignedCharValue()
{
  return sel_unsignedCharValue;
}

id sub_19EFB2B58@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_unsignedCharValue);
  *a2 = (_BYTE)result;
  return result;
}

char *keypath_get_selector_unsignedIntegerValue()
{
  return sel_unsignedIntegerValue;
}

id sub_19EFB2B98@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_unsignedIntegerValue);
  *a2 = result;
  return result;
}

id sub_19EFB2BCC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_longLongValue);
  *a2 = result;
  return result;
}

char *keypath_get_selector_intValue()
{
  return sel_intValue;
}

id sub_19EFB2C0C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_intValue);
  *a2 = result;
  return result;
}

char *keypath_get_selector_shortValue()
{
  return sel_shortValue;
}

id sub_19EFB2C4C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_shortValue);
  *a2 = (_WORD)result;
  return result;
}

char *keypath_get_selector_charValue()
{
  return sel_charValue;
}

id sub_19EFB2C8C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_charValue);
  *a2 = (_BYTE)result;
  return result;
}

id sub_19EFB2CC0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_integerValue);
  *a2 = result;
  return result;
}

char *keypath_get_selector_floatValue()
{
  return sel_floatValue;
}

id sub_19EFB2D00@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_floatValue);
  *a2 = v4;
  return result;
}

char *keypath_get_selector_doubleValue()
{
  return sel_doubleValue;
}

id sub_19EFB2D40@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_doubleValue);
  *a2 = v4;
  return result;
}

id sub_19EFB2D74@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_BOOLValue);
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_19EFB2DA8()
{
  return sub_19F1DD91C();
}

unint64_t sub_19EFB2E0C()
{
  unint64_t result = qword_1E946DEC8;
  if (!qword_1E946DEC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB3931D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DEC8);
  }
  return result;
}

void *sub_19EFB2E68()
{
  uint64_t v1 = (uint64_t)v0;
  sub_19EEC3ED8((uint64_t)v0, (uint64_t)v11, (uint64_t *)&unk_1E946FD20);
  uint64_t v2 = v12;
  if (v12)
  {
    uint64_t v3 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v0 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
    uint64_t v5 = v4;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    if (v5) {
      return v0;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v11, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3ED8(v1, (uint64_t)v11, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v12;
  if (v12)
  {
    uint64_t v7 = v13;
    uint64_t v0 = __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v7 + 96))(v10, v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  }
  else
  {
    sub_19EEBD664((uint64_t)v11, (uint64_t *)&unk_1E946FD20);
    memset(v10, 0, sizeof(v10));
  }
  sub_19F1DCDCC();
  swift_allocError();
  sub_19EFAC1D0(MEMORY[0x1E4FBB1A0], (uint64_t)v10, v8);
  sub_19EEBD664((uint64_t)v10, &qword_1EB393260);
  swift_willThrow();
  return v0;
}

uint64_t sub_19EFB2FF0()
{
  uint64_t v2 = v0;
  swift_getKeyPath();
  sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0 & 1;
  }
  LOBYTE(v0) = sub_19EFABFE4();
  sub_19EEC3418((uint64_t)v7);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + 56);
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (!v5)
  {
    *(void *)(v2 + 56) = v6;
    return v0 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB30B8()
{
  uint64_t v2 = v0;
  sub_19EFB0EE8();
  if (v1) {
    return (uint64_t)v0;
  }
  sub_19EEC3ED8((uint64_t)v18, (uint64_t)v15, (uint64_t *)&unk_1E946FD20);
  uint64_t v3 = v16;
  if (!v16)
  {
    sub_19EEBD664((uint64_t)v15, (uint64_t *)&unk_1E946FD20);
    goto LABEL_7;
  }
  uint64_t v4 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  uint64_t v0 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v6 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  if (!v6)
  {
LABEL_7:
    sub_19EEC3ED8((uint64_t)v18, (uint64_t)v15, (uint64_t *)&unk_1E946FD20);
    uint64_t v11 = v16;
    if (v16)
    {
      uint64_t v12 = v17;
      uint64_t v0 = __swift_project_boxed_opaque_existential_1(v15, v16);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v12 + 96))(v14, v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    }
    else
    {
      sub_19EEBD664((uint64_t)v15, (uint64_t *)&unk_1E946FD20);
      memset(v14, 0, sizeof(v14));
    }
    sub_19F1DCDCC();
    swift_allocError();
    sub_19EFAC1D0(MEMORY[0x1E4FBB1A0], (uint64_t)v14, v13);
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)v14, &qword_1EB393260);
    swift_willThrow();
    sub_19EEC3418((uint64_t)v18);
    return (uint64_t)v0;
  }
  sub_19EEC3418((uint64_t)v18);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = v2[7];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (!v9)
  {
    v2[7] = v10;
    return (uint64_t)v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB3280()
{
  swift_getKeyPath();
  sub_19EFB0EE8();
  if (v1) {
    return swift_release();
  }
  sub_19EFAC398();
  sub_19EEC3418((uint64_t)v6);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v0 + 56);
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4) {
    __break(1u);
  }
  else {
    *(void *)(v0 + 56) = v5;
  }
  return result;
}

uint64_t sub_19EFB3350()
{
  swift_getKeyPath();
  sub_19EFB0EE8();
  if (v1) {
    return swift_release();
  }
  sub_19EFAC71C();
  sub_19EEC3418((uint64_t)v6);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v0 + 56);
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4) {
    __break(1u);
  }
  else {
    *(void *)(v0 + 56) = v5;
  }
  return result;
}

uint64_t sub_19EFB3420()
{
  uint64_t v2 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v4 = sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  uint64_t v0 = sub_19EFACAA0(KeyPath, (uint64_t)v4, MEMORY[0x1E4FBB550], MEMORY[0x1E4F27F38], 7630409);
  sub_19EEC3418((uint64_t)v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB3510()
{
  uint64_t v2 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v4 = sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  uint64_t v0 = sub_19EFACE2C(KeyPath, (uint64_t)v4, MEMORY[0x1E4FBC098], MEMORY[0x1E4F28100], 947154505);
  sub_19EEC3418((uint64_t)v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB3600()
{
  uint64_t v2 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v4 = sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  uint64_t v0 = sub_19EFAD1B8(KeyPath, (uint64_t)v4, MEMORY[0x1E4FBC0F8], MEMORY[0x1E4F28120], 0x3631746E49);
  sub_19EEC3418((uint64_t)v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB36F4()
{
  uint64_t v2 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v4 = sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  uint64_t v0 = sub_19EFAD544(KeyPath, (uint64_t)v4, MEMORY[0x1E4FBC150], MEMORY[0x1E4F28128], 0x3233746E49);
  sub_19EEC3418((uint64_t)v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB37E8()
{
  uint64_t v2 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v4 = sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  uint64_t v0 = sub_19EFACAA0(KeyPath, (uint64_t)v4, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4F28130], 0x3436746E49);
  sub_19EEC3418((uint64_t)v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB38DC()
{
  uint64_t v2 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v4 = sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  uint64_t v0 = sub_19EFACAA0(KeyPath, (uint64_t)v4, MEMORY[0x1E4FBB808], MEMORY[0x1E4F280C8], 1953384789);
  sub_19EEC3418((uint64_t)v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB39CC()
{
  uint64_t v2 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v4 = sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  uint64_t v0 = sub_19EFACE2C(KeyPath, (uint64_t)v4, MEMORY[0x1E4FBC358], MEMORY[0x1E4F28150], 0x38746E4955);
  sub_19EEC3418((uint64_t)v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB3AC0()
{
  uint64_t v2 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v4 = sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  uint64_t v0 = sub_19EFAD1B8(KeyPath, (uint64_t)v4, MEMORY[0x1E4FBC450], MEMORY[0x1E4F28168], 0x3631746E4955);
  sub_19EEC3418((uint64_t)v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB3BB4()
{
  uint64_t v2 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v4 = sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  uint64_t v0 = sub_19EFAD544(KeyPath, (uint64_t)v4, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4F28170], 0x3233746E4955);
  sub_19EEC3418((uint64_t)v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB3CA8()
{
  uint64_t v2 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v4 = sub_19EFB0EE8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  uint64_t v0 = sub_19EFACAA0(KeyPath, (uint64_t)v4, MEMORY[0x1E4FBC538], MEMORY[0x1E4F28178], 0x3436746E4955);
  sub_19EEC3418((uint64_t)v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFB3D9C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19EFB3DD4(uint64_t a1)
{
  return a1;
}

uint64_t Array<A>.init(_partiallyDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_19EEC355C(a1, (uint64_t)v11);
  uint64_t v10 = *a2;
  uint64_t v8 = Array<A>.init(tryDeserializing:using:)((uint64_t)v11, &v10, a3, a4);
  sub_19EEC3418(a1);
  return v8;
}

uint64_t sub_19EFB3E78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = Array<A>.init(_partiallyDeserializing:using:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
  *a5 = result;
  return result;
}

uint64_t Dictionary<>.init(_partiallyDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_19EEC3ED8(a1, (uint64_t)&v23, (uint64_t *)&unk_1E946FD20);
  uint64_t v8 = *((void *)&v24 + 1);
  if (!*((void *)&v24 + 1))
  {
    sub_19EEBD664((uint64_t)&v23, (uint64_t *)&unk_1E946FD20);
    goto LABEL_6;
  }
  uint64_t v9 = v25;
  __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
  char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 104))(v8, v9);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_19F1DBAEC();
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
    return v11;
  }
  JSONObject.dictionary.getter((uint64_t)&v20);
  if (*((void *)&v21 + 1))
  {
    long long v23 = v20;
    long long v24 = v21;
    uint64_t v25 = v22;
    sub_19EF5C3BC((uint64_t)&v23, (uint64_t)&v20);
    uint64_t v19 = *a2;
    uint64_t v11 = Dictionary<>.init(tryDeserializing:using:)((uint64_t)&v20, &v19, a3, a4);
    sub_19EEC3418(a1);
    sub_19EEC05FC((uint64_t)&v23);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v20, &qword_1E946F740);
    uint64_t v13 = sub_19F1DBC0C();
    sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, *a2, (uint64_t)&v23);
    sub_19EEC3ED8((uint64_t)&v23, (uint64_t)&v20, qword_1E946D938);
    uint64_t v14 = *((void *)&v21 + 1);
    if (*((void *)&v21 + 1))
    {
      uint64_t v15 = v22;
      __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
      sub_19EF5B580();
      uint64_t v16 = (void *)swift_allocError();
      uint64_t v17 = MEMORY[0x1E4FBC860];
      *uint64_t v18 = v13;
      v18[1] = v17;
      v18[2] = 0;
      void v18[3] = 0;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v15 + 8))(v13, v16, v14, v15);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v20, qword_1E946D938);
    }
    uint64_t v11 = sub_19F1DBAEC();
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
    sub_19EEBD664((uint64_t)&v23, qword_1E946D938);
  }
  return v11;
}

uint64_t sub_19EFB4134@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = Dictionary<>.init(_partiallyDeserializing:using:)(a1, a2, *(void *)(a3 + 24), *(void *)(a4 - 8));
  *a5 = result;
  return result;
}

uint64_t Optional<A>.init(_partiallyDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_19EEC355C(a1, (uint64_t)v10);
  uint64_t v9 = *a2;
  (*(void (**)(unsigned char *, uint64_t *, uint64_t, uint64_t))(a4 + 16))(v10, &v9, a3, a4);
  return sub_19EEC3418(a1);
}

uint64_t sub_19EFB41EC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return Optional<A>.init(_partiallyDeserializing:using:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t dispatch thunk of _DiscardOnErrorExpressibleByJSON.init(_partiallyDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

JetEngine::JSONContext __swiftcall JSONContext.init(userInfo:)(Swift::OpaquePointer userInfo)
{
  uint64_t v55 = v1;
  uint64_t v3 = sub_19F1DCF8C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D480);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v54 - v11;
  unint64_t v68 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  sub_19F1DBB8C();
  uint64_t v59 = v4;
  rawValue = userInfo._rawValue;
  uint64_t v15 = *((void *)userInfo._rawValue + 8);
  uint64_t v14 = (char *)userInfo._rawValue + 64;
  uint64_t v13 = v15;
  uint64_t v16 = 1 << *(v14 - 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v13;
  uint64_t v58 = v4 + 16;
  v62 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  int64_t v63 = 0;
  uint64_t v61 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v56 = v14;
  int64_t v57 = (unint64_t)(v16 + 63) >> 6;
  int64_t v54 = v57 - 1;
  while (1)
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      uint64_t v21 = (v18 - 1) & v18;
      unint64_t v22 = v20 | (v63 << 6);
LABEL_8:
      long long v23 = rawValue;
      (*(void (**)(char *, unint64_t, uint64_t))(v59 + 16))(v9, rawValue[6] + *(void *)(v59 + 72) * v22, v3);
      uint64_t v24 = v23[7] + 32 * v22;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D478);
      sub_19EEBDBA4(v24, (uint64_t)&v9[*(int *)(v25 + 48)]);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 0, 1, v25);
      goto LABEL_27;
    }
    int64_t v26 = v63 + 1;
    if (__OFADD__(v63, 1)) {
      goto LABEL_42;
    }
    if (v26 < v57)
    {
      unint64_t v27 = *(void *)&v56[8 * v26];
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v63 + 2;
      ++v63;
      if (v26 + 1 < v57)
      {
        unint64_t v27 = *(void *)&v56[8 * v28];
        if (v27) {
          goto LABEL_15;
        }
        int64_t v63 = v26 + 1;
        if (v26 + 2 < v57)
        {
          unint64_t v27 = *(void *)&v56[8 * v26 + 16];
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v28 = v26 + 3;
          int64_t v63 = v26 + 2;
          if (v26 + 3 < v57) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D478);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 1, 1, v29);
    uint64_t v21 = 0;
LABEL_27:
    sub_19EFBBD08((uint64_t)v9, (uint64_t)v12);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D478);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v12, 1, v30) == 1)
    {
      result.storage._rawValue = (void *)swift_release();
      *uint64_t v55 = v68;
      return result;
    }
    unint64_t v64 = v21;
    uint64_t v31 = &v12[*(int *)(v30 + 48)];
    uint64_t v32 = v12;
    uint64_t v33 = v3;
    (*v62)(v6, v12, v3);
    sub_19EEBDC00(v31, v67);
    BOOL v34 = v6;
    uint64_t v35 = sub_19F1DCF7C();
    uint64_t v37 = v36;
    sub_19EEBDBA4((uint64_t)v67, (uint64_t)v66);
    unint64_t v38 = v68;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v65 = (void *)v38;
    unint64_t v68 = 0x8000000000000000;
    unint64_t v41 = sub_19EEBD400(v35, v37);
    uint64_t v42 = *(void *)(v38 + 16);
    BOOL v43 = (v40 & 1) == 0;
    uint64_t v44 = v42 + v43;
    if (__OFADD__(v42, v43))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    char v45 = v40;
    if (*(void *)(v38 + 24) >= v44)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v48 = v65;
        if (v40) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_19EE7DBE0();
        uint64_t v48 = v65;
        if (v45) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_19EEBD714(v44, isUniquelyReferenced_nonNull_native);
      unint64_t v46 = sub_19EEBD400(v35, v37);
      if ((v45 & 1) != (v47 & 1)) {
        goto LABEL_44;
      }
      unint64_t v41 = v46;
      uint64_t v48 = v65;
      if (v45)
      {
LABEL_4:
        uint64_t v19 = (_OWORD *)(v48[7] + 32 * v41);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        sub_19EEBDC00(v66, v19);
        goto LABEL_5;
      }
    }
    v48[(v41 >> 6) + 8] |= 1 << v41;
    v49 = (uint64_t *)(v48[6] + 16 * v41);
    uint64_t *v49 = v35;
    v49[1] = v37;
    sub_19EEBDC00(v66, (_OWORD *)(v48[7] + 32 * v41));
    uint64_t v50 = v48[2];
    BOOL v51 = __OFADD__(v50, 1);
    uint64_t v52 = v50 + 1;
    if (v51) {
      goto LABEL_41;
    }
    v48[2] = v52;
    swift_bridgeObjectRetain();
LABEL_5:
    unint64_t v68 = (unint64_t)v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v67);
    uint64_t v6 = v34;
    uint64_t v3 = v33;
    (*v61)(v34, v33);
    uint64_t v12 = v32;
    unint64_t v18 = v64;
  }
  unint64_t v27 = *(void *)&v56[8 * v28];
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    uint64_t v21 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v63 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v57)
    {
      int64_t v63 = v54;
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)&v56[8 * v26];
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_43:
  __break(1u);
LABEL_44:
  result.storage._rawValue = (void *)sub_19F1DD65C();
  __break(1u);
  return result;
}

unint64_t sub_19EFB47EC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D490);
  uint64_t v2 = (void *)sub_19F1DD06C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  unint64_t result = swift_retain();
  uint64_t v5 = 0;
  uint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    uint64_t v8 = *(v6 - 2);
    uint64_t v9 = *(v6 - 1);
    uint64_t v10 = *v6;
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_9;
    }
    swift_bridgeObjectRetain();
    unint64_t result = sub_19EFB6C18(v8, v9);
    if (v11) {
      goto LABEL_13;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v12 = v8;
    v12[1] = v9;
    *(void *)(v2[7] + 8 * result) = v10;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_14;
    }
    v2[2] = v15;
    v6 += 3;
    ++v5;
    if (v7 == v3)
    {
LABEL_9:
      swift_release();
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_19EFB4930(uint64_t a1)
{
  return sub_19EFB4AA4(a1, &qword_1E9471F38);
}

unint64_t sub_19EFB493C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DED0);
  uint64_t v2 = (void *)sub_19F1DD06C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  unint64_t result = swift_retain();
  uint64_t v5 = 0;
  uint64_t v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    uint64_t v9 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    if (!v9)
    {
      swift_retain();
LABEL_12:
      swift_release();
      goto LABEL_13;
    }
    uint64_t v10 = *(v6 - 3);
    uint64_t v11 = *v6;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_19EEBD400(v10, v9);
    if (v12) {
      goto LABEL_15;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v13 = v10;
    v13[1] = v9;
    BOOL v14 = (void *)(v2[7] + 16 * result);
    *BOOL v14 = v8;
    v14[1] = v11;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_16;
    }
    v6 += 4;
    v2[2] = v17;
    ++v5;
    if (v7 == v3) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

unint64_t sub_19EFB4A98(uint64_t a1)
{
  return sub_19EFB4AA4(a1, &qword_1E946F6B0);
}

unint64_t sub_19EFB4AA4(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_19F1DD06C();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  unint64_t result = swift_retain();
  uint64_t v6 = 0;
  uint64_t v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v8 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    uint64_t v10 = *(v7 - 1);
    uint64_t v9 = *v7;
    if (!v10)
    {
      swift_bridgeObjectRetain();
LABEL_12:
      swift_release();
      goto LABEL_13;
    }
    uint64_t v11 = *(v7 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_19EEBD400(v11, v10);
    if (v12) {
      goto LABEL_15;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v13 = v11;
    v13[1] = v10;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v14 = v3[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_16;
    }
    v3[2] = v16;
    v7 += 3;
    ++v6;
    if (v8 == v4) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

unint64_t sub_19EFB4BF0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470D50);
  uint64_t v2 = sub_19F1DD06C();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19EEC3ED8(v6, (uint64_t)&v15, &qword_1E9471ED8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_19EEBD400(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_19EEBB420(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19EFB4D34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D498);
  uint64_t v2 = (void *)sub_19F1DD06C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    long long v13 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_19EEBD400(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19EFB4E54(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F50);
  uint64_t v2 = (void *)sub_19F1DD06C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    id v8 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_19EEBD400(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19EFB4F6C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EC0);
  uint64_t v2 = (void *)sub_19F1DD06C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 4);
    uint64_t v6 = *((void *)v4 - 3);
    long long v14 = *v4;
    long long v15 = *(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_19EEBD400(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    char v10 = (_OWORD *)(v2[7] + 32 * result);
    *char v10 = v15;
    v10[1] = v14;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19EFB5094(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB390280);
  uint64_t v2 = (void *)sub_19F1DD06C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *v4;
    uint64_t v6 = v4[3];
    uint64_t v7 = v4[4];
    *(void *)long long v15 = *(v4 - 3);
    *(_OWORD *)&v15[8] = *((_OWORD *)v4 - 1);
    *(void *)&v15[24] = v5;
    long long v16 = *(_OWORD *)(v4 + 1);
    uint64_t v17 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_19EE88F80((uint64_t *)v15);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = v2[6] + 56 * result;
    long long v11 = *(_OWORD *)&v15[16];
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v15;
    *(_OWORD *)(v10 + 16) = v11;
    *(_OWORD *)(v10 + 32) = v16;
    *(void *)(v10 + 48) = v17;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 8;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19EFB51F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F10);
  uint64_t v2 = (void *)sub_19F1DD06C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *(v4 - 4);
    uint64_t v6 = *(v4 - 3);
    long long v15 = *((_OWORD *)v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_19EEBD400(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v2[7] + 24 * result;
    *(_OWORD *)uint64_t v11 = v15;
    *(void *)(v11 + 16) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19EFB532C(uint64_t a1)
{
  return sub_19EFB5734(a1, &qword_1E946CEA0, &qword_1E946CE80, (uint64_t (*)(uint64_t *, unint64_t))sub_19EEBB420);
}

unint64_t sub_19EFB5354(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D650);
  uint64_t v2 = sub_19F1DD06C();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19EEC3ED8(v6, (uint64_t)v13, &qword_1E946D5E8);
    unsigned __int8 v7 = v13[0];
    unint64_t result = sub_19EFB6D54(v13[0]);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v7;
    unint64_t result = (unint64_t)sub_19EEBDC00(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19EFB5484(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F08);
  uint64_t v2 = (void *)sub_19F1DD06C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_19EFB6DD4((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19EFB5590(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D1D8);
  uint64_t v2 = sub_19F1DD06C();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v21 = v2 + 64;
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v22 = v4;
    uint64_t v6 = *(v5 - 3);
    uint64_t v7 = *(v5 - 2);
    uint64_t v9 = *(v5 - 1);
    uint64_t v8 = *v5;
    uint64_t v11 = v5[1];
    uint64_t v10 = v5[2];
    uint64_t v12 = v5[4];
    uint64_t v13 = v5[6];
    uint64_t v23 = v5[5];
    uint64_t v24 = v5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_19EEBD400(v6, v7);
    if (v15) {
      break;
    }
    *(void *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v16 = (uint64_t *)(v3[6] + 16 * result);
    *long long v16 = v6;
    v16[1] = v7;
    uint64_t v17 = (void *)(v3[7] + (result << 6));
    *uint64_t v17 = v9;
    v17[1] = v8;
    v17[2] = v11;
    void v17[3] = v10;
    v17[4] = v24;
    v17[5] = v12;
    v17[6] = v23;
    v17[7] = v13;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v5 += 10;
    v3[2] = v20;
    uint64_t v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19EFB570C(uint64_t a1)
{
  return sub_19EFB5734(a1, &qword_1E946CE98, &qword_1E9471EF8, (uint64_t (*)(uint64_t *, unint64_t))sub_19EEBB420);
}

unint64_t sub_19EFB5734(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_19F1DD06C();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19EEC3ED8(v11, (uint64_t)&v20, a3);
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    unint64_t result = sub_19EEBD400(v20, v21);
    if (v15) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v16 = (uint64_t *)(v8[6] + 16 * result);
    *long long v16 = v12;
    v16[1] = v13;
    unint64_t result = a4(&v22, v8[7] + 40 * result);
    uint64_t v17 = v8[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v8[2] = v19;
    v11 += 56;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19EFB5878(uint64_t a1)
{
  return sub_19EE55D30(a1, &qword_1E9471ED0);
}

unint64_t sub_19EFB5884(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C08);
  uint64_t v2 = (void *)sub_19F1DD06C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19EEC3ED8(v4, (uint64_t)v13, &qword_1E9471EC8);
    unint64_t result = sub_19EE77500((uint64_t)v13);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 40 * result;
    long long v8 = v13[0];
    long long v9 = v13[1];
    *(void *)(v7 + 32) = v14;
    *(_OWORD *)uint64_t v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    *(_OWORD *)(v2[7] + 16 * result) = v15;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_19EFB59B4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_19EEBDC00((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_19EFBBD70(v7, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v6;
    swift_bridgeObjectRelease();
    return sub_19EE7760C(a2);
  }
  else
  {
    sub_19EEBD664(a1, &qword_1EB393260);
    sub_19EF6B258(a2, v7);
    sub_19EE7760C(a2);
    return sub_19EEBD664((uint64_t)v7, &qword_1EB393260);
  }
}

uint64_t sub_19EFB5A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_19EEBB420((long long *)a1, (uint64_t)v16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    uint64_t v7 = v17;
    uint64_t v8 = v18;
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
    double v10 = MEMORY[0x1F4188790](v9);
    uint64_t v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v13 + 16))(v12, v10);
    sub_19EFC10DC((uint64_t)v12, a2, a3, isUniquelyReferenced_nonNull_native, &v15, v7, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_19EEBD664(a1, qword_1E946C848);
    sub_19EF6B7FC(a2, a3, (uint64_t)v16);
    swift_bridgeObjectRelease();
    return sub_19EEBD664((uint64_t)v16, qword_1E946C848);
  }
}

uint64_t sub_19EFB5C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  MEMORY[0x1F4188790](v8 - 8);
  double v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for JetPackAsset(0);
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_19EEBD664(a1, &qword_1EB3911D0);
    sub_19EF6B828(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_19EEBD664((uint64_t)v10, &qword_1EB3911D0);
  }
  else
  {
    sub_19EE9721C(a1, (uint64_t)v14, type metadata accessor for JetPackAsset);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_19EFBC638((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19EFB5DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_19EEBB420((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_19EFBCD08(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_19EEBD664(a1, qword_1E946CDE0);
    sub_19EF6BC24(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_19EEBD664((uint64_t)v9, qword_1E946CDE0);
  }
}

uint64_t sub_19EFB5EA8()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFB5FD4()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFB60E0()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFB621C()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFB632C()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFB6460()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFB654C()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFB6668()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFB677C()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFB6804()
{
  return sub_19F1DD78C();
}

uint64_t JSONContext.Property.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSONContext.Property.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JSONContext.Property.key.modify())()
{
  return nullsub_1;
}

uint64_t JSONContext.Property.codingUserInfoKey.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F6A8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1];
  swift_bridgeObjectRetain();
  sub_19F1DCF6C();
  uint64_t v8 = sub_19F1DCF8C();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  }
  sub_19EEBD664((uint64_t)v5, &qword_1E946F6A8);
  v11[2] = 0;
  void v11[3] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  v11[0] = v6;
  v11[1] = v7;
  sub_19F1DD40C();
  sub_19F1DBEFC();
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t static JSONContext.Property.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_19F1DD44C();
  }
}

uint64_t JSONContext.removingValue<A>(forProperty:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v8 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EF6B168(v4, v5, v7);
  swift_bridgeObjectRelease();
  uint64_t result = sub_19EEBD664((uint64_t)v7, &qword_1EB393260);
  *a2 = v8;
  return result;
}

JetEngine::JSONContext __swiftcall JSONContext.removingAll()()
{
  *uint64_t v0 = MEMORY[0x1E4FBC868];
  return result;
}

unint64_t sub_19EFB6C18(uint64_t a1, uint64_t a2)
{
  sub_19F1DD72C();
  sub_19F1DD73C();
  if (a2) {
    sub_19F1DBE9C();
  }
  uint64_t v4 = sub_19F1DD78C();
  return sub_19EFB6EF8(a1, a2, v4);
}

unint64_t sub_19EFB6CB0(char a1)
{
  sub_19F1DD72C();
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_19F1DD78C();
  return sub_19EFB6FC4(a1 & 1, v2);
}

unint64_t sub_19EFB6D54(unsigned __int8 a1)
{
  uint64_t v2 = sub_19EFB60E0();
  return sub_19EFB7104(a1, v2);
}

unint64_t sub_19EFB6D98(uint64_t a1)
{
  uint64_t v2 = sub_19F1DD71C();
  return sub_19EE9EE8C(a1, v2);
}

unint64_t sub_19EFB6DD4(uint64_t a1)
{
  sub_19F1DBD7C();
  sub_19F1DD72C();
  sub_19F1DBE9C();
  uint64_t v2 = sub_19F1DD78C();
  swift_bridgeObjectRelease();
  return sub_19EFB73E8(a1, v2);
}

unint64_t sub_19EFB6E64(uint64_t a1)
{
  sub_19F1DBD7C();
  sub_19F1DD72C();
  sub_19F1DBE9C();
  uint64_t v2 = sub_19F1DD78C();
  swift_bridgeObjectRelease();
  return sub_19EFB73E8(a1, v2);
}

unint64_t sub_19EFB6EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      uint64_t v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_19F1DD44C() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_19EFB6FC4(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x6469746E65696C63;
    }
    else {
      uint64_t v6 = 0x646972657375;
    }
    if (a1) {
      unint64_t v7 = 0xE800000000000000;
    }
    else {
      unint64_t v7 = 0xE600000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x6469746E65696C63 : 0x646972657375;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE800000000000000 : 0xE600000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_19EFB7104(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE400000000000000;
      unint64_t v8 = 1702125924;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x656D695474696177;
          break;
        case 2:
          unint64_t v8 = 0x6C6F506568636163;
          unint64_t v7 = 0xEB00000000796369;
          break;
        case 3:
          unint64_t v7 = 0xE500000000000000;
          unint64_t v8 = 0x7465736572;
          break;
        case 4:
          unint64_t v8 = 0x676E697473697865;
          unint64_t v7 = 0xEC000000796C6E4FLL;
          break;
        case 5:
          unint64_t v8 = 0x74696157636E7973;
          unint64_t v7 = 0xEC000000656D6954;
          break;
        case 6:
          unint64_t v7 = 0x800000019F2687F0;
          unint64_t v8 = 0xD000000000000012;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE400000000000000;
      uint64_t v10 = 1702125924;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE800000000000000;
          if (v8 == 0x656D695474696177) {
            goto LABEL_21;
          }
          goto LABEL_22;
        case 2:
          unint64_t v9 = 0xEB00000000796369;
          if (v8 != 0x6C6F506568636163) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 3:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x7465736572) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 4:
          unint64_t v9 = 0xEC000000796C6E4FLL;
          if (v8 != 0x676E697473697865) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 5:
          uint64_t v10 = 0x74696157636E7973;
          unint64_t v9 = 0xEC000000656D6954;
          goto LABEL_20;
        case 6:
          unint64_t v9 = 0x800000019F2687F0;
          if (v8 != 0xD000000000000012) {
            goto LABEL_22;
          }
          goto LABEL_21;
        default:
LABEL_20:
          if (v8 != v10) {
            goto LABEL_22;
          }
LABEL_21:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_22:
          char v11 = sub_19F1DD44C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_19EFB73E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_19F1DBD7C();
    uint64_t v8 = v7;
    if (v6 == sub_19F1DBD7C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_19F1DBD7C();
          uint64_t v15 = v14;
          if (v13 == sub_19F1DBD7C() && v15 == v16) {
            break;
          }
          char v18 = sub_19F1DD44C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_19EFB7560(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D490);
  char v32 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        if (__OFADD__(v15++, 1)) {
          goto LABEL_40;
        }
        if (v15 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v2;
          if (v32)
          {
            uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
            if (v31 >= 64) {
              bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            }
            else {
              *uint64_t v9 = -1 << v31;
            }
            *(void *)(v5 + 16) = 0;
          }
          break;
        }
        unint64_t v20 = v9[v15];
        if (!v20)
        {
          int64_t v21 = v15 + 1;
          if (v15 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v20 = v9[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v15 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                break;
              }
              if (v15 >= v12) {
                goto LABEL_33;
              }
              unint64_t v20 = v9[v15];
              ++v21;
              if (v20) {
                goto LABEL_19;
              }
            }
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            return result;
          }
          ++v15;
        }
LABEL_19:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      long long v33 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 16 * v18 + 8);
      if ((v32 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_19F1DD72C();
      sub_19F1DD73C();
      if (v23) {
        sub_19F1DBE9C();
      }
      uint64_t result = sub_19F1DD78C();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v16) = v33;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFB7858(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907D8);
  char v40 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v38 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_44;
    }
    if (v13 >= v37) {
      break;
    }
    uint64_t v19 = v38;
    unint64_t v20 = v38[v13];
    if (!v20)
    {
      int64_t v21 = v13 + 1;
      if (v13 + 1 >= v37)
      {
LABEL_35:
        swift_release();
        uint64_t v3 = v2;
        if ((v40 & 1) == 0) {
          goto LABEL_42;
        }
        goto LABEL_38;
      }
      unint64_t v20 = v38[v21];
      if (!v20)
      {
        while (1)
        {
          int64_t v13 = v21 + 1;
          if (__OFADD__(v21, 1)) {
            break;
          }
          if (v13 >= v37) {
            goto LABEL_35;
          }
          unint64_t v20 = v38[v13];
          ++v21;
          if (v20) {
            goto LABEL_19;
          }
        }
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_19:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_20:
    uint64_t v22 = *(void *)(v5 + 56);
    uint64_t v23 = (uint64_t *)(*(void *)(v5 + 48) + 56 * v17);
    uint64_t v24 = v23[1];
    uint64_t v42 = *v23;
    uint64_t v25 = v23[2];
    uint64_t v26 = v23[3];
    uint64_t v41 = v23[4];
    uint64_t v27 = v23[6];
    uint64_t v43 = v23[5];
    uint64_t v28 = *(void *)(v22 + 8 * v17);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_19F1DD72C();
    sub_19F1DD74C();
    if (v24)
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
    sub_19F1DD74C();
    if (v27)
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_19F1DD78C();
    uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    int64_t v15 = (void *)(*(void *)(v7 + 48) + 56 * v14);
    *int64_t v15 = v42;
    v15[1] = v24;
    v15[2] = v25;
    void v15[3] = v26;
    v15[4] = v41;
    v15[5] = v43;
    v15[6] = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v28;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v2;
  uint64_t v19 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v19, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFB7C28(uint64_t a1, char a2)
{
  return sub_19EFB7C40(a1, a2, &qword_1E946CD68);
}

uint64_t sub_19EFB7C34(uint64_t a1, char a2)
{
  return sub_19EFB7C40(a1, a2, &qword_1E946F6B0);
}

uint64_t sub_19EFB7C40(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v38 = a2;
  uint64_t v7 = sub_19F1DD05C();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_38;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v3;
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v15++, 1)) {
      goto LABEL_40;
    }
    if (v15 >= v12) {
      break;
    }
    uint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v15);
    if (!v25)
    {
      int64_t v26 = v15 + 1;
      if (v15 + 1 >= v12)
      {
LABEL_31:
        swift_release();
        uint64_t v4 = v36;
        if ((v38 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v26);
      if (!v25)
      {
        while (1)
        {
          int64_t v15 = v26 + 1;
          if (__OFADD__(v26, 1)) {
            break;
          }
          if (v15 >= v12) {
            goto LABEL_31;
          }
          unint64_t v25 = *(void *)(v37 + 8 * v15);
          ++v26;
          if (v25) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v15;
    }
LABEL_20:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_21:
    uint64_t v27 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v22);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = *(void *)(*(void *)(v6 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_19F1DD72C();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v18 == v32;
        if (v18 == v32) {
          unint64_t v18 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v13 + 8 * v18);
      }
      while (v34 == -1);
      unint64_t v19 = __clz(__rbit64(~v34)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v8 + 48) + 16 * v19);
    *unint64_t v20 = v29;
    v20[1] = v28;
    *(void *)(*(void *)(v8 + 56) + 8 * v19) = v30;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  uint64_t v24 = (void *)(v6 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_19EFB7F30(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DED0);
  char v42 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_40;
    }
    if (v13 >= v40) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v13);
    if (!v25)
    {
      int64_t v26 = v13 + 1;
      if (v13 + 1 >= v40)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v39;
        if ((v42 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v26);
      if (!v25)
      {
        while (1)
        {
          int64_t v13 = v26 + 1;
          if (__OFADD__(v26, 1)) {
            break;
          }
          if (v13 >= v40) {
            goto LABEL_31;
          }
          unint64_t v25 = *(void *)(v41 + 8 * v13);
          ++v26;
          if (v25) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_21:
    uint64_t v27 = 16 * v22;
    uint64_t v28 = (uint64_t *)(*(void *)(v5 + 48) + v27);
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    char v31 = (uint64_t *)(*(void *)(v5 + 56) + v27);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_19F1DD72C();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v36 = v16 == v35;
        if (v16 == v35) {
          unint64_t v16 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v16);
      }
      while (v37 == -1);
      unint64_t v17 = __clz(__rbit64(~v37)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v30;
    v19[1] = v29;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v32;
    v20[1] = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFB8244(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D498);
  char v38 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    long long v39 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_19F1DD72C();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    unint64_t v20 = (void *)(*(void *)(v7 + 48) + v19);
    *unint64_t v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(void *)(v7 + 56) + v19) = v39;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFB8554(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470D60);
  char v37 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_19F1DD72C();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFB8860(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_19F1DCF8C();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F30);
  int v45 = a2;
  uint64_t v9 = sub_19F1DD05C();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    char v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    int64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    unint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      BOOL v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        sub_19EEBDC00((_OWORD *)(*(void *)(v8 + 56) + 32 * v20), v47);
      }
      else
      {
        (*v41)(v43, v26, v44);
        sub_19EEBDBA4(*(void *)(v8 + 56) + 32 * v20, (uint64_t)v47);
      }
      uint64_t result = sub_19F1DBC8C();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      (*v46)((char *)(*(void *)(v10 + 48) + v25 * v18), (unint64_t)v27, v28);
      uint64_t result = (uint64_t)sub_19EEBDC00(v47, (_OWORD *)(*(void *)(v10 + 56) + 32 * v18));
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_19EFB8C5C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946F080);
  char v40 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v34 = *(void *)v32;
      uint64_t v33 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_19EECA824(v34, v33, v35);
      }
      sub_19F1DD72C();
      sub_19F1DBE9C();
      uint64_t result = sub_19F1DD78C();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v30;
      v18[1] = v31;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v34;
      *(void *)(v19 + 8) = v33;
      *(unsigned char *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFB8F88(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EC0);
  char v38 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = (long long *)(*(void *)(v5 + 56) + 32 * v22);
    long long v39 = *v34;
    long long v40 = v34[1];
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_19F1DD72C();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *uint64_t v19 = v33;
    v19[1] = v32;
    unint64_t v20 = (_OWORD *)(*(void *)(v7 + 56) + 32 * v18);
    *unint64_t v20 = v39;
    v20[1] = v40;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v24 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFB92A0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for MTMetricsIdentifier();
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D648);
  int v40 = a2;
  uint64_t v9 = sub_19F1DD05C();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  char v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    unint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    char v25 = *(unsigned char *)(*(void *)(v8 + 48) + v20);
    uint64_t v26 = *(void *)(v39 + 72);
    uint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
    if (v40) {
      sub_19EE9721C(v27, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
    }
    else {
      sub_19EE96E04(v27, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
    }
    sub_19F1DD72C();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_19F1DD78C();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(unsigned char *)(*(void *)(v10 + 48) + v18) = v25;
    uint64_t result = sub_19EE9721C((uint64_t)v7, *(void *)(v10 + 56) + v26 * v18, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_19EFB96A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F40);
  char v43 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v42 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v41) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v42 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v42 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v40;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v42 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v41) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v42 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(v5 + 56) + v31;
    uint64_t v36 = *(void **)v35;
    char v37 = *(unsigned char *)(v35 + 8);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v38 = v36;
    }
    sub_19F1DD72C();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    uint64_t v20 = *(void *)(v7 + 56) + v18;
    *(void *)uint64_t v20 = v36;
    *(unsigned char *)(v20 + 8) = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v24 = (void *)(v5 + 64);
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFB99CC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D488);
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        int64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v30) {
          goto LABEL_35;
        }
        unint64_t v18 = v31[v17];
        ++v13;
        if (!v18)
        {
          int64_t v13 = v17 + 1;
          if (v17 + 1 >= v30) {
            goto LABEL_35;
          }
          unint64_t v18 = v31[v13];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v30)
            {
LABEL_35:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 >= 64) {
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v31 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v13 >= v30) {
                  goto LABEL_35;
                }
                unint64_t v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v19;
          }
        }
LABEL_21:
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      long long v32 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_19F1DD72C();
      sub_19F1DD73C();
      if (v21) {
        sub_19F1DBE9C();
      }
      uint64_t result = sub_19F1DD78C();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v32;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v20;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_19EFB9CE0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB390280);
  uint64_t v6 = (void *)sub_19F1DD05C();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v26 = (void *)(v5 + 64);
    uint64_t v8 = -1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    unint64_t v9 = v8 & *(void *)(v5 + 64);
    unint64_t v24 = v2;
    int64_t v25 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v13 >= v25) {
          goto LABEL_22;
        }
        unint64_t v14 = v26[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v25) {
            goto LABEL_22;
          }
          unint64_t v14 = v26[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 2;
            if (v15 >= v25)
            {
LABEL_22:
              swift_release();
              uint64_t v3 = v24;
              if (a2)
              {
                uint64_t v23 = 1 << *(unsigned char *)(v5 + 32);
                if (v23 > 63) {
                  bzero(v26, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v26 = -1 << v23;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v14 = v26[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_29;
                }
                if (v10 >= v25) {
                  goto LABEL_22;
                }
                unint64_t v14 = v26[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
LABEL_19:
        unint64_t v9 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      uint64_t v16 = *(void *)(v5 + 48) + 56 * v12;
      uint64_t v17 = *(void *)v16;
      long long v18 = *(_OWORD *)(v16 + 8);
      uint64_t v19 = *(void *)(v16 + 24);
      long long v20 = *(_OWORD *)(v16 + 32);
      uint64_t v21 = *(void *)(v16 + 48);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v12);
      if ((a2 & 1) == 0)
      {
        long long v27 = *(_OWORD *)(v16 + 8);
        long long v28 = *(_OWORD *)(v16 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v18 = v27;
        long long v20 = v28;
      }
      uint64_t v29 = v17;
      long long v30 = v18;
      uint64_t v31 = v19;
      long long v32 = v20;
      uint64_t v33 = v21;
      sub_19EE8A4B8((uint64_t)&v29, v22, v6);
    }
  }
  swift_release();
  *uint64_t v3 = v6;
}

uint64_t sub_19EFB9F38(uint64_t a1, char a2)
{
  return sub_19EFBB090(a1, a2, &qword_1E946CEA0, (void (*)(uint64_t, unsigned char *))sub_19EEBB420);
}

uint64_t sub_19EFB9F58(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for JetPackAsset(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EE0);
  int v43 = a2;
  uint64_t v9 = sub_19F1DD05C();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    unint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_19EE9721C(v30, (uint64_t)v7, type metadata accessor for JetPackAsset);
    }
    else
    {
      sub_19EE96E04(v30, (uint64_t)v7, type metadata accessor for JetPackAsset);
      swift_bridgeObjectRetain();
    }
    sub_19F1DD72C();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_19EE9721C((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, type metadata accessor for JetPackAsset);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_19EFBA338(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D650);
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  unint64_t v33 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_43;
  }
  if (v21 >= v11)
  {
    swift_release();
    uint64_t v3 = v33;
    int64_t v22 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_38:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v22 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v34 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      uint64_t v30 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v20);
      if (a2) {
        sub_19EEBDC00(v30, v35);
      }
      else {
        sub_19EEBDBA4((uint64_t)v30, (uint64_t)v35);
      }
      sub_19F1DD72C();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_19F1DD78C();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      while (++v17 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
        if (v28 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
          *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
          sub_19EEBDC00(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v18));
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x19EFBA714);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v34 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_44;
          }
          if (v13 >= v11) {
            goto LABEL_35;
          }
          unint64_t v23 = *(void *)(v34 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = v33;
    if (a2) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFBA730(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F00);
  uint64_t result = sub_19F1DD05C();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = v3;
    int64_t v35 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v35);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      uint64_t result = sub_19F1DD71C();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFBA9E4(uint64_t a1, char a2)
{
  return sub_19EFBA9F0(a1, a2, &qword_1E946D1D0);
}

uint64_t sub_19EFBA9F0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v38 = a2;
  uint64_t v7 = sub_19F1DD05C();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v37 = (void *)(v6 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v6 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36) {
          goto LABEL_33;
        }
        unint64_t v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v24 = v37[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v4 = v3;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v35;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v24 = v37[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v22);
      uint64_t v32 = *v30;
      uint64_t v31 = v30[1];
      uint64_t v33 = *(void *)(v6 + 56) + 24 * v22;
      long long v39 = *(_OWORD *)v33;
      uint64_t v34 = *(void *)(v33 + 16);
      if ((v38 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_19F1DD72C();
      sub_19F1DBE9C();
      uint64_t result = sub_19F1DD78C();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
      *unint64_t v19 = v32;
      v19[1] = v31;
      uint64_t v20 = *(void *)(v8 + 56) + 24 * v18;
      *(_OWORD *)uint64_t v20 = v39;
      *(void *)(v20 + 16) = v34;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_19EFBAD04(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D1D8);
  char v40 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      unint64_t v32 = *(void *)(v5 + 56) + (v21 << 6);
      uint64_t v33 = *(void *)(v32 + 8);
      uint64_t v34 = *(void *)(v32 + 24);
      uint64_t v43 = *(void *)(v32 + 16);
      uint64_t v41 = *(void *)v32;
      uint64_t v42 = *(void *)(v32 + 32);
      long long v44 = *(_OWORD *)(v32 + 40);
      uint64_t v35 = *(void *)(v32 + 56);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_19F1DD72C();
      sub_19F1DBE9C();
      uint64_t result = sub_19F1DD78C();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v30;
      v18[1] = v31;
      unint64_t v19 = *(void *)(v7 + 56) + (v17 << 6);
      *(void *)unint64_t v19 = v41;
      *(void *)(v19 + 8) = v33;
      *(void *)(v19 + 16) = v43;
      *(void *)(v19 + 24) = v34;
      *(void *)(v19 + 32) = v42;
      *(_OWORD *)(v19 + 40) = v44;
      *(void *)(v19 + 56) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFBB070(uint64_t a1, char a2)
{
  return sub_19EFBB090(a1, a2, &qword_1E946CE98, (void (*)(uint64_t, unsigned char *))sub_19EEBB420);
}

uint64_t sub_19EFBB090(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v38 = a2;
  uint64_t v9 = sub_19F1DD05C();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    int64_t v37 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v8 + 64);
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v16 << 6);
      }
      else
      {
        int64_t v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v16;
        if (!v22)
        {
          int64_t v16 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v16];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              swift_release();
              uint64_t v6 = v4;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v35;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v16 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v16];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      int64_t v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      uint64_t v27 = *(void *)(v8 + 56) + 40 * v20;
      if (v38)
      {
        a4(v27, v39);
      }
      else
      {
        sub_19EEC4154(v27, (uint64_t)v39);
        swift_bridgeObjectRetain();
      }
      sub_19F1DD72C();
      sub_19F1DBE9C();
      uint64_t result = sub_19F1DD78C();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
      *unint64_t v18 = v26;
      v18[1] = v25;
      uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v39, *(void *)(v10 + 56) + 40 * v17);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_19EFBB3B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C08);
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
    }
    else
    {
      sub_19EE77E34(v25, (uint64_t)&v38);
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      swift_unknownObjectRetain();
    }
    uint64_t result = sub_19F1DCC4C();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v15) = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFBB6C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E1B0);
  char v37 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v34;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      unint64_t v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        id v32 = v30;
        swift_unknownObjectRetain();
      }
      sub_19F1DBD7C();
      sub_19F1DD72C();
      sub_19F1DBE9C();
      uint64_t v14 = sub_19F1DD78C();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFBB9E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EF0);
  char v36 = a2;
  uint64_t v6 = sub_19F1DD05C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_19F1DD72C();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19EFBBCFC(uint64_t a1, char a2)
{
  return sub_19EE74A0C(a1, a2, &qword_1E9471EE8);
}

uint64_t sub_19EFBBD08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_19EFBBD70(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_19EE77500(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_19EFBD530();
      goto LABEL_7;
    }
    sub_19EE77768(v13, a3 & 1);
    unint64_t v19 = sub_19EE77500(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_19EE77E34(a2, (uint64_t)v21);
      return sub_19EFBD138(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_19F1DD65C();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return sub_19EEBDC00(a1, v17);
}

uint64_t sub_19EFBBEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_19EEBD400(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_19EFBD73C();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      int64_t v21 = (void *)(v20[7] + 16 * v14);
      void *v21 = a1;
      v21[1] = a2;
      return swift_release();
    }
    goto LABEL_13;
  }
  sub_19EFB7F30(v17, a5 & 1);
  unint64_t v23 = sub_19EEBD400(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_19:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_13:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v25 = (uint64_t *)(v20[6] + 16 * v14);
  *char v25 = a3;
  v25[1] = a4;
  unint64_t v26 = (void *)(v20[7] + 16 * v14);
  *unint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v20[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFBC050(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_19EE77E90(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_19EFBDC74();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_19EFB8554(result, a4 & 1);
  uint64_t result = sub_19EE77E90(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v20 = (uint64_t *)(v18[6] + 16 * v12);
  *char v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFBC1B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_19EEBD400(a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_19EFBE0CC();
LABEL_7:
    BOOL v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      uint64_t result = sub_19EECA83C(*(void *)v23, *(void *)(v23 + 8), *(unsigned char *)(v23 + 16));
      *(void *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = a2;
      *(unsigned char *)(v23 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_19EFB8C5C(v19, a6 & 1);
  unint64_t v25 = sub_19EEBD400(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  BOOL v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  uint64_t *v27 = a4;
  v27[1] = a5;
  uint64_t v28 = v22[7] + 24 * v16;
  *(void *)uint64_t v28 = a1;
  *(void *)(v28 + 8) = a2;
  *(unsigned char *)(v28 + 16) = a3;
  uint64_t v29 = v22[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v31;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFBC350(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_19EFB6C18(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19EFBEC28(&qword_1E946D488);
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_19EFB99CC(v15, a4 & 1);
  unint64_t v21 = sub_19EFB6C18(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFBC4C8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_19EE88F80((uint64_t *)a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_19EFBEDD4();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_19EFB9CE0(result, a3 & 1);
  uint64_t result = sub_19EE88F80((uint64_t *)a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_17:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  char v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v18 = v16[6] + 56 * v10;
  long long v19 = *(_OWORD *)a2;
  long long v20 = *(_OWORD *)(a2 + 16);
  long long v21 = *(_OWORD *)(a2 + 32);
  *(void *)(v18 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(v18 + 16) = v20;
  *(_OWORD *)(v18 + 32) = v21;
  *(_OWORD *)uint64_t v18 = v19;
  *(void *)(v16[7] + 8 * v10) = a1;
  uint64_t v22 = v16[2];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16[2] = v24;
  return sub_19EE89A74(a2);
}

uint64_t sub_19EFBC638(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_19EEBD400(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_19EFBF730();
      goto LABEL_7;
    }
    sub_19EFB9F58(v15, a4 & 1);
    unint64_t v22 = sub_19EEBD400(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for JetPackAsset(0) - 8) + 72) * v12;
    return sub_19EFC06E0(a1, v20);
  }
LABEL_13:
  sub_19EFBD360(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

_OWORD *sub_19EFBC79C(_OWORD *a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_19EFB6D54(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_19EFBF9B4();
      goto LABEL_7;
    }
    sub_19EFBA338(v13, a3 & 1);
    unint64_t v19 = sub_19EFB6D54(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_19F1DD65C();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
    return sub_19EEBDC00(a1, v17);
  }
LABEL_13:
  return sub_19EFBD40C(v10, a2, a1, v16);
}

uint64_t sub_19EFBC8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  char v14 = (void *)*v6;
  unint64_t v16 = sub_19EEBD400(a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= result && (a6 & 1) != 0)
  {
LABEL_7:
    unint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      char v23 = (uint64_t *)(v22[7] + 24 * v16);
      *char v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= result && (a6 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_19EFBFF1C(&qword_1E9471F10);
    goto LABEL_7;
  }
  sub_19EFBA9F0(result, a6 & 1, &qword_1E9471F10);
  uint64_t result = sub_19EEBD400(a4, a5);
  if ((v20 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
  unint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_19EFBD474(v16, a4, a5, a1, a2, a3, v22);
  return swift_bridgeObjectRetain();
}

void sub_19EFBCA44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_19EFB6D98(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_19EFBFD6C();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v20 = 8 * v10;
    *(void *)(v16[6] + v20) = a2;
    *(void *)(v16[7] + v20) = a1;
    uint64_t v21 = v16[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_19EFBA730(v13, a3 & 1);
  unint64_t v18 = sub_19EFB6D98(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_19F1DD65C();
  __break(1u);
}

uint64_t sub_19EFBCB80(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_19EEBD400(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19EFC00D8();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + (v12 << 6);
      return sub_19EFC1080((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_19EFBAD04(v15, a4 & 1);
  unint64_t v21 = sub_19EEBD400(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  char v24 = (_OWORD *)(v18[7] + (v12 << 6));
  long long v25 = *a1;
  long long v26 = a1[1];
  long long v27 = a1[3];
  _OWORD v24[2] = a1[2];
  v24[3] = v27;
  *char v24 = v25;
  v24[1] = v26;
  uint64_t v28 = v18[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v30;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFBCD08(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_19EEBD400(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_19EFC030C(&qword_1E946CE98, (void (*)(unsigned char *, uint64_t))sub_19EEBB420);
      goto LABEL_7;
    }
    sub_19EFBB090(v15, a4 & 1, &qword_1E946CE98, (void (*)(uint64_t, unsigned char *))sub_19EEBB420);
    unint64_t v21 = sub_19EEBD400(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    __swift_destroy_boxed_opaque_existential_1Tm(v19);
    return sub_19EEBB420(a1, v19);
  }
LABEL_13:
  sub_19EEBB078(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFBCE98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_19EEBD400(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19EFC0B1C(&qword_1E9471EF0);
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_19EFBB9E4(v15, a4 & 1);
  unint64_t v21 = sub_19EEBD400(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;
  return swift_bridgeObjectRetain();
}

unint64_t sub_19EFBD010(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_19EE77500(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (uint64_t *)(v18[7] + 16 * v12);
      unint64_t result = swift_unknownObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19EFC0500();
    goto LABEL_7;
  }
  sub_19EFBB3B0(v15, a4 & 1);
  unint64_t v21 = sub_19EE77500(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    unint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_19EE77E34(a3, (uint64_t)v23);
  return sub_19EFBD4C8(v12, (uint64_t)v23, a1, a2, v18);
}

_OWORD *sub_19EFBD138(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  unint64_t result = sub_19EEBDC00(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

_OWORD *sub_19EFBD1B4(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_19F1DCF8C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  unint64_t result = sub_19EEBDC00(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_19EFBD274(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  a8[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = (void *)(a8[6] + 16 * result);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = (void *)(a8[7] + 32 * result);
  *uint64_t v9 = a4;
  v9[1] = a5;
  long long v9[2] = a6;
  v9[3] = a7;
  uint64_t v10 = a8[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a8[2] = v12;
  }
  return result;
}

unint64_t sub_19EFBD2C4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  long long v6 = (void *)(a6[6] + 16 * result);
  *long long v6 = a2;
  v6[1] = a3;
  uint64_t v7 = a6[7] + 16 * result;
  *(void *)uint64_t v7 = a4;
  *(unsigned char *)(v7 + 8) = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_19EFBD318(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_19EFBD360(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for JetPackAsset(0);
  uint64_t result = sub_19EE9721C(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for JetPackAsset);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

_OWORD *sub_19EFBD40C(unint64_t a1, char a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_19EEBDC00(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_19EFBD474(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  BOOL v7 = (void *)(a7[6] + 16 * result);
  *BOOL v7 = a2;
  v7[1] = a3;
  uint64_t v8 = (void *)(a7[7] + 24 * result);
  *uint64_t v8 = a4;
  v8[1] = a5;
  v8[2] = a6;
  uint64_t v9 = a7[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a7[2] = v11;
  }
  return result;
}

unint64_t sub_19EFBD4C8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a5[6] + 40 * result;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  BOOL v7 = (void *)(a5[7] + 16 * result);
  *BOOL v7 = a3;
  v7[1] = a4;
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void *sub_19EFBD524()
{
  return sub_19EFBEC28(&qword_1E946D490);
}

void *sub_19EFBD530()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390C68);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_19EE77E34(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_19EEBDBA4(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    uint64_t result = sub_19EEBDC00(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBD718()
{
  return sub_19EFC0E90(&qword_1EB3907D8);
}

void *sub_19EFBD724()
{
  return sub_19EFC0B1C(&qword_1E946CD68);
}

void *sub_19EFBD730()
{
  return sub_19EFC0B1C(&qword_1E946F6B0);
}

void *sub_19EFBD73C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DED0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v22;
    v24[1] = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19EFBD8F8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393228);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void **)(*(void *)(v2 + 56) + v21);
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = *v17;
    v23[1] = v18;
    v23[2] = v19;
    v23[3] = v20;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = v22;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBDAC8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D498);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBDC74()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470D60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBDE24()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_19F1DCF8C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F30);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_19F1DD04C();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v23 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v25 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 32 * v16;
    sub_19EEBDBA4(*(void *)(v6 + 56) + v18, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    id result = sub_19EEBDC00(v26, (_OWORD *)(*(void *)(v8 + 56) + v18));
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v24)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_19EFBE0CC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946F080);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    int64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    char v25 = *(unsigned char *)(v21 + 16);
    *int64_t v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v23;
    *(unsigned char *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    id result = (void *)sub_19EECA824(v22, v23, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBE2A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946E580);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *uint64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBE454()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    unint64_t v21 = (long long *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    long long v23 = *v21;
    long long v24 = v21[1];
    void *v22 = v19;
    v22[1] = v18;
    char v25 = (_OWORD *)(*(void *)(v4 + 56) + v20);
    *char v25 = v23;
    v25[1] = v24;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBE60C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MTMetricsIdentifier();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D648);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_19F1DD04C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  long long v23 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v14) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    char v17 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
    unint64_t v18 = *(void *)(v25 + 72) * v16;
    sub_19EE96E04(*(void *)(v5 + 56) + v18, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
    *(unsigned char *)(*(void *)(v7 + 48) + v16) = v17;
    id result = (void *)sub_19EE9721C((uint64_t)v4, *(void *)(v7 + 56) + v18, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_19EFBE880()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    int64_t v21 = *(void **)v20;
    LOBYTE(v20) = *(unsigned char *)(v20 + 8);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    uint64_t v23 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v23 = v21;
    *(unsigned char *)(v23 + 8) = v20;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBEA40()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_19EE77E34(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v17 = *(void *)(v4 + 48) + 40 * v15;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBEC1C()
{
  return sub_19EFBEC28(&qword_1E946D488);
}

void *sub_19EFBEC28(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_19F1DD04C();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16) = *(_OWORD *)(*(void *)(v3 + 48) + 16 * v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBEDD4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB390280);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = v15 << 6;
    uint64_t v17 = 8 * v15;
    unint64_t v18 = v16 - v17;
    unint64_t v19 = *(void *)(v2 + 48) + v18;
    uint64_t v20 = *(void *)(v19 + 24);
    uint64_t v21 = *(void *)(v19 + 48);
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v17);
    unint64_t v23 = *(void *)(v4 + 48) + v18;
    long long v24 = *(_OWORD *)(v19 + 8);
    long long v25 = *(_OWORD *)(v19 + 32);
    *(void *)unint64_t v23 = *(void *)v19;
    *(_OWORD *)(v23 + 8) = v24;
    *(void *)(v23 + 24) = v20;
    *(_OWORD *)(v23 + 32) = v25;
    *(void *)(v23 + 48) = v21;
    *(void *)(*(void *)(v4 + 56) + v17) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBEFC4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)sub_19EEA0784(v24, *((unint64_t *)&v24 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBF18C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E80);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 4 * v15;
    LODWORD(v17) = *(_DWORD *)(*(void *)(v2 + 56) + v20);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    *(_DWORD *)(*(void *)(v4 + 56) + v20) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBF33C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946EC88);
  uint64_t v31 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_19F1DD04C();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v31 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v12) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v5 + 8 * v28);
    ++v8;
    if (!v29)
    {
      int64_t v8 = v28 + 1;
      if (v28 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v5 + 8 * v8);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v29 - 1) & v29;
    unint64_t v14 = __clz(__rbit64(v29)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = 48 * v14;
    uint64_t v20 = *(void *)(v1 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v24 = *(void *)(v20 + 16);
    uint64_t v23 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    LOBYTE(v20) = *(unsigned char *)(v20 + 40);
    int64_t v26 = (void *)(*(void *)(v3 + 48) + v15);
    *int64_t v26 = v17;
    v26[1] = v18;
    uint64_t v27 = *(void *)(v3 + 56) + v19;
    *(void *)uint64_t v27 = v21;
    *(void *)(v27 + 8) = v22;
    *(void *)(v27 + 16) = v24;
    *(void *)(v27 + 24) = v23;
    *(void *)(v27 + 32) = v25;
    *(unsigned char *)(v27 + 40) = v20;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v12) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v5 + 8 * v30);
  if (v29)
  {
    int64_t v8 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v5 + 8 * v8);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBF548()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946FAE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBF704()
{
  return sub_19EFC030C(&qword_1E946CEA0, (void (*)(unsigned char *, uint64_t))sub_19EEBB420);
}

id sub_19EFBF724()
{
  return sub_19EFC0CD8(&qword_1E946F6B8);
}

void *sub_19EFBF730()
{
  uint64_t v1 = type metadata accessor for JetPackAsset(0);
  uint64_t v27 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EE0);
  uint64_t v24 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_19F1DD04C();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v24 = v6;
    return result;
  }
  id result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  uint64_t v25 = v4 + 64;
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v4 + 64);
  int64_t v26 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_9:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = *(void *)(v27 + 72) * v14;
    sub_19EE96E04(*(void *)(v4 + 56) + v19, (uint64_t)v3, type metadata accessor for JetPackAsset);
    uint64_t v20 = (void *)(*(void *)(v6 + 48) + v15);
    *uint64_t v20 = v17;
    v20[1] = v18;
    sub_19EE9721C((uint64_t)v3, *(void *)(v6 + 56) + v19, type metadata accessor for JetPackAsset);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_19EFBF9B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D650);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_19EEBDBA4(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v20);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v16;
    id result = sub_19EEBDC00(v20, (_OWORD *)(*(void *)(v4 + 56) + 32 * v15));
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBFB74()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390418);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v28 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_19EEC5840(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    uint64_t v22 = *(void *)(v4 + 56) + v20;
    uint64_t v23 = v30;
    long long v24 = v29[1];
    *(_OWORD *)uint64_t v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(void *)(v22 + 32) = v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_19EFBFD6C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFBFF10()
{
  return sub_19EFBFF1C(&qword_1E946D1D0);
}

void *sub_19EFBFF1C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_19F1DD04C();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v14) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v7 + 8 * v27);
    ++v10;
    if (!v28)
    {
      int64_t v10 = v27 + 1;
      if (v27 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v7 + 8 * v10);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v28 - 1) & v28;
    unint64_t v16 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    int64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 24 * v16;
    uint64_t v22 = *(void *)(v3 + 56) + v21;
    uint64_t v23 = *(void *)(v22 + 16);
    long long v24 = (void *)(*(void *)(v5 + 48) + v17);
    long long v25 = *(_OWORD *)v22;
    *long long v24 = v20;
    v24[1] = v19;
    uint64_t v26 = *(void *)(v5 + 56) + v21;
    *(_OWORD *)uint64_t v26 = v25;
    *(void *)(v26 + 16) = v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v14) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v7 + 8 * v29);
  if (v28)
  {
    int64_t v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v7 + 8 * v10);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFC00D8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D1D8);
  uint64_t v33 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_19F1DD04C();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v33 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v12) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v5 + 8 * v30);
    ++v8;
    if (!v31)
    {
      int64_t v8 = v30 + 1;
      if (v30 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v5 + 8 * v8);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v31 - 1) & v31;
    unint64_t v14 = __clz(__rbit64(v31)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    unint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = v14 << 6;
    unint64_t v20 = *(void *)(v1 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    uint64_t v26 = *(void *)(v20 + 56);
    int64_t v27 = (void *)(*(void *)(v3 + 48) + v15);
    long long v28 = *(_OWORD *)(v20 + 40);
    void *v27 = v17;
    v27[1] = v18;
    unint64_t v29 = *(void *)(v3 + 56) + v19;
    *(void *)unint64_t v29 = v21;
    *(void *)(v29 + 8) = v22;
    *(void *)(v29 + 16) = v23;
    *(void *)(v29 + 24) = v24;
    *(void *)(v29 + 32) = v25;
    *(_OWORD *)(v29 + 40) = v28;
    *(void *)(v29 + 56) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v12) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v5 + 8 * v32);
  if (v31)
  {
    int64_t v8 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v5 + 8 * v8);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFC02EC()
{
  return sub_19EFC030C(&qword_1E946CE98, (void (*)(unsigned char *, uint64_t))sub_19EEBB420);
}

void *sub_19EFC030C(uint64_t *a1, void (*a2)(unsigned char *, uint64_t))
{
  uint64_t v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v5 = *v2;
  uint64_t v6 = sub_19F1DD04C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v4 = v7;
    return result;
  }
  int64_t v27 = v4;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = 40 * v17;
    sub_19EEC4154(*(void *)(v5 + 56) + 40 * v17, (uint64_t)v29);
    uint64_t v23 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v23 = v20;
    v23[1] = v21;
    a2(v29, *(void *)(v7 + 56) + v22);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v4 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19EFC0500()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_19EE77E34(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v16 = *(void *)(v4 + 48) + 40 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v16 + 32) = v24;
    *(_OWORD *)uint64_t v16 = v18;
    *(_OWORD *)(v16 + 16) = v19;
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v17;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_19EFC06E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JetPackAsset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EFC0744(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_19EFC07A0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E1B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    long long v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFC094C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390B60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DD04C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v22 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v22;
    swift_bridgeObjectRetain();
    id result = (void *)sub_19EEA0784(v22, *((unint64_t *)&v22 + 1));
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFC0B10()
{
  return sub_19EFC0B1C(&qword_1E9471EF0);
}

void *sub_19EFC0B1C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_19F1DD04C();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    long long v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19EFC0CCC()
{
  return sub_19EFC0CD8(&qword_1E9471EE8);
}

id sub_19EFC0CD8(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_19F1DD04C();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    long long v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19EFC0E84()
{
  return sub_19EFC0E90(&qword_1EB390A68);
}

void *sub_19EFC0E90(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_19F1DD04C();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v14) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v7 + 8 * v27);
    ++v10;
    if (!v28)
    {
      int64_t v10 = v27 + 1;
      if (v27 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v7 + 8 * v10);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v28 - 1) & v28;
    unint64_t v16 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    unint64_t v17 = v16 << 6;
    uint64_t v18 = 8 * v16;
    unint64_t v19 = v17 - v18;
    unint64_t v20 = *(void *)(v3 + 48) + v19;
    uint64_t v21 = *(void *)(v20 + 24);
    uint64_t v22 = *(void *)(v20 + 48);
    uint64_t v23 = *(void *)(*(void *)(v3 + 56) + v18);
    unint64_t v24 = *(void *)(v5 + 48) + v19;
    long long v25 = *(_OWORD *)(v20 + 8);
    long long v26 = *(_OWORD *)(v20 + 32);
    *(void *)unint64_t v24 = *(void *)v20;
    *(_OWORD *)(v24 + 8) = v25;
    *(void *)(v24 + 24) = v21;
    *(_OWORD *)(v24 + 32) = v26;
    *(void *)(v24 + 48) = v22;
    *(void *)(*(void *)(v5 + 56) + v18) = v23;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v14) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v7 + 8 * v29);
  if (v28)
  {
    int64_t v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v7 + 8 * v10);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_19EFC1080(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19EFC10DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_2Tm, a1, a6);
  unint64_t v15 = (void *)*a5;
  unint64_t v17 = sub_19EEBD400(a2, a3);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = (void *)*a5;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7] + 40 * v17;
      __swift_destroy_boxed_opaque_existential_1Tm(v24);
      return sub_19EEBB420(&v34, v24);
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    sub_19EFC030C(&qword_1E946CEA0, (void (*)(unsigned char *, uint64_t))sub_19EEBB420);
    goto LABEL_7;
  }
  sub_19EFBB090(v20, a4 & 1, &qword_1E946CEA0, (void (*)(uint64_t, unsigned char *))sub_19EEBB420);
  unint64_t v26 = sub_19EEBD400(a2, a3);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_14:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = (void *)*a5;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v34, v35);
  double v29 = MEMORY[0x1F4188790](v28);
  unint64_t v31 = (char *)&v33 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v32 + 16))(v31, v29);
  sub_19EFC1348(v17, a2, a3, (uint64_t)v31, v23, a6, a7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v34);
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFC1348(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_2Tm, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  int64_t v14 = (void *)(a5[6] + 16 * a1);
  *int64_t v14 = a2;
  v14[1] = a3;
  uint64_t result = sub_19EEBB420(&v19, a5[7] + 40 * a1);
  uint64_t v16 = a5[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a5[2] = v18;
  }
  return result;
}

unint64_t sub_19EFC1420(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F18);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F20);
    uint64_t v7 = (void *)sub_19F1DD06C();
    unint64_t v8 = (char *)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_19EEC3ED8(v9, (uint64_t)v5, &qword_1E9471F18);
      uint64_t v11 = *v5;
      unint64_t result = sub_19EFB6D98(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = sub_19F1DB34C();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v8, v16);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      _OWORD v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_19EFC15E8(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F00);
  uint64_t v3 = (void *)sub_19F1DD06C();
  uint64_t v4 = a1[4];
  uint64_t v5 = (void *)a1[5];
  unint64_t result = sub_19EFB6D98(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v17 = v5;
    return (unint64_t)v3;
  }
  unint64_t v8 = (void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    char v13 = v8 + 2;
    uint64_t v4 = (uint64_t)*(v8 - 1);
    unint64_t v14 = *v8;
    id v15 = v5;
    unint64_t result = sub_19EFB6D98(v4);
    unint64_t v8 = v13;
    uint64_t v5 = v14;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void sub_19EFC16E4(uint64_t a1)
{
  uint64_t v3 = sub_19F1DB57C();
  uint64_t v26 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390528);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - v11;
  sub_19EE83A30(a1, (uint64_t)v28);
  if (*v1)
  {
    if (*v1 == 1)
    {
      if (qword_1EB391C98 != -1) {
        swift_once();
      }
      char v13 = (unsigned char *)(qword_1EB391C90 + 16);
      unint64_t v14 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
      swift_retain();
      os_unfair_lock_lock(v14);
      sub_19EEC4E5C(v13, v27);
      os_unfair_lock_unlock(v14);
      int v15 = v27[0];
      swift_release();
      if (v15 == 2)
      {
        if ((os_variant_has_internal_content() & 1) == 0)
        {
          while (1)
          {
LABEL_15:
            uint64_t v19 = self;
            id v20 = objc_msgSend(v19, sel_hours);
            sub_19EFC1D98();
            sub_19F1DADDC();
            id v21 = objc_msgSend(v19, sel_seconds);
            sub_19F1DADFC();

            uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
            v7 += 8;
            v22(v9, v6);
            sub_19F1DADEC();
            double v24 = v23;
            v22(v12, v6);
            if (v24 < 0.0)
            {
              __break(1u);
            }
            else if ((~COERCE__INT64(v24 + v24) & 0x7FF0000000000000) != 0)
            {
              sub_19F085950(0x20000000000001uLL);
              return;
            }
            __break(1u);
LABEL_21:
            swift_once();
LABEL_14:
            sub_19EF6ECA0(0xD00000000000001ALL, 0x800000019F26BB30);
            if ((v18 & 1) == 0) {
              return;
            }
          }
        }
      }
      else if ((v15 & 1) == 0)
      {
        goto LABEL_15;
      }
      if (qword_1EB392A90 != -1) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }
    sub_19EE83A30((uint64_t)v28, (uint64_t)v27);
    sub_19EFC1D7C((uint64_t)v27);
    sub_19EFC1D88((uint64_t)v27);
    type metadata accessor for MonotonicTimeReference();
    if (qword_1EB392DA0 != -1) {
      swift_once();
    }
    sub_19F1DB4FC();
    sub_19F1DB52C();
    long double v17 = v16;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v3);
    fmod(v17, 4.0);
  }
}

uint64_t PageRenderEventPrecision.hash(into:)()
{
  return sub_19F1DD73C();
}

BOOL static PageRenderEventPrecision.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PageRenderEventPrecision.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19EFC1C24()
{
  unint64_t result = qword_1E9471F68[0];
  if (!qword_1E9471F68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9471F68);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PageRenderEventPrecision(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EFC1D44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageRenderEventPrecision()
{
  return &type metadata for PageRenderEventPrecision;
}

uint64_t sub_19EFC1D7C(uint64_t a1)
{
  return *(void *)(a1 + 376) >> 61;
}

uint64_t sub_19EFC1D88(uint64_t result)
{
  *(void *)(result + 376) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t sub_19EFC1D98()
{
  unint64_t result = qword_1E946CCE8;
  if (!qword_1E946CCE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946CCE8);
  }
  return result;
}

uint64_t dispatch thunk of MetricsEventLinter.processEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void __swiftcall JSRequestTimeOutError.init(route:timeoutInterval:)(JetEngine::JSRequestTimeOutError *__return_ptr retstr, JetEngine::JSRoute route, Swift::Double timeoutInterval)
{
  uint64_t v3 = *(void *)(route.service._countAndFlagsBits + 16);
  unsigned int v4 = *(void **)(route.service._countAndFlagsBits + 24);
  retstr->route.service = *(Swift::String *)route.service._countAndFlagsBits;
  retstr->route.function._countAndFlagsBits = v3;
  retstr->route.function._object = v4;
  retstr->timeoutInterval = timeoutInterval;
}

uint64_t JSRequestTimeOutError.route.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double JSRequestTimeOutError.timeoutInterval.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t JSRequestTimeOutError.errorDescription.getter()
{
  return 0;
}

unint64_t sub_19EFC1FA0()
{
  unint64_t result = qword_1E946D930;
  if (!qword_1E946D930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946D930);
  }
  return result;
}

void *initializeWithCopy for JSRequestTimeOutError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for JSRequestTimeOutError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void *assignWithTake for JSRequestTimeOutError(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for JSRequestTimeOutError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSRequestTimeOutError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSRequestTimeOutError()
{
  return &type metadata for JSRequestTimeOutError;
}

unint64_t static IntentKindTable._table.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  unint64_t v3 = sub_19EF4CAAC(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static IntentKindTable._decode(_:from:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v11 = dynamic_cast_existential_2_conditional(a1);
  if (v11)
  {
    uint64_t v14 = v11;
    uint64_t v15 = v12;
    uint64_t v16 = v13;
    unint64_t v46 = a4;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v17 = sub_19F1DD89C();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v17);
    uint64_t v18 = v50[0];
    sub_19F17AA40(0xD00000000000001FLL, 0x800000019F26A560, v50[0], (uint64_t)&v52);
    unint64_t v19 = v53;
    swift_bridgeObjectRelease();
    if (!v19)
    {
      unint64_t v20 = sub_19EFB51F8(MEMORY[0x1E4FBC860]);
      *(void *)&long long v52 = v6;
      *((void *)&v52 + 1) = a3;
      unint64_t v53 = v20;
      *(void *)&long long v54 = &type metadata for AnyIntentTypes;
      sub_19EEBDC00(&v52, v51);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v56 = v50[0];
      sub_19EE7DA20(v51, 0xD00000000000001FLL, 0x800000019F26A560, isUniquelyReferenced_nonNull_native);
      uint64_t v22 = v56;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50[0] = v22;
      uint64_t v18 = v22;
    }
    uint64_t v23 = a2[3];
    uint64_t v24 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v23);
    uint64_t v56 = v18;
    swift_bridgeObjectRetain();
    uint64_t v25 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(&v56);
    Decoder.withUserInfo(_:)(v25, v23, v24, v51);
    swift_bridgeObjectRelease();
    *(void *)&long long v54 = v14;
    *((void *)&v54 + 1) = v15;
    uint64_t v55 = v16;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v52);
    sub_19F1DC59C();
    if (v5)
    {
      swift_bridgeObjectRelease();
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)&v52);
    }
    long long v49 = v54;
    uint64_t v37 = v54;
    long long v38 = __swift_project_boxed_opaque_existential_1(&v52, v54);
    long long v39 = v46;
    *(_OWORD *)(v46 + 3) = v49;
LABEL_12:
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v39);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(boxed_opaque_existential_2Tm, v38, v37);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v52);
  }
  uint64_t v27 = dynamic_cast_existential_2_conditional(a1);
  if (v27)
  {
    uint64_t v30 = v27;
    uint64_t v31 = v28;
    char v47 = a4;
    uint64_t v48 = v29;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v32 = sub_19F1DD89C();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v32);
    uint64_t v33 = v56;
    sub_19F17AA40(0xD00000000000001FLL, 0x800000019F26A560, v56, (uint64_t)&v52);
    unint64_t v34 = v53;
    swift_bridgeObjectRelease();
    if (!v34)
    {
      unint64_t v35 = sub_19EFB51F8(MEMORY[0x1E4FBC860]);
      *(void *)&long long v52 = v6;
      *((void *)&v52 + 1) = a3;
      unint64_t v53 = v35;
      *(void *)&long long v54 = &type metadata for AnyIntentTypes;
      sub_19EEBDC00(&v52, v51);
      swift_bridgeObjectRetain();
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      v50[0] = v33;
      sub_19EE7DA20(v51, 0xD00000000000001FLL, 0x800000019F26A560, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = v33;
    }
    sub_19EEC4154((uint64_t)a2, (uint64_t)v50);
    JSONObject.init(from:)(v50, v51);
    if (v5) {
      return swift_bridgeObjectRelease();
    }
    v50[0] = v33;
    long long v44 = *(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v31 + 8);
    *(void *)&long long v54 = v30;
    *((void *)&v54 + 1) = v31;
    uint64_t v55 = v48;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v52);
    swift_bridgeObjectRetain();
    v44(v51, v50, v30, v31);
    uint64_t v37 = v54;
    uint64_t v45 = v55;
    long long v38 = __swift_project_boxed_opaque_existential_1(&v52, v54);
    long long v39 = v47;
    v47[3] = v37;
    v47[4] = v45;
    goto LABEL_12;
  }
  uint64_t v41 = sub_19F1DCDCC();
  swift_allocError();
  uint64_t v43 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
  *uint64_t v43 = a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_19F1DD86C();
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  *(void *)&long long v52 = 60;
  *((void *)&v52 + 1) = 0xE100000000000000;
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F1DCDAC();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v43, *MEMORY[0x1E4FBBA70], v41);
  return swift_willThrow();
}

uint64_t static _IntentKindTable_Returning._table.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)(a3 + 8) + 16))();
  uint64_t v4 = static StaticIntent.kind.getter();
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for StaticIntent();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_19EFBC050(v7, v4, v6, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = static SidepackedIntent.kind.getter();
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for SidepackedIntent();
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_19EFBC050(v12, v9, v11, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static _IntentKindTable_Returning._defaultType.getter()
{
  return type metadata accessor for StaticIntent();
}

void *static _IntentKindTable_Returning._decode(_:from:)@<X0>(void *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  unint64_t result = (*(void *(**)(void *__return_ptr))(*(void *)(a3 + 8) + 40))(v17);
  if (!v4)
  {
    sub_19EEC4154((uint64_t)v17, (uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946DEE0);
    uint64_t v19 = a2;
    swift_getExtendedExistentialTypeMetadata();
    if (swift_dynamicCast())
    {
      sub_19EEBB420(&v15, a4);
    }
    else
    {
      uint64_t v9 = sub_19F1DCDFC();
      swift_allocError();
      uint64_t v11 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568);
      uint64_t v12 = v18;
      char v13 = __swift_project_boxed_opaque_existential_1(v17, v18);
      void v11[3] = v12;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v11);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(boxed_opaque_existential_2Tm, v13, v12);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_19F1DD86C();
      v16[0] = 0;
      v16[1] = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DCDAC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, *MEMORY[0x1E4FBBAA0], v9);
      swift_willThrow();
    }
    return (void *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
  return result;
}

uint64_t sub_19EFC2AC0(uint64_t *a1)
{
  return static _IntentKindTable_Returning._table.getter(a1[2], a1[3], a1[4]);
}

uint64_t sub_19EFC2AD0()
{
  return static _IntentKindTable_Returning._defaultType.getter();
}

void *sub_19EFC2AD8@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return static _IntentKindTable_Returning._decode(_:from:)(a1, *(void *)(a2 + 24), *(void *)(a2 + 32), a3);
}

uint64_t static _IntentKindTable_ReturningUnknown._defaultType.getter()
{
  return type metadata accessor for StaticIntent();
}

uint64_t static _IntentKindTable_ReturningUnknown._unknownTypeWrapper.getter()
{
  type metadata accessor for _OpaqueIntentModelBody();
  swift_getWitnessTable();
  return type metadata accessor for OpenIntentModel();
}

void *static _IntentKindTable_ReturningUnknown._decode(_:from:)@<X0>(void *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  return static _IntentKindTable_Returning._decode(_:from:)(a1, a2, a3, a4);
}

uint64_t sub_19EFC2B84(void *a1)
{
  return static _IntentKindTable_ReturningUnknown._table.getter(a1[2], a1[3], a1[4]);
}

uint64_t sub_19EFC2B94()
{
  return static _IntentKindTable_ReturningUnknown._defaultType.getter();
}

uint64_t sub_19EFC2B9C()
{
  return static _IntentKindTable_ReturningUnknown._unknownTypeWrapper.getter();
}

void *sub_19EFC2BA8@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return static _IntentKindTable_ReturningUnknown._decode(_:from:)(a1, *(void *)(a2 + 24), *(void *)(a2 + 32), a3);
}

uint64_t static _IntentKindTable_ReturningAny._defaultType.getter()
{
  return type metadata accessor for StaticIntent();
}

void *static _IntentKindTable_ReturningAny._decode(_:from:)@<X0>(void *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  unint64_t result = static _IntentKindTable_Returning._decode(_:from:)(a1, a2, a3, (uint64_t)v15);
  if (!v4)
  {
    uint64_t v7 = v16;
    uint64_t v8 = v17;
    uint64_t v9 = __swift_project_boxed_opaque_existential_1(v15, v16);
    double v10 = MEMORY[0x1F4188790](v9);
    uint64_t v12 = (char *)&v15[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v13 + 16))(v12, v10);
    AnyIntentModel.init<A>(_:)((uint64_t)v12, v7, v8, a4);
    return (void *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
  return result;
}

uint64_t sub_19EFC2CF0(void *a1)
{
  return static _IntentKindTable_ReturningAny._table.getter(a1[2], a1[3], a1[4]);
}

uint64_t sub_19EFC2D00()
{
  return static _IntentKindTable_ReturningAny._defaultType.getter();
}

void *sub_19EFC2D08@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return static _IntentKindTable_ReturningAny._decode(_:from:)(a1, *(void *)(a2 + 24), *(void *)(a2 + 32), a3);
}

uint64_t dispatch thunk of static IntentKindTable.table.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for _IntentKindTable_Returning()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _IntentKindTable_ReturningUnknown()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for _IntentKindTable_ReturningAny()
{
  return __swift_instantiateGenericMetadata();
}

void *assignWithCopy for XpViewableThresholdFieldProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for XpViewableThresholdFieldProvider()
{
  return &type metadata for XpViewableThresholdFieldProvider;
}

uint64_t sub_19EFC2DF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  v3[10] = a1;
  v3[11] = v4;
  uint64_t v5 = v2[1];
  v3[12] = *v2;
  v3[13] = v5;
  return MEMORY[0x1F4188298](sub_19EE2BB58, 0, 0);
}

uint64_t sub_19EFC2E24(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 64) = a2;
  *(void *)(v3 + 48) = v2;
  *(void *)(v3 + 56) = a1;
  *(unsigned char *)(v3 + 128) = a2;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_19EFC2F64, 0, 0);
}

uint64_t sub_19EFC2F64()
{
  if ((*(unsigned char *)(v0 + 128) & 1) == 0)
  {
    *(void *)(v0 + 16) = *(void *)(v0 + 56);
    uint64_t v1 = *(void *)(v0 + 80);
    *(void *)(v0 + 40) = MEMORY[0x1E4FBB550];
    uint64_t v2 = *(void *)(v1 + 24);
    uint64_t v3 = *(void *)(v1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v1, v2);
    (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 16))(v0 + 16, 0xD000000000000013, 0x800000019F26A7B0, v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t AsyncObjectGraphMetrics.BuiltDependency.typeName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AsyncObjectGraphMetrics.BuiltDependency.typeName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AsyncObjectGraphMetrics.BuiltDependency.typeName.modify())()
{
  return nullsub_1;
}

double AsyncObjectGraphMetrics.BuiltDependency.elapsedTime.getter()
{
  return *(double *)(v0 + 16);
}

void AsyncObjectGraphMetrics.BuiltDependency.elapsedTime.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*AsyncObjectGraphMetrics.BuiltDependency.elapsedTime.modify())()
{
  return nullsub_1;
}

BOOL static AsyncObjectGraphMetrics.BuiltDependency.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_19F1DD44C();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

BOOL sub_19EFC3174(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_19F1DD44C();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t AsyncObjectGraphMetrics.builtDependencies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t (*Unstable.AsyncObjectGraphMetrics.BuiltDependency.typeName.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_19EFC322C;
}

uint64_t sub_19EFC322C(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v4;
    v3[1] = v2;
  }
  return result;
}

double (*Unstable.AsyncObjectGraphMetrics.BuiltDependency.elapsedTime.modify(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return sub_19EFC32D0;
}

double sub_19EFC32D0(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + 16) = *(void *)a1;
  return result;
}

BOOL static Unstable.AsyncObjectGraphMetrics.BuiltDependency.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  return (v4 || (sub_19F1DD44C() & 1) != 0) && v2 == v3;
}

BOOL sub_19EFC3344(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  return (v4 || (sub_19F1DD44C() & 1) != 0) && v2 == v3;
}

uint64_t Unstable.AsyncObjectGraphMetrics.builtDependencies.getter()
{
  uint64_t v1 = *v0;
  int64_t v2 = *(void *)(*v0 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EFF6520(0, v2, 0);
    uint64_t v3 = v12;
    BOOL v4 = (uint64_t *)(v1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v8 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1) {
        sub_19EFF6520(v9 > 1, v8 + 1, 1);
      }
      *(void *)(v12 + 16) = v8 + 1;
      double v10 = (void *)(v12 + 24 * v8);
      v10[4] = v6;
      v10[5] = v5;
      v10[6] = v7;
      v4 += 3;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_19EFC34A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFC34B0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFC34BC(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

double sub_19EFC3500@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

double sub_19EFC350C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(a2 + 16) = *a1;
  return result;
}

void *_s9JetEngine23AsyncObjectGraphMetricsV15BuiltDependencyVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *_s9JetEngine23AsyncObjectGraphMetricsV15BuiltDependencyVwta_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for SentryRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SentryRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s37_DeprecateAsyncObjectGraphMetricsRuleOMa()
{
  return &_s37_DeprecateAsyncObjectGraphMetricsRuleON;
}

ValueMetadata *_s39_UndeprecateAsyncObjectGraphMetricsRuleOMa()
{
  return &_s39_UndeprecateAsyncObjectGraphMetricsRuleON;
}

uint64_t initializeWithCopy for FoundationValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for FoundationValue(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        double result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *double result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

_OWORD *assignWithTake for FoundationValue(_OWORD *a1, _OWORD *a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

uint64_t _s17AppearanceJournalC4TimeVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17AppearanceJournalC4TimeVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FoundationValue()
{
  return &type metadata for FoundationValue;
}

uint64_t sub_19EFC39EC()
{
  sub_19EEBDBA4(v0, (uint64_t)&v8);
  sub_19EEBDC10(0, &qword_1EB392CF0);
  if (swift_dynamicCast()) {
    BOOL v1 = *(void *)&v7[0] == 0;
  }
  else {
    BOOL v1 = 1;
  }
  if (v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_12:
    uint64_t v5 = 0;
    goto LABEL_13;
  }
  id v2 = *(id *)&v7[0];
  uint64_t v3 = (void *)sub_19F1DBD4C();
  id v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
  }
  else
  {

    memset(v7, 0, sizeof(v7));
  }
  sub_19EEBDC4C((uint64_t)v7, (uint64_t)&v8, &qword_1EB393260);
  if (!*((void *)&v9 + 1)) {
    goto LABEL_12;
  }
  uint64_t v5 = 1;
LABEL_13:
  sub_19EEBD664((uint64_t)&v8, &qword_1EB393260);
  return v5;
}

JSStringRef sub_19EFC3B2C(id a1)
{
  id v2 = v1;
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = self;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(void *)string = 0;
  id v6 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, sub_19F1DD42C(), 0, string);
  swift_unknownObjectRelease();
  id v7 = *(id *)string;
  if (!v6)
  {
    uint64_t v18 = v7;
    sub_19F1DB19C();

    swift_willThrow();
    return (JSStringRef)a1;
  }
  uint64_t v8 = sub_19F1DB40C();
  unint64_t v10 = v9;

  sub_19F1DBDCC();
  uint64_t v11 = sub_19F1DBD9C();
  if (!v12)
  {
    sub_19EEA072C(v8, v10);
    return 0;
  }
  uint64_t v13 = v12;
  if ((v12 & 0x1000000000000000) != 0 || !(v12 & 0x2000000000000000 | v11 & 0x1000000000000000))
  {
    sub_19F1DCCDC();
    uint64_t v17 = *(OpaqueJSString **)string;
    goto LABEL_13;
  }
  MEMORY[0x1F4188790](v11);
  *(&v21 - 2) = (uint64_t)sub_19EF4D53C;
  *(&v21 - 1) = 0;
  if ((v13 & 0x2000000000000000) == 0)
  {
    if ((v14 & 0x1000000000000000) != 0)
    {
      uint64_t v15 = (v13 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v15 = sub_19F1DCE2C();
    }
    uint64_t v17 = (OpaqueJSString *)sub_19F1069C8(v15, v16, (uint64_t (*)(void))sub_19EFC4F14);
    goto LABEL_13;
  }
  *(void *)string = v14;
  uint64_t v23 = v13 & 0xFFFFFFFFFFFFFFLL;
  JSStringRef result = JSStringCreateWithUTF8CString(string);
  if (result)
  {
    uint64_t v17 = result;
LABEL_13:
    JSValueRef v20 = JSValueMakeFromJSONString((JSContextRef)objc_msgSend(a1, sel_JSGlobalContextRef), v17);
    if (v20)
    {
      a1 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, v20, a1);
      JSStringRelease(v17);
      sub_19EEA072C(v8, v10);
      swift_bridgeObjectRelease();
      return (JSStringRef)a1;
    }
    JSStringRelease(v17);
    sub_19EEA072C(v8, v10);
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

id sub_19EFC3E44(uint64_t a1, uint64_t a2)
{
  return sub_19EEC9944(a1, a2, (SEL *)&selRef_unsignedIntegerValue);
}

id sub_19EFC3E50(uint64_t a1, uint64_t a2)
{
  return sub_19EEC9944(a1, a2, (SEL *)&selRef_unsignedLongLongValue);
}

unint64_t sub_19EFC3E5C()
{
  sub_19EEBDBA4(v0, (uint64_t)v8);
  sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
  int v1 = swift_dynamicCast();
  unsigned __int8 v2 = v1;
  if (v1)
  {
    objc_msgSend(v7, sel_floatValue);
    unsigned int v4 = v3;

    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = 0;
  }
  return v5 | ((unint64_t)(v2 ^ 1u) << 32);
}

uint64_t sub_19EFC3F0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_19EEBDBA4(v2, (uint64_t)v5);
  return ScalarDictionary.Value.init(rawValue:)((uint64_t)v5, a1);
}

JSStringRef sub_19EFC3F54(void *a1)
{
  return sub_19EFC3B2C(a1);
}

void sub_19EFC3F6C(void *a1@<X2>, char a2@<W3>, uint64_t a3@<X8>)
{
  if (a2 == 2)
  {
    uint64_t v5 = (void *)sub_19F1DBD4C();
    id v6 = objc_msgSend(a1, sel_valueForProperty_, v5);

    if (v6)
    {
      if (sub_19F1066A8() == 6)
      {
        sub_19EF600C0();
        uint64_t v7 = swift_allocError();
        uint64_t v9 = v8;
        id v10 = v6;
        JSError.init(badValue:expected:)(v10, v9);
        swift_willThrow();

        *(void *)(a3 + 32) = 0;
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        uint64_t v11 = (void *)v7;
      }
      else
      {
        id v15 = v6;
        id v12 = sub_19EFC4F68(v15);
        char v14 = v13;

        *(void *)(a3 + 24) = &type metadata for DirectValue;
        *(void *)(a3 + 32) = &off_1EF13A528;
        *(void *)a3 = v12;
        *(unsigned char *)(a3 + 8) = v14;
        uint64_t v11 = v15;
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
}

void sub_19EFC40DC(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v4 = (void *)sub_19F1DBD4C();
  unsigned int v5 = objc_msgSend(a3, sel_hasProperty_, v4);

  if (v5)
  {
    id v6 = (void *)sub_19F1DBD4C();
    id v7 = objc_msgSend(a3, sel_valueForProperty_, v6);

    if (v7)
    {
      sub_19F1066A8();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_19EFC4194@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (objc_msgSend(a1, sel_isString))
  {
    uint64_t result = (uint64_t)sub_19F07C97C();
    if (v5)
    {
      *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];
      *(void *)a2 = result;
      *(void *)(a2 + 8) = v5;
      return result;
    }
LABEL_9:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  if (objc_msgSend(a1, sel_isNumber))
  {
    uint64_t result = (uint64_t)objc_msgSend(a1, sel_toNumber);
    if (result)
    {
      uint64_t v6 = result;
      uint64_t result = sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
      *(void *)(a2 + 24) = result;
      *(void *)a2 = v6;
      return result;
    }
    goto LABEL_9;
  }
  if ((objc_msgSend(a1, sel_isArray) & 1) == 0)
  {
    if (objc_msgSend(a1, sel_isBoolean))
    {
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_toBool);
      *(void *)(a2 + 24) = MEMORY[0x1E4FBB390];
      *(unsigned char *)a2 = result;
      return result;
    }
    if (objc_msgSend(a1, sel_isNull))
    {
      id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
      uint64_t result = sub_19EEBDC10(0, (unint64_t *)&qword_1EB392CF8);
      *(void *)(a2 + 24) = result;
      *(void *)a2 = v7;
      return result;
    }
    uint64_t result = (uint64_t)JSValue.isJSONObject.getter();
    if ((result & 1) == 0) {
      goto LABEL_9;
    }
  }
  sub_19EE7C060();
  sub_19EEC3ED8((uint64_t)&v13, (uint64_t)&v10, (uint64_t *)&unk_1E946FD20);
  uint64_t v8 = *((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    uint64_t v9 = v12;
    __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(v8, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v10);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v10, (uint64_t *)&unk_1E946FD20);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return sub_19EEC3418((uint64_t)&v13);
}

id sub_19EFC45BC(void *a1)
{
  if (!objc_msgSend(a1, sel_isString)) {
    return 0;
  }
  id result = objc_msgSend(a1, sel_context);
  if (result)
  {
    unsigned int v3 = result;
    unsigned int v4 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

    uint64_t v5 = JSValueToStringCopy(v4, (JSValueRef)objc_msgSend(a1, sel_JSValueRef), 0);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = sub_19EF4D574(v5);
      JSStringRelease(v6);
      return (id)v7;
    }
    sub_19EF600C0();
    uint64_t v8 = (void *)swift_allocError();
    uint64_t v10 = v9;
    id v11 = a1;
    JSError.init(badValue:expected:)(v11, v10);
    swift_willThrow();
    id v12 = objc_msgSend(v11, sel_toString);
    if (v12)
    {
      long long v13 = v12;
      uint64_t v7 = sub_19F1DBD7C();

      return (id)v7;
    }

    return 0;
  }
  __break(1u);
  return result;
}

id sub_19EFC4714(void *a1)
{
  if (objc_msgSend(a1, sel_isNumber)) {
    return (id)(int)objc_msgSend(a1, sel_toInt32);
  }
  if (!objc_msgSend(a1, sel_isNumber)) {
    return 0;
  }
  id v3 = objc_msgSend(a1, sel_toNumber);
  if (!v3) {
    return 0;
  }
  unsigned int v4 = v3;
  id v2 = objc_msgSend(v3, sel_integerValue);

  return v2;
}

id sub_19EFC47B8(void *a1)
{
  if (objc_msgSend(a1, sel_isNumber)) {
    return (id)objc_msgSend(a1, sel_toUInt32);
  }
  if (!objc_msgSend(a1, sel_isNumber)) {
    return 0;
  }
  id v3 = objc_msgSend(a1, sel_toNumber);
  if (!v3) {
    return 0;
  }
  unsigned int v4 = v3;
  id v2 = objc_msgSend(v3, sel_unsignedIntegerValue);

  return v2;
}

id sub_19EFC485C(void *a1)
{
  if (objc_msgSend(a1, sel_isNumber))
  {
    objc_msgSend(a1, sel_toDouble);
    return (id)v2;
  }
  else if (objc_msgSend(a1, sel_isNumber))
  {
    id result = objc_msgSend(a1, sel_toNumber);
    if (result)
    {
      unsigned int v4 = result;
      objc_msgSend(result, sel_doubleValue);
      uint64_t v6 = v5;

      return (id)v6;
    }
  }
  else
  {
    return 0;
  }
  return result;
}

void sub_19EFC4908(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = a1;
  if (objc_msgSend(v3, sel_isArray))
  {
    unsigned int v4 = (void *)sub_19F1DBD4C();
    id v5 = objc_msgSend(v3, sel_valueForProperty_, v4);

    if (v5)
    {
      unsigned int v6 = objc_msgSend(v5, sel_toUInt32);

      id v7 = v3;
      id v8 = sub_19F18EBF8(0, v6, v7);

      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472108);
      *a2 = v8;
      a2[1] = sub_19F125380;
      a2[2] = 0;
      a2[3] = v9;
      a2[4] = &off_1EF14BC60;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {

    a2[4] = 0;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
}

uint64_t sub_19EFC4A24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if ((objc_msgSend(a1, sel_isString) & 1) == 0)
  {
    if (objc_msgSend(a1, sel_isNumber))
    {
      if (objc_msgSend(a1, sel_isNumber)) {
        id v7 = objc_msgSend(a1, sel_toNumber);
      }
      else {
        id v7 = 0;
      }
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472100);
      v10[0] = v7;
      return ScalarDictionary.Value.init(rawValue:)((uint64_t)v10, a2);
    }
    uint64_t result = (uint64_t)objc_msgSend(a1, sel_isArray);
    if ((result & 1) == 0)
    {
      if (objc_msgSend(a1, sel_isBoolean))
      {
        unsigned __int8 v9 = objc_msgSend(a1, sel_toBool);
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F690);
        LOBYTE(v10[0]) = v9;
        return ScalarDictionary.Value.init(rawValue:)((uint64_t)v10, a2);
      }
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isNull);
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)JSValue.isJSONObject.getter();
      }
    }
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = -1;
    return result;
  }
  id v4 = sub_19EFC45BC(a1);
  uint64_t v6 = v5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392310);
  v10[0] = v4;
  v10[1] = v6;
  return ScalarDictionary.Value.init(rawValue:)((uint64_t)v10, a2);
}

void sub_19EFC4B74(uint64_t a1@<X8>)
{
  sub_19EFC3F6C(*(void **)v1, *(unsigned char *)(v1 + 8), a1);
}

void sub_19EFC4B80(uint64_t a1, uint64_t a2)
{
  sub_19EFC40DC(a1, a2, *v2);
}

id sub_19EFC4B88()
{
  return sub_19EFC45BC(*v0);
}

id sub_19EFC4B90()
{
  id v1 = *v0;
  if (objc_msgSend(*v0, sel_isNumber)) {
    return objc_msgSend(v1, sel_toNumber);
  }
  else {
    return 0;
  }
}

id sub_19EFC4BE4()
{
  return sub_19EFC4714(*v0);
}

id sub_19EFC4C04()
{
  return sub_19EFC47B8(*v0);
}

id sub_19EFC4C24(uint64_t a1, uint64_t a2)
{
  return sub_19EFC4C3C(a1, a2, (SEL *)&selRef_longLongValue);
}

id sub_19EFC4C30(uint64_t a1, uint64_t a2)
{
  return sub_19EFC4C3C(a1, a2, (SEL *)&selRef_unsignedLongLongValue);
}

id sub_19EFC4C3C(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5 = *v3;
  if (!objc_msgSend(v5, sel_isNumber)) {
    return 0;
  }
  id v6 = objc_msgSend(v5, sel_toNumber);
  if (!v6) {
    return 0;
  }
  id v7 = v6;
  id v8 = [v6 *a3];

  return v8;
}

unint64_t sub_19EFC4CB8()
{
  id v1 = *v0;
  if (objc_msgSend(*v0, sel_isNumber)
    && (id v2 = objc_msgSend(v1, sel_toNumber)) != 0)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_floatValue);
    unsigned int v5 = v4;

    unsigned __int8 v6 = 0;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = 0;
    unsigned __int8 v6 = 1;
  }
  return v7 | ((unint64_t)v6 << 32);
}

id sub_19EFC4D50()
{
  return sub_19EFC485C(*v0);
}

id sub_19EFC4D70()
{
  return objc_msgSend(*v0, sel_toBool);
}

uint64_t sub_19EFC4D94@<X0>(uint64_t a1@<X8>)
{
  return sub_19EFC4194(*v1, a1);
}

uint64_t sub_19EFC4D9C()
{
  id v1 = *v0;
  if (objc_msgSend(*v0, sel_isNull)) {
    return 1;
  }
  else {
    return (uint64_t)objc_msgSend(v1, sel_isUndefined);
  }
}

uint64_t sub_19EFC4DE8@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_toDate);
  if (v3)
  {
    unsigned int v4 = v3;
    sub_19F1DB54C();

    uint64_t v5 = sub_19F1DB57C();
    unsigned __int8 v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_19F1DB57C();
    unsigned __int8 v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

void sub_19EFC4EB0(void *a1@<X8>)
{
  sub_19EFC4908(*v1, a1);
}

uint64_t sub_19EFC4EB8@<X0>(uint64_t a1@<X8>)
{
  return sub_19EFC4A24(*v1, a1);
}

void *sub_19EFC4EE4()
{
  id v1 = *v0;
  id v2 = v1;
  return v1;
}

void *sub_19EFC4F14@<X0>(void *a1@<X8>)
{
  return sub_19F106A08(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_19EFC4F30()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

id sub_19EFC4F68(void *a1)
{
  id v1 = a1;
  if ((objc_msgSend(v1, sel_isString) & 1) == 0
    && !objc_msgSend(v1, sel_isNumber)
    && (objc_msgSend(v1, sel_isArray) & 1) == 0
    && (objc_msgSend(v1, sel_isBoolean) & 1) == 0
    && (objc_msgSend(v1, sel_isNull) & 1) == 0)
  {
    JSValue.isJSONObject.getter();
  }
  return v1;
}

uint64_t initializeBufferWithCopyOfBuffer for QueryExpression.Rule(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for QueryExpression.Rule(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for QueryExpression.Rule(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryExpression.Rule(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryExpression.Rule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DirectValue()
{
  return &type metadata for DirectValue;
}

ValueMetadata *type metadata accessor for XpViewablePercentageFieldProvider()
{
  return &type metadata for XpViewablePercentageFieldProvider;
}

uint64_t sub_19EFC519C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  v3[10] = a1;
  v3[11] = v4;
  uint64_t v5 = v2[1];
  v3[12] = *v2;
  v3[13] = v5;
  return MEMORY[0x1F4188298](sub_19EE2B9B8, 0, 0);
}

uint64_t sub_19EFC51C8(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 64) = a2;
  *(void *)(v3 + 48) = v2;
  *(void *)(v3 + 56) = a1;
  *(unsigned char *)(v3 + 128) = a2;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_19EFC5308, 0, 0);
}

uint64_t sub_19EFC5308()
{
  if ((*(unsigned char *)(v0 + 128) & 1) == 0)
  {
    *(void *)(v0 + 16) = *(void *)(v0 + 56);
    uint64_t v1 = *(void *)(v0 + 80);
    *(void *)(v0 + 40) = MEMORY[0x1E4FBB3D0];
    uint64_t v2 = *(void *)(v1 + 24);
    uint64_t v3 = *(void *)(v1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v1, v2);
    (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 16))(v0 + 16, 0xD000000000000014, 0x800000019F26A790, v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_19EFC5400()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB60);
  swift_allocObject();
  uint64_t result = sub_19F1DD94C();
  qword_1E946E130 = result;
  return result;
}

JetEngine::JSTimeoutError __swiftcall JSTimeoutError.init(requestDescription:timeoutInterval:)(Swift::String requestDescription, Swift::Double timeoutInterval)
{
  object = requestDescription._object;
  uint64_t countAndFlagsBits = requestDescription._countAndFlagsBits;
  uint64_t v6 = v2;
  unsigned __int8 v7 = sub_19EFC55D0();
  *(unsigned char *)uint64_t v6 = v7 & 1;
  *(void *)(v6 + 8) = countAndFlagsBits;
  *(void *)(v6 + 16) = object;
  *(Swift::Double *)(v6 + 24) = timeoutInterval;
  result.timeoutInterval = v10;
  result.requestDescription._object = v9;
  result.requestDescription._uint64_t countAndFlagsBits = v8;
  result._likelyHadNetworkConnection = v7;
  return result;
}

uint64_t JSTimeoutError.requestDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

double JSTimeoutError.timeoutInterval.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t JSTimeoutError.errorDescription.getter()
{
  return 0;
}

NSObject *sub_19EFC55D0()
{
  void (*v4)(void *__return_ptr, uint64_t);

  if (qword_1E946E128 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_19F1DD95C();
  uint64_t v1 = (uint64_t)v4;
  if (v4)
  {
    v4(&v4, v0);
    sub_19EE83660(v1);
    return v4;
  }
  JetEngine::JSTimeoutError result = nw_path_create_default_evaluator();
  if (result)
  {
    JetEngine::JSTimeoutError result = nw_path_evaluator_copy_path();
    if (result)
    {
      nw_path_status_t status = nw_path_get_status(result);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return (((status - 1) & 0xFFFFFFFD) == 0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_19EFC56B0()
{
  unint64_t result = qword_1E946E3D0;
  if (!qword_1E946E3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946E3D0);
  }
  return result;
}

uint64_t initializeWithCopy for JSTimeoutError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSTimeoutError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for JSTimeoutError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSTimeoutError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSTimeoutError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSTimeoutError()
{
  return &type metadata for JSTimeoutError;
}

void *sub_19EFC5884(long long *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  v4[17] = 0;
  v4[19] = 0;
  v4[2] = a3;
  v4[3] = a4;
  v4[4] = swift_slowAlloc();
  v4[5] = swift_slowAlloc();
  sub_19EEBB420(a1, (uint64_t)(v4 + 6));
  sub_19EEBB420(a2, (uint64_t)(v4 + 11));
  v4[16] = 0;
  uint64_t v8 = v4[4];
  swift_beginAccess();
  v4[17] = v8;
  v4[18] = a4;
  uint64_t v9 = v4[5];
  swift_beginAccess();
  v4[19] = v9;
  v4[20] = 0;
  return v4;
}

uint64_t sub_19EFC5958()
{
  MEMORY[0x19F3C9470](*(void *)(v0 + 32), -1, -1);
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1) {
    MEMORY[0x19F3C9470](v1, -1, -1);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BrotliCursor()
{
  return self;
}

uint64_t sub_19EFC59E0()
{
  unint64_t v2 = v0;
  uint64_t result = swift_beginAccess();
  if (!v0[16])
  {
    uint64_t v4 = v0[9];
    uint64_t v5 = v0[10];
    __swift_project_boxed_opaque_existential_1(v0 + 6, v4);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    if (result)
    {
      uint64_t v6 = v0[9];
      uint64_t v7 = v0[10];
      __swift_project_boxed_opaque_existential_1(v0 + 6, v6);
      uint64_t v8 = v0[4];
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 32))(v8, v0[2], v6, v7);
      if (!v1)
      {
        uint64_t v9 = result;
        v2[16] = result;
        uint64_t result = swift_beginAccess();
        v2[17] = v8;
        uint64_t v10 = v2[20];
        BOOL v11 = __OFADD__(v10, v9);
        uint64_t v12 = v10 + v9;
        if (v11) {
          __break(1u);
        }
        else {
          v2[20] = v12;
        }
      }
    }
  }
  return result;
}

uint64_t sub_19EFC5AF0()
{
  unint64_t v2 = v0;
  uint64_t v3 = v0[3];
  uint64_t result = swift_beginAccess();
  uint64_t v5 = v0[18];
  uint64_t v6 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v6 < 1) {
    return result;
  }
  sub_19EEC4154((uint64_t)(v2 + 11), (uint64_t)v10);
  uint64_t v7 = v11;
  uint64_t v8 = v12;
  uint64_t result = (uint64_t)__swift_project_boxed_opaque_existential_1(v10, v11);
  uint64_t v9 = v2[5];
  if (!v9)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v8 + 16))(v2[5], v6, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if (!v1)
  {
    v2[18] = v3;
    uint64_t result = swift_beginAccess();
    v2[19] = v9;
  }
  return result;
}

void sub_19EFC5BEC(void (*a1)(uint64_t, double))
{
  uint64_t v3 = v2;
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  char v8 = v7;
  id v9 = objc_msgSend(objc_allocWithZone((Class)JEBrotliEncoder), sel_init);
  if (!v9)
  {
    sub_19EFC616C();
    swift_allocError();
    *char v36 = 4;
    swift_willThrow();
    return;
  }
  uint64_t v10 = v9;
  objc_msgSend(v9, sel_setQuality_, 11);
  char v39 = v8;
  if (v8) {
    goto LABEL_6;
  }
  if ((v6 & 0x8000000000000000) == 0 && !HIDWORD(v6))
  {
    objc_msgSend(v10, sel_setSizeHint_, v6);
LABEL_6:
    sub_19EEC4154((uint64_t)v1, (uint64_t)v47);
    sub_19EEC4154((uint64_t)(v1 + 5), (uint64_t)v46);
    type metadata accessor for BrotliCursor();
    swift_initStackObject();
    uint64_t v11 = sub_19EFC5884(v47, v46, 0x80000, 0x80000);
    uint64_t v12 = v11 + 16;
    long long v13 = v11 + 6;
    char v14 = v11 + 18;
    id v15 = v11 + 19;
    swift_beginAccess();
    swift_beginAccess();
    char v42 = v8 | (a1 == 0);
    double v16 = (double)v6;
    uint64_t v40 = v10;
    while (1)
    {
      if (!*v12)
      {
        uint64_t v17 = v11[9];
        uint64_t v18 = v11[10];
        __swift_project_boxed_opaque_existential_1(v13, v17);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18))
        {
          uint64_t v19 = v11[9];
          uint64_t v20 = v11[10];
          __swift_project_boxed_opaque_existential_1(v13, v19);
          uint64_t v21 = v11[4];
          uint64_t v22 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 32))(v21, v11[2], v19, v20);
          if (v3)
          {
            swift_release();

            return;
          }
          v11[16] = v22;
          v11[17] = v21;
          uint64_t v23 = v11[20];
          BOOL v24 = __OFADD__(v23, v22);
          uint64_t v25 = v23 + v22;
          uint64_t v10 = v40;
          if (v24)
          {
            __break(1u);
LABEL_35:
            __break(1u);
            break;
          }
          v11[20] = v25;
          long long v13 = v11 + 6;
        }
        id v15 = v11 + 19;
      }
      uint64_t v31 = v11[9];
      uint64_t v32 = v11[10];
      __swift_project_boxed_opaque_existential_1(v13, v31);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32)) {
        uint64_t v33 = 0;
      }
      else {
        uint64_t v33 = 2;
      }
      swift_beginAccess();
      swift_beginAccess();
      swift_beginAccess();
      swift_beginAccess();
      unsigned __int8 v34 = objc_msgSend(v10, sel_compressStreamWithOperation_availableIn_nextIn_availableOut_nextOut_, v33, v12, v11 + 17, v14, v15);
      swift_endAccess();
      swift_endAccess();
      swift_endAccess();
      uint64_t v35 = swift_endAccess();
      if ((v34 & 1) == 0)
      {
        sub_19F0E88E4(0xD000000000000031, 0x800000019F26BCE0);
        sub_19EFC616C();
        swift_allocError();
        unsigned char *v37 = 3;
        swift_willThrow();
LABEL_31:
        swift_release();

        return;
      }
      if ((v42 & 1) == 0) {
        a1(v35, (double)(uint64_t)v11[20] / v16);
      }
      if (!*v14)
      {
        uint64_t v26 = v11[3];
        if (v26 >= 1)
        {
          uint64_t v27 = v3;
          sub_19EEC4154((uint64_t)(v11 + 11), (uint64_t)v43);
          uint64_t v29 = v44;
          uint64_t v28 = v45;
          __swift_project_boxed_opaque_existential_1(v43, v44);
          uint64_t v30 = v11[5];
          if (!v30) {
            goto LABEL_35;
          }
          (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v28 + 16))(v11[5], v26, v29, v28);
          uint64_t v3 = v27;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
          if (v27)
          {

            swift_release();
            return;
          }
          *char v14 = v26;
          id v15 = v11 + 19;
          v11[19] = v30;
          uint64_t v10 = v40;
        }
      }
      long long v13 = v11 + 6;
      if (objc_msgSend(v10, sel_isFinished))
      {
        uint64_t v38 = sub_19EFC5AF0();
        if (!v3 && (v39 & 1) != 0)
        {
          if (a1) {
            a1(v38, 1.0);
          }
        }
        goto LABEL_31;
      }
    }
  }
  sub_19F1DCFBC();
  __break(1u);
}

unint64_t sub_19EFC616C()
{
  unint64_t result = qword_1E9472120;
  if (!qword_1E9472120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472120);
  }
  return result;
}

void sub_19EFC61C0()
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)JEBrotliDecoder), sel_init);
  if (!v2)
  {
    sub_19EFC616C();
    swift_allocError();
    *uint64_t v5 = 4;
    swift_willThrow();
    return;
  }
  uint64_t v3 = v2;
  sub_19EEC4154(v0, (uint64_t)v50);
  sub_19EEC4154(v0 + 40, (uint64_t)v49);
  type metadata accessor for BrotliCursor();
  swift_initStackObject();
  uint64_t v4 = sub_19EFC5884(v50, v49, 0x80000, 0x80000);
  sub_19EFC59E0();
  if (v1)
  {
LABEL_3:
    swift_release();

    return;
  }
  uint64_t v41 = v4 + 17;
  char v42 = v4 + 16;
  uint64_t v6 = v4 + 18;
  BOOL v51 = v4 + 19;
  uint64_t v38 = v3;
  uint64_t v39 = (uint64_t)(v4 + 11);
  char v7 = v4 + 6;
  uint64_t v37 = v4;
  uint64_t v40 = v4 + 6;
  while (1)
  {
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    char v8 = v51;
    swift_beginAccess();
    uint64_t v9 = (uint64_t)objc_msgSend(v3, sel_decompressStreamWithAvailableIn_nextIn_availableOut_nextOut_, v42, v41, v6, v8);
    swift_endAccess();
    swift_endAccess();
    swift_endAccess();
    swift_endAccess();
    if (v9 != 1 && v9 != 3)
    {
      if (v9 != 2)
      {
        uint64_t v43 = 0;
        uint64_t v44 = 0xE000000000000000;
        sub_19F1DCCEC();
        sub_19F1DBEFC();
        uint64_t v47 = v9;
        type metadata accessor for JEBrotliDecoderResult(0);
        sub_19F1DCF4C();
        sub_19F1DBEFC();
        uint64_t v47 = v9;
        sub_19F1DD2EC();
        sub_19F1DBEFC();
        swift_bridgeObjectRelease();
        sub_19F0E88E4(v43, v44);
        swift_bridgeObjectRelease();
        sub_19EFC616C();
        swift_allocError();
        *uint64_t v32 = 2;
        swift_willThrow();
        goto LABEL_3;
      }
      if (!*v42)
      {
        uint64_t v17 = v4;
        uint64_t v18 = v4[9];
        uint64_t v19 = v4[10];
        __swift_project_boxed_opaque_existential_1(v7, v18);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19))
        {
          uint64_t v20 = v7;
          uint64_t v21 = v17[9];
          uint64_t v22 = v17[10];
          __swift_project_boxed_opaque_existential_1(v20, v21);
          uint64_t v23 = v17[4];
          uint64_t v24 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 32))(v23, v17[2], v21, v22);
          v17[16] = v24;
          v17[17] = v23;
          uint64_t v25 = v17[20];
          BOOL v26 = __OFADD__(v25, v24);
          uint64_t v27 = v25 + v24;
          if (v26) {
            goto LABEL_31;
          }
          uint64_t v4 = v17;
          v17[20] = v27;
          char v7 = v40;
        }
        else
        {
          uint64_t v24 = *v42;
          uint64_t v4 = v17;
        }
        if (!v24)
        {
          uint64_t v43 = 0;
          uint64_t v44 = 0xE000000000000000;
          sub_19F1DCCEC();
          sub_19F1DBEFC();
          uint64_t v47 = v4[20];
          sub_19F1DD2EC();
          sub_19F1DBEFC();
          swift_bridgeObjectRelease();
          sub_19F1DBEFC();
          uint64_t v33 = v4[9];
          uint64_t v34 = v4[10];
          __swift_project_boxed_opaque_existential_1(v7, v33);
          uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
          char v48 = v35 & 1;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F920);
          sub_19F1DBE0C();
          sub_19F1DBEFC();
          swift_bridgeObjectRelease();
          sub_19F1DBEFC();
          sub_19F0E88E4(v43, v44);
          swift_bridgeObjectRelease();
          sub_19EFC616C();
          swift_allocError();
          *char v36 = 2;
          swift_willThrow();
          goto LABEL_3;
        }
      }
LABEL_24:
      if (*v6) {
        goto LABEL_6;
      }
LABEL_25:
      uint64_t v28 = v4[3];
      if (v28 >= 1)
      {
        sub_19EEC4154(v39, (uint64_t)&v43);
        uint64_t v29 = v45;
        uint64_t v30 = v46;
        __swift_project_boxed_opaque_existential_1(&v43, v45);
        uint64_t v31 = v4[5];
        if (!v31) {
          goto LABEL_33;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 16))(v31, v28, v29, v30);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
        *uint64_t v6 = v28;
        void *v51 = v31;
        uint64_t v4 = v37;
        uint64_t v3 = v38;
        char v7 = v40;
      }
      goto LABEL_6;
    }
    uint64_t v11 = v4[3];
    uint64_t v12 = v4[18];
    uint64_t v13 = v11 - v12;
    if (__OFSUB__(v11, v12)) {
      break;
    }
    if (v13 < 1) {
      goto LABEL_24;
    }
    sub_19EEC4154(v39, (uint64_t)&v43);
    uint64_t v15 = v45;
    uint64_t v14 = v46;
    __swift_project_boxed_opaque_existential_1(&v43, v45);
    uint64_t v16 = v4[5];
    if (!v16) {
      goto LABEL_32;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16))(v16, v13, v15, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
    *uint64_t v6 = v11;
    void *v51 = v16;
    uint64_t v4 = v37;
    uint64_t v3 = v38;
    char v7 = v40;
    if (!v11) {
      goto LABEL_25;
    }
LABEL_6:
    if ((v9 & 0xFFFFFFFFFFFFFFFELL) != 2) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

ValueMetadata *type metadata accessor for BrotliPackageCompressor()
{
  return &type metadata for BrotliPackageCompressor;
}

uint64_t CustomIntentDispatcher.dispatcher<A, B>(for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[4] = a7;
  v8[5] = v7;
  v8[2] = a1;
  v8[3] = a4;
  return MEMORY[0x1F4188298](sub_19EFC6840, 0, 0);
}

uint64_t sub_19EFC6840()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = (uint64_t *)v0[2];
  uint64_t v4 = v0[3];
  v3[3] = v4;
  v3[4] = *(void *)(v1 + 8);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v3);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(boxed_opaque_existential_2Tm, v2, v4);
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t CustomIntentDispatcher.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[13] = a7;
  v8[14] = v7;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[15] = AssociatedTypeWitness;
  uint64_t v10 = sub_19F1DCAAC();
  v8[16] = v10;
  v8[17] = *(void *)(v10 - 8);
  v8[18] = swift_task_alloc();
  v8[19] = *(void *)(AssociatedTypeWitness - 8);
  v8[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19EFC6A30, 0, 0);
}

uint64_t sub_19EFC6A30()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 120);
  (*(void (**)(void))(*(void *)(v0 + 104) + 40))(*(void *)(v0 + 88));
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v4);
  static StaticIntent._unwrapData<A>(of:)(v3, v4, v5, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 72);
    long long v18 = *(_OWORD *)(v0 + 96);
    long long v19 = *(_OWORD *)(v0 + 80);
    (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
    uint64_t v8 = swift_task_alloc();
    *(void *)(v0 + 168) = v8;
    *(_OWORD *)(v8 + 16) = v19;
    *(_OWORD *)(v8 + 32) = v18;
    *(void *)(v8 + 48) = v0 + 16;
    *(void *)(v8 + 56) = v6;
    *(void *)(v8 + 64) = v7;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_19EFC6C64;
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 56);
    return sub_19F12F6F4(v11, (uint64_t)&unk_1E9472140, v8, v10);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 160);
    uint64_t v14 = *(void *)(v0 + 120);
    uint64_t v15 = *(void *)(v0 + 56);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 152) + 32);
    v16(v13, *(void *)(v0 + 144), v14);
    v16(v15, v13, v14);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_19EFC6C64()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19EFC6DFC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_19EFC6D80;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19EFC6D80()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EFC6DFC()
{
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EFC6E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return MEMORY[0x1F4188298](sub_19EFC6EB4, 0, 0);
}

uint64_t sub_19EFC6EB4()
{
  uint64_t v13 = v0[8];
  uint64_t v1 = (void *)v0[3];
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v1, v3);
  uint64_t v12 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 16) + **(int **)(v13 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *uint64_t v5 = v0;
  v5[1] = sub_19EFC700C;
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  uint64_t v10 = v0[2];
  return v12(v10, v4, v8, AssociatedTypeWitness, v3, v2, v9, v7);
}

uint64_t sub_19EFC700C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19EFC7100(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 32);
  long long v6 = *(_OWORD *)(v1 + 48);
  long long v8 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_19EE17780;
  *(_OWORD *)(v5 + 48) = v8;
  *(_OWORD *)(v5 + 64) = v7;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_19EFC6EB4, 0, 0);
}

uint64_t sub_19EFC71CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v11;
  *uint64_t v11 = v8;
  v11[5] = v7;
  void v11[3] = a7;
  void v11[4] = &protocol witness table for _IntentReplayDispatcher;
  v11[1] = sub_19EEB8A6C;
  v11[2] = a1;
  return MEMORY[0x1F4188298](sub_19EFC6840, 0, 0);
}

uint64_t sub_19EFC7290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_19EE17780;
  return CustomIntentDispatcher.dispatch<A>(_:objectGraph:)(a1, a2, a3, a6, a4, (uint64_t)&protocol witness table for _IntentReplayDispatcher, a5);
}

uint64_t dispatch thunk of CustomIntentDispatcher.perform<A, B>(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a8 + 16) + **(int **)(a8 + 16));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_19EEB8A6C;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t BaseObjectGraph.inject<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19EEB8A6C;
  return BaseObjectGraph._inject<A>(_:)(a1, a2, a3, a4);
}

double JSError.init(badValue:expected:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  id v4 = objc_msgSend(a1, sel_description);
  sub_19F1DBD7C();

  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();

  *(void *)a2 = 0x6465746365707845;
  *(void *)(a2 + 8) = 0xEA00000000006020;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  double result = 0.0;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(void *)(a2 + 96) = 0;
  return result;
}

uint64_t sub_19EFC76B4(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_19F1DCE2C();
      }
      uint64_t v7 = (uint64_t)sub_19EF83214(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        long long v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_19EFCB1B0(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t JSError.init(message:line:column:sourceURL:constructorName:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = 0;
  *(void *)(a9 + 72) = 0;
  *(void *)(a9 + 80) = 0;
  *(void *)(a9 + 88) = a10;
  *(void *)(a9 + 96) = a11;
  return result;
}

void sub_19EFC7938(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  if (swift_dynamicCast())
  {

    uint64_t v5 = v28;
    uint64_t v6 = v29;
    uint64_t v7 = v30;
    char v8 = v31;
    uint64_t v9 = v32;
    char v10 = v33;
    long long v11 = v34;
    long long v12 = v35;
    long long v13 = v36;
    uint64_t v14 = v37;
  }
  else
  {
    uint64_t v15 = (void *)sub_19F1DB18C();
    id v16 = objc_msgSend(v15, sel_domain);

    uint64_t v17 = sub_19F1DBD7C();
    uint64_t v19 = v18;

    uint64_t v20 = MEMORY[0x1E4FBC868];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_19EFBC1B4(v17, v19, 3, 0xD000000000000017, 0x800000019F26BE00, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    char v22 = (void *)sub_19F1DB18C();
    id v23 = objc_msgSend(v22, sel_code);

    char v24 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EFBC1B4((uint64_t)v23, 0, 2, 0xD000000000000015, 0x800000019F26BE20, v24);
    *(void *)&long long v25 = v20;
    long long v27 = v25;
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    uint64_t v5 = sub_19F1DD6AC();
    uint64_t v6 = v26;

    long long v12 = v27;
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    uint64_t v14 = 0;
    long long v11 = 0uLL;
    char v8 = 1;
    long long v13 = 0uLL;
    char v10 = 1;
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(unsigned char *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v9;
  *(unsigned char *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 64) = v12;
  *(_OWORD *)(a2 + 80) = v13;
  *(void *)(a2 + 96) = v14;
}

void JSError.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = (void *)sub_19F1DBD4C();
  id v5 = objc_msgSend(a1, sel_valueForProperty_, v4);

  if (!v5)
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_22;
  }
  sub_19EE7C060();

  sub_19EEC3ED8((uint64_t)&v42, (uint64_t)&v39, &qword_1E946F7B0);
  if (*((void *)&v40 + 1) == 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    v36[0] = v39;
    v36[1] = v40;
    uint64_t v37 = v41;
    sub_19EEC355C((uint64_t)v36, (uint64_t)v35);
    sub_19EEBF898(MEMORY[0x1E4FBC860]);
    ScalarDictionary.init(deserializing:using:)((uint64_t)v35, &v38);
    uint64_t v6 = v38;
    sub_19EEC3418((uint64_t)v36);
  }
  sub_19EEBD664((uint64_t)&v42, &qword_1E946F7B0);
  uint64_t v7 = (void *)sub_19F1DBD4C();
  id v8 = objc_msgSend(a1, sel_valueForProperty_, v7);

  if (!v8) {
    goto LABEL_20;
  }
  if (objc_msgSend(v8, sel_isString))
  {
    uint64_t v9 = objc_msgSend(v8, sel_toString);
    if (v9)
    {
      uint64_t v10 = v6;
      uint64_t v11 = sub_19F1DBD7C();
      unint64_t v13 = v12;

      uint64_t v9 = sub_19EFC8F74(v11, v13);
      swift_bridgeObjectRelease();
      uint64_t v6 = v10;
    }
    else
    {
    }
  }
  else
  {

    uint64_t v9 = 0;
  }
  id v14 = objc_msgSend(a1, sel_toString);
  if (!v14) {
    goto LABEL_21;
  }
  uint64_t v15 = v14;
  uint64_t v34 = v6;
  uint64_t v32 = sub_19F1DBD7C();
  uint64_t v33 = v16;

  uint64_t v17 = (void *)sub_19F1DBD4C();
  id v18 = objc_msgSend(a1, sel_valueForProperty_, v17);

  if (!v18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v19 = a1;
  signed int v20 = objc_msgSend(v18, sel_toInt32);

  uint64_t v21 = (void *)sub_19F1DBD4C();
  id v22 = objc_msgSend(a1, sel_valueForProperty_, v21);

  if (!v22)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  signed int v23 = objc_msgSend(v22, sel_toInt32);

  char v24 = (void *)sub_19F1DBD4C();
  id v25 = objc_msgSend(a1, (SEL)&selRef_date + 6, v24);

  if (!v25)
  {
LABEL_24:
    __break(1u);
    return;
  }
  id v26 = objc_msgSend(v25, (SEL)&selRef_initWithContainerID_bag_ + 1);

  if (v26)
  {
    uint64_t v27 = sub_19F1DBD7C();
    uint64_t v29 = v28;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v29 = 0;
  }
  sub_19F18E228();
  *(void *)a2 = v32;
  *(void *)(a2 + 8) = v33;
  *(void *)(a2 + 16) = v20;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v23;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v27;
  *(void *)(a2 + 56) = v29;
  *(void *)(a2 + 64) = v34;
  *(void *)(a2 + 72) = v9;
  *(void *)(a2 + 80) = v19;
  *(void *)(a2 + 88) = v30;
  *(void *)(a2 + 96) = v31;
}

id sub_19EFC8240()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  id result = sub_19EF7FBBC(0xD00000000000004ALL, 0x800000019F26BE90, 0);
  qword_1E946ECC8 = (uint64_t)result;
  return result;
}

unint64_t static JSError._noCodeSpecified.getter()
{
  return 0x8000000000000000;
}

unint64_t static JSError._domainUserInfoKey.getter()
{
  return 0xD000000000000017;
}

unint64_t static JSError._codeUserInfoKey.getter()
{
  return 0xD000000000000015;
}

uint64_t JSError.init(message:line:column:sourceURL:constructorName:userInfo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v12 = *a12;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = v12;
  *(void *)(a9 + 72) = 0;
  *(void *)(a9 + 80) = 0;
  *(void *)(a9 + 88) = a10;
  *(void *)(a9 + 96) = a11;
  return result;
}

uint64_t JSError.message.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSError.line.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t JSError.column.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t JSError.sourceURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSError.userInfo.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t JSError.constructorName.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSError.errorDescription.getter()
{
  return JSError.description.getter();
}

uint64_t JSError.description.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)v0;
  if (!*(void *)(v0 + 56))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v5 + 56))(v3, 1, 1, v4, v6);
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  char v11 = *(unsigned char *)(v0 + 24);
  uint64_t v14 = *(void *)(v0 + 32);
  int v15 = *(unsigned __int8 *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_19F1DB2FC();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_6:
    sub_19EEBD664((uint64_t)v3, (uint64_t *)&unk_1EB392E50);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    uint64_t v16 = v10;
    sub_19F1DD2EC();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = v14;
      sub_19F1DD2EC();
      uint64_t v16 = sub_19F1DB24C();
      uint64_t v17 = v13;
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      swift_bridgeObjectRetain();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      uint64_t v9 = v16;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return v9;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
  }
LABEL_7:
  swift_bridgeObjectRetain();
  return v9;
}

unint64_t static JSError.errorDomain.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t JSError.errorCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  if (!v1 || !*(void *)(v1 + 16)) {
    return 0x8000000000000000;
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_19EEBD400(0xD000000000000015, 0x800000019F26BE20);
  if ((v3 & 1) != 0 && (uint64_t v4 = *(void *)(v1 + 56) + 24 * v2, *(unsigned char *)(v4 + 16) == 2)) {
    unint64_t v5 = *(void *)v4;
  }
  else {
    unint64_t v5 = 0x8000000000000000;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t JSError.errorUserInfo.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v1 - 8);
  char v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  unint64_t v5 = v0[1];
  double v6 = v0[6];
  uint64_t v7 = v0[7];
  id v8 = v0[8];
  uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v77 = MEMORY[0x1E4FBC868];
  if (!v8) {
    goto LABEL_40;
  }
  uint64_t v65 = v4;
  uint64_t v10 = *((void *)v8 + 2);
  swift_bridgeObjectRetain();
  v62 = v6;
  int64_t v63 = v3;
  uint64_t v61 = v7;
  if (!v10) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_19EEBD400(0xD000000000000017, 0x800000019F26BE00);
  if ((v12 & 1) != 0 && (uint64_t v13 = *((void *)v8 + 7) + 24 * v11, *(unsigned char *)(v13 + 16) == 3))
  {
    uint64_t v15 = *(void *)v13;
    uint64_t v14 = *(void *)(v13 + 8);
    sub_19EECA824(*(void *)v13, v14, 3);
    swift_bridgeObjectRelease();
    if (*((void *)v8 + 2))
    {
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_19EEBD400(0xD000000000000015, 0x800000019F26BE20);
      if (v17)
      {
        uint64_t v18 = *((void *)v8 + 7) + 24 * v16;
        if (*(unsigned char *)(v18 + 16) == 2)
        {
          uint64_t v60 = *(void *)v18;
          swift_bridgeObjectRelease();
          uint64_t v64 = sub_19F1DBD7C();
          uint64_t v20 = v19;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
          *(void *)(inited + 32) = sub_19F1DBD7C();
          *(void *)(inited + 40) = v22;
          *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
          *(void *)(inited + 48) = v65;
          *(void *)(inited + 56) = v5;
          swift_bridgeObjectRetain();
          sub_19EEBF898(inited);
          id v23 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
          char v24 = (void *)sub_19F1DBD4C();
          sub_19EECA83C(v15, v14, 3);
          id v25 = (void *)sub_19F1DBB1C();
          swift_bridgeObjectRelease();
          id v26 = objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, v60, v25);

          uint64_t v73 = sub_19EEBDC10(0, (unint64_t *)&qword_1E946E668);
          *(void *)&long long v71 = v26;
          sub_19EEBDC00(&v71, &v69);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v68[0] = v9;
          unint64_t v77 = 0x8000000000000000;
          sub_19EE7DA20(&v69, v64, v20, isUniquelyReferenced_nonNull_native);
          unint64_t v77 = *(void *)&v68[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = (void *)v77;
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
    }
    sub_19EECA83C(v15, v14, 3);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_12:
  uint64_t v28 = -1 << v8[32];
  uint64_t v29 = ~v28;
  uint64_t v30 = *((void *)v8 + 8);
  uint64_t v31 = -v28;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  else {
    uint64_t v32 = -1;
  }
  *(void *)&long long v71 = v8;
  *((void *)&v71 + 1) = v8 + 64;
  uint64_t v72 = v29;
  uint64_t v73 = 0;
  uint64_t v74 = v32 & v30;
  uint64_t v75 = sub_19EF68C38;
  uint64_t v76 = 0;
  sub_19EFCA48C(v68);
  sub_19EEBDC4C((uint64_t)v68, (uint64_t)&v69, &qword_1EB392770);
  uint64_t v33 = *((void *)&v69 + 1);
  if (!*((void *)&v69 + 1))
  {
LABEL_39:
    unint64_t v77 = (unint64_t)v9;
    sub_19EEBDCB0();
    swift_release();
    char v3 = v63;
    uint64_t v7 = v61;
LABEL_40:
    if (v7)
    {
      uint64_t v51 = sub_19F1DBD7C();
      uint64_t v53 = v52;
      sub_19F1DB2FC();
      uint64_t v54 = sub_19F1DB34C();
      uint64_t v55 = *(void *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v3, 1, v54) == 1)
      {
        sub_19EEBD664((uint64_t)v3, (uint64_t *)&unk_1EB392E50);
        sub_19EF6B168(v51, v53, &v71);
        sub_19EEBD664((uint64_t)&v71, &qword_1EB393260);
      }
      else
      {
        uint64_t v73 = v54;
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v71);
        (*(void (**)(uint64_t *, char *, uint64_t))(v55 + 32))(boxed_opaque_existential_2Tm, v3, v54);
        sub_19EEBDC00(&v71, &v69);
        unint64_t v57 = v77;
        char v58 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v68[0] = v57;
        unint64_t v77 = 0x8000000000000000;
        sub_19EE7DA20(&v69, v51, v53, v58);
        unint64_t v77 = *(void *)&v68[0];
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return v77;
    }
    return (uint64_t)v9;
  }
  uint64_t v65 = "NSUnderlyingErrorDomain";
  uint64_t v64 = 0x800000019F26BE20;
  while (1)
  {
    uint64_t v34 = v69;
    sub_19EEBDC00(&v70, v68);
    if ((v34 != 0xD000000000000017 || v33 != 0x800000019F26BE00)
      && (sub_19F1DD44C() & 1) == 0
      && (v34 != 0xD000000000000015 || v33 != v64)
      && (sub_19F1DD44C() & 1) == 0)
    {
      break;
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
LABEL_24:
    sub_19EFCA48C(v68);
    sub_19EEBDC4C((uint64_t)v68, (uint64_t)&v69, &qword_1EB392770);
    uint64_t v33 = *((void *)&v69 + 1);
    if (!*((void *)&v69 + 1)) {
      goto LABEL_39;
    }
  }
  sub_19EEBDBA4((uint64_t)v68, (uint64_t)v67);
  long long v35 = v9;
  char v36 = swift_isUniquelyReferenced_nonNull_native();
  v66 = v9;
  unint64_t v38 = sub_19EEBD400(v34, v33);
  uint64_t v39 = v9[2];
  BOOL v40 = (v37 & 1) == 0;
  uint64_t v41 = v39 + v40;
  if (!__OFADD__(v39, v40))
  {
    char v42 = v37;
    if (v35[3] < v41)
    {
      sub_19EEBD714(v41, v36);
      unint64_t v43 = sub_19EEBD400(v34, v33);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_48;
      }
      unint64_t v38 = v43;
      uint64_t v45 = v66;
      if ((v42 & 1) == 0) {
        goto LABEL_36;
      }
LABEL_34:
      uint64_t v9 = v45;
      uint64_t v46 = (_OWORD *)(v45[7] + 32 * v38);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
      sub_19EEBDC00(v67, v46);
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
      goto LABEL_24;
    }
    if (v36)
    {
      uint64_t v45 = v66;
      if (v37) {
        goto LABEL_34;
      }
    }
    else
    {
      sub_19EE7DBE0();
      uint64_t v45 = v66;
      if (v42) {
        goto LABEL_34;
      }
    }
LABEL_36:
    v45[(v38 >> 6) + 8] |= 1 << v38;
    uint64_t v47 = (uint64_t *)(v45[6] + 16 * v38);
    *uint64_t v47 = v34;
    v47[1] = v33;
    sub_19EEBDC00(v67, (_OWORD *)(v45[7] + 32 * v38));
    uint64_t v48 = v45[2];
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49) {
      goto LABEL_47;
    }
    uint64_t v9 = v45;
    v45[2] = v50;
    swift_bridgeObjectRetain();
    goto LABEL_38;
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

void *sub_19EFC8F74(uint64_t a1, unint64_t a2)
{
  v28[0] = 10;
  v28[1] = 0xE100000000000000;
  uint64_t v27 = v28;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_19EEA0B44(0x7FFFFFFFFFFFFFFFLL, 1, sub_19EEA0FE8, (uint64_t)v26, a1, a2);
  uint64_t v6 = sub_19EEA1264(v5);
  uint64_t v7 = v2;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v6 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v6 + 40);
    id v25 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v11 = *(v9 - 1);
      uint64_t v12 = *v9;
      swift_bridgeObjectRetain();
      sub_19EFC95AC(v8, v11, v12, (uint64_t)v29);
      if (v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return v25;
      }
      uint64_t v14 = v29[0];
      uint64_t v13 = v29[1];
      uint64_t v15 = v29[3];
      uint64_t v16 = v29[4];
      uint64_t v21 = v29[2];
      char v22 = v30;
      uint64_t v24 = v31;
      char v23 = v32;
      swift_bridgeObjectRelease();
      sub_19EEBDC4C((uint64_t)v29, (uint64_t)v33, (uint64_t *)&unk_1E946EBF0);
      if (v34 != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v25 = sub_19F09DDC8(0, v25[2] + 1, 1, v25);
        }
        unint64_t v18 = v25[2];
        unint64_t v17 = v25[3];
        if (v18 >= v17 >> 1) {
          id v25 = sub_19F09DDC8((void *)(v17 > 1), v18 + 1, 1, v25);
        }
        _OWORD v25[2] = v18 + 1;
        uint64_t v10 = &v25[8 * v18];
        v10[4] = v14;
        v10[5] = v13;
        v10[6] = v21;
        v10[7] = v15;
        v10[8] = v16;
        *((unsigned char *)v10 + 72) = v22 & 1;
        v10[10] = v24;
        *((unsigned char *)v10 + 88) = v23 & 1;
      }
      ++v8;
      v9 += 2;
    }
    while (v20 != v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v25 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v25;
}

void JSError.jsRepresentation(in:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  char v6 = *((unsigned char *)v2 + 24);
  uint64_t v7 = v2[4];
  char v8 = *((unsigned char *)v2 + 40);
  uint64_t v10 = v2[6];
  uint64_t v9 = v2[7];
  uint64_t v11 = v2[12];
  uint64_t v37 = *v2;
  uint64_t v38 = v4;
  uint64_t v39 = v5;
  LOBYTE(v40) = v6;
  uint64_t v41 = v7;
  char v42 = v8;
  uint64_t v33 = v10;
  uint64_t v43 = v10;
  uint64_t v44 = v9;
  uint64_t v35 = v9;
  long long v12 = *((_OWORD *)v2 + 5);
  long long v34 = *((_OWORD *)v2 + 4);
  long long v45 = v34;
  long long v46 = v12;
  uint64_t v47 = v11;
  sub_19EF600C0();
  sub_19F1DD6AC();
  id v13 = a1;
  uint64_t v14 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_valueWithNewErrorFromMessage_inContext_, v14, v13);

  if (!v16) {
    goto LABEL_26;
  }
  if ((v6 & 1) == 0)
  {
    if (v5 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v5 <= 0x7FFFFFFF)
    {
      id v17 = objc_msgSend(v15, sel_valueWithInt32_inContext_, v5, v13);
      if (!v17)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      id v18 = v17;
      uint64_t v19 = (void *)sub_19F1DBD4C();
      objc_msgSend(v16, sel_setValue_forProperty_, v18, v19);

      goto LABEL_7;
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
LABEL_7:
  if (v8) {
    goto LABEL_12;
  }
  if (v7 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_24;
  }
  if (v7 > 0x7FFFFFFF)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v20 = objc_msgSend(v15, sel_valueWithInt32_inContext_, v7, v13);
  if (!v20)
  {
LABEL_29:
    __break(1u);
    return;
  }
  id v21 = v20;
  char v22 = (void *)sub_19F1DBD4C();
  objc_msgSend(v16, sel_setValue_forProperty_, v21, v22);

LABEL_12:
  if (v35)
  {
    uint64_t v37 = v33;
    uint64_t v38 = v35;
    id v23 = v13;
    swift_bridgeObjectRetain();
    id v24 = objc_msgSend(v15, sel_valueWithObject_inContext_, sub_19F1DD62C(), v23);
    swift_unknownObjectRelease();

    if (v24)
    {
      id v25 = v24;
      id v26 = (void *)sub_19F1DBD4C();
      objc_msgSend(v16, sel_setValue_forProperty_, v25, v26);

      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_15:
  if ((void)v34)
  {
    uint64_t v48 = v34;
    ScalarDictionary.jsRepresentation(in:)(v13, &v37);
    if (v36)
    {

      return;
    }
    uint64_t v27 = v40;
    uint64_t v28 = v41;
    __swift_project_boxed_opaque_existential_1(&v37, v40);
    uint64_t v29 = (void *)(*(uint64_t (**)(id, uint64_t, uint64_t))(v28 + 16))(v13, v27, v28);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
    id v30 = v29;
    uint64_t v31 = (void *)sub_19F1DBD4C();
    objc_msgSend(v16, sel_setValue_forProperty_, v30, v31);
  }
  a2[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1EB392790);
  a2[4] = &protocol witness table for JSValue;
  *a2 = v16;
}

void sub_19EFC95AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_19EFCB8C0(a1, a2, a3, (uint64_t)v6);
  if (!v4) {
    sub_19EEBDC4C((uint64_t)v6, a4, (uint64_t *)&unk_1E946EBF0);
  }
}

uint64_t sub_19EFC95FC()
{
  return JSError.description.getter();
}

unint64_t sub_19EFC966C()
{
  return 0xD00000000000001ALL;
}

void sub_19EFC9690(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_19EFC96B8(void *a1@<X0>, void *a2@<X8>)
{
}

JSValue __swiftcall JSError.makeValue(in:)(JSContext in)
{
  return (JSValue)sub_19EFC9878(in.super.isa);
}

uint64_t sub_19EFC97FC(uint64_t a1)
{
  unint64_t v2 = sub_19EFCB15C();
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_19EFC9838(uint64_t a1)
{
  unint64_t v2 = sub_19EFCB15C();
  return MEMORY[0x1F40E6E10](a1, v2);
}

long long *sub_19EFC9878(void *a1)
{
  JSError.jsRepresentation(in:)(a1, &v23);
  if (v1)
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
    id v7 = v5;
    char v22 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v8._uint64_t countAndFlagsBits = 0x69747265766E6F43;
    v8._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    v21[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472168);
    v21[0] = &type metadata for JSError;
    sub_19EEC3ED8((uint64_t)v21, (uint64_t)v20, &qword_1EB393260);
    long long v18 = 0u;
    long long v19 = 0u;
    sub_19EEC3E70((uint64_t)v20, (uint64_t)&v18);
    LOBYTE(v25) = 0;
    long long v23 = v18;
    long long v24 = v19;
    uint64_t v9 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_19EEC3F3C(0, v9[2] + 1, 1, v9);
    }
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      uint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
    }
    long long v9[2] = v11 + 1;
    long long v12 = &v9[5 * v11];
    long long v13 = v23;
    long long v14 = v24;
    *((unsigned char *)v12 + 64) = v25;
    *((_OWORD *)v12 + 2) = v13;
    *((_OWORD *)v12 + 3) = v14;
    char v22 = v9;
    sub_19EEBD664((uint64_t)v21, &qword_1EB393260);
    v15._object = (void *)0x800000019F269F20;
    v15._uint64_t countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    *(void *)(v6 + 32) = v22;
    *(void *)&long long v23 = v7;
    LOBYTE(v18) = 1;
    id v17 = &v23;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v18);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    uint64_t v3 = *((void *)&v24 + 1);
    uint64_t v4 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    id v17 = (long long *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
  }
  return v17;
}

uint64_t sub_19EFC9B08()
{
  void (*v12)(uint64_t *__return_ptr, void *);
  long long v13;
  uint64_t result;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  void v22[2];
  long long v23;

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = 16 * v6;
    uint64_t v9 = *(void *)(v1 + 48);
    uint64_t v8 = *(void *)(v1 + 56);
    unint64_t v10 = (void *)(v9 + v7);
    uint64_t v11 = v10[1];
    long long v12 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v22[0] = *v10;
    v22[1] = v11;
    long long v13 = *(_OWORD *)(v8 + v7);
    v0[3] = v4;
    v0[4] = v5;
    long long v23 = v13;
    swift_bridgeObjectRetain();
    v12(&v21, v22);
    swift_bridgeObjectRelease();
    return v21;
  }
  Swift::String v15 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    id v16 = (unint64_t)(v0[2] + 64) >> 6;
    if (v15 < v16)
    {
      id v17 = v0[1];
      long long v18 = *(void *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_7:
        uint64_t v5 = (v18 - 1) & v18;
        unint64_t v6 = __clz(__rbit64(v18)) + (v15 << 6);
        int64_t v4 = v15;
        goto LABEL_3;
      }
      long long v19 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v16)
      {
        long long v18 = *(void *)(v17 + 8 * v19);
        if (v18)
        {
LABEL_10:
          Swift::String v15 = v19;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v16)
        {
          long long v18 = *(void *)(v17 + 8 * (v3 + 3));
          if (v18)
          {
            Swift::String v15 = v3 + 3;
            goto LABEL_7;
          }
          long long v19 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v16)
          {
            long long v18 = *(void *)(v17 + 8 * v19);
            if (v18) {
              goto LABEL_10;
            }
            Swift::String v15 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v16)
            {
              long long v18 = *(void *)(v17 + 8 * v15);
              if (v18) {
                goto LABEL_7;
              }
              int64_t v4 = v16 - 1;
              id v20 = v3 + 6;
              while (v16 != v20)
              {
                long long v18 = *(void *)(v17 + 8 * v20++);
                if (v18)
                {
                  Swift::String v15 = v20 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

void sub_19EFC9C9C(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D478);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D480);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.n128_f64[0] = MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v37 - v11;
  uint64_t v13 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v16 = v1[2];
  int64_t v15 = v1[3];
  int64_t v17 = v15;
  unint64_t v18 = v1[4];
  uint64_t v37 = v5;
  uint64_t v40 = v16;
  if (v18)
  {
    uint64_t v38 = v8;
    uint64_t v19 = v14;
    uint64_t v20 = (v18 - 1) & v18;
    unint64_t v21 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    uint64_t v22 = *(void *)(v13 + 48);
    uint64_t v23 = v13;
    uint64_t v24 = sub_19F1DCF8C();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v12, v22 + *(void *)(*(void *)(v24 - 8) + 72) * v21, v24);
    sub_19EEBDBA4(*(void *)(v23 + 56) + 32 * v21, (uint64_t)&v12[*(int *)(v2 + 48)]);
    uint64_t v25 = v3;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    uint64_t v14 = v19;
    uint64_t v8 = v38;
    goto LABEL_23;
  }
  int64_t v26 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    return;
  }
  int64_t v27 = (unint64_t)(v16 + 64) >> 6;
  if (v26 < v27)
  {
    unint64_t v28 = *(void *)(v14 + 8 * v26);
    if (v28)
    {
LABEL_7:
      uint64_t v38 = v8;
      uint64_t v19 = v14;
      uint64_t v20 = (v28 - 1) & v28;
      unint64_t v21 = __clz(__rbit64(v28)) + (v26 << 6);
      int64_t v17 = v26;
      goto LABEL_3;
    }
    int64_t v29 = v15 + 2;
    int64_t v17 = v15 + 1;
    if (v15 + 2 < v27)
    {
      unint64_t v28 = *(void *)(v14 + 8 * v29);
      if (v28)
      {
LABEL_10:
        int64_t v26 = v29;
        goto LABEL_7;
      }
      int64_t v17 = v15 + 2;
      if (v15 + 3 < v27)
      {
        unint64_t v28 = *(void *)(v14 + 8 * (v15 + 3));
        if (v28)
        {
          int64_t v26 = v15 + 3;
          goto LABEL_7;
        }
        int64_t v29 = v15 + 4;
        int64_t v17 = v15 + 3;
        if (v15 + 4 < v27)
        {
          unint64_t v28 = *(void *)(v14 + 8 * v29);
          if (v28) {
            goto LABEL_10;
          }
          int64_t v26 = v15 + 5;
          int64_t v17 = v15 + 4;
          if (v15 + 5 < v27)
          {
            unint64_t v28 = *(void *)(v14 + 8 * v26);
            if (v28) {
              goto LABEL_7;
            }
            int64_t v17 = v27 - 1;
            int64_t v30 = v15 + 6;
            while (v27 != v30)
            {
              unint64_t v28 = *(void *)(v14 + 8 * v30++);
              if (v28)
              {
                int64_t v26 = v30 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v25 = v3;
  uint64_t v23 = v13;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56))(v12, 1, 1, v2, v10);
  uint64_t v20 = 0;
LABEL_23:
  *uint64_t v1 = v23;
  v1[1] = v14;
  v1[2] = v40;
  v1[3] = v17;
  v1[4] = v20;
  uint64_t v31 = (void (*)(uint64_t))v1[5];
  sub_19EEBDC4C((uint64_t)v12, (uint64_t)v8, &qword_1E946D480);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v8, 1, v2) == 1)
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472170);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v39, 1, 1, v32);
  }
  else
  {
    uint64_t v33 = (uint64_t)v8;
    uint64_t v34 = (uint64_t)v37;
    sub_19EEBDC4C(v33, (uint64_t)v37, &qword_1E946D478);
    uint64_t v35 = v39;
    v31(v34);
    sub_19EEBD664(v34, &qword_1E946D478);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472170);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  }
}

uint64_t sub_19EFCA0A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    sub_19EE77E34(*(void *)(v3 + 48) + 40 * v10, (uint64_t)v25);
    sub_19EEBDBA4(*(void *)(v3 + 56) + 32 * v10, (uint64_t)&v25[2] + 8);
    goto LABEL_23;
  }
  int64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v12 = (unint64_t)(v6 + 64) >> 6;
  if (v11 < v12)
  {
    unint64_t v13 = *(void *)(v4 + 8 * v11);
    if (v13)
    {
LABEL_7:
      uint64_t v9 = (v13 - 1) & v13;
      unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
      int64_t v7 = v11;
      goto LABEL_3;
    }
    int64_t v14 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v12)
    {
      unint64_t v13 = *(void *)(v4 + 8 * v14);
      if (v13)
      {
LABEL_10:
        int64_t v11 = v14;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v12)
      {
        unint64_t v13 = *(void *)(v4 + 8 * (v5 + 3));
        if (v13)
        {
          int64_t v11 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v14 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v12)
        {
          unint64_t v13 = *(void *)(v4 + 8 * v14);
          if (v13) {
            goto LABEL_10;
          }
          int64_t v11 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v12)
          {
            unint64_t v13 = *(void *)(v4 + 8 * v11);
            if (v13) {
              goto LABEL_7;
            }
            int64_t v7 = v12 - 1;
            int64_t v15 = v5 + 6;
            while (v12 != v15)
            {
              unint64_t v13 = *(void *)(v4 + 8 * v15++);
              if (v13)
              {
                int64_t v11 = v15 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v16 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_19EEBDC4C((uint64_t)v25, (uint64_t)&v20, (uint64_t *)&unk_1E946FBE8);
  if (*((void *)&v21 + 1))
  {
    v18[2] = v22;
    void v18[3] = v23;
    uint64_t v19 = v24;
    v18[0] = v20;
    v18[1] = v21;
    v16(v18);
    return sub_19EEBD664((uint64_t)v18, &qword_1EB391080);
  }
  else
  {
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void sub_19EFCA2A4(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v17 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return;
    }
    int64_t v18 = (unint64_t)(v1[2] + 64) >> 6;
    if (v17 < v18)
    {
      uint64_t v19 = v1[1];
      unint64_t v20 = *(void *)(v19 + 8 * v17);
      if (v20)
      {
LABEL_9:
        uint64_t v7 = (v20 - 1) & v20;
        unint64_t v8 = __clz(__rbit64(v20)) + (v17 << 6);
        int64_t v6 = v17;
        goto LABEL_3;
      }
      int64_t v21 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v18)
      {
        unint64_t v20 = *(void *)(v19 + 8 * v21);
        if (v20)
        {
LABEL_12:
          int64_t v17 = v21;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v18)
        {
          unint64_t v20 = *(void *)(v19 + 8 * (v5 + 3));
          if (v20)
          {
            int64_t v17 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v21 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v18)
          {
            unint64_t v20 = *(void *)(v19 + 8 * v21);
            if (v20) {
              goto LABEL_12;
            }
            int64_t v17 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v18)
            {
              unint64_t v20 = *(void *)(v19 + 8 * v17);
              if (v20) {
                goto LABEL_9;
              }
              int64_t v6 = v18 - 1;
              int64_t v22 = v5 + 6;
              while (v18 != v22)
              {
                unint64_t v20 = *(void *)(v19 + 8 * v22++);
                if (v20)
                {
                  int64_t v17 = v22 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(unsigned char *)(a1 + 32) = 0;
    return;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  uint64_t v9 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = *(void *)(v3 + 56) + 24 * v8;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  char v15 = *(unsigned char *)(v12 + 16);
  v1[3] = v6;
  v1[4] = v7;
  uint64_t v16 = (void (*)(void *))v1[5];
  v23[0] = v10;
  v23[1] = v11;
  _OWORD v23[2] = v13;
  void v23[3] = v14;
  char v24 = v15;
  swift_bridgeObjectRetain();
  sub_19EECA824(v13, v14, v15);
  v16(v23);
  swift_bridgeObjectRelease();
  sub_19EECA83C(v13, v14, v15);
}

void sub_19EFCA48C(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v17 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return;
    }
    int64_t v18 = (unint64_t)(v1[2] + 64) >> 6;
    if (v17 < v18)
    {
      uint64_t v19 = v1[1];
      unint64_t v20 = *(void *)(v19 + 8 * v17);
      if (v20)
      {
LABEL_9:
        uint64_t v7 = (v20 - 1) & v20;
        unint64_t v8 = __clz(__rbit64(v20)) + (v17 << 6);
        int64_t v6 = v17;
        goto LABEL_3;
      }
      int64_t v21 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v18)
      {
        unint64_t v20 = *(void *)(v19 + 8 * v21);
        if (v20)
        {
LABEL_12:
          int64_t v17 = v21;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v18)
        {
          unint64_t v20 = *(void *)(v19 + 8 * (v5 + 3));
          if (v20)
          {
            int64_t v17 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v21 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v18)
          {
            unint64_t v20 = *(void *)(v19 + 8 * v21);
            if (v20) {
              goto LABEL_12;
            }
            int64_t v17 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v18)
            {
              unint64_t v20 = *(void *)(v19 + 8 * v17);
              if (v20) {
                goto LABEL_9;
              }
              int64_t v6 = v18 - 1;
              int64_t v22 = v5 + 6;
              while (v18 != v22)
              {
                unint64_t v20 = *(void *)(v19 + 8 * v22++);
                if (v20)
                {
                  int64_t v17 = v22 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *a1 = 0u;
    a1[1] = 0u;
    a1[2] = 0u;
    return;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  uint64_t v9 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = *(void *)(v3 + 56) + 24 * v8;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  char v15 = *(unsigned char *)(v12 + 16);
  v1[3] = v6;
  v1[4] = v7;
  uint64_t v16 = (void (*)(void *))v1[5];
  v23[0] = v10;
  v23[1] = v11;
  _OWORD v23[2] = v13;
  void v23[3] = v14;
  char v24 = v15;
  swift_bridgeObjectRetain();
  sub_19EECA824(v13, v14, v15);
  v16(v23);
  swift_bridgeObjectRelease();
  sub_19EECA83C(v13, v14, v15);
}

uint64_t sub_19EFCA674()
{
  void (*v14)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  void v23[4];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = 16 * v6;
    unint64_t v8 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = (uint64_t *)(*(void *)(v1 + 56) + v7);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v14 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    _OWORD v23[2] = v12;
    void v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  uint64_t v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    int64_t v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      int64_t v18 = v0[1];
      uint64_t v19 = *(void *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        uint64_t v5 = (v19 - 1) & v19;
        unint64_t v6 = __clz(__rbit64(v19)) + (v16 << 6);
        int64_t v4 = v16;
        goto LABEL_3;
      }
      unint64_t v20 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        uint64_t v19 = *(void *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          uint64_t v16 = v20;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          uint64_t v19 = *(void *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            uint64_t v16 = v3 + 3;
            goto LABEL_7;
          }
          unint64_t v20 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            uint64_t v19 = *(void *)(v18 + 8 * v20);
            if (v19) {
              goto LABEL_10;
            }
            uint64_t v16 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              uint64_t v19 = *(void *)(v18 + 8 * v16);
              if (v19) {
                goto LABEL_7;
              }
              int64_t v4 = v17 - 1;
              int64_t v21 = v3 + 6;
              while (v17 != v21)
              {
                uint64_t v19 = *(void *)(v18 + 8 * v21++);
                if (v19)
                {
                  uint64_t v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_19EFCA818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_19EEC4154(*(void *)(v3 + 56) + 40 * v10, (uint64_t)v26);
    *(void *)&long long v25 = v13;
    *((void *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  long long v25 = 0u;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_19EEBDC4C((uint64_t)&v25, (uint64_t)v23, &qword_1E946CE70);
  if (*((void *)&v23[0] + 1))
  {
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    uint64_t v22 = v24;
    v19(v21);
    return sub_19EEBD664((uint64_t)v21, &qword_1E946CE68);
  }
  else
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

void sub_19EFCAA1C()
{
  void (*v10)(uint64_t *__return_ptr, void *);
  id v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  void v19[2];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = 8 * v6;
    unint64_t v8 = *(void **)(*(void *)(v1 + 48) + 8 * v6);
    uint64_t v9 = *(void *)(*(void *)(v1 + 56) + v7);
    v0[3] = v4;
    v0[4] = v5;
    unint64_t v10 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v19[0] = v8;
    v19[1] = v9;
    uint64_t v11 = v8;
    swift_unknownObjectRetain();
    v10(&v18, v19);
    swift_unknownObjectRelease();

    return;
  }
  uint64_t v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = (unint64_t)(v0[2] + 64) >> 6;
    if (v12 < v13)
    {
      int64_t v14 = v0[1];
      int64_t v15 = *(void *)(v14 + 8 * v12);
      if (v15)
      {
LABEL_7:
        uint64_t v5 = (v15 - 1) & v15;
        unint64_t v6 = __clz(__rbit64(v15)) + (v12 << 6);
        int64_t v4 = v12;
        goto LABEL_3;
      }
      unint64_t v16 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v13)
      {
        int64_t v15 = *(void *)(v14 + 8 * v16);
        if (v15)
        {
LABEL_10:
          uint64_t v12 = v16;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v13)
        {
          int64_t v15 = *(void *)(v14 + 8 * (v3 + 3));
          if (v15)
          {
            uint64_t v12 = v3 + 3;
            goto LABEL_7;
          }
          unint64_t v16 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v13)
          {
            int64_t v15 = *(void *)(v14 + 8 * v16);
            if (v15) {
              goto LABEL_10;
            }
            uint64_t v12 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v13)
            {
              int64_t v15 = *(void *)(v14 + 8 * v12);
              if (v15) {
                goto LABEL_7;
              }
              int64_t v4 = v13 - 1;
              int64_t v17 = v3 + 6;
              while (v13 != v17)
              {
                int64_t v15 = *(void *)(v14 + 8 * v17++);
                if (v15)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t destroy for JSError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v7 = *(void **)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 80);
  uint64_t v7 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v7;
  id v8 = v7;

  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for JSError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v5 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSError()
{
  return &type metadata for JSError;
}

uint64_t initializeWithCopy for JSError.StackFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSError.StackFrame(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JSError.StackFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSError.StackFrame(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSError.StackFrame(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSError.StackFrame()
{
  return &type metadata for JSError.StackFrame;
}

unint64_t sub_19EFCB15C()
{
  unint64_t result = qword_1E946ECD0;
  if (!qword_1E946ECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946ECD0);
  }
  return result;
}

unsigned __int8 *sub_19EFCB1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_19F1DBFFC();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_19F02575C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_19F1DCE2C();
  }
LABEL_7:
  uint64_t v11 = sub_19EF8322C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

void sub_19EFCB298(uint64_t a1@<X8>)
{
  if (qword_1E946EC00 != -1) {
    swift_once();
  }
  unint64_t v4 = (void *)qword_1E946ECC8;
  if (!qword_1E946ECC8) {
    goto LABEL_8;
  }
  uint64_t v5 = (void *)sub_19F1DBD4C();
  uint64_t v6 = sub_19F1DBEAC();
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_75;
  }
  id v1 = objc_msgSend(v4, sel_firstMatchInString_options_range_, v5, 0, 0, v6);

  if (!v1)
  {
LABEL_8:
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    char v18 = 0;
    uint64_t v19 = 1;
LABEL_67:
    *(void *)a1 = v12;
    *(void *)(a1 + 8) = v19;
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v14;
    *(void *)(a1 + 32) = v15;
    *(void *)(a1 + 40) = v16;
    *(void *)(a1 + 48) = v17;
    *(unsigned char *)(a1 + 56) = v18;
    return;
  }
  uint64_t v7 = (void *)sub_19F1DBD4C();
  unint64_t v2 = &selRef_resume;
  objc_msgSend(v1, sel_rangeWithName_, v7);

  sub_19F1DC73C();
  if (v8)
  {
    uint64_t v59 = 0;
    uint64_t v60 = 0;
  }
  else
  {
    uint64_t v9 = sub_19F1DC00C();
    uint64_t v10 = MEMORY[0x19F3C6140](v9);
    uint64_t v59 = v11;
    uint64_t v60 = v10;
    swift_bridgeObjectRelease();
  }
  unint64_t v20 = (void *)sub_19F1DBD4C();
  objc_msgSend(v1, sel_rangeWithName_, v20);

  sub_19F1DC73C();
  if (v21)
  {
    uint64_t v57 = 0;
    uint64_t v58 = 0;
  }
  else
  {
    uint64_t v22 = sub_19F1DC00C();
    uint64_t v23 = MEMORY[0x19F3C6140](v22);
    uint64_t v57 = v24;
    uint64_t v58 = v23;
    swift_bridgeObjectRelease();
  }
  long long v25 = (void *)sub_19F1DBD4C();
  objc_msgSend(v1, sel_rangeWithName_, v25);

  sub_19F1DC73C();
  if (v26)
  {
    uint64_t v36 = &selRef_resume;
LABEL_24:
    uint64_t v15 = 0;
    uint64_t v16 = 1;
LABEL_63:
    long long v46 = (void *)sub_19F1DBD4C();
    objc_msgSend(v1, (SEL)v36 + 956, v46);

    sub_19F1DC73C();
    if (v47)
    {

      uint64_t v17 = 0;
      char v18 = 1;
    }
    else
    {
      uint64_t v48 = sub_19F1DC00C();
      uint64_t v49 = MEMORY[0x19F3C6140](v48);
      unint64_t v51 = v50;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_19EFC76B4(v49, v51);
      LOBYTE(v49) = v52;

      char v18 = v49 & 1;
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = v59;
    uint64_t v12 = v60;
    uint64_t v14 = v57;
    uint64_t v13 = v58;
    goto LABEL_67;
  }
  uint64_t v27 = sub_19F1DC00C();
  uint64_t v28 = MEMORY[0x19F3C6140](v27);
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = HIBYTE(v30) & 0xF;
  uint64_t v32 = v28 & 0xFFFFFFFFFFFFLL;
  if ((v30 & 0x2000000000000000) != 0) {
    uint64_t v33 = HIBYTE(v30) & 0xF;
  }
  else {
    uint64_t v33 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (!v33)
  {
LABEL_75:
    uint64_t v36 = v2;
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if ((v30 & 0x1000000000000000) != 0)
  {
    uint64_t v36 = &selRef_resume;
    swift_bridgeObjectRetain();
    uint64_t v15 = (uint64_t)sub_19EFCB1B0(v28, v30, 10);
    LOBYTE(v28) = v56;
    swift_bridgeObjectRelease_n();
    goto LABEL_60;
  }
  if ((v30 & 0x2000000000000000) == 0)
  {
    if ((v28 & 0x1000000000000000) != 0) {
      uint64_t v34 = (unsigned __int8 *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v34 = (unsigned __int8 *)sub_19F1DCE2C();
    }
    uint64_t v15 = (uint64_t)sub_19EF83214(v34, v32, 10);
    LOBYTE(v28) = v35 & 1;
    goto LABEL_59;
  }
  v61[0] = v28;
  v61[1] = v30 & 0xFFFFFFFFFFFFFFLL;
  if (v28 == 43)
  {
    if (!v31) {
      goto LABEL_79;
    }
    if (v31 == 1 || (BYTE1(v28) - 48) > 9u) {
      goto LABEL_46;
    }
    uint64_t v15 = (BYTE1(v28) - 48);
    if (v31 != 2)
    {
      if ((BYTE2(v28) - 48) > 9u) {
        goto LABEL_46;
      }
      uint64_t v15 = 10 * (BYTE1(v28) - 48) + (BYTE2(v28) - 48);
      uint64_t v37 = v31 - 3;
      if (v37)
      {
        uint64_t v38 = (unsigned __int8 *)v61 + 3;
        while (1)
        {
          unsigned int v39 = *v38 - 48;
          if (v39 > 9) {
            goto LABEL_46;
          }
          uint64_t v40 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
            goto LABEL_46;
          }
          uint64_t v15 = v40 + v39;
          if (__OFADD__(v40, v39)) {
            goto LABEL_46;
          }
          LOBYTE(v28) = 0;
          ++v38;
          if (!--v37) {
            goto LABEL_59;
          }
        }
      }
    }
LABEL_58:
    LOBYTE(v28) = 0;
    goto LABEL_59;
  }
  if (v28 != 45)
  {
    if (!v31 || (v28 - 48) > 9u) {
      goto LABEL_46;
    }
    uint64_t v15 = (v28 - 48);
    if (v31 != 1)
    {
      if ((BYTE1(v28) - 48) > 9u) {
        goto LABEL_46;
      }
      uint64_t v15 = 10 * (v28 - 48) + (BYTE1(v28) - 48);
      uint64_t v41 = v31 - 2;
      if (v41)
      {
        char v42 = (unsigned __int8 *)v61 + 2;
        while (1)
        {
          unsigned int v43 = *v42 - 48;
          if (v43 > 9) {
            goto LABEL_46;
          }
          uint64_t v44 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
            goto LABEL_46;
          }
          uint64_t v15 = v44 + v43;
          if (__OFADD__(v44, v43)) {
            goto LABEL_46;
          }
          LOBYTE(v28) = 0;
          ++v42;
          if (!--v41) {
            goto LABEL_59;
          }
        }
      }
    }
    goto LABEL_58;
  }
  if (v31)
  {
    if (v31 != 1 && (BYTE1(v28) - 48) <= 9u)
    {
      if (v31 == 2)
      {
        LOBYTE(v28) = 0;
        uint64_t v15 = -(uint64_t)(BYTE1(v28) - 48);
LABEL_59:
        uint64_t v36 = &selRef_resume;
        swift_bridgeObjectRelease();
LABEL_60:
        if (v28) {
          uint64_t v15 = 0;
        }
        uint64_t v16 = v28 & 1;
        goto LABEL_63;
      }
      if ((BYTE2(v28) - 48) <= 9u)
      {
        uint64_t v15 = -10 * (BYTE1(v28) - 48) - (BYTE2(v28) - 48);
        uint64_t v45 = v31 - 3;
        if (!v45) {
          goto LABEL_58;
        }
        uint64_t v53 = (unsigned __int8 *)v61 + 3;
        while (1)
        {
          unsigned int v54 = *v53 - 48;
          if (v54 > 9) {
            break;
          }
          uint64_t v55 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
            break;
          }
          uint64_t v15 = v55 - v54;
          if (__OFSUB__(v55, v54)) {
            break;
          }
          LOBYTE(v28) = 0;
          ++v53;
          if (!--v45) {
            goto LABEL_59;
          }
        }
      }
    }
LABEL_46:
    uint64_t v15 = 0;
    LOBYTE(v28) = 1;
    goto LABEL_59;
  }
  __break(1u);
LABEL_79:
  __break(1u);
}

void sub_19EFCB8C0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_19EFCB298((uint64_t)v40);
  if (!v4)
  {
    sub_19EEBDC4C((uint64_t)v40, (uint64_t)v41, (uint64_t *)&unk_1E946EBF0);
    if (*((void *)&v41[0] + 1) == 1)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v9 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
      id v11 = v9;
      unsigned int v39 = sub_19EEC3F3C(0, 41, 0, MEMORY[0x1E4FBC860]);
      v12._object = (void *)0x800000019F26BE60;
      v12._uint64_t countAndFlagsBits = 0xD000000000000020;
      LogMessage.StringInterpolation.appendLiteral(_:)(v12);
      uint64_t v38 = MEMORY[0x1E4FBB550];
      v37[0] = a1;
      sub_19EEC3ED8((uint64_t)v37, (uint64_t)v33, &qword_1EB393260);
      long long v31 = 0u;
      long long v32 = 0u;
      sub_19EEC3E70((uint64_t)v33, (uint64_t)&v31);
      char v36 = 0;
      long long v34 = v31;
      long long v35 = v32;
      uint64_t v13 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
      }
      unint64_t v14 = v13[2];
      unint64_t v15 = v13[3];
      unint64_t v16 = v14 + 1;
      if (v14 >= v15 >> 1)
      {
        uint64_t v28 = v13;
        unint64_t v29 = v13[2];
        unint64_t v30 = sub_19EEC3F3C((void *)(v15 > 1), v14 + 1, 1, v28);
        unint64_t v14 = v29;
        uint64_t v13 = v30;
      }
      _OWORD v13[2] = v16;
      uint64_t v17 = &v13[5 * v14];
      long long v18 = v34;
      long long v19 = v35;
      *((unsigned char *)v17 + 64) = v36;
      *((_OWORD *)v17 + 2) = v18;
      *((_OWORD *)v17 + 3) = v19;
      unsigned int v39 = v13;
      sub_19EEBD664((uint64_t)v37, &qword_1EB393260);
      v20._uint64_t countAndFlagsBits = 0x223D72745320;
      v20._object = (void *)0xE600000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t v38 = MEMORY[0x1E4FBB1A0];
      v37[0] = a2;
      v37[1] = a3;
      sub_19EEC3ED8((uint64_t)v37, (uint64_t)v33, &qword_1EB393260);
      long long v31 = 0u;
      long long v32 = 0u;
      swift_bridgeObjectRetain();
      sub_19EEC3E70((uint64_t)v33, (uint64_t)&v31);
      char v36 = 0;
      long long v34 = v31;
      long long v35 = v32;
      char v21 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v21 = sub_19EEC3F3C(0, v21[2] + 1, 1, v21);
      }
      unint64_t v23 = v21[2];
      unint64_t v22 = v21[3];
      if (v23 >= v22 >> 1) {
        char v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
      }
      v21[2] = v23 + 1;
      uint64_t v24 = &v21[5 * v23];
      long long v25 = v34;
      long long v26 = v35;
      *((unsigned char *)v24 + 64) = v36;
      *((_OWORD *)v24 + 2) = v25;
      *((_OWORD *)v24 + 3) = v26;
      unsigned int v39 = v21;
      sub_19EEBD664((uint64_t)v37, &qword_1EB393260);
      v27._uint64_t countAndFlagsBits = 34;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      *(void *)(v10 + 32) = v39;
      *(void *)&long long v34 = v11;
      LOBYTE(v31) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v31);

      swift_bridgeObjectRelease();
    }
    else
    {
      long long v43 = v41[0];
      long long v44 = v41[1];
      v45[0] = v42[0];
      *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)((char *)v42 + 9);
      sub_19EEBDC4C((uint64_t)&v43, (uint64_t)v46, &qword_1EB392310);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19EE9C9AC((uint64_t)v46);
      sub_19EEBDC4C((uint64_t)&v44, (uint64_t)v47, &qword_1EB392310);
      sub_19EE9C9AC((uint64_t)v47);
    }
    sub_19EEBDC4C((uint64_t)v40, a4, (uint64_t *)&unk_1E946EBF0);
  }
}

uint64_t sub_19EFCBC90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_19F1DB9FC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DBA3C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = v3;
  void v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_19EFD01E4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_74;
  unint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_19F1DBA1C();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_19EEC8D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B90](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_19EFCBF0C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_19F1DB9FC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DBA3C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)(v4 + 16);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v4;
  *(void *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a2;
  *(unsigned char *)(v16 + 40) = a3;
  aBlock[4] = sub_19EFD0094;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_50;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_19F1DBA1C();
  v19[1] = MEMORY[0x1E4FBC860];
  sub_19EEC8D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B90](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_19EFCC194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_19F1DB9FC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_19F1DBA3C();
  uint64_t v13 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)(v4 + 16);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  void v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_19EFCFCC8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_14;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19F1DBA1C();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_19EEC8D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B90](0, v15, v12, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v20);
  return swift_release();
}

uint64_t sub_19EFCC42C(uint64_t a1)
{
  uint64_t v3 = sub_19F1DB9FC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DBA3C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_19EFD012C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_62;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_19F1DBA1C();
  v14[1] = MEMORY[0x1E4FBC860];
  sub_19EEC8D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B90](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_19EFCC69C(uint64_t a1)
{
  uint64_t v3 = sub_19F1DB9FC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_19F1DBA3C();
  uint64_t v7 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3906E0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10 - 8);
  v17[1] = *(void *)(v1 + 16);
  sub_19EFCFDC4(a1, (uint64_t)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  sub_19EFCFF60((uint64_t)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  aBlock[4] = sub_19EFCFFC8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_38;
  unint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  sub_19F1DBA1C();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_19EEC8D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B90](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  return swift_release();
}

uint64_t sub_19EFCC9A4(uint64_t a1)
{
  uint64_t v3 = sub_19F1DB9FC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DBA3C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_19EFCFD60;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_26;
  uint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19F1DBA1C();
  v14[1] = MEMORY[0x1E4FBC860];
  sub_19EEC8D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B90](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_19EFCCC14(char a1)
{
  uint64_t v3 = sub_19F1DB9FC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DBA3C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 24) = a1 & 1;
  aBlock[4] = sub_19EFCFC38;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_9;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_19F1DBA1C();
  v14[1] = MEMORY[0x1E4FBC860];
  sub_19EEC8D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B90](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t static BasicImpressionsTracker.defaultQueueName.getter()
{
  return 0x74656D2D61746164;
}

uint64_t BasicImpressionsTracker.__allocating_init(threshold:queueName:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F510);
  swift_allocObject();
  uint64_t v7 = sub_19EE992B8();
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = v7;
  *(double *)(v6 + 24) = a3;
  *(void *)(v6 + 32) = a1;
  type metadata accessor for ImpressionsTracking.AppearanceJournal();
  sub_19EE8A70C();
  *(void *)(v6 + 16) = sub_19F1DBB7C();
  return v6;
}

double BasicImpressionsTracker.impressionTimeThreshold.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t BasicImpressionsTracker.queueName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BasicImpressionsTracker.onDataSerialized.getter()
{
  return swift_retain();
}

uint64_t BasicImpressionsTracker.elementDidEnterView(_:on:)(long long *a1, uint64_t a2)
{
  return sub_19EFCCFBC(a1, a2, (uint64_t (*)(long long *, uint64_t, void *))BasicImpressionsTracker.elementDidEnterView(_:on:with:));
}

uint64_t BasicImpressionsTracker.elementDidLeaveView(_:on:)(long long *a1, uint64_t a2)
{
  return sub_19EFCCFBC(a1, a2, (uint64_t (*)(long long *, uint64_t, void *))BasicImpressionsTracker.elementDidLeaveView(_:on:with:));
}

uint64_t sub_19EFCCFBC(long long *a1, uint64_t a2, uint64_t (*a3)(long long *, uint64_t, void *))
{
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = *((void *)a1 + 6);
  uint64_t v5 = *((void *)a1 + 9);
  long long v6 = *a1;
  uint64_t v14 = *((void *)a1 + 2);
  uint64_t v15 = v3;
  long long v16 = a1[2];
  uint64_t v17 = v4;
  long long v18 = *(long long *)((char *)a1 + 56);
  uint64_t v19 = v5;
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  v8[2] = 0;
  char v9 = 1;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = v6;
  return a3(&v13, a2, v8);
}

uint64_t BasicImpressionsTracker.elementDidLeaveView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v26[0] = *(_OWORD *)a1;
  v26[1] = v4;
  _OWORD v26[2] = *(_OWORD *)(a1 + 32);
  uint64_t v27 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t v16 = *(void *)a3;
  uint64_t v6 = *(void *)(a3 + 16);
  char v7 = *(unsigned char *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = *(void *)(a3 + 40);
  uint64_t v10 = *(void *)(a3 + 48);
  uint64_t v11 = *(void *)(a3 + 56);
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v12 = *(void *)(a3 + 72);
  swift_beginAccess();
  if (*(void *)(*(void *)(v3 + 16) + 16))
  {
    sub_19EE89A74((uint64_t)v26);
    sub_19EE88F80((uint64_t *)v26);
    if (v14)
    {
      swift_endAccess();
      swift_retain();
      sub_19EE89AC0((uint64_t)v26);
      v18[0] = v16;
      v18[1] = v5;
      v18[2] = v6;
      char v19 = v7;
      uint64_t v20 = v8;
      uint64_t v21 = v9;
      uint64_t v22 = v10;
      uint64_t v23 = v11;
      uint64_t v24 = v13;
      uint64_t v25 = v12;
      sub_19F022CA0(a2, v18);
      return swift_release();
    }
    sub_19EE89AC0((uint64_t)v26);
  }
  return swift_endAccess();
}

uint64_t BasicImpressionsTracker.snapshotOnScreenImpressions(in:on:)(char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = a2;
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v41 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *a1;
  unint64_t v44 = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  sub_19EF9F4D4(*(void *)(*((void *)v3 + 2) + 16), 0);
  sub_19F1DC17C();
  uint64_t v8 = *((void *)v3 + 2);
  uint64_t v9 = v8 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v8 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_20;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v17 >= v13) {
      goto LABEL_25;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_25;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v13) {
          goto LABEL_25;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        if (!v18) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_20:
    uint64_t v20 = *(void *)(*(void *)(v8 + 56) + 8 * v16);
    swift_beginAccess();
    uint64_t v21 = *(void *)(v20 + 80);
    uint64_t v22 = *(void *)(v21 + 16);
    if (!v22 || (*(unsigned char *)(32 * v22 + v21) & 1) == 0)
    {
      uint64_t v23 = swift_retain_n();
      MEMORY[0x19F3C6430](v23);
      if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_19F1DC1BC();
      }
      sub_19F1DC20C();
      sub_19F1DC17C();
      swift_release();
    }
  }
  int64_t v19 = v17 + 3;
  if (v19 < v13)
  {
    unint64_t v18 = *(void *)(v9 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v14 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          break;
        }
        if (v14 >= v13) {
          goto LABEL_25;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        ++v19;
        if (v18) {
          goto LABEL_19;
        }
      }
LABEL_33:
      __break(1u);
    }
    int64_t v14 = v19;
    goto LABEL_19;
  }
LABEL_25:
  swift_release();
  uint64_t v24 = *((void *)v3 + 4);
  uint64_t v25 = *((void *)v3 + 5);
  double v26 = v3[3];
  LOBYTE(v43) = v7;
  uint64_t v27 = static ImpressionsTracking.serializeImpressions(on:from:within:in:on:excluding:)(v24, v25, v44, (unsigned __int8 *)&v43, v42, MEMORY[0x1E4FBC860], v26);
  swift_bridgeObjectRelease();
  if (_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0())
  {
    uint64_t v28 = self;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472178);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    *(void *)(inited + 32) = 0x6973736572706D69;
    *(void *)(inited + 40) = 0xEB00000000736E6FLL;
    *(void *)(inited + 48) = v27;
    swift_bridgeObjectRetain();
    sub_19EFB4930(inited);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
    unint64_t v30 = (void *)sub_19F1DBB1C();
    swift_bridgeObjectRelease();
    id v43 = 0;
    id v31 = objc_msgSend(v28, sel_dataWithJSONObject_options_error_, v30, 3, &v43);

    id v32 = v43;
    if (v31)
    {
      uint64_t v33 = sub_19F1DB40C();
      unint64_t v35 = v34;

      sub_19F1DBDCC();
      uint64_t v36 = sub_19F1DBD9C();
      if (v37)
      {
        sub_19EFCBF0C(v36, v37, 1);
        sub_19EEA072C(v33, v35);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19EEA072C(v33, v35);
      }
    }
    else
    {
      uint64_t v38 = v32;
      unsigned int v39 = (void *)sub_19F1DB19C();

      swift_willThrow();
    }
  }
  return v27;
}

uint64_t BasicImpressionsTracker.consumeImpressions(in:on:)(char *a1, uint64_t a2)
{
  v27[11] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v5 - 8);
  char v6 = *a1;
  char v7 = v2 + 2;
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_19EF9E858(v10);
  swift_bridgeObjectRelease();
  double v12 = *((double *)v2 + 3);
  LOBYTE(v27[0]) = v6;
  uint64_t v13 = _s9JetEngine19ImpressionsTrackingO09serializeC02on4from6within2inAE9excludingSayypGSS_SayAC17AppearanceJournalCGSdAA0C13TrackerFormatO10Foundation4DateVSayAA17ImpressionMetricsV2IDVGtFZ_0(v8, v9, (unint64_t)v11, (unsigned __int8 *)v27, a2, MEMORY[0x1E4FBC860], v12);
  swift_release();
  if (_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0())
  {
    int64_t v14 = self;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472178);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    *(void *)(inited + 32) = 0x6973736572706D69;
    *(void *)(inited + 40) = 0xEB00000000736E6FLL;
    *(void *)(inited + 48) = v13;
    swift_bridgeObjectRetain();
    sub_19EFB4930(inited);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
    unint64_t v16 = (void *)sub_19F1DBB1C();
    swift_bridgeObjectRelease();
    v27[0] = 0;
    id v17 = objc_msgSend(v14, sel_dataWithJSONObject_options_error_, v16, 3, v27);

    id v18 = v27[0];
    if (v17)
    {
      uint64_t v19 = sub_19F1DB40C();
      unint64_t v21 = v20;

      sub_19F1DBDCC();
      uint64_t v22 = sub_19F1DBD9C();
      if (v23)
      {
        sub_19EFCBF0C(v22, v23, 0);
        sub_19EEA072C(v19, v21);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19EEA072C(v19, v21);
      }
    }
    else
    {
      uint64_t v24 = v18;
      uint64_t v25 = (void *)sub_19F1DB19C();

      swift_willThrow();
    }
  }
  *char v7 = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  return v13;
}

Swift::Void __swiftcall BasicImpressionsTracker.removeAllImpressions()()
{
  swift_beginAccess();
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
}

uint64_t BasicImpressionsTracker.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t BasicImpressionsTracker.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19EFCD8E4(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19EFCD914(a1, a2, a3, a4, (uint64_t (*)(long long *, uint64_t, void *))BasicImpressionsTracker.elementDidEnterView(_:on:with:));
}

uint64_t sub_19EFCD8FC(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19EFCD914(a1, a2, a3, a4, (uint64_t (*)(long long *, uint64_t, void *))BasicImpressionsTracker.elementDidLeaveView(_:on:with:));
}

uint64_t sub_19EFCD914(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(long long *, uint64_t, void *))
{
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 6);
  uint64_t v7 = *((void *)a1 + 9);
  long long v8 = *a1;
  uint64_t v16 = *((void *)a1 + 2);
  uint64_t v17 = v5;
  long long v18 = a1[2];
  uint64_t v19 = v6;
  long long v20 = *(long long *)((char *)a1 + 56);
  uint64_t v21 = v7;
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  _OWORD v10[2] = 0;
  char v11 = 1;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = v8;
  return a5(&v15, a2, v10);
}

uint64_t sub_19EFCD998()
{
  swift_beginAccess();
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC868];
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFCD9DC(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return result;
  }
  uint64_t v5 = (uint64_t *)(a2 + 24);
  uint64_t v6 = result + 32;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v7 = 0;
  while (1)
  {
    uint64_t v9 = *(void *)(*v5 + 16);
    if (!v9) {
      goto LABEL_4;
    }
    unint64_t v10 = 0;
    while (*(void *)(*v5 + 32 + 8 * v10) != *(void *)(v6 + 8 * v7))
    {
      if (v9 == ++v10) {
        goto LABEL_4;
      }
    }
    swift_beginAccess();
    uint64_t v11 = *v5;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v5 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v11 = a3(v11);
      *uint64_t v5 = v11;
    }
    unint64_t v13 = *(void *)(v11 + 16);
    if (v13 <= v10) {
      break;
    }
    if ((uint64_t)(~v10 + v13) < 0) {
      goto LABEL_18;
    }
    unint64_t v8 = v13 - 1;
    memmove((void *)(v11 + 8 * v10 + 32), (const void *)(v11 + 8 * v10 + 40), 8 * (~v10 + v13));
    *(void *)(v11 + 16) = v8;
    *uint64_t v5 = v11;
    swift_endAccess();
    swift_release();
    swift_release();
LABEL_4:
    if (++v7 == v3) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_18:
  unint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFCDB88(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return result;
  }
  uint64_t v3 = a2 + 24;
  uint64_t v4 = result + 32;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v7 = *(void *)(*(void *)v3 + 16);
    if (!v7) {
      goto LABEL_4;
    }
    unint64_t v8 = 0;
    while (*(void *)(*(void *)v3 + 32 + 8 * v8) != *(void *)(v4 + 8 * v5))
    {
      if (v7 == ++v8) {
        goto LABEL_4;
      }
    }
    swift_beginAccess();
    uint64_t v9 = *(void **)v3;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v3 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_19F16BAA8(v9);
      *(void *)uint64_t v3 = v9;
    }
    unint64_t v11 = v9[2];
    if (v11 <= v8) {
      break;
    }
    if ((uint64_t)(~v8 + v11) < 0) {
      goto LABEL_18;
    }
    unint64_t v6 = v11 - 1;
    memmove(&v9[v8 + 4], &v9[v8 + 5], 8 * (~v8 + v11));
    long long v9[2] = v6;
    *(void *)uint64_t v3 = v9;
    swift_endAccess();
    swift_release();
    swift_release();
LABEL_4:
    if (++v5 == v2) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_18:
  unint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFCDD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DBA3C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v36 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_19F1DB9FC();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v33 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v34 = a1;
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v31 = v7;
    uint64_t v32 = v6;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v14 = *(void *)(v10 + 8 * v12 + 32);
      long long v15 = *(uint64_t (**)(uint64_t))(*(void *)v14 + 88);
      uint64_t v16 = swift_retain_n();
      char v17 = v15(v16);
      swift_release();
      if ((v17 & 1) == 0
        || (uint64_t aBlock = a2,
            uint64_t v39 = a3,
            (*(void (**)(uint64_t *))(*(void *)v14 + 104))(&aBlock),
            uint64_t v18 = swift_retain(),
            char v19 = v15(v18),
            swift_release(),
            (v19 & 1) == 0))
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_19F09CEF4(0, v13[2] + 1, 1, v13);
        }
        unint64_t v21 = v13[2];
        unint64_t v20 = v13[3];
        if (v21 >= v20 >> 1) {
          unint64_t v13 = sub_19F09CEF4((void *)(v20 > 1), v21 + 1, 1, v13);
        }
        _OWORD v13[2] = v21 + 1;
        v13[v21 + 4] = v14;
      }
      ++v12;
      swift_release();
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
    uint64_t v7 = v31;
    uint64_t v6 = v32;
    if (v13[2]) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    if (*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
LABEL_12:
      uint64_t v22 = v34;
      uint64_t v32 = *(void *)(v34 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391088);
      uint64_t v23 = v35;
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_19F24EAD0;
      sub_19F1DB9EC();
      uint64_t aBlock = v24;
      sub_19EEC8D28();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
      sub_19EEC8CCC();
      uint64_t v25 = v33;
      uint64_t v26 = v37;
      sub_19F1DCC1C();
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v13;
      *(void *)(v27 + 24) = v22;
      uint64_t v42 = sub_19EFD0274;
      uint64_t v43 = v27;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v39 = 1107296256;
      uint64_t v40 = sub_19EEA4A68;
      uint64_t v41 = &block_descriptor_80;
      uint64_t v28 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v29 = v36;
      sub_19F1DBA1C();
      MEMORY[0x19F3C6B90](0, v29, v25, v28);
      _Block_release(v28);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v26);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFCE194(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v41 = a3;
  uint64_t v7 = sub_19F1DBA3C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v39 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_19F1DB9FC();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v37 = a1;
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v34 = v8;
    uint64_t v35 = v7;
    char v13 = a4 & 1;
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    long long v15 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v16 = *(void *)(v11 + 8 * v14 + 32);
      char v17 = *(uint64_t (**)(uint64_t))(*(void *)v16 + 88);
      uint64_t v18 = swift_retain_n();
      char v19 = v17(v18);
      swift_release();
      if ((v19 & 1) == 0
        || (uint64_t aBlock = a2,
            uint64_t v43 = v41,
            LOBYTE(v44) = v13,
            (*(void (**)(uint64_t *))(*(void *)v16 + 104))(&aBlock),
            uint64_t v20 = swift_retain(),
            char v21 = v17(v20),
            swift_release(),
            (v21 & 1) == 0))
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v15 = sub_19F09D150(0, v15[2] + 1, 1, v15);
        }
        unint64_t v23 = v15[2];
        unint64_t v22 = v15[3];
        if (v23 >= v22 >> 1) {
          long long v15 = sub_19F09D150((void *)(v22 > 1), v23 + 1, 1, v15);
        }
        v15[2] = v23 + 1;
        v15[v23 + 4] = v16;
      }
      ++v14;
      swift_release();
    }
    while (v12 != v14);
    swift_bridgeObjectRelease();
    uint64_t v8 = v34;
    uint64_t v7 = v35;
    if (v15[2]) {
      goto LABEL_12;
    }
  }
  else
  {
    long long v15 = (void *)MEMORY[0x1E4FBC860];
    if (*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
LABEL_12:
      uint64_t v24 = v37;
      uint64_t v41 = *(void *)(v37 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391088);
      uint64_t v25 = v38;
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_19F24EAD0;
      sub_19F1DB9EC();
      uint64_t aBlock = v26;
      sub_19EEC8D28();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
      sub_19EEC8CCC();
      uint64_t v27 = v36;
      uint64_t v28 = v40;
      sub_19F1DCC1C();
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v15;
      *(void *)(v29 + 24) = v24;
      long long v46 = sub_19EFD00D0;
      uint64_t v47 = v29;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v43 = 1107296256;
      unint64_t v44 = sub_19EEA4A68;
      uint64_t v45 = &block_descriptor_56;
      unint64_t v30 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v31 = v39;
      sub_19F1DBA1C();
      MEMORY[0x19F3C6B90](0, v31, v27, v30);
      _Block_release(v30);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v31, v7);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v28);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFCE60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t a1), void *a5)
{
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v8 = sub_19F1DBA3C();
  uint64_t v38 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v36 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_19F1DB9FC();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v33 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v34 = a1;
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v32 = v8;
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v15 = *(void *)(v11 + 8 * v13 + 32);
      uint64_t v16 = *(uint64_t (**)(uint64_t))(*(void *)v15 + 88);
      uint64_t v17 = swift_retain_n();
      char v18 = v16(v17);
      swift_release();
      if ((v18 & 1) == 0) {
        goto LABEL_7;
      }
      uint64_t aBlock = a2;
      uint64_t v42 = a3;
      uint64_t v43 = v39;
      unint64_t v44 = v40;
      (*(void (**)(uint64_t *))(*(void *)v15 + 104))(&aBlock);
      uint64_t v19 = swift_retain();
      char v20 = v16(v19);
      swift_release();
      if ((v20 & 1) == 0)
      {
LABEL_7:
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_19F09D38C(0, v14[2] + 1, 1, v14);
        }
        unint64_t v22 = v14[2];
        unint64_t v21 = v14[3];
        if (v22 >= v21 >> 1) {
          uint64_t v14 = sub_19F09D38C((void *)(v21 > 1), v22 + 1, 1, v14);
        }
        void v14[2] = v22 + 1;
        v14[v22 + 4] = v15;
      }
      ++v13;
      swift_release();
    }
    while (v12 != v13);
    swift_bridgeObjectRelease();
    uint64_t v8 = v32;
    if (v14[2]) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    if (*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
LABEL_12:
      uint64_t v23 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391088);
      uint64_t v24 = v35;
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_19F24EAD0;
      sub_19F1DB9EC();
      uint64_t aBlock = v25;
      sub_19EEC8D28();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
      sub_19EEC8CCC();
      uint64_t v26 = v33;
      uint64_t v27 = v37;
      sub_19F1DCC1C();
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v14;
      *(void *)(v28 + 24) = v23;
      uint64_t v45 = sub_19EFCFD04;
      uint64_t v46 = v28;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v42 = 1107296256;
      uint64_t v43 = sub_19EEA4A68;
      unint64_t v44 = &block_descriptor_20;
      uint64_t v29 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v30 = v36;
      sub_19F1DBA1C();
      MEMORY[0x19F3C6B90](0, v30, v26, v29);
      _Block_release(v29);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v8);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v27);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFCEA84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DBA3C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB9FC();
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v32 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v29 = v7;
    uint64_t v30 = v5;
    uint64_t v31 = v4;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v13 = *(void *)(v9 + 8 * v11 + 32);
      uint64_t v14 = *(uint64_t (**)(uint64_t))(*(void *)v13 + 88);
      uint64_t v15 = swift_retain_n();
      char v16 = v14(v15);
      swift_release();
      if ((v16 & 1) == 0
        || (aBlock[0] = a2,
            (*(void (**)(void *))(*(void *)v13 + 104))(aBlock),
            uint64_t v17 = swift_retain(),
            char v18 = v14(v17),
            swift_release(),
            (v18 & 1) == 0))
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_19F09D644(0, v12[2] + 1, 1, v12);
        }
        unint64_t v20 = v12[2];
        unint64_t v19 = v12[3];
        if (v20 >= v19 >> 1) {
          uint64_t v12 = sub_19F09D644((void *)(v19 > 1), v20 + 1, 1, v12);
        }
        v12[2] = v20 + 1;
        v12[v20 + 4] = v13;
      }
      ++v11;
      swift_release();
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    uint64_t v5 = v30;
    uint64_t v4 = v31;
    uint64_t v7 = v29;
    if (v12[2]) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    if (*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
LABEL_12:
      uint64_t v31 = *(void *)(a1 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391088);
      uint64_t v21 = v33;
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_19F24EAD0;
      sub_19F1DB9EC();
      aBlock[0] = v22;
      sub_19EEC8D28();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
      sub_19EEC8CCC();
      uint64_t v23 = v32;
      sub_19F1DCC1C();
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v12;
      *(void *)(v24 + 24) = a1;
      aBlock[4] = sub_19EFD0160;
      aBlock[5] = v24;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_19EEA4A68;
      aBlock[3] = &block_descriptor_68;
      uint64_t v25 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v26 = v34;
      sub_19F1DBA1C();
      MEMORY[0x19F3C6B90](0, v26, v23, v25);
      _Block_release(v25);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v4);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v7);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFCEEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DBA3C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB9FC();
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v32 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v29 = v7;
    uint64_t v30 = v5;
    uint64_t v31 = v4;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v13 = *(void *)(v9 + 8 * v11 + 32);
      uint64_t v14 = *(uint64_t (**)(uint64_t))(*(void *)v13 + 88);
      uint64_t v15 = swift_retain_n();
      char v16 = v14(v15);
      swift_release();
      if ((v16 & 1) == 0
        || ((*(void (**)(uint64_t))(*(void *)v13 + 104))(a2),
            uint64_t v17 = swift_retain(),
            char v18 = v14(v17),
            swift_release(),
            (v18 & 1) == 0))
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_19F09E230(0, v12[2] + 1, 1, v12);
        }
        unint64_t v20 = v12[2];
        unint64_t v19 = v12[3];
        if (v20 >= v19 >> 1) {
          uint64_t v12 = sub_19F09E230((void *)(v19 > 1), v20 + 1, 1, v12);
        }
        v12[2] = v20 + 1;
        v12[v20 + 4] = v13;
      }
      ++v11;
      swift_release();
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    uint64_t v5 = v30;
    uint64_t v4 = v31;
    uint64_t v7 = v29;
    if (v12[2]) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    if (*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
LABEL_12:
      uint64_t v31 = *(void *)(a1 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391088);
      uint64_t v21 = v33;
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_19F24EAD0;
      sub_19F1DB9EC();
      aBlock[0] = v22;
      sub_19EEC8D28();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
      sub_19EEC8CCC();
      uint64_t v23 = v32;
      sub_19F1DCC1C();
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v12;
      *(void *)(v24 + 24) = a1;
      aBlock[4] = sub_19EFD005C;
      aBlock[5] = v24;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_19EEA4A68;
      aBlock[3] = &block_descriptor_44;
      uint64_t v25 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v26 = v34;
      sub_19F1DBA1C();
      MEMORY[0x19F3C6B90](0, v26, v23, v25);
      _Block_release(v25);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v4);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v7);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFCF340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DBA3C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB9FC();
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v32 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v29 = v7;
    uint64_t v30 = v5;
    uint64_t v31 = v4;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v13 = *(void *)(v9 + 8 * v11 + 32);
      uint64_t v14 = *(uint64_t (**)(uint64_t))(*(void *)v13 + 88);
      uint64_t v15 = swift_retain_n();
      char v16 = v14(v15);
      swift_release();
      if ((v16 & 1) == 0
        || (aBlock[0] = a2,
            (*(void (**)(void *))(*(void *)v13 + 104))(aBlock),
            uint64_t v17 = swift_retain(),
            char v18 = v14(v17),
            swift_release(),
            (v18 & 1) == 0))
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_19F09E984(0, v12[2] + 1, 1, v12);
        }
        unint64_t v20 = v12[2];
        unint64_t v19 = v12[3];
        if (v20 >= v19 >> 1) {
          uint64_t v12 = sub_19F09E984((void *)(v19 > 1), v20 + 1, 1, v12);
        }
        v12[2] = v20 + 1;
        v12[v20 + 4] = v13;
      }
      ++v11;
      swift_release();
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    uint64_t v5 = v30;
    uint64_t v4 = v31;
    uint64_t v7 = v29;
    if (v12[2]) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    if (*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
LABEL_12:
      uint64_t v31 = *(void *)(a1 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391088);
      uint64_t v21 = v33;
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_19F24EAD0;
      sub_19F1DB9EC();
      aBlock[0] = v22;
      sub_19EEC8D28();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
      sub_19EEC8CCC();
      uint64_t v23 = v32;
      sub_19F1DCC1C();
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v12;
      *(void *)(v24 + 24) = a1;
      aBlock[4] = sub_19EFCFD94;
      aBlock[5] = v24;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_19EEA4A68;
      aBlock[3] = &block_descriptor_32;
      uint64_t v25 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v26 = v34;
      sub_19F1DBA1C();
      MEMORY[0x19F3C6B90](0, v26, v23, v25);
      _Block_release(v25);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v4);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v7);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFCF7A0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_19F1DBA3C();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v28 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_19F1DB9FC();
  uint64_t v6 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v27 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v26 = v4;
    char v10 = a2 & 1;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v13 = *(void *)(v8 + 8 * v11 + 32);
      uint64_t v14 = *(uint64_t (**)(uint64_t))(*(void *)v13 + 88);
      uint64_t v15 = swift_retain();
      if ((v14(v15) & 1) != 0
        && (LOBYTE(aBlock[0]) = v10,
            uint64_t v16 = (*(uint64_t (**)(void *))(*(void *)v13 + 104))(aBlock),
            (v14(v16) & 1) != 0))
      {
        swift_release();
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_19F09EF00(0, v12[2] + 1, 1, v12);
        }
        unint64_t v18 = v12[2];
        unint64_t v17 = v12[3];
        if (v18 >= v17 >> 1) {
          uint64_t v12 = sub_19F09EF00((void *)(v17 > 1), v18 + 1, 1, v12);
        }
        v12[2] = v18 + 1;
        v12[v18 + 4] = v13;
      }
      ++v11;
    }
    while (v9 != v11);
    swift_bridgeObjectRelease();
    uint64_t v4 = v26;
    if (v12[2]) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    if (*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391088);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_19F24EAD0;
      sub_19F1DB9EC();
      aBlock[0] = v19;
      sub_19EEC8D28();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
      sub_19EEC8CCC();
      unint64_t v20 = v27;
      uint64_t v21 = v29;
      sub_19F1DCC1C();
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v12;
      *(void *)(v22 + 24) = a1;
      aBlock[4] = sub_19EFCFC70;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_19EEA4A68;
      aBlock[3] = &block_descriptor_8;
      uint64_t v23 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v24 = v28;
      sub_19F1DBA1C();
      MEMORY[0x19F3C6B90](0, v24, v20, v23);
      _Block_release(v23);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v4);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v21);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t method lookup function for BasicImpressionsTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BasicImpressionsTracker);
}

uint64_t dispatch thunk of BasicImpressionsTracker.__allocating_init(threshold:queueName:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_19EFCFC00()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_19EFCFC38()
{
  return sub_19EFCF7A0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_19EFCFC44()
{
  return objectdestroy_4Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19EFCFC70()
{
  return sub_19EFCDB88(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_19EFCFC78()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19EFCFCC8()
{
  return sub_19EFCE60C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_19EFCFCD8()
{
  return objectdestroy_4Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19EFCFD04()
{
  return sub_19EFCD9DC(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19F16B354);
}

uint64_t sub_19EFCFD34()
{
  return objectdestroy_4Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_19EFCFD60()
{
  return sub_19EFCF340(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_19EFCFD68()
{
  return objectdestroy_4Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19EFCFD94()
{
  return sub_19EFCD9DC(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19F16BA6C);
}

uint64_t sub_19EFCFDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3906E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EFCFE2C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3906E0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = (id *)(v0 + v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    uint64_t v6 = sub_19F1DB57C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);

    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_19EFCFF60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3906E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EFCFFC8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3906E0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_19EFCEEE4(v2, v3);
}

uint64_t sub_19EFD0030()
{
  return objectdestroy_4Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19EFD005C()
{
  return sub_19EFCD9DC(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19F16B9F4);
}

uint64_t sub_19EFD008C()
{
  return objectdestroy_46Tm(41);
}

uint64_t sub_19EFD0094()
{
  return sub_19EFCE194(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_19EFD00A4()
{
  return objectdestroy_4Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19EFD00D0()
{
  return sub_19EFCD9DC(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19F16B340);
}

uint64_t sub_19EFD0100()
{
  return objectdestroy_4Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19EFD012C()
{
  return sub_19EFCEA84(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_19EFD0134()
{
  return objectdestroy_4Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19EFD0160()
{
  return sub_19EFCD9DC(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19F16B93C);
}

uint64_t sub_19EFD0190()
{
  return objectdestroy_46Tm(40);
}

uint64_t objectdestroy_46Tm(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_19EFD01E4()
{
  return sub_19EFCDD2C(v0[2], v0[3], v0[4]);
}

uint64_t sub_19EFD01F0()
{
  return objectdestroy_4Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_4Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 24));
  return MEMORY[0x1F4186498](v2, 32, 7);
}

uint64_t sub_19EFD0274()
{
  return sub_19EFCD9DC(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19F16B32C);
}

void sub_19EFD030C()
{
}

uint64_t sub_19EFD0358()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 104) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 120));
}

unint64_t ActionDispatcher.PerformError.errorDescription.getter()
{
  return 0xD00000000000004ELL;
}

uint64_t static ActionDispatcher.PerformError.== infix(_:_:)()
{
  return 1;
}

uint64_t ActionDispatcher.PerformError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t ActionDispatcher.PerformError.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19EFD0440()
{
  return 0xD00000000000004ELL;
}

uint64_t ActionDispatcher.next.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 8);
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v5 = (void *)v2[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (uint64_t)v5;
  return sub_19EE6D340(v3, v4, v5);
}

double sub_19EFD0474@<D0>(uint64_t a1@<X8>)
{
  ActionDispatcher.next.getter((uint64_t *)&v4);
  uint64_t v2 = v5;
  double result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 16) = v2;
  return result;
}

uint64_t sub_19EFD04C8(void *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = (void *)a1[2];
  *(void *)&long long v4 = *a1;
  *((void *)&v4 + 1) = v1;
  uint64_t v5 = v2;
  sub_19EE6D340(v4, v1, v2);
  return ActionDispatcher.next.setter(&v4);
}

uint64_t ActionDispatcher.next.setter(long long *a1)
{
  long long v5 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = v5;
  *(void *)(v3 + 32) = v2;
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = v3;
  return result;
}

void (*ActionDispatcher.next.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[3] = v1;
  uint64_t v3 = *(void **)(v1 + 8);
  uint64_t v4 = v3[2];
  uint64_t v5 = v3[3];
  uint64_t v6 = (void *)v3[4];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = (uint64_t)v6;
  sub_19EE6D340(v4, v5, v6);
  return sub_19EFD05D0;
}

void sub_19EFD05D0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = a1[3];
  if (a2)
  {
    sub_19EE6D340(*a1, v2, v4);
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = v3;
    void v6[3] = v2;
    v6[4] = v4;
    swift_release();
    *(void *)(v5 + 8) = v6;
    sub_19EFD13E4(v3, v2, v4);
  }
  else
  {
    uint64_t v7 = (void *)swift_allocObject();
    _OWORD v7[2] = v3;
    v7[3] = v2;
    v7[4] = v4;
    swift_release();
    *(void *)(v5 + 8) = v7;
  }
}

uint64_t ActionDispatcher.withNext(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)v2[2];
  *a2 = *v2;
  a2[2] = v4;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = (void *)a1[2];
  id v8 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19EE6D340(v5, v6, v7);
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = v5;
  v9[3] = v6;
  v9[4] = v7;
  uint64_t result = swift_release();
  a2[1] = v9;
  return result;
}

void ActionDispatcher.targetQueue.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*ActionDispatcher.targetQueue.modify())()
{
  return nullsub_1;
}

uint64_t ActionDispatcher.withTargetQueue(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  *a2 = v3;
  a2[1] = v4;
  a2[2] = a1;
  id v5 = a1;
  swift_bridgeObjectRetain();
  return swift_retain();
}

BOOL ActionDispatcher._hasImplementation(forType:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v7 = a1;
  uint64_t v3 = type metadata accessor for ActionImplementationBox();
  unint64_t v4 = sub_19EE6D228();
  MEMORY[0x19F3C5F50](&v8, &v7, v2, &type metadata for OpaqueMetatype, v3, v4);
  uint64_t v5 = v8;
  if (v8) {
    swift_release();
  }
  return v5 != 0;
}

uint64_t ActionDispatcher.adding<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = v4[1];
  char v10 = (void *)v4[2];
  *a4 = *v4;
  a4[1] = v9;
  a4[2] = v10;
  id v11 = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  return ActionDispatcher.add<A>(_:)(a1, a2, a3);
}

uint64_t ActionDispatcher.removeImplementation(forType:)()
{
  return swift_release();
}

uint64_t ActionDispatcher.removingImplementation(forType:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[1];
  unint64_t v4 = (void *)v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return ActionDispatcher.removeImplementation(forType:)();
}

Swift::Void __swiftcall ActionDispatcher.removeAllImplementations()()
{
  type metadata accessor for ActionImplementationBox();
  sub_19EE6D228();
  sub_19F1DBC0C();
  sub_19F1DBBFC();
}

void ActionDispatcher.removingAllImplementations()(void *a1@<X8>)
{
  uint64_t v3 = v1[1];
  unint64_t v4 = (void *)v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  ActionDispatcher.removeAllImplementations()();
}

uint64_t ActionDispatcher.add(contentsOf:)(uint64_t a1)
{
  uint64_t v1 = *(void *)a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(*(void *)a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(*(void *)a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v5) {
      return swift_release();
    }
    uint64_t v9 = *(void *)(v1 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v5) {
        return swift_release();
      }
      uint64_t v9 = *(void *)(v1 + 8 * v7);
      if (!v9) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v9 - 1) & v9;
LABEL_5:
    type metadata accessor for ActionImplementationBox();
    sub_19EE6D228();
    sub_19F1DBC0C();
    swift_retain();
    uint64_t result = sub_19F1DBC6C();
  }
  int64_t v10 = v8 + 2;
  if (v10 >= v5) {
    return swift_release();
  }
  uint64_t v9 = *(void *)(v1 + 8 * v10);
  if (v9)
  {
    int64_t v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v7 >= v5) {
      return swift_release();
    }
    uint64_t v9 = *(void *)(v1 + 8 * v7);
    ++v10;
    if (v9) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t ActionDispatcher.adding(contentsOf:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = v2[1];
  uint64_t v6 = (void *)v2[2];
  *a2 = *v2;
  a2[1] = v5;
  a2[2] = v6;
  id v7 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  return ActionDispatcher.add(contentsOf:)(a1);
}

uint64_t sub_19EFD0C64(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (*a1 == 1)
  {
    v12[1] = a2;
    v12[2] = a3;
    v12[3] = a4;
    v12[0] = 0;
    uint64_t v8 = type metadata accessor for ActionDispatcher();
    return ActionDispatcher.perform(_:withMetrics:asPartOf:)(a5, v12, a6, v8);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DBF8);
    uint64_t v9 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v10 = swift_allocObject();
    *(_DWORD *)(v10 + 16) = 0;
    *(void *)(v9 + 16) = v10;
    *(void *)(v9 + 24) = 0;
    *(unsigned char *)(v9 + 32) = 1;
  }
  return v9;
}

uint64_t ActionDispatcher.debugDescription.getter(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[1];
  type metadata accessor for ActionImplementationBox();
  sub_19EE6D228();
  *(void *)&long long v17 = v3;
  uint64_t v5 = sub_19F1DBBBC();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x19F3C6370](&v14, v5, WitnessTable);
  uint64_t v16 = v14;
  sub_19F1DCD1C();
  swift_getWitnessTable();
  sub_19F1DD0CC();
  swift_bridgeObjectRelease();
  long long v14 = v17;
  uint64_t v15 = v18;
  sub_19F1DCF2C();
  swift_getWitnessTable();
  sub_19EEC4910();
  sub_19F1DC0AC();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  uint64_t v9 = (void *)v4[4];
  sub_19EE6D340(v7, v8, v9);
  if (v7)
  {
    *(void *)&long long v17 = v7;
    *((void *)&v17 + 1) = v8;
    unint64_t v18 = v9;
    ActionDispatcher.debugDescription.getter(a1);
    sub_19EFD13E4(v7, v8, v9);
  }
  *(void *)&long long v17 = 0;
  *((void *)&v17 + 1) = 0xE000000000000000;
  sub_19F1DCCEC();
  uint64_t v10 = sub_19F1DD98C();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  *(void *)&long long v17 = v10;
  *((void *)&v17 + 1) = v12;
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return v17;
}

uint64_t sub_19EFD0FE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_19F1DD98C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ActionDispatcher.perform(_:withMetrics:asPartOf:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 176) = a4;
  *(void *)(v6 + 184) = a5;
  *(void *)(v6 + 160) = a1;
  *(void *)(v6 + 168) = a2;
  *(void *)(v6 + 192) = *a3;
  *(_OWORD *)(v6 + 200) = *(_OWORD *)v5;
  *(void *)(v6 + 216) = *(void *)(v5 + 16);
  return MEMORY[0x1F4188298](sub_19EFD1058, 0, 0);
}

uint64_t sub_19EFD1058()
{
  uint64_t v6 = v0;
  uint64_t v1 = v0[23];
  uint64_t v2 = (void *)v0[21];
  uint64_t v3 = v0[22];
  __darwin_time_t v5 = v0[24];
  v0[28] = ActionDispatcher.perform(_:withMetrics:asPartOf:)(v2, &v5, v3, v1);
  return MEMORY[0x1F4188298](sub_19EFD10E4, 0, 0);
}

uint64_t sub_19EFD10E4()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = (char *)v0 + 153;
  v0[3] = sub_19EFD11A8;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF54C24(v2);
  sub_19EEBD664(v2, &qword_1E946D1C0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19EFD11A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 232) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19EFD1334;
  }
  else
  {
    **(unsigned char **)(v1 + 160) = *(unsigned char *)(v1 + 153);
    uint64_t v3 = sub_19EFD12D0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19EFD12D0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EFD1334()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EFD1398()
{
  if (*(void *)(v0 + 16))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_19EFD13E4(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_19EFD1438(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = &type metadata for SyncTaskScheduler;
  long long v14 = &protocol witness table for SyncTaskScheduler;
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = 0;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  sub_19EEBB420(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19EFD1A4C;
  v9[1] = v7;
  long long v9[2] = sub_19EFD1A60;
  v9[3] = v4;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF54C24((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1E946D1C0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19EFD15B4()
{
  swift_bridgeObjectRelease();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_19EFD160C(unsigned char *a1)
{
  return sub_19EFD0C64(a1, v1[3], v1[4], v1[5], (uint64_t)(v1 + 6), v1[11]);
}

uint64_t sub_19EFD1620()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EFD163C()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EFD1660()
{
  return 8;
}

void *sub_19EFD166C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void *sub_19EFD1678(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  return a1;
}

uint64_t sub_19EFD16EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

void *assignWithCopy for MetricsEmitter.Configuration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MetricsEmitter.Configuration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEmitter.Configuration(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEmitter.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_19EFD1850(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

unsigned char *sub_19EFD1868(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19EFD1904);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for ActionDispatcher.PerformError()
{
  return __swift_instantiateGenericMetadata();
}

void *__swift_initWithCopy_strong(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t __swift_destroy_strong()
{
  return swift_release();
}

void *__swift_assignWithCopy_strong(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_assignWithTake_strong(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for ActionDispatcher.Next()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EFD1A04()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19EFD1A4C(char *a1)
{
  return sub_19F15F334(*a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

void sub_19EFD1A60(void *a1)
{
}

uint64_t sub_19EFD1A68(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19EFD1AC8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x1F4188298](sub_19EE46B70, 0, 0);
}

uint64_t sub_19EFD1AE8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19EE44348, 0, 0);
}

uint64_t sub_19EFD1B08(uint64_t a1, uint64_t a2)
{
  uint64_t v66 = a2;
  uint64_t v68 = a1;
  uint64_t v62 = sub_19F1DB9FC();
  uint64_t v65 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_19F1DBA3C();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v57 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PageRenderEvent();
  uint64_t v59 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v59 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = sub_19F1DBA0C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390700);
  uint64_t v11 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(v11 + 16) = v12;
  *(void *)(v11 + 24) = v13;
  uint64_t v55 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  *(_OWORD *)(v11 + 80) = 0u;
  *(_OWORD *)(v11 + 96) = 0u;
  *(_OWORD *)(v11 + 105) = 0u;
  uint64_t v14 = v11;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCB50], v7);
  uint64_t v54 = sub_19F1DC8BC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_19EE94278(v67, (uint64_t)&v74);
  uint64_t v60 = type metadata accessor for PageRenderEvent;
  uint64_t v56 = (uint64_t)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE9884C(v68, v56, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  uint64_t v15 = *(unsigned __int8 *)(v59 + 80);
  uint64_t v16 = (v15 + 241) & ~v15;
  uint64_t v58 = v15 | 7;
  uint64_t v59 = v6 + 7;
  uint64_t v17 = swift_allocObject();
  long long v18 = v85;
  long long v19 = v87;
  *(_OWORD *)(v17 + 208) = v86;
  *(_OWORD *)(v17 + 224) = v19;
  long long v20 = v81;
  long long v21 = v83;
  long long v22 = v84;
  *(_OWORD *)(v17 + 144) = v82;
  *(_OWORD *)(v17 + 160) = v21;
  *(_OWORD *)(v17 + 176) = v22;
  *(_OWORD *)(v17 + 192) = v18;
  long long v23 = v79;
  long long v24 = v80;
  *(_OWORD *)(v17 + 80) = v78;
  *(_OWORD *)(v17 + 96) = v23;
  *(unsigned char *)(v17 + 240) = v88;
  *(_OWORD *)(v17 + 112) = v24;
  *(_OWORD *)(v17 + 128) = v20;
  long long v25 = v75;
  *(_OWORD *)(v17 + 16) = v74;
  *(_OWORD *)(v17 + 32) = v25;
  long long v26 = v77;
  *(_OWORD *)(v17 + 48) = v76;
  *(_OWORD *)(v17 + 64) = v26;
  sub_19EE94464((uint64_t)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  *(void *)(v17 + ((v16 + v6 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
  uint64_t v72 = sub_19EFD9354;
  uint64_t v73 = v17;
  v70[0] = MEMORY[0x1E4F143A8];
  v70[1] = 1107296256;
  v70[2] = sub_19EEA4A68;
  long long v71 = (ValueMetadata *)&block_descriptor_25;
  uint64_t v27 = _Block_copy(v70);
  v53[1] = v14;
  swift_retain();
  uint64_t v28 = v57;
  sub_19F1DBA1C();
  uint64_t v69 = MEMORY[0x1E4FBC860];
  sub_19EE98F38(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEA5E54((unint64_t *)&qword_1EB393050, &qword_1EB393048);
  uint64_t v29 = v61;
  uint64_t v30 = v62;
  sub_19F1DCC1C();
  uint64_t v31 = (void *)v54;
  MEMORY[0x19F3C6B90](0, v28, v29, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v28, v64);
  swift_release();
  uint64_t v32 = (void *)sub_19F1DC87C();
  sub_19EE94278(v67, (uint64_t)&v74);
  uint64_t v33 = swift_allocObject();
  long long v34 = v85;
  long long v35 = v87;
  *(_OWORD *)(v33 + 208) = v86;
  *(_OWORD *)(v33 + 224) = v35;
  long long v36 = v81;
  long long v37 = v83;
  long long v38 = v84;
  *(_OWORD *)(v33 + 144) = v82;
  *(_OWORD *)(v33 + 160) = v37;
  *(_OWORD *)(v33 + 176) = v38;
  *(_OWORD *)(v33 + 192) = v34;
  long long v39 = v79;
  long long v40 = v80;
  *(_OWORD *)(v33 + 80) = v78;
  *(_OWORD *)(v33 + 96) = v39;
  *(unsigned char *)(v33 + 240) = v88;
  *(_OWORD *)(v33 + 112) = v40;
  *(_OWORD *)(v33 + 128) = v36;
  long long v41 = v75;
  *(_OWORD *)(v33 + 16) = v74;
  *(_OWORD *)(v33 + 32) = v41;
  long long v42 = v77;
  *(_OWORD *)(v33 + 48) = v76;
  *(_OWORD *)(v33 + 64) = v42;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = sub_19EFD9474;
  *(void *)(v43 + 24) = v33;
  uint64_t v67 = sub_19EFD8EC4(v32, (uint64_t)sub_19EFD94B4, v43);
  swift_release();

  uint64_t v44 = v68;
  uint64_t v45 = v56;
  uint64_t v46 = v60;
  sub_19EE9884C(v68, v56, (uint64_t (*)(void))v60);
  uint64_t v47 = (v15 + 16) & ~v15;
  unint64_t v48 = (v47 + v59) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  sub_19EE94464(v45, v49 + v47);
  uint64_t v50 = v66;
  *(void *)(v49 + v48) = v66;
  sub_19EE9884C(v44, v45, (uint64_t (*)(void))v46);
  uint64_t v51 = swift_allocObject();
  sub_19EE94464(v45, v51 + v47);
  *(void *)(v51 + v48) = v50;
  long long v71 = &type metadata for SyncTaskScheduler;
  uint64_t v72 = (uint64_t (*)())&protocol witness table for SyncTaskScheduler;
  *(void *)&long long v74 = sub_19EFD94E4;
  *((void *)&v74 + 1) = v49;
  *(void *)&long long v75 = sub_19EFD9698;
  *((void *)&v75 + 1) = v51;
  sub_19EEC4154((uint64_t)v70, (uint64_t)&v76);
  BYTE8(v78) = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EEA8C4C((uint64_t)&v74);
  sub_19EEBD664((uint64_t)&v74, (uint64_t *)&unk_1EB3912D0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);
}

uint64_t sub_19EFD2254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PageRenderEvent();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_19EE94278(a1, (uint64_t)v24);
  sub_19EE9884C(a2, (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 257) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  long long v15 = v24[13];
  *(_OWORD *)(v14 + 224) = v24[12];
  *(_OWORD *)(v14 + 240) = v15;
  *(unsigned char *)(v14 + 256) = v25;
  long long v16 = v24[9];
  *(_OWORD *)(v14 + 160) = v24[8];
  *(_OWORD *)(v14 + 176) = v16;
  long long v17 = v24[11];
  *(_OWORD *)(v14 + 192) = v24[10];
  *(_OWORD *)(v14 + 208) = v17;
  long long v18 = v24[5];
  *(_OWORD *)(v14 + 96) = v24[4];
  *(_OWORD *)(v14 + 112) = v18;
  long long v19 = v24[7];
  *(_OWORD *)(v14 + 128) = v24[6];
  *(_OWORD *)(v14 + 144) = v19;
  long long v20 = v24[1];
  *(_OWORD *)(v14 + 32) = v24[0];
  *(_OWORD *)(v14 + 48) = v20;
  long long v21 = v24[3];
  *(_OWORD *)(v14 + 64) = v24[2];
  *(_OWORD *)(v14 + 80) = v21;
  sub_19EE94464((uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  *(void *)(v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  swift_retain();
  sub_19EEAED68((uint64_t)v11, (uint64_t)&unk_1E9472220, v14);
  return swift_release();
}

uint64_t sub_19EFD2498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[39] = a5;
  unsigned char v6[40] = a6;
  v6[38] = a4;
  return MEMORY[0x1F4188298](sub_19EFD24BC, 0, 0);
}

uint64_t sub_19EFD24BC()
{
  *(void *)(v0 + 328) = *(void *)(*(void *)(v0 + 304) + 208);
  return MEMORY[0x1F4188298](sub_19EFD24E4, 0, 0);
}

uint64_t sub_19EFD24E4()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_19EFD25A8;
  v0[18] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 18);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF55268(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1EB3904F0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19EFD25A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 336) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19EFD2A0C;
  }
  else
  {
    *(void *)(v1 + 344) = *(void *)(v1 + 224);
    *(_OWORD *)(v1 + 352) = *(_OWORD *)(v1 + 232);
    *(void *)(v1 + 368) = *(void *)(v1 + 248);
    *(_OWORD *)(v1 + 376) = *(_OWORD *)(v1 + 256);
    uint64_t v3 = sub_19EFD26E8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19EFD26E8()
{
  uint64_t v22 = v0;
  if (sub_19EF6F600())
  {
    *(void *)(v0 + 392) = *(void *)(*(void *)(v0 + 304) + 216);
    return MEMORY[0x1F4188298](sub_19EFD2A7C, 0, 0);
  }
  else
  {
    uint64_t v1 = (long long *)(v0 + 144);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 312);
    uint64_t v3 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
    id v5 = v3;
    long long v21 = sub_19EEC3F3C(0, 41, 0, MEMORY[0x1E4FBC860]);
    v6._object = (void *)0x800000019F26C310;
    v6._uint64_t countAndFlagsBits = 0xD000000000000028;
    LogMessage.StringInterpolation.appendLiteral(_:)(v6);
    uint64_t v7 = (uint64_t *)(v2 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    *(void *)(v0 + 296) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 272) = v8;
    *(void *)(v0 + 280) = v9;
    sub_19EEC3ED8(v0 + 272, v0 + 224, &qword_1EB393260);
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 160) = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70(v0 + 224, v0 + 144);
    *(unsigned char *)(v0 + 176) = 2;
    long long v18 = *v1;
    long long v19 = *(_OWORD *)(v0 + 160);
    char v20 = *(unsigned char *)(v0 + 176);
    uint64_t v10 = v21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_19EEC3F3C(0, v21[2] + 1, 1, v21);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    _OWORD v10[2] = v12 + 1;
    unint64_t v13 = &v10[5 * v12];
    *((unsigned char *)v13 + 64) = v20;
    *((_OWORD *)v13 + 2) = v18;
    *((_OWORD *)v13 + 3) = v19;
    long long v21 = v10;
    sub_19EEBD664(v0 + 272, &qword_1EB393260);
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    *(void *)(v4 + 32) = v21;
    LOBYTE(v21) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v21);

    swift_bridgeObjectRelease();
    sub_19EFD9A90();
    long long v15 = (void *)swift_allocError();
    sub_19F080188(v15);

    long long v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_19EFD2A0C()
{
  uint64_t v1 = *(void **)(v0 + 336);
  sub_19F080188(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19EFD2A7C()
{
  uint64_t v1 = v0 + 10;
  v0[10] = v0;
  v0[15] = v0 + 28;
  v0[11] = sub_19EFD2B40;
  v0[18] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 18);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF550B4(v2);
  sub_19EEBD664(v2, &qword_1E946EB20);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19EFD2B40()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 400) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19EFD3034;
  }
  else
  {
    *(unsigned char *)(v1 + 217) = *(unsigned char *)(v1 + 224);
    uint64_t v3 = sub_19EFD2C64;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19EFD2C64()
{
  uint64_t v42 = v0;
  if (*(unsigned char *)(v0 + 217)) {
    goto LABEL_12;
  }
  char v1 = sub_19F0EBEC0();
  if (v1 != 2)
  {
    if ((v1 & 1) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t v20 = *(void *)(v0 + 304);
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    unsigned __int8 v32 = *(unsigned char *)(v20 + 193);
    static MonotonicTime.now.getter(&v33);
    timespec v34 = v33;
    sub_19F0AEB40(v21, v22, &v32, (unint64_t *)&v34, &v28);
    uint64_t v23 = *(void *)(v0 + 360);
    uint64_t v24 = *(void *)(v0 + 368);
    uint64_t v25 = *(void *)(v0 + 352);
    v35[0] = *(void *)(v0 + 344);
    v35[1] = v25;
    _OWORD v35[2] = v23;
    v35[3] = v24;
    long long v36 = *(_OWORD *)(v0 + 376);
    long long v37 = v28;
    char v38 = v29;
    uint64_t v39 = *((void *)&v29 + 1);
    uint64_t v40 = v30;
    uint64_t v41 = v31;
    sub_19F1B0270(v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (objc_msgSend(self, sel_diagnosticsSubmissionAllowed)) {
    goto LABEL_12;
  }
LABEL_4:
  uint64_t v2 = (long long *)(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v4 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
  id v6 = v4;
  v34.tv_sec = (__darwin_time_t)sub_19EEC3F3C(0, 43, 0, MEMORY[0x1E4FBC860]);
  v7._object = (void *)0x800000019F26C340;
  v7._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *(void *)(v0 + 248) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 224) = v9;
  *(void *)(v0 + 232) = v10;
  sub_19EEC3ED8(v0 + 224, v0 + 272, &qword_1EB393260);
  *uint64_t v2 = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70(v0 + 272, v0 + 144);
  *(unsigned char *)(v0 + 176) = 2;
  long long v11 = *(_OWORD *)(v0 + 160);
  long long v28 = *v2;
  long long v29 = v11;
  LOBYTE(v30) = *(unsigned char *)(v0 + 176);
  tv_sec = (void *)v34.tv_sec;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    tv_sec = sub_19EEC3F3C(0, *(void *)(v34.tv_sec + 16) + 1, 1, v34.tv_sec);
  }
  unint64_t v14 = tv_sec[2];
  unint64_t v13 = tv_sec[3];
  if (v14 >= v13 >> 1) {
    tv_sec = sub_19EEC3F3C((void *)(v13 > 1), v14 + 1, 1, tv_sec);
  }
  tv_sec[2] = v14 + 1;
  long long v15 = &tv_sec[5 * v14];
  long long v16 = v28;
  long long v17 = v29;
  *((unsigned char *)v15 + 64) = v30;
  *((_OWORD *)v15 + 2) = v16;
  *((_OWORD *)v15 + 3) = v17;
  v34.tv_sec = (__darwin_time_t)tv_sec;
  sub_19EEBD664(v0 + 224, &qword_1EB393260);
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  *(void *)(v5 + 32) = tv_sec;
  *(void *)&long long v28 = v6;
  LOBYTE(v34.tv_sec) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v34);

  swift_bridgeObjectRelease();
  sub_19EFD9A90();
  long long v19 = (void *)swift_allocError();
  sub_19F080188(v19);

LABEL_13:
  long long v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_19EFD3034()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v1 = *(void **)(v0 + 400);
  sub_19F080188(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19EFD30B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  char v12 = *((unsigned char *)a2 + 16);
  long long v21 = *(_OWORD *)(a2 + 3);
  uint64_t v13 = a2[5];
  uint64_t v14 = *(void *)(a3 + 200);
  *(void *)&long long v24 = &type metadata for MetricsSamplingLottery;
  long long v15 = (void *)swift_allocObject();
  *(void *)&long long v22 = v15;
  v15[2] = v5;
  void v15[3] = v4;
  v15[4] = v7;
  v15[5] = v6;
  v15[6] = v8;
  v15[7] = v9;
  sub_19EEBDC00(&v22, v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = v14;
  sub_19EE7DA20(v27, 0xD00000000000002ALL, 0x800000019F26C2B0, isUniquelyReferenced_nonNull_native);
  uint64_t v17 = v26;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a3 + 224) == 1)
  {
    *(void *)&long long v24 = MEMORY[0x1E4FBB390];
    LOBYTE(v22) = 1;
    sub_19EEBDC00(&v22, v27);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = v17;
    sub_19EE7DA20(v27, 0xD00000000000002BLL, 0x800000019F26C2E0, v18);
    uint64_t v17 = v26;
    swift_bridgeObjectRelease();
  }
  *(void *)&long long v22 = v10;
  *((void *)&v22 + 1) = v11;
  char v23 = v12;
  long long v24 = v21;
  uint64_t v25 = v13;
  *(void *)&v27[0] = v17;
  uint64_t v19 = MetricsPipeline.process(_:using:)((uint64_t)&v22, (uint64_t *)v27);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_19EFD3268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v33[1] = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3906E0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB97C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(type metadata accessor for PageRenderEvent() + 24);
  v33[0] = a2;
  char v12 = (uint64_t *)(a2 + v11);
  uint64_t v13 = *(void *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  uint64_t v15 = (*(uint64_t (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F38918], v7);
  if (qword_1E946EB38 != -1) {
    uint64_t v15 = swift_once();
  }
  MEMORY[0x1F4188790](v15);
  v33[-4] = v13;
  v33[-3] = v14;
  uint64_t v17 = (uint64_t)&v16[4];
  char v18 = v16 + 10;
  v33[-2] = (uint64_t)v10;
  os_unfair_lock_lock(v16 + 10);
  sub_19EFD9CA4(v17);
  os_unfair_lock_unlock(v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_19F24EAD0;
  id v21 = v19;
  uint64_t v41 = sub_19EEC3F3C(0, 26, 0, MEMORY[0x1E4FBC860]);
  v22._object = (void *)0x800000019F26C290;
  v22._uint64_t countAndFlagsBits = 0xD000000000000019;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  uint64_t v23 = *v12;
  uint64_t v24 = v12[1];
  v40[3] = MEMORY[0x1E4FBB1A0];
  v40[0] = v23;
  v40[1] = v24;
  sub_19EEC3ED8((uint64_t)v40, (uint64_t)v36, &qword_1EB393260);
  long long v34 = 0u;
  long long v35 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v36, (uint64_t)&v34);
  char v39 = 2;
  long long v37 = v34;
  long long v38 = v35;
  uint64_t v25 = v41;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v25 = sub_19EEC3F3C(0, v25[2] + 1, 1, v25);
  }
  unint64_t v27 = v25[2];
  unint64_t v26 = v25[3];
  if (v27 >= v26 >> 1) {
    uint64_t v25 = sub_19EEC3F3C((void *)(v26 > 1), v27 + 1, 1, v25);
  }
  _OWORD v25[2] = v27 + 1;
  long long v28 = &v25[5 * v27];
  long long v29 = v37;
  long long v30 = v38;
  *((unsigned char *)v28 + 64) = v39;
  *((_OWORD *)v28 + 2) = v29;
  *((_OWORD *)v28 + 3) = v30;
  uint64_t v41 = v25;
  sub_19EEBD664((uint64_t)v40, &qword_1EB393260);
  v31._uint64_t countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v31);
  *(void *)(v20 + 32) = v41;
  *(void *)&long long v37 = v21;
  LOBYTE(v34) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v20, (JetEngine::LogMessageLevel)&v34);

  swift_bridgeObjectRelease();
  sub_19EE9884C(v33[0], (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  swift_storeEnumTagMultiPayload();
  sub_19EFCC69C((uint64_t)v6);
  return sub_19EEBD664((uint64_t)v6, (uint64_t *)&unk_1EB3906E0);
}

uint64_t sub_19EFD3684(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3906E0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_19F1DB97C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v58 - v14;
  *(void *)&long long v68 = a1;
  id v16 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  if (swift_dynamicCast())
  {
    uint64_t v17 = (uint64_t *)(a2 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = (*(uint64_t (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F38920], v9);
    if (qword_1E946EB38 != -1) {
      uint64_t v20 = swift_once();
    }
    MEMORY[0x1F4188790](v20);
    *(&v58 - 4) = v18;
    *(&v58 - 3) = v19;
    uint64_t v22 = (uint64_t)&v21[4];
    uint64_t v23 = v21 + 10;
    *(&v58 - 2) = (uint64_t)v12;
    os_unfair_lock_lock(v21 + 10);
    sub_19EFD9CA4(v22);
    os_unfair_lock_unlock(v23);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    uint64_t v61 = v6;
    uint64_t v62 = a3;
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v25 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_19F24EB80;
    id v59 = v25;
    uint64_t v73 = sub_19EEC3F3C(0, 35, 0, MEMORY[0x1E4FBC860]);
    v27._object = (void *)0x800000019F26C260;
    v27._uint64_t countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    long long v28 = (uint64_t *)(a2 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v72 = MEMORY[0x1E4FBB1A0];
    v71[0] = v29;
    v71[1] = v30;
    sub_19EEC3ED8((uint64_t)v71, (uint64_t)v67, &qword_1EB393260);
    long long v65 = 0u;
    long long v66 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v67, (uint64_t)&v65);
    char v70 = 2;
    long long v68 = v65;
    long long v69 = v66;
    Swift::String v31 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v31 = sub_19EEC3F3C(0, v31[2] + 1, 1, v31);
    }
    unint64_t v33 = v31[2];
    unint64_t v32 = v31[3];
    uint64_t v60 = v9;
    if (v33 >= v32 >> 1) {
      Swift::String v31 = sub_19EEC3F3C((void *)(v32 > 1), v33 + 1, 1, v31);
    }
    v31[2] = v33 + 1;
    long long v34 = &v31[5 * v33];
    long long v35 = v68;
    long long v36 = v69;
    *((unsigned char *)v34 + 64) = v70;
    *((_OWORD *)v34 + 2) = v35;
    *((_OWORD *)v34 + 3) = v36;
    uint64_t v73 = v31;
    sub_19EEBD664((uint64_t)v71, &qword_1EB393260);
    v37._uint64_t countAndFlagsBits = 44;
    v37._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    *(void *)(v26 + 32) = v73;
    uint64_t v73 = sub_19EEC3F3C(0, 9, 0, MEMORY[0x1E4FBC860]);
    v38._uint64_t countAndFlagsBits = 0x203A6E6F73616572;
    v38._object = (void *)0xE800000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    swift_getErrorValue();
    uint64_t v39 = v63;
    uint64_t v40 = v64;
    uint64_t v72 = v64;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v71);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(boxed_opaque_existential_2Tm, v39, v40);
    sub_19EEC3ED8((uint64_t)v71, (uint64_t)v67, &qword_1EB393260);
    long long v65 = 0u;
    long long v66 = 0u;
    sub_19EEC3E70((uint64_t)v67, (uint64_t)&v65);
    char v70 = 0;
    long long v68 = v65;
    long long v69 = v66;
    uint64_t v42 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v42 = sub_19EEC3F3C(0, v42[2] + 1, 1, v42);
    }
    unint64_t v44 = v42[2];
    unint64_t v43 = v42[3];
    if (v44 >= v43 >> 1) {
      uint64_t v42 = sub_19EEC3F3C((void *)(v43 > 1), v44 + 1, 1, v42);
    }
    _OWORD v42[2] = v44 + 1;
    uint64_t v45 = &v42[5 * v44];
    long long v46 = v68;
    long long v47 = v69;
    *((unsigned char *)v45 + 64) = v70;
    *((_OWORD *)v45 + 2) = v46;
    *((_OWORD *)v45 + 3) = v47;
    uint64_t v73 = v42;
    sub_19EEBD664((uint64_t)v71, &qword_1EB393260);
    v48._uint64_t countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    *(void *)(v26 + 40) = v73;
    uint64_t v49 = v59;
    *(void *)&long long v68 = v59;
    LOBYTE(v65) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v26, (JetEngine::LogMessageLevel)&v65);
    swift_bridgeObjectRelease();

    uint64_t v50 = *v28;
    uint64_t v51 = v28[1];
    uint64_t v52 = v60;
    uint64_t v53 = (*(uint64_t (**)(char *, void, uint64_t))(v10 + 104))(v15, *MEMORY[0x1E4F38910], v60);
    if (qword_1E946EB38 != -1) {
      uint64_t v53 = swift_once();
    }
    MEMORY[0x1F4188790](v53);
    *(&v58 - 4) = v50;
    *(&v58 - 3) = v51;
    uint64_t v55 = (uint64_t)&v54[4];
    uint64_t v56 = v54 + 10;
    *(&v58 - 2) = (uint64_t)v15;
    os_unfair_lock_lock(v54 + 10);
    sub_19EFD9734(v55);
    os_unfair_lock_unlock(v56);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v52);
    *uint64_t v8 = a1;
    swift_storeEnumTagMultiPayload();
    id v57 = a1;
    sub_19EFCC69C((uint64_t)v8);
    return sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1EB3906E0);
  }
}

__n128 PageRenderMetricsPresenter.Configuration.init(eventID:topic:pipeline:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(unsigned char *)(a6 + 210) = 0;
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  long long v6 = *(_OWORD *)(a5 + 144);
  *(_OWORD *)(a6 + 160) = *(_OWORD *)(a5 + 128);
  *(_OWORD *)(a6 + 176) = v6;
  *(_OWORD *)(a6 + 192) = *(_OWORD *)(a5 + 160);
  *(unsigned char *)(a6 + 208) = *(unsigned char *)(a5 + 176);
  long long v7 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(a6 + 96) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(a6 + 112) = v7;
  long long v8 = *(_OWORD *)(a5 + 112);
  *(_OWORD *)(a6 + 128) = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(a6 + 144) = v8;
  long long v9 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a6 + 32) = *(_OWORD *)a5;
  *(_OWORD *)(a6 + 48) = v9;
  __n128 result = *(__n128 *)(a5 + 32);
  long long v11 = *(_OWORD *)(a5 + 48);
  *(__n128 *)(a6 + 64) = result;
  *(_OWORD *)(a6 + 80) = v11;
  *(unsigned char *)(a6 + 209) = 2;
  *(void *)(a6 + 216) = 0;
  *(void *)(a6 + 224) = 0;
  *(unsigned char *)(a6 + 232) = 1;
  return result;
}

uint64_t PageRenderMetricsPresenter.Configuration.withPrecision(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *a1;
  uint64_t result = sub_19EFD3E04(v2, a2);
  *(unsigned char *)(a2 + 209) = v4;
  return result;
}

uint64_t sub_19EFD3E04(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t PageRenderMetricsPresenter.Configuration.withClientIdOmitted()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_19EFD3E04(v1, a1);
  *(unsigned char *)(a1 + 210) = 1;
  return result;
}

uint64_t PageRenderMetricsPresenter.Configuration.withActivityContext(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_19EFD3E04(v4, a4);
  *(void *)(a4 + 216) = a1;
  *(void *)(a4 + 224) = a2;
  *(unsigned char *)(a4 + 232) = a3 & 1;
  return result;
}

uint64_t PageRenderMetricsPresenter.__allocating_init(eventID:topic:pipeline:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  PageRenderMetricsPresenter.init(eventID:topic:pipeline:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_19EFD3F34()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_19EFD9CBC(v2);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

uint64_t PageRenderMetricsPresenter.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  PageRenderMetricsPresenter.init(configuration:)(a1);
  return v2;
}

void *PageRenderMetricsPresenter.init(configuration:)(uint64_t a1)
{
  uint64_t v50 = sub_19F1DB9FC();
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  long long v47 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_19F1DBA3C();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1F4188790](v44);
  long long v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DC8CC();
  uint64_t v43 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1F4188790](v10 - 8);
  char v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0x3FF0000000000000;
  uint64_t v14 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  uint64_t v51 = v12;
  uint64_t v15 = sub_19EE9A2A4(v14, v13, (uint64_t)v12);
  char v16 = *(unsigned char *)(a1 + 232);
  if (qword_1E946EB38 != -1)
  {
    long long v41 = *(_OWORD *)(a1 + 216);
    uint64_t v15 = swift_once();
  }
  *(double *)&long long v17 = MEMORY[0x1F4188790](v15);
  *((void *)&v41 - 6) = v14;
  *((void *)&v41 - 5) = v13;
  *(&v41 - 2) = v17;
  uint64_t v19 = (uint64_t)&v18[4];
  uint64_t v20 = v18 + 10;
  *((unsigned char *)&v41 - 16) = v16;
  os_unfair_lock_lock(v18 + 10);
  sub_19EE9A654(v19);
  os_unfair_lock_unlock(v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390530);
  swift_allocObject();
  v1[5] = sub_19EE992B8();
  uint64_t v42 = v1;
  v1[3] = objc_msgSend(objc_allocWithZone((Class)_JEAtomicFlag), sel_initWithInitialValue_, 1);
  sub_19EEBDC10(0, (unint64_t *)&qword_1EB390740);
  sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
  id v21 = (void *)sub_19F1DC87C();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_19EE98F38(&qword_1EB390738, MEMORY[0x1E4FBCC70]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390720);
  sub_19EEA5E54((unint64_t *)&unk_1EB390728, &qword_1EB390720);
  sub_19F1DCC1C();
  uint64_t v22 = sub_19F1DC8DC();

  (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v7);
  uint64_t v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0);
  uint64_t v24 = (uint64_t)&v6[v23[12]];
  uint64_t v25 = &v6[v23[16]];
  uint64_t v26 = v23[20];
  sub_19EE9884C((uint64_t)v51, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v28 = *(void *)(a1 + 24);
  sub_19EE99F44(a1 + 32, (uint64_t)aBlock);
  char v52 = *(unsigned char *)(a1 + 209);
  LOBYTE(v21) = *(unsigned char *)(a1 + 210);
  swift_bridgeObjectRetain();
  sub_19EE99BE8(v27, v28, (uint64_t)aBlock, &v52, (char)v21, v24);
  *uint64_t v25 = 0;
  *((void *)v25 + 2) = 0;
  *((void *)v25 + 3) = 0;
  *((void *)v25 + 1) = 0;
  *(void *)&v6[v26] = v22;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390768);
  uint64_t v29 = swift_allocObject();
  *(_DWORD *)(v29 + ((*(unsigned int *)(*(void *)v29 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_19EE9884C((uint64_t)v6, v29 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v29 + 16), (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  uint64_t v30 = v42;
  v42[4] = v29;
  uint64_t v31 = qword_1E946EF98;
  swift_unknownObjectRetain();
  if (v31 != -1) {
    swift_once();
  }
  if (qword_1E9498AE8)
  {
    uint64_t v32 = qword_1E9498AF0;
    uint64_t ObjectType = swift_getObjectType();
    long long v34 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v32 + 16);
    uint64_t v35 = swift_retain();
    v34(v35, &protocol witness table for PageRenderMetricsPresenter, ObjectType, v32);
    swift_release();
  }
  swift_getObjectType();
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_19EFD748C;
  aBlock[5] = v36;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_5;
  Swift::String v37 = _Block_copy(aBlock);
  swift_retain();
  Swift::String v38 = v45;
  sub_19F1DBA1C();
  uint64_t v39 = v47;
  sub_19EE99B20();
  sub_19F1DC92C();
  _Block_release(v37);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v50);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v48);
  swift_release();
  swift_release();
  sub_19F1DC94C();
  swift_unknownObjectRelease();
  sub_19EE987EC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  sub_19EE987EC((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  sub_19EFD74A8(a1);
  return v30;
}

uint64_t sub_19EFD4880()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_19EFD3F34();
    return swift_release();
  }
  return result;
}

uint64_t PageRenderMetricsPresenter.deinit()
{
  uint64_t v1 = v0;
  if (qword_1E946EF98 != -1) {
    swift_once();
  }
  if (qword_1E9498AE8)
  {
    uint64_t v2 = qword_1E9498AF0;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v2 + 24))(v0, &protocol witness table for PageRenderMetricsPresenter, ObjectType, v2);
  }
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v4 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v4 + 16);
  long long v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(void *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_19EFD4A24(v5);
  os_unfair_lock_unlock(v6);
  swift_release();

  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_19EFD4A24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE9884C(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_19EE987EC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0);
  uint64_t v7 = *(void *)&v4[*(int *)(v6 + 64) + 8];
  sub_19EE941BC((uint64_t)&v4[*(int *)(v6 + 48)]);
  sub_19EE987EC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  swift_getObjectType();
  sub_19F1DC93C();
  if (v7) {
    sub_19F1DC94C();
  }
  return swift_unknownObjectRelease();
}

uint64_t PageRenderMetricsPresenter.__deallocating_deinit()
{
  uint64_t v1 = v0;
  if (qword_1E946EF98 != -1) {
    swift_once();
  }
  if (qword_1E9498AE8)
  {
    uint64_t v2 = qword_1E9498AF0;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v2 + 24))(v0, &protocol witness table for PageRenderMetricsPresenter, ObjectType, v2);
  }
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v4 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v4 + 16);
  uint64_t v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(void *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_19EFD4A24(v5);
  os_unfair_lock_unlock(v6);
  swift_release();

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t PageRenderMetricsPresenter.isAccessibilityEnabled.getter()
{
  return -[_JEAtomicFlag currentValue](*(void *)(v0 + 24));
}

uint64_t PageRenderMetricsPresenter.isAccessibilityEnabled.setter(char a1)
{
  return -[_JEAtomicFlag setCurrentValue:](*(void *)(v1 + 24), a1 & 1);
}

uint64_t (*PageRenderMetricsPresenter.isAccessibilityEnabled.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = -[_JEAtomicFlag currentValue](v3);
  return sub_19EFD4D50;
}

uint64_t sub_19EFD4D50(uint64_t a1)
{
  return -[_JEAtomicFlag setCurrentValue:](*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t PageRenderMetricsPresenter.event.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_19EE185A0(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t PageRenderMetricsPresenter.isCollecting.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_19EFD4EE0(v2, (char *)&v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  swift_release();
  return v4;
}

uint64_t sub_19EFD4EE0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1F4188790](v4);
  unsigned __int8 v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE9884C(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for PageRenderMetricsPresenter.State;
  if (EnumCaseMultiPayload == 1)
  {
    char v9 = 0;
  }
  else
  {
    uint64_t v10 = (uint64_t)&v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0) + 48)];
    swift_unknownObjectRelease();
    sub_19EE941BC(v10);
    char v9 = 1;
    uint64_t v8 = type metadata accessor for PageRenderEvent;
  }
  uint64_t result = sub_19EE987EC((uint64_t)v6, (uint64_t (*)(void))v8);
  *a2 = v9;
  return result;
}

Swift::Void __swiftcall PageRenderMetricsPresenter.setPageRequestTime(_:)(JetEngine::MonotonicTime a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_19EFD50BC(v3);
  os_unfair_lock_unlock(v4);
  swift_release();
}

id sub_19EFD50BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE9884C(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return (id)sub_19EE987EC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0);
  uint64_t v7 = (uint64_t)&v4[*(int *)(v6 + 48)];
  int v8 = v4[*(int *)(v6 + 64)];
  swift_unknownObjectRelease();
  sub_19EE941BC(v7);
  sub_19EE987EC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  if (v8 == 1) {
    sub_19F19B578((unint64_t)"JetEngine/PageRenderMetricsPresenter.swift", 0x2AuLL, 2, 0x241uLL);
  }
  static MonotonicTime.now.getter((timespec *)&v11);
  long long v10 = v11;
  if (qword_1EB3905B8 != -1) {
    swift_once();
  }
  char v9 = (void *)qword_1EB3905A8;
  objc_msgSend((id)qword_1EB3905A8, sel_lock, v10);
  if (qword_1EB3905A0 != -1) {
    swift_once();
  }
  xmmword_1EB3904C0 = v10;
  return objc_msgSend(v9, sel_unlock);
}

uint64_t PageRenderMetricsPresenter.onPost.getter()
{
  return swift_retain();
}

uint64_t sub_19EFD52B0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE9884C(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for PageRenderMetricsPresenter.State;
    uint64_t v14 = (uint64_t)v9;
    return sub_19EE987EC(v14, (uint64_t (*)(void))v13);
  }
  uint64_t v40 = a2;
  uint64_t v48 = v3;
  uint64_t v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0);
  char v16 = &v9[v15[12]];
  uint64_t v17 = *(void *)&v9[v15[16] + 8];
  uint64_t v41 = *(void *)&v9[v15[20]];
  sub_19EE94464((uint64_t)v9, (uint64_t)v12);
  long long v18 = *((_OWORD *)v16 + 13);
  v46[12] = *((_OWORD *)v16 + 12);
  v46[13] = v18;
  char v47 = v16[224];
  long long v19 = *((_OWORD *)v16 + 9);
  v46[8] = *((_OWORD *)v16 + 8);
  v46[9] = v19;
  long long v20 = *((_OWORD *)v16 + 11);
  v46[10] = *((_OWORD *)v16 + 10);
  v46[11] = v20;
  long long v21 = *((_OWORD *)v16 + 5);
  v46[4] = *((_OWORD *)v16 + 4);
  v46[5] = v21;
  long long v22 = *((_OWORD *)v16 + 7);
  v46[6] = *((_OWORD *)v16 + 6);
  v46[7] = v22;
  long long v23 = *((_OWORD *)v16 + 1);
  v46[0] = *(_OWORD *)v16;
  v46[1] = v23;
  long long v24 = *((_OWORD *)v16 + 3);
  long long v46[2] = *((_OWORD *)v16 + 2);
  v46[3] = v24;
  if (!v17)
  {
    sub_19EE987EC(a1, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
    if (qword_1EB3904D8 != -1) {
      swift_once();
    }
    _OWORD v42[2] = (timespec)xmmword_1EB394E10;
    char v43 = byte_1EB394E20;
    uint64_t v44 = qword_1EB394E28;
    char v45 = byte_1EB394E30;
    uint64_t v26 = (uint64_t *)&v12[*(int *)(v10 + 24)];
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    swift_bridgeObjectRetain();
    static MonotonicTime.now.getter(v42);
    uint64_t v25 = v40;
    double v29 = *(double *)(v40 + 16);
    double tv_sec = (double)v42[0].tv_sec;
    double tv_nsec = (double)v42[0].tv_nsec;
    if (qword_1EB392DA0 != -1)
    {
      double v38 = (double)v42[0].tv_nsec;
      double v39 = v29;
      double v37 = (double)v42[0].tv_sec;
      swift_once();
      double tv_sec = v37;
      double tv_nsec = v38;
      double v29 = v39;
    }
    MonotonicTime.init(timeInterval:)(tv_nsec / *(double *)&qword_1EB392B98 + tv_sec - v29);
    v42[0] = v42[1];
    PageRenderField<>.callAsFunction(for:at:)(v28, v27, (double *)&v42[0].tv_sec);
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(self, sel_defaultCenter);
    if (qword_1E946EEF8 != -1) {
      swift_once();
    }
    objc_msgSend(v32, sel_postNotificationName_object_, qword_1E946EFA0, v25);

    goto LABEL_13;
  }
  if (a3)
  {
    sub_19EE987EC(a1, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
    swift_getObjectType();
    sub_19F1DC93C();
    sub_19F1DC94C();
    uint64_t v25 = v40;
LABEL_13:
    sub_19EFD1B08((uint64_t)v12, *(void *)(v25 + 40));
    sub_19EE9884C((uint64_t)v12, a1, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
    swift_storeEnumTagMultiPayload();
    if (-[_JEAtomicFlag currentValue](*(void *)(v25 + 24)))
    {
      if (qword_1EB3906A8 != -1) {
        swift_once();
      }
      uint64_t v33 = qword_1EB390518;
      uint64_t v34 = unk_1EB390520;
      __swift_project_boxed_opaque_existential_1(qword_1EB390500, qword_1EB390518);
      (*(void (**)(uint64_t, uint64_t))(v34 + 24))(v33, v34);
    }
    swift_unknownObjectRelease();
    sub_19EE941BC((uint64_t)v46);
    uint64_t v13 = type metadata accessor for PageRenderEvent;
    uint64_t v14 = (uint64_t)v12;
    return sub_19EE987EC(v14, (uint64_t (*)(void))v13);
  }
  swift_unknownObjectRelease();
  sub_19EE941BC((uint64_t)v46);
  return sub_19EE987EC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
}

Swift::Void __swiftcall PageRenderMetricsPresenter.setPagePreloadStatus(_:)(JetEngine::PagePreloadStatus a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_19EFD74D8(v3);
  os_unfair_lock_unlock(v4);
  swift_release();
}

uint64_t sub_19EFD5838(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE9884C(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for PageRenderMetricsPresenter.State;
    uint64_t v13 = (uint64_t)v8;
  }
  else
  {
    uint64_t v14 = (uint64_t)&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0) + 48)];
    swift_unknownObjectRelease();
    sub_19EE94464((uint64_t)v8, (uint64_t)v11);
    sub_19EE941BC(v14);
    long long v21 = "preloadStatus";
    uint64_t v22 = 13;
    char v23 = 2;
    uint64_t v24 = 0;
    char v25 = 1;
    uint64_t v15 = (uint64_t *)&v11[*(int *)(v9 + 24)];
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    swift_bridgeObjectRetain();
    static MonotonicTime.now.getter(&v20);
    sub_19EFD5A24(a2, a3, v16, v17, v20.tv_sec, v20.tv_nsec);
    swift_bridgeObjectRelease();
    uint64_t v12 = type metadata accessor for PageRenderEvent;
    uint64_t v13 = (uint64_t)v11;
  }
  return sub_19EE987EC(v13, (uint64_t (*)(void))v12);
}

uint64_t sub_19EFD5A24(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v56 = a6;
  unint64_t v65 = a2;
  uint64_t v59 = a1;
  uint64_t v58 = sub_19F1DB85C();
  uint64_t v55 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v54 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v62 = sub_19F1DB89C();
  uint64_t v14 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB390588 != -1) {
    swift_once();
  }
  uint64_t v60 = v16;
  uint64_t v61 = v14;
  uint64_t v63 = a5;
  uint64_t v64 = v13;
  uint64_t v17 = qword_1EB394D28;
  long long v18 = *(const char **)v6;
  uint64_t v19 = *(void *)(v6 + 8);
  int v20 = *(unsigned __int8 *)(v6 + 16);
  v70[0] = a3;
  v70[1] = a4;
  v70[2] = a5;
  uint64_t v21 = v56;
  void v70[3] = v56;
  v70[4] = v18;
  v70[5] = v19;
  char v71 = v20;
  uint64_t v72 = v59;
  unint64_t v73 = v65;
  sub_19EE81A70((uint64_t)v70);
  sub_19EE83A30((uint64_t)v70, (uint64_t)v69);
  uint64_t v22 = *(void **)(v17 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  objc_msgSend(v22, sel_lock);
  sub_19EE836C4(v17, (uint64_t)v69);
  uint64_t v51 = 0;
  objc_msgSend(v22, sel_unlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v57 = (char *)v18;
  int v53 = v20;
  uint64_t v23 = sub_19F1DCD2C();
  double v67 = *(double *)&v63;
  uint64_t v68 = v21;
  uint64_t v24 = v21;
  sub_19EE83F28(v23, v25, a3, a4, (uint64_t *)&v67);
  swift_bridgeObjectRelease();
  if (qword_1EB390590 != -1) {
    swift_once();
  }
  uint64_t v26 = v62;
  uint64_t v27 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB394D30);
  double v29 = v60;
  uint64_t v28 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v27, v26);
  sub_19F1DBFCC();
  uint64_t v30 = v64;
  sub_19F1DB86C();
  sub_19EE83670();
  sub_19EE84120();
  sub_19EE83660(v31);
  swift_bridgeObjectRetain_n();
  unint64_t v32 = v65;
  swift_bridgeObjectRetain_n();
  uint64_t v33 = sub_19F1DB87C();
  int v52 = sub_19F1DC99C();
  if ((sub_19F1DCA6C() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v58);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v29, v26);
  }
  uint64_t v49 = a3;
  os_log_t v50 = v33;
  if (v53)
  {
    uint64_t v34 = v63;
    uint64_t v35 = v64;
    uint64_t v36 = v54;
    if ((unint64_t)v57 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v57 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (v57 >> 16 <= 0x10)
      {
        uint64_t v37 = v24;
        id v57 = sub_19F0EB600();
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v34 = v63;
  uint64_t v35 = v64;
  uint64_t v36 = v54;
  if (!v57)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  uint64_t v37 = v24;
LABEL_14:
  uint64_t v39 = v55;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v36, v35, v58);
  uint64_t v40 = swift_slowAlloc();
  *(double *)&uint64_t v63 = COERCE_DOUBLE(swift_slowAlloc());
  uint64_t v66 = v63;
  double v67 = *(double *)&v34;
  *(_DWORD *)uint64_t v40 = 134218754;
  uint64_t v68 = v37;
  sub_19F10F5E0();
  double v67 = v41;
  sub_19F1DCB3C();
  *(_WORD *)(v40 + 12) = 2080;
  swift_bridgeObjectRetain();
  double v67 = COERCE_DOUBLE(sub_19EEAD23C(v49, a4, &v66));
  sub_19F1DCB3C();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v40 + 22) = 2048;
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  double v67 = (double)v37 / *(double *)&qword_1EB392B98 + (double)v34;
  sub_19F1DCB3C();
  *(_WORD *)(v40 + 32) = 2080;
  swift_bridgeObjectRetain();
  double v67 = COERCE_DOUBLE(sub_19EEAD23C(v59, v32, &v66));
  sub_19F1DCB3C();
  swift_bridgeObjectRelease_n();
  uint64_t v42 = v54;
  os_signpost_id_t v43 = sub_19F1DB83C();
  os_log_t v44 = v50;
  _os_signpost_emit_with_name_impl(&dword_19EE14000, v50, (os_signpost_type_t)v52, v43, v57, "%{signpost.description:event_time}lluid=%s, instant=%f, value=%s", (uint8_t *)v40, 0x2Au);
  uint64_t v45 = v63;
  swift_arrayDestroy();
  MEMORY[0x19F3C9470](v45, -1, -1);
  MEMORY[0x19F3C9470](v40, -1, -1);

  uint64_t v46 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v47 = v58;
  v46(v64, v58);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v62);
  return ((uint64_t (*)(char *, uint64_t))v46)(v42, v47);
}

uint64_t sub_19EFD60C0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v60 = a5;
  double v65 = *(double *)&a4;
  uint64_t v9 = sub_19F1DB85C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  uint64_t v63 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = &v53[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  long long v69 = &v53[-v13];
  uint64_t v14 = sub_19F1DB89C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v66 = &v53[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EB390588 != -1) {
    swift_once();
  }
  uint64_t v67 = v15;
  uint64_t v68 = v14;
  uint64_t v17 = qword_1EB394D28;
  uint64_t v64 = a2;
  int v57 = a1;
  if ((_BYTE)a1)
  {
    uint64_t v18 = 0x756F72676B636162;
    uint64_t v19 = (const char *)0xEA0000000000646ELL;
    if (a1 != 1)
    {
      uint64_t v18 = 0x6669636570736E75;
      uint64_t v19 = (const char *)0xEB00000000646569;
    }
  }
  else
  {
    uint64_t v18 = 0x657373696D736964;
    uint64_t v19 = (const char *)0xE900000000000064;
  }
  uint64_t v61 = (char *)v19;
  int v20 = *(const char **)v5;
  uint64_t v21 = *(void *)(v5 + 8);
  int v22 = *(unsigned __int8 *)(v5 + 16);
  uint64_t v24 = v64;
  double v23 = v65;
  v73[0] = v64;
  v73[1] = a3;
  uint64_t v25 = v60;
  *(double *)&v73[2] = v65;
  v73[3] = v60;
  v73[4] = v20;
  v73[5] = v21;
  char v74 = v22;
  uint64_t v75 = v18;
  long long v76 = v19;
  sub_19EE81A70((uint64_t)v73);
  sub_19EE83A30((uint64_t)v73, (uint64_t)v77);
  uint64_t v26 = *(void **)(v17 + 32);
  swift_bridgeObjectRetain();
  objc_msgSend(v26, sel_lock);
  sub_19EE836C4(v17, (uint64_t)v77);
  uint64_t v56 = 0;
  objc_msgSend(v26, sel_unlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v61 = (char *)v20;
  int v58 = v22;
  uint64_t v27 = sub_19F1DCD2C();
  double v71 = v23;
  uint64_t v72 = v25;
  uint64_t v28 = v25;
  unint64_t v29 = a3;
  sub_19EE83F28(v27, v30, v24, a3, (uint64_t *)&v71);
  swift_bridgeObjectRelease();
  if (qword_1EB390590 != -1) {
    swift_once();
  }
  uint64_t v31 = v68;
  uint64_t v32 = __swift_project_value_buffer(v68, (uint64_t)qword_1EB394D30);
  uint64_t v33 = v66;
  uint64_t v34 = v67;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v67 + 16))(v66, v32, v31);
  sub_19F1DBFCC();
  uint64_t v35 = v69;
  sub_19F1DB86C();
  sub_19EE83670();
  sub_19EE84120();
  sub_19EE83660(v36);
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_19F1DB87C();
  int v38 = sub_19F1DC99C();
  if ((sub_19F1DCA6C() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v35, v62);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v34 + 8))(v33, v31);
  }
  uint64_t v55 = v37;
  int v54 = v38;
  if (v58)
  {
    if ((unint64_t)v61 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v61 >> 11 == 27)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      if (v61 >> 16 <= 0x10)
      {
        uint64_t v39 = v28;
        uint64_t v61 = sub_19F0EB600();
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
  if (!v61)
  {
LABEL_29:
    uint64_t result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  uint64_t v39 = v28;
LABEL_18:
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v63 + 16))(v59, v69, v62);
  uint64_t v41 = swift_slowAlloc();
  uint64_t v42 = swift_slowAlloc();
  *(_DWORD *)uint64_t v41 = 134218754;
  uint64_t v43 = *(void *)&v65;
  uint64_t v70 = v42;
  double v71 = v65;
  uint64_t v72 = v39;
  sub_19F10F5E0();
  double v71 = v44;
  sub_19F1DCB3C();
  *(_WORD *)(v41 + 12) = 2080;
  swift_bridgeObjectRetain();
  double v71 = COERCE_DOUBLE(sub_19EEAD23C(v64, v29, &v70));
  sub_19F1DCB3C();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v41 + 22) = 2048;
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  double v71 = (double)v39 / *(double *)&qword_1EB392B98 + (double)v43;
  sub_19F1DCB3C();
  *(_WORD *)(v41 + 32) = 2080;
  uint64_t v45 = v62;
  uint64_t v46 = v68;
  unint64_t v47 = 0xE900000000000064;
  uint64_t v48 = v55;
  if ((_BYTE)v57)
  {
    if (v57 == 1)
    {
      uint64_t v49 = 0x756F72676B636162;
      unint64_t v47 = 0xEA0000000000646ELL;
    }
    else
    {
      uint64_t v49 = 0x6669636570736E75;
      unint64_t v47 = 0xEB00000000646569;
    }
  }
  else
  {
    uint64_t v49 = 0x657373696D736964;
  }
  double v71 = COERCE_DOUBLE(sub_19EEAD23C(v49, v47, &v70));
  sub_19F1DCB3C();
  swift_bridgeObjectRelease();
  os_log_t v50 = v59;
  os_signpost_id_t v51 = sub_19F1DB83C();
  _os_signpost_emit_with_name_impl(&dword_19EE14000, v48, (os_signpost_type_t)v54, v51, v61, "%{signpost.description:event_time}lluid=%s, instant=%f, value=%s", (uint8_t *)v41, 0x2Au);
  swift_arrayDestroy();
  MEMORY[0x19F3C9470](v42, -1, -1);
  MEMORY[0x19F3C9470](v41, -1, -1);

  int v52 = *(void (**)(unsigned char *, uint64_t))(v63 + 8);
  v52(v69, v45);
  (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v66, v46);
  return ((uint64_t (*)(unsigned char *, uint64_t))v52)(v50, v45);
}

Swift::Void __swiftcall PageRenderMetricsPresenter.updateContext(merging:)(JetEngine::MetricsFieldsContext merging)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_19EFD74F4(v3);
  os_unfair_lock_unlock(v4);
  swift_release();
}

uint64_t sub_19EFD6888(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE9884C(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_19EE987EC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  }
  sub_19EE987EC(a1, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  uint64_t v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0);
  uint64_t v13 = &v7[v12[12]];
  uint64_t v14 = &v7[v12[16]];
  int v35 = *v14;
  uint64_t v15 = *((void *)v14 + 1);
  uint64_t v16 = *((void *)v14 + 3);
  uint64_t v33 = *((void *)v14 + 2);
  uint64_t v34 = v15;
  uint64_t v31 = *(void *)&v7[v12[20]];
  uint64_t v32 = v16;
  sub_19EE94464((uint64_t)v7, (uint64_t)v10);
  long long v17 = *((_OWORD *)v13 + 13);
  long long v38 = *((_OWORD *)v13 + 12);
  long long v39 = v17;
  char v40 = v13[224];
  long long v18 = *((_OWORD *)v13 + 9);
  v37[8] = *((_OWORD *)v13 + 8);
  v37[9] = v18;
  long long v19 = *((_OWORD *)v13 + 11);
  v37[10] = *((_OWORD *)v13 + 10);
  v37[11] = v19;
  long long v20 = *((_OWORD *)v13 + 5);
  v37[4] = *((_OWORD *)v13 + 4);
  v37[5] = v20;
  long long v21 = *((_OWORD *)v13 + 7);
  v37[6] = *((_OWORD *)v13 + 6);
  v37[7] = v21;
  long long v22 = *((_OWORD *)v13 + 1);
  v37[0] = *(_OWORD *)v13;
  v37[1] = v22;
  long long v23 = *((_OWORD *)v13 + 3);
  v37[2] = *((_OWORD *)v13 + 2);
  void v37[3] = v23;
  sub_19EE94278((uint64_t)v37, (uint64_t)v36);
  uint64_t v24 = *((void *)&v38 + 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = v24;
  sub_19F05CB14(a2, (uint64_t)sub_19EEBD6C0, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v41);
  if (v2)
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    uint64_t v26 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EE941BC((uint64_t)v37);
    swift_bridgeObjectRelease();
    v36[25] = v26;
    uint64_t v27 = a1 + v12[12];
    uint64_t v28 = a1 + v12[16];
    uint64_t v29 = v12[20];
    sub_19EE94464((uint64_t)v10, a1);
    sub_19EE94278((uint64_t)v36, v27);
    *(unsigned char *)uint64_t v28 = v35;
    uint64_t v30 = v33;
    *(void *)(v28 + 8) = v34;
    *(void *)(v28 + 16) = v30;
    *(void *)(v28 + 24) = v32;
    *(void *)(a1 + v29) = v31;
    swift_storeEnumTagMultiPayload();
    return sub_19EE941BC((uint64_t)v36);
  }
  return result;
}

Swift::Void __swiftcall PageRenderMetricsPresenter.viewWillDisappear(forReason:)(JetEngine::ViewWillDisappearReason forReason)
{
  uint64_t v2 = *(void *)forReason.rawValue._countAndFlagsBits;
  uint64_t v3 = *(void *)(forReason.rawValue._countAndFlagsBits + 8);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)MEMORY[0x1E4FBBAB0];
  uint64_t v6 = v4 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v4 + 16);
  uint64_t v7 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(void *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_19EFD7510(v6);
  os_unfair_lock_unlock(v7);
  uint64_t v8 = swift_release();
  if (v2 == 0xD000000000000019 && v3 == 0x800000019F26C0F0
    || (uint64_t v8 = sub_19F1DD44C(), (v8 & 1) != 0)
    || v2 == 0x7369447465656873 && v3 == 0xEE0064657373696DLL
    || (uint64_t v8 = sub_19F1DD44C(), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(v1 + 32);
    MEMORY[0x1F4188790](v8);
    uint64_t v10 = v9 + *(void *)(*v5 + *(void *)v9 + 16);
    uint64_t v11 = (os_unfair_lock_s *)(v9 + ((*(unsigned int *)(*(void *)v9 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v11);
    sub_19EFD752C(v10);
    os_unfair_lock_unlock(v11);
    swift_release();
  }
}

uint64_t sub_19EFD6DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE9884C(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for PageRenderMetricsPresenter.State;
    uint64_t v13 = (uint64_t)v8;
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0);
    uint64_t v15 = (uint64_t)&v8[*(int *)(v14 + 48)];
    int v16 = v8[*(int *)(v14 + 64)];
    swift_unknownObjectRelease();
    sub_19EE94464((uint64_t)v8, (uint64_t)v11);
    sub_19EE941BC(v15);
    if (v16 == 1)
    {
      if (qword_1EB3905F0 != -1) {
        swift_once();
      }
      long long v26 = xmmword_1EB394D98;
      char v27 = byte_1EB394DA8;
      uint64_t v28 = qword_1EB394DB0;
      char v29 = byte_1EB394DB8;
      long long v17 = (uint64_t *)&v11[*(int *)(v9 + 24)];
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      swift_bridgeObjectRetain();
      static MonotonicTime.now.getter(&v25);
      timespec v24 = v25;
      PageRenderField<>.callAsFunction(for:at:)(v19, v18, (double *)&v24.tv_sec);
      swift_bridgeObjectRelease();
      if (a2 == 0xD000000000000019 && a3 == 0x800000019F26C0F0
        || (sub_19F1DD44C() & 1) != 0
        || a2 == 0x7369447465656873 && a3 == 0xEE0064657373696DLL
        || (sub_19F1DD44C() & 1) != 0)
      {
        *(void *)&long long v26 = "pageInterruptReason";
        *((void *)&v26 + 1) = 19;
        char v27 = 2;
        uint64_t v28 = 0;
        char v29 = 1;
        swift_bridgeObjectRetain();
        static MonotonicTime.now.getter(&v25);
        uint64_t tv_nsec = v25.tv_nsec;
        __darwin_time_t tv_sec = v25.tv_sec;
        int v22 = 0;
      }
      else if (a2 == 0x756F72676B636162 && a3 == 0xEA0000000000646ELL || (sub_19F1DD44C() & 1) != 0)
      {
        *(void *)&long long v26 = "pageInterruptReason";
        *((void *)&v26 + 1) = 19;
        char v27 = 2;
        uint64_t v28 = 0;
        char v29 = 1;
        swift_bridgeObjectRetain();
        static MonotonicTime.now.getter(&v25);
        uint64_t tv_nsec = v25.tv_nsec;
        __darwin_time_t tv_sec = v25.tv_sec;
        int v22 = 1;
      }
      else
      {
        *(void *)&long long v26 = "pageInterruptReason";
        *((void *)&v26 + 1) = 19;
        char v27 = 2;
        uint64_t v28 = 0;
        char v29 = 1;
        swift_bridgeObjectRetain();
        static MonotonicTime.now.getter(&v25);
        uint64_t tv_nsec = v25.tv_nsec;
        __darwin_time_t tv_sec = v25.tv_sec;
        int v22 = 2;
      }
      sub_19EFD60C0(v22, v19, v18, tv_sec, tv_nsec);
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = type metadata accessor for PageRenderEvent;
    uint64_t v13 = (uint64_t)v11;
  }
  return sub_19EE987EC(v13, (uint64_t (*)(void))v12);
}

uint64_t sub_19EFD71C0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_19EFD9C84(v2);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

Swift::Void __swiftcall PageRenderMetricsPresenter.didEnterBackground()()
{
  v2[0] = 0x756F72676B636162;
  v2[1] = 0xEA0000000000646ELL;
  uint64_t v1 = v2;
  PageRenderMetricsPresenter.viewWillDisappear(forReason:)(*(JetEngine::ViewWillDisappearReason *)(&v0 - 1));
}

void sub_19EFD72D8(uint64_t a1, uint64_t a2)
{
  v3[0] = 0x756F72676B636162;
  v3[1] = 0xEA0000000000646ELL;
  uint64_t v2 = v3;
  PageRenderMetricsPresenter.viewWillDisappear(forReason:)(*(JetEngine::ViewWillDisappearReason *)(&a2 - 1));
}

uint64_t PageRenderMetricsPresenter.eventID.getter()
{
  uint64_t v1 = type metadata accessor for PageRenderEvent();
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v5 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v5 + 16);
  uint64_t v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(void *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_19EE185A0(v6, (uint64_t)v4);
  os_unfair_lock_unlock(v7);
  swift_release();
  uint64_t v8 = *(void *)&v4[*(int *)(v2 + 32)];
  swift_bridgeObjectRetain();
  sub_19EE987EC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  return v8;
}

uint64_t sub_19EFD7454()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19EFD748C()
{
  return sub_19EFD4880();
}

uint64_t sub_19EFD74A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_19EFD74D8(uint64_t a1)
{
  return sub_19EFD5838(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19EFD74F4(uint64_t a1)
{
  return sub_19EFD6888(a1, *(void *)(v1 + 16));
}

uint64_t sub_19EFD7510(uint64_t a1)
{
  return sub_19EFD6DBC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19EFD752C(uint64_t a1)
{
  return sub_19EFD52B0(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_19EFD7550@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = -[_JEAtomicFlag currentValue](*(void *)(*(void *)a1 + 24));
  *a2 = result;
  return result;
}

uint64_t sub_19EFD7580(unsigned __int8 *a1, uint64_t a2)
{
  return -[_JEAtomicFlag setCurrentValue:](*(void *)(*(void *)a2 + 24), *a1);
}

uint64_t method lookup function for PageRenderMetricsPresenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PageRenderMetricsPresenter);
}

uint64_t dispatch thunk of PageRenderMetricsPresenter.__allocating_init(eventID:topic:pipeline:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PageRenderMetricsPresenter.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t getEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityStart(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7F) {
    goto LABEL_17;
  }
  if (a2 + 129 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 129) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 129;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityStart(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 129 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 129) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7E)
  {
    unsigned int v6 = ((a2 - 127) >> 8) + 1;
    *uint64_t result = a2 - 127;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EFD7748);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
        break;
    }
  }
  return result;
}

uint64_t sub_19EFD7770(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_19EFD777C(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

id sub_19EFD778C(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3 || a5 == 1)
  {
    return result;
  }
  else if (!a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t initializeWithCopy for PageRenderMetricsPresenter.ActivityEnd(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_19EFD778C(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PageRenderMetricsPresenter.ActivityEnd(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_19EFD778C(*(id *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_19EE207A8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PageRenderMetricsPresenter.ActivityEnd(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_19EE207A8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityEnd(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityEnd(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19EFD79E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t destroy for PageRenderMetricsPresenter.Configuration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 64);
  if (*(void *)(a1 + 128)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 104);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 144);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for PageRenderMetricsPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v6 = a2 + 64;
  long long v7 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v7;
  uint64_t v8 = v7;
  char v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1 + 64, v6, v8);
  uint64_t v10 = (_OWORD *)(a1 + 104);
  uint64_t v11 = (_OWORD *)(a2 + 104);
  uint64_t v12 = *(void *)(a2 + 128);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = v12;
    *(void *)(a1 + 136) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 120);
    *uint64_t v10 = *v11;
    *(_OWORD *)(a1 + 120) = v14;
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
  }
  long long v15 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 168) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 144, a2 + 144);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v16 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v16;
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_WORD *)(a1 + 209) = *(_WORD *)(a2 + 209);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PageRenderMetricsPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  uint64_t v4 = *(void *)(a2 + 128);
  if (!*(void *)(a1 + 128))
  {
    if (v4)
    {
      *(void *)(a1 + 128) = v4;
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 104, a2 + 104);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 104);
    long long v6 = *(_OWORD *)(a2 + 120);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v5;
    *(_OWORD *)(a1 + 120) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 104);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 104), (uint64_t *)(a2 + 104));
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 144), (uint64_t *)(a2 + 144));
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  *(unsigned char *)(a1 + 210) = *(unsigned char *)(a2 + 210);
  long long v7 = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v7;
  return a1;
}

__n128 __swift_memcpy233_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(_OWORD *)(a1 + 217) = *(long long *)((char *)a2 + 217);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for PageRenderMetricsPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 64);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  if (*(void *)(a1 + 128)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 104);
  }
  long long v7 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v7;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 144);
  long long v8 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v8;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  *(unsigned char *)(a1 + 210) = *(unsigned char *)(a2 + 210);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderMetricsPresenter.Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 233)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderMetricsPresenter.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 232) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 233) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 233) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageRenderMetricsPresenter.Configuration()
{
  return &type metadata for PageRenderMetricsPresenter.Configuration;
}

uint64_t dispatch thunk of _PageRenderMetricsPresenterAccessibility.init(_pageRenderAccessibility:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _PageRenderMetricsPresenterAccessibility._startPageLoad()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of _PageRenderMetricsPresenterAccessibility._endPageLoad()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of _PageRenderMetricsPresenterExtendedLaunchSupport.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _PageRenderMetricsPresenterExtendedLaunchSupport.finishExtendedLaunch()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t getEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityCounter(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[32]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityCounter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

uint64_t assignWithCopy for PageRenderMetricsPresenter.Poster(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  uint64_t v4 = *(void *)(a2 + 112);
  if (!*(void *)(a1 + 112))
  {
    if (v4)
    {
      *(void *)(a1 + 112) = v4;
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 88, a2 + 88);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 88);
    long long v6 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(_OWORD *)(a1 + 88) = v5;
    *(_OWORD *)(a1 + 104) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 88);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 128), (uint64_t *)(a2 + 128));
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_retain();
  swift_release();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  return a1;
}

__n128 __swift_memcpy225_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(unsigned char *)(a1 + 224) = *((unsigned char *)a2 + 224);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for PageRenderMetricsPresenter.Poster(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  if (*(void *)(a1 + 112)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 88);
  }
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v6;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 128);
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_release();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_release();
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderMetricsPresenter.Poster(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 225)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderMetricsPresenter.Poster(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 224) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 225) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 225) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t *sub_19EFD84F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_19F1DB57C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    uint64_t v9 = type metadata accessor for PageRenderEvent();
    uint64_t v10 = *(int *)(v9 + 20);
    long long v11 = *(void **)((char *)a2 + v10);
    id v12 = v11;
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
    uint64_t v13 = *(int *)(v9 + 24);
    long long v14 = (uint64_t *)((char *)a1 + v13);
    long long v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *long long v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0);
      uint64_t v19 = *(int *)(v18 + 48);
      long long v20 = (char *)a1 + v19;
      long long v21 = (char *)a2 + v19;
      *(void *)long long v20 = *(uint64_t *)((char *)a2 + v19);
      *(_OWORD *)(v20 + 8) = *(_OWORD *)((char *)a2 + v19 + 8);
      uint64_t v22 = *(uint64_t *)((char *)a2 + v19 + 32);
      *((void *)v20 + 3) = *(uint64_t *)((char *)a2 + v19 + 24);
      *((void *)v20 + 4) = v22;
      *((void *)v20 + 5) = *(uint64_t *)((char *)a2 + v19 + 40);
      uint64_t v40 = (uint64_t)a1 + v19 + 48;
      uint64_t v41 = v18;
      long long v23 = *(_OWORD *)((char *)a2 + v19 + 72);
      *(_OWORD *)(v20 + 72) = v23;
      uint64_t v24 = v23;
      uint64_t v39 = (uint64_t)a2 + v19 + 48;
      timespec v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25(v40, v39, v24);
      long long v26 = v20 + 88;
      char v27 = v21 + 88;
      uint64_t v28 = *((void *)v21 + 14);
      if (v28)
      {
        uint64_t v29 = *((void *)v21 + 15);
        *((void *)v20 + 14) = v28;
        *((void *)v20 + 15) = v29;
        (**(void (***)(_OWORD *, _OWORD *))(v28 - 8))(v26, v27);
      }
      else
      {
        long long v30 = *(_OWORD *)(v21 + 104);
        *long long v26 = *v27;
        *(_OWORD *)(v20 + 104) = v30;
        *((void *)v20 + 15) = *((void *)v21 + 15);
      }
      long long v31 = *(_OWORD *)(v21 + 152);
      *(_OWORD *)(v20 + 152) = v31;
      (**(void (***)(uint64_t, uint64_t))(v31 - 8))((uint64_t)(v20 + 128), (uint64_t)(v21 + 128));
      v20[168] = v21[168];
      uint64_t v32 = *((void *)v21 + 23);
      *((void *)v20 + 22) = *((void *)v21 + 22);
      *((void *)v20 + 23) = v32;
      v20[192] = v21[192];
      v20[193] = v21[193];
      uint64_t v33 = *((void *)v21 + 26);
      *((void *)v20 + 25) = *((void *)v21 + 25);
      *((void *)v20 + 26) = v33;
      *((void *)v20 + 27) = *((void *)v21 + 27);
      v20[224] = v21[224];
      uint64_t v34 = *(int *)(v41 + 64);
      int v35 = (_OWORD *)((char *)a1 + v34);
      uint64_t v36 = (_OWORD *)((char *)a2 + v34);
      long long v37 = v36[1];
      *int v35 = *v36;
      v35[1] = v37;
      *(uint64_t *)((char *)a1 + *(int *)(v41 + 80)) = *(uint64_t *)((char *)a2 + *(int *)(v41 + 80));
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_19EFD8824(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_19EE987EC(a1, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_19F1DB57C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    uint64_t v6 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
    uint64_t v7 = type metadata accessor for PageRenderEvent();
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = *(void **)(a2 + v8);
    id v10 = v9;
    *(void *)(a1 + v8) = v9;
    uint64_t v11 = *(int *)(v7 + 24);
    id v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    void *v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v32 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0);
      uint64_t v14 = v32[12];
      uint64_t v15 = a1 + v14;
      uint64_t v16 = a2 + v14;
      *(void *)uint64_t v15 = *(void *)(a2 + v14);
      *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
      *(_OWORD *)(v15 + 16) = *(_OWORD *)(a2 + v14 + 16);
      *(void *)(v15 + 32) = *(void *)(a2 + v14 + 32);
      *(void *)(v15 + 40) = *(void *)(a2 + v14 + 40);
      uint64_t v31 = a1 + v14 + 48;
      uint64_t v17 = a2 + v14 + 48;
      uint64_t v18 = *(void *)(a2 + v14 + 72);
      *(void *)(v15 + 72) = v18;
      *(void *)(v15 + 80) = *(void *)(a2 + v14 + 80);
      uint64_t v19 = **(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v31, v17, v18);
      long long v20 = (_OWORD *)(v15 + 88);
      long long v21 = (long long *)(v16 + 88);
      uint64_t v22 = *(void *)(v16 + 112);
      if (v22)
      {
        *(void *)(v15 + 112) = v22;
        *(void *)(v15 + 120) = *(void *)(v16 + 120);
        (**(void (***)(_OWORD *, long long *))(v22 - 8))(v20, v21);
      }
      else
      {
        long long v23 = *v21;
        long long v24 = *(_OWORD *)(v16 + 104);
        *(void *)(v15 + 120) = *(void *)(v16 + 120);
        *long long v20 = v23;
        *(_OWORD *)(v15 + 104) = v24;
      }
      uint64_t v25 = *(void *)(v16 + 152);
      *(void *)(v15 + 152) = v25;
      *(void *)(v15 + 160) = *(void *)(v16 + 160);
      (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v15 + 128, v16 + 128);
      *(unsigned char *)(v15 + 168) = *(unsigned char *)(v16 + 168);
      *(void *)(v15 + 176) = *(void *)(v16 + 176);
      *(void *)(v15 + 184) = *(void *)(v16 + 184);
      *(unsigned char *)(v15 + 192) = *(unsigned char *)(v16 + 192);
      *(unsigned char *)(v15 + 193) = *(unsigned char *)(v16 + 193);
      *(void *)(v15 + 200) = *(void *)(v16 + 200);
      *(void *)(v15 + 208) = *(void *)(v16 + 208);
      *(void *)(v15 + 216) = *(void *)(v16 + 216);
      *(unsigned char *)(v15 + 224) = *(unsigned char *)(v16 + 224);
      uint64_t v26 = v32[16];
      char v27 = (_OWORD *)(a1 + v26);
      uint64_t v28 = (_OWORD *)(a2 + v26);
      long long v29 = v28[1];
      _OWORD *v27 = *v28;
      v27[1] = v29;
      *(void *)(a1 + v32[20]) = *(void *)(a2 + v32[20]);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_19EFD8B50(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  uint64_t v6 = type metadata accessor for MonotonicTimeReference();
  *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
  uint64_t v7 = type metadata accessor for PageRenderEvent();
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(_OWORD *)(a1 + *(int *)(v7 + 24)) = *(_OWORD *)(a2 + *(int *)(v7 + 24));
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0);
    uint64_t v9 = v8[12];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    *(unsigned char *)(v10 + 224) = *(unsigned char *)(v11 + 224);
    long long v12 = *(_OWORD *)(v11 + 208);
    *(_OWORD *)(v10 + 192) = *(_OWORD *)(v11 + 192);
    *(_OWORD *)(v10 + 208) = v12;
    long long v13 = *(_OWORD *)(v11 + 144);
    *(_OWORD *)(v10 + 128) = *(_OWORD *)(v11 + 128);
    *(_OWORD *)(v10 + 144) = v13;
    long long v14 = *(_OWORD *)(v11 + 176);
    *(_OWORD *)(v10 + 160) = *(_OWORD *)(v11 + 160);
    *(_OWORD *)(v10 + 176) = v14;
    long long v15 = *(_OWORD *)(v11 + 80);
    *(_OWORD *)(v10 + 64) = *(_OWORD *)(v11 + 64);
    *(_OWORD *)(v10 + 80) = v15;
    long long v16 = *(_OWORD *)(v11 + 112);
    *(_OWORD *)(v10 + 96) = *(_OWORD *)(v11 + 96);
    *(_OWORD *)(v10 + 112) = v16;
    long long v17 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = v17;
    long long v18 = *(_OWORD *)(v11 + 48);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
    *(_OWORD *)(v10 + 48) = v18;
    uint64_t v19 = v8[16];
    long long v20 = (_OWORD *)(a1 + v19);
    long long v21 = (_OWORD *)(a2 + v19);
    long long v22 = v21[1];
    *long long v20 = *v21;
    v20[1] = v22;
    *(void *)(a1 + v8[20]) = *(void *)(a2 + v8[20]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_19EFD8C9C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_19EE987EC(a1, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_19F1DB57C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
    uint64_t v7 = type metadata accessor for PageRenderEvent();
    *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
    *(_OWORD *)(a1 + *(int *)(v7 + 24)) = *(_OWORD *)(a2 + *(int *)(v7 + 24));
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB3905C0);
      uint64_t v9 = v8[12];
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      *(unsigned char *)(v10 + 224) = *(unsigned char *)(v11 + 224);
      long long v12 = *(_OWORD *)(v11 + 208);
      *(_OWORD *)(v10 + 192) = *(_OWORD *)(v11 + 192);
      *(_OWORD *)(v10 + 208) = v12;
      long long v13 = *(_OWORD *)(v11 + 144);
      *(_OWORD *)(v10 + 128) = *(_OWORD *)(v11 + 128);
      *(_OWORD *)(v10 + 144) = v13;
      long long v14 = *(_OWORD *)(v11 + 176);
      *(_OWORD *)(v10 + 160) = *(_OWORD *)(v11 + 160);
      *(_OWORD *)(v10 + 176) = v14;
      long long v15 = *(_OWORD *)(v11 + 80);
      *(_OWORD *)(v10 + 64) = *(_OWORD *)(v11 + 64);
      *(_OWORD *)(v10 + 80) = v15;
      long long v16 = *(_OWORD *)(v11 + 112);
      *(_OWORD *)(v10 + 96) = *(_OWORD *)(v11 + 96);
      *(_OWORD *)(v10 + 112) = v16;
      long long v17 = *(_OWORD *)(v11 + 16);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *(_OWORD *)(v10 + 16) = v17;
      long long v18 = *(_OWORD *)(v11 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
      *(_OWORD *)(v10 + 48) = v18;
      uint64_t v19 = v8[16];
      long long v20 = (_OWORD *)(a1 + v19);
      long long v21 = (_OWORD *)(a2 + v19);
      long long v22 = v21[1];
      *long long v20 = *v21;
      v20[1] = v22;
      *(void *)(a1 + v8[20]) = *(void *)(a2 + v8[20]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PageIntentInstrumentation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PageIntentInstrumentation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_19EFD8E60()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_19EFD8E70(uint64_t a1, void (*a2)(long long *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 88);
  long long v11 = *(_OWORD *)a1;
  uint64_t v12 = v5;
  uint64_t v13 = v6;
  long long v9 = *(_OWORD *)(a1 + 48);
  long long v14 = *(_OWORD *)(a1 + 32);
  long long v15 = v9;
  char v16 = v7;
  long long v17 = *(_OWORD *)(a1 + 72);
  uint64_t v18 = v8;
  return sub_19F15F3F8(&v11, a2, a3, a4, a5);
}

uint64_t sub_19EFD8EC4(void *a1, uint64_t a2, uint64_t a3)
{
  void v15[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
  v15[4] = &protocol witness table for OS_dispatch_queue;
  v15[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391BD0);
  uint64_t v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 16) = v7;
  *(void *)(v6 + 24) = v8;
  *(void *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 40) = 0;
  sub_19EEC4154((uint64_t)v15, (uint64_t)v14);
  long long v9 = (void *)swift_allocObject();
  long long v9[2] = a2;
  v9[3] = a3;
  void v9[4] = v6;
  sub_19EEBB420(v14, (uint64_t)(v9 + 5));
  v12[0] = sub_19EFD979C;
  v12[1] = v9;
  v12[2] = sub_19EFD97AC;
  v12[3] = v6;
  sub_19EEC4154((uint64_t)v15, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  id v10 = a1;
  swift_retain();
  swift_retain();
  sub_19EF54DE4((uint64_t)v12);
  sub_19EEBD664((uint64_t)v12, &qword_1EB3906F0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v6;
}

uint64_t sub_19EFD9044()
{
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_19F24EB80;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F24EAD0;
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = 0xD000000000000049;
  unint64_t v12 = 0x800000019F26C1D0;
  long long v9 = 0u;
  long long v10 = 0u;
  id v4 = v0;
  sub_19EEC3E70((uint64_t)&v11, (uint64_t)&v9);
  *(unsigned char *)(v2 + 64) = 0;
  long long v5 = v10;
  *(_OWORD *)(v2 + 32) = v9;
  *(_OWORD *)(v2 + 48) = v5;
  *(void *)(v1 + 32) = v2;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  uint64_t v13 = v3;
  unint64_t v11 = 0xD00000000000003ALL;
  unint64_t v12 = 0x800000019F26C220;
  long long v9 = 0u;
  long long v10 = 0u;
  sub_19EEC3E70((uint64_t)&v11, (uint64_t)&v9);
  *(unsigned char *)(v6 + 64) = 0;
  long long v7 = v10;
  *(_OWORD *)(v6 + 32) = v9;
  *(_OWORD *)(v6 + 48) = v7;
  *(void *)(v1 + 40) = v6;
  *(void *)&long long v9 = v4;
  LOBYTE(v11) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v1, (JetEngine::LogMessageLevel)&v11);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFD91E0()
{
  uint64_t v1 = type metadata accessor for PageRenderEvent();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  if (*(void *)(v0 + 128)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);
  }
  uint64_t v4 = (v2 + 241) & ~v2;
  unint64_t v5 = ((v3 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 144);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v4;
  uint64_t v7 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, v5, v2 | 7);
}

uint64_t sub_19EFD9354()
{
  uint64_t v1 = *(void *)(type metadata accessor for PageRenderEvent() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 241) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_19EFD2254(v0 + 16, v0 + v2, v3);
}

uint64_t sub_19EFD93E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  if (*(void *)(v0 + 128)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 144);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 241, 7);
}

uint64_t sub_19EFD9474(uint64_t *a1, uint64_t *a2)
{
  return sub_19EFD30B8(a1, a2, v2 + 16);
}

uint64_t sub_19EFD947C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19EFD94B4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, a1 + 48);
}

uint64_t sub_19EFD94E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PageRenderEvent() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_19EFD3268(a1, v1 + v4, v5);
}

uint64_t objectdestroy_33Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for PageRenderEvent() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, v5, v4);
}

uint64_t sub_19EFD9698(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PageRenderEvent() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_19EFD3684(a1, v1 + v4, v5);
}

id sub_19EFD9734(uint64_t a1)
{
  return sub_19EFE2364(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_19EFD9754()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19EFD979C(uint64_t a1)
{
  return sub_19EFD8E70(a1, *(void (**)(long long *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

uint64_t sub_19EFD97AC(uint64_t a1)
{
  return sub_19F12C404(a1, v1);
}

uint64_t sub_19EFD97B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_19EFD97F4()
{
  uint64_t v1 = type metadata accessor for PageRenderEvent();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  if (*(void *)(v0 + 144)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
  }
  uint64_t v4 = (v2 + 257) & ~v2;
  unint64_t v5 = ((v3 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 160);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v4;
  uint64_t v7 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, v5, v2 | 7);
}

uint64_t sub_19EFD9970()
{
  uint64_t v2 = *(void *)(type metadata accessor for PageRenderEvent() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 257) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + 32;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_19EEB8A6C;
  v7[39] = v5;
  unsigned char v7[40] = v6;
  v7[38] = v4;
  return MEMORY[0x1F4188298](sub_19EFD24BC, 0, 0);
}

unint64_t sub_19EFD9A90()
{
  unint64_t result = qword_1E9472230;
  if (!qword_1E9472230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9472230);
  }
  return result;
}

uint64_t sub_19EFD9AE4(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_19EFD9B34()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

unsigned char *storeEnumTagSinglePayload for PageRenderMetricsPresenter.Poster.PostError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19EFD9BE0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PageRenderMetricsPresenter.Poster.PostError()
{
  return &type metadata for PageRenderMetricsPresenter.Poster.PostError;
}

ValueMetadata *type metadata accessor for _PageRenderMetricsPresenterNoAccessibility()
{
  return &type metadata for _PageRenderMetricsPresenterNoAccessibility;
}

unint64_t sub_19EFD9C2C()
{
  unint64_t result = qword_1E9472278;
  if (!qword_1E9472278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472278);
  }
  return result;
}

uint64_t sub_19EFD9C84(uint64_t a1)
{
  return sub_19EEDC028(a1);
}

id sub_19EFD9CA4(uint64_t a1)
{
  return sub_19EFD9734(a1);
}

uint64_t sub_19EFD9CBC(uint64_t a1)
{
  return sub_19EFD752C(a1);
}

uint64_t JSBytecodeSource.supportsBytecodeCaching.getter()
{
  return 1;
}

id JSBytecodeSource.isUsingBytecodeCache.getter()
{
  return objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20)), sel_isUsingBytecodeCache);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSBytecodeSource.cacheBytecode()()
{
  v4[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20));
  v4[0] = 0;
  if (objc_msgSend(v1, sel_cacheBytecodeWithError_, v4))
  {
    id v2 = v4[0];
  }
  else
  {
    id v3 = v4[0];
    sub_19F1DB19C();

    swift_willThrow();
  }
}

id sub_19EFD9DC0(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + *(int *)(a1 + 20)), sel_isUsingBytecodeCache);
}

void sub_19EFD9DE8()
{
}

unsigned __int8 *sub_19EFD9E00()
{
  return sub_19F16E5A0(v0);
}

uint64_t Unstable.JSBytecodeSource.init(fileURL:sourceURL:cacheURL:virtualMachine:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  id v48 = a4;
  uint64_t v51 = a3;
  int v52 = a2;
  uint64_t v41 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v46 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)&v40 - v9;
  uint64_t v11 = sub_19F1DB34C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  double v44 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v43 = (char *)&v40 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x1F4188790](v19);
  long long v21 = (char *)&v40 - v20;
  uint64_t v40 = type metadata accessor for JSBytecodeSource(0);
  double v22 = MEMORY[0x1F4188790](v40);
  long long v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t, double))(v12 + 16);
  os_log_t v50 = a1;
  v25(v21, a1, v11, v22);
  ((void (*)(char *, char *, uint64_t))v25)(v18, v52, v11);
  uint64_t v26 = (uint64_t)v10;
  sub_19EE628D4(v51, (uint64_t)v10);
  unint64_t v47 = v24;
  ((void (*)(char *, char *, uint64_t))v25)(v24, v21, v11);
  uint64_t v42 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB390C28);
  uint64_t v27 = (uint64_t)v43;
  ((void (*)(char *, char *, uint64_t))v25)(v43, v21, v11);
  uint64_t v28 = (uint64_t)v44;
  uint64_t v45 = v18;
  ((void (*)(char *, char *, uint64_t))v25)(v44, v18, v11);
  uint64_t v29 = v26;
  uint64_t v30 = v46;
  sub_19EE628D4(v26, v46);
  id v31 = v48;
  uint64_t v32 = v49;
  id v33 = sub_19EE3A4B0(0, v27, v28, v30, (uint64_t)v31);
  if (v32)
  {

    sub_19EE6293C(v26);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v12 + 8);
    v34(v45, v11);
    v34(v21, v11);
    v34(v47, v11);
    sub_19EE6293C(v51);
    v34(v52, v11);
    return ((uint64_t (*)(char *, uint64_t))v34)(v50, v11);
  }
  else
  {
    id v36 = v33;

    sub_19EE6293C(v29);
    long long v37 = *(void (**)(char *, uint64_t))(v12 + 8);
    v37(v45, v11);
    v37(v21, v11);
    uint64_t v38 = v40;
    uint64_t v39 = (uint64_t)v47;
    *(void *)&v47[*(int *)(v40 + 20)] = v36;
    *(void *)(v39 + *(int *)(v38 + 24)) = v31;
    sub_19EE6293C(v51);
    v37(v52, v11);
    v37(v50, v11);
    return sub_19EFDA344(v39, v41);
  }
}

id Unstable.JSBytecodeSource.isUsingBytecodeCache.getter()
{
  return objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20)), sel_isUsingBytecodeCache);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Unstable.JSBytecodeSource.cacheBytecode()()
{
  v4[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20));
  v4[0] = 0;
  if (objc_msgSend(v1, sel_cacheBytecodeWithError_, v4))
  {
    id v2 = v4[0];
  }
  else
  {
    id v3 = v4[0];
    sub_19F1DB19C();

    swift_willThrow();
  }
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Unstable.JSBytecodeSource.evaluate(against:in:)(JSValue_optional against, JSContext in)
{
  return JSBytecodeSource.evaluate(against:in:)(against, in);
}

id sub_19EFDA314()
{
  return objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20)), sel_isUsingBytecodeCache);
}

uint64_t sub_19EFDA344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSBytecodeSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t assignWithCopy for JSBytecodeSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  return a1;
}

uint64_t initializeWithTake for JSBytecodeSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for JSBytecodeSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = *(int *)(a3 + 24);
  id v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  return a1;
}

uint64_t getEnumTagSinglePayload for JSBytecodeSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19EFDA578);
}

uint64_t sub_19EFDA578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for JSBytecodeSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19EFDA64C);
}

uint64_t sub_19EFDA64C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_19F1DB34C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t *_s16JSBytecodeSourceVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for JSBytecodeSource(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_19F1DB34C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    uint64_t v10 = *(int *)(v6 + 24);
    uint64_t v11 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
    id v12 = v9;
    id v13 = v11;
  }
  return a1;
}

void _s16JSBytecodeSourceVwxx(uint64_t a1)
{
  uint64_t v2 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = type metadata accessor for JSBytecodeSource(0);

  uint64_t v4 = *(void **)(a1 + *(int *)(v3 + 24));
}

uint64_t _s16JSBytecodeSourceVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for JSBytecodeSource(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = *(void **)(a2 + v6);
  *(void *)(a1 + v6) = v7;
  uint64_t v8 = *(int *)(v5 + 24);
  uint64_t v9 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v9;
  id v10 = v7;
  id v11 = v9;
  return a1;
}

uint64_t _s16JSBytecodeSourceVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for JSBytecodeSource(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = *(void **)(a2 + v6);
  uint64_t v8 = *(void **)(a1 + v6);
  *(void *)(a1 + v6) = v7;
  id v9 = v7;

  uint64_t v10 = *(int *)(v5 + 24);
  id v11 = *(void **)(a2 + v10);
  id v12 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = v11;
  id v13 = v11;

  return a1;
}

uint64_t _s16JSBytecodeSourceVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for JSBytecodeSource(0);
  *(void *)(a1 + *(int *)(v5 + 20)) = *(void *)(a2 + *(int *)(v5 + 20));
  *(void *)(a1 + *(int *)(v5 + 24)) = *(void *)(a2 + *(int *)(v5 + 24));
  return a1;
}

uint64_t _s16JSBytecodeSourceVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for JSBytecodeSource(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = *(void **)(a1 + v6);
  *(void *)(a1 + v6) = *(void *)(a2 + v6);

  uint64_t v8 = *(int *)(v5 + 24);
  id v9 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);

  return a1;
}

uint64_t _s16JSBytecodeSourceVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19EFDAAE4);
}

uint64_t sub_19EFDAAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSBytecodeSource(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s16JSBytecodeSourceVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19EFDAB64);
}

uint64_t sub_19EFDAB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSBytecodeSource(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for Unstable.JSBytecodeSource(uint64_t a1)
{
  return sub_19EE7A35C(a1, (uint64_t *)&unk_1E9472280);
}

uint64_t sub_19EFDABF4()
{
  uint64_t result = type metadata accessor for JSBytecodeSource(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Device.osVersion.getter()
{
  id v0 = JEGestaltGetSystemVersion();
  uint64_t v1 = sub_19F1DBD7C();

  return v1;
}

uint64_t Device.buildVersion.getter()
{
  id v0 = JEGestaltGetBuildVersion();
  uint64_t v1 = sub_19F1DBD7C();

  return v1;
}

uint64_t Device.systemName.getter()
{
  return 5459817;
}

uint64_t Device.model.getter()
{
  id v0 = JEGestaltGetDeviceModel();
  uint64_t v1 = sub_19F1DBD7C();

  return v1;
}

uint64_t Device.localizedModel.getter()
{
  id v0 = JEGestaltGetLocalizedDeviceModel();
  uint64_t v1 = sub_19F1DBD7C();

  return v1;
}

uint64_t Device.physicalModel.getter()
{
  id v0 = JEGestaltGetProductType();
  uint64_t v1 = sub_19F1DBD7C();

  return v1;
}

uint64_t Device.modelFamily.getter()
{
  id v0 = JEGestaltGetDeviceClass();
  uint64_t v1 = sub_19F1DBD7C();

  return v1;
}

uint64_t Device.marketingFamilyName.getter()
{
  id v0 = JEGestaltGetMarketingDeviceFamilyName();
  uint64_t v1 = sub_19F1DBD7C();

  return v1;
}

uint64_t Device.hasHEVCDecoding.getter()
{
  return JEGestaltHasHEVCDecoding();
}

uint64_t Device._hasWAPICapability.getter()
{
  return JEGestaltHasWAPICapability();
}

id Device.totalSystemCapacity.getter()
{
  id v0 = JEGestaltGetTotalSystemCapacity();
  id v1 = objc_msgSend(v0, sel_integerValue);

  return v1;
}

id Device.totalSystemAvailable.getter()
{
  id v0 = JEGestaltGetTotalSystemAvailable();
  id v1 = objc_msgSend(v0, sel_integerValue);

  return v1;
}

id Device.totalDataCapacity.getter()
{
  id v0 = JEGestaltGetTotalDataCapacity();
  id v1 = objc_msgSend(v0, sel_integerValue);

  return v1;
}

id Device.totalDataAvailable.getter()
{
  id v0 = JEGestaltGetTotalDataAvailable();
  id v1 = objc_msgSend(v0, sel_integerValue);

  return v1;
}

id Device.totalDiskCapacity.getter()
{
  id v0 = JEGestaltGetTotalDiskCapacity();
  id v1 = objc_msgSend(v0, sel_integerValue);

  return v1;
}

uint64_t Device.isAppleSiliconMac.getter()
{
  return JEGestaltIsAppleSiliconMac();
}

uint64_t Device.isStandaloneWatch.getter()
{
  return JEGestaltIsAppleSiliconMac();
}

ValueMetadata *type metadata accessor for Device()
{
  return &type metadata for Device;
}

uint64_t sub_19EFDB078()
{
  uint64_t v0 = sub_19F1DB97C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F38910], v0);
  sub_19F1DB9BC();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t MetricsData._isEqual(to:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(v1 + 8);
  int v7 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v10 = *(void *)(v1 + 40);
  if (!v6)
  {
    char v11 = 0;
    if (v2) {
      return v11 & 1;
    }
LABEL_10:
    if ((v3 ^ v7)) {
      return v11 & 1;
    }
    goto LABEL_11;
  }
  if (!v2)
  {
LABEL_15:
    char v11 = 0;
    return v11 & 1;
  }
  if (*(void *)v1 != *(void *)a1 || v6 != v2)
  {
    char v12 = sub_19F1DD44C();
    char v11 = 0;
    if ((v12 & 1) == 0) {
      return v11 & 1;
    }
    goto LABEL_10;
  }
  if (v3 != v7) {
    goto LABEL_15;
  }
LABEL_11:
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  char v14 = sub_19EFA9A90(v13, v8);
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_bridgeObjectRelease();
  if ((v14 & 1) == 0) {
    goto LABEL_15;
  }
  MEMORY[0x1F4188790](v15);
  if ((sub_19EFAA2BC(v8, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_19EFAA4A8) & 1) == 0
    || (sub_19EFA971C(v9, v4) & 1) == 0)
  {
    goto LABEL_15;
  }
  char v11 = sub_19EFA971C(v10, v5);
  return v11 & 1;
}

uint64_t MetricsData.topic.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsData.shouldFlush.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MetricsData.fields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MetricsData.fields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MetricsData.fields.modify())()
{
  return nullsub_1;
}

uint64_t MetricsData.includingFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MetricsData.includingFields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*MetricsData.includingFields.modify())()
{
  return nullsub_1;
}

uint64_t MetricsData.excludingFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MetricsData.excludingFields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*MetricsData.excludingFields.modify())()
{
  return nullsub_1;
}

uint64_t MetricsData.Configuration.init(defaultTopic:defaultIncludingFields:defaultExcludingFields:shouldFlush:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_19EFDB418@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = *a3;
  uint64_t v26 = a3[2];
  uint64_t v9 = (uint64_t (*)(uint64_t))a3[4];
  uint64_t v28 = a3[3];
  swift_bridgeObjectRetain();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_19EEBF80C(v10, a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = 0x707954746E657665;
  *(void *)(inited + 40) = 0xE900000000000065;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  uint64_t v13 = v7;
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v6;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_19EEBF898(inited);
  uint64_t v27 = sub_19EEBF80C(v14, v11);
  uint64_t result = sub_19EFDE35C(a1, v8);
  uint64_t v16 = result;
  uint64_t v18 = v17;
  if (v9)
  {
    uint64_t result = v9(a1);
    char v19 = result;
  }
  else
  {
    char v19 = 0;
  }
  if (*(void *)(v26 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_19EEBB074(v13, v6);
    if (v21)
    {
      uint64_t v22 = *(void *)(*(void *)(v26 + 56) + 8 * v20);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v22 = MEMORY[0x1E4FBC870];
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (*(void *)(v28 + 16)) {
      goto LABEL_11;
    }
LABEL_8:
    uint64_t v23 = MEMORY[0x1E4FBC870];
    goto LABEL_15;
  }
  uint64_t v22 = MEMORY[0x1E4FBC870];
  if (!*(void *)(v28 + 16)) {
    goto LABEL_8;
  }
LABEL_11:
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_19EEBB074(v13, v6);
  if (v25)
  {
    uint64_t v23 = *(void *)(*(void *)(v28 + 56) + 8 * v24);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v23 = MEMORY[0x1E4FBC870];
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_15:
  *(void *)a4 = v16;
  *(void *)(a4 + 8) = v18;
  *(unsigned char *)(a4 + 16) = v19 & 1;
  *(void *)(a4 + 24) = v27;
  *(void *)(a4 + 32) = v22;
  *(void *)(a4 + 40) = v23;
  return result;
}

uint64_t static MetricsData.makeMetricsBackClickData(fields:configuration:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[4];
  uint64_t v7 = a2[5];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 32) = 0x79546E6F69746361;
  *(void *)(inited + 40) = 0xEA00000000006570;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 48) = 1801675106;
  *(void *)(inited + 56) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_19EEBF898(inited);
  uint64_t v11 = sub_19EEBF80C(v10, a1);
  v13[0] = v4;
  v13[1] = v5;
  long long v14 = *((_OWORD *)a2 + 1);
  uint64_t v15 = v6;
  uint64_t v16 = v7;
  static MetricsData.makeMetricsMediaClickData(targetID:targetType:fields:configuration:)(1801675106, 0xE400000000000000, 0x6E6F74747562, 0xE600000000000000, v11, v13);
  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.makeMetricsPageData(fields:timingMetrics:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 40);
  uint64_t v8 = a2[6];
  char v9 = *((unsigned char *)a2 + 56);
  uint64_t v10 = a2[8];
  char v11 = *((unsigned char *)a2 + 72);
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  long long v25 = *((_OWORD *)a3 + 1);
  uint64_t v14 = a3[4];
  uint64_t v24 = a3[5];
  unint64_t v15 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  unint64_t v33 = v15;
  if (v4)
  {
    unint64_t v16 = v15;
    *((void *)&v30 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v29 = v5;
    *((void *)&v29 + 1) = v4;
    sub_19EEBDC00(&v29, v28);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v28, 0xD000000000000014, 0x800000019F268820, isUniquelyReferenced_nonNull_native);
    unint64_t v33 = v16;
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_19EF6B168(0xD000000000000014, 0x800000019F268820, &v29);
    sub_19EEBD664((uint64_t)&v29, &qword_1EB393260);
    if (v7)
    {
LABEL_3:
      sub_19EF6B168(0xD000000000000010, 0x800000019F268DB0, &v29);
      sub_19EEBD664((uint64_t)&v29, &qword_1EB393260);
      if ((v9 & 1) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      sub_19EF6B168(0xD000000000000011, 0x800000019F268DD0, &v29);
      sub_19EEBD664((uint64_t)&v29, &qword_1EB393260);
      if ((v11 & 1) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      sub_19EF6B168(0x65736E6F70736572, 0xEF656D6954646E45, &v29);
      sub_19EEBD664((uint64_t)&v29, &qword_1EB393260);
      goto LABEL_10;
    }
  }
  *((void *)&v30 + 1) = MEMORY[0x1E4FBB3D0];
  *(void *)&long long v29 = v6;
  sub_19EEBDC00(&v29, v28);
  unint64_t v21 = v33;
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_19EE7DA20(v28, 0xD000000000000010, 0x800000019F268DB0, v22);
  unint64_t v33 = v21;
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_8;
  }
LABEL_4:
  *((void *)&v30 + 1) = MEMORY[0x1E4FBB3D0];
  *(void *)&long long v29 = v8;
  sub_19EEBDC00(&v29, v28);
  unint64_t v18 = v33;
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_19EE7DA20(v28, 0xD000000000000011, 0x800000019F268DD0, v19);
  unint64_t v33 = v18;
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_9;
  }
LABEL_5:
  *((void *)&v30 + 1) = MEMORY[0x1E4FBB3D0];
  *(void *)&long long v29 = v10;
  sub_19EEBDC00(&v29, v28);
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_19EE7DA20(v28, 0x65736E6F70736572, 0xEF656D6954646E45, v20);
  swift_bridgeObjectRelease();
LABEL_10:
  *(void *)&v28[0] = 1701273968;
  *((void *)&v28[0] + 1) = 0xE400000000000000;
  *(void *)&long long v29 = v12;
  *((void *)&v29 + 1) = v13;
  long long v30 = v25;
  uint64_t v31 = v14;
  uint64_t v32 = v24;
  sub_19EFDB418(a1, (uint64_t *)v28, (uint64_t *)&v29, a4);
  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.makeMetricsSearchData(term:targetType:actionType:actionURL:fields:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t *a11)
{
  uint64_t v31 = a11[1];
  uint64_t v32 = *a11;
  long long v33 = *((_OWORD *)a11 + 1);
  uint64_t v29 = a11[5];
  uint64_t v30 = a11[4];
  unint64_t v19 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  *((void *)&v36 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v35 = a1;
  *((void *)&v35 + 1) = a2;
  sub_19EEBDC00(&v35, v40);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v39 = v19;
  sub_19EE7DA20(v40, 1836213620, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  unint64_t v22 = v39;
  swift_bridgeObjectRelease();
  *((void *)&v36 + 1) = v20;
  *(void *)&long long v35 = a3;
  *((void *)&v35 + 1) = a4;
  sub_19EEBDC00(&v35, v40);
  swift_bridgeObjectRetain();
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v39 = v22;
  sub_19EE7DA20(v40, 0x7954746567726174, 0xEA00000000006570, v23);
  unint64_t v24 = v39;
  swift_bridgeObjectRelease();
  *((void *)&v36 + 1) = v20;
  *(void *)&long long v35 = a5;
  *((void *)&v35 + 1) = a6;
  sub_19EEBDC00(&v35, v40);
  swift_bridgeObjectRetain();
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v39 = v24;
  sub_19EE7DA20(v40, 0x79546E6F69746361, 0xEA00000000006570, v25);
  unint64_t v26 = v39;
  swift_bridgeObjectRelease();
  if (a8)
  {
    *((void *)&v36 + 1) = v20;
    *(void *)&long long v35 = a7;
    *((void *)&v35 + 1) = a8;
    sub_19EEBDC00(&v35, v40);
    swift_bridgeObjectRetain();
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v39 = v26;
    sub_19EE7DA20(v40, 0x72556E6F69746361, 0xE90000000000006CLL, v27);
    swift_bridgeObjectRelease();
  }
  *(void *)&v40[0] = 0x686372616573;
  *((void *)&v40[0] + 1) = 0xE600000000000000;
  *(void *)&long long v35 = v32;
  *((void *)&v35 + 1) = v31;
  long long v36 = v33;
  uint64_t v37 = v30;
  uint64_t v38 = v29;
  sub_19EFDB418(a10, (uint64_t *)v40, (uint64_t *)&v35, a9);
  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.makeMetricsImpressionsData(fields:configuration:impressionsEventVersion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  *(void *)(inited + 32) = 0x6973736572706D69;
  *(void *)(inited + 40) = 0xEF65756575516E6FLL;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  strcpy((char *)(inited + 48), "data-metrics");
  *(unsigned char *)(inited + 61) = 0;
  *(_WORD *)(inited + 62) = -5120;
  *(void *)(inited + 72) = v13;
  strcpy((char *)(inited + 80), "eventVersion");
  *(void *)(inited + 120) = MEMORY[0x1E4FBB550];
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  *(void *)(inited + 96) = a3;
  sub_19EEBF898(inited);
  v19[0] = 0x6973736572706D69;
  v19[1] = 0xEB00000000736E6FLL;
  v15[0] = v8;
  v15[1] = v9;
  long long v16 = *(_OWORD *)(a2 + 16);
  uint64_t v17 = v10;
  uint64_t v18 = v11;
  sub_19EFDB418(a1, v19, v15, a4);
  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.makeMetricsMediaData(fields:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  sub_19EEBF898(MEMORY[0x1E4FBC860]);
  v15[0] = 0x616964656DLL;
  v15[1] = 0xE500000000000000;
  v11[0] = v6;
  v11[1] = v7;
  long long v12 = *(_OWORD *)(a2 + 16);
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_19EFDB418(a1, v15, v11, a3);
  return swift_bridgeObjectRelease();
}

uint64_t _s9JetEngine11MetricsDataV04makec5ClickD08targetID0G4Type6fields13configurationACSS_SSSDySSypGAC13ConfigurationVtFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12 = *(void *)a6;
  uint64_t v13 = *(void *)(a6 + 8);
  uint64_t v14 = *(void *)(a6 + 32);
  uint64_t v15 = *(void *)(a6 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  *(void *)(inited + 32) = 0x6449746567726174;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 72) = v17;
  *(void *)(inited + 80) = 0x7954746567726174;
  *(void *)(inited + 120) = v17;
  *(void *)(inited + 88) = 0xEA00000000006570;
  *(void *)(inited + 96) = a3;
  *(void *)(inited + 104) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EEBF898(inited);
  v25[0] = 0x6B63696C63;
  v25[1] = 0xE500000000000000;
  v21[0] = v12;
  v21[1] = v13;
  long long v22 = *(_OWORD *)(a6 + 16);
  uint64_t v23 = v14;
  uint64_t v24 = v15;
  sub_19EFDB418(a5, v25, v21, a7);
  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.makeMetricsPageRenderFields(timingMetrics:fields:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v7 = a1[4];
  char v8 = *((unsigned char *)a1 + 40);
  uint64_t v9 = a1[6];
  char v10 = *((unsigned char *)a1 + 56);
  uint64_t v11 = a1[8];
  char v12 = *((unsigned char *)a1 + 72);
  int v13 = *((unsigned __int8 *)a1 + 73);
  uint64_t v14 = a1[10];
  char v36 = *((unsigned char *)a1 + 88);
  uint64_t v15 = a1[12];
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  char v37 = *((unsigned char *)a1 + 104);
  *((void *)&v40 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v39 = 0x646E655265676170;
  *((void *)&v39 + 1) = 0xEA00000000007265;
  sub_19EEBDC00(&v39, v38);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_19EE7DA20(v38, 0x707954746E657665, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
  uint64_t v41 = a2;
  swift_bridgeObjectRelease();
  if (*(void *)(a2 + 16) && (unint64_t v18 = sub_19EEBD400(0x6C725565676170, 0xE700000000000000), (v19 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a2 + 56) + 32 * v18, (uint64_t)&v39);
  }
  else
  {
    long long v39 = 0u;
    long long v40 = 0u;
    sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
    if (v5)
    {
      *((void *)&v40 + 1) = v16;
      *(void *)&long long v39 = v6;
      *((void *)&v39 + 1) = v5;
      sub_19EEBDC00(&v39, v38);
      swift_bridgeObjectRetain();
      char v20 = swift_isUniquelyReferenced_nonNull_native();
      sub_19EE7DA20(v38, 0x6C725565676170, 0xE700000000000000, v20);
      uint64_t v41 = a2;
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_19EF6B168(0x6C725565676170, 0xE700000000000000, &v39);
  }
  sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
LABEL_8:
  if (v3)
  {
    *((void *)&v40 + 1) = v16;
    *(void *)&long long v39 = v4;
    *((void *)&v39 + 1) = v3;
    sub_19EEBDC00(&v39, v38);
    swift_bridgeObjectRetain();
    uint64_t v21 = v41;
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v38, 0xD000000000000014, 0x800000019F268820, v22);
    uint64_t v41 = v21;
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_10;
    }
  }
  else
  {
    sub_19EF6B168(0xD000000000000014, 0x800000019F268820, &v39);
    sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
    if (v8)
    {
LABEL_10:
      sub_19EF6B168(0xD000000000000018, 0x800000019F26C660, &v39);
      sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
      if ((v10 & 1) == 0) {
        goto LABEL_11;
      }
      goto LABEL_18;
    }
  }
  *((void *)&v40 + 1) = MEMORY[0x1E4FBB3D0];
  *(void *)&long long v39 = v7;
  sub_19EEBDC00(&v39, v38);
  uint64_t v33 = v41;
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  sub_19EE7DA20(v38, 0xD000000000000018, 0x800000019F26C660, v34);
  uint64_t v41 = v33;
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_11:
    *((void *)&v40 + 1) = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v39 = v9;
    sub_19EEBDC00(&v39, v38);
    uint64_t v23 = v41;
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v38, 0xD000000000000019, 0x800000019F26C680, v24);
    uint64_t v41 = v23;
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  sub_19EF6B168(0xD000000000000019, 0x800000019F26C680, &v39);
  sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
  if ((v12 & 1) == 0)
  {
LABEL_12:
    *((void *)&v40 + 1) = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v39 = v11;
    sub_19EEBDC00(&v39, v38);
    uint64_t v25 = v41;
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v38, 0xD000000000000017, 0x800000019F26C6A0, v26);
    uint64_t v41 = v25;
    swift_bridgeObjectRelease();
    if (v13 != 2) {
      goto LABEL_13;
    }
    goto LABEL_20;
  }
LABEL_19:
  sub_19EF6B168(0xD000000000000017, 0x800000019F26C6A0, &v39);
  sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
  if (v13 != 2)
  {
LABEL_13:
    *((void *)&v40 + 1) = MEMORY[0x1E4FBB390];
    LOBYTE(v39) = v13 & 1;
    sub_19EEBDC00(&v39, v38);
    uint64_t v27 = v41;
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v38, 0xD000000000000019, 0x800000019F26C6C0, v28);
    uint64_t v41 = v27;
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_21:
    sub_19EF6B168(0xD00000000000001ALL, 0x800000019F26C6E0, &v39);
    sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
    if ((v37 & 1) == 0) {
      goto LABEL_15;
    }
LABEL_22:
    sub_19EF6B168(0xD000000000000018, 0x800000019F26C700, &v39);
    sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
    return v41;
  }
LABEL_20:
  sub_19EF6B168(0xD000000000000019, 0x800000019F26C6C0, &v39);
  sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
  if (v36) {
    goto LABEL_21;
  }
LABEL_14:
  *((void *)&v40 + 1) = MEMORY[0x1E4FBB3D0];
  *(void *)&long long v39 = v14;
  sub_19EEBDC00(&v39, v38);
  uint64_t v29 = v41;
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  sub_19EE7DA20(v38, 0xD00000000000001ALL, 0x800000019F26C6E0, v30);
  uint64_t v41 = v29;
  swift_bridgeObjectRelease();
  if (v37) {
    goto LABEL_22;
  }
LABEL_15:
  *((void *)&v40 + 1) = MEMORY[0x1E4FBB3D0];
  *(void *)&long long v39 = v15;
  sub_19EEBDC00(&v39, v38);
  uint64_t v31 = v41;
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  sub_19EE7DA20(v38, 0xD000000000000018, 0x800000019F26C700, v32);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_19EFDC66C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return MetricsData.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_19EFDC688(unsigned __int8 *a1, char *a2)
{
  return sub_19F03B820(*a1, *a2);
}

uint64_t sub_19EFDC694()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFDC798()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFDC884()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFDC984@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EFDE2BC();
  *a1 = result;
  return result;
}

void sub_19EFDC9B4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6369706F74;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000687375;
      uint64_t v3 = 0x6C46646C756F6873;
      goto LABEL_3;
    case 2:
      *a1 = 0x73646C656966;
      a1[1] = 0xE600000000000000;
      return;
    case 3:
      uint64_t v4 = 0x6E6964756C636E69;
      goto LABEL_7;
    case 4:
      uint64_t v4 = 0x6E6964756C637865;
LABEL_7:
      *a1 = v4;
      a1[1] = 0xEF73646C65694667;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_19EFDCA78()
{
  uint64_t result = 0x6369706F74;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C46646C756F6873;
      break;
    case 2:
      uint64_t result = 0x73646C656966;
      break;
    case 3:
      uint64_t result = 0x6E6964756C636E69;
      break;
    case 4:
      uint64_t result = 0x6E6964756C637865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19EFDCB30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EFDE2BC();
  *a1 = result;
  return result;
}

void sub_19EFDCB58(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_19EFDCB64(uint64_t a1)
{
  unint64_t v2 = sub_19EFDD8F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EFDCBA0(uint64_t a1)
{
  unint64_t v2 = sub_19EFDD8F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MetricsData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472290);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EFDD8F0();
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v28[0]) = 0;
  if (sub_19F1DD1DC())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392310);
    LOBYTE(v25[0]) = 0;
    sub_19EFDDAD0((unint64_t *)&unk_1E946F680);
    sub_19F1DD1BC();
    uint64_t v10 = v28[0];
    uint64_t v24 = v28[1];
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v10 = 0;
  }
  LOBYTE(v28[0]) = 1;
  if (sub_19F1DD1DC())
  {
    LOBYTE(v28[0]) = 1;
    int v11 = sub_19F1DD19C();
  }
  else
  {
    int v11 = 0;
  }
  LOBYTE(v25[0]) = 2;
  sub_19EFAA6E8();
  sub_19F1DD1BC();
  uint64_t v23 = v10;
  JSONObject.dictionary.getter((uint64_t)v25);
  uint64_t v12 = v26;
  if (!v26)
  {
    sub_19EEBD664((uint64_t)v25, &qword_1E946F740);
    goto LABEL_14;
  }
  LODWORD(v22) = v11;
  uint64_t v13 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v14 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v13 + 32))(MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB1B0], v12, v13);
  sub_19EEC05FC((uint64_t)v25);
  if (!v14)
  {
LABEL_14:
    uint64_t v23 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v16 = v15;
    char v22 = (char *)v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50) + 48);
    *uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v17 = (void *)sub_19F1DD86C();
    sub_19EFDD818(2, v17, (uint64_t)&type metadata for MetricsData.CodingKeys, (uint64_t (*)(void))sub_19EFDD8F0);
    swift_bridgeObjectRelease();
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DCF4C();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void))(*(void *)(v23 - 8) + 104))(v16, *MEMORY[0x1E4FBBA70]);
    swift_willThrow();
    sub_19EEC3418((uint64_t)v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  LOBYTE(v25[0]) = 3;
  swift_bridgeObjectRetain();
  if (sub_19F1DD1DC())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94722C8);
    char v29 = 3;
    sub_19EFDD980(&qword_1E94722D0, &qword_1E94722C8, (void (*)(void))sub_19EFDDA40);
    sub_19F1DD1BC();
    uint64_t v21 = sub_19EEC15B8(v25[0]);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = MEMORY[0x1E4FBC870];
  }
  LOBYTE(v25[0]) = 4;
  if (sub_19F1DD1DC())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94722A0);
    char v29 = 4;
    sub_19EFDD980(&qword_1E94722A8, &qword_1E94722A0, (void (*)(void))sub_19EFDD944);
    sub_19F1DD1BC();
    uint64_t v18 = sub_19EEC15EC(v25[0]);
    swift_bridgeObjectRelease();
    sub_19EEC3418((uint64_t)v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    sub_19EEC3418((uint64_t)v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v18 = MEMORY[0x1E4FBC870];
  }
  uint64_t v19 = v24;
  swift_bridgeObjectRetain();
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v19;
  *(unsigned char *)(a2 + 16) = v22 & 1;
  uint64_t v20 = v21;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t MetricsData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94722F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  int v22 = *((unsigned __int8 *)v1 + 16);
  uint64_t v9 = v1[3];
  v18[2] = v1[4];
  uint64_t v19 = v9;
  v18[1] = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EFDD8F0();
  sub_19F1DD8FC();
  v21[0] = v7;
  v21[1] = v8;
  char v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392310);
  sub_19EFDDAD0((unint64_t *)&qword_1E94722F8);
  uint64_t v10 = v20;
  sub_19F1DD2AC();
  if (!v10)
  {
    uint64_t v11 = v19;
    LOBYTE(v21[0]) = 1;
    sub_19F1DD27C();
    _OWORD v21[3] = &type metadata for FoundationValue;
    void v21[4] = &off_1EF13D8F8;
    uint64_t v12 = swift_allocObject();
    v21[0] = v12;
    *(void *)(v12 + 40) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    *(void *)(v12 + 16) = v11;
    char v23 = 2;
    sub_19EFAA85C();
    swift_bridgeObjectRetain();
    sub_19F1DD2AC();
    sub_19EEC3418((uint64_t)v21);
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_19EF9F00C(v13);
    swift_bridgeObjectRelease();
    v21[0] = v14;
    char v23 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94722C8);
    sub_19EFDD980(&qword_1E9472300, &qword_1E94722C8, (void (*)(void))sub_19EFDDB6C);
    sub_19F1DD2AC();
    swift_release();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_19EF9F000(v15);
    swift_bridgeObjectRelease();
    v21[0] = v16;
    char v23 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94722A0);
    sub_19EFDD980(&qword_1E9472318, &qword_1E94722A0, (void (*)(void))sub_19EFDDBFC);
    sub_19F1DD2AC();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_19EFDD6E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MetricsData.init(from:)(a1, a2);
}

uint64_t sub_19EFDD6F8(void *a1)
{
  return MetricsData.encode(to:)(a1);
}

void *sub_19EFDD710(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  sub_19EFDE2AC(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a4 = sub_19EE6F69C(0, a4[2] + 1, 1, a4);
  }
  unint64_t v9 = a4[2];
  unint64_t v8 = a4[3];
  if (v9 >= v8 >> 1) {
    a4 = sub_19EE6F69C((void *)(v8 > 1), v9 + 1, 1, a4);
  }
  uint64_t v13 = &type metadata for OpenCodingKey;
  unint64_t v14 = sub_19EF6EA7C();
  *(void *)&long long v11 = a1;
  *((void *)&v11 + 1) = a2;
  char v12 = a3 & 1;
  a4[2] = v9 + 1;
  sub_19EEBB420(&v11, (uint64_t)&a4[5 * v9 + 4]);
  return a4;
}

void *sub_19EFDD7F8(char a1, void *a2)
{
  return sub_19EFDD818(a1, a2, (uint64_t)&type metadata for ImpressionMetrics.CodingKeys, (uint64_t (*)(void))sub_19EFDE308);
}

void *sub_19EFDD818(char a1, void *a2, uint64_t a3, uint64_t (*a4)(void))
{
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a2 = sub_19EE6F69C(0, a2[2] + 1, 1, a2);
  }
  unint64_t v9 = a2[2];
  unint64_t v8 = a2[3];
  if (v9 >= v8 >> 1) {
    a2 = sub_19EE6F69C((void *)(v8 > 1), v9 + 1, 1, a2);
  }
  uint64_t v12 = a3;
  uint64_t v13 = a4();
  LOBYTE(v11) = a1;
  a2[2] = v9 + 1;
  sub_19EEBB420(&v11, (uint64_t)&a2[5 * v9 + 4]);
  return a2;
}

unint64_t sub_19EFDD8F0()
{
  unint64_t result = qword_1E9472298;
  if (!qword_1E9472298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472298);
  }
  return result;
}

uint64_t sub_19EFDD944()
{
  return sub_19EFDD980(&qword_1E94722B0, &qword_1E94722B8, (void (*)(void))sub_19EFDD9EC);
}

uint64_t sub_19EFDD980(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19EFDD9EC()
{
  unint64_t result = qword_1E94722C0;
  if (!qword_1E94722C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94722C0);
  }
  return result;
}

uint64_t sub_19EFDDA40()
{
  return sub_19EFDD980(&qword_1E94722D8, &qword_1E94722E0, (void (*)(void))sub_19EFDDA7C);
}

unint64_t sub_19EFDDA7C()
{
  unint64_t result = qword_1E94722E8;
  if (!qword_1E94722E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94722E8);
  }
  return result;
}

uint64_t sub_19EFDDAD0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB392310);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19EFDDB34()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19EFDDB6C()
{
  return sub_19EFDD980(&qword_1E9472308, &qword_1E94722E0, (void (*)(void))sub_19EFDDBA8);
}

unint64_t sub_19EFDDBA8()
{
  unint64_t result = qword_1E9472310;
  if (!qword_1E9472310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472310);
  }
  return result;
}

uint64_t sub_19EFDDBFC()
{
  return sub_19EFDD980(&qword_1E9472320, &qword_1E94722B8, (void (*)(void))sub_19EFDDC38);
}

unint64_t sub_19EFDDC38()
{
  unint64_t result = qword_1E9472328;
  if (!qword_1E9472328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472328);
  }
  return result;
}

uint64_t assignWithCopy for MetricsData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for MetricsData.Configuration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for MetricsData.Configuration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v7 = a2 + 4;
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = a2[5];
    a1[4] = v6;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v7;
  }
  return a1;
}

void *assignWithCopy for MetricsData.Configuration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  if (!a1[4])
  {
    if (v4)
    {
      uint64_t v6 = a2[5];
      a1[4] = v4;
      a1[5] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[5];
  a1[4] = v4;
  a1[5] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MetricsData.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsData.Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsData.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsData.Configuration()
{
  return &type metadata for MetricsData.Configuration;
}

unsigned char *storeEnumTagSinglePayload for MetricsData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EFDE16CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsData.CodingKeys()
{
  return &type metadata for MetricsData.CodingKeys;
}

unint64_t sub_19EFDE1A8()
{
  unint64_t result = qword_1E9472330;
  if (!qword_1E9472330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472330);
  }
  return result;
}

unint64_t sub_19EFDE200()
{
  unint64_t result = qword_1E9472338;
  if (!qword_1E9472338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472338);
  }
  return result;
}

unint64_t sub_19EFDE258()
{
  unint64_t result = qword_1E9472340;
  if (!qword_1E9472340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472340);
  }
  return result;
}

uint64_t sub_19EFDE2AC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19EFDE2BC()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_19EFDE308()
{
  unint64_t result = qword_1E9472348;
  if (!qword_1E9472348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472348);
  }
  return result;
}

uint64_t sub_19EFDE35C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_19EEBD400(0x6369706F74, 0xE500000000000000);
    if (v5)
    {
      sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v8);
      if (swift_dynamicCast()) {
        return v7;
      }
    }
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t Bag.Profile.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Bag.Profile.name.modify())()
{
  return nullsub_1;
}

uint64_t Bag.Profile.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Bag.Profile.version.modify())()
{
  return nullsub_1;
}

id sub_19EFDE4B4()
{
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  id result = sub_19EE7DF10(v1, 6775106, 0xE300000000000000);
  qword_1EB394F08 = (uint64_t)result;
  return result;
}

void Bag.profile.getter(uint64_t *a1@<X8>)
{
  int v3 = *v1;
  id v4 = objc_msgSend(v3, sel_profile);
  uint64_t v5 = sub_19F1DBD7C();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(v3, sel_profileVersion);
  uint64_t v9 = sub_19F1DBD7C();
  uint64_t v11 = v10;

  *a1 = v5;
  a1[1] = v7;
  a1[2] = v9;
  a1[3] = v11;
}

id Bag.isExpired.getter()
{
  return objc_msgSend(*v0, sel_isExpired);
}

uint64_t sub_19EFDE674@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_unknownObjectRetain();
}

void static Bag.Profile.iosAppStore.getter(void *a1@<X8>)
{
  *a1 = 0x65726F7453707041;
  a1[1] = 0xE800000000000000;
  a1[2] = 49;
  a1[3] = 0xE100000000000000;
}

void static Bag.Profile.macAppStore.getter(void *a1@<X8>)
{
  *a1 = 0x745370704163614DLL;
  a1[1] = 0xEB0000000065726FLL;
  a1[2] = 49;
  a1[3] = 0xE100000000000000;
}

void static Bag.Profile.podcasts.getter(void *a1@<X8>)
{
  *a1 = 0x7374736163646F50;
  a1[1] = 0xE800000000000000;
  a1[2] = 49;
  a1[3] = 0xE100000000000000;
}

uint64_t sub_19EFDE700()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

ValueMetadata *type metadata accessor for _BagForAMSBagProtocolRule()
{
  return &type metadata for _BagForAMSBagProtocolRule;
}

ValueMetadata *type metadata accessor for _AMSBagProtocolForBagRule()
{
  return &type metadata for _AMSBagProtocolForBagRule;
}

uint64_t JSStrongReference.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id JSStrongReference.referent.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void **assignWithCopy for JSStrongReference(void **a1, void **a2)
{
  int v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for JSStrongReference(void **a1, void **a2)
{
  int v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for JSStrongReference()
{
  return &type metadata for JSStrongReference;
}

uint64_t sub_19EFDE7E0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  v32[1] = 0xE000000000000000;
  MEMORY[0x19F3C6160](64);
  uint64_t v29 = 0;
  uint64_t v30 = 0xE000000000000000;
  sub_19F1DBEFC();
  void v32[3] = MEMORY[0x1E4FBC150];
  v32[4] = &off_1EF14CF40;
  v32[0] = a2;
  sub_19EE67690((uint64_t)v32, (uint64_t)v31);
  uint64_t v7 = sub_19EE676F8(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  if (v9 >= v8 >> 1) {
    uint64_t v7 = sub_19EE676F8((void *)(v8 > 1), v9 + 1, 1, v7);
  }
  _OWORD v7[2] = v9 + 1;
  sub_19EEBDC4C((uint64_t)v31, (uint64_t)&v7[5 * v9 + 4], &qword_1EB390DE8);
  sub_19F1DBEFC();
  sub_19EE67154((uint64_t)v32);
  uint64_t v10 = sub_19F1DBEFC();
  v32[0] = 0;
  MEMORY[0x1F4188790](v10);
  _OWORD v26[2] = a1;
  _OWORD v26[3] = v32;
  uint64_t result = (uint64_t)sub_19EE66FA0((uint64_t)sub_19EE6795C, (uint64_t)v26, v11, v30);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v32[0];
    if (v32[0])
    {
      type metadata accessor for SQLiteStatement();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = v13;
      *(void *)(inited + 24) = 0;
      sub_19EE673D8((uint64_t)v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(sqlite3_stmt **)(inited + 16);
      int v16 = sqlite3_step(v15);
      if (qword_1EB3912E8 != -1) {
        swift_once();
      }
      if (sub_19EE672C4(v16, qword_1EB394F10))
      {
        if (v16 == 100)
        {
          sub_19EE67C10(inited, (uint64_t)&v33);
          uint64_t v28 = v33;
          int v27 = v34;
          uint64_t v17 = v35;
          uint64_t v18 = v36;
          uint64_t v19 = v37;
          uint64_t v20 = v38;
          uint64_t v21 = v39;
          uint64_t v22 = v40;
          swift_setDeallocating();
          sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v23 = 0x100000000;
          if (!v27) {
            uint64_t v23 = 0;
          }
          uint64_t v24 = v23 | v28;
        }
        else
        {
          swift_setDeallocating();
          sqlite3_finalize(v15);
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v24 = 0;
          uint64_t v17 = 0;
          uint64_t v19 = 0;
          uint64_t v20 = 0;
          uint64_t v21 = 0;
          uint64_t v22 = 0;
          uint64_t v18 = 1;
        }
        *a3 = v24;
        a3[1] = v17;
        a3[2] = v18;
        a3[3] = v19;
        a3[4] = v20;
        a3[5] = v21;
        a3[6] = v22;
      }
      else
      {
        sub_19EFE0074();
        swift_allocError();
        *uint64_t v25 = v16;
        swift_willThrow();
        swift_setDeallocating();
        sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_19EFDEBC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v18 = 0;
  void v17[2] = a1;
  void v17[3] = &v18;
  uint64_t result = (uint64_t)sub_19EE66FA0((uint64_t)sub_19EE671B4, (uint64_t)v17, 0xD000000000000034, 0x800000019F26C920);
  if (!v2)
  {
    uint64_t v5 = v18;
    if (v18)
    {
      type metadata accessor for SQLiteStatement();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = v5;
      *(void *)(inited + 24) = 0;
      sub_19EE673D8(MEMORY[0x1E4FBC860]);
      uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        unint64_t v8 = *(sqlite3_stmt **)(inited + 16);
        int v9 = sqlite3_step(v8);
        if (qword_1EB3912E8 != -1) {
          swift_once();
        }
        if (!sub_19EE672C4(v9, qword_1EB394F10))
        {
          sub_19EFE0074();
          swift_allocError();
          *int v16 = v9;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
          return swift_bridgeObjectRelease();
        }
        if (v9 != 100) {
          break;
        }
        sub_19EE67C10(inited, (uint64_t)v19);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_19F09E244(0, v7[2] + 1, 1, v7);
        }
        unint64_t v11 = v7[2];
        unint64_t v10 = v7[3];
        if (v11 >= v10 >> 1) {
          uint64_t v7 = sub_19F09E244((void *)(v10 > 1), v11 + 1, 1, v7);
        }
        _OWORD v7[2] = v11 + 1;
        uint64_t v12 = &v7[7 * v11];
        long long v13 = v19[0];
        long long v14 = v19[1];
        long long v15 = v19[2];
        v12[10] = v20;
        *((_OWORD *)v12 + 3) = v14;
        *((_OWORD *)v12 + 4) = v15;
        *((_OWORD *)v12 + 2) = v13;
      }
      swift_setDeallocating();
      sqlite3_finalize(v8);
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v7;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_19EFDEE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  MEMORY[0x19F3C6160](71);
  v27[5] = 0;
  uint64_t v28 = 0xE000000000000000;
  sub_19F1DBEFC();
  v30[3] = MEMORY[0x1E4FBB1A0];
  v30[4] = &off_1EF14C168;
  v30[0] = a2;
  v30[1] = a3;
  sub_19EE67690((uint64_t)v30, (uint64_t)v29);
  swift_bridgeObjectRetain();
  int v9 = sub_19EE676F8(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    int v9 = sub_19EE676F8((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  long long v9[2] = v11 + 1;
  sub_19EEBDC4C((uint64_t)v29, (uint64_t)&v9[5 * v11 + 4], &qword_1EB390DE8);
  sub_19F1DBEFC();
  sub_19EE67154((uint64_t)v30);
  uint64_t v12 = sub_19F1DBEFC();
  v30[0] = 0;
  MEMORY[0x1F4188790](v12);
  _OWORD v27[2] = a1;
  void v27[3] = v30;
  uint64_t result = (uint64_t)sub_19EE66FA0((uint64_t)sub_19EE6795C, (uint64_t)v27, v13, v28);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v30[0];
    if (v30[0])
    {
      type metadata accessor for SQLiteStatement();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = v15;
      *(void *)(inited + 24) = 0;
      sub_19EE673D8((uint64_t)v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v18 = *(sqlite3_stmt **)(inited + 16);
        int v19 = sqlite3_step(v18);
        if (qword_1EB3912E8 != -1) {
          swift_once();
        }
        if (!sub_19EE672C4(v19, qword_1EB394F10))
        {
          sub_19EFE0074();
          swift_allocError();
          *uint64_t v26 = v19;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
          return swift_bridgeObjectRelease();
        }
        if (v19 != 100) {
          break;
        }
        sub_19EE67C10(inited, (uint64_t)v31);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = sub_19F09E244(0, v17[2] + 1, 1, v17);
        }
        unint64_t v21 = v17[2];
        unint64_t v20 = v17[3];
        if (v21 >= v20 >> 1) {
          uint64_t v17 = sub_19F09E244((void *)(v20 > 1), v21 + 1, 1, v17);
        }
        void v17[2] = v21 + 1;
        uint64_t v22 = &v17[7 * v21];
        long long v23 = v31[0];
        long long v24 = v31[1];
        long long v25 = v31[2];
        v22[10] = v32;
        *((_OWORD *)v22 + 3) = v24;
        *((_OWORD *)v22 + 4) = v25;
        *((_OWORD *)v22 + 2) = v23;
      }
      swift_setDeallocating();
      sqlite3_finalize(v18);
      uint64_t result = swift_bridgeObjectRelease();
      *a4 = v17;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_19EFDF218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  *(void *)&long long v30 = 0;
  *((void *)&v30 + 1) = 0xE000000000000000;
  MEMORY[0x19F3C6160](84);
  long long v28 = v30;
  sub_19F1DBEFC();
  sub_19EEBDC4C(a2 + 8, (uint64_t)v37, &qword_1EB392310);
  sub_19EEBDC4C((uint64_t)v37, (uint64_t)&v38, &qword_1EB392310);
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  int v27 = a3;
  if (*((void *)&v38 + 1))
  {
    long long v30 = v38;
    *((void *)&v31 + 1) = MEMORY[0x1E4FBB1A0];
    uint64_t v32 = &off_1EF14C168;
  }
  else
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
  }
  sub_19EE67690((uint64_t)&v30, (uint64_t)v29);
  sub_19EE9CFFC((uint64_t)v37);
  unint64_t v8 = sub_19EE676F8(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_19EE676F8((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  v8[2] = v10 + 1;
  sub_19EEBDC4C((uint64_t)v29, (uint64_t)&v8[5 * v10 + 4], &qword_1EB390DE8);
  sub_19F1DBEFC();
  sub_19EE67154((uint64_t)&v30);
  sub_19F1DBEFC();
  sub_19EEBDC4C(a2 + 24, (uint64_t)v36, &qword_1EB392310);
  sub_19EEBDC4C((uint64_t)v36, (uint64_t)&v39, &qword_1EB392310);
  if (*((void *)&v39 + 1))
  {
    long long v30 = v39;
    *((void *)&v31 + 1) = v7;
    uint64_t v32 = &off_1EF14C168;
  }
  else
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
  }
  sub_19EE67690((uint64_t)&v30, (uint64_t)v29);
  sub_19EE9CFFC((uint64_t)v36);
  unint64_t v12 = v8[2];
  unint64_t v11 = v8[3];
  if (v12 >= v11 >> 1) {
    unint64_t v8 = sub_19EE676F8((void *)(v11 > 1), v12 + 1, 1, v8);
  }
  v8[2] = v12 + 1;
  sub_19EEBDC4C((uint64_t)v29, (uint64_t)&v8[5 * v12 + 4], &qword_1EB390DE8);
  sub_19F1DBEFC();
  sub_19EE67154((uint64_t)&v30);
  sub_19F1DBEFC();
  sub_19EEBDC4C(a2 + 40, (uint64_t)v35, &qword_1EB3908A8);
  sub_19EEBDC4C((uint64_t)v35, (uint64_t)&v40, &qword_1EB3908A8);
  if (*((void *)&v40 + 1) >> 60 == 15)
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
  }
  else
  {
    long long v30 = v40;
    *((void *)&v31 + 1) = MEMORY[0x1E4F277C0];
    uint64_t v32 = &off_1EF137D98;
  }
  sub_19EE67690((uint64_t)&v30, (uint64_t)v29);
  sub_19EFE00C8((uint64_t)v35);
  unint64_t v14 = v8[2];
  unint64_t v13 = v8[3];
  if (v14 >= v13 >> 1) {
    unint64_t v8 = sub_19EE676F8((void *)(v13 > 1), v14 + 1, 1, v8);
  }
  v8[2] = v14 + 1;
  sub_19EEBDC4C((uint64_t)v29, (uint64_t)&v8[5 * v14 + 4], &qword_1EB390DE8);
  sub_19F1DBEFC();
  sub_19EE67154((uint64_t)&v30);
  uint64_t v15 = sub_19F1DBEFC();
  *(void *)&long long v30 = 0;
  MEMORY[0x1F4188790](v15);
  _OWORD v26[2] = a1;
  _OWORD v26[3] = &v30;
  uint64_t result = (uint64_t)sub_19EE66FA0((uint64_t)sub_19EE6795C, (uint64_t)v26, v16, *((uint64_t *)&v28 + 1));
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v18 = v30;
  if ((void)v30)
  {
    type metadata accessor for SQLiteStatement();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v18;
    *(void *)(inited + 24) = 0;
    sub_19EE673D8((uint64_t)v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v20 = sqlite3_step(*(sqlite3_stmt **)(inited + 16));
    if (qword_1EB3912E8 != -1) {
      swift_once();
    }
    if (sub_19EE672C4(v20, qword_1EB394F10))
    {
      uint64_t v21 = sub_19EE34DC4((uint64_t)&unk_1EF1395B8);
      if (sub_19EE672C4(v20, v21))
      {
        swift_bridgeObjectRelease();
        sub_19EE67C10(inited, (uint64_t)v33);
        swift_setDeallocating();
        sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
        uint64_t result = swift_bridgeObjectRelease();
        long long v22 = v33[1];
        long long v23 = v27;
        _OWORD *v27 = v33[0];
        v23[1] = v22;
        _OWORD v23[2] = v33[2];
        *((void *)v23 + 6) = v34;
        return result;
      }
      sub_19EFE0074();
      swift_allocError();
      *long long v25 = v20;
      swift_willThrow();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19EFE0074();
      swift_allocError();
      *long long v24 = v20;
      swift_willThrow();
    }
    swift_setDeallocating();
    sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_19EFDF7E8(uint64_t a1, unsigned int a2)
{
  v20[5] = *MEMORY[0x1E4F143B8];
  v20[1] = 0xE000000000000000;
  MEMORY[0x19F3C6160](37);
  void v17[5] = 0;
  uint64_t v18 = 0xE000000000000000;
  sub_19F1DBEFC();
  void v20[3] = MEMORY[0x1E4FBC150];
  v20[4] = &off_1EF14CF40;
  v20[0] = a2;
  sub_19EE67690((uint64_t)v20, (uint64_t)v19);
  uint64_t v5 = sub_19EE676F8(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  if (v7 >= v6 >> 1) {
    uint64_t v5 = sub_19EE676F8((void *)(v6 > 1), v7 + 1, 1, v5);
  }
  _OWORD v5[2] = v7 + 1;
  sub_19EEBDC4C((uint64_t)v19, (uint64_t)&v5[5 * v7 + 4], &qword_1EB390DE8);
  sub_19F1DBEFC();
  uint64_t v8 = sub_19EE67154((uint64_t)v20);
  v20[0] = 0;
  MEMORY[0x1F4188790](v8);
  void v17[2] = a1;
  void v17[3] = v20;
  uint64_t result = sub_19EE66FA0((uint64_t)sub_19EE6795C, (uint64_t)v17, v9, v18);
  if (v2)
  {
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v20[0];
    if (v20[0])
    {
      type metadata accessor for SQLiteStatement();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = v11;
      *(void *)(inited + 24) = 0;
      sub_19EE673D8((uint64_t)v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v13 = sqlite3_step(*(sqlite3_stmt **)(inited + 16));
      if (qword_1EB3912E8 != -1) {
        swift_once();
      }
      if (sub_19EE672C4(v13, qword_1EB394F10))
      {
        uint64_t v14 = sub_19EE34DC4((uint64_t)&unk_1EF1395E0);
        if (!sub_19EE672C4(v13, v14))
        {
          sub_19EFE0074();
          swift_allocError();
          *uint64_t v15 = v13;
          swift_willThrow();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19EFE0074();
        swift_allocError();
        *uint64_t v16 = v13;
        swift_willThrow();
      }
      swift_setDeallocating();
      sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_19EFDFB10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  *(void *)&long long v29 = 0;
  *((void *)&v29 + 1) = 0xE000000000000000;
  MEMORY[0x19F3C6160](60);
  long long v27 = v29;
  sub_19F1DBEFC();
  if (a3 >> 60 == 15)
  {
    long long v31 = 0;
    long long v29 = 0u;
    long long v30 = 0u;
  }
  else
  {
    *((void *)&v30 + 1) = MEMORY[0x1E4F277C0];
    long long v31 = &off_1EF137D98;
    *(void *)&long long v29 = a2;
    *((void *)&v29 + 1) = a3;
  }
  sub_19EE67690((uint64_t)&v29, (uint64_t)v28);
  sub_19EEE0560(a2, a3);
  uint64_t v11 = sub_19EE676F8(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v13 = v11[2];
  unint64_t v12 = v11[3];
  if (v13 >= v12 >> 1) {
    uint64_t v11 = sub_19EE676F8((void *)(v12 > 1), v13 + 1, 1, v11);
  }
  uint64_t v11[2] = v13 + 1;
  sub_19EEBDC4C((uint64_t)v28, (uint64_t)&v11[5 * v13 + 4], &qword_1EB390DE8);
  sub_19F1DBEFC();
  sub_19EE67154((uint64_t)&v29);
  sub_19F1DBEFC();
  *((void *)&v30 + 1) = MEMORY[0x1E4FBC150];
  long long v31 = &off_1EF14CF40;
  LODWORD(v29) = a4;
  sub_19EE67690((uint64_t)&v29, (uint64_t)v28);
  unint64_t v15 = v11[2];
  unint64_t v14 = v11[3];
  if (v15 >= v14 >> 1) {
    uint64_t v11 = sub_19EE676F8((void *)(v14 > 1), v15 + 1, 1, v11);
  }
  uint64_t v11[2] = v15 + 1;
  sub_19EEBDC4C((uint64_t)v28, (uint64_t)&v11[5 * v15 + 4], &qword_1EB390DE8);
  sub_19F1DBEFC();
  sub_19EE67154((uint64_t)&v29);
  uint64_t v16 = sub_19F1DBEFC();
  *(void *)&long long v29 = 0;
  MEMORY[0x1F4188790](v16);
  _OWORD v26[2] = a1;
  _OWORD v26[3] = &v29;
  uint64_t result = (uint64_t)sub_19EE66FA0((uint64_t)sub_19EE6795C, (uint64_t)v26, v17, *((uint64_t *)&v27 + 1));
  if (v5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v19 = v29;
  if ((void)v29)
  {
    type metadata accessor for SQLiteStatement();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v19;
    *(void *)(inited + 24) = 0;
    sub_19EE673D8((uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v21 = sqlite3_step(*(sqlite3_stmt **)(inited + 16));
    if (qword_1EB3912E8 != -1) {
      swift_once();
    }
    if (sub_19EE672C4(v21, qword_1EB394F10))
    {
      uint64_t v22 = sub_19EE34DC4((uint64_t)&unk_1EF139590);
      if (sub_19EE672C4(v21, v22))
      {
        swift_bridgeObjectRelease();
        sub_19EE67C10(inited, (uint64_t)v32);
        swift_setDeallocating();
        sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
        uint64_t result = swift_bridgeObjectRelease();
        long long v23 = v32[1];
        *(_OWORD *)a5 = v32[0];
        *(_OWORD *)(a5 + 16) = v23;
        *(_OWORD *)(a5 + 32) = v32[2];
        *(void *)(a5 + 48) = v33;
        return result;
      }
      sub_19EFE0074();
      swift_allocError();
      *long long v25 = v21;
      swift_willThrow();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19EFE0074();
      swift_allocError();
      *long long v24 = v21;
      swift_willThrow();
    }
    swift_setDeallocating();
    sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19EFDFF9C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_url;
  uint64_t v2 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19EFE006C()
{
  return type metadata accessor for JetPackAssetDiskCacheSQLiteMetadataStore();
}

unint64_t sub_19EFE0074()
{
  unint64_t result = qword_1E9472350;
  if (!qword_1E9472350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472350);
  }
  return result;
}

uint64_t sub_19EFE00C8(uint64_t a1)
{
  return a1;
}

id LocalizerFactory.jsExport.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  return sub_19EF95D0C((uint64_t)v7, v8, a1, a2);
}

uint64_t dispatch thunk of LocalizerFactory.jsExport.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LocalizerFactory.localizer(forLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_19EEB8A6C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t static ComponentID.forItems(in:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  unint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v4;
  v7[3] = v3;
  v7[4] = v6;
  v7[5] = v5;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = sub_19EFE04F0;
  *(void *)(a2 + 16) = v7;
  *(unsigned char *)(a2 + 24) = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFE039C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19F1DD2EC();
  sub_19F1DBEFC();
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = a2;
  a6[1] = a3;
  a6[2] = a4;
  a6[3] = a5;
  a6[4] = 35;
  a6[5] = 0xE100000000000000;
  uint64_t v14 = v12 + 1;
  if (v12 == -1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19F1A56FC((uint64_t)"JetEngine/ComponentID.swift", 27, 2, 49, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v14 = 0;
  }
  *a1 = v14;
  return result;
}

uint64_t sub_19EFE04B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19EFE04F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19EFE039C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void __swiftcall ComponentID.init(at:in:)(JetEngine::ComponentID *__return_ptr retstr, Swift::UInt64 at, JetEngine::ShelfID in)
{
  JetEngine::PageID v6 = *(JetEngine::PageID *)in.parent.value._countAndFlagsBits;
  uint64_t v4 = *(void *)(in.parent.value._countAndFlagsBits + 16);
  uint64_t v5 = *(void **)(in.parent.value._countAndFlagsBits + 24);
  sub_19F1DD2EC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  retstr->parent.parent = v6;
  retstr->parent.value._uint64_t countAndFlagsBits = v4;
  retstr->parent.value._object = v5;
  retstr->value._uint64_t countAndFlagsBits = 35;
  retstr->value._object = (void *)0xE100000000000000;
}

void __swiftcall ComponentID.init(randomIn:)(JetEngine::ComponentID *__return_ptr retstr, JetEngine::ShelfID randomIn)
{
  uint64_t countAndFlagsBits = randomIn.parent.value._countAndFlagsBits;
  uint64_t v4 = sub_19F1DB5AC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  JetEngine::PageID v16 = *(JetEngine::PageID *)countAndFlagsBits;
  uint64_t v8 = *(void *)(countAndFlagsBits + 16);
  uint64_t v9 = *(void **)(countAndFlagsBits + 24);
  sub_19F1DB59C();
  uint64_t v10 = sub_19F1DB58C();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v21 = v10;
  uint64_t v22 = v12;
  uint64_t v19 = 45;
  unint64_t v20 = 0xE100000000000000;
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_19EEC4910();
  uint64_t v13 = sub_19F1DCB8C();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  retstr->parent.parent = v16;
  retstr->parent.value._uint64_t countAndFlagsBits = v8;
  retstr->parent.value._object = v9;
  retstr->value._uint64_t countAndFlagsBits = v13;
  retstr->value._object = v15;
}

__n128 ComponentID.init<A>(id:kind:in:)@<Q0>(uint64_t a1@<X2>, __n128 *a2@<X3>, uint64_t a3@<X4>, __n128 *a4@<X8>)
{
  __n128 v10 = *a2;
  unint64_t v7 = a2[1].n128_u64[0];
  unint64_t v8 = a2[1].n128_u64[1];
  sub_19F1DC0CC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  __n128 result = v10;
  *a4 = v10;
  a4[1].n128_u64[0] = v7;
  a4[1].n128_u64[1] = v8;
  a4[2].n128_u64[0] = v11;
  a4[2].n128_u64[1] = v12;
  return result;
}

void sub_19EFE07D4(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_19F1DCDBC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  __n128 v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = sub_19EFDD710(0x746E65726170, 0xE600000000000000, 1, a2);
  sub_19F1C57E4(a1, v11, v29);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v29[3];
    uint64_t v13 = *a1;
    unint64_t v14 = a1[1];
    unint64_t v15 = *(void *)(*a1 + 16);
    if (v14 == v15)
    {
      sub_19EFDD710(0x65756C6176, 0xE500000000000000, 1, a2);
      swift_bridgeObjectRelease();
      sub_19F1DCDAC();
      uint64_t v16 = sub_19F1DCDCC();
      swift_allocError();
      uint64_t v18 = v17;
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v17, v10, v7);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x1E4FBBA78], v16);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (v14 >= v15)
    {
      __break(1u);
    }
    else
    {
      uint64_t v30 = v29[2];
      uint64_t v19 = (void *)(v13 + 32 * v14);
      uint64_t v20 = v19[4];
      uint64_t v21 = v19[5];
      uint64_t v22 = v19[7];
      uint64_t v27 = v19[6];
      uint64_t v28 = v29[0];
      uint64_t v23 = v29[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[1] = v14 + 1;
      uint64_t v24 = MEMORY[0x19F3C6140](v20, v21, v27, v22);
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a3 = v28;
      a3[1] = v23;
      a3[2] = v30;
      a3[3] = v12;
      a3[4] = v24;
      a3[5] = v26;
    }
  }
}

uint64_t sub_19EFE0AAC()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ComponentID.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_19F1DCDBC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  uint64_t v9 = sub_19F1DD45C();
  unint64_t v11 = v10;
  uint64_t v38 = v6;
  uint64_t v29 = 45;
  unint64_t v30 = 0xE100000000000000;
  MEMORY[0x1F4188790](v9);
  *(&v24 - 2) = (uint64_t)&v29;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_19EEA0B44(0x7FFFFFFFFFFFFFFFLL, 1, sub_19EEA0FE8, (uint64_t)(&v24 - 4), v9, v11);
  swift_bridgeObjectRelease();
  uint64_t v35 = v12;
  unint64_t v36 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = (void *)sub_19F1DD86C();
  sub_19EFE07D4(&v35, v13, &v29);
  uint64_t v26 = v29;
  unint64_t v27 = v30;
  uint64_t v15 = v32;
  uint64_t v24 = v33;
  uint64_t v25 = v31;
  uint64_t v28 = v34;
  unint64_t v16 = v36;
  unint64_t v17 = *(void *)(v12 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v16 == v17)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
    unint64_t v18 = v27;
    *a2 = v26;
    a2[1] = v18;
    a2[2] = v25;
    a2[3] = v15;
    uint64_t v19 = v28;
    a2[4] = v24;
    a2[5] = v19;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  if (v16 >= v17)
  {
    __break(1u);
  }
  else
  {
    unint64_t v36 = v16 + 1;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD86C();
    sub_19F1DCDAC();
    uint64_t v20 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v22 = v21;
    uint64_t v23 = v38;
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v21, v8, v5);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA78], v20);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ComponentID.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t ComponentID.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall ComponentID.isChild(of:)(JetEngine::ShelfID of)
{
  uint64_t v2 = *(void *)(of.parent.value._countAndFlagsBits + 16);
  uint64_t v3 = *(void *)(of.parent.value._countAndFlagsBits + 24);
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  BOOL v6 = *v1 == *(void *)of.parent.value._countAndFlagsBits
    && v1[1] == *(void *)(of.parent.value._countAndFlagsBits + 8);
  if (v6 || (char v7 = sub_19F1DD44C(), result = 0, (v7 & 1) != 0))
  {
    if (v4 == v2 && v5 == v3)
    {
      return 1;
    }
    else
    {
      return sub_19F1DD44C();
    }
  }
  return result;
}

Swift::Bool __swiftcall ComponentID.isChild(of:)(JetEngine::PageID of)
{
  if (*v1 == *(void *)of.value._countAndFlagsBits && v1[1] == *(void *)(of.value._countAndFlagsBits + 8)) {
    return 1;
  }
  else {
    return sub_19F1DD44C();
  }
}

uint64_t ComponentID.hash(into:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t ComponentID.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFE1294()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFE1318()
{
  sub_19F1DBE9C();
  sub_19F1DBE9C();
  return sub_19F1DBE9C();
}

uint64_t sub_19EFE1384()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFE1404@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ComponentID.init(from:)(a1, a2);
}

uint64_t sub_19EFE141C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  sub_19EFE0AAC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19EFE14F0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s9JetEngine11ComponentIDV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_19F1DD44C(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_19F1DD44C(), uint64_t result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
      {
        return 1;
      }
      else
      {
        return sub_19F1DD44C();
      }
    }
  }
  return result;
}

unint64_t sub_19EFE1628()
{
  unint64_t result = qword_1E9472360;
  if (!qword_1E9472360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472360);
  }
  return result;
}

uint64_t destroy for ComponentID()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ComponentID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ComponentID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ComponentID(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ComponentID()
{
  return &type metadata for ComponentID;
}

unint64_t sub_19EFE1814()
{
  unint64_t result = qword_1E9472368;
  if (!qword_1E9472368)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9472370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472368);
  }
  return result;
}

NSPropertyListFormat __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSPropertyListFormat.init(_:)(JSValue a1)
{
  sub_19EFE2108(a1.super.isa);
  return result;
}

void sub_19EFE1888(void *a1@<X0>, void *a2@<X8>)
{
  sub_19EFE2108(a1);
  if (!v2) {
    *a2 = v4;
  }
}

void sub_19EFE18B4(void *a1, void *a2)
{
  _OWORD v25[4] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_19F1DBDEC();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a2, sel_isString, v6)
    || (id v9 = objc_msgSend(a2, sel_toString)) == 0)
  {
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(a2, v15);
    goto LABEL_6;
  }
  char v10 = v9;
  sub_19F1DBD7C();

  sub_19F1DBDCC();
  uint64_t v11 = sub_19F1DBD8C();
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v13 >> 60 == 15)
  {
    sub_19EF600C0();
    swift_allocError();
    *(void *)uint64_t v14 = 0xD00000000000002BLL;
    *(void *)(v14 + 8) = 0x800000019F26CB50;
    *(void *)(v14 + 16) = 0;
    *(unsigned char *)(v14 + 24) = 1;
    *(void *)(v14 + 32) = 0;
    *(unsigned char *)(v14 + 40) = 1;
    *(_OWORD *)(v14 + 48) = 0u;
    *(_OWORD *)(v14 + 64) = 0u;
    *(_OWORD *)(v14 + 80) = 0u;
    *(void *)(v14 + 96) = 0;
LABEL_6:
    swift_willThrow();
    return;
  }
  unint64_t v16 = self;
  unint64_t v17 = (void *)sub_19F1DB3EC();
  id v24 = 0;
  id v18 = objc_msgSend(v16, sel_propertyListWithData_options_format_error_, v17, 0, 0, &v24);

  id v19 = v24;
  if (v18)
  {
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    id v20 = a1;
    uint64_t v21 = sub_19F1DD42C();
    id v22 = objc_msgSend(self, sel_valueWithObject_inContext_, v21, v20);
    swift_unknownObjectRelease();

    if (v22)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      sub_19EED5BFC(v11, v13);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v23 = v19;
    sub_19F1DB19C();

    swift_willThrow();
    sub_19EED5BFC(v11, v13);
  }
}

void sub_19EFE1D08(void *a1, void *a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_19F1DBDEC();
  if ((objc_msgSend(a2, sel_isUndefined, MEMORY[0x1F4188790](v7 - 8)) & 1) != 0
    || (objc_msgSend(a2, sel_isNull) & 1) != 0)
  {
    uint64_t v8 = 100;
  }
  else
  {
    sub_19EFE2108(a2);
    if (v3) {
      return;
    }
    uint64_t v8 = v21;
  }
  if (objc_msgSend(a3, sel_toObject))
  {
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
    sub_19EEBDC00(v25, &v26);
    id v9 = self;
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    uint64_t v10 = sub_19F1DD42C();
    *(void *)&v25[0] = 0;
    id v11 = objc_msgSend(v9, sel_dataWithPropertyList_format_options_error_, v10, v8, 0, v25);
    swift_unknownObjectRelease();
    id v12 = *(id *)&v25[0];
    if (v11)
    {
      uint64_t v13 = sub_19F1DB40C();
      unint64_t v15 = v14;

      sub_19F1DBDCC();
      uint64_t v16 = sub_19F1DBD9C();
      if (v17)
      {
        *(void *)&v25[0] = v16;
        *((void *)&v25[0] + 1) = v17;
        id v18 = a1;
        uint64_t v19 = sub_19F1DD42C();
        sub_19EFE2310((uint64_t)v25);
      }
      else
      {
        id v23 = a1;
        uint64_t v19 = 0;
      }
      id v24 = objc_msgSend(self, sel_valueWithObject_inContext_, v19, a1);
      swift_unknownObjectRelease();

      if (v24)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
        sub_19EEA072C(v13, v15);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      id v22 = v12;
      sub_19F1DB19C();

      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
    }
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(a3, v20);
    swift_willThrow();
  }
}

void sub_19EFE2108(void *a1)
{
  if (!objc_msgSend(a1, sel_isString)) {
    goto LABEL_20;
  }
  id v2 = objc_msgSend(a1, sel_toString);
  if (!v2) {
    goto LABEL_20;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_19F1DBD7C();
  uint64_t v6 = v5;

  BOOL v7 = v4 == 0x6574732D6E65706FLL && v6 == 0xE900000000000070;
  if (v7
    || (sub_19F1DD44C() & 1) != 0
    || (v4 == 7105912 ? (BOOL v8 = v6 == 0xE300000000000000) : (BOOL v8 = 0), v8 || (sub_19F1DD44C() & 1) != 0))
  {
    swift_bridgeObjectRelease();

    return;
  }
  if (v4 == 0x7972616E6962 && v6 == 0xE600000000000000)
  {

    swift_bridgeObjectRelease();
    return;
  }
  char v9 = sub_19F1DD44C();
  swift_bridgeObjectRelease();
  if (v9)
  {
  }
  else
  {
LABEL_20:
    sub_19EF600C0();
    swift_allocError();
    uint64_t v11 = v10;
    id v12 = a1;
    JSError.init(badValue:expected:)(v12, v11);
    swift_willThrow();
  }
}

uint64_t sub_19EFE2310(uint64_t a1)
{
  return a1;
}

id sub_19EFE2364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a4;
  uint64_t v7 = type metadata accessor for PageRenderEventActivityChange();
  MEMORY[0x1F4188790](v7);
  char v9 = (uint64_t *)((char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  sub_19EE9CA30(a2, a3, (uint64_t)v38);
  swift_bridgeObjectRelease();
  sub_19EE9C910(v38);
  sub_19EEBDC4C((uint64_t)v38, (uint64_t)v51, &qword_1E946EC30);
  if (v52)
  {
    uint64_t v35 = v7;
    unint64_t v36 = v9;
    swift_bridgeObjectRetain();
    sub_19EE9CA30(a2, a3, (uint64_t)v39);
    swift_bridgeObjectRelease();
    sub_19EEBDC4C((uint64_t)v39, (uint64_t)&v41, &qword_1E946EC30);
    sub_19EEBDC4C((uint64_t)v39, (uint64_t)&v47, &qword_1E946EC30);
    if (!*((void *)&v47 + 1)) {
      goto LABEL_12;
    }
    uint64_t v34 = a1;
    long long v49 = v47;
    v50[0] = v48[0];
    *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)((char *)v48 + 9);
    sub_19EEBDC4C((uint64_t)&v49, (uint64_t)v53, &qword_1E946F508);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19EE9CA04((uint64_t)v53);
    swift_release();
    uint64_t v54 = *(void *)&v50[0];
    sub_19EE9C9D8((uint64_t)&v54);
    long long v55 = *(_OWORD *)((char *)v50 + 8);
    sub_19EE9C9AC((uint64_t)&v55);
    sub_19EFA69E0();
    uint64_t v10 = v42;
    if (v42)
    {
      uint64_t v11 = v41;
      uint64_t v33 = a2;
      v56[0] = v41;
      v56[1] = v42;
      v56[2] = v43;
      int v57 = v44;
      uint64_t v58 = v45;
      char v59 = v46 & 1;
      swift_bridgeObjectRetain();
      sub_19EE9DC80(v11, v10);
      sub_19EE9CCA8((uint64_t)v56, v33, a3, (uint64_t)v40);
      swift_bridgeObjectRelease();
      a2 = v33;
      sub_19EE9C948(v11, v10);
      sub_19EE9C910(v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRetain();
      sub_19EFE2970(a2, a3, (uint64_t)v56);
      swift_bridgeObjectRelease();
      sub_19EE9C910(v56);
    }
    sub_19EFE2970(a2, a3, (uint64_t)&v41);
    id result = sub_19EE9C910(&v41);
    if (qword_1E946FC20 != -1) {
      id result = (id)swift_once();
    }
    if (byte_1E9498AF8 == 1)
    {
      if (qword_1E94701C0 != -1) {
        swift_once();
      }
      uint64_t v25 = qword_1E9498B88;
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472378);
      uint64_t v27 = (uint64_t)v36;
      uint64_t v28 = (char *)v36 + *(int *)(v26 + 48);
      *unint64_t v36 = a2;
      *(void *)(v27 + 8) = a3;
      uint64_t v29 = sub_19F1DB97C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v28, v37, v29);
      swift_storeEnumTagMultiPayload();
      unint64_t v30 = *(void **)(v25 + 16);
      swift_bridgeObjectRetain();
      objc_msgSend(v30, sel_lock);
      uint64_t v31 = v60;
      sub_19F1AB08C(v25, v27);
      uint64_t v60 = v31;
      if (v31)
      {
        id result = objc_msgSend(v30, sel_unlock);
        __break(1u);
      }
      else
      {
        objc_msgSend(v30, sel_unlock);
        return (id)sub_19EFE2C40(v27);
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
    if (qword_1E946FC40 != -1) {
      swift_once();
    }
    sub_19F1DD95C();
    uint64_t v13 = (uint64_t)v57;
    uint64_t v14 = v58;
    __swift_project_boxed_opaque_existential_1(v56, (uint64_t)v57);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19F24EAD0;
    v39[0] = sub_19EEC3F3C(0, 62, 0, MEMORY[0x1E4FBC860]);
    v16._object = (void *)0x800000019F26CCC0;
    v16._uint64_t countAndFlagsBits = 0xD000000000000033;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    double v44 = &type metadata for OperationID;
    uint64_t v41 = v12;
    uint64_t v42 = a3;
    sub_19EEBCD00((uint64_t)&v41, (uint64_t)v40);
    long long v47 = 0u;
    v48[0] = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v40, (uint64_t)&v47);
    LOBYTE(v50[1]) = 0;
    long long v49 = v47;
    v50[0] = v48[0];
    uint64_t v17 = (void *)v39[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
    }
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      uint64_t v17 = sub_19EEC3F3C((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    void v17[2] = v19 + 1;
    uint64_t v20 = &v17[5 * v19];
    long long v21 = v49;
    long long v22 = v50[0];
    *((unsigned char *)v20 + 64) = v50[1];
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v22;
    v39[0] = v17;
    sub_19EEBD664((uint64_t)&v41, &qword_1EB393260);
    v23._uint64_t countAndFlagsBits = 0x756F6620746F6E20;
    v23._object = (void *)0xEA0000000000646ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *(void *)(v15 + 32) = v39[0];
    Logger.error(_:)(v15, v13, v14);
    swift_bridgeObjectRelease();
    return (id)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v56);
  }
  return result;
}

uint64_t sub_19EFE2970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  uint64_t v24 = a2;
  unint64_t v8 = sub_19EEBB074(a1, a2);
  char v10 = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    char v20 = 0;
    goto LABEL_7;
  }
  uint64_t v23 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v3 + 8);
  uint64_t v25 = *(void *)(v4 + 8);
  *(void *)(v4 + 8) = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_19EFBF33C();
    uint64_t v13 = v25;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v13 + 56) + 48 * v8;
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)(v14 + 8);
  uint64_t v17 = *(void *)(v14 + 16);
  uint64_t v18 = *(void *)(v14 + 24);
  uint64_t v19 = *(void *)(v14 + 32);
  char v20 = *(unsigned char *)(v14 + 40);
  sub_19EF6CD5C(v8, v13);
  *(void *)(v4 + 8) = v13;
  swift_bridgeObjectRelease();
  unint64_t v21 = sub_19EE9D630(v23, v24, *(void **)(v4 + 16));
  if ((v22 & 1) == 0)
  {
    sub_19EE9D718(v21);
    uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
    *(void *)a3 = v15;
    *(void *)(a3 + 8) = v16;
    *(void *)(a3 + 16) = v17;
    *(void *)(a3 + 24) = v18;
    *(void *)(a3 + 32) = v19;
    *(unsigned char *)(a3 + 40) = v20;
    return result;
  }
  swift_bridgeObjectRetain();
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19EFE2B8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  if (v3[2])
  {
    uint64_t v5 = v3[4];
    uint64_t v4 = v3[5];
    swift_bridgeObjectRetain();
    sub_19F16638C(0, 1);
    sub_19EF6B6E0(v5, v4, (uint64_t)v13);
    long long v11 = v13[1];
    long long v12 = v13[0];
    uint64_t v6 = v14;
    char v7 = v15;
    uint64_t result = swift_bridgeObjectRelease();
    long long v10 = v11;
    long long v9 = v12;
  }
  else
  {
    uint64_t v6 = 0;
    char v7 = 0;
    long long v9 = 0uLL;
    long long v10 = 0uLL;
  }
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  return result;
}

uint64_t sub_19EFE2C40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageRenderEventActivityChange();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19EFE2C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB97C();
  uint64_t v64 = *(void **)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v59 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v61 = (char *)&v59 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v60 = (char *)&v59 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (char *)&v59 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v63 = (char *)&v59 - v13;
  uint64_t v14 = type metadata accessor for PageRenderEventActivityChange();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (uint64_t *)((char *)&v59 - v18);
  MEMORY[0x1F4188790](v20);
  char v22 = (uint64_t *)((char *)&v59 - v21);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (uint64_t *)((char *)&v59 - v24);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472380);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v59 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v30 = &v28[*(int *)(v29 + 56)];
  sub_19EFE390C(a1, (uint64_t)v28);
  sub_19EFE390C(a2, (uint64_t)v30);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_19EFE390C((uint64_t)v28, (uint64_t)v22);
      uint64_t v31 = v22[1];
      uint64_t v32 = v22[2];
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_22;
      }
      uint64_t v35 = *v22;
      goto LABEL_14;
    case 2u:
      sub_19EFE390C((uint64_t)v28, (uint64_t)v19);
      uint64_t v31 = v19[1];
      uint64_t v32 = v19[2];
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_22;
      }
      uint64_t v35 = *v19;
LABEL_14:
      uint64_t v34 = *((void *)v30 + 2);
      if (v35 == *(void *)v30)
      {
        uint64_t v33 = *((void *)v30 + 1);
LABEL_16:
        if (v31 == v33 && v32 == v34) {
          char v48 = 1;
        }
        else {
          char v48 = sub_19F1DD44C();
        }
      }
      else
      {
        char v48 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    case 3u:
      sub_19EFE390C((uint64_t)v28, (uint64_t)v16);
      uint64_t v36 = *v16;
      uint64_t v37 = v16[1];
      uint64_t v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9472378) + 48);
      long long v39 = (char *)v16 + v38;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v41 = *(void *)v30;
        uint64_t v40 = *((void *)v30 + 1);
        uint64_t v42 = &v30[v38];
        uint64_t v43 = (void (*)(char *, char *, uint64_t))v64[4];
        v43(v63, v39, v4);
        double v44 = v62;
        v43(v62, v42, v4);
        if (v36 == v41 && v37 == v40) {
          char v46 = 1;
        }
        else {
          char v46 = sub_19F1DD44C();
        }
        long long v49 = v60;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        os_log_t v50 = (void (*)(char *, char *, uint64_t))v64[2];
        v50(v49, v63, v4);
        uint64_t v51 = v61;
        v50(v61, v44, v4);
        if (v46)
        {
          uint64_t v52 = v59;
          v50(v59, v49, v4);
          uint64_t v53 = sub_19F1DBE2C();
          uint64_t v55 = v54;
          v50(v52, v51, v4);
          if (v53 == sub_19F1DBE2C() && v55 == v56) {
            char v48 = 1;
          }
          else {
            char v48 = sub_19F1DD44C();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v48 = 0;
        }
        int v57 = (void (*)(char *, uint64_t))v64[1];
        v57(v51, v4);
        v57(v49, v4);
        v57(v62, v4);
        v57(v63, v4);
LABEL_35:
        sub_19EFE2C40((uint64_t)v28);
      }
      else
      {
        ((void (*)(char *, uint64_t))v64[1])((char *)v16 + v38, v4);
LABEL_22:
        swift_bridgeObjectRelease();
        sub_19EEBD664((uint64_t)v28, &qword_1E9472380);
        char v48 = 0;
      }
      return v48 & 1;
    default:
      sub_19EFE390C((uint64_t)v28, (uint64_t)v25);
      uint64_t v31 = *v25;
      uint64_t v32 = v25[1];
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_22;
      }
      uint64_t v33 = *(void *)v30;
      uint64_t v34 = *((void *)v30 + 1);
      goto LABEL_16;
  }
}

uint64_t *sub_19EFE3268(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9472378) + 48);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_19F1DB97C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_19EFE3400(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9472378) + 48);
      uint64_t v4 = sub_19F1DB97C();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(v3, v4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19EFE34F4(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      swift_bridgeObjectRetain();
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9472378) + 48);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_19F1DB97C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_19EFE360C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_19EFE2C40((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        break;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9472378) + 48);
        uint64_t v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = sub_19F1DB97C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_19EFE374C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9472378) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_19F1DB97C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_19EFE3824(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_19EFE2C40((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9472378) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_19F1DB97C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_19EFE390C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageRenderEventActivityChange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Dictionary<>.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v42 = a4;
  uint64_t v7 = sub_19F1DCAAC();
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = sub_19F1DCF8C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[1];
  uint64_t v41 = *a1;
  *(void *)&long long v46 = v41;
  *((void *)&v46 + 1) = v14;
  uint64_t v15 = type metadata accessor for JSONContext.Property();
  JSONContext.Property.codingUserInfoKey.getter((uint64_t)v13);
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_19EE71FE4((uint64_t)v13), (v17 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a2 + 56) + 32 * v16, (uint64_t)&v46);
  }
  else
  {
    long long v46 = 0u;
    long long v47 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (*((void *)&v47 + 1))
  {
    sub_19EEBDC00(&v46, v51);
    sub_19EEBDBA4((uint64_t)v51, (uint64_t)&v46);
    int v18 = swift_dynamicCast();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);
    if (v18)
    {
      uint64_t v20 = *(void *)(a3 - 8);
      v19(v9, 0, 1, a3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
      uint64_t v21 = v42;
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v42, v9, a3);
      uint64_t v22 = v21;
      uint64_t v23 = 0;
    }
    else
    {
      v19(v9, 1, 1, a3);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v7);
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v25 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_19F24EB80;
      id v27 = v25;
      os_log_t v50 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
      v28._object = (void *)0x800000019F26BAB0;
      v28._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      v49[3] = v15;
      v49[0] = v41;
      v49[1] = v14;
      sub_19EEBCD00((uint64_t)v49, (uint64_t)v45);
      long long v44 = 0u;
      long long v43 = 0u;
      swift_bridgeObjectRetain();
      sub_19EEC3E70((uint64_t)v45, (uint64_t)&v43);
      char v48 = 0;
      long long v46 = v43;
      long long v47 = v44;
      uint64_t v29 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v29 = sub_19EEC3F3C(0, v29[2] + 1, 1, v29);
      }
      unint64_t v31 = v29[2];
      unint64_t v30 = v29[3];
      if (v31 >= v30 >> 1) {
        uint64_t v29 = sub_19EEC3F3C((void *)(v30 > 1), v31 + 1, 1, v29);
      }
      _OWORD v29[2] = v31 + 1;
      uint64_t v32 = &v29[5 * v31];
      long long v33 = v46;
      long long v34 = v47;
      *((unsigned char *)v32 + 64) = v48;
      *((_OWORD *)v32 + 2) = v33;
      *((_OWORD *)v32 + 3) = v34;
      os_log_t v50 = v29;
      sub_19EEBD664((uint64_t)v49, &qword_1EB393260);
      v35._uint64_t countAndFlagsBits = 96;
      v35._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      *(void *)(v26 + 32) = v50;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v36 = swift_allocObject();
      uint64_t v37 = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)(v36 + 16) = xmmword_19F24EAD0;
      *((void *)&v44 + 1) = v37;
      *(void *)&long long v43 = 0xD000000000000027;
      *((void *)&v43 + 1) = 0x800000019F26AE20;
      long long v46 = 0u;
      long long v47 = 0u;
      sub_19EEC3E70((uint64_t)&v43, (uint64_t)&v46);
      *(unsigned char *)(v36 + 64) = 0;
      long long v38 = v47;
      *(_OWORD *)(v36 + 32) = v46;
      *(_OWORD *)(v36 + 48) = v38;
      *(void *)(v26 + 40) = v36;
      *(void *)&long long v46 = v27;
      LOBYTE(v43) = 1;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v26, (JetEngine::LogMessageLevel)&v43);

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
      uint64_t v22 = v42;
      uint64_t v23 = 1;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v22, v23, 1, a3);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v46, &qword_1EB393260);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(v42, 1, 1, a3);
  }
}

uint64_t sub_19EFE3F14@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 8);
  uint64_t v6 = *a1;
  uint64_t v7 = a2[1];
  v9[0] = *a2;
  v9[1] = v7;
  swift_bridgeObjectRetain();
  Dictionary<>.subscript.getter(v9, v6, v5, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFE3F88(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = *(uint64_t *)((char *)a3 + a4 - 8);
  uint64_t v7 = sub_19F1DCAAC();
  double v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v15 - v9;
  uint64_t v12 = *a3;
  uint64_t v11 = a3[1];
  (*(void (**)(char *, uint64_t, double))(v13 + 16))((char *)v15 - v9, a1, v8);
  v15[0] = v12;
  v15[1] = v11;
  swift_bridgeObjectRetain();
  return Dictionary<>.subscript.setter((uint64_t)v10, v15, v6);
}

uint64_t Dictionary<>.subscript.setter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v64 = sub_19F1DCF8C();
  uint64_t v63 = *(void (***)(char *, uint64_t))(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DCAAC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v59 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v61 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v59 - v16;
  uint64_t v19 = *a2;
  uint64_t v18 = a2[1];
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v11, a1, v8, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v11, 1, a3) == 1)
  {
    uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v11, v8);
    *(void *)&long long v68 = v19;
    *((void *)&v68 + 1) = v18;
    type metadata accessor for JSONContext.Property();
    JSONContext.Property.codingUserInfoKey.getter((uint64_t)v7);
    swift_bridgeObjectRelease();
    double v23 = sub_19EF6B340((uint64_t)v7, &v68);
    ((void (*)(uint64_t, uint64_t, double))v22)(a1, v8, v23);
    v63[1](v7, v64);
    return sub_19EEBD664((uint64_t)&v68, &qword_1EB393260);
  }
  uint64_t v60 = v9;
  uint64_t v59 = v8;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v17, v11, a3);
  *((void *)&v66 + 1) = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v65);
  (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 16))(boxed_opaque_existential_2Tm, v17, a3);
  uint64_t v25 = v19;
  uint64_t v71 = v19;
  uint64_t v72 = v18;
  uint64_t v26 = type metadata accessor for JSONContext.Property();
  JSONContext.Property.codingUserInfoKey.getter((uint64_t)v7);
  id v27 = v62;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v71 = *v27;
  uint64_t *v27 = 0x8000000000000000;
  sub_19F044E30(&v65, (uint64_t)v7, isUniquelyReferenced_nonNull_native, &v68);
  uint64_t *v27 = v71;
  swift_bridgeObjectRelease();
  v63[1](v7, v64);
  if (!*((void *)&v69 + 1))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(a1, v59);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, a3);
    return sub_19EEBD664((uint64_t)&v68, &qword_1EB393260);
  }
  uint64_t v64 = (uint64_t)v17;
  uint64_t v29 = v21;
  sub_19EEBDC00(&v68, &v75);
  sub_19EEBDBA4((uint64_t)&v75, (uint64_t)&v68);
  unint64_t v30 = v61;
  char v31 = swift_dynamicCast();
  uint64_t v32 = a1;
  uint64_t v33 = v60;
  if (v31)
  {
    swift_bridgeObjectRelease();
    long long v34 = *(void (**)(char *, uint64_t))(v21 + 8);
    v34(v30, a3);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v59);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v75);
    return ((uint64_t (*)(uint64_t, uint64_t))v34)(v64, a3);
  }
  else
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v36 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_19F24DBC0;
    uint64_t v63 = v36;
    char v74 = sub_19EEC3F3C(0, 33, 0, MEMORY[0x1E4FBC860]);
    v38._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v38._object = (void *)0x800000019F26CD60;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    uint64_t MetatypeMetadata = v26;
    uint64_t v71 = v25;
    uint64_t v72 = v18;
    sub_19EEBCD00((uint64_t)&v71, (uint64_t)v67);
    long long v66 = 0u;
    long long v65 = 0u;
    sub_19EEC3E70((uint64_t)v67, (uint64_t)&v65);
    char v70 = 0;
    long long v68 = v65;
    long long v69 = v66;
    uint64_t v39 = v74;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v39 = sub_19EEC3F3C(0, v39[2] + 1, 1, v39);
    }
    uint64_t v40 = v59;
    unint64_t v42 = v39[2];
    unint64_t v41 = v39[3];
    if (v42 >= v41 >> 1) {
      uint64_t v39 = sub_19EEC3F3C((void *)(v41 > 1), v42 + 1, 1, v39);
    }
    v39[2] = v42 + 1;
    long long v43 = &v39[5 * v42];
    long long v44 = v68;
    long long v45 = v69;
    *((unsigned char *)v43 + 64) = v70;
    *((_OWORD *)v43 + 2) = v44;
    *((_OWORD *)v43 + 3) = v45;
    char v74 = v39;
    sub_19EEBD664((uint64_t)&v71, &qword_1EB393260);
    v46._uint64_t countAndFlagsBits = 96;
    v46._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    *(void *)(v37 + 32) = v74;
    char v74 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
    v47._uint64_t countAndFlagsBits = 0xD000000000000019;
    v47._object = (void *)0x800000019F26CD80;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    __swift_project_boxed_opaque_existential_1(&v75, v76);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v71 = DynamicType;
    sub_19EEBCD00((uint64_t)&v71, (uint64_t)v67);
    long long v66 = 0u;
    long long v65 = 0u;
    sub_19EEC3E70((uint64_t)v67, (uint64_t)&v65);
    char v70 = 0;
    long long v68 = v65;
    long long v69 = v66;
    long long v49 = v74;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v49 = sub_19EEC3F3C(0, v49[2] + 1, 1, v49);
    }
    unint64_t v51 = v49[2];
    unint64_t v50 = v49[3];
    if (v51 >= v50 >> 1) {
      long long v49 = sub_19EEC3F3C((void *)(v50 > 1), v51 + 1, 1, v49);
    }
    long long v49[2] = v51 + 1;
    uint64_t v52 = &v49[5 * v51];
    long long v53 = v68;
    long long v54 = v69;
    *((unsigned char *)v52 + 64) = v70;
    *((_OWORD *)v52 + 2) = v53;
    *((_OWORD *)v52 + 3) = v54;
    char v74 = v49;
    sub_19EEBD664((uint64_t)&v71, &qword_1EB393260);
    v55._uint64_t countAndFlagsBits = 11838;
    v55._object = (void *)0xE200000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v55);
    *(void *)(v37 + 40) = v74;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_19F24EAD0;
    *((void *)&v66 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v65 = 0xD000000000000018;
    *((void *)&v65 + 1) = 0x800000019F26CDA0;
    long long v68 = 0u;
    long long v69 = 0u;
    sub_19EEC3E70((uint64_t)&v65, (uint64_t)&v68);
    *(unsigned char *)(v56 + 64) = 0;
    long long v57 = v69;
    *(_OWORD *)(v56 + 32) = v68;
    *(_OWORD *)(v56 + 48) = v57;
    *(void *)(v37 + 48) = v56;
    uint64_t v58 = v63;
    *(void *)&long long v68 = v63;
    LOBYTE(v65) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v37, (JetEngine::LogMessageLevel)&v65);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v32, v40);

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v75);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v64, a3);
  }
}

void (*Dictionary<>.subscript.modify(void *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x50uLL);
  *a1 = v7;
  _OWORD v7[2] = a3;
  v7[3] = v3;
  uint64_t v8 = sub_19F1DCAAC();
  v7[4] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[5] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[6] = malloc(v10);
  uint64_t v11 = malloc(v10);
  uint64_t v13 = *a2;
  uint64_t v12 = a2[1];
  v7[7] = v11;
  v7[8] = v13;
  v7[9] = v12;
  *uint64_t v7 = v13;
  v7[1] = v12;
  uint64_t v14 = *v3;
  swift_bridgeObjectRetain();
  Dictionary<>.subscript.getter(a2, v14, a3, (uint64_t)v11);
  return sub_19EFE4A3C;
}

void sub_19EFE4A3C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    uint64_t v4 = v2[8];
    uint64_t v3 = v2[9];
    uint64_t v6 = (void *)v2[6];
    uint64_t v5 = (void *)v2[7];
    uint64_t v7 = v2[4];
    uint64_t v8 = v2[5];
    uint64_t v9 = v2[2];
    (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v6, v5, v7);
    v10[0] = v4;
    v10[1] = v3;
    Dictionary<>.subscript.setter((uint64_t)v6, v10, v9);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
  }
  else
  {
    uint64_t v6 = (void *)v2[6];
    uint64_t v5 = (void *)v2[7];
    Dictionary<>.subscript.setter((uint64_t)v5, v2, v2[2]);
  }
  free(v5);
  free(v6);
  free(v2);
}

uint64_t sub_19EFE4B28()
{
  return 8;
}

void *sub_19EFE4B34(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_19EFE4B40()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t Dictionary<>.init(deserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a2;
  v8[2] = a3;
  void v8[3] = a4;
  v8[4] = v5;
  uint64_t v6 = JSONDictionary.compactMap<A, B>(_:)((uint64_t)sub_19EFE4D98, (uint64_t)v8, MEMORY[0x1E4FBB1A0], a3, MEMORY[0x1E4FBB1B0]);
  sub_19EEC05FC(a1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t Dictionary<>.init(tryDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a2;
  v8[2] = a3;
  void v8[3] = a4;
  v8[4] = v5;
  uint64_t v6 = JSONDictionary.compactMap<A, B>(_:)((uint64_t)sub_19EFE5078, (uint64_t)v8, MEMORY[0x1E4FBB1A0], a3, MEMORY[0x1E4FBB1B0]);
  sub_19EEC05FC(a1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_19EFE4C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a7 = a1;
  a7[1] = a2;
  sub_19EEC355C(a3, (uint64_t)v18);
  uint64_t v19 = a4;
  double v15 = *(void (**)(unsigned char *, uint64_t *, uint64_t, uint64_t))(a6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v18, &v19, a5, a6);
  if (v17) {
    return swift_bridgeObjectRelease();
  }
  else {
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(a7, 0, 1, TupleTypeMetadata2);
  }
}

uint64_t sub_19EFE4D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_19EFE4C6C(a1, a2, a3, v4[4], v4[2], v4[3], a4);
}

uint64_t sub_19EFE4DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  unint64_t v30 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v11 = sub_19F1DCAAC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEC355C(a3, (uint64_t)v31);
  uint64_t v32 = a4;
  uint64_t v19 = *(void (**)(unsigned char *, uint64_t *, uint64_t, uint64_t))(a6 + 16);
  swift_bridgeObjectRetain();
  v19(v31, &v32, a5, a6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v30, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v22(v18, v14, a5);
    uint64_t v23 = swift_getTupleTypeMetadata2();
    uint64_t v25 = v29;
    uint64_t v24 = v30;
    uint64_t v26 = (char *)v30 + *(int *)(v23 + 48);
    *unint64_t v30 = v28;
    v24[1] = v25;
    v22(v26, v18, a5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v24, 0, 1, v23);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_19EFE5078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_19EFE4DB8(a1, a2, a3, v4[4], v4[2], v4[3], a4);
}

uint64_t Dictionary<>.init(deserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *a2;
  uint64_t v11[2] = a3;
  void v11[3] = a4;
  void v11[4] = a5;
  v11[5] = a6;
  v11[6] = a7;
  v11[7] = v8;
  uint64_t v9 = JSONDictionary.compactMap<A, B>(_:)((uint64_t)sub_19EFE542C, (uint64_t)v11, a3, a4, a5);
  sub_19EEC05FC(a1);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_19EFE5114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v30 = a6;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v32 = a7;
  uint64_t v11 = sub_19F1DCAAC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = a1;
  v33[0] = a1;
  v33[1] = a2;
  swift_bridgeObjectRetain();
  sub_19F1DC0DC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_19EF5B580();
    swift_allocError();
    *uint64_t v19 = TupleTypeMetadata2;
    v19[1] = a2;
    uint64_t v19[2] = a5 | 0x6000000000000000;
    _OWORD v19[3] = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v14, a5);
    uint64_t v21 = v30;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v22 = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v32, v18, a5);
    sub_19EEC355C(v28, (uint64_t)v33);
    uint64_t v34 = v29;
    uint64_t v23 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(a8 + 8);
    swift_bridgeObjectRetain();
    uint64_t v24 = v31;
    v23(v33, &v34, v21, a8);
    uint64_t v25 = *(void (**)(char *, uint64_t))(v15 + 8);
    v25(v18, a5);
    if (v24) {
      return ((uint64_t (*)(uint64_t, uint64_t))v25)(v22, a5);
    }
    else {
      return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v22, 0, 1);
    }
  }
}

uint64_t sub_19EFE542C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFE5A50(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_19EFE5114);
}

uint64_t Dictionary<>.init(tryDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *a2;
  uint64_t v11[2] = a3;
  void v11[3] = a4;
  void v11[4] = a5;
  v11[5] = a6;
  v11[6] = a7;
  v11[7] = v8;
  uint64_t v9 = JSONDictionary.compactMap<A, B>(_:)((uint64_t)sub_19EFE5A24, (uint64_t)v11, a3, a4, a5);
  sub_19EEC05FC(a1);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_19EFE54D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(char *, char *, uint64_t)@<X7>, char *a8@<X8>, uint64_t a9)
{
  unint64_t v50 = a7;
  Swift::String v55 = a4;
  uint64_t v46 = a3;
  long long v49 = a8;
  uint64_t v13 = sub_19F1DCAAC();
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  MEMORY[0x1F4188790](v13);
  Swift::String v47 = (char *)&v41 - v14;
  uint64_t v48 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v41 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_19F1DCAAC();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  v54[0] = a1;
  v54[1] = a2;
  swift_bridgeObjectRetain();
  sub_19F1DC0DC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v25 = (uint64_t)v55;
    swift_bridgeObjectRetain();
    sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, v25, (uint64_t)v54);
    swift_bridgeObjectRelease();
    sub_19EFE5A88((uint64_t)v54, (uint64_t)v51);
    uint64_t v26 = v52;
    if (v52)
    {
      uint64_t v27 = v53;
      __swift_project_boxed_opaque_existential_1(v51, v52);
      sub_19EF5B580();
      uint64_t v28 = (void *)swift_allocError();
      uint64_t v29 = v45;
      *uint64_t v30 = v44;
      v30[1] = v29;
      v30[2] = a5 | 0x6000000000000000;
      v30[3] = 0;
      uint64_t v31 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v27 + 8);
      swift_bridgeObjectRetain();
      v31(a5, v28, v26, v27);
      sub_19EFE5AF0((uint64_t)v54);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
    }
    else
    {
      sub_19EFE5AF0((uint64_t)v54);
      sub_19EFE5AF0((uint64_t)v51);
    }
  }
  else
  {
    unint64_t v50 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v50(v24, v20, a5);
    sub_19EEC355C(v46, (uint64_t)v54);
    v51[0] = v55;
    uint64_t v32 = *(void (**)(void *, void *, uint64_t, uint64_t))(a9 + 16);
    swift_bridgeObjectRetain();
    uint64_t v33 = v47;
    v32(v54, v51, a6, a9);
    uint64_t v34 = v48;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v33, 1, a6) != 1)
    {
      Swift::String v55 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
      Swift::String v35 = v41;
      v55(v41, v33, a6);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v37 = v49;
      Swift::String v38 = &v49[*(int *)(TupleTypeMetadata2 + 48)];
      v50(v49, v24, a5);
      v55(v38, v35, a6);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v37, 0, 1, TupleTypeMetadata2);
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, a5);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v43);
  }
  uint64_t v40 = swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v49, 1, 1, v40);
}

uint64_t sub_19EFE5A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EFE5A50(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_19EFE54D0);
}

uint64_t sub_19EFE5A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a4(a1, a2, a3, v4[7], v4[2], v4[3], v4[4], v4[5], v4[6]);
}

uint64_t sub_19EFE5A88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946D938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EFE5AF0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946D938);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id Bag.KeySet.init()@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD98]), sel_init);
  *a1 = result;
  return result;
}

uint64_t Bag.KeySet.isEmpty.getter()
{
  return 0;
}

id Bag.KeySet.addBagKey(_:valueType:)(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    objc_msgSend(*v2, sel_mutableCopyWithZone_, 0);
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
    sub_19EFE5C4C();
    swift_dynamicCast();
    id v5 = *v2;
    *uint64_t v2 = v7;
  }
  return objc_msgSend(*v2, sel_addBagKey_valueType_, a1, a2);
}

unint64_t sub_19EFE5C4C()
{
  unint64_t result = qword_1E946F8B0;
  if (!qword_1E946F8B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946F8B0);
  }
  return result;
}

id Bag.KeySet.addingBagKey(_:valueType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X8>)
{
  uint64_t v7 = *v3;
  *a3 = *v3;
  id v8 = v7;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    objc_msgSend(v8, sel_mutableCopyWithZone_, 0);
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
    sub_19EFE5C4C();
    swift_dynamicCast();
    id v8 = v11;
    uint64_t v9 = *a3;
    *a3 = v11;
  }
  return objc_msgSend(v8, sel_addBagKey_valueType_, a1, a2);
}

id Bag.KeySet.formUnion(_:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    objc_msgSend(*v1, sel_mutableCopyWithZone_, 0);
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
    sub_19EFE5C4C();
    swift_dynamicCast();
    id v3 = *v1;
    *uint64_t v1 = v5;
  }
  return objc_msgSend(*v1, sel_unionBagKeySet_, v2);
}

id Bag.KeySet.union(_:)@<X0>(uint64_t *a1@<X0>, void **a2@<X8>)
{
  uint64_t v4 = *a1;
  id v5 = *v2;
  *a2 = *v2;
  id v6 = v5;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    objc_msgSend(v6, sel_mutableCopyWithZone_, 0);
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
    sub_19EFE5C4C();
    swift_dynamicCast();
    id v6 = v9;
    uint64_t v7 = *a2;
    *a2 = v9;
  }
  return objc_msgSend(v6, sel_unionBagKeySet_, v4);
}

void static Bag.register(_:forProfile:)(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = self;
  id v3 = v1;
  uint64_t v4 = (void *)sub_19F1DBD4C();
  id v5 = (id)sub_19F1DBD4C();
  objc_msgSend(v2, sel_registerBagKeySet_forProfile_profileVersion_, v3, v4, v5);
}

ValueMetadata *type metadata accessor for Bag.KeySet()
{
  return &type metadata for Bag.KeySet;
}

uint64_t JetPackageSpec.algorithm.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t JetPackageSpec.version.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

BOOL static JetPackageSpec.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_19F1DBD3C() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for JetPackageSpec();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 36)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 36));
}

uint64_t type metadata accessor for JetPackageSpec()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_19EFE604C(uint64_t a1, uint64_t a2)
{
  return static JetPackageSpec.== infix(_:_:)(a1, a2);
}

void JetpackSignature.algorithm.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t JetpackSignature.data.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_19EEA0784(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t JetPackageCompressionAlgorithm.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_19EFE6340(a1);
}

uint64_t JetPackageCompressionAlgorithm.rawValue.getter()
{
  return 0x696C746F7262;
}

uint64_t sub_19EFE60B8()
{
  return sub_19EFE6534();
}

uint64_t sub_19EFE60CC()
{
  return sub_19F1DBE9C();
}

uint64_t sub_19EFE60E0()
{
  return sub_19EFE65C4();
}

uint64_t sub_19EFE60F4@<X0>(BOOL *a1@<X8>)
{
  return sub_19EFE661C(a1);
}

void sub_19EFE6100(void *a1@<X8>)
{
  *a1 = 0x696C746F7262;
  a1[1] = 0xE600000000000000;
}

void static JetPackageEncryptionAlgorithm.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t JetPackageEncryptionAlgorithm.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  BOOL v4 = a1 == 7562593 && a2 == 0xE300000000000000;
  if (v4 || (sub_19F1DD44C() & 1) != 0 || a1 == 0x6367383231736561 && a2 == 0xE90000000000006DLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 0;
  }
  else
  {
    char v9 = sub_19F1DD44C();
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = v9 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t JetPackageEncryptionAlgorithm.rawValue.getter()
{
  return 0x6367383231736561;
}

uint64_t sub_19EFE6234()
{
  return sub_19EFE6534();
}

uint64_t sub_19EFE6250()
{
  return sub_19F1DBE9C();
}

uint64_t sub_19EFE626C()
{
  return sub_19EFE65C4();
}

uint64_t sub_19EFE6288@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return JetPackageEncryptionAlgorithm.init(rawValue:)(*a1, a1[1], a2);
}

void sub_19EFE6294(void *a1@<X8>)
{
  *a1 = 0x6367383231736561;
  a1[1] = 0xE90000000000006DLL;
}

uint64_t JetPackageSerializationFormat.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_19EFE6340(a1);
}

uint64_t JetPackageSerializationFormat.rawValue.getter()
{
  return 7496052;
}

uint64_t sub_19EFE62D4()
{
  return sub_19EFE6534();
}

uint64_t sub_19EFE62E4()
{
  return sub_19F1DBE9C();
}

uint64_t sub_19EFE62F4()
{
  return sub_19EFE65C4();
}

uint64_t sub_19EFE6304@<X0>(BOOL *a1@<X8>)
{
  return sub_19EFE661C(a1);
}

void sub_19EFE6310(void *a1@<X8>)
{
  *a1 = 7496052;
  a1[1] = 0xE300000000000000;
}

uint64_t JetPackageSignatureAlgorithm.init(intValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t JetPackageSignatureAlgorithm.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_19EFE6340(a1);
}

uint64_t sub_19EFE6340@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t JetPackageSignatureAlgorithm.rawValue.getter()
{
  return 0x4148536173646365;
}

unint64_t sub_19EFE63B8()
{
  unint64_t result = qword_1E9472388;
  if (!qword_1E9472388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472388);
  }
  return result;
}

unint64_t sub_19EFE6410()
{
  unint64_t result = qword_1E9472390;
  if (!qword_1E9472390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472390);
  }
  return result;
}

unint64_t sub_19EFE6468()
{
  unint64_t result = qword_1E9472398;
  if (!qword_1E9472398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472398);
  }
  return result;
}

unint64_t sub_19EFE64C0()
{
  unint64_t result = qword_1E94723A0[0];
  if (!qword_1E94723A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E94723A0);
  }
  return result;
}

uint64_t sub_19EFE6514()
{
  return sub_19EFE6534();
}

uint64_t sub_19EFE6534()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFE6584()
{
  return sub_19F1DBE9C();
}

uint64_t sub_19EFE65A4()
{
  return sub_19EFE65C4();
}

uint64_t sub_19EFE65C4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFE6610@<X0>(BOOL *a1@<X8>)
{
  return sub_19EFE661C(a1);
}

uint64_t sub_19EFE661C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_19EFE666C(void *a1@<X8>)
{
  *a1 = 0x4148536173646365;
  a1[1] = 0xEB00000000363532;
}

uint64_t sub_19EFE6690()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_19EFE672C(void *a1, void *a2, uint64_t a3)
{
  BOOL v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
  }
  else
  {
    uint64_t v10 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_19EFE6800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 48) + a1) = *(unsigned char *)(*(void *)(v5 + 48) + a2);
  return a1;
}

uint64_t sub_19EFE6868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 40) + a1) = *(unsigned char *)(*(void *)(v5 + 40) + a2);
  return a1;
}

uint64_t sub_19EFE68D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 32) + a1) = *(unsigned char *)(*(void *)(v5 + 32) + a2);
  return a1;
}

uint64_t sub_19EFE6938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 24) + a1) = *(unsigned char *)(*(void *)(v5 + 24) + a2);
  return a1;
}

uint64_t sub_19EFE69A0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = v6 + 1;
  char v9 = 8 * (v6 + 1);
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_19EFE6B00(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64) + 1;
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (*(_DWORD *)(v6 + 64) != -1)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19EFE6D1CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t destroy for JetpackSignature(uint64_t a1)
{
  return sub_19EEA072C(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t _s9JetEngine16JetpackSignatureVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_19EEA0784(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for JetpackSignature(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_19EEA0784(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_19EEA072C(v5, v6);
  return a1;
}

uint64_t assignWithTake for JetpackSignature(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_19EEA072C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetpackSignature(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JetpackSignature(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackSignature()
{
  return &type metadata for JetpackSignature;
}

ValueMetadata *type metadata accessor for JetPackageCompressionAlgorithm()
{
  return &type metadata for JetPackageCompressionAlgorithm;
}

ValueMetadata *type metadata accessor for JetPackageEncryptionAlgorithm()
{
  return &type metadata for JetPackageEncryptionAlgorithm;
}

ValueMetadata *type metadata accessor for JetPackageSerializationFormat()
{
  return &type metadata for JetPackageSerializationFormat;
}

unsigned char *_s9JetEngine30JetPackageCompressionAlgorithmOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19EFE6FB8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageSignatureAlgorithm()
{
  return &type metadata for JetPackageSignatureAlgorithm;
}

uint64_t static Pipeline.start<A>(with:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  PipelineEntryTask.init(_:)(a1, a2);
  return swift_retain();
}

uint64_t sub_19EFE7038()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

ValueMetadata *type metadata accessor for Pipeline()
{
  return &type metadata for Pipeline;
}

void *initializeBufferWithCopyOfBuffer for JSCalculatedValue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for JSCalculatedValue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for JSCalculatedValue(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_19EFE7120()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t Dictionary<>._partiallyEncode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  BOOL v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v49 = sub_19F1DCAAC();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  Swift::String v55 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v53 = (char *)&v39 - v14;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CEA8);
  uint64_t v41 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  int64_t v56 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_19EF6EA7C();
  uint64_t v52 = v16;
  sub_19F1DD8FC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = sub_19F1DD8EC();
  sub_19F0D75E4(0xD000000000000027, 0x800000019F269EF0, v18, (uint64_t)v60);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  uint64_t v51 = TupleTypeMetadata2 - 8;
  uint64_t v44 = v7 + 16;
  unint64_t v50 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v48 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v46 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
  int64_t v43 = (unint64_t)(v20 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t v45 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v24 = 0;
  if (!v22) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  int64_t v56 = v24;
  unint64_t v26 = v25 | (v24 << 6);
  uint64_t v27 = v55;
LABEL_7:
  uint64_t v28 = *(void *)(v45 + 56);
  uint64_t v29 = (void *)(*(void *)(v45 + 48) + 16 * v26);
  uint64_t v30 = v29[1];
  *(void *)uint64_t v27 = *v29;
  *((void *)v27 + 1) = v30;
  (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(&v27[*(int *)(TupleTypeMetadata2 + 48)], v28 + *(void *)(v7 + 72) * v26, a3);
  uint64_t v31 = *(void *)(TupleTypeMetadata2 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, TupleTypeMetadata2);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v34 = v53;
    (*v50)(v53, v27, v49);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v34, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      sub_19EFE5AF0((uint64_t)v60);
      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v52, v54);
    }
    uint64_t v35 = *(void *)v34;
    uint64_t v36 = *((void *)v34 + 1);
    (*v48)(v9, &v34[*(int *)(TupleTypeMetadata2 + 48)], a3);
    uint64_t v57 = v35;
    uint64_t v58 = v36;
    char v59 = 1;
    sub_19F1DD2AC();
    swift_bridgeObjectRelease();
    uint64_t result = (*v46)(v9, a3);
    int64_t v24 = v56;
    if (v22) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v32 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v27 = v55;
    if (v32 >= v43)
    {
      int64_t v56 = v24;
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v42 + 8 * v32);
    if (v33) {
      goto LABEL_11;
    }
    int64_t v37 = v24 + 2;
    if (v24 + 2 >= v43)
    {
LABEL_19:
      int64_t v56 = v32;
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v42 + 8 * v37);
    if (v33)
    {
      int64_t v32 = v24 + 2;
LABEL_11:
      unint64_t v22 = (v33 - 1) & v33;
      unint64_t v26 = __clz(__rbit64(v33)) + (v32 << 6);
      int64_t v56 = v32;
      goto LABEL_7;
    }
    int64_t v38 = v24 + 3;
    if (v38 < v43) {
      break;
    }
    int64_t v56 = v37;
LABEL_13:
    uint64_t v31 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v55, 1, 1, TupleTypeMetadata2);
    unint64_t v22 = 0;
  }
  unint64_t v33 = *(void *)(v42 + 8 * v38);
  if (v33)
  {
    int64_t v32 = v38;
    goto LABEL_11;
  }
  while (1)
  {
    int64_t v32 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v32 >= v43)
    {
      int64_t v32 = v40;
      goto LABEL_19;
    }
    unint64_t v33 = *(void *)(v42 + 8 * v32);
    ++v38;
    if (v33) {
      goto LABEL_11;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t Optional<A>._partiallyEncode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  v28[0] = a3;
  uint64_t v29 = 0;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_19F1DD8DC();
  uint64_t v15 = a1[3];
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  uint64_t v18 = sub_19F1DD8EC();
  sub_19F0D75E4(0xD000000000000027, 0x800000019F269EF0, v18, (uint64_t)v33);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v10 + 16))(v13, v28[1], a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5) == 1)
  {
    uint64_t v19 = v29;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v13, v5);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    uint64_t v20 = v29;
    sub_19F1DD51C();
    if (!v20)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_11:
      unint64_t v26 = v33;
LABEL_13:
      sub_19EFE5AF0((uint64_t)v26);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    }
    uint64_t v21 = v20;
    uint64_t v19 = 0;
    sub_19EFE5A88((uint64_t)v33, (uint64_t)v30);
    uint64_t v22 = v31;
    if (v31)
    {
      uint64_t v23 = v32;
      __swift_project_boxed_opaque_existential_1(v30, v31);
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v23 + 16))(v5, v21, v22, v23);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      sub_19EFE5AF0((uint64_t)v30);
    }
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
  sub_19F1DD52C();
  if (!v19) {
    goto LABEL_11;
  }
  sub_19EFE5A88((uint64_t)v33, (uint64_t)v30);
  uint64_t v24 = v31;
  if (!v31)
  {
    sub_19EFE5AF0((uint64_t)v33);

    unint64_t v26 = v30;
    goto LABEL_13;
  }
  uint64_t v25 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v25 + 16))(v17, v19, v24, v25);

  sub_19EFE5AF0((uint64_t)v33);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
}

uint64_t sub_19EFE7C48(void *a1, uint64_t a2, uint64_t a3)
{
  return Optional<A>._partiallyEncode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t Bool._partiallyEncode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4EC();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19EFE7DB4(void *a1)
{
  return Bool._partiallyEncode(to:)(a1);
}

uint64_t Array<A>._partiallyEncode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v22 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - v10;
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_19F1DD8CC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_19F1DD8EC();
  sub_19F0D75E4(0xD000000000000027, 0x800000019F269EF0, v13, (uint64_t)v29);
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_bridgeObjectRetain();
  if (!MEMORY[0x19F3C6550](v14, a3))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    sub_19EFE5AF0((uint64_t)v29);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  }
  uint64_t v15 = 0;
  unint64_t v26 = (void (**)(char *, uint64_t *, uint64_t))(v7 + 16);
  uint64_t v23 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v24 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v16 = v22;
  uint64_t v25 = v7;
  while (1)
  {
    char v18 = sub_19F1DC1FC();
    sub_19F1DC19C();
    if (v18)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v11, a2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, a3);
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_10;
      }
      goto LABEL_6;
    }
    uint64_t result = sub_19F1DCD5C();
    if (v21 != 8) {
      break;
    }
    v28[0] = result;
    (*v26)(v11, v28, a3);
    swift_unknownObjectRelease();
    uint64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_6:
    (*v24)(v16, v11, a3);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
    sub_19F1DD3EC();
    (*v23)(v16, a3);
    uint64_t v17 = MEMORY[0x19F3C6550](a2, a3);
    ++v15;
    uint64_t v7 = v25;
    if (v19 == v17) {
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFE8194(void *a1, uint64_t a2, uint64_t a3)
{
  return Array<A>._partiallyEncode(to:)(a1, *v3, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

uint64_t sub_19EFE81A8(void *a1, uint64_t a2, uint64_t a3)
{
  return Dictionary<>._partiallyEncode(to:)(a1, *v3, *(void *)(a2 + 24), *(void *)(a3 - 8));
}

uint64_t dispatch thunk of _DiscardOnErrorEncodable._partiallyEncode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for XpPostFrequencyFieldProvider()
{
  return &type metadata for XpPostFrequencyFieldProvider;
}

uint64_t sub_19EFE81E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  v3[24] = a1;
  v3[25] = v4;
  uint64_t v5 = v2[1];
  v3[26] = *v2;
  v3[27] = v5;
  return MEMORY[0x1F4188298](sub_19EEBB880, 0, 0);
}

uint64_t sub_19EFE820C()
{
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  sub_19F1DC58C();
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  return swift_bridgeObjectRelease();
}

uint64_t CoarselyTimed.init(contained:duration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for CoarselyTimed() + 28);
  uint64_t v7 = sub_19F1DAE7C();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);
  return v8(v6, a2, v7);
}

uint64_t CoarselyTimed.init(byTiming:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v54 = a1;
  uint64_t v52 = a4;
  uint64_t v5 = sub_19F1DAE7C();
  uint64_t v49 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = a3;
  uint64_t v44 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DB57C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v46 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v45 = (char *)&v41 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = type metadata accessor for MonotonicTimeReference();
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DB56C();
  static MonotonicTime.now.getter(&v56);
  __darwin_time_t tv_sec = v56.tv_sec;
  uint64_t tv_nsec = v56.tv_nsec;
  unint64_t v26 = (__darwin_time_t *)&v23[*(int *)(v21 + 28)];
  *unint64_t v26 = v56.tv_sec;
  v26[1] = tv_nsec;
  uint64_t v27 = *(uint64_t (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v28 = v27(v19, v23, v10);
  int64_t v43 = v9;
  uint64_t v29 = v57;
  ((void (*)(uint64_t))v54)(v28);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    return sub_19EE9985C((uint64_t)v23);
  }
  else
  {
    uint64_t v42 = (void (*)(char *, char *, uint64_t))v27;
    uint64_t v53 = 0;
    uint64_t v54 = v11;
    uint64_t v57 = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v52, v43, v51);
    static MonotonicTime.now.getter(&v56);
    __darwin_time_t v32 = v56.tv_sec;
    uint64_t v31 = v56.tv_nsec;
    v56.__darwin_time_t tv_sec = tv_sec;
    v56.uint64_t tv_nsec = tv_nsec;
    v55[0] = v32;
    v55[1] = v31;
    sub_19EE99904(&v56, v55);
    if (qword_1EB392DA0 != -1) {
      swift_once();
    }
    unint64_t v33 = v45;
    sub_19F1DB4FC();
    uint64_t v34 = v57;
    uint64_t v35 = v10;
    uint64_t v36 = v10;
    int64_t v37 = v42;
    v42(v46, v57, v36);
    v37(v47, v33, v35);
    int64_t v38 = v48;
    sub_19F1DAE5C();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v54 + 8);
    v39(v33, v35);
    v39(v34, v35);
    sub_19EE9985C((uint64_t)v23);
    uint64_t v40 = type metadata accessor for CoarselyTimed();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v52 + *(int *)(v40 + 28), v38, v50);
  }
}

uint64_t CoarselyTimed.init(byTiming:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  id v4[2] = a1;
  v4[3] = a2;
  uint64_t v6 = sub_19F1DAE7C();
  v4[6] = v6;
  v4[7] = *(void *)(v6 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = *(void *)(a4 - 8);
  v4[10] = swift_task_alloc();
  uint64_t v7 = sub_19F1DB57C();
  v4[11] = v7;
  v4[12] = *(void *)(v7 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = type metadata accessor for MonotonicTimeReference();
  v4[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19EFE8A00, 0, 0);
}

uint64_t sub_19EFE8A00()
{
  uint64_t v14 = v0;
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(int **)(v0 + 24);
  sub_19F1DB56C();
  static MonotonicTime.now.getter(&v13);
  uint64_t v7 = *(int *)(v2 + 20);
  *(_DWORD *)(v0 + 184) = v7;
  *(timespec *)(v1 + v7) = v13;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(void *)(v0 + 152) = v8;
  *(void *)(v0 + 160) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v3, v1, v4);
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_19EFE8B44;
  uint64_t v10 = *(void *)(v0 + 80);
  return v12(v10);
}

uint64_t sub_19EFE8B44()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19EFE8EA8;
  }
  else {
    uint64_t v2 = sub_19EFE8C58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19EFE8C58()
{
  uint64_t v21 = v0;
  uint64_t v1 = (void *)(*(void *)(v0 + 144) + *(int *)(v0 + 184));
  (*(void (**)(void, void, void))(*(void *)(v0 + 72) + 32))(*(void *)(v0 + 16), *(void *)(v0 + 80), *(void *)(v0 + 40));
  static MonotonicTime.now.getter(&v20);
  uint64_t v16 = v1[1];
  v19[0] = *v1;
  v19[1] = v16;
  sub_19EE99904(v19, &v20);
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 104);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v15 = *(void *)(v0 + 64);
  uint64_t v18 = *(void *)(v0 + 48);
  uint64_t v17 = *(void *)(v0 + 16);
  sub_19F1DB4FC();
  v2(v12, v3, v6);
  v2(v13, v4, v6);
  sub_19F1DAE5C();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(v4, v6);
  v8(v3, v6);
  sub_19EE9985C(v14);
  uint64_t v9 = type metadata accessor for CoarselyTimed();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v17 + *(int *)(v9 + 28), v15, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_19EFE8EA8()
{
  uint64_t v1 = v0[18];
  (*(void (**)(void, void))(v0[12] + 8))(v0[16], v0[11]);
  sub_19EE9985C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t CoarselyTimed.contained.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*CoarselyTimed.contained.modify())()
{
  return nullsub_1;
}

uint64_t CoarselyTimed.duration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 28);
  uint64_t v5 = sub_19F1DAE7C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*CoarselyTimed.duration.modify())()
{
  return nullsub_1;
}

uint64_t static CoarselyTimed<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CoarselyTimed();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  char v11 = sub_19F1DBD3C();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v12(v7, a2, v4);
  if (v11) {
    char v13 = sub_19F1DAE4C();
  }
  else {
    char v13 = 0;
  }
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  v14(v10, v4);
  return v13 & 1;
}

uint64_t sub_19EFE9200(uint64_t a1, uint64_t a2)
{
  return static CoarselyTimed<A>.== infix(_:_:)(a1, a2);
}

uint64_t *sub_19EFE920C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_19F1DAE7C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(void *)(*(void *)(v8 - 8) + 64) > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = v8;
    uint64_t v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_19EFE9378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_19F1DAE7C();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19EFE9424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_19F1DAE7C();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19EFE94D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_19F1DAE7C();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19EFE957C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_19F1DAE7C();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v12) + *(void *)(*(void *)(v8 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_19EFE97FC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_19F1DAE7C() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = (v15 & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x19EFE9AFCLL);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          uint64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

uint64_t *assignWithCopy for JSManagedSourceProvider(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for JSManagedSourceProvider(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_19EFE9BB4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2) & 1;
}

uint64_t sub_19EFE9C0C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  if (result)
  {
    uint64_t v4 = v0[3];
    uint64_t v5 = v0[4];
    __swift_project_boxed_opaque_existential_1(v0, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  }
  return result;
}

uint64_t sub_19EFE9CB0()
{
  sub_19EEC4154(v0, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3920F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F978);
  if (swift_dynamicCast())
  {
    sub_19EEBB420(v5, (uint64_t)v8);
    uint64_t v1 = v9;
    uint64_t v2 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  else
  {
    uint64_t v6 = 0;
    memset(v5, 0, sizeof(v5));
    sub_19EFE9D98((uint64_t)v5);
    return 0;
  }
  return v3;
}

uint64_t sub_19EFE9D98(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1E9472440);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t JSIntentRequestTimeOutError.init(intent:timeoutInterval:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
  uint64_t result = type metadata accessor for JSIntentRequestTimeOutError();
  *(double *)(a3 + *(int *)(result + 36)) = a4;
  return result;
}

uint64_t type metadata accessor for JSIntentRequestTimeOutError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t JSIntentRequestTimeOutError.intent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

double JSIntentRequestTimeOutError.timeoutInterval.getter(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 36));
}

uint64_t JSIntentRequestTimeOutError.errorDescription.getter()
{
  return 0;
}

uint64_t sub_19EFE9FB4()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EFE9FD4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19EFEA070(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_19EFEA168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19EFEA1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19EFEA260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19EFEA2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19EFEA358(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x19EFEA46CLL);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_19EFEA480(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            size_t v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19EFEA62CLL);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

uint64_t sub_19EFEA654(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_19EFF1338(a1, (uint64_t)sub_19EFF1644, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t *AppleServicesLocalizer.Configuration.withFormattingStringsDataSource(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EE1E578(v2, a2);
  return __swift_assign_boxed_opaque_existential_1((uint64_t *)(a2 + 80), a1);
}

uint64_t AppleServicesLocalizer.Configuration.withDefaultLookupStrategy(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *a1;
  uint64_t result = sub_19EE1E578(v2, a2);
  *(unsigned char *)(a2 + 176) = v4;
  return result;
}

id sub_19EFEA76C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9)
{
  return sub_19EE85DEC(a1, a2, a3, a4, a5, a6, a7, a8, a9, 3, 0);
}

id sub_19EFEA79C()
{
  uint64_t v0 = sub_19F1DB6DC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v4, sel_setDoesRelativeDateFormatting_, 1);
  objc_msgSend(v4, sel_setDateStyle_, 2);
  objc_msgSend(v4, sel_setTimeStyle_, 0);
  sub_19F1DB64C();
  unsigned int v5 = (void *)sub_19F1DB6AC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setCalendar_, v5);

  uint64_t v6 = (void *)sub_19F1DB60C();
  objc_msgSend(v4, sel_setLocale_, v6);

  return v4;
}

uint64_t static AppleServicesLocalizer.fetch(contentsOf:for:asPartOf:)(uint64_t a1, uint64_t a2)
{
  v3[41] = a2;
  v3[42] = v2;
  v3[40] = a1;
  return MEMORY[0x1F4188298](sub_19EFEA930, 0, 0);
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  long long v15[2];
  char v16;
  long long v17[2];

  unsigned int v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v5 - 8);
  unsigned int v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEC4154(a1, (uint64_t)v15);
  sub_19EEC4154(a2, (uint64_t)v17);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v2;
  sub_19EEBB420(v15, v8 + 24);
  sub_19EEBB420(v17, v8 + 64);
  *(void *)&v15[0] = MEMORY[0x1E4FBC860];
  size_t v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471CC0);
  unsigned int v9 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  unsigned int v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(void *)(v9 + 16) = v10;
  sub_19EEBDC4C((uint64_t)v15, v9 + 24, &qword_1E9473800);
  int v11 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 1, 1, v11);
  int v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  void v12[4] = &unk_1E94724F8;
  v12[5] = v8;
  v12[6] = v9;
  swift_retain();
  sub_19EE9A0F8((uint64_t)v7, (uint64_t)&unk_1E9472500, (uint64_t)v12);
  swift_release();
  return v9;
}

uint64_t sub_19EFEA930()
{
  uint64_t v1 = *(void *)(v0 + 328);
  sub_19EEC4154(*(void *)(v0 + 320), v0 + 240);
  sub_19EEC4154(v1, v0 + 280);
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(void *)(v0 + 232) = 0;
  sub_19EEC4154(v0 + 240, v0 + 16);
  sub_19EEC4154(v0 + 280, v0 + 56);
  *(void *)(v0 + 120) = &type metadata for DefaultLocalizerFormattingStringsDataSource;
  *(void *)(v0 + 128) = &off_1EF149858;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F255020;
  *(void *)(v2 + 32) = objc_msgSend(self, sel_mainBundle);
  sub_19F1DC17C();
  *(void *)(v0 + 160) = &type metadata for LocalizedStringsTableCollection;
  *(void *)(v0 + 168) = &protocol witness table for LocalizedStringsTableCollection;
  *(void *)(v0 + 136) = v2;
  if (qword_1EB3903B8 != -1) {
    swift_once();
  }
  long long v5 = xmmword_1EB3903A0;
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 280);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 240);
  *(_OWORD *)(v0 + 176) = v5;
  *(unsigned char *)(v0 + 192) = 3;
  sub_19EEBD664(v0 + 200, &qword_1EB390398);
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(void *)(v0 + 232) = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_19EFEAB30;
  return static AppleServicesLocalizer.load(using:)(v0 + 16);
}

uint64_t sub_19EFEAB30(uint64_t a1)
{
  uint64_t v4 = *v2 + 16;
  uint64_t v5 = *v2;
  *(void *)(v5 + 352) = v1;
  swift_task_dealloc();
  sub_19EFEBEB0(v4);
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_19EFEAC84, 0, 0);
  }
  else
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_19EFEAC84()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19EFEAC9C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1648) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_unknownObjectRelease();
    uint64_t v3 = sub_19EFEB058;
  }
  else
  {
    *(_OWORD *)(v2 + 1656) = *(_OWORD *)(v2 + 56);
    *(_OWORD *)(v2 + 1672) = *(_OWORD *)(v2 + 72);
    *(void *)(v2 + 1688) = *(void *)(v2 + 88);
    swift_unknownObjectRelease();
    uint64_t v3 = sub_19EFEADE0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19EFEADE0()
{
  sub_19EEBDC4C(v0 + 56, v0 + 16, &qword_1E946E148);
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = (_OWORD *)(v0 + 696);
    if (qword_1EB3903C0 != -1) {
      swift_once();
    }
    sub_19EEC4154((uint64_t)&unk_1E946E538, v0 + 296);
    uint64_t v2 = *(void *)(v0 + 320);
    uint64_t v3 = *(void *)(v0 + 328);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v2);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 1184) = v6;
    *(void *)(v0 + 1160) = 0xD000000000000021;
    *(void *)(v0 + 1168) = 0x800000019F26CFD0;
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 712) = 0u;
    sub_19EEC3E70(v0 + 1160, v0 + 696);
    *(unsigned char *)(v0 + 728) = 0;
    long long v7 = *(_OWORD *)(v0 + 712);
    *(_OWORD *)(v5 + 32) = *v1;
    *(_OWORD *)(v5 + 48) = v7;
    *(unsigned char *)(v5 + 64) = *(unsigned char *)(v0 + 728);
    *(void *)(v4 + 32) = v5;
    Logger.debug(_:)(v4, v2, v3);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 296);
  }
  *(void *)(v0 + 1728) = *(void *)(v0 + 1688);
  long long v8 = *(_OWORD *)(v0 + 1656);
  *(_OWORD *)(v0 + 1712) = *(_OWORD *)(v0 + 1672);
  *(_OWORD *)(v0 + 1696) = v8;
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v10 = *(void *)(v0 + 128);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), v9);
  int v13 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v10 + 8) + **(int **)(v10 + 8));
  int v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 1736) = v11;
  *int v11 = v0;
  v11[1] = sub_19EE21470;
  return v13(v9, v10);
}

uint64_t sub_19EFEB058()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EFEB114()
{
  uint64_t v1 = (void *)v0[216];
  uint64_t v2 = v0[215];
  uint64_t v3 = (void *)v0[214];
  uint64_t v4 = v0[213];
  uint64_t v5 = v0[212];
  swift_unknownObjectRelease();
  sub_19EE448F0(v5, v4, v3, v2, v1);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 27));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 22));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 17));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 12));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_19EFEB210()
{
  uint64_t v1 = (void *)v0[216];
  uint64_t v2 = v0[215];
  uint64_t v3 = (void *)v0[214];
  uint64_t v4 = v0[213];
  uint64_t v5 = v0[212];
  swift_unknownObjectRelease();
  sub_19EE448F0(v5, v4, v3, v2, v1);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 27));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 22));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 17));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 12));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_19EFEB30C()
{
  v101 = (void *)(v0 + 96);
  uint64_t v83 = v0 + 1096;
  v96 = (uint64_t *)(v0 + 1128);
  uint64_t v1 = *(void *)(v0 + 1832);
  uint64_t v2 = *(void *)(v0 + 1824);
  sub_19EEC4154((uint64_t)&unk_1E946E538, v0 + 576);
  uint64_t v91 = *(void *)(v0 + 608);
  uint64_t v93 = *(void *)(v0 + 600);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 576), v93);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24DBC0;
  *(void *)(v0 + 1544) = sub_19EEC3F3C(0, 39, 0, MEMORY[0x1E4FBC860]);
  v4._uint64_t countAndFlagsBits = 0xD000000000000025;
  v4._object = (void *)0x800000019F26CF40;
  LogMessage.StringInterpolation.appendLiteral(_:)(v4);
  *(void *)(v0 + 1504) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 1480) = v2;
  *(void *)(v0 + 1488) = v1;
  sub_19EEC3ED8(v0 + 1480, v0 + 1352, &qword_1EB393260);
  *(_OWORD *)(v0 + 936) = 0u;
  *(_OWORD *)(v0 + 952) = 0u;
  sub_19EEC3E70(v0 + 1352, v0 + 936);
  *(unsigned char *)(v0 + 968) = 0;
  *(unsigned char *)(v0 + 888) = 0;
  long long v5 = *(_OWORD *)(v0 + 952);
  *(_OWORD *)(v0 + 856) = *(_OWORD *)(v0 + 936);
  *(_OWORD *)(v0 + 872) = v5;
  uint64_t v6 = *(void **)(v0 + 1544);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = sub_19EEC3F3C(0, v6[2] + 1, 1, v6);
  }
  long long v7 = (long long *)(v0 + 1016);
  uint64_t v8 = (long long *)(v0 + 1056);
  unint64_t v10 = v6[2];
  unint64_t v9 = v6[3];
  if (v10 >= v9 >> 1) {
    uint64_t v6 = sub_19EEC3F3C((void *)(v9 > 1), v10 + 1, 1, v6);
  }
  uint64_t v84 = v0 + 1320;
  v99 = (uint64_t *)(v0 + 1192);
  v6[2] = v10 + 1;
  int v11 = &v6[5 * v10];
  long long v12 = *(_OWORD *)(v0 + 856);
  long long v13 = *(_OWORD *)(v0 + 872);
  *((unsigned char *)v11 + 64) = *(unsigned char *)(v0 + 888);
  *((_OWORD *)v11 + 2) = v12;
  *((_OWORD *)v11 + 3) = v13;
  *(void *)(v0 + 1544) = v6;
  sub_19EEBD664(v0 + 1480, &qword_1EB393260);
  v14._uint64_t countAndFlagsBits = 44;
  v14._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  *(void *)(v3 + 32) = *(void *)(v0 + 1544);
  *(void *)(v0 + 1552) = sub_19EEC3F3C(0, 20, 0, MEMORY[0x1E4FBC860]);
  v15._object = (void *)0x800000019F26CF70;
  v15._uint64_t countAndFlagsBits = 0xD000000000000012;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  uint64_t v16 = *(void *)(v0 + 120);
  int v17 = __swift_project_boxed_opaque_existential_1(v101, v16);
  *(void *)(v0 + 1152) = v16;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v96);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_2Tm, v17, v16);
  sub_19EEC3ED8((uint64_t)v96, v83, &qword_1EB393260);
  *long long v7 = 0u;
  *(_OWORD *)(v0 + 1032) = 0u;
  sub_19EEC3E70(v83, v0 + 1016);
  *(unsigned char *)(v0 + 1048) = 0;
  long long v19 = *(_OWORD *)(v0 + 1032);
  *uint64_t v8 = *v7;
  *(_OWORD *)(v0 + 1072) = v19;
  *(unsigned char *)(v0 + 1088) = *(unsigned char *)(v0 + 1048);
  unsigned int v20 = *(void **)(v0 + 1552);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned int v20 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
  }
  int v21 = (long long *)(v0 + 896);
  uint64_t v22 = (long long *)(v0 + 976);
  unint64_t v24 = v20[2];
  unint64_t v23 = v20[3];
  if (v24 >= v23 >> 1) {
    unsigned int v20 = sub_19EEC3F3C((void *)(v23 > 1), v24 + 1, 1, v20);
  }
  _OWORD v20[2] = v24 + 1;
  uint64_t v25 = &v20[5 * v24];
  long long v26 = *v8;
  long long v27 = *(_OWORD *)(v0 + 1072);
  *((unsigned char *)v25 + 64) = *(unsigned char *)(v0 + 1088);
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  *(void *)(v0 + 1552) = v20;
  sub_19EEBD664((uint64_t)v96, &qword_1EB393260);
  v28._uint64_t countAndFlagsBits = 44;
  v28._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  *(void *)(v3 + 40) = *(void *)(v0 + 1552);
  *(void *)(v0 + 1560) = sub_19EEC3F3C(0, 9, 0, MEMORY[0x1E4FBC860]);
  v29._uint64_t countAndFlagsBits = 0x203A6E6F73616572;
  v29._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  swift_getErrorValue();
  uint64_t v30 = *(void *)(v0 + 1512);
  uint64_t v31 = *(void *)(v0 + 1520);
  *(void *)(v0 + 1216) = v31;
  __darwin_time_t v32 = __swift_allocate_boxed_opaque_existential_2Tm(v99);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v32, v30, v31);
  sub_19EEC3ED8((uint64_t)v99, v84, &qword_1EB393260);
  long long *v21 = 0u;
  *(_OWORD *)(v0 + 912) = 0u;
  sub_19EEC3E70(v84, v0 + 896);
  *(unsigned char *)(v0 + 928) = 0;
  long long v33 = *(_OWORD *)(v0 + 912);
  long long *v22 = *v21;
  *(_OWORD *)(v0 + 992) = v33;
  *(unsigned char *)(v0 + 1008) = *(unsigned char *)(v0 + 928);
  uint64_t v34 = *(void **)(v0 + 1560);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v34 = sub_19EEC3F3C(0, v34[2] + 1, 1, v34);
  }
  v97 = (void *)(v0 + 136);
  unint64_t v36 = v34[2];
  unint64_t v35 = v34[3];
  uint64_t v89 = v3;
  if (v36 >= v35 >> 1) {
    uint64_t v34 = sub_19EEC3F3C((void *)(v35 > 1), v36 + 1, 1, v34);
  }
  int64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1856);
  int64_t v38 = *(void **)(v0 + 1848);
  uint64_t v87 = *(void *)(v0 + 1808);
  uint64_t v39 = *(void *)(v0 + 1616);
  uint64_t v40 = *(void *)(v0 + 1592);
  uint64_t v41 = *(void *)(v0 + 1816) + 1;
  v34[2] = v36 + 1;
  uint64_t v42 = &v34[5 * v36];
  long long v43 = *v22;
  long long v44 = *(_OWORD *)(v0 + 992);
  *((unsigned char *)v42 + 64) = *(unsigned char *)(v0 + 1008);
  *((_OWORD *)v42 + 2) = v43;
  *((_OWORD *)v42 + 3) = v44;
  *(void *)(v0 + 1560) = v34;
  sub_19EEBD664((uint64_t)v99, &qword_1EB393260);
  v45._uint64_t countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v45);
  *(void *)(v89 + 48) = *(void *)(v0 + 1560);
  Logger.warning(_:)(v89, v93, v91);
  swift_bridgeObjectRelease();

  v37(v39, v40);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 576);
  if (v41 == v87)
  {
    swift_bridgeObjectRelease();
    uint64_t v46 = *(void *)(v0 + 1792);
    uint64_t v47 = *(void *)(v0 + 1768);
    sub_19EEC4154((uint64_t)&unk_1E946E538, v0 + 536);
    uint64_t v94 = *(void *)(v0 + 568);
    uint64_t v95 = *(void *)(v0 + 560);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 536), v95);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_19F24EAD0;
    v102 = sub_19EEC3F3C(0, 50, 0, MEMORY[0x1E4FBC860]);
    v49._uint64_t countAndFlagsBits = 0xD000000000000031;
    v49._object = (void *)0x800000019F26CF90;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    *(void *)(v0 + 1440) = v46;
    *(void *)(v0 + 1416) = v47;
    sub_19EEC3ED8(v0 + 1416, v0 + 1448, &qword_1EB393260);
    *(_OWORD *)(v0 + 816) = 0u;
    *(_OWORD *)(v0 + 832) = 0u;
    sub_19EEC3E70(v0 + 1448, v0 + 816);
    *(unsigned char *)(v0 + 848) = 0;
    long long v103 = *(_OWORD *)(v0 + 816);
    long long v104 = *(_OWORD *)(v0 + 832);
    char v105 = *(unsigned char *)(v0 + 848);
    uint64_t v50 = v102;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v50 = sub_19EEC3F3C(0, v102[2] + 1, 1, v102);
    }
    unint64_t v52 = v50[2];
    unint64_t v51 = v50[3];
    if (v52 >= v51 >> 1) {
      uint64_t v50 = sub_19EEC3F3C((void *)(v51 > 1), v52 + 1, 1, v50);
    }
    long long v85 = *(void **)(v0 + 1728);
    uint64_t v53 = *(void *)(v0 + 1720);
    uint64_t v54 = *(void **)(v0 + 1712);
    uint64_t v55 = *(void *)(v0 + 1704);
    uint64_t v56 = *(void *)(v0 + 1696);
    _OWORD v50[2] = v52 + 1;
    uint64_t v57 = &v50[5 * v52];
    *((unsigned char *)v57 + 64) = v105;
    *((_OWORD *)v57 + 2) = v103;
    *((_OWORD *)v57 + 3) = v104;
    sub_19EEBD664(v0 + 1416, &qword_1EB393260);
    v58._uint64_t countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v58);
    *(void *)(v48 + 32) = v50;
    Logger.error(_:)(v48, v95, v94);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 536);
    sub_19EF6FA4C();
    swift_allocError();
    *(void *)uint64_t v59 = 0;
    *(void *)(v59 + 8) = 0;
    *(unsigned char *)(v59 + 16) = 4;
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_19EE448F0(v56, v55, v54, v53, v85);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 416);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 216);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 176);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v97);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v101);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
    return v60();
  }
  else
  {
    uint64_t v62 = *(void *)(v0 + 1816) + 1;
    *(void *)(v0 + 1816) = v62;
    uint64_t v63 = *(void *)(v0 + 1768) + 16 * v62;
    uint64_t v64 = *(void *)(v63 + 32);
    *(void *)(v0 + 1824) = v64;
    uint64_t v65 = *(void *)(v63 + 40);
    *(void *)(v0 + 1832) = v65;
    sub_19EEC4154((uint64_t)&unk_1E946E538, v0 + 456);
    uint64_t v90 = *(void *)(v0 + 488);
    uint64_t v92 = *(void *)(v0 + 480);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 456), v92);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_19F24EAD0;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 1536) = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
    v67._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v67._object = (void *)0x800000019F26CF20;
    LogMessage.StringInterpolation.appendLiteral(_:)(v67);
    *(void *)(v0 + 1408) = MEMORY[0x1E4FBB1A0];
    uint64_t v100 = v64;
    *(void *)(v0 + 1384) = v64;
    *(void *)(v0 + 1392) = v65;
    sub_19EEC3ED8(v0 + 1384, v0 + 1224, &qword_1EB393260);
    *(_OWORD *)(v0 + 656) = 0u;
    *(_OWORD *)(v0 + 672) = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70(v0 + 1224, v0 + 656);
    *(unsigned char *)(v0 + 688) = 0;
    long long v68 = *(_OWORD *)(v0 + 672);
    *(_OWORD *)(v0 + 736) = *(_OWORD *)(v0 + 656);
    *(_OWORD *)(v0 + 752) = v68;
    *(unsigned char *)(v0 + 768) = *(unsigned char *)(v0 + 688);
    long long v69 = *(void **)(v0 + 1536);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v69 = sub_19EEC3F3C(0, v69[2] + 1, 1, v69);
    }
    unint64_t v71 = v69[2];
    unint64_t v70 = v69[3];
    if (v71 >= v70 >> 1) {
      long long v69 = sub_19EEC3F3C((void *)(v70 > 1), v71 + 1, 1, v69);
    }
    uint64_t v72 = *(void *)(v0 + 1616);
    uint64_t v73 = *(void *)(v0 + 1600);
    uint64_t v86 = *(void *)(v0 + 1592);
    uint64_t v88 = *(void *)(v0 + 1608);
    v69[2] = v71 + 1;
    char v74 = &v69[5 * v71];
    long long v75 = *(_OWORD *)(v0 + 736);
    long long v76 = *(_OWORD *)(v0 + 752);
    *((unsigned char *)v74 + 64) = *(unsigned char *)(v0 + 768);
    *((_OWORD *)v74 + 2) = v75;
    *((_OWORD *)v74 + 3) = v76;
    *(void *)(v0 + 1536) = v69;
    sub_19EEBD664(v0 + 1384, &qword_1EB393260);
    v77._uint64_t countAndFlagsBits = 0;
    v77._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v77);
    *(void *)(v66 + 32) = *(void *)(v0 + 1536);
    Logger.debug(_:)(v66, v92, v90);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 456);
    uint64_t v78 = *(void *)(v0 + 160);
    uint64_t v79 = *(void *)(v0 + 168);
    __swift_project_boxed_opaque_existential_1(v97, v78);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 16))(v100, v65, v78, v79);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v88, v72, v86);
    uint64_t v80 = *(void *)(v0 + 120);
    uint64_t v81 = *(void *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1(v101, v80);
    v98 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 + 16)
                                                                              + **(int **)(v81 + 16));
    long long v82 = (void *)swift_task_alloc();
    *(void *)(v0 + 1840) = v82;
    *long long v82 = v0;
    v82[1] = sub_19EE1D404;
    return v98(v0 + 616, v100, v65, v80, v81);
  }
}

uint64_t sub_19EFEBEB0(uint64_t a1)
{
  return a1;
}

uint64_t static AppleServicesLocalizer.fetch(contentsOf:for:nativeLookupIn:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[99] = v3;
  v4[98] = a3;
  v4[97] = a2;
  v4[96] = a1;
  return MEMORY[0x1F4188298](sub_19EFEBF0C, 0, 0);
}

{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  long long v16[2];
  char v17;
  long long v18[2];
  long long v19[2];

  long long v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEC4154(a1, (uint64_t)v16);
  sub_19EEC4154(a2, (uint64_t)v19);
  sub_19EEC4154(a3, (uint64_t)v18);
  unint64_t v10 = swift_allocObject();
  sub_19EEBB420(v16, v10 + 16);
  sub_19EEBB420(v19, v10 + 56);
  sub_19EEBB420(v18, v10 + 96);
  *(void *)(v10 + 136) = v3;
  *(void *)&v16[0] = MEMORY[0x1E4FBC860];
  int v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471CC0);
  int v11 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  long long v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(void *)(v11 + 16) = v12;
  sub_19EEBDC4C((uint64_t)v16, v11 + 24, &qword_1E9473800);
  long long v13 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
  Swift::String v14 = (void *)swift_allocObject();
  long long v14[2] = 0;
  void v14[3] = 0;
  v14[4] = &unk_1E9472510;
  v14[5] = v10;
  v14[6] = v11;
  swift_retain();
  sub_19EE9A0F8((uint64_t)v9, (uint64_t)&unk_1E9472518, (uint64_t)v14);
  swift_release();
  return v11;
}

uint64_t sub_19EFEBF0C()
{
  uint64_t v1 = (_OWORD *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 776);
  sub_19EEC4154(*(void *)(v0 + 768), v0 + 688);
  sub_19EEC4154(v2, v0 + 728);
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(void *)(v0 + 456) = 0;
  sub_19EEC4154(v0 + 688, v0 + 240);
  sub_19EEC4154(v0 + 728, v0 + 280);
  *(void *)(v0 + 344) = &type metadata for DefaultLocalizerFormattingStringsDataSource;
  *(void *)(v0 + 352) = &off_1EF149858;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F255020;
  *(void *)(v3 + 32) = objc_msgSend(self, sel_mainBundle);
  sub_19F1DC17C();
  *(void *)(v0 + 384) = &type metadata for LocalizedStringsTableCollection;
  *(void *)(v0 + 392) = &protocol witness table for LocalizedStringsTableCollection;
  *(void *)(v0 + 360) = v3;
  if (qword_1EB3903B8 != -1) {
    swift_once();
  }
  Swift::String v4 = *(uint64_t **)(v0 + 784);
  long long v14 = xmmword_1EB3903A0;
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 728);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 688);
  *(_OWORD *)(v0 + 400) = v14;
  *(unsigned char *)(v0 + 416) = 3;
  sub_19EEBD664(v0 + 424, &qword_1EB390398);
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(void *)(v0 + 456) = 0;
  sub_19EE1E578(v0 + 240, v0 + 464);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v0 + 584), v4);
  long long v5 = *(_OWORD *)(v0 + 640);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 624);
  *(_OWORD *)(v0 + 192) = v5;
  long long v6 = *(_OWORD *)(v0 + 672);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 656);
  *(_OWORD *)(v0 + 224) = v6;
  long long v7 = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v0 + 128) = v7;
  long long v8 = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v0 + 160) = v8;
  long long v9 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 64) = v9;
  long long v10 = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 96) = v10;
  long long v11 = *(_OWORD *)(v0 + 480);
  *uint64_t v1 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 32) = v11;
  sub_19EFEBEB0(v0 + 240);
  long long v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 800) = v12;
  void *v12 = v0;
  v12[1] = sub_19EFEC178;
  return static AppleServicesLocalizer.load(using:)((uint64_t)v1);
}

uint64_t sub_19EFEC178(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 808) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_19EFEC308;
  }
  else
  {
    *(void *)(v4 + 816) = a1;
    long long v5 = sub_19EFEC2A0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_19EFEC2A0()
{
  sub_19EFEBEB0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 816);
  return v1(v2);
}

uint64_t sub_19EFEC308()
{
  sub_19EFEBEB0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EFEC538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[42] = a3;
  v4[43] = a4;
  v4[40] = a1;
  v4[41] = a2;
  return MEMORY[0x1F4188298](sub_19EFEC55C, 0, 0);
}

uint64_t sub_19EFEC55C()
{
  uint64_t v1 = *(void *)(v0 + 344);
  sub_19EEC4154(*(void *)(v0 + 336), v0 + 240);
  sub_19EEC4154(v1, v0 + 280);
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(void *)(v0 + 232) = 0;
  sub_19EEC4154(v0 + 240, v0 + 16);
  sub_19EEC4154(v0 + 280, v0 + 56);
  *(void *)(v0 + 120) = &type metadata for DefaultLocalizerFormattingStringsDataSource;
  *(void *)(v0 + 128) = &off_1EF149858;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F255020;
  *(void *)(v2 + 32) = objc_msgSend(self, sel_mainBundle);
  sub_19F1DC17C();
  *(void *)(v0 + 160) = &type metadata for LocalizedStringsTableCollection;
  *(void *)(v0 + 168) = &protocol witness table for LocalizedStringsTableCollection;
  *(void *)(v0 + 136) = v2;
  if (qword_1EB3903B8 != -1) {
    swift_once();
  }
  long long v5 = xmmword_1EB3903A0;
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 280);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 240);
  *(_OWORD *)(v0 + 176) = v5;
  *(unsigned char *)(v0 + 192) = 3;
  sub_19EEBD664(v0 + 200, &qword_1EB390398);
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(void *)(v0 + 232) = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_19EFEC75C;
  return static AppleServicesLocalizer.load(using:)(v0 + 16);
}

uint64_t sub_19EFEC75C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2 + 16;
  *(void *)(*v2 + 360) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_19EFEBEB0(v5);
    uint64_t v6 = sub_19EFEC910;
  }
  else
  {
    *(void *)(v4 + 368) = a1;
    sub_19EFEBEB0(v5);
    uint64_t v6 = sub_19EFEC894;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_19EFEC894()
{
  uint64_t v1 = v0[46];
  uint64_t v2 = (void *)v0[40];
  v2[3] = type metadata accessor for AppleServicesLocalizer();
  v2[4] = &protocol witness table for AppleServicesLocalizer;
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_19EFEC910()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19EFECB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[100] = a5;
  v5[99] = a4;
  v5[98] = a3;
  v5[97] = a2;
  v5[96] = a1;
  return MEMORY[0x1F4188298](sub_19EFECB48, 0, 0);
}

uint64_t sub_19EFECB48()
{
  uint64_t v1 = (_OWORD *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 784);
  sub_19EEC4154(*(void *)(v0 + 776), v0 + 688);
  sub_19EEC4154(v2, v0 + 728);
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(void *)(v0 + 456) = 0;
  sub_19EEC4154(v0 + 688, v0 + 240);
  sub_19EEC4154(v0 + 728, v0 + 280);
  *(void *)(v0 + 344) = &type metadata for DefaultLocalizerFormattingStringsDataSource;
  *(void *)(v0 + 352) = &off_1EF149858;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F255020;
  *(void *)(v3 + 32) = objc_msgSend(self, sel_mainBundle);
  sub_19F1DC17C();
  *(void *)(v0 + 384) = &type metadata for LocalizedStringsTableCollection;
  *(void *)(v0 + 392) = &protocol witness table for LocalizedStringsTableCollection;
  *(void *)(v0 + 360) = v3;
  if (qword_1EB3903B8 != -1) {
    swift_once();
  }
  uint64_t v4 = *(uint64_t **)(v0 + 792);
  long long v14 = xmmword_1EB3903A0;
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 728);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 688);
  *(_OWORD *)(v0 + 400) = v14;
  *(unsigned char *)(v0 + 416) = 3;
  sub_19EEBD664(v0 + 424, &qword_1EB390398);
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(void *)(v0 + 456) = 0;
  sub_19EE1E578(v0 + 240, v0 + 464);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v0 + 584), v4);
  long long v5 = *(_OWORD *)(v0 + 640);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 624);
  *(_OWORD *)(v0 + 192) = v5;
  long long v6 = *(_OWORD *)(v0 + 672);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 656);
  *(_OWORD *)(v0 + 224) = v6;
  long long v7 = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v0 + 128) = v7;
  long long v8 = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v0 + 160) = v8;
  long long v9 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 64) = v9;
  long long v10 = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 96) = v10;
  long long v11 = *(_OWORD *)(v0 + 480);
  *uint64_t v1 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 32) = v11;
  sub_19EFEBEB0(v0 + 240);
  long long v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 808) = v12;
  void *v12 = v0;
  v12[1] = sub_19EFECDB4;
  return static AppleServicesLocalizer.load(using:)((uint64_t)v1);
}

uint64_t sub_19EFECDB4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 816) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_19EFECF5C;
  }
  else
  {
    *(void *)(v4 + 824) = a1;
    long long v5 = sub_19EFECEDC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_19EFECEDC()
{
  uint64_t v1 = v0[103];
  uint64_t v2 = (void *)v0[96];
  v2[3] = v0[100];
  v2[4] = &protocol witness table for AppleServicesLocalizer;
  *uint64_t v2 = v1;
  sub_19EFEBEB0((uint64_t)(v0 + 2));
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_19EFECF5C()
{
  sub_19EFEBEB0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EFECFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[153] = a3;
  v3[152] = a2;
  v3[151] = a1;
  return MEMORY[0x1F4188298](sub_19EE3551C, 0, 0);
}

uint64_t sub_19EFECFE8()
{
  uint64_t v105 = v0 + 784;
  uint64_t v1 = *(void *)(v0 + 1256);
  uint64_t v2 = *(void *)(v0 + 1248);
  v116 = (uint64_t *)(v0 + 720);
  sub_19EEC4154((uint64_t)&unk_1E946E538, v0 + 96);
  uint64_t v111 = *(void *)(v0 + 128);
  uint64_t v113 = *(void *)(v0 + 120);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), v113);
  uint64_t v120 = swift_allocObject();
  *(_OWORD *)(v120 + 16) = xmmword_19F24DBC0;
  *(void *)(v0 + 1192) = sub_19EEC3F3C(0, 45, 0, MEMORY[0x1E4FBC860]);
  v3._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v3._object = (void *)0x800000019F26D540;
  LogMessage.StringInterpolation.appendLiteral(_:)(v3);
  *(void *)(v0 + 776) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 752) = v2;
  *(void *)(v0 + 760) = v1;
  sub_19EEC3ED8(v0 + 752, v0 + 656, &qword_1EB393260);
  *(_OWORD *)(v0 + 616) = 0u;
  *(_OWORD *)(v0 + 632) = 0u;
  sub_19EEC3E70(v0 + 656, v0 + 616);
  *(unsigned char *)(v0 + 648) = 0;
  *(unsigned char *)(v0 + 608) = 0;
  long long v4 = *(_OWORD *)(v0 + 632);
  *(_OWORD *)(v0 + 576) = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v0 + 592) = v4;
  uint64_t v5 = *(void **)(v0 + 1192);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_19EEC3F3C(0, v5[2] + 1, 1, v5);
  }
  long long v6 = (long long *)(v0 + 176);
  uint64_t v7 = (long long *)(v0 + 536);
  unint64_t v9 = v5[2];
  unint64_t v8 = v5[3];
  if (v9 >= v8 >> 1) {
    uint64_t v5 = sub_19EEC3F3C((void *)(v8 > 1), v9 + 1, 1, v5);
  }
  uint64_t v106 = v0 + 1008;
  v108 = (uint64_t *)(v0 + 880);
  long long v10 = *(void **)(v0 + 1216);
  long long v5[2] = v9 + 1;
  long long v11 = &v5[5 * v9];
  long long v12 = *(_OWORD *)(v0 + 576);
  long long v13 = *(_OWORD *)(v0 + 592);
  *((unsigned char *)v11 + 64) = *(unsigned char *)(v0 + 608);
  *((_OWORD *)v11 + 2) = v12;
  *((_OWORD *)v11 + 3) = v13;
  *(void *)(v0 + 1192) = v5;
  sub_19EEBD664(v0 + 752, &qword_1EB393260);
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  *(void *)(v120 + 32) = *(void *)(v0 + 1192);
  *(void *)(v0 + 1200) = sub_19EEC3F3C(0, 19, 0, MEMORY[0x1E4FBC860]);
  v15._object = (void *)0x800000019F26CF70;
  v15._uint64_t countAndFlagsBits = 0xD000000000000012;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  uint64_t v16 = v10[3];
  int v17 = __swift_project_boxed_opaque_existential_1(v10, v16);
  *(void *)(v0 + 744) = v16;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v116);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_2Tm, v17, v16);
  sub_19EEC3ED8((uint64_t)v116, v105, &qword_1EB393260);
  *long long v6 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19EEC3E70(v105, v0 + 176);
  *(unsigned char *)(v0 + 208) = 0;
  long long v19 = *(_OWORD *)(v0 + 192);
  *uint64_t v7 = *v6;
  *(_OWORD *)(v0 + 552) = v19;
  *(unsigned char *)(v0 + 568) = *(unsigned char *)(v0 + 208);
  unsigned int v20 = *(void **)(v0 + 1200);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned int v20 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
  }
  int v21 = (long long *)(v0 + 376);
  uint64_t v22 = (long long *)(v0 + 456);
  unint64_t v24 = v20[2];
  unint64_t v23 = v20[3];
  if (v24 >= v23 >> 1) {
    unsigned int v20 = sub_19EEC3F3C((void *)(v23 > 1), v24 + 1, 1, v20);
  }
  _OWORD v20[2] = v24 + 1;
  uint64_t v25 = &v20[5 * v24];
  long long v26 = *v7;
  long long v27 = *(_OWORD *)(v0 + 552);
  *((unsigned char *)v25 + 64) = *(unsigned char *)(v0 + 568);
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  *(void *)(v0 + 1200) = v20;
  sub_19EEBD664((uint64_t)v116, &qword_1EB393260);
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  *(void *)(v120 + 40) = *(void *)(v0 + 1200);
  *(void *)(v0 + 1176) = sub_19EEC3F3C(0, 9, 0, MEMORY[0x1E4FBC860]);
  v29._uint64_t countAndFlagsBits = 0x203A6E6F73616572;
  v29._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  swift_getErrorValue();
  uint64_t v30 = *(void *)(v0 + 1136);
  uint64_t v31 = *(void *)(v0 + 1144);
  *(void *)(v0 + 904) = v31;
  __darwin_time_t v32 = __swift_allocate_boxed_opaque_existential_2Tm(v108);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v32, v30, v31);
  sub_19EEC3ED8((uint64_t)v108, v106, &qword_1EB393260);
  long long *v21 = 0u;
  *(_OWORD *)(v0 + 392) = 0u;
  sub_19EEC3E70(v106, v0 + 376);
  *(unsigned char *)(v0 + 408) = 0;
  long long v33 = *(_OWORD *)(v0 + 392);
  long long *v22 = *v21;
  *(_OWORD *)(v0 + 472) = v33;
  *(unsigned char *)(v0 + 488) = *(unsigned char *)(v0 + 408);
  uint64_t v34 = *(void **)(v0 + 1176);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v34 = sub_19EEC3F3C(0, v34[2] + 1, 1, v34);
  }
  unint64_t v36 = v34[2];
  unint64_t v35 = v34[3];
  if (v36 >= v35 >> 1) {
    uint64_t v34 = sub_19EEC3F3C((void *)(v35 > 1), v36 + 1, 1, v34);
  }
  int64_t v37 = *(void **)(v0 + 1280);
  uint64_t v38 = *(void *)(v0 + 1232);
  uint64_t v39 = *(void *)(v0 + 1240) + 1;
  v34[2] = v36 + 1;
  uint64_t v40 = &v34[5 * v36];
  long long v41 = *v22;
  long long v42 = *(_OWORD *)(v0 + 472);
  *((unsigned char *)v40 + 64) = *(unsigned char *)(v0 + 488);
  *((_OWORD *)v40 + 2) = v41;
  *((_OWORD *)v40 + 3) = v42;
  *(void *)(v0 + 1176) = v34;
  sub_19EEBD664((uint64_t)v108, &qword_1EB393260);
  v43._uint64_t countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v43);
  *(void *)(v120 + 48) = *(void *)(v0 + 1176);
  Logger.debug(_:)(v120, v113, v111);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  if (v39 == v38)
  {
    long long v44 = (long long *)(v0 + 296);
    swift_bridgeObjectRelease();
    if (qword_1EB3903C0 != -1) {
      swift_once();
    }
    uint64_t v45 = *(void *)(v0 + 1224);
    sub_19EEC4154((uint64_t)&unk_1E946E538, v0 + 56);
    uint64_t v117 = *(void *)(v0 + 88);
    uint64_t v118 = *(void *)(v0 + 80);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), v118);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_19F24DBC0;
    v122 = sub_19EEC3F3C(0, 57, 0, MEMORY[0x1E4FBC860]);
    v47._uint64_t countAndFlagsBits = 0xD000000000000038;
    v47._object = (void *)0x800000019F26D570;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    *(void *)(v0 + 1128) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
    *(void *)(v0 + 1104) = v45;
    sub_19EEC3ED8(v0 + 1104, v0 + 1072, &qword_1EB393260);
    *long long v44 = 0u;
    *(_OWORD *)(v0 + 312) = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70(v0 + 1072, v0 + 296);
    *(unsigned char *)(v0 + 328) = 0;
    long long v124 = *v44;
    long long v126 = *(_OWORD *)(v0 + 312);
    char v128 = *(unsigned char *)(v0 + 328);
    uint64_t v48 = v122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v48 = sub_19EEC3F3C(0, v122[2] + 1, 1, v122);
    }
    Swift::String v49 = (long long *)(v0 + 256);
    unint64_t v51 = v48[2];
    unint64_t v50 = v48[3];
    if (v51 >= v50 >> 1) {
      uint64_t v48 = sub_19EEC3F3C((void *)(v50 > 1), v51 + 1, 1, v48);
    }
    unint64_t v52 = *(void **)(v0 + 1216);
    _OWORD v48[2] = v51 + 1;
    uint64_t v53 = &v48[5 * v51];
    *((unsigned char *)v53 + 64) = v128;
    *((_OWORD *)v53 + 2) = v124;
    *((_OWORD *)v53 + 3) = v126;
    sub_19EEBD664(v0 + 1104, &qword_1EB393260);
    v54._uint64_t countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v54);
    *(void *)(v46 + 32) = v48;
    v123 = sub_19EEC3F3C(0, 19, 0, MEMORY[0x1E4FBC860]);
    v55._object = (void *)0x800000019F26CF70;
    v55._uint64_t countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v55);
    uint64_t v56 = v52[3];
    uint64_t v57 = __swift_project_boxed_opaque_existential_1(v52, v56);
    *(void *)(v0 + 936) = v56;
    Swift::String v58 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 912));
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v58, v57, v56);
    sub_19EEC3ED8(v0 + 912, v0 + 848, &qword_1EB393260);
    long long *v49 = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
    sub_19EEC3E70(v0 + 848, v0 + 256);
    *(unsigned char *)(v0 + 288) = 0;
    long long v125 = *v49;
    long long v127 = *(_OWORD *)(v0 + 272);
    char v129 = *(unsigned char *)(v0 + 288);
    uint64_t v59 = v123;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v59 = sub_19EEC3F3C(0, v123[2] + 1, 1, v123);
    }
    unint64_t v61 = v59[2];
    unint64_t v60 = v59[3];
    if (v61 >= v60 >> 1) {
      uint64_t v59 = sub_19EEC3F3C((void *)(v60 > 1), v61 + 1, 1, v59);
    }
    uint64_t v62 = *(void *)(v0 + 1208);
    v59[2] = v61 + 1;
    uint64_t v63 = &v59[5 * v61];
    *((unsigned char *)v63 + 64) = v129;
    *((_OWORD *)v63 + 2) = v125;
    *((_OWORD *)v63 + 3) = v127;
    sub_19EEBD664(v0 + 912, &qword_1EB393260);
    v64._uint64_t countAndFlagsBits = 0;
    v64._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v64);
    *(void *)(v46 + 40) = v59;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 840) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 816) = 0xD00000000000002BLL;
    *(void *)(v0 + 824) = 0x800000019F26D5B0;
    *(_OWORD *)(v0 + 496) = 0u;
    *(_OWORD *)(v0 + 512) = 0u;
    sub_19EEC3E70(v0 + 816, v0 + 496);
    *(unsigned char *)(v0 + 528) = 0;
    *(unsigned char *)(v65 + 64) = 0;
    long long v66 = *(_OWORD *)(v0 + 512);
    *(_OWORD *)(v65 + 32) = *(_OWORD *)(v0 + 496);
    *(_OWORD *)(v65 + 48) = v66;
    *(void *)(v46 + 48) = v65;
    Logger.debug(_:)(v46, v118, v117);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
    *(void *)(v62 + 24) = &type metadata for EmptyLocalizedStrings;
    *(void *)(v62 + 32) = &off_1EF1428D8;
    Swift::String v67 = *(uint64_t (**)(void))(v0 + 8);
    return v67();
  }
  else
  {
    long long v69 = (long long *)(v0 + 136);
    unint64_t v70 = (long long *)(v0 + 216);
    uint64_t v71 = *(void *)(v0 + 1240) + 1;
    *(void *)(v0 + 1240) = v71;
    uint64_t v72 = *(void *)(v0 + 1224) + 16 * v71;
    uint64_t v73 = *(void *)(v72 + 32);
    *(void *)(v0 + 1248) = v73;
    uint64_t v74 = *(void *)(v72 + 40);
    *(void *)(v0 + 1256) = v74;
    uint64_t v75 = qword_1EB3903C0;
    swift_bridgeObjectRetain();
    uint64_t v119 = v74;
    uint64_t v121 = v73;
    if (v75 != -1) {
      swift_once();
    }
    v107 = (uint64_t *)(v0 + 944);
    uint64_t v109 = v0 + 1040;
    sub_19EEC4154((uint64_t)&unk_1E946E538, v0 + 16);
    uint64_t v112 = *(void *)(v0 + 48);
    uint64_t v114 = *(void *)(v0 + 40);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v114);
    *(void *)(v0 + 1264) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v110 = swift_allocObject();
    *(_OWORD *)(v110 + 16) = xmmword_19F24EB80;
    *(void *)(v0 + 1160) = sub_19EEC3F3C(0, 38, 0, MEMORY[0x1E4FBC860]);
    v76._uint64_t countAndFlagsBits = 0xD000000000000025;
    v76._object = (void *)0x800000019F26D510;
    LogMessage.StringInterpolation.appendLiteral(_:)(v76);
    *(void *)(v0 + 1000) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 976) = v73;
    *(void *)(v0 + 984) = v74;
    sub_19EEC3ED8(v0 + 976, v0 + 688, &qword_1EB393260);
    *unint64_t v70 = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70(v0 + 688, v0 + 216);
    *(unsigned char *)(v0 + 248) = 0;
    long long v77 = *(_OWORD *)(v0 + 232);
    long long *v69 = *v70;
    *(_OWORD *)(v0 + 152) = v77;
    *(unsigned char *)(v0 + 168) = *(unsigned char *)(v0 + 248);
    uint64_t v78 = *(void **)(v0 + 1160);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v78 = sub_19EEC3F3C(0, v78[2] + 1, 1, v78);
    }
    uint64_t v79 = (long long *)(v0 + 336);
    uint64_t v80 = (long long *)(v0 + 416);
    unint64_t v82 = v78[2];
    unint64_t v81 = v78[3];
    if (v82 >= v81 >> 1) {
      uint64_t v78 = sub_19EEC3F3C((void *)(v81 > 1), v82 + 1, 1, v78);
    }
    uint64_t v83 = *(void **)(v0 + 1216);
    v78[2] = v82 + 1;
    uint64_t v84 = &v78[5 * v82];
    long long v85 = *v69;
    long long v86 = *(_OWORD *)(v0 + 152);
    *((unsigned char *)v84 + 64) = *(unsigned char *)(v0 + 168);
    *((_OWORD *)v84 + 2) = v85;
    *((_OWORD *)v84 + 3) = v86;
    *(void *)(v0 + 1160) = v78;
    sub_19EEBD664(v0 + 976, &qword_1EB393260);
    v87._uint64_t countAndFlagsBits = 0;
    v87._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v87);
    *(void *)(v110 + 32) = *(void *)(v0 + 1160);
    *(void *)(v0 + 1184) = sub_19EEC3F3C(0, 19, 0, MEMORY[0x1E4FBC860]);
    v88._object = (void *)0x800000019F26CF70;
    v88._uint64_t countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v88);
    uint64_t v89 = v83[3];
    uint64_t v90 = __swift_project_boxed_opaque_existential_1(v83, v89);
    *(void *)(v0 + 968) = v89;
    uint64_t v91 = __swift_allocate_boxed_opaque_existential_2Tm(v107);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v89 - 8) + 16))(v91, v90, v89);
    sub_19EEC3ED8((uint64_t)v107, v109, &qword_1EB393260);
    *uint64_t v80 = 0u;
    *(_OWORD *)(v0 + 432) = 0u;
    sub_19EEC3E70(v109, v0 + 416);
    *(unsigned char *)(v0 + 448) = 0;
    long long v92 = *(_OWORD *)(v0 + 432);
    *uint64_t v79 = *v80;
    *(_OWORD *)(v0 + 352) = v92;
    *(unsigned char *)(v0 + 368) = *(unsigned char *)(v0 + 448);
    uint64_t v93 = *(void **)(v0 + 1184);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v93 = sub_19EEC3F3C(0, v93[2] + 1, 1, v93);
    }
    unint64_t v95 = v93[2];
    unint64_t v94 = v93[3];
    if (v95 >= v94 >> 1) {
      uint64_t v93 = sub_19EEC3F3C((void *)(v94 > 1), v95 + 1, 1, v93);
    }
    v96 = *(void **)(v0 + 1216);
    v93[2] = v95 + 1;
    v97 = &v93[5 * v95];
    long long v98 = *v79;
    long long v99 = *(_OWORD *)(v0 + 352);
    *((unsigned char *)v97 + 64) = *(unsigned char *)(v0 + 368);
    *((_OWORD *)v97 + 2) = v98;
    *((_OWORD *)v97 + 3) = v99;
    *(void *)(v0 + 1184) = v93;
    sub_19EEBD664((uint64_t)v107, &qword_1EB393260);
    v100._uint64_t countAndFlagsBits = 0;
    v100._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v100);
    *(void *)(v110 + 40) = *(void *)(v0 + 1184);
    Logger.debug(_:)(v110, v114, v112);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    uint64_t v101 = v96[3];
    uint64_t v102 = v96[4];
    __swift_project_boxed_opaque_existential_1(v96, v101);
    v115 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v102 + 16)
                                                                               + **(int **)(v102 + 16));
    long long v103 = (void *)swift_task_alloc();
    *(void *)(v0 + 1272) = v103;
    *long long v103 = v0;
    v103[1] = sub_19EE278C0;
    uint64_t v104 = *(void *)(v0 + 1208);
    return v115(v104, v121, v119, v101, v102);
  }
}

uint64_t AppleServicesLocalizer.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9JetEngine22AppleServicesLocalizer_locale;
  uint64_t v4 = sub_19F1DB66C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

id AppleServicesLocalizer.jsExport.getter()
{
  uint64_t v1 = *v0;
  v7[4] = &off_1EF143028;
  v7[5] = &protocol witness table for AppleServicesLocalizer;
  v7[3] = v1;
  v7[0] = v0;
  uint64_t v2 = (objc_class *)type metadata accessor for JSLocalizerObject();
  id v3 = objc_allocWithZone(v2);
  sub_19EE959B4((uint64_t)v7, (uint64_t)v3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v6.receiver = v3;
  v6.super_class = v2;
  swift_retain();
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  return v4;
}

uint64_t AppleServicesLocalizer.jsRepresentation(in:)@<X0>(void *a1@<X8>)
{
  void v8[3] = *v1;
  v8[4] = &off_1EF143028;
  v8[5] = &protocol witness table for AppleServicesLocalizer;
  v8[0] = v1;
  id v3 = (objc_class *)type metadata accessor for JSLocalizerObject();
  id v4 = objc_allocWithZone(v3);
  sub_19EE959B4((uint64_t)v8, (uint64_t)v4 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v7.receiver = v4;
  v7.super_class = v3;
  swift_retain();
  id v5 = objc_msgSendSuper2(&v7, sel_init);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  a1[3] = v3;
  a1[4] = &off_1EF13FB20;
  *a1 = v5;
  return result;
}

Swift::Bool __swiftcall AppleServicesLocalizer.hasString(forKey:using:)(Swift::String forKey, JetEngine::LocalizerLookupStrategy using)
{
  object = forKey._object;
  uint64_t countAndFlagsBits = forKey._countAndFlagsBits;
  LOBYTE(v11[0]) = *(unsigned char *)using;
  uint64_t v4 = sub_19EEC4964(forKey._countAndFlagsBits, (uint64_t)forKey._object, (unsigned __int8 *)v11);
  if (!v5) {
    goto LABEL_7;
  }
  uint64_t v6 = v4;
  objc_super v7 = v5;
  v11[0] = countAndFlagsBits;
  v11[1] = object;
  sub_19EEC4910();
  if ((sub_19F1DCBCC() & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    char v8 = 1;
    return v8 & 1;
  }
  if ((v6 != countAndFlagsBits || v7 != object) && (sub_19F1DD44C() & 1) == 0)
  {
    if (sub_19F1DBFAC())
    {
      char v9 = sub_19F1DBFBC();
      swift_bridgeObjectRelease();
      char v8 = v9 ^ 1;
      return v8 & 1;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_7:
  char v8 = 0;
  return v8 & 1;
}

uint64_t sub_19EFEE16C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  LOBYTE(v12[0]) = *a3;
  uint64_t v5 = sub_19EEC4964(a1, a2, (unsigned __int8 *)v12);
  if (!v6) {
    goto LABEL_7;
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  v12[0] = a1;
  v12[1] = a2;
  sub_19EEC4910();
  if ((sub_19F1DCBCC() & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    char v9 = 1;
    return v9 & 1;
  }
  if ((v7 != a1 || v8 != a2) && (sub_19F1DD44C() & 1) == 0)
  {
    if (sub_19F1DBFAC())
    {
      char v10 = sub_19F1DBFBC();
      swift_bridgeObjectRelease();
      char v9 = v10 ^ 1;
      return v9 & 1;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_7:
  char v9 = 0;
  return v9 & 1;
}

Swift::Bool __swiftcall AppleServicesLocalizer.isLocalizedString(_:)(Swift::String a1)
{
  if (sub_19F1DBFAC()) {
    char v1 = sub_19F1DBFBC() ^ 1;
  }
  else {
    char v1 = 1;
  }
  return v1 & 1;
}

uint64_t AppleServicesLocalizer.string(forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v8 = *(void *)a4;
  uint64_t v9 = *(void *)(a4 + 8);
  uint64_t v10 = *(unsigned __int8 *)(a4 + 16);
  char v11 = *a5;
  char v68 = *(unsigned char *)(a4 + 17);
  swift_bridgeObjectRetain();
  if (v68)
  {
    uint64_t v12 = sub_19F1DCD2C();
    uint64_t v14 = v13;
    sub_19EFF2324(v8, v9, v10, 1);
  }
  else
  {
    sub_19EFF2334(v8, v9, v10, 0);
    uint64_t v12 = v8;
    uint64_t v14 = v9;
  }
  char v70 = v11;
  LOBYTE(v83[0]) = v11;
  uint64_t v15 = sub_19EEC4410(a1, a2, a3, v12, v14, v83);
  uint64_t v73 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB3903C0 != -1) {
    swift_once();
  }
  unsigned int v69 = v10;
  sub_19EEC4154((uint64_t)&unk_1E946E538, (uint64_t)v83);
  uint64_t v71 = v85;
  uint64_t v72 = v84;
  __swift_project_boxed_opaque_existential_1(v83, v84);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_19F24DBB0;
  unint64_t v82 = sub_19EEC3F3C(0, 2, 0, MEMORY[0x1E4FBC860]);
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  *((void *)&v81 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v80 = 0xD000000000000027;
  *((void *)&v80 + 1) = 0x800000019F26D040;
  sub_19EEC3ED8((uint64_t)&v80, (uint64_t)v76, &qword_1EB393260);
  long long v74 = 0u;
  long long v75 = 0u;
  sub_19EEC3E70((uint64_t)v76, (uint64_t)&v74);
  char v79 = 0;
  long long v77 = v74;
  long long v78 = v75;
  long long v19 = v82;
  uint64_t v20 = v15;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
  }
  unint64_t v22 = v19[2];
  unint64_t v21 = v19[3];
  if (v22 >= v21 >> 1) {
    long long v19 = sub_19EEC3F3C((void *)(v21 > 1), v22 + 1, 1, v19);
  }
  void v19[2] = v22 + 1;
  unint64_t v23 = &v19[5 * v22];
  long long v24 = v77;
  long long v25 = v78;
  *((unsigned char *)v23 + 64) = v79;
  *((_OWORD *)v23 + 2) = v24;
  *((_OWORD *)v23 + 3) = v25;
  unint64_t v82 = v19;
  sub_19EEBD664((uint64_t)&v80, &qword_1EB393260);
  v26._uint64_t countAndFlagsBits = 44;
  v26._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  *(void *)(v17 + 32) = v82;
  unint64_t v82 = sub_19EEC3F3C(0, 7, 0, MEMORY[0x1E4FBC860]);
  v27._uint64_t countAndFlagsBits = 0x203A79656BLL;
  v27._object = (void *)0xE500000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  *((void *)&v81 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v80 = a1;
  *((void *)&v80 + 1) = a2;
  sub_19EEC3ED8((uint64_t)&v80, (uint64_t)v76, &qword_1EB393260);
  long long v74 = 0u;
  long long v75 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v76, (uint64_t)&v74);
  char v79 = 0;
  long long v77 = v74;
  long long v78 = v75;
  Swift::String v28 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v28 = sub_19EEC3F3C(0, v28[2] + 1, 1, v28);
  }
  unint64_t v30 = v28[2];
  unint64_t v29 = v28[3];
  if (v30 >= v29 >> 1) {
    Swift::String v28 = sub_19EEC3F3C((void *)(v29 > 1), v30 + 1, 1, v28);
  }
  void v28[2] = v30 + 1;
  uint64_t v31 = &v28[5 * v30];
  long long v32 = v77;
  long long v33 = v78;
  *((unsigned char *)v31 + 64) = v79;
  *((_OWORD *)v31 + 2) = v32;
  *((_OWORD *)v31 + 3) = v33;
  unint64_t v82 = v28;
  sub_19EEBD664((uint64_t)&v80, &qword_1EB393260);
  v34._uint64_t countAndFlagsBits = 44;
  v34._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  *(void *)(v17 + 40) = v82;
  unint64_t v82 = sub_19EEC3F3C(0, 16, 0, MEMORY[0x1E4FBC860]);
  v35._uint64_t countAndFlagsBits = 0x6D6563616C706572;
  v35._object = (void *)0xEE00203A73746E65;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  if (a3)
  {
    *((void *)&v81 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
    *(void *)&long long v80 = a3;
  }
  else
  {
    long long v80 = 0u;
    long long v81 = 0u;
  }
  sub_19EEC3ED8((uint64_t)&v80, (uint64_t)v76, &qword_1EB393260);
  long long v74 = 0u;
  long long v75 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v76, (uint64_t)&v74);
  char v79 = 2;
  long long v77 = v74;
  long long v78 = v75;
  unint64_t v36 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v36 = sub_19EEC3F3C(0, v36[2] + 1, 1, v36);
  }
  unint64_t v38 = v36[2];
  unint64_t v37 = v36[3];
  if (v38 >= v37 >> 1) {
    unint64_t v36 = sub_19EEC3F3C((void *)(v37 > 1), v38 + 1, 1, v36);
  }
  _OWORD v36[2] = v38 + 1;
  uint64_t v39 = &v36[5 * v38];
  long long v40 = v77;
  long long v41 = v78;
  *((unsigned char *)v39 + 64) = v79;
  *((_OWORD *)v39 + 2) = v40;
  *((_OWORD *)v39 + 3) = v41;
  unint64_t v82 = v36;
  sub_19EEBD664((uint64_t)&v80, &qword_1EB393260);
  v42._uint64_t countAndFlagsBits = 44;
  v42._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v42);
  *(void *)(v17 + 48) = v82;
  unint64_t v82 = sub_19EEC3F3C(0, 18, 0, MEMORY[0x1E4FBC860]);
  v43._uint64_t countAndFlagsBits = 0x56746C7561666564;
  v43._object = (void *)0xEF22203A65756C61;
  LogMessage.StringInterpolation.appendLiteral(_:)(v43);
  *((void *)&v81 + 1) = &type metadata for LocalizerDefaultValue;
  *(void *)&long long v80 = v8;
  *((void *)&v80 + 1) = v9;
  LOBYTE(v81) = v69;
  BYTE1(v81) = v68;
  sub_19EEC3ED8((uint64_t)&v80, (uint64_t)v76, &qword_1EB393260);
  long long v74 = 0u;
  long long v75 = 0u;
  sub_19EFF2334(v8, v9, v69, v68);
  sub_19EEC3E70((uint64_t)v76, (uint64_t)&v74);
  char v79 = 2;
  long long v77 = v74;
  long long v78 = v75;
  long long v44 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v44 = sub_19EEC3F3C(0, v44[2] + 1, 1, v44);
  }
  unint64_t v46 = v44[2];
  unint64_t v45 = v44[3];
  if (v46 >= v45 >> 1) {
    long long v44 = sub_19EEC3F3C((void *)(v45 > 1), v46 + 1, 1, v44);
  }
  v44[2] = v46 + 1;
  Swift::String v47 = &v44[5 * v46];
  long long v48 = v77;
  long long v49 = v78;
  *((unsigned char *)v47 + 64) = v79;
  *((_OWORD *)v47 + 2) = v48;
  *((_OWORD *)v47 + 3) = v49;
  unint64_t v82 = v44;
  sub_19EEBD664((uint64_t)&v80, &qword_1EB393260);
  v50._uint64_t countAndFlagsBits = 11298;
  v50._object = (void *)0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v50);
  *(void *)(v17 + 56) = v82;
  unint64_t v82 = sub_19EEC3F3C(0, 18, 0, MEMORY[0x1E4FBC860]);
  v51._object = (void *)0x800000019F26D020;
  v51._uint64_t countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v51);
  *((void *)&v81 + 1) = &type metadata for LocalizerLookupStrategy;
  LOBYTE(v80) = v70;
  sub_19EEC3ED8((uint64_t)&v80, (uint64_t)v76, &qword_1EB393260);
  long long v74 = 0u;
  long long v75 = 0u;
  sub_19EEC3E70((uint64_t)v76, (uint64_t)&v74);
  char v79 = 0;
  long long v77 = v74;
  long long v78 = v75;
  unint64_t v52 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v52 = sub_19EEC3F3C(0, v52[2] + 1, 1, v52);
  }
  unint64_t v54 = v52[2];
  unint64_t v53 = v52[3];
  if (v54 >= v53 >> 1) {
    unint64_t v52 = sub_19EEC3F3C((void *)(v53 > 1), v54 + 1, 1, v52);
  }
  v52[2] = v54 + 1;
  Swift::String v55 = &v52[5 * v54];
  long long v56 = v77;
  long long v57 = v78;
  *((unsigned char *)v55 + 64) = v79;
  *((_OWORD *)v55 + 2) = v56;
  *((_OWORD *)v55 + 3) = v57;
  unint64_t v82 = v52;
  sub_19EEBD664((uint64_t)&v80, &qword_1EB393260);
  v58._uint64_t countAndFlagsBits = 44;
  v58._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v58);
  *(void *)(v17 + 64) = v82;
  unint64_t v82 = sub_19EEC3F3C(0, 11, 0, MEMORY[0x1E4FBC860]);
  v59._uint64_t countAndFlagsBits = 0x203A746C75736572;
  v59._object = (void *)0xE900000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v59);
  *((void *)&v81 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v80 = v20;
  *((void *)&v80 + 1) = v73;
  sub_19EEC3ED8((uint64_t)&v80, (uint64_t)v76, &qword_1EB393260);
  long long v74 = 0u;
  long long v75 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v76, (uint64_t)&v74);
  char v79 = 2;
  long long v77 = v74;
  long long v78 = v75;
  unint64_t v60 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v60 = sub_19EEC3F3C(0, v60[2] + 1, 1, v60);
  }
  unint64_t v62 = v60[2];
  unint64_t v61 = v60[3];
  if (v62 >= v61 >> 1) {
    unint64_t v60 = sub_19EEC3F3C((void *)(v61 > 1), v62 + 1, 1, v60);
  }
  v60[2] = v62 + 1;
  uint64_t v63 = &v60[5 * v62];
  long long v64 = v77;
  long long v65 = v78;
  *((unsigned char *)v63 + 64) = v79;
  *((_OWORD *)v63 + 2) = v64;
  *((_OWORD *)v63 + 3) = v65;
  unint64_t v82 = v60;
  sub_19EEBD664((uint64_t)&v80, &qword_1EB393260);
  v66._uint64_t countAndFlagsBits = 34;
  v66._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v66);
  *(void *)(v17 + 72) = v82;
  Logger.debug(_:)(v17, v72, v71);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v83);
  return v20;
}

Swift::String __swiftcall AppleServicesLocalizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)(NSNumber forNumber, Swift::Int_optional minimumFractionDigits, Swift::Int_optional maximumFractionDigits, JetEngine::LocalizerContext in)
{
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v4 + 192) + 16);
  os_unfair_lock_lock(v5);
  sub_19EE84F78(v9);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = v9[0];
  uint64_t v7 = (void *)v9[1];
  result._object = v7;
  result._uint64_t countAndFlagsBits = v6;
  return result;
}

uint64_t sub_19EFEECA4@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  int v11 = a4 & 1;
  int v12 = a6 & 1;
  uint64_t v13 = a2;
  uint64_t v14 = a1 + OBJC_IVAR____TtC9JetEngine22AppleServicesLocalizer_locale;
  swift_beginAccess();
  int v72 = v12;
  id v15 = sub_19EE8597C(0, 0, v13, 0, a3, v11, a5, v12, v14);
  swift_endAccess();
  id v16 = objc_msgSend(v15, sel_stringFromNumber_, a7);

  if (v16)
  {
    uint64_t v76 = sub_19F1DBD7C();
    unint64_t v18 = v17;
  }
  else
  {
    objc_msgSend(a7, sel_decimalValue);
    uint64_t v76 = sub_19F1DCA5C();
    unint64_t v18 = v19;
  }
  if (qword_1EB3903C0 != -1) {
    swift_once();
  }
  sub_19EEC4154((uint64_t)&unk_1E946E538, (uint64_t)&v88);
  uint64_t v74 = v90;
  uint64_t v75 = v89;
  __swift_project_boxed_opaque_existential_1(&v88, v89);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_19F24DBB0;
  uint64_t v91 = sub_19EEC3F3C(0, 2, 0, MEMORY[0x1E4FBC860]);
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  Swift::String v87 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
  unint64_t v84 = 0xD000000000000045;
  unint64_t v85 = 0x800000019F26D3D0;
  sub_19EEC3ED8((uint64_t)&v84, (uint64_t)v80, &qword_1EB393260);
  long long v78 = 0u;
  long long v79 = 0u;
  sub_19EEC3E70((uint64_t)v80, (uint64_t)&v78);
  char v83 = 0;
  long long v81 = v78;
  long long v82 = v79;
  unint64_t v22 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v22 = sub_19EEC3F3C(0, v22[2] + 1, 1, v22);
  }
  unint64_t v24 = v22[2];
  unint64_t v23 = v22[3];
  if (v24 >= v23 >> 1) {
    unint64_t v22 = sub_19EEC3F3C((void *)(v23 > 1), v24 + 1, 1, v22);
  }
  v22[2] = v24 + 1;
  long long v25 = &v22[5 * v24];
  long long v26 = v81;
  long long v27 = v82;
  *((unsigned char *)v25 + 64) = v83;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  uint64_t v91 = v22;
  sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  v28._uint64_t countAndFlagsBits = 44;
  v28._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  *(void *)(v20 + 32) = v91;
  uint64_t v91 = sub_19EEC3F3C(0, 10, 0, MEMORY[0x1E4FBC860]);
  v29._uint64_t countAndFlagsBits = 0x203A7265626D756ELL;
  v29._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  Swift::String v87 = (ValueMetadata *)sub_19EE85BDC();
  unint64_t v84 = (unint64_t)a7;
  sub_19EEC3ED8((uint64_t)&v84, (uint64_t)v80, &qword_1EB393260);
  long long v78 = 0u;
  long long v79 = 0u;
  id v30 = a7;
  sub_19EEC3E70((uint64_t)v80, (uint64_t)&v78);
  char v83 = 0;
  long long v81 = v78;
  long long v82 = v79;
  uint64_t v31 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v31 = sub_19EEC3F3C(0, v31[2] + 1, 1, v31);
  }
  unint64_t v33 = v31[2];
  unint64_t v32 = v31[3];
  if (v33 >= v32 >> 1) {
    uint64_t v31 = sub_19EEC3F3C((void *)(v32 > 1), v33 + 1, 1, v31);
  }
  v31[2] = v33 + 1;
  Swift::String v34 = &v31[5 * v33];
  long long v35 = v81;
  long long v36 = v82;
  *((unsigned char *)v34 + 64) = v83;
  *((_OWORD *)v34 + 2) = v35;
  *((_OWORD *)v34 + 3) = v36;
  uint64_t v91 = v31;
  sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  v37._uint64_t countAndFlagsBits = 44;
  v37._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  *(void *)(v20 + 40) = v91;
  uint64_t v91 = sub_19EEC3F3C(0, 25, 0, MEMORY[0x1E4FBC860]);
  v38._object = (void *)0x800000019F26D420;
  v38._uint64_t countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  uint64_t v39 = (ValueMetadata *)MEMORY[0x1E4FBB550];
  if (v11)
  {
    a3 = 0;
    unint64_t v85 = 0;
    uint64_t v86 = 0;
    Swift::String v87 = 0;
  }
  else
  {
    Swift::String v87 = (ValueMetadata *)MEMORY[0x1E4FBB550];
  }
  unint64_t v84 = a3;
  sub_19EEC3ED8((uint64_t)&v84, (uint64_t)v80, &qword_1EB393260);
  long long v78 = 0u;
  long long v79 = 0u;
  sub_19EEC3E70((uint64_t)v80, (uint64_t)&v78);
  char v83 = 0;
  long long v81 = v78;
  long long v82 = v79;
  long long v40 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v40 = sub_19EEC3F3C(0, v40[2] + 1, 1, v40);
  }
  unint64_t v42 = v40[2];
  unint64_t v41 = v40[3];
  if (v42 >= v41 >> 1) {
    long long v40 = sub_19EEC3F3C((void *)(v41 > 1), v42 + 1, 1, v40);
  }
  _OWORD v40[2] = v42 + 1;
  Swift::String v43 = &v40[5 * v42];
  long long v44 = v81;
  long long v45 = v82;
  *((unsigned char *)v43 + 64) = v83;
  *((_OWORD *)v43 + 2) = v44;
  *((_OWORD *)v43 + 3) = v45;
  uint64_t v91 = v40;
  sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  v46._uint64_t countAndFlagsBits = 44;
  v46._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v46);
  *(void *)(v20 + 48) = v91;
  uint64_t v91 = sub_19EEC3F3C(0, 25, 0, MEMORY[0x1E4FBC860]);
  v47._object = (void *)0x800000019F26D440;
  v47._uint64_t countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v47);
  if (v72)
  {
    a5 = 0;
    unint64_t v85 = 0;
    uint64_t v86 = 0;
    Swift::String v87 = 0;
  }
  else
  {
    Swift::String v87 = v39;
  }
  unint64_t v84 = a5;
  sub_19EEC3ED8((uint64_t)&v84, (uint64_t)v80, &qword_1EB393260);
  long long v78 = 0u;
  long long v79 = 0u;
  sub_19EEC3E70((uint64_t)v80, (uint64_t)&v78);
  char v83 = 0;
  long long v81 = v78;
  long long v82 = v79;
  long long v48 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v48 = sub_19EEC3F3C(0, v48[2] + 1, 1, v48);
  }
  unint64_t v50 = v48[2];
  unint64_t v49 = v48[3];
  if (v50 >= v49 >> 1) {
    long long v48 = sub_19EEC3F3C((void *)(v49 > 1), v50 + 1, 1, v48);
  }
  _OWORD v48[2] = v50 + 1;
  Swift::String v51 = &v48[5 * v50];
  long long v52 = v81;
  long long v53 = v82;
  *((unsigned char *)v51 + 64) = v83;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  uint64_t v91 = v48;
  sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  v54._uint64_t countAndFlagsBits = 44;
  v54._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(void *)(v20 + 56) = v91;
  uint64_t v91 = sub_19EEC3F3C(0, 11, 0, MEMORY[0x1E4FBC860]);
  v55._uint64_t countAndFlagsBits = 0x3A747865746E6F63;
  v55._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  Swift::String v87 = &type metadata for LocalizerContext;
  LOBYTE(v84) = a2;
  sub_19EEC3ED8((uint64_t)&v84, (uint64_t)v80, &qword_1EB393260);
  long long v78 = 0u;
  long long v79 = 0u;
  sub_19EEC3E70((uint64_t)v80, (uint64_t)&v78);
  char v83 = 0;
  long long v81 = v78;
  long long v82 = v79;
  long long v56 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v56 = sub_19EEC3F3C(0, v56[2] + 1, 1, v56);
  }
  unint64_t v58 = v56[2];
  unint64_t v57 = v56[3];
  if (v58 >= v57 >> 1) {
    long long v56 = sub_19EEC3F3C((void *)(v57 > 1), v58 + 1, 1, v56);
  }
  v56[2] = v58 + 1;
  Swift::String v59 = &v56[5 * v58];
  long long v60 = v81;
  long long v61 = v82;
  *((unsigned char *)v59 + 64) = v83;
  *((_OWORD *)v59 + 2) = v60;
  *((_OWORD *)v59 + 3) = v61;
  uint64_t v91 = v56;
  sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  v62._uint64_t countAndFlagsBits = 44;
  v62._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v62);
  *(void *)(v20 + 64) = v91;
  uint64_t v91 = sub_19EEC3F3C(0, 11, 0, MEMORY[0x1E4FBC860]);
  v63._object = (void *)0xE900000000000022;
  v63._uint64_t countAndFlagsBits = 0x203A746C75736572;
  LogMessage.StringInterpolation.appendLiteral(_:)(v63);
  Swift::String v87 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
  unint64_t v84 = v76;
  unint64_t v85 = v18;
  sub_19EEC3ED8((uint64_t)&v84, (uint64_t)v80, &qword_1EB393260);
  long long v78 = 0u;
  long long v79 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v80, (uint64_t)&v78);
  char v83 = 2;
  long long v81 = v78;
  long long v82 = v79;
  long long v64 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v64 = sub_19EEC3F3C(0, v64[2] + 1, 1, v64);
  }
  unint64_t v66 = v64[2];
  unint64_t v65 = v64[3];
  if (v66 >= v65 >> 1) {
    long long v64 = sub_19EEC3F3C((void *)(v65 > 1), v66 + 1, 1, v64);
  }
  v64[2] = v66 + 1;
  Swift::String v67 = &v64[5 * v66];
  long long v68 = v81;
  long long v69 = v82;
  *((unsigned char *)v67 + 64) = v83;
  *((_OWORD *)v67 + 2) = v68;
  *((_OWORD *)v67 + 3) = v69;
  uint64_t v91 = v64;
  sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  v70._uint64_t countAndFlagsBits = 34;
  v70._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v70);
  *(void *)(v20 + 72) = v91;
  Logger.debug(_:)(v20, v75, v74);
  swift_bridgeObjectRelease();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v88);
  *a8 = v76;
  a8[1] = v18;
  return result;
}

uint64_t AppleServicesLocalizer.string(withCount:forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v10 = *(void *)a5;
  uint64_t v11 = *(void *)(a5 + 8);
  uint64_t v12 = *(unsigned __int8 *)(a5 + 16);
  char v13 = *a6;
  char v80 = *(unsigned char *)(a5 + 17);
  unsigned int v81 = *(unsigned __int8 *)(a5 + 16);
  swift_bridgeObjectRetain();
  if (v80)
  {
    uint64_t v14 = sub_19F1DCD2C();
    uint64_t v15 = v12;
    uint64_t v17 = v16;
    sub_19EFF2324(v10, v11, v15, 1);
  }
  else
  {
    sub_19EFF2334(v10, v11, v12, 0);
    uint64_t v14 = v10;
    uint64_t v17 = v11;
  }
  uint64_t v82 = v11;
  LOBYTE(v95[0]) = v13;
  *(void *)&long long v85 = sub_19EE8E8DC(a1, a2, a3, a4, v14, v17, (char *)v95);
  *((void *)&v85 + 1) = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB3903C0 != -1) {
    swift_once();
  }
  uint64_t v19 = v10;
  sub_19EEC4154((uint64_t)&unk_1E946E538, (uint64_t)v95);
  uint64_t v83 = v97;
  uint64_t v84 = v96;
  __swift_project_boxed_opaque_existential_1(v95, v96);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_19F255030;
  unint64_t v94 = sub_19EEC3F3C(0, 2, 0, MEMORY[0x1E4FBC860]);
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *((void *)&v93 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v92 = 0xD000000000000031;
  *((void *)&v92 + 1) = 0x800000019F26D0A0;
  sub_19EEC3ED8((uint64_t)&v92, (uint64_t)v88, &qword_1EB393260);
  long long v86 = 0u;
  long long v87 = 0u;
  sub_19EEC3E70((uint64_t)v88, (uint64_t)&v86);
  char v91 = 0;
  long long v89 = v86;
  long long v90 = v87;
  unint64_t v22 = v94;
  char v23 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v22 = sub_19EEC3F3C(0, v22[2] + 1, 1, v22);
  }
  unint64_t v25 = v22[2];
  unint64_t v24 = v22[3];
  if (v25 >= v24 >> 1) {
    unint64_t v22 = sub_19EEC3F3C((void *)(v24 > 1), v25 + 1, 1, v22);
  }
  v22[2] = v25 + 1;
  long long v26 = &v22[5 * v25];
  long long v27 = v89;
  long long v28 = v90;
  *((unsigned char *)v26 + 64) = v91;
  *((_OWORD *)v26 + 2) = v27;
  *((_OWORD *)v26 + 3) = v28;
  unint64_t v94 = v22;
  sub_19EEBD664((uint64_t)&v92, &qword_1EB393260);
  v29._uint64_t countAndFlagsBits = 44;
  v29._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  *(void *)(v20 + 32) = v94;
  unint64_t v94 = sub_19EEC3F3C(0, 9, 0, MEMORY[0x1E4FBC860]);
  v30._uint64_t countAndFlagsBits = 0x203A746E756F63;
  v30._object = (void *)0xE700000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  *((void *)&v93 + 1) = MEMORY[0x1E4FBB550];
  *(void *)&long long v92 = a1;
  sub_19EEC3ED8((uint64_t)&v92, (uint64_t)v88, &qword_1EB393260);
  long long v86 = 0u;
  long long v87 = 0u;
  sub_19EEC3E70((uint64_t)v88, (uint64_t)&v86);
  char v91 = 0;
  long long v89 = v86;
  long long v90 = v87;
  uint64_t v31 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v31 = sub_19EEC3F3C(0, v31[2] + 1, 1, v31);
  }
  unint64_t v33 = v31[2];
  unint64_t v32 = v31[3];
  if (v33 >= v32 >> 1) {
    uint64_t v31 = sub_19EEC3F3C((void *)(v32 > 1), v33 + 1, 1, v31);
  }
  v31[2] = v33 + 1;
  Swift::String v34 = &v31[5 * v33];
  long long v35 = v89;
  long long v36 = v90;
  *((unsigned char *)v34 + 64) = v91;
  *((_OWORD *)v34 + 2) = v35;
  *((_OWORD *)v34 + 3) = v36;
  unint64_t v94 = v31;
  sub_19EEBD664((uint64_t)&v92, &qword_1EB393260);
  v37._uint64_t countAndFlagsBits = 44;
  v37._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  *(void *)(v20 + 40) = v94;
  unint64_t v94 = sub_19EEC3F3C(0, 7, 0, MEMORY[0x1E4FBC860]);
  v38._uint64_t countAndFlagsBits = 0x203A79656BLL;
  v38._object = (void *)0xE500000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  uint64_t v39 = MEMORY[0x1E4FBB1A0];
  *((void *)&v93 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v92 = a2;
  *((void *)&v92 + 1) = a3;
  sub_19EEC3ED8((uint64_t)&v92, (uint64_t)v88, &qword_1EB393260);
  long long v86 = 0u;
  long long v87 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v88, (uint64_t)&v86);
  char v91 = 0;
  long long v89 = v86;
  long long v90 = v87;
  long long v40 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v40 = sub_19EEC3F3C(0, v40[2] + 1, 1, v40);
  }
  unint64_t v42 = v40[2];
  unint64_t v41 = v40[3];
  if (v42 >= v41 >> 1) {
    long long v40 = sub_19EEC3F3C((void *)(v41 > 1), v42 + 1, 1, v40);
  }
  _OWORD v40[2] = v42 + 1;
  Swift::String v43 = &v40[5 * v42];
  long long v44 = v89;
  long long v45 = v90;
  *((unsigned char *)v43 + 64) = v91;
  *((_OWORD *)v43 + 2) = v44;
  *((_OWORD *)v43 + 3) = v45;
  unint64_t v94 = v40;
  sub_19EEBD664((uint64_t)&v92, &qword_1EB393260);
  v46._uint64_t countAndFlagsBits = 44;
  v46._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v46);
  *(void *)(v20 + 48) = v94;
  unint64_t v94 = sub_19EEC3F3C(0, 16, 0, MEMORY[0x1E4FBC860]);
  v47._uint64_t countAndFlagsBits = 0x6D6563616C706572;
  v47._object = (void *)0xEE00203A73746E65;
  LogMessage.StringInterpolation.appendLiteral(_:)(v47);
  if (a4)
  {
    *((void *)&v93 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
    *(void *)&long long v92 = a4;
  }
  else
  {
    long long v92 = 0u;
    long long v93 = 0u;
  }
  sub_19EEC3ED8((uint64_t)&v92, (uint64_t)v88, &qword_1EB393260);
  long long v86 = 0u;
  long long v87 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v88, (uint64_t)&v86);
  char v91 = 0;
  long long v89 = v86;
  long long v90 = v87;
  long long v48 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v48 = sub_19EEC3F3C(0, v48[2] + 1, 1, v48);
  }
  unint64_t v50 = v48[2];
  unint64_t v49 = v48[3];
  if (v50 >= v49 >> 1) {
    long long v48 = sub_19EEC3F3C((void *)(v49 > 1), v50 + 1, 1, v48);
  }
  _OWORD v48[2] = v50 + 1;
  Swift::String v51 = &v48[5 * v50];
  long long v52 = v89;
  long long v53 = v90;
  *((unsigned char *)v51 + 64) = v91;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  unint64_t v94 = v48;
  sub_19EEBD664((uint64_t)&v92, &qword_1EB393260);
  v54._uint64_t countAndFlagsBits = 44;
  v54._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(void *)(v20 + 56) = v94;
  unint64_t v94 = sub_19EEC3F3C(0, 18, 0, MEMORY[0x1E4FBC860]);
  v55._uint64_t countAndFlagsBits = 0x56746C7561666564;
  v55._object = (void *)0xEF22203A65756C61;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  *((void *)&v93 + 1) = &type metadata for LocalizerDefaultValue;
  *(void *)&long long v92 = v19;
  *((void *)&v92 + 1) = v82;
  LOBYTE(v93) = v81;
  BYTE1(v93) = v80;
  sub_19EEC3ED8((uint64_t)&v92, (uint64_t)v88, &qword_1EB393260);
  long long v86 = 0u;
  long long v87 = 0u;
  sub_19EFF2334(v19, v82, v81, v80);
  sub_19EEC3E70((uint64_t)v88, (uint64_t)&v86);
  char v91 = 2;
  long long v89 = v86;
  long long v90 = v87;
  long long v56 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v56 = sub_19EEC3F3C(0, v56[2] + 1, 1, v56);
  }
  unint64_t v58 = v56[2];
  unint64_t v57 = v56[3];
  if (v58 >= v57 >> 1) {
    long long v56 = sub_19EEC3F3C((void *)(v57 > 1), v58 + 1, 1, v56);
  }
  v56[2] = v58 + 1;
  Swift::String v59 = &v56[5 * v58];
  long long v60 = v89;
  long long v61 = v90;
  *((unsigned char *)v59 + 64) = v91;
  *((_OWORD *)v59 + 2) = v60;
  *((_OWORD *)v59 + 3) = v61;
  unint64_t v94 = v56;
  sub_19EEBD664((uint64_t)&v92, &qword_1EB393260);
  v62._uint64_t countAndFlagsBits = 11298;
  v62._object = (void *)0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v62);
  *(void *)(v20 + 64) = v94;
  unint64_t v94 = sub_19EEC3F3C(0, 18, 0, MEMORY[0x1E4FBC860]);
  v63._object = (void *)0x800000019F26D020;
  v63._uint64_t countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v63);
  *((void *)&v93 + 1) = &type metadata for LocalizerLookupStrategy;
  LOBYTE(v92) = v23;
  sub_19EEC3ED8((uint64_t)&v92, (uint64_t)v88, &qword_1EB393260);
  long long v86 = 0u;
  long long v87 = 0u;
  sub_19EEC3E70((uint64_t)v88, (uint64_t)&v86);
  char v91 = 0;
  long long v89 = v86;
  long long v90 = v87;
  long long v64 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v64 = sub_19EEC3F3C(0, v64[2] + 1, 1, v64);
  }
  unint64_t v66 = v64[2];
  unint64_t v65 = v64[3];
  if (v66 >= v65 >> 1) {
    long long v64 = sub_19EEC3F3C((void *)(v65 > 1), v66 + 1, 1, v64);
  }
  v64[2] = v66 + 1;
  Swift::String v67 = &v64[5 * v66];
  long long v68 = v89;
  long long v69 = v90;
  *((unsigned char *)v67 + 64) = v91;
  *((_OWORD *)v67 + 2) = v68;
  *((_OWORD *)v67 + 3) = v69;
  unint64_t v94 = v64;
  sub_19EEBD664((uint64_t)&v92, &qword_1EB393260);
  v70._uint64_t countAndFlagsBits = 44;
  v70._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v70);
  *(void *)(v20 + 72) = v94;
  unint64_t v94 = sub_19EEC3F3C(0, 11, 0, MEMORY[0x1E4FBC860]);
  v71._uint64_t countAndFlagsBits = 0x203A746C75736572;
  v71._object = (void *)0xE900000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v71);
  *((void *)&v93 + 1) = v39;
  long long v92 = v85;
  sub_19EEC3ED8((uint64_t)&v92, (uint64_t)v88, &qword_1EB393260);
  long long v86 = 0u;
  long long v87 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v88, (uint64_t)&v86);
  char v91 = 2;
  long long v89 = v86;
  long long v90 = v87;
  int v72 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v72 = sub_19EEC3F3C(0, v72[2] + 1, 1, v72);
  }
  unint64_t v74 = v72[2];
  unint64_t v73 = v72[3];
  if (v74 >= v73 >> 1) {
    int v72 = sub_19EEC3F3C((void *)(v73 > 1), v74 + 1, 1, v72);
  }
  v72[2] = v74 + 1;
  uint64_t v75 = &v72[5 * v74];
  long long v76 = v89;
  long long v77 = v90;
  *((unsigned char *)v75 + 64) = v91;
  *((_OWORD *)v75 + 2) = v76;
  *((_OWORD *)v75 + 3) = v77;
  unint64_t v94 = v72;
  sub_19EEBD664((uint64_t)&v92, &qword_1EB393260);
  v78._uint64_t countAndFlagsBits = 34;
  v78._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v78);
  *(void *)(v20 + 80) = v94;
  Logger.debug(_:)(v20, v84, v83);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v95);
  return v85;
}

uint64_t AppleServicesLocalizer.relativeDate(_:using:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v100 = a1;
  uint64_t v4 = type metadata accessor for LocalizerFormattingKey();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v99 = (uint64_t)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_19F1DB6DC();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v7 = (char *)v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_19F1DB0FC();
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v9 = (char *)v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_19F1DB57C();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v11 = (char *)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v101 = *a2;
  sub_19F1DB56C();
  unint64_t v95 = v2;
  sub_19F1DB64C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472520);
  uint64_t v12 = sub_19F1DB6CC();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_19F255030;
  unint64_t v17 = v16 + v15;
  unsigned int v18 = *MEMORY[0x1E4F27C20];
  uint64_t v92 = v13;
  uint64_t v19 = *(void (**)(unint64_t))(v13 + 104);
  unsigned int v91 = v18;
  v19(v17);
  v90[6] = *MEMORY[0x1E4F27C30];
  v19(v17 + v14);
  v90[5] = *MEMORY[0x1E4F27BC0];
  v19(v17 + 2 * v14);
  v90[4] = *MEMORY[0x1E4F27BF0];
  v19(v17 + 3 * v14);
  v90[3] = *MEMORY[0x1E4F27C10];
  v19(v17 + 4 * v14);
  uint64_t v20 = *MEMORY[0x1E4F27C48];
  ((void (*)(unint64_t, uint64_t, uint64_t))v19)(v17 + 5 * v14, v20, v12);
  ((void (*)(unint64_t, void, uint64_t))v19)(v17 + 6 * v14, *MEMORY[0x1E4F27C50], v12);
  sub_19EFF1BC4(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v96 = v11;
  sub_19F1DB69C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v7, v94);
  uint64_t v21 = sub_19F1DB0CC();
  if ((v22 & 1) == 0)
  {
    uint64_t v23 = v21;
    if (v21 > 0)
    {
      uint64_t v24 = v92;
      uint64_t v25 = v91;
LABEL_17:
      uint64_t v35 = v99;
      ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v99, v25, v12);
      uint64_t v36 = 0;
      goto LABEL_18;
    }
  }
  uint64_t v26 = sub_19F1DB0DC();
  if ((v27 & 1) == 0)
  {
    uint64_t v23 = v26;
    if (v26 > 0)
    {
      long long v28 = (ValueMetadata **)&v114;
LABEL_16:
      uint64_t v25 = *((unsigned int *)v28 - 64);
      uint64_t v24 = v92;
      goto LABEL_17;
    }
  }
  uint64_t v29 = sub_19F1DB09C();
  if ((v30 & 1) == 0)
  {
    uint64_t v23 = v29;
    if (v29 > 0)
    {
      long long v28 = (ValueMetadata **)((char *)&v113 + 4);
      goto LABEL_16;
    }
  }
  uint64_t v31 = sub_19F1DB0AC();
  if ((v32 & 1) == 0)
  {
    uint64_t v23 = v31;
    if (v31 > 0)
    {
      long long v28 = &v113;
      goto LABEL_16;
    }
  }
  uint64_t v33 = sub_19F1DB0BC();
  if ((v34 & 1) == 0)
  {
    uint64_t v23 = v33;
    if (v33 > 0)
    {
      long long v28 = (ValueMetadata **)&v112;
      goto LABEL_16;
    }
  }
  uint64_t v87 = v20;
  uint64_t v88 = sub_19F1DB0EC();
  uint64_t v23 = 0;
  uint64_t v36 = 1;
  if (v89)
  {
    uint64_t v35 = v99;
    uint64_t v24 = v92;
  }
  else
  {
    uint64_t v35 = v99;
    uint64_t v24 = v92;
    if (v88 >= 1)
    {
      uint64_t v25 = v87;
      uint64_t v23 = v88;
      goto LABEL_17;
    }
  }
LABEL_18:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v35, v36, 1, v12);
  uint64_t v37 = v95[12];
  uint64_t v38 = v95[13];
  __swift_project_boxed_opaque_existential_1(v95 + 9, v37);
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 8))(v35, v37, v38);
  uint64_t v41 = v40;
  uint64_t v42 = v35;
  uint64_t v115 = 10794;
  uint64_t v116 = 0xE200000000000000;
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  if (v36)
  {
    uint64_t v43 = v115;
    LOBYTE(v115) = v101;
    uint64_t v44 = sub_19EEC4410(v39, v41, 0, v43, v116, &v115);
  }
  else
  {
    uint64_t v46 = v115;
    LOBYTE(v115) = v101;
    uint64_t v44 = sub_19EE8E8DC(v23, v39, v41, 0, v46, v116, (char *)&v115);
  }
  uint64_t v47 = v44;
  unint64_t v48 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB3903C0 != -1) {
    swift_once();
  }
  sub_19EEC4154((uint64_t)&unk_1E946E538, (uint64_t)&v115);
  uint64_t v49 = v117;
  uint64_t v99 = v118;
  unint64_t v95 = __swift_project_boxed_opaque_existential_1(&v115, v117);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_19F251B70;
  uint64_t v114 = sub_19EEC3F3C(0, 2, 0, MEMORY[0x1E4FBC860]);
  v51._uint64_t countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v51);
  long long v52 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
  uint64_t v113 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
  uint64_t v110 = 0xD000000000000016;
  unint64_t v111 = 0x800000019F26D160;
  sub_19EEC3ED8((uint64_t)&v110, (uint64_t)v106, &qword_1EB393260);
  long long v105 = 0u;
  long long v104 = 0u;
  sub_19EEC3E70((uint64_t)v106, (uint64_t)&v104);
  char v109 = 0;
  long long v107 = v104;
  long long v108 = v105;
  long long v53 = v114;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v53 = sub_19EEC3F3C(0, v53[2] + 1, 1, v53);
  }
  unint64_t v55 = v53[2];
  unint64_t v54 = v53[3];
  if (v55 >= v54 >> 1) {
    long long v53 = sub_19EEC3F3C((void *)(v54 > 1), v55 + 1, 1, v53);
  }
  void v53[2] = v55 + 1;
  long long v56 = &v53[5 * v55];
  long long v57 = v107;
  long long v58 = v108;
  *((unsigned char *)v56 + 64) = v109;
  *((_OWORD *)v56 + 2) = v57;
  *((_OWORD *)v56 + 3) = v58;
  uint64_t v114 = v53;
  sub_19EEBD664((uint64_t)&v110, &qword_1EB393260);
  v59._uint64_t countAndFlagsBits = 44;
  v59._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v59);
  *(void *)(v50 + 32) = v114;
  uint64_t v114 = sub_19EEC3F3C(0, 10, 0, MEMORY[0x1E4FBC860]);
  v60._uint64_t countAndFlagsBits = 0x22203A65746164;
  v60._object = (void *)0xE700000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v60);
  uint64_t v61 = v103;
  uint64_t v113 = (ValueMetadata *)v103;
  Swift::String v62 = __swift_allocate_boxed_opaque_existential_2Tm(&v110);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v102 + 16))(v62, v100, v61);
  sub_19EEC3ED8((uint64_t)&v110, (uint64_t)v106, &qword_1EB393260);
  long long v105 = 0u;
  long long v104 = 0u;
  sub_19EEC3E70((uint64_t)v106, (uint64_t)&v104);
  char v109 = 0;
  long long v107 = v104;
  long long v108 = v105;
  Swift::String v63 = v114;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v63 = sub_19EEC3F3C(0, v63[2] + 1, 1, v63);
  }
  unint64_t v65 = v63[2];
  unint64_t v64 = v63[3];
  if (v65 >= v64 >> 1) {
    Swift::String v63 = sub_19EEC3F3C((void *)(v64 > 1), v65 + 1, 1, v63);
  }
  v63[2] = v65 + 1;
  unint64_t v66 = &v63[5 * v65];
  long long v67 = v107;
  long long v68 = v108;
  *((unsigned char *)v66 + 64) = v109;
  *((_OWORD *)v66 + 2) = v67;
  *((_OWORD *)v66 + 3) = v68;
  uint64_t v114 = v63;
  sub_19EEBD664((uint64_t)&v110, &qword_1EB393260);
  v69._uint64_t countAndFlagsBits = 11298;
  v69._object = (void *)0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v69);
  *(void *)(v50 + 40) = v114;
  uint64_t v114 = sub_19EEC3F3C(0, 18, 0, MEMORY[0x1E4FBC860]);
  v70._object = (void *)0x800000019F26D020;
  v70._uint64_t countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v70);
  uint64_t v113 = &type metadata for LocalizerLookupStrategy;
  LOBYTE(v110) = v101;
  sub_19EEC3ED8((uint64_t)&v110, (uint64_t)v106, &qword_1EB393260);
  long long v105 = 0u;
  long long v104 = 0u;
  sub_19EEC3E70((uint64_t)v106, (uint64_t)&v104);
  char v109 = 0;
  long long v107 = v104;
  long long v108 = v105;
  Swift::String v71 = v114;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v71 = sub_19EEC3F3C(0, v71[2] + 1, 1, v71);
  }
  unint64_t v73 = v71[2];
  unint64_t v72 = v71[3];
  if (v73 >= v72 >> 1) {
    Swift::String v71 = sub_19EEC3F3C((void *)(v72 > 1), v73 + 1, 1, v71);
  }
  v71[2] = v73 + 1;
  unint64_t v74 = &v71[5 * v73];
  long long v75 = v107;
  long long v76 = v108;
  *((unsigned char *)v74 + 64) = v109;
  *((_OWORD *)v74 + 2) = v75;
  *((_OWORD *)v74 + 3) = v76;
  uint64_t v114 = v71;
  sub_19EEBD664((uint64_t)&v110, &qword_1EB393260);
  v77._uint64_t countAndFlagsBits = 44;
  v77._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v77);
  *(void *)(v50 + 48) = v114;
  uint64_t v114 = sub_19EEC3F3C(0, 11, 0, MEMORY[0x1E4FBC860]);
  v78._uint64_t countAndFlagsBits = 0x203A746C75736572;
  v78._object = (void *)0xE900000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v78);
  uint64_t v113 = v52;
  uint64_t v110 = v47;
  unint64_t v111 = v48;
  sub_19EEC3ED8((uint64_t)&v110, (uint64_t)v106, &qword_1EB393260);
  long long v105 = 0u;
  long long v104 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v106, (uint64_t)&v104);
  char v109 = 2;
  long long v107 = v104;
  long long v108 = v105;
  long long v79 = v114;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v79 = sub_19EEC3F3C(0, v79[2] + 1, 1, v79);
  }
  unint64_t v81 = v79[2];
  unint64_t v80 = v79[3];
  if (v81 >= v80 >> 1) {
    long long v79 = sub_19EEC3F3C((void *)(v80 > 1), v81 + 1, 1, v79);
  }
  v79[2] = v81 + 1;
  uint64_t v82 = &v79[5 * v81];
  long long v83 = v107;
  long long v84 = v108;
  *((unsigned char *)v82 + 64) = v109;
  *((_OWORD *)v82 + 2) = v83;
  *((_OWORD *)v82 + 3) = v84;
  uint64_t v114 = v79;
  sub_19EEBD664((uint64_t)&v110, &qword_1EB393260);
  v85._uint64_t countAndFlagsBits = 34;
  v85._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v85);
  *(void *)(v50 + 56) = v114;
  Logger.debug(_:)(v50, v49, v99);
  swift_bridgeObjectRelease();
  sub_19EFF2370(v42);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v98);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v96, v103);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v115);
  return v47;
}

void *AppleServicesLocalizer.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 4));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 9));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 14));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 19));
  swift_release();
  swift_unknownObjectRelease();
  sub_19EEBD664((uint64_t)(v0 + 28), &qword_1EB390398);
  sub_19EEBD664((uint64_t)(v0 + 33), (uint64_t *)&unk_1EB3903E0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 38));
  char v1 = (void *)v0[43];
  swift_release();

  uint64_t v2 = (void *)v0[46];
  swift_release();

  id v3 = (void *)v0[49];
  swift_release();

  uint64_t v4 = (void *)v0[52];
  swift_release();

  uint64_t v5 = (char *)v0 + OBJC_IVAR____TtC9JetEngine22AppleServicesLocalizer_locale;
  uint64_t v6 = sub_19F1DB66C();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t AppleServicesLocalizer.__deallocating_deinit()
{
  AppleServicesLocalizer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19EFF0E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[42] = a3;
  v4[43] = v3;
  v4[40] = a1;
  v4[41] = a2;
  return MEMORY[0x1F4188298](sub_19EFF0E78, 0, 0);
}

uint64_t sub_19EFF0E78()
{
  uint64_t v1 = v0[42];
  sub_19EEC4154(v0[41], (uint64_t)(v0 + 30));
  sub_19EEC4154(v1, (uint64_t)(v0 + 35));
  AppleServicesLocalizer.Configuration.init(dataSource:languageSource:)((uint64_t)(v0 + 30), (uint64_t)(v0 + 35), (uint64_t)(v0 + 2));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[44] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EFF0F50;
  return static AppleServicesLocalizer.load(using:)((uint64_t)(v0 + 2));
}

uint64_t sub_19EFF0F50(uint64_t a1)
{
  uint64_t v4 = *v2 + 16;
  uint64_t v5 = (void *)*v2;
  v5[45] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_19EFEBEB0(v4);
    return MEMORY[0x1F4188298](sub_19EFEC910, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)v5[40];
    sub_19EFEBEB0(v4);
    *uint64_t v6 = a1;
    uint64_t v7 = (uint64_t (*)(void))v5[1];
    return v7();
  }
}

uint64_t sub_19EFF10B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9JetEngine22AppleServicesLocalizer_locale;
  uint64_t v4 = sub_19F1DB66C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

BOOL sub_19EFF112C(uint64_t a1, uint64_t a2, JetEngine::LocalizerLookupStrategy a3)
{
  return AppleServicesLocalizer.hasString(forKey:using:)(*(Swift::String *)&a1, a3);
}

uint64_t sub_19EFF1154()
{
  if (sub_19F1DBFAC()) {
    char v0 = sub_19F1DBFBC() ^ 1;
  }
  else {
    char v0 = 1;
  }
  return v0 & 1;
}

uint64_t sub_19EFF11B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char *a5)
{
  return AppleServicesLocalizer.string(forKey:with:defaultValue:using:)(a1, a2, a3, a4, a5);
}

uint64_t sub_19EFF11D8(NSNumber a1, Swift::Int_optional a2, Swift::Int_optional a3, JetEngine::LocalizerContext a4)
{
  a2.is_nil &= 1u;
  a3.is_nil &= 1u;
  return AppleServicesLocalizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)(a1, a2, a3, a4)._countAndFlagsBits;
}

uint64_t sub_19EFF1204(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char *a6)
{
  return AppleServicesLocalizer.string(withCount:forKey:with:defaultValue:using:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19EFF122C(uint64_t a1, unsigned __int8 *a2)
{
  return AppleServicesLocalizer.relativeDate(_:using:)(a1, a2);
}

uint64_t sub_19EFF1250@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  void v10[3] = a1;
  v10[4] = &off_1EF143028;
  v10[0] = v4;
  uint64_t v5 = (objc_class *)type metadata accessor for JSLocalizerObject();
  id v6 = objc_allocWithZone(v5);
  sub_19EE959B4((uint64_t)v10, (uint64_t)v6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v9.receiver = v6;
  v9.super_class = v5;
  swift_retain();
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  a2[3] = v5;
  a2[4] = &off_1EF13FB20;
  *a2 = v7;
  return result;
}

unint64_t sub_19EFF1310()
{
  unint64_t result = sub_19EE8F204((uint64_t)&unk_1EF14C1A8);
  qword_1E9498B70 = result;
  return result;
}

uint64_t sub_19EFF1338(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_19EFCA674();
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  unint64_t v15 = (void *)*a5;
  unint64_t v17 = sub_19EEBD400(v7, v8);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v21 = v16;
  if (v15[3] >= v20)
  {
    if (a4)
    {
      uint64_t v24 = (void *)*a5;
      if (v16) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_19EFBF548();
      uint64_t v24 = (void *)*a5;
      if (v21) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v26 = (uint64_t *)(v24[6] + 16 * v17);
    *uint64_t v26 = v11;
    v26[1] = v12;
    char v27 = (void *)(v24[7] + 16 * v17);
    void *v27 = v13;
    v27[1] = v14;
    uint64_t v28 = v24[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    _OWORD v24[2] = v30;
LABEL_13:
    uint64_t v31 = sub_19EFCA674();
    if (v32)
    {
      uint64_t v35 = v31;
      uint64_t v36 = v32;
      uint64_t v37 = v33;
      uint64_t v38 = v34;
      do
      {
        uint64_t v43 = (void *)*a5;
        unint64_t v45 = sub_19EEBD400(v35, v36);
        uint64_t v46 = v43[2];
        BOOL v47 = (v44 & 1) == 0;
        uint64_t v48 = v46 + v47;
        if (__OFADD__(v46, v47)) {
          goto LABEL_25;
        }
        char v49 = v44;
        if (v43[3] < v48)
        {
          sub_19EE8EEDC(v48, 1);
          unint64_t v50 = sub_19EEBD400(v35, v36);
          if ((v49 & 1) != (v51 & 1)) {
            goto LABEL_27;
          }
          unint64_t v45 = v50;
        }
        long long v52 = (void *)*a5;
        if (v49)
        {
          swift_bridgeObjectRelease();
          uint64_t v39 = (void *)(v52[7] + 16 * v45);
          swift_bridgeObjectRelease();
          *uint64_t v39 = v37;
          v39[1] = v38;
        }
        else
        {
          v52[(v45 >> 6) + 8] |= 1 << v45;
          long long v53 = (uint64_t *)(v52[6] + 16 * v45);
          *long long v53 = v35;
          v53[1] = v36;
          unint64_t v54 = (void *)(v52[7] + 16 * v45);
          *unint64_t v54 = v37;
          v54[1] = v38;
          uint64_t v55 = v52[2];
          BOOL v29 = __OFADD__(v55, 1);
          uint64_t v56 = v55 + 1;
          if (v29) {
            goto LABEL_26;
          }
          v52[2] = v56;
        }
        uint64_t v35 = sub_19EFCA674();
        uint64_t v36 = v40;
        uint64_t v37 = v41;
        uint64_t v38 = v42;
      }
      while (v40);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    return swift_release();
  }
  sub_19EE8EEDC(v20, a4 & 1);
  unint64_t v22 = sub_19EEBD400(v11, v12);
  if ((v21 & 1) == (v23 & 1))
  {
    unint64_t v17 = v22;
    uint64_t v24 = (void *)*a5;
    if ((v21 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v25 = (void *)(v24[7] + 16 * v17);
    swift_bridgeObjectRelease();
    *uint64_t v25 = v13;
    v25[1] = v14;
    goto LABEL_13;
  }
LABEL_27:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF1644@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *sub_19EFF168C@<X0>(void *(*a1)(void *__return_ptr)@<X1>, void *a2@<X8>)
{
  uint64_t result = a1(v6);
  if (!v2)
  {
    uint64_t v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t _s9JetEngine22AppleServicesLocalizerC8fileSize8forBytesSSSd_tF_0(double a1)
{
  uint64_t v4 = self;
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a1 < 9.22337204e18)
  {
    id v5 = objc_msgSend(v4, sel_stringFromByteCount_countStyle_, (uint64_t)a1, 0);
    uint64_t v1 = sub_19F1DBD7C();
    unint64_t v2 = v6;

    if (qword_1EB3903C0 == -1) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  swift_once();
LABEL_5:
  sub_19EEC4154((uint64_t)&unk_1E946E538, (uint64_t)v46);
  uint64_t v7 = v47;
  uint64_t v8 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19F24DBC0;
  unint64_t v45 = sub_19EEC3F3C(0, 2, 0, MEMORY[0x1E4FBC860]);
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v10);
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  uint64_t v44 = MEMORY[0x1E4FBB1A0];
  double v42 = -2.31584178e77;
  unint64_t v43 = 0x800000019F26D2E0;
  sub_19EEC3ED8((uint64_t)&v42, (uint64_t)v38, &qword_1EB393260);
  long long v36 = 0u;
  long long v37 = 0u;
  sub_19EEC3E70((uint64_t)v38, (uint64_t)&v36);
  char v41 = 0;
  long long v39 = v36;
  long long v40 = v37;
  uint64_t v12 = v45;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v12 = sub_19EEC3F3C(0, v12[2] + 1, 1, v12);
  }
  unint64_t v14 = v12[2];
  unint64_t v13 = v12[3];
  if (v14 >= v13 >> 1) {
    uint64_t v12 = sub_19EEC3F3C((void *)(v13 > 1), v14 + 1, 1, v12);
  }
  void v12[2] = v14 + 1;
  unint64_t v15 = &v12[5 * v14];
  long long v16 = v39;
  long long v17 = v40;
  *((unsigned char *)v15 + 64) = v41;
  *((_OWORD *)v15 + 2) = v16;
  *((_OWORD *)v15 + 3) = v17;
  unint64_t v45 = v12;
  sub_19EEBD664((uint64_t)&v42, &qword_1EB393260);
  v18._uint64_t countAndFlagsBits = 44;
  v18._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  *(void *)(v9 + 32) = v45;
  unint64_t v45 = sub_19EEC3F3C(0, 9, 0, MEMORY[0x1E4FBC860]);
  v19._uint64_t countAndFlagsBits = 0x203A7365747962;
  v19._object = (void *)0xE700000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  uint64_t v44 = MEMORY[0x1E4FBB3D0];
  double v42 = a1;
  sub_19EEC3ED8((uint64_t)&v42, (uint64_t)v38, &qword_1EB393260);
  long long v36 = 0u;
  long long v37 = 0u;
  sub_19EEC3E70((uint64_t)v38, (uint64_t)&v36);
  char v41 = 0;
  long long v39 = v36;
  long long v40 = v37;
  uint64_t v20 = v45;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v20 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
  }
  unint64_t v22 = v20[2];
  unint64_t v21 = v20[3];
  if (v22 >= v21 >> 1) {
    uint64_t v20 = sub_19EEC3F3C((void *)(v21 > 1), v22 + 1, 1, v20);
  }
  _OWORD v20[2] = v22 + 1;
  char v23 = &v20[5 * v22];
  long long v24 = v39;
  long long v25 = v40;
  *((unsigned char *)v23 + 64) = v41;
  *((_OWORD *)v23 + 2) = v24;
  *((_OWORD *)v23 + 3) = v25;
  unint64_t v45 = v20;
  sub_19EEBD664((uint64_t)&v42, &qword_1EB393260);
  v26._uint64_t countAndFlagsBits = 44;
  v26._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  *(void *)(v9 + 40) = v45;
  unint64_t v45 = sub_19EEC3F3C(0, 11, 0, MEMORY[0x1E4FBC860]);
  v27._uint64_t countAndFlagsBits = 0x203A746C75736572;
  v27._object = (void *)0xE900000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  uint64_t v44 = v11;
  double v42 = *(double *)&v1;
  unint64_t v43 = v2;
  sub_19EEC3ED8((uint64_t)&v42, (uint64_t)v38, &qword_1EB393260);
  long long v36 = 0u;
  long long v37 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v38, (uint64_t)&v36);
  char v41 = 2;
  long long v39 = v36;
  long long v40 = v37;
  uint64_t v28 = v45;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v28 = sub_19EEC3F3C(0, v28[2] + 1, 1, v28);
  }
  unint64_t v30 = v28[2];
  unint64_t v29 = v28[3];
  if (v30 >= v29 >> 1) {
    uint64_t v28 = sub_19EEC3F3C((void *)(v29 > 1), v30 + 1, 1, v28);
  }
  void v28[2] = v30 + 1;
  uint64_t v31 = &v28[5 * v30];
  long long v32 = v39;
  long long v33 = v40;
  *((unsigned char *)v31 + 64) = v41;
  *((_OWORD *)v31 + 2) = v32;
  *((_OWORD *)v31 + 3) = v33;
  unint64_t v45 = v28;
  sub_19EEBD664((uint64_t)&v42, &qword_1EB393260);
  v34._uint64_t countAndFlagsBits = 34;
  v34._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  *(void *)(v9 + 48) = v45;
  Logger.debug(_:)(v9, v7, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
  return v1;
}

uint64_t sub_19EFF1BC4(uint64_t a1)
{
  uint64_t v2 = sub_19F1DB6CC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94725B0);
    uint64_t v9 = sub_19F1DCCCC();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_19EFF29A4(&qword_1E94725B8);
      uint64_t v16 = sub_19F1DBC8C();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_19EFF29A4(&qword_1E94725C0);
          char v23 = sub_19F1DBD3C();
          long long v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        long long v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_19EFF1EB4(uint64_t a1)
{
  return sub_19EEB52B0(a1, (uint64_t *)&unk_1EB390890);
}

uint64_t sub_19EFF1EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[81] = a4;
  v4[80] = a3;
  v4[79] = a2;
  v4[78] = a1;
  return MEMORY[0x1F4188298](sub_19EE31D30, 0, 0);
}

uint64_t sub_19EFF1EEC()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19EFF1F3C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_19EFF1F7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_19EEB8A6C;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E94724F0 + dword_1E94724F0);
  return v6(a1, v4, v1 + 24, v1 + 64);
}

uint64_t sub_19EFF204C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EE17780;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E9475718
                                                                                   + dword_1E9475718);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19EFF2128()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  return MEMORY[0x1F4186498](v0, 144, 7);
}

uint64_t sub_19EFF2170(uint64_t a1)
{
  uint64_t v4 = v1 + 16;
  uint64_t v5 = v1 + 56;
  uint64_t v6 = v1 + 96;
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_19EE17780;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472508 + dword_1E9472508);
  return v9(a1, v4, v5, v6, v7);
}

uint64_t sub_19EFF2248(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EEB8A6C;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E9475718
                                                                                   + dword_1E9475718);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19EFF2324(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19EFF2334(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19EFF2344()
{
  return sub_19EE85050((uint64_t (*)(void, void, void, void, void, void, void, void))sub_19EFEECA4);
}

uint64_t sub_19EFF2370(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocalizerFormattingKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19EFF23CC()
{
  return type metadata accessor for AppleServicesLocalizer();
}

uint64_t method lookup function for AppleServicesLocalizer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppleServicesLocalizer);
}

uint64_t assignWithCopy for AppleServicesLocalizer.Configuration(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
  uint64_t v4 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 168) = v4;
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v5 = *(void *)(a2 + 208);
  if (!*(void *)(a1 + 208))
  {
    if (v5)
    {
      *(void *)(a1 + 208) = v5;
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 184, a2 + 184);
      return a1;
    }
LABEL_7:
    long long v6 = *(_OWORD *)(a2 + 184);
    long long v7 = *(_OWORD *)(a2 + 200);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(_OWORD *)(a1 + 184) = v6;
    *(_OWORD *)(a1 + 200) = v7;
    return a1;
  }
  if (!v5)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 184);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 184), (uint64_t *)(a2 + 184));
  return a1;
}

__n128 __swift_memcpy224_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

uint64_t assignWithTake for AppleServicesLocalizer.Configuration(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v6 = *(void *)(a2 + 160);
  uint64_t v7 = *(void *)(a2 + 168);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v6;
  swift_unknownObjectRelease();
  *(void *)(a1 + 168) = v7;
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  if (*(void *)(a1 + 208)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 184);
  }
  long long v8 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v8;
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleServicesLocalizer.Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 224)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleServicesLocalizer.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 224) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 224) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_19EFF26C4(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 2);
  long long v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + 16) = v3;
  id v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t sub_19EFF2708(id *a1)
{
  return swift_release();
}

uint64_t sub_19EFF2744(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19EFF27A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for FormatterCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EFF2800(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1E946F398);
    uint64_t v3 = sub_19F1DCCCC();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      id v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_19F1DD72C();
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      uint64_t result = sub_19F1DD78C();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_19F1DD44C(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          unint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_19F1DD44C();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_19EFF29A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_19F1DB6CC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t IntentOutcome.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v5, v7);
    uint64_t v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
}

uint64_t static IntentOutcome<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a4;
  uint64_t v30 = a2;
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v27 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IntentOutcome();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v31 = (char *)&v26 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = *(void *)(TupleTypeMetadata2 - 8);
  double v13 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v15 = (char *)&v26 - v14;
  BOOL v17 = (char *)&v26 + *(int *)(v16 + 48) - v14;
  uint64_t v29 = v9;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16);
  v18((char *)&v26 - v14, a1, v8, v13);
  ((void (*)(char *, uint64_t, uint64_t))v18)(v17, v30, v8);
  uint64_t v30 = v6;
  unint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v19(v15, 1, a3) == 1)
  {
    char v20 = 1;
    if (v19(v17, 1, a3) == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v18)(v31, v15, v8);
    if (v19(v17, 1, a3) != 1)
    {
      uint64_t v21 = v30;
      uint64_t v22 = v27;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v17, a3);
      BOOL v23 = v31;
      char v20 = sub_19F1DBD3C();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v21 + 8);
      v24(v22, a3);
      v24(v23, a3);
LABEL_8:
      uint64_t v12 = v29;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, a3);
  }
  char v20 = 0;
  uint64_t v8 = TupleTypeMetadata2;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v8);
  return v20 & 1;
}

uint64_t type metadata accessor for IntentOutcome()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EFF2EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static IntentOutcome<A>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t sub_19EFF2EB4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_19EFF2F30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_19EFF306C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_19EFF3130(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_19EFF3228(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    double v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_19EFF3394(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_19EFF348C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    double v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_19EFF35F8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_19EFF3798(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x19EFF39D4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          BOOL v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_19EFF39FC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 1);
}

uint64_t sub_19EFF3A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 1);
}

uint64_t PreferenceKey.lookupName.getter()
{
  uint64_t v0 = sub_19EEBCFB4();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t PreferenceKey.lookupName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PreferenceKey.lookupName.modify())()
{
  return nullsub_1;
}

uint64_t static PreferenceKey.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_19F1DD44C();
  }
}

uint64_t dispatch thunk of AnyPreferenceKey.lookupName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MappedPreferenceKey.encode(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MappedPreferenceKey.decode(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_19EFF3B5C()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFF3BB8()
{
  return sub_19F1DD73C();
}

uint64_t sub_19EFF3BF4()
{
  return sub_19F1DD78C();
}

BOOL sub_19EFF3C4C(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_19EFF3C64()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_19EFF3C7C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EEA1364(0, v1, 0);
    uint64_t v2 = 0;
    do
    {
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      unint64_t v4 = *(void *)(v7 + 16);
      unint64_t v3 = *(void *)(v7 + 24);
      if (v4 >= v3 >> 1) {
        sub_19EEA1364(v3 > 1, v4 + 1, 1);
      }
      ++v2;
      *(void *)(v7 + 16) = v4 + 1;
      uint64_t v5 = v7 + 16 * v4;
      *(void *)(v5 + 32) = 60;
      *(void *)(v5 + 40) = 0xE100000000000000;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
  sub_19EE868D4();
  sub_19F1DBCCC();
  swift_bridgeObjectRelease();
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

unint64_t sub_19EFF3E28()
{
  return sub_19EFF3C7C(*v0);
}

ValueMetadata *type metadata accessor for DependencyCycleError()
{
  return &type metadata for DependencyCycleError;
}

unint64_t sub_19EFF3E48()
{
  unint64_t result = qword_1E94725D0[0];
  if (!qword_1E94725D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E94725D0);
  }
  return result;
}

JetEngine::PreferenceMigrator __swiftcall PreferenceMigrator.init()()
{
  *uint64_t v0 = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t PreferenceMigrator.renaming<A>(_:to:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  unsigned int v8 = *v3;
  *(void *)&long long v14 = *a1;
  *((void *)&v14 + 1) = v5;
  v17[0] = v6;
  v17[1] = v7;
  sub_19F15D874(&v14, v17, &v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = (uint64_t)v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unsigned int v8 = sub_19F09E384(0, v8[2] + 1, 1, v8);
    *a3 = (uint64_t)v8;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    unsigned int v8 = sub_19F09E384((void *)(v10 > 1), v11 + 1, 1, v8);
    *a3 = (uint64_t)v8;
  }
  long long v14 = v18;
  uint64_t v15 = v19;
  uint64_t v16 = v20;
  uint64_t v12 = type metadata accessor for RenamePreferenceMigrationRule();
  uint64_t result = sub_19EE6F6B0(v11, (uint64_t)&v14, a3, v12, (uint64_t)&off_1EF148128);
  *a3 = (uint64_t)v8;
  return result;
}

uint64_t PreferenceMigrator.mapping<A, B>(_:to:with:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7 = a1[1];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  unint64_t v10 = *v5;
  *(void *)&long long v16 = *a1;
  *((void *)&v16 + 1) = v7;
  v20[0] = v8;
  v20[1] = v9;
  sub_19EF79D70(&v16, v20, a3, a4, &v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a5 = (uint64_t)v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v10 = sub_19F09E384(0, v10[2] + 1, 1, v10);
    *a5 = (uint64_t)v10;
  }
  unint64_t v13 = v10[2];
  unint64_t v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    unint64_t v10 = sub_19F09E384((void *)(v12 > 1), v13 + 1, 1, v10);
    *a5 = (uint64_t)v10;
  }
  long long v16 = v21;
  uint64_t v17 = v22;
  long long v18 = v23;
  uint64_t v19 = v24;
  uint64_t v14 = type metadata accessor for MapPreferenceMigrationRule();
  uint64_t result = sub_19EE6F6B0(v13, (uint64_t)&v16, a5, v14, (uint64_t)&off_1EF146298);
  *a5 = (uint64_t)v10;
  return result;
}

uint64_t PreferenceMigrator.removing(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v4 = *v2;
  sub_19EEC4154(a1, (uint64_t)v11);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v4 = sub_19F09E384(0, v4[2] + 1, 1, v4);
  }
  unint64_t v6 = v4[2];
  unint64_t v5 = v4[3];
  if (v6 >= v5 >> 1) {
    unint64_t v4 = sub_19F09E384((void *)(v5 > 1), v6 + 1, 1, v4);
  }
  uint64_t v9 = &type metadata for RemovePreferenceMigrationRule;
  unint64_t v10 = &off_1EF148040;
  *(void *)&long long v8 = swift_allocObject();
  sub_19EFF4748((uint64_t)v11, v8 + 16);
  id v4[2] = v6 + 1;
  sub_19EEBB420(&v8, (uint64_t)&v4[5 * v6 + 4]);
  *a2 = v4;
  return sub_19EFF47A4((uint64_t)v11);
}

uint64_t PreferenceMigrator.setting<A>(_:forKey:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SetPreferenceMigrationRule();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (void ***)((char *)&v25 - v16);
  uint64_t v18 = *a2;
  uint64_t v19 = a2[1];
  uint64_t v20 = *v25;
  v27[0] = v18;
  v27[1] = v19;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v9, v26, a3, v15);
  sub_19EF7BBFC(v27, (uint64_t)v9, a3, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = (uint64_t)v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v20 = sub_19F09E384(0, v20[2] + 1, 1, v20);
    *a4 = (uint64_t)v20;
  }
  unint64_t v23 = v20[2];
  unint64_t v22 = v20[3];
  if (v23 >= v22 >> 1)
  {
    uint64_t v20 = sub_19F09E384((void *)(v22 > 1), v23 + 1, 1, v20);
    *a4 = (uint64_t)v20;
  }
  (*(void (**)(char *, void *, uint64_t))(v11 + 16))(v13, v17, v10);
  sub_19EE6F6B0(v23, (uint64_t)v13, a4, v10, (uint64_t)&off_1EF146850);
  *a4 = (uint64_t)v20;
  return (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v17, v10);
}

uint64_t PreferenceMigrator.run(from:to:toleratingErrors:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v28 = a4;
  uint64_t v7 = v6;
  uint64_t v9 = result;
  uint64_t v10 = *v5;
  uint64_t v11 = *(void *)(*v5 + 16);
  if (a5)
  {
    if (v11)
    {
      uint64_t v12 = v10 + 32;
      swift_bridgeObjectRetain();
      unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        sub_19EEC4154(v12, (uint64_t)v25);
        uint64_t v14 = v26;
        uint64_t v15 = v27;
        __swift_project_boxed_opaque_existential_1(v25, v26);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(v9, a2, a3, v28, v14, v15);
        if (v7)
        {
          id v16 = v7;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v13 = sub_19F09E398(0, v13[2] + 1, 1, v13);
          }
          unint64_t v18 = v13[2];
          unint64_t v17 = v13[3];
          if (v18 >= v17 >> 1) {
            unint64_t v13 = sub_19F09E398((void *)(v17 > 1), v18 + 1, 1, v13);
          }
          _OWORD v13[2] = v18 + 1;
          v13[v18 + 4] = v7;

          uint64_t v7 = 0;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
        v12 += 40;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      if (v13[2]) {
        goto LABEL_17;
      }
    }
    else
    {
      unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      if (*(void *)(MEMORY[0x1E4FBC860] + 16))
      {
LABEL_17:
        sub_19EFA6878();
        swift_allocError();
        unint64_t v23 = v22;
        if (!v13[2]) {
          sub_19F199C68((unint64_t)"JetEngine/CompoundError.swift", 0x1DuLL, 2, 0x15uLL);
        }
        *unint64_t v23 = v13;
        return swift_willThrow();
      }
    }
    return swift_bridgeObjectRelease();
  }
  if (v11)
  {
    uint64_t v19 = v10 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_19EEC4154(v19, (uint64_t)v25);
      uint64_t v20 = v26;
      uint64_t v21 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8))(v9, a2, a3, v28, v20, v21);
      if (v6) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      v19 += 40;
      if (!--v11) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  }
  return result;
}

uint64_t PreferenceMigrator.run(on:toleratingErrors:)(uint64_t a1, uint64_t a2, char a3)
{
  return PreferenceMigrator.run(from:to:toleratingErrors:)(a1, a2, a1, a2, a3);
}

uint64_t sub_19EFF4710()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19EFF4748(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19EFF47A4(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for PreferenceMigrator()
{
  return &type metadata for PreferenceMigrator;
}

uint64_t sub_19EFF4808(uint64_t a1)
{
  return a1;
}

uint64_t static StaticIntent.kind.getter()
{
  return 0x63697461747324;
}

uint64_t StaticIntent.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

BOOL sub_19EFF4884()
{
  uint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_19EFF48CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_19EFF4940(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_19EFF49AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_19EFF4A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

BOOL sub_19EFF4A8C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_19EFF4884();
  *a1 = result;
  return result;
}

void sub_19EFF4AC8(void *a1@<X8>)
{
  *a1 = 0x6174616424;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_19EFF4AE0()
{
  return 0x6174616424;
}

BOOL sub_19EFF4AF4@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_19EFF4884();
  *a1 = result;
  return result;
}

uint64_t sub_19EFF4B24@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EF4F19C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_19EFF4B54(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_19EFF4BA8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t static StaticIntent._unwrapData<A>(of:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v33 = a5;
  uint64_t v34 = a2;
  uint64_t v31 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_19F1DCAAC();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v32 = (uint64_t)&v29 - v9;
  uint64_t v10 = type metadata accessor for StaticIntent();
  uint64_t v11 = sub_19F1DCAAC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = *(void *)(v10 - 8);
  double v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v29 - v18;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, double))(a4 + 40))(v36, v34, a4, v17);
  uint64_t v35 = a1;
  swift_getExtendedExistentialTypeMetadata();
  int v20 = swift_dynamicCast();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v20)
  {
    uint64_t v23 = v29;
    uint64_t v22 = v30;
    v21(v14, 0, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v14, v10);
    uint64_t v24 = v32;
    static Continuous._unwrapOnlyElement<A>(of:)((uint64_t)v19, AssociatedTypeWitness, a1, v32);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v10);
    uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
    int v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v24, 1, AssociatedTypeWitness);
    uint64_t v27 = v33;
    if (v26 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v27, 1, 1, AssociatedTypeWitness);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v33, v24, AssociatedTypeWitness);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, AssociatedTypeWitness);
    }
  }
  else
  {
    v21(v14, 1, 1, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v33, 1, 1, AssociatedTypeWitness);
  }
}

void sub_19EFF4FEC(void *a1@<X8>)
{
  *a1 = 0x63697461747324;
  a1[1] = 0xE700000000000000;
}

uint64_t StaticIntent<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v42 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v43 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v45 = (char *)&v38 - v9;
  type metadata accessor for StaticIntent.CodingKeys();
  swift_getWitnessTable();
  uint64_t v10 = sub_19F1DD1EC();
  uint64_t v44 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v50 = (char *)&v38 - v11;
  uint64_t v12 = type metadata accessor for Result();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v38 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v38 - v20;
  uint64_t v39 = type metadata accessor for StaticIntent();
  uint64_t v38 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  char v41 = (char *)&v38 - v22;
  uint64_t v46 = a3;
  uint64_t v47 = a2;
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  unint64_t v54 = a1;
  Result.init(trying:)((void (*)(double))sub_19EFF5690, (uint64_t)v21);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v48 = v21;
  v23(v18, v21, v12);
  uint64_t v56 = v18;
  uint64_t v24 = v49;
  uint64_t v51 = v12;
  if (swift_getEnumCaseMultiPayload() == 1) {
    goto LABEL_6;
  }
  uint64_t v25 = v45;
  v23(v15, v56, v51);
  uint64_t v26 = v44;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v50, v15, v10);
  if ((sub_19F1DD1DC() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v50, v10);
LABEL_6:
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD88C();
    if (v24) {
      goto LABEL_7;
    }
    __swift_project_boxed_opaque_existential_1(v55, v55[3]);
    uint64_t v31 = v43;
    uint64_t v32 = v47;
    sub_19F1DD49C();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v35 = v51;
    v34(v48, v51);
    uint64_t v36 = v41;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v31, v32);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v55);
LABEL_11:
    v34(v56, v35);
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v40, v36, v39);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v27 = v25;
  uint64_t v28 = v47;
  sub_19F1DD1BC();
  if (!v24)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v50, v10);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v13 + 8);
    long long v37 = v27;
    uint64_t v35 = v51;
    v34(v48, v51);
    uint64_t v36 = v41;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v37, v28);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v26 + 8))(v50, v10);
LABEL_7:
  uint64_t v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v30 = v51;
  v29(v48, v51);
  v29(v56, v30);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t type metadata accessor for StaticIntent.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EFF55F8(void *a1)
{
  return sub_19F1DD8AC();
}

uint64_t sub_19EFF5690()
{
  return sub_19EFF55F8(*(void **)(v0 + 32));
}

uint64_t sub_19EFF56B0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return StaticIntent<>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t StaticIntent<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  v9[1] = a3;
  type metadata accessor for StaticIntent.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_19F1DD2BC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8FC();
  sub_19F1DD2AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19EFF5838(void *a1, uint64_t a2, uint64_t a3)
{
  return StaticIntent<>.encode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t StaticIntent<>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v7 = a2;
  uint64_t v8 = a1;
  uint64_t v10 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v32 = *v16;
  sub_19EEBF040(v17, (uint64_t)v33);
  uint64_t v18 = v34;
  if (v34)
  {
    uint64_t v30 = v15;
    uint64_t v31 = v12;
    uint64_t v19 = v8;
    uint64_t v20 = v7;
    uint64_t v21 = a3;
    uint64_t v22 = v10;
    uint64_t v23 = a4;
    uint64_t v24 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    uint64_t v25 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v24 + 16);
    uint64_t v26 = v24;
    a4 = v23;
    uint64_t v10 = v22;
    a3 = v21;
    uint64_t v7 = v20;
    uint64_t v8 = v19;
    uint64_t v5 = v4;
    uint64_t v12 = v31;
    char v27 = v25(0x6174616424, 0xE500000000000000, v18, v26);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
    if (v27)
    {
      JSONObject.subscript.getter(0x6174616424, 0xE500000000000000, (uint64_t)v33);
      uint64_t v36 = v32;
      uint64_t v28 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(a3 + 8);
      uint64_t v12 = v30;
      goto LABEL_6;
    }
  }
  else
  {
    sub_19EEBF108((uint64_t)v33);
  }
  sub_19EEC355C(v8, (uint64_t)v33);
  uint64_t v36 = v32;
  uint64_t v28 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(a3 + 8);
LABEL_6:
  v28(v33, &v36, v7, a3);
  uint64_t result = sub_19EEC3418(v8);
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a4, v12, v7);
  }
  return result;
}

uint64_t sub_19EFF5A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return StaticIntent<>.init(deserializing:using:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t StaticIntent<>.jsRepresentation(in:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_19F1DD30C();
  swift_allocObject();
  sub_19F1DC18C();
  uint64_t v8 = (char *)v7 + *(int *)(TupleTypeMetadata2 + 48);
  *uint64_t v7 = 0x6174616424;
  v7[1] = 0xE500000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v8, v3, v5);
  sub_19F1DC27C();
  uint64_t v9 = sub_19F1DBBAC();
  a2[3] = sub_19F1DBC0C();
  uint64_t result = swift_getWitnessTable();
  a2[4] = result;
  *a2 = v9;
  return result;
}

id StaticIntent<>.makeValue(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result = objc_msgSend(self, sel_valueWithNewObjectInContext_, a1);
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, void, uint64_t))(a3 + 24))(a1, *(void *)(a2 + 16), a3);
    uint64_t v9 = (void *)sub_19F1DBD4C();
    objc_msgSend(v7, sel_setValue_forProperty_, v8, v9);

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19EFF5D20@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return StaticIntent<>.jsRepresentation(in:)(a1, a2);
}

id sub_19EFF5D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return StaticIntent<>.makeValue(in:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t sub_19EFF5D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 16);
}

uint64_t sub_19EFF5D4C(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

unsigned char *sub_19EFF5DF8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19EFF5E94);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19EFF5EBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EFF5ED8()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EFF5EF4()
{
  return swift_getWitnessTable();
}

uint64_t JetPackPath.string.getter()
{
  if (!*(void *)(*(void *)v0 + 16)) {
    return 46;
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
  sub_19EE868D4();
  uint64_t v1 = sub_19F1DBCCC();
  swift_bridgeObjectRelease();
  return v1;
}

JetEngine::JetPackPath __swiftcall JetPackPath.init(components:)(JetEngine::JetPackPath components)
{
  v1->components._rawValue = components.components._rawValue;
  return components;
}

uint64_t JetPackPath.components.getter()
{
  return swift_bridgeObjectRetain();
}

JetEngine::JetPackPath __swiftcall JetPackPath.appending(_:)(JetEngine::JetPackPath a1)
{
  int v3 = v1;
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  result.components._rawValue = (void *)sub_19EF5D6DC(v4);
  *int v3 = v6;
  return result;
}

uint64_t JetPackPath.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t result = sub_19F1DD73C();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static JetPackPath.== infix(_:_:)(void **a1, void **a2)
{
  return sub_19EF636C0(*a1, *a2);
}

uint64_t JetPackPath.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_19F1DD72C();
  sub_19F1DD73C();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  return sub_19F1DD78C();
}

uint64_t sub_19EFF6154()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t result = sub_19F1DD73C();
  if (v2)
  {
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      uint64_t result = swift_bridgeObjectRelease();
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_19EFF61D0()
{
  uint64_t v1 = *v0;
  sub_19F1DD72C();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_19F1DD73C();
  if (v2)
  {
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  return sub_19F1DD78C();
}

uint64_t sub_19EFF6258(void **a1, void **a2)
{
  return sub_19EF636C0(*a1, *a2);
}

uint64_t sub_19EFF6264(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_19F1DC00C();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v14 = sub_19EEA1060(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      uint64_t v14 = sub_19EEA1060((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    long long v14[2] = v17 + 1;
    uint64_t v18 = &v14[4 * v17];
    _OWORD v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_19F1DCFBC();
  __break(1u);
  return result;
}

uint64_t sub_19EFF63C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF65FC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_19EFF63E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF6F14(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1EB3907E0, (uint64_t *)&unk_1EB392CD0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_19EFF6410(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF6768(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_19EFF6430(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF68F4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_19EFF6450(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF6A80(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_19EFF6470(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF6C28(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_19EFF6490(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF6DB4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_19EFF64B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF6F14(a1, a2, a3, (void *)*v3, &qword_1E9472668, &qword_1EB3931D8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_19EFF64E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF70A4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_19EFF6500(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF7250(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_19EFF6520(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF7498(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_19EFF6540(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF7620(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_19EFF6560(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF77AC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_19EFF6580(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF7954(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_19EFF65A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EFF7ABC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_19EFF65C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19EE57EE4(a1, a2, a3, (void *)*v3, &qword_1E9473DA0, MEMORY[0x1E4F26EA0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_19EFF65FC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D4C0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF6768(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB90);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[72 * v8] || v12 >= &v13[72 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF68F4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F4F0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    uint64_t v10[2] = v8;
    void v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1E946F430);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF6A80(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CD88);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946CD38);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF6C28(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472658);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    uint64_t v10[2] = v8;
    void v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472660);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF6DB4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471CD8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF6F14(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    _OWORD v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF70A4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D688);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 72 * v8) {
      memmove(v10 + 4, a4 + 4, 72 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 72 * v8 || v12 >= v13 + 72 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D640);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF7250(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D660);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5D0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5D0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF7498(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391C10);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF7620(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3907B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 400);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[400 * v8]) {
      memmove(v12, v13, 400 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[400 * v8] || v12 >= &v13[400 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF77AC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CE0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF7954(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAF0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = v8 << 6;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF7ABC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DDE0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DD68);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFF7C60(char a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE57EE4(a1, a2, a3, a4, &qword_1E9472670, MEMORY[0x1E4F27928]);
}

uint64_t sub_19EFF7C80()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19EFF7CB8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t static PipelinePhase<>.fetchJetpack(artifactStoreURL:urlSession:urlEncoder:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_19F1DB34C();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946FC70);
  swift_allocObject();
  id v13 = a2;
  id v14 = a3;
  uint64_t v15 = sub_19EE992B8();
  type metadata accessor for RemoteJetpackFetcher();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v14;
  *(void *)(v16 + 32) = 0;
  *(void *)(v16 + 40) = 0;
  *(void *)(v16 + 48) = 4;
  *(unsigned char *)(v16 + 56) = 1;
  *(void *)(v16 + 64) = v15;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16 + OBJC_IVAR____TtC9JetEngine20RemoteJetpackFetcher_artifactStoreURL, v12, v8);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_19EFF86B4;
  *(void *)(result + 24) = v16;
  *a4 = sub_19EFF8954;
  a4[1] = result;
  return result;
}

void *sub_19EFF7E74(uint64_t a1)
{
  return sub_19EFF7E98(a1);
}

void *sub_19EFF7E98(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v43 = sub_19F1DB5AC();
  uint64_t v4 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  unint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v46 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (char *)&v41 - v11;
  if (qword_1EB392AA8 != -1) {
    swift_once();
  }
  unint64_t v12 = (void *)qword_1EB392860;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
  id v14 = v12;
  uint64_t v53 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
  v15._object = (void *)0x800000019F26D830;
  v15._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  v52[3] = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v52);
  uint64_t v42 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16);
  v42(boxed_opaque_existential_2Tm, a1, v7);
  sub_19EEBCD00((uint64_t)v52, (uint64_t)v51);
  long long v49 = 0u;
  long long v50 = 0u;
  sub_19EEC3E70((uint64_t)v51, (uint64_t)&v49);
  LOBYTE(v56) = 0;
  long long v54 = v49;
  long long v55 = v50;
  unint64_t v17 = v53;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v48 = v7;
  uint64_t v44 = a1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
  }
  unint64_t v20 = v17[2];
  unint64_t v19 = v17[3];
  if (v20 >= v19 >> 1) {
    unint64_t v17 = sub_19EEC3F3C((void *)(v19 > 1), v20 + 1, 1, v17);
  }
  uint64_t v17[2] = v20 + 1;
  uint64_t v21 = &v17[5 * v20];
  long long v22 = v54;
  long long v23 = v55;
  *((unsigned char *)v21 + 64) = v56;
  *((_OWORD *)v21 + 2) = v22;
  *((_OWORD *)v21 + 3) = v23;
  uint64_t v53 = v17;
  sub_19EEBD664((uint64_t)v52, &qword_1EB393260);
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  *(void *)(v13 + 32) = v53;
  *(void *)&long long v54 = v14;
  LOBYTE(v49) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v49);

  swift_bridgeObjectRelease();
  sub_19F1DB59C();
  sub_19F1DB58C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v43);
  uint64_t v25 = v47;
  sub_19F1DB26C();
  swift_bridgeObjectRelease();
  long long v26 = *(_OWORD *)(v2 + 48);
  long long v27 = *(_OWORD *)(v2 + 16);
  long long v55 = *(_OWORD *)(v2 + 32);
  long long v56 = v26;
  long long v54 = v27;
  uint64_t v57 = *(void *)(v2 + 64);
  uint64_t v28 = (void *)*((void *)&v27 + 1);
  sub_19F07A920(v44, *((void **)&v27 + 1), *((uint64_t *)&v55 + 1), v26, SBYTE8(v26));
  sub_19EFF86B8((uint64_t)sub_19EFF8424, 0);
  uint64_t v29 = swift_allocObject();
  long long v30 = v55;
  long long v31 = v56;
  *(_OWORD *)(v29 + 16) = v54;
  *(_OWORD *)(v29 + 32) = v30;
  *(_OWORD *)(v29 + 48) = v31;
  *(void *)(v29 + 64) = v57;
  uint64_t v32 = (void *)v54;
  sub_19EEBDC4C((uint64_t)&v55, (uint64_t)&v49, &qword_1E946F508);
  id v33 = v32;
  id v34 = v28;
  sub_19EE9D054((uint64_t)&v49);
  swift_retain();
  sub_19F15E684((uint64_t)sub_19EF848E0, v29);
  swift_release();
  swift_release();
  uint64_t v35 = v46;
  uint64_t v36 = v48;
  v42((uint64_t *)v46, (uint64_t)v25, v48);
  unint64_t v37 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v38 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v38 + v37, v35, v36);
  uint64_t v39 = sub_19EFF8D84((uint64_t)sub_19EFF9030, v38);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v25, v36);
  return v39;
}

uint64_t sub_19EFF8424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_19F1DACDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return sub_19F1DACCC();
}

uint64_t sub_19EFF84D0@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(*a1, sel_data);
  uint64_t v7 = sub_19F1DB40C();
  unint64_t v9 = v8;

  sub_19F1DB41C();
  uint64_t result = sub_19EEA072C(v7, v9);
  if (!v3)
  {
    uint64_t v11 = sub_19F1DB34C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a3, a2, v11);
  }
  return result;
}

uint64_t sub_19EFF85A0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  swift_release();

  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC9JetEngine20RemoteJetpackFetcher_artifactStoreURL;
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteJetpackFetcher()
{
  uint64_t result = qword_1E946F810;
  if (!qword_1E946F810) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_19EFF86B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE40);
  MEMORY[0x1F4188790](v4);
  id v6 = (void *)((char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v15 = &type metadata for SyncTaskScheduler;
  uint64_t v16 = &protocol witness table for SyncTaskScheduler;
  *id v6 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  _OWORD v7[2] = v8;
  sub_19EEBDC4C((uint64_t)v6, (uint64_t)v7 + *(void *)(*v7 + 96), &qword_1E946FE40);
  unint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  v9[3] = a2;
  void v9[4] = v7;
  v12[0] = sub_19EFF90C8;
  v12[1] = v9;
  void v12[2] = sub_19EFF90D4;
  v12[3] = v7;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF53824((uint64_t)v12);
  sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1E946F9D0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

void *sub_19EFF88A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(**(void **)a1 + 88))();
  uint64_t v5 = sub_19EFF8A00(a2, a3);
  swift_release();
  return v5;
}

uint64_t sub_19EFF891C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_19EFF8954(uint64_t a1)
{
  return sub_19EFF88A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19EFF895C()
{
  return type metadata accessor for RemoteJetpackFetcher();
}

uint64_t sub_19EFF8964()
{
  uint64_t result = sub_19F1DB34C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_19EFF8A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v4);
  id v6 = (void *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v15 = &type metadata for SyncTaskScheduler;
  uint64_t v16 = &protocol witness table for SyncTaskScheduler;
  *id v6 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  _OWORD v7[2] = v8;
  sub_19EEBDC4C((uint64_t)v6, (uint64_t)v7 + *(void *)(*v7 + 96), &qword_1EB3921D8);
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  unint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  v9[3] = a2;
  void v9[4] = v7;
  sub_19EEBB420(v13, (uint64_t)(v9 + 5));
  v11[0] = sub_19EFF8C4C;
  v11[1] = v9;
  void v11[2] = sub_19EFF8C5C;
  void v11[3] = v7;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v12);
  v12[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF53B38((uint64_t)v11);
  sub_19EEBD664((uint64_t)v11, &qword_1E946FC00);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19EFF8C04()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19EFF8C4C(uint64_t a1)
{
  return sub_19F15F4E4(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

void sub_19EFF8C5C(void *a1)
{
}

uint64_t sub_19EFF8C64(uint64_t *a1, void (*a2)(uint64_t *, double))
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  a2(&v11, v6);
  sub_19F1B068C((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void *sub_19EFF8D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v4);
  double v6 = (void *)((char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v15 = &type metadata for SyncTaskScheduler;
  uint64_t v16 = &protocol witness table for SyncTaskScheduler;
  *double v6 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921F8);
  uint64_t v7 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  _OWORD v7[2] = v8;
  sub_19EEBDC4C((uint64_t)v6, (uint64_t)v7 + *(void *)(*v7 + 96), &qword_1EB3921D8);
  unint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  v9[3] = a2;
  void v9[4] = v7;
  v12[0] = sub_19EFF90B0;
  v12[1] = v9;
  void v12[2] = sub_19EFF90BC;
  v12[3] = v7;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EE24580((uint64_t)v12);
  sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1EB3918A0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19EFF8F50()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19EFF8FA0()
{
  uint64_t v1 = sub_19F1DB34C();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19EFF9030@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_19F1DB34C() - 8);
  return sub_19EFF84D0(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_19EFF90B0(uint64_t *a1)
{
  return sub_19EFF8C64(a1, *(void (**)(uint64_t *, double))(v1 + 16));
}

uint64_t sub_19EFF90BC(uint64_t a1)
{
  return sub_19F12C40C(a1, v1);
}

uint64_t sub_19EFF90C8(uint64_t a1)
{
  return sub_19F0D8DB4(a1, *(void (**)(uint64_t, double))(v1 + 16));
}

void sub_19EFF90D4(void *a1)
{
}

void static AutomationSemantics.dismissButton()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = &unk_1EF140DA0;
  a1[1] = v1;
}

void static AutomationSemantics.searchField()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = &unk_1EF140960;
  a1[1] = v1;
}

void static AutomationSemantics.backButton()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = &unk_1EF1407E0;
  a1[1] = v1;
}

void static AutomationSemantics.editButton()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = &unk_1EF140810;
  a1[1] = v1;
}

double static AutomationSemantics.actionButton(id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  sub_19EEBCD00(a1, (uint64_t)v8);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v8, (void *)(inited + 32));
  sub_19EEBCD00(a2, (uint64_t)v8);
  AutomationAttribute.init(key:value:)(0x6449746E65726170, 0xE800000000000000, (uint64_t)v8, (void *)(inited + 64));
  *(void *)&v8[0] = &unk_1EF140CB0;
  *(void *)&v8[1] = MEMORY[0x1E4FBC860];
  sub_19EE9104C(inited);
  double result = v8[0];
  *a3 = *(_OWORD *)v8;
  return result;
}

void static AutomationSemantics.primaryActionButton()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = &unk_1EF141398;
  a1[1] = v1;
}

void static AutomationSemantics.filterButton()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = &unk_1EF140D10;
  a1[1] = v1;
}

uint64_t sub_19EFF927C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFF92A4, 0, 0);
}

uint64_t sub_19EFF92A4()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9440;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFF9440()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F01EDC8, 0, 0);
  }
  else
  {
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_19EFF9590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFF95B8, 0, 0);
}

uint64_t sub_19EFF95B8()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9440;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFF9754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return MEMORY[0x1F4188298](sub_19EFF9778, 0, 0);
}

uint64_t sub_19EFF9778()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 32) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  sub_19EEBDC10(0, &qword_1EB392278);
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9930;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  return MEMORY[0x1F41881B8](v0 + 16, v0 + 32, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFF9930()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    unint64_t v2 = sub_19F01EDC8;
  }
  else {
    unint64_t v2 = sub_19F01EE4C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19EFF9A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return MEMORY[0x1F4188298](sub_19EFF9A84, 0, 0);
}

uint64_t sub_19EFF9A84()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 32) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  type metadata accessor for StartUpPerformanceEvent();
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9930;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  return MEMORY[0x1F41881B8](v0 + 16, v0 + 32, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFF9C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFF9C54, 0, 0);
}

uint64_t sub_19EFF9C54()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFB0);
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9440;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFF9DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFF9E20, 0, 0);
}

uint64_t sub_19EFF9E20()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9440;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFF9FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFF9FE4, 0, 0);
}

uint64_t sub_19EFF9FE4()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  type metadata accessor for PageIntentInstrumentation();
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9440;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFFA184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFFA1AC, 0, 0);
}

uint64_t sub_19EFFA1AC()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9440;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFFA350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFFA378, 0, 0);
}

uint64_t sub_19EFFA378()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9440;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFFA514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFFA53C, 0, 0);
}

uint64_t sub_19EFFA53C()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94709B0);
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9440;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFFA6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return MEMORY[0x1F4188298](sub_19EFFA704, 0, 0);
}

uint64_t sub_19EFFA704()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 32) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  sub_19EEBDC10(0, (unint64_t *)&qword_1E946DC70);
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9930;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  return MEMORY[0x1F41881B8](v0 + 16, v0 + 32, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFFA8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return MEMORY[0x1F4188298](sub_19EFFA8E0, 0, 0);
}

uint64_t sub_19EFFA8E0()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 32) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  type metadata accessor for JetPackAssetSession();
  *uint64_t v5 = v0;
  v5[1] = sub_19EFFAA88;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  return MEMORY[0x1F41881B8](v0 + 16, v0 + 32, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFFAA88()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    unint64_t v2 = sub_19EFFABB8;
  }
  else {
    unint64_t v2 = sub_19EECFD58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19EFFABB8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19EFFABD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFFABF8, 0, 0);
}

uint64_t sub_19EFFABF8()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  type metadata accessor for JetPackAsset(0);
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9440;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFFAD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFFADC0, 0, 0);
}

uint64_t sub_19EFFADC0()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19EFFAF5C;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

uint64_t sub_19EFFAF5C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19EFFABB8, 0, 0);
  }
  else
  {
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_19EFFB0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x1F4188298](sub_19EFFB0D4, 0, 0);
}

uint64_t sub_19EFFB0D4()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v1 = *(void **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEAE860(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEAE860((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 72) = v1;
  long long v4 = *(_OWORD *)(v0 + 56);
  uint64_t v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(void *)(v0 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19EFF9440;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v8, v0 + 24, v6, v7, 0, 0, 0xD000000000000024, 0x800000019F26D6F0);
}

BOOL static JSStack.CallingConvention.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t JSStack.CallingConvention.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JSStack.CallingConvention.hashValue.getter()
{
  return sub_19F1DD78C();
}

id JSStack.Configuration.init(appScript:dependencies:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 176) = 0;
  *(_OWORD *)(a3 + 144) = 0u;
  *(_OWORD *)(a3 + 160) = 0u;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(unsigned char *)(a3 + 184) = 1;
  sub_19EEC4154(a1, a3);
  *(void *)(a3 + 40) = a2;
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30940]), sel_init);
  if (result)
  {
    *(void *)(a3 + 48) = result;
    *(unsigned char *)(a3 + 56) = 0;
    id result = (id)__swift_destroy_boxed_opaque_existential_1Tm(a1);
    *(void *)(a3 + 192) = 0x747865746E6F63;
    *(void *)(a3 + 200) = 0xE700000000000000;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t JSStack.Configuration.addingDependency(_:withName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_19EFFB418(v4, a4);
  sub_19EEC4154(a1, (uint64_t)v9);
  swift_bridgeObjectRetain();
  return sub_19EFB5A74((uint64_t)v9, a2, a3);
}

uint64_t sub_19EFFB418(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t JSStack.Configuration.addingBagDependency(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_19EFFB418(v2, a2);
  v5[3] = &type metadata for Bag;
  v5[4] = &protocol witness table for Bag;
  v5[0] = v3;
  swift_unknownObjectRetain();
  return sub_19EFB5A74((uint64_t)v5, 6775138, 0xE300000000000000);
}

uint64_t JSStack.Configuration.addingNetDependency(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EFFB418(v2, a2);
  v5[3] = &type metadata for Net;
  v5[4] = &protocol witness table for Net;
  v5[0] = swift_allocObject();
  sub_19EFFB590(a1, v5[0] + 16);
  return sub_19EFB5A74((uint64_t)v5, 7628142, 0xE300000000000000);
}

uint64_t sub_19EFFB558()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19EFFB590(uint64_t a1, uint64_t a2)
{
  return a2;
}

void JSStack.Configuration.withVirtualMachine(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EFFB418(v2, a2);
  objc_storeStrong((id *)(a2 + 48), a1);
}

uint64_t JSStack.Configuration.withConvention(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *a1;
  uint64_t result = sub_19EFFB418(v2, a2);
  *(unsigned char *)(a2 + 56) = v4;
  return result;
}

uint64_t JSStack.Configuration.withSentryConfiguration(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EFFB418(v2, a2);
  return sub_19EFFB6C8(a1, a2 + 64);
}

uint64_t sub_19EFFB6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t JSStack.Configuration.withContextName(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EFFB418(v3, a3);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + 192) = a1;
  *(void *)(a3 + 200) = a2;
  return result;
}

uint64_t JSStack.Configuration.withQualityOfService(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_19EFFB418(v2, a2);
  *(void *)(a2 + 176) = a1;
  *(unsigned char *)(a2 + 184) = 0;
  return result;
}

uint64_t JSStack.StandardGlobalConfiguration.isProtocolHandlingEnabled.getter()
{
  return *v0;
}

uint64_t JSStack.StandardGlobalConfiguration.isProtocolHandlingEnabled.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*JSStack.StandardGlobalConfiguration.isProtocolHandlingEnabled.modify())()
{
  return nullsub_1;
}

uint64_t JSStack.StandardGlobalConfiguration.isAnonymous.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t JSStack.StandardGlobalConfiguration.isAnonymous.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*JSStack.StandardGlobalConfiguration.isAnonymous.modify())()
{
  return nullsub_1;
}

uint64_t JSStack.StandardGlobalConfiguration.unstable_requestFixUpBlock.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_19EE47F40(v1);
  return v1;
}

uint64_t sub_19EFFB858@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_19EF3C5FC;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_19EE47F40(v3);
}

uint64_t sub_19EFFB8D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_19EF3CAB8;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  sub_19EE47F40(v3);
  uint64_t result = sub_19EE83660(v7);
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v5;
  return result;
}

uint64_t JSStack.StandardGlobalConfiguration.unstable_requestFixUpBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_19EE83660(*(void *)(v2 + 8));
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*JSStack.StandardGlobalConfiguration.unstable_requestFixUpBlock.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  *a1 = v3;
  a1[1] = v4;
  sub_19EE47F40(v3);
  return sub_19EFFB9F8;
}

uint64_t sub_19EFFB9F8(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(v3 + 8);
  if (a2)
  {
    sub_19EE47F40(*a1);
    sub_19EE83660(v5);
    *(void *)(v3 + 8) = v4;
    *(void *)(v3 + 16) = v2;
    return sub_19EE83660(v4);
  }
  else
  {
    uint64_t result = sub_19EE83660(*(void *)(v3 + 8));
    *(void *)(v3 + 8) = v4;
    *(void *)(v3 + 16) = v2;
  }
  return result;
}

unint64_t sub_19EFFBA8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  swift_bridgeObjectRetain();
  id v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  uint64_t v5 = sub_19F1DD62C();
  id v6 = objc_msgSend(self, sel_valueWithObject_inContext_, v5, v4);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v6;
  return result;
}

void sub_19EFFBB4C(void *a1@<X0>, void *a2@<X8>)
{
}

id sub_19EFFBB64()
{
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  id result = sub_19EE7DF10(v1, 0x6B63617453534ALL, 0xE700000000000000);
  qword_1E9498A98 = (uint64_t)result;
  return result;
}

uint64_t JSStack.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v3 = (void *)swift_allocObject();
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *id v4 = v1;
  v4[1] = sub_19EE19904;
  v4[28] = a1;
  v4[29] = v3;
  v4[30] = *v3;
  return MEMORY[0x1F4188298](sub_19EFFBD30, 0, 0);
}

uint64_t JSStack.init(with:)(uint64_t a1)
{
  v2[28] = a1;
  v2[29] = v1;
  v2[30] = *v1;
  return MEMORY[0x1F4188298](sub_19EFFBD30, 0, 0);
}

uint64_t sub_19EFFBD30()
{
  uint64_t v41 = v0;
  uint64_t v1 = *(void *)(v0 + 232);
  *(void *)(v1 + 160) = 0;
  *(void *)(v1 + 168) = 0;
  uint64_t v2 = (uint64_t *)(v1 + 160);
  uint64_t v3 = self;
  id v4 = (void *)sub_19F1DBD4C();
  LODWORD(v3) = objc_msgSend(v3, sel_BOOLForEntitlement_, v4);

  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 224);
    sub_19EF600C0();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD00000000000005ELL;
    *(void *)(v6 + 8) = 0x800000019F26D890;
    *(void *)(v6 + 16) = 0;
    *(unsigned char *)(v6 + 24) = 1;
    *(void *)(v6 + 32) = 0;
    *(unsigned char *)(v6 + 40) = 1;
    *(_OWORD *)(v6 + 48) = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
    *(_OWORD *)(v6 + 80) = 0u;
    *(void *)(v6 + 96) = 0;
    swift_willThrow();
    sub_19F01A8E8(v5);
    sub_19EE83660(*v2);
    swift_deallocPartialClassInstance();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v10 = *(void **)(v0 + 232);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  v10[4] = MEMORY[0x1E4FBC860];
  sub_19EEC3ED8(v9 + 64, (uint64_t)(v10 + 5), &qword_1EB391C60);
  type metadata accessor for RunLoopWorkerThread();
  unint64_t v12 = (void *)swift_allocObject();
  v12[5] = 0;
  v12[6] = 0;
  void v12[2] = 0xD00000000000001BLL;
  v12[3] = 0x800000019F26D870;
  void v12[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  v12[7] = v11;
  uint64_t v10[2] = v12;
  uint64_t v13 = *(void *)(v9 + 176);
  char v14 = *(unsigned char *)(v9 + 184);
  swift_retain();
  sub_19EE4AC98(v13, v14);
  swift_release();
  Swift::String v15 = *(void **)(v9 + 48);
  uint64_t v16 = *(void *)(v9 + 192);
  uint64_t v17 = *(void *)(v9 + 200);
  uint64_t v18 = v10[2];
  swift_retain();
  uint64_t v19 = sub_19EE4A1F0(v15, v16, v17, v18);
  swift_release();
  void v10[3] = v19;
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  unint64_t v20 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v21 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v21);
  sub_19EEC4E5C(v20, v40);
  os_unfair_lock_unlock(v21);
  int v22 = v40[0];
  swift_release();
  if (v22 == 2)
  {
    if ((os_variant_has_internal_content() & 1) == 0) {
      goto LABEL_14;
    }
  }
  else if ((v22 & 1) == 0)
  {
    goto LABEL_14;
  }
  if (qword_1E946FC20 != -1) {
    swift_once();
  }
  if ((byte_1E9498AF8 & 1) == 0)
  {
    uint64_t v23 = *(void *)(v0 + 224);
    uint64_t v24 = *(void *)(v0 + 232);
    type metadata accessor for TracingSupport();
    uint64_t v25 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FC08);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 0;
    *(void *)(v25 + 16) = v26;
    *(void *)(v24 + 152) = v25;
    long long v27 = (void *)v10[3];
    sub_19EEC4154(v23, v0 + 16);
    sub_19EE4AEEC(v27, v0 + 16);
    sub_19EEBD664(v0 + 16, (uint64_t *)&unk_1E946FBC0);
    goto LABEL_16;
  }
LABEL_14:
  *(void *)(*(void *)(v0 + 232) + 152) = 0;
LABEL_16:
  uint64_t v28 = *(void *)(v0 + 232);
  sub_19EFFB418(*(void *)(v0 + 224), v0 + 16);
  uint64_t v29 = swift_allocObject();
  long long v30 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v29 + 168) = *(_OWORD *)(v0 + 160);
  long long v31 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v29 + 184) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v29 + 200) = v31;
  *(_OWORD *)(v29 + 216) = *(_OWORD *)(v0 + 208);
  long long v32 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v29 + 104) = *(_OWORD *)(v0 + 96);
  long long v33 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v29 + 120) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v29 + 136) = v33;
  *(_OWORD *)(v29 + 152) = v30;
  long long v34 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v29 + 40) = *(_OWORD *)(v0 + 32);
  long long v35 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v29 + 56) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v29 + 72) = v35;
  *(_OWORD *)(v29 + 88) = v32;
  *(void *)(v29 + 16) = v28;
  *(_OWORD *)(v29 + 24) = v34;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_19F01A8C8;
  *(void *)(v36 + 24) = v29;
  swift_retain();
  swift_retain();
  sub_19EE4A4A0((void (*)(void *__return_ptr, void))sub_19EED8BD0, v36);
  uint64_t v37 = *(void *)(v0 + 224);
  swift_release();
  swift_release();
  sub_19F01A8E8(v37);
  uint64_t v38 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v39 = *(void *)(v0 + 232);
  return v38(v39);
}

void sub_19EFFC250(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(long long **)(a1 + 24);
  uint64_t v6 = swift_allocObject();
  uint64_t v135 = a1;
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = 1;
  *(void *)&v154[0] = sub_19F01EFA8;
  *((void *)&v154[0] + 1) = v7;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v153 = sub_19EE48674;
  *((void *)&v153 + 1) = &block_descriptor_514;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v5, sel_setExceptionHandler_, v8);
  _Block_release(v8);
  v144 = v5;
  id v145 = objc_msgSend(v5, sel_globalObject);
  if (!v145)
  {
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
    goto LABEL_181;
  }
  unint64_t v9 = sub_19EFFD90C();
  unint64_t v137 = v9 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v9 + 64);
  int64_t v140 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  unint64_t v15 = v14 | (v13 << 6);
LABEL_6:
  uint64_t v16 = *(void *)(v9 + 56);
  uint64_t v17 = (void *)(*(void *)(v9 + 48) + 16 * v15);
  uint64_t v18 = v17[1];
  *(void *)&long long v146 = *v17;
  *((void *)&v146 + 1) = v18;
  sub_19EEC4154(v16 + 40 * v15, (uint64_t)&v147);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_19EEBDC4C((uint64_t)&v146, (uint64_t)&aBlock, &qword_1E946CE78);
    if (!*((void *)&aBlock + 1)) {
      break;
    }
    sub_19EEBB420(&v153, (uint64_t)&v146);
    uint64_t v21 = *((void *)&v147 + 1);
    uint64_t v22 = v148;
    __swift_project_boxed_opaque_existential_1(&v146, *((uint64_t *)&v147 + 1));
    uint64_t v23 = (void *)(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v22 + 16))(v144, v21, v22);
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v146);
      uint64_t v44 = swift_allocObject();
      swift_weakInit();
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v44;
      *(unsigned char *)(v45 + 24) = 0;
      *(void *)&v154[0] = sub_19F01EFA8;
      *((void *)&v154[0] + 1) = v45;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v153 = sub_19EE48674;
      *((void *)&v153 + 1) = &block_descriptor_578;
      uint64_t v46 = _Block_copy(&aBlock);
      swift_release();
LABEL_149:
      objc_msgSend(v144, sel_setExceptionHandler_, v46, v133);
      long long v105 = v46;
LABEL_150:
      _Block_release(v105);
      return;
    }
    uint64_t v5 = v23;
    uint64_t v24 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    objc_msgSend(v145, sel_setValue_forProperty_, v5, v24);

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v146);
    if (v12) {
      goto LABEL_5;
    }
LABEL_7:
    int64_t v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
      goto LABEL_173;
    }
    if (v19 < v140)
    {
      unint64_t v20 = *(void *)(v137 + 8 * v19);
      if (v20) {
        goto LABEL_10;
      }
      v13 += 2;
      if (v19 + 1 >= v140)
      {
        int64_t v13 = v19;
      }
      else
      {
        unint64_t v20 = *(void *)(v137 + 8 * v13);
        if (v20)
        {
          ++v19;
LABEL_10:
          unint64_t v12 = (v20 - 1) & v20;
          unint64_t v15 = __clz(__rbit64(v20)) + (v19 << 6);
          int64_t v13 = v19;
          goto LABEL_6;
        }
        if (v19 + 2 < v140)
        {
          unint64_t v20 = *(void *)(v137 + 8 * (v19 + 2));
          if (v20)
          {
            v19 += 2;
            goto LABEL_10;
          }
          int64_t v25 = v19 + 3;
          if (v19 + 3 < v140)
          {
            unint64_t v20 = *(void *)(v137 + 8 * v25);
            if (!v20)
            {
              while (1)
              {
                int64_t v19 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_171;
                }
                if (v19 >= v140)
                {
                  int64_t v13 = v140 - 1;
                  goto LABEL_15;
                }
                unint64_t v20 = *(void *)(v137 + 8 * v19);
                ++v25;
                if (v20) {
                  goto LABEL_10;
                }
              }
            }
            v19 += 3;
            goto LABEL_10;
          }
          int64_t v13 = v19 + 2;
        }
      }
    }
LABEL_15:
    unint64_t v12 = 0;
    *(void *)&long long v149 = 0;
    long long v147 = 0u;
    long long v148 = 0u;
    long long v146 = 0u;
  }
  swift_release();
  if (*(unsigned char *)(a2 + 56))
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(a2 + 40);
    uint64_t v27 = *(void *)(v26 + 64);
    uint64_t v138 = v26 + 64;
    uint64_t v28 = 1 << *(unsigned char *)(v26 + 32);
    uint64_t v29 = -1;
    if (v28 < 64) {
      uint64_t v29 = ~(-1 << v28);
    }
    unint64_t v30 = v29 & v27;
    int64_t v141 = (unint64_t)(v28 + 63) >> 6;
    int64_t v31 = 0;
    uint64_t v3 = (void *)swift_bridgeObjectRetain();
    if (!v30) {
      goto LABEL_38;
    }
LABEL_36:
    unint64_t v32 = __clz(__rbit64(v30));
    v30 &= v30 - 1;
    unint64_t v33 = v32 | (v31 << 6);
LABEL_37:
    uint64_t v34 = v3[7];
    long long v35 = (void *)(v3[6] + 16 * v33);
    uint64_t v36 = v35[1];
    *(void *)&long long v146 = *v35;
    *((void *)&v146 + 1) = v36;
    sub_19EEC4154(v34 + 40 * v33, (uint64_t)&v147);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_19EEBDC4C((uint64_t)&v146, (uint64_t)&aBlock, &qword_1E946CE78);
      if (!*((void *)&aBlock + 1)) {
        break;
      }
      sub_19EEBB420(&v153, (uint64_t)&v146);
      uint64_t v39 = *((void *)&v147 + 1);
      uint64_t v40 = v148;
      __swift_project_boxed_opaque_existential_1(&v146, *((uint64_t *)&v147 + 1));
      uint64_t v41 = (void *)(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v40 + 16))(v144, v39, v40);
      if (v2)
      {
        swift_release();

        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v146);
        uint64_t v101 = swift_allocObject();
        swift_weakInit();
        uint64_t v102 = swift_allocObject();
        *(void *)(v102 + 16) = v101;
        *(unsigned char *)(v102 + 24) = 0;
        *(void *)&v154[0] = sub_19F01EFA8;
        *((void *)&v154[0] + 1) = v102;
        *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
        *((void *)&aBlock + 1) = 1107296256;
        unint64_t v95 = &block_descriptor_538;
        goto LABEL_148;
      }
      uint64_t v5 = v41;
      uint64_t v42 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      objc_msgSend(v145, sel_setValue_forProperty_, v5, v42);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v146);
      if (v30) {
        goto LABEL_36;
      }
LABEL_38:
      int64_t v37 = v31 + 1;
      if (__OFADD__(v31, 1)) {
        goto LABEL_169;
      }
      if (v37 < v141)
      {
        unint64_t v38 = *(void *)(v138 + 8 * v37);
        if (v38) {
          goto LABEL_41;
        }
        v31 += 2;
        if (v37 + 1 >= v141)
        {
          int64_t v31 = v37;
        }
        else
        {
          unint64_t v38 = *(void *)(v138 + 8 * v31);
          if (v38)
          {
            ++v37;
LABEL_41:
            unint64_t v30 = (v38 - 1) & v38;
            unint64_t v33 = __clz(__rbit64(v38)) + (v37 << 6);
            int64_t v31 = v37;
            goto LABEL_37;
          }
          if (v37 + 2 < v141)
          {
            unint64_t v38 = *(void *)(v138 + 8 * (v37 + 2));
            if (v38)
            {
              v37 += 2;
              goto LABEL_41;
            }
            int64_t v43 = v37 + 3;
            if (v37 + 3 < v141)
            {
              unint64_t v38 = *(void *)(v138 + 8 * v43);
              if (v38)
              {
                v37 += 3;
                goto LABEL_41;
              }
              while (1)
              {
                int64_t v37 = v43 + 1;
                if (__OFADD__(v43, 1)) {
                  break;
                }
                if (v37 >= v141)
                {
                  int64_t v31 = v141 - 1;
                  goto LABEL_46;
                }
                unint64_t v38 = *(void *)(v138 + 8 * v37);
                ++v43;
                if (v38) {
                  goto LABEL_41;
                }
              }
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              uint64_t v3 = sub_19EEB2F60(0, v3[2] + 1, 1, v3);
              *(void *)uint64_t v5 = v3;
LABEL_154:
              unint64_t v108 = v3[2];
              unint64_t v107 = v3[3];
              if (v108 >= v107 >> 1)
              {
                uint64_t v3 = sub_19EEB2F60((void *)(v107 > 1), v108 + 1, 1, v3);
                *(void *)uint64_t v5 = v3;
              }
              char v109 = &selRef_resume;
              void v3[2] = v108 + 1;
              sub_19EEBDC00(&v146, &v3[4 * v108 + 4]);
              swift_endAccess();

              sub_19EEDCA08((uint64_t)&aBlock);
              goto LABEL_165;
            }
            int64_t v31 = v37 + 2;
          }
        }
      }
LABEL_46:
      unint64_t v30 = 0;
      *(void *)&long long v149 = 0;
      long long v147 = 0u;
      long long v148 = 0u;
      long long v146 = 0u;
    }
    swift_release();
    uint64_t v90 = *(void *)(a2 + 24);
    uint64_t v91 = *(void *)(a2 + 32);
    __swift_project_boxed_opaque_existential_1((void *)a2, v90);
    uint64_t v92 = (void *)sub_19EEDE99C((uint64_t)v144, v90, v91);
    if (v2)
    {

      uint64_t v93 = swift_allocObject();
      swift_weakInit();
      uint64_t v94 = swift_allocObject();
      *(void *)(v94 + 16) = v93;
      *(unsigned char *)(v94 + 24) = 0;
      *(void *)&v154[0] = sub_19F01EFA8;
      *((void *)&v154[0] + 1) = v94;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      unint64_t v95 = &block_descriptor_522;
      goto LABEL_148;
    }

LABEL_152:
    sub_19EEC4154(a2, (uint64_t)v151);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3920F0);
    if (swift_dynamicCast())
    {
      v154[0] = v148;
      v154[1] = v149;
      uint64_t v155 = v150;
      long long aBlock = v146;
      long long v153 = v147;
      sub_19EEBDBA4((uint64_t)v154 + 8, (uint64_t)&v146);
      uint64_t v5 = (long long *)(v135 + 32);
      swift_beginAccess();
      uint64_t v3 = *(void **)(v135 + 32);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v135 + 32) = v3;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        goto LABEL_175;
      }
      goto LABEL_154;
    }
    uint64_t v150 = 0;
    long long v148 = 0u;
    long long v149 = 0u;
    long long v146 = 0u;
    long long v147 = 0u;

    sub_19EEBD664((uint64_t)&v146, &qword_1EB3910A8);
    char v109 = &selRef_resume;
LABEL_165:
    uint64_t v124 = swift_allocObject();
    swift_weakInit();
    uint64_t v125 = swift_allocObject();
    *(void *)(v125 + 16) = v124;
    *(unsigned char *)(v125 + 24) = 0;
    *(void *)&v154[0] = sub_19F01EFA8;
    *((void *)&v154[0] + 1) = v125;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v153 = sub_19EE48674;
    *((void *)&v153 + 1) = &block_descriptor_530;
    long long v126 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v144, v109[87], v126);
    long long v105 = v126;
    goto LABEL_150;
  }
  id v143 = objc_msgSend(self, sel_valueWithNewObjectInContext_, v144);
  if (!v143) {
    goto LABEL_179;
  }
  int64_t v47 = 0;
  uint64_t v48 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v49 = -1;
  if (v48 < 64) {
    uint64_t v49 = ~(-1 << v48);
  }
  unint64_t v50 = v49 & *(void *)(v9 + 64);
  int64_t v142 = (unint64_t)(v48 + 63) >> 6;
  uint64_t v5 = &v153;
  if (!v50) {
    goto LABEL_70;
  }
LABEL_68:
  unint64_t v51 = __clz(__rbit64(v50));
  v50 &= v50 - 1;
  unint64_t v52 = v51 | (v47 << 6);
LABEL_69:
  uint64_t v53 = *(void *)(v9 + 56);
  long long v54 = (void *)(*(void *)(v9 + 48) + 16 * v52);
  uint64_t v55 = v54[1];
  *(void *)&long long v146 = *v54;
  *((void *)&v146 + 1) = v55;
  sub_19EEC4154(v53 + 40 * v52, (uint64_t)&v147);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_19EEBDC4C((uint64_t)&v146, (uint64_t)&aBlock, &qword_1E946CE78);
    if (!*((void *)&aBlock + 1)) {
      break;
    }
    long long v58 = (void *)sub_19F1DBD4C();
    id v59 = objc_msgSend(v145, sel_valueForProperty_, v58);

    if (!v59)
    {
      __break(1u);
LABEL_177:
      __break(1u);
      goto LABEL_178;
    }
    id v60 = v59;
    uint64_t v61 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    objc_msgSend(v143, sel_setValue_forProperty_, v60, v61);

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v153);
    if (v50) {
      goto LABEL_68;
    }
LABEL_70:
    int64_t v56 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      goto LABEL_168;
    }
    if (v56 < v142)
    {
      unint64_t v57 = *(void *)(v137 + 8 * v56);
      if (v57) {
        goto LABEL_73;
      }
      v47 += 2;
      if (v56 + 1 >= v142)
      {
        int64_t v47 = v56;
      }
      else
      {
        unint64_t v57 = *(void *)(v137 + 8 * v47);
        if (v57)
        {
          ++v56;
LABEL_73:
          unint64_t v50 = (v57 - 1) & v57;
          unint64_t v52 = __clz(__rbit64(v57)) + (v56 << 6);
          int64_t v47 = v56;
          goto LABEL_69;
        }
        if (v56 + 2 < v142)
        {
          unint64_t v57 = *(void *)(v137 + 8 * (v56 + 2));
          if (v57)
          {
            v56 += 2;
            goto LABEL_73;
          }
          int64_t v62 = v56 + 3;
          if (v56 + 3 >= v142)
          {
            int64_t v47 = v56 + 2;
          }
          else
          {
            unint64_t v57 = *(void *)(v137 + 8 * v62);
            if (v57)
            {
              v56 += 3;
              goto LABEL_73;
            }
            while (1)
            {
              int64_t v56 = v62 + 1;
              if (__OFADD__(v62, 1)) {
                goto LABEL_172;
              }
              if (v56 >= v142) {
                break;
              }
              unint64_t v57 = *(void *)(v137 + 8 * v56);
              ++v62;
              if (v57) {
                goto LABEL_73;
              }
            }
            int64_t v47 = v142 - 1;
          }
        }
      }
    }
    unint64_t v50 = 0;
    *(void *)&long long v149 = 0;
    long long v147 = 0u;
    long long v148 = 0u;
    long long v146 = 0u;
  }
  swift_release();
  uint64_t v63 = *(void *)(a2 + 40);
  uint64_t v64 = *(void *)(v63 + 64);
  uint64_t v134 = v63 + 64;
  uint64_t v65 = 1 << *(unsigned char *)(v63 + 32);
  uint64_t v66 = -1;
  if (v65 < 64) {
    uint64_t v66 = ~(-1 << v65);
  }
  unint64_t v67 = v66 & v64;
  int64_t v139 = (unint64_t)(v65 + 63) >> 6;
  int64_t v133 = v139 - 1;
  uint64_t v68 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  int64_t v69 = 0;
  if (!v67) {
    goto LABEL_100;
  }
LABEL_98:
  unint64_t v70 = __clz(__rbit64(v67));
  v67 &= v67 - 1;
  unint64_t v71 = v70 | (v69 << 6);
LABEL_99:
  uint64_t v72 = *(void *)(v68 + 56);
  unint64_t v73 = (void *)(*(void *)(v68 + 48) + 16 * v71);
  uint64_t v74 = v73[1];
  *(void *)&long long v146 = *v73;
  *((void *)&v146 + 1) = v74;
  sub_19EEC4154(v72 + 40 * v71, (uint64_t)&v147);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_19EEBDC4C((uint64_t)&v146, (uint64_t)&aBlock, &qword_1E946CE78);
    uint64_t v3 = (void *)*((void *)&aBlock + 1);
    if (!*((void *)&aBlock + 1)) {
      break;
    }
    uint64_t v77 = aBlock;
    sub_19EEBB420(&v153, (uint64_t)&v146);
    uint64_t v78 = *((void *)&v147 + 1);
    uint64_t v79 = v148;
    __swift_project_boxed_opaque_existential_1(&v146, *((uint64_t *)&v147 + 1));
    uint64_t v80 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v79 + 16))(v144, v78, v79);
    if (v2)
    {
      swift_release();

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v146);
      uint64_t v103 = swift_allocObject();
      swift_weakInit();
      uint64_t v104 = swift_allocObject();
      *(void *)(v104 + 16) = v103;
      *(unsigned char *)(v104 + 24) = 0;
      *(void *)&v154[0] = sub_19F01EFA8;
      *((void *)&v154[0] + 1) = v104;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      unint64_t v95 = &block_descriptor_570;
      goto LABEL_148;
    }
    unint64_t v81 = (void *)v80;
    swift_bridgeObjectRetain();
    id v82 = v81;
    uint64_t v5 = (long long *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    objc_msgSend(v143, sel_setValue_forProperty_, v82, v5);

    if (v3 == (void *)0xE300000000000000 && v77 == 6775138
      || (sub_19F1DD44C() & 1) != 0
      || v3 == (void *)0xEE0072656469766FLL && v77 == 0x725065696B6F6F63
      || ((char v86 = sub_19F1DD44C(), v3 == (void *)0xE300000000000000) ? (v87 = v77 == 7628142) : (v87 = 0),
          !v87 ? (char v88 = 0) : (char v88 = 1),
          (v86 & 1) != 0 || (v88 & 1) != 0 || (sub_19F1DD44C() & 1) != 0))
    {
      long long v83 = (void *)sub_19F1DBD4C();
      id v84 = objc_msgSend(v143, sel_valueForProperty_, v83);

      if (!v84) {
        goto LABEL_177;
      }
      id v85 = v84;
      uint64_t v5 = (long long *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      objc_msgSend(v145, sel_setValue_forProperty_, v85, v5);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v146);
    if (v67) {
      goto LABEL_98;
    }
LABEL_100:
    int64_t v75 = v69 + 1;
    if (__OFADD__(v69, 1)) {
      goto LABEL_170;
    }
    if (v75 < v139)
    {
      unint64_t v76 = *(void *)(v134 + 8 * v75);
      if (v76) {
        goto LABEL_103;
      }
      v69 += 2;
      if (v75 + 1 >= v139)
      {
        int64_t v69 = v75;
      }
      else
      {
        unint64_t v76 = *(void *)(v134 + 8 * v69);
        if (v76)
        {
          ++v75;
LABEL_103:
          unint64_t v67 = (v76 - 1) & v76;
          unint64_t v71 = __clz(__rbit64(v76)) + (v75 << 6);
          int64_t v69 = v75;
          goto LABEL_99;
        }
        if (v75 + 2 < v139)
        {
          unint64_t v76 = *(void *)(v134 + 8 * (v75 + 2));
          if (v76)
          {
            v75 += 2;
            goto LABEL_103;
          }
          int64_t v89 = v75 + 3;
          if (v75 + 3 >= v139)
          {
            int64_t v69 = v75 + 2;
          }
          else
          {
            unint64_t v76 = *(void *)(v134 + 8 * v89);
            if (v76)
            {
              v75 += 3;
              goto LABEL_103;
            }
            while (1)
            {
              int64_t v75 = v89 + 1;
              if (__OFADD__(v89, 1)) {
                goto LABEL_174;
              }
              if (v75 >= v139) {
                break;
              }
              unint64_t v76 = *(void *)(v134 + 8 * v75);
              ++v89;
              if (v76) {
                goto LABEL_103;
              }
            }
            int64_t v69 = v139 - 1;
          }
        }
      }
    }
    unint64_t v67 = 0;
    *(void *)&long long v149 = 0;
    long long v147 = 0u;
    long long v148 = 0u;
    long long v146 = 0u;
  }
  swift_release();
  uint64_t v96 = *(void *)(a2 + 24);
  uint64_t v97 = *(void *)(a2 + 32);
  __swift_project_boxed_opaque_existential_1((void *)a2, v96);
  uint64_t v98 = (void *)sub_19EEDE99C((uint64_t)v144, v96, v97);
  if (v2)
  {

    uint64_t v99 = swift_allocObject();
    swift_weakInit();
    uint64_t v100 = swift_allocObject();
    *(void *)(v100 + 16) = v99;
    *(unsigned char *)(v100 + 24) = 0;
    *(void *)&v154[0] = sub_19F01EFA8;
    *((void *)&v154[0] + 1) = v100;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    unint64_t v95 = &block_descriptor_546;
LABEL_148:
    *(void *)&long long v153 = sub_19EE48674;
    *((void *)&v153 + 1) = v95;
    uint64_t v46 = _Block_copy(&aBlock);
    swift_release();
    goto LABEL_149;
  }

  uint64_t v110 = (void *)sub_19F1DBD4C();
  id v111 = objc_msgSend(v145, sel_valueForProperty_, v110);

  if (!v111) {
    goto LABEL_180;
  }
  v151[3] = &type metadata for JSStrongReference;
  v151[4] = &protocol witness table for JSStrongReference;
  v151[0] = v111;
  JSCallable.init(_:)(v151, (uint64_t)&v146);
  if (!*((void *)&v147 + 1))
  {
    sub_19EEBD664((uint64_t)&v146, &qword_1EB390B68);
    sub_19EF600C0();
    swift_allocError();
    *(void *)uint64_t v127 = 0xD00000000000001FLL;
    *(void *)(v127 + 8) = 0x800000019F26DF20;
    *(void *)(v127 + 16) = 0;
    *(unsigned char *)(v127 + 24) = 1;
    *(void *)(v127 + 32) = 0;
    *(unsigned char *)(v127 + 40) = 1;
    *(_OWORD *)(v127 + 48) = 0u;
    *(_OWORD *)(v127 + 64) = 0u;
    *(_OWORD *)(v127 + 80) = 0u;
    *(void *)(v127 + 96) = 0;
    swift_willThrow();

    uint64_t v128 = swift_allocObject();
    swift_weakInit();
    uint64_t v129 = swift_allocObject();
    *(void *)(v129 + 16) = v128;
    *(unsigned char *)(v129 + 24) = 0;
    *(void *)&v154[0] = sub_19F01EFA8;
    *((void *)&v154[0] + 1) = v129;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    unint64_t v95 = &block_descriptor_554;
    goto LABEL_148;
  }
  long long aBlock = v146;
  long long v153 = v147;
  *(void *)&v154[0] = v148;
  char v112 = (void *)sub_19F1DBD4C();
  id v113 = objc_msgSend(v145, sel_valueForProperty_, v112);

  if (v113)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
    uint64_t v114 = swift_allocObject();
    *(_OWORD *)(v114 + 16) = xmmword_19F24EAD0;
    *(void *)(v114 + 56) = sub_19EEBDC10(0, (unint64_t *)&qword_1EB392790);
    *(void *)(v114 + 32) = v143;
    __swift_project_boxed_opaque_existential_1(&aBlock, *((uint64_t *)&v153 + 1));
    id v115 = v143;
    v116.super.Class isa = JSReference.unwrap()().super.isa;
    if (v117)
    {
      sub_19EE92E78((uint64_t)&aBlock);

      swift_bridgeObjectRelease();
      uint64_t v122 = swift_allocObject();
      swift_weakInit();
      uint64_t v123 = swift_allocObject();
      *(void *)(v123 + 16) = v122;
      *(unsigned char *)(v123 + 24) = 0;
      *(void *)&v154[0] = sub_19F01EFA8;
      *((void *)&v154[0] + 1) = v123;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      unint64_t v95 = &block_descriptor_562;
      goto LABEL_148;
    }
    Class isa = v116.super.isa;
    id v119 = [(objc_class *)v116.super.isa context];
    if (v119)
    {
      uint64_t v120 = v119;
      uint64_t v121 = isa;
      swift_bridgeObjectRetain();
      id v130 = sub_19EE92270(v120, v121);
      swift_bridgeObjectRelease_n();

      id v131 = v130;
      v132 = (void *)sub_19F1DBD4C();
      objc_msgSend(v113, sel_setValue_forProperty_, v131, v132);

      sub_19EE92E78((uint64_t)&aBlock);
      goto LABEL_152;
    }
    goto LABEL_182;
  }
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
}

unint64_t sub_19EFFD90C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CEB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F255030;
  *(void *)(inited + 32) = 0xD000000000000010;
  *(void *)(inited + 40) = 0x800000019F26DD60;
  *(void *)(inited + 72) = &type metadata for JSCalculatedValue;
  *(void *)(inited + 80) = &protocol witness table for JSCalculatedValue;
  *(void *)(inited + 48) = sub_19F002C80;
  *(void *)(inited + 56) = 0;
  strcpy((char *)(inited + 88), "exportService");
  *(_WORD *)(inited + 102) = -4864;
  *(void *)(inited + 128) = &type metadata for JSCalculatedValue;
  *(void *)(inited + 136) = &protocol witness table for JSCalculatedValue;
  *(void *)(inited + 104) = sub_19F002CC0;
  *(void *)(inited + 112) = 0;
  strcpy((char *)(inited + 144), "cryptography");
  *(unsigned char *)(inited + 157) = 0;
  *(_WORD *)(inited + 158) = -5120;
  uint64_t v1 = (objc_class *)type metadata accessor for JSCryptoObject();
  id v2 = objc_msgSend(objc_allocWithZone(v1), sel_init);
  *(void *)(inited + 184) = v1;
  *(void *)(inited + 192) = &off_1EF13D140;
  *(void *)(inited + 160) = v2;
  *(void *)(inited + 200) = 1953722216;
  *(void *)(inited + 208) = 0xE400000000000000;
  uint64_t v3 = (objc_class *)type metadata accessor for JSHostObject();
  id v4 = objc_msgSend(objc_allocWithZone(v3), sel_init);
  *(void *)(inited + 240) = v3;
  *(void *)(inited + 248) = &off_1EF13B438;
  *(void *)(inited + 216) = v4;
  *(void *)(inited + 256) = 0x796669746F6ELL;
  *(void *)(inited + 264) = 0xE600000000000000;
  uint64_t v5 = (objc_class *)type metadata accessor for JSNotifyObject();
  id v6 = objc_msgSend(objc_allocWithZone(v5), sel_init);
  *(void *)(inited + 296) = v5;
  *(void *)(inited + 304) = &off_1EF13D160;
  *(void *)(inited + 272) = v6;
  *(void *)(inited + 312) = 0x7473696C70;
  *(void *)(inited + 320) = 0xE500000000000000;
  uint64_t v7 = (objc_class *)type metadata accessor for JSPlistObject();
  id v8 = objc_msgSend(objc_allocWithZone(v7), sel_init);
  *(void *)(inited + 352) = v7;
  *(void *)(inited + 360) = &off_1EF13C108;
  *(void *)(inited + 328) = v8;
  *(void *)(inited + 368) = 0x6D6F646E6172;
  *(void *)(inited + 376) = 0xE600000000000000;
  unint64_t v9 = (objc_class *)type metadata accessor for JSRandomObject();
  id v10 = objc_msgSend(objc_allocWithZone(v9), sel_init);
  *(void *)(inited + 408) = v9;
  *(void *)(inited + 416) = &off_1EF13D2F0;
  *(void *)(inited + 384) = v10;
  unint64_t v11 = sub_19EFB532C(inited);
  Class v22 = (Class)type metadata accessor for JSPlatformUnavailableObject();
  uint64_t v23 = &off_1EF146BC0;
  *(void *)&long long v21 = objc_msgSend(objc_allocWithZone(v22), sel_init);
  sub_19EEBB420(&v21, (uint64_t)v20);
  LOBYTE(v9) = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v19 = v11;
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v20[3]);
  double v13 = MEMORY[0x1F4188790](v12);
  unint64_t v15 = (uint64_t *)((char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
  sub_19F01A918(*v15, 0x6D726F6674616C70, 0xE800000000000000, (char)v9, &v19);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  unint64_t v17 = v19;
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t JSStack.__allocating_init(prerequisites:virtualMachine:)(uint64_t a1, void *a2)
{
  memset(v6, 0, sizeof(v6));
  uint64_t v4 = swift_allocObject();
  JSStack.init(prerequisites:sentryConfiguration:virtualMachine:)(a1, (uint64_t)v6, a2);
  return v4;
}

uint64_t JSStack.__allocating_init(prerequisites:sentryConfiguration:virtualMachine:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  JSStack.init(prerequisites:sentryConfiguration:virtualMachine:)(a1, a2, a3);
  return v6;
}

void JSStack.init(prerequisites:sentryConfiguration:virtualMachine:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3;
  v3[20] = 0;
  v3[21] = 0;
  unint64_t v9 = self;
  id v10 = (void *)sub_19F1DBD4C();
  LODWORD(v9) = objc_msgSend(v9, sel_BOOLForEntitlement_, v10);

  if (v9)
  {
    sub_19F1DC7DC();
    if (qword_1EB392AA8 != -1) {
      swift_once();
    }
    sub_19F1DB7FC();
  }
  uint64_t v11 = MEMORY[0x1E4FBC860];
  v5[4] = MEMORY[0x1E4FBC860];
  sub_19EEC3ED8(a2, (uint64_t)(v5 + 5), &qword_1EB391C60);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v12 = (void *)swift_allocObject();
  v12[5] = 0;
  v12[6] = 0;
  void v12[2] = 0xD00000000000001BLL;
  v12[3] = 0x800000019F26D870;
  void v12[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  v12[7] = v11;
  long long v5[2] = v12;
  swift_retain();
  sub_19EE4AC98(25, 0);
  swift_release();
  uint64_t v13 = v5[2];
  swift_retain();
  uint64_t v14 = sub_19EE4A1F0(a3, 0x747865746E6F63, 0xE700000000000000, v13);
  swift_release();
  v5[3] = v14;
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  unint64_t v15 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v16 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v16);
  sub_19EEC4E5C(v15, v23);
  if (!v4)
  {
    os_unfair_lock_unlock(v16);
    int v17 = v23[0];
    swift_release();
    if (v17 == 2)
    {
      if ((os_variant_has_internal_content() & 1) == 0) {
        goto LABEL_15;
      }
    }
    else if ((v17 & 1) == 0)
    {
      goto LABEL_15;
    }
    if (qword_1E946FC20 != -1) {
      swift_once();
    }
    if ((byte_1E9498AF8 & 1) == 0)
    {
      type metadata accessor for TracingSupport();
      uint64_t v18 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FC08);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = 0;
      *(void *)(v18 + 16) = v19;
      v5[19] = v18;
      unint64_t v20 = (void *)v5[3];
      sub_19EE74D24(a1, (uint64_t)v23);
      sub_19EE4AEEC(v20, (uint64_t)v23);
      sub_19EEBD664((uint64_t)v23, (uint64_t *)&unk_1E946FBC0);
      goto LABEL_17;
    }
LABEL_15:
    v5[19] = 0;
LABEL_17:
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v5;
    *(void *)(v21 + 24) = a1;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_19F01AFE4;
    *(void *)(v22 + 24) = v21;
    swift_retain();
    swift_retain();
    sub_19EE4A4A0((void (*)(void *__return_ptr, void))sub_19F01EF90, v22);
    swift_release();
    swift_release();

    sub_19EEBD664(a2, &qword_1EB391C60);
    return;
  }
  os_unfair_lock_unlock(v16);
  __break(1u);
}

void sub_19EFFE184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 24);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(unsigned char *)(v6 + 24) = 1;
  *(void *)&v95[0] = sub_19F01EFA8;
  *((void *)&v95[0] + 1) = v6;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v94 = sub_19EE48674;
  *((void *)&v94 + 1) = &block_descriptor_439;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v4, sel_setExceptionHandler_, v7);
  _Block_release(v7);
  id v84 = objc_msgSend(v4, sel_globalObject);
  if (!v84) {
    goto LABEL_60;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  long long v83 = v4;
  uint64_t v82 = a2;
  if (v8)
  {
    unint64_t v9 = (void **)(a1 + 32);
    uint64_t v10 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v86 = v8;
    while (2)
    {
      sub_19EE747EC(v10, (uint64_t)&v100);
      switch(v104)
      {
        case 1:
          uint64_t v23 = v101;
          *((void *)&v94 + 1) = swift_getObjectType();
          *(void *)&long long aBlock = v23;
          swift_unknownObjectRetain();
          id v24 = v4;
          uint64_t v25 = sub_19F1DD42C();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&aBlock);
          id v26 = objc_msgSend(self, sel_valueWithObject_inContext_, v25, v24);

          swift_unknownObjectRelease();
          if (!v26) {
            goto LABEL_58;
          }
          id v27 = v26;
          uint64_t v28 = (void *)sub_19F1DBD4C();
          swift_bridgeObjectRelease();
          objc_msgSend(v84, sel_setValue_forProperty_, v27, v28);

          swift_unknownObjectRelease();
          uint64_t v4 = v83;
          goto LABEL_5;
        case 2:
          uint64_t v15 = v101;
          uint64_t v16 = v102;
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v15;
          *(void *)(v17 + 24) = v16;
          *(void *)&v95[0] = sub_19EE90074;
          *((void *)&v95[0] + 1) = v17;
          *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v94 = sub_19EE8FBBC;
          *((void *)&v94 + 1) = &block_descriptor_470;
          uint64_t v18 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          id v19 = objc_msgSend(self, sel_valueWithObject_inContext_, v18, v4);
          if (!v19) {
            goto LABEL_59;
          }
          unint64_t v20 = v19;
          _Block_release(v18);
          id v21 = v20;
          uint64_t v22 = (void *)sub_19F1DBD4C();
          swift_bridgeObjectRelease();
          objc_msgSend(v84, sel_setValue_forProperty_, v21, v22);

          swift_release();
          goto LABEL_5;
        case 3:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_5;
        default:
          sub_19EEBB420(&v100, (uint64_t)v97);
          sub_19EEC4154((uint64_t)v97, (uint64_t)v92);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3920F0);
          if (swift_dynamicCast())
          {
            v95[0] = v89;
            v95[1] = v90;
            uint64_t v96 = v91;
            long long aBlock = v87;
            long long v94 = v88;
            sub_19EEBDBA4((uint64_t)v95 + 8, (uint64_t)&v87);
            swift_beginAccess();
            uint64_t v11 = *v9;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *unint64_t v9 = v11;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v11 = sub_19EEB2F60(0, v11[2] + 1, 1, v11);
              *unint64_t v9 = v11;
            }
            unint64_t v14 = v11[2];
            unint64_t v13 = v11[3];
            if (v14 >= v13 >> 1)
            {
              uint64_t v11 = sub_19EEB2F60((void *)(v13 > 1), v14 + 1, 1, v11);
              *unint64_t v9 = v11;
            }
            void v11[2] = v14 + 1;
            sub_19EEBDC00(&v87, &v11[4 * v14 + 4]);
            swift_endAccess();
            sub_19EEDCA08((uint64_t)&aBlock);
          }
          else
          {
            uint64_t v91 = 0;
            long long v89 = 0u;
            long long v90 = 0u;
            long long v87 = 0u;
            long long v88 = 0u;
            sub_19EEBD664((uint64_t)&v87, &qword_1EB3910A8);
          }
          uint64_t v29 = v98;
          uint64_t v30 = v99;
          __swift_project_boxed_opaque_existential_1(v97, v98);
          int64_t v31 = (void *)sub_19EEDE99C((uint64_t)v4, v29, v30);
          if (v85)
          {
            swift_bridgeObjectRelease();

            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v97);
            uint64_t v74 = swift_allocObject();
            swift_weakInit();
            uint64_t v75 = swift_allocObject();
            *(void *)(v75 + 16) = v74;
            *(unsigned char *)(v75 + 24) = 0;
            *(void *)&v95[0] = sub_19F01EFA8;
            *((void *)&v95[0] + 1) = v75;
            *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
            *((void *)&aBlock + 1) = 1107296256;
            int64_t v62 = &block_descriptor_478;
            goto LABEL_55;
          }

          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v97);
LABEL_5:
          v10 += 48;
          if (--v8) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v8 = v86;
          break;
      }
      break;
    }
  }
  unint64_t v32 = (void *)sub_19F1DBD4C();
  unint64_t v33 = &off_1E59B6000;
  id v34 = objc_msgSend(v84, sel_valueForProperty_, v32);

  if (!v34) {
    goto LABEL_61;
  }
  uint64_t v102 = &type metadata for JSStrongReference;
  uint64_t v103 = &protocol witness table for JSStrongReference;
  *(void *)&long long v100 = v34;
  JSCallable.init(_:)(&v100, (uint64_t)&aBlock);
  if (!*((void *)&v94 + 1))
  {

    sub_19EEBD664((uint64_t)&aBlock, &qword_1EB390B68);
    uint64_t v60 = swift_allocObject();
    swift_weakInit();
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = v60;
    *(unsigned char *)(v61 + 24) = 0;
    *(void *)&v95[0] = sub_19F01EFA8;
    *((void *)&v95[0] + 1) = v61;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    int64_t v62 = &block_descriptor_447;
    goto LABEL_55;
  }
  long long v87 = aBlock;
  long long v88 = v94;
  *(void *)&long long v89 = *(void *)&v95[0];
  if (!v8)
  {
    uint64_t v36 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_49;
  }
  uint64_t v35 = v82 + 32;
  swift_bridgeObjectRetain();
  uint64_t v36 = (void *)MEMORY[0x1E4FBC868];
  do
  {
    sub_19EE747EC(v35, (uint64_t)&aBlock);
    if (BYTE8(v95[0]) != 3)
    {
      sub_19EE74F1C((uint64_t)&aBlock);
      goto LABEL_26;
    }
    long long v37 = aBlock;
    uint64_t v38 = v94;
    *((void *)&v94 + 1) = swift_getObjectType();
    *(void *)&long long aBlock = v38;
    swift_unknownObjectRetain();
    id v39 = v4;
    uint64_t v40 = sub_19F1DD42C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&aBlock);
    id v41 = objc_msgSend(self, sel_valueWithObject_inContext_, v40, v39);

    swift_unknownObjectRelease();
    if (v41)
    {
      char v42 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long aBlock = v36;
      unint64_t v44 = sub_19EEBD400(v37, *((uint64_t *)&v37 + 1));
      uint64_t v45 = v36[2];
      BOOL v46 = (v43 & 1) == 0;
      uint64_t v47 = v45 + v46;
      if (__OFADD__(v45, v46))
      {
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        sub_19F1DD65C();
        __break(1u);
        JUMPOUT(0x19EFFEE5CLL);
      }
      char v48 = v43;
      if (v36[3] < v47)
      {
        sub_19EE74D18(v47, v42);
        unint64_t v49 = sub_19EEBD400(v37, *((uint64_t *)&v37 + 1));
        if ((v48 & 1) != (v50 & 1)) {
          goto LABEL_64;
        }
        unint64_t v44 = v49;
        uint64_t v36 = (void *)aBlock;
        if ((v48 & 1) == 0) {
          goto LABEL_43;
        }
LABEL_40:
        uint64_t v56 = v36[7];

        *(void *)(v56 + 8 * v44) = v41;
LABEL_45:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v4 = v83;
        goto LABEL_26;
      }
      if (v42)
      {
        uint64_t v36 = (void *)aBlock;
        if (v43) {
          goto LABEL_40;
        }
      }
      else
      {
        sub_19EFBF724();
        uint64_t v36 = (void *)aBlock;
        if (v48) {
          goto LABEL_40;
        }
      }
LABEL_43:
      v36[(v44 >> 6) + 8] |= 1 << v44;
      *(_OWORD *)(v36[6] + 16 * v44) = v37;
      *(void *)(v36[7] + 8 * v44) = v41;
      uint64_t v57 = v36[2];
      BOOL v58 = __OFADD__(v57, 1);
      uint64_t v59 = v57 + 1;
      if (v58) {
        goto LABEL_57;
      }
      _OWORD v36[2] = v59;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    swift_bridgeObjectRetain();
    unint64_t v51 = sub_19EEBD400(v37, *((uint64_t *)&v37 + 1));
    char v53 = v52;
    swift_bridgeObjectRelease();
    if (v53)
    {
      char v54 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long aBlock = v36;
      if ((v54 & 1) == 0)
      {
        sub_19EFBF724();
        uint64_t v36 = (void *)aBlock;
      }
      swift_bridgeObjectRelease();
      uint64_t v55 = *(void **)(v36[7] + 8 * v51);
      sub_19EF6D12C(v51, (uint64_t)v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
LABEL_26:
    v35 += 48;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  unint64_t v33 = &off_1E59B6000;
LABEL_49:
  uint64_t v63 = (void *)sub_19F1DBD4C();
  id v64 = objc_msgSend(v84, (SEL)v33[421], v63);

  if (!v64) {
    goto LABEL_62;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_19F24EAD0;
  *(void *)(v65 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F670);
  *(void *)(v65 + 32) = v36;
  __swift_project_boxed_opaque_existential_1(&v87, *((uint64_t *)&v88 + 1));
  v66.super.Class isa = JSReference.unwrap()().super.isa;
  if (v67)
  {
    sub_19EE92E78((uint64_t)&v87);

    swift_bridgeObjectRelease();
    uint64_t v72 = swift_allocObject();
    swift_weakInit();
    uint64_t v73 = swift_allocObject();
    *(void *)(v73 + 16) = v72;
    *(unsigned char *)(v73 + 24) = 0;
    *(void *)&v95[0] = sub_19F01EFA8;
    *((void *)&v95[0] + 1) = v73;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    int64_t v62 = &block_descriptor_455;
  }
  else
  {
    Class isa = v66.super.isa;
    id v69 = [(objc_class *)v66.super.isa context];
    if (!v69) {
      goto LABEL_63;
    }
    unint64_t v70 = v69;
    unint64_t v71 = isa;
    swift_bridgeObjectRetain();
    id v76 = sub_19EE92270(v70, v71);
    swift_bridgeObjectRelease_n();

    id v77 = v76;
    uint64_t v78 = (void *)sub_19F1DBD4C();
    objc_msgSend(v64, sel_setValue_forProperty_, v77, v78);

    sub_19EE92E78((uint64_t)&v87);
    uint64_t v79 = swift_allocObject();
    swift_weakInit();
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = v79;
    *(unsigned char *)(v80 + 24) = 0;
    *(void *)&v95[0] = sub_19F01EFA8;
    *((void *)&v95[0] + 1) = v80;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    int64_t v62 = &block_descriptor_463;
  }
LABEL_55:
  *(void *)&long long v94 = sub_19EE48674;
  *((void *)&v94 + 1) = v62;
  unint64_t v81 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v4, sel_setExceptionHandler_, v81);
  _Block_release(v81);
}

uint64_t JSStack.__allocating_init(prerequisites:qualityOfService:sentryConfiguration:virtualMachine:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  JSStack.init(prerequisites:qualityOfService:sentryConfiguration:virtualMachine:)(a1, a2, a3, a4);
  return v8;
}

uint64_t JSStack.deinit()
{
  uint64_t v1 = v0;
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  id v2 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_19EEC4E5C(v2, &v9);
  os_unfair_lock_unlock(v3);
  int v4 = v9;
  swift_release();
  if (v4 == 2)
  {
    if ((os_variant_has_internal_content() & 1) == 0) {
      goto LABEL_9;
    }
  }
  else if ((v4 & 1) == 0)
  {
    goto LABEL_9;
  }
  if (*(void *)(v1 + 152)) {
    sub_19EFFF058(*(void **)(v1 + 24));
  }
LABEL_9:
  uint64_t v5 = *(void **)(v1 + 24);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  id v7 = v5;
  sub_19EEC9E30((uint64_t)nullsub_1, v6);
  swift_release();
  sub_19F1C1BFC();
  swift_release();

  swift_bridgeObjectRelease();
  sub_19EEBD664(v1 + 40, &qword_1EB391C60);
  swift_release();
  sub_19EE83660(*(void *)(v1 + 160));
  return v1;
}

char *sub_19EFFF058(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1E946FBA8 != -1) {
    swift_once();
  }
  int v4 = (void *)qword_1E946FBD8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
  id v6 = v4;
  uint64_t v40 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
  v7._uint64_t countAndFlagsBits = 0xD000000000000025;
  v7._object = (void *)0x800000019F26DBB0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  id v8 = objc_msgSend(a1, sel_name);
  if (v8)
  {
    unsigned __int8 v9 = v8;
    uint64_t v10 = sub_19F1DBD7C();
    uint64_t v12 = v11;

    *((void *)&v39 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v38 = v10;
    *((void *)&v38 + 1) = v12;
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  sub_19EEC3ED8((uint64_t)&v38, (uint64_t)v34, &qword_1EB393260);
  long long v32 = 0u;
  long long v33 = 0u;
  sub_19EEC3E70((uint64_t)v34, (uint64_t)&v32);
  char v37 = 0;
  long long v35 = v32;
  long long v36 = v33;
  unint64_t v13 = v40;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    unint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  long long v13[2] = v15 + 1;
  uint64_t v16 = &v13[5 * v15];
  long long v17 = v35;
  long long v18 = v36;
  *((unsigned char *)v16 + 64) = v37;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  uint64_t v40 = v13;
  sub_19EEBD664((uint64_t)&v38, &qword_1EB393260);
  v19._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v19._object = (void *)0x800000019F26DBE0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  unint64_t v20 = *(os_unfair_lock_s **)(v2 + 16);
  id v21 = v20 + 4;
  uint64_t v22 = v20 + 5;
  os_unfair_lock_lock(v20 + 5);
  sub_19EE4B37C(v21, &v35);
  os_unfair_lock_unlock(v22);
  *((void *)&v39 + 1) = MEMORY[0x1E4FBC150];
  LODWORD(v38) = v35;
  sub_19EEC3ED8((uint64_t)&v38, (uint64_t)v34, &qword_1EB393260);
  long long v32 = 0u;
  long long v33 = 0u;
  sub_19EEC3E70((uint64_t)v34, (uint64_t)&v32);
  char v37 = 0;
  long long v35 = v32;
  long long v36 = v33;
  uint64_t v23 = v40;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v23 = sub_19EEC3F3C(0, v23[2] + 1, 1, v23);
  }
  unint64_t v25 = v23[2];
  unint64_t v24 = v23[3];
  if (v25 >= v24 >> 1) {
    uint64_t v23 = sub_19EEC3F3C((void *)(v24 > 1), v25 + 1, 1, v23);
  }
  _OWORD v23[2] = v25 + 1;
  id v26 = &v23[5 * v25];
  long long v27 = v35;
  long long v28 = v36;
  *((unsigned char *)v26 + 64) = v37;
  *((_OWORD *)v26 + 2) = v27;
  *((_OWORD *)v26 + 3) = v28;
  uint64_t v40 = v23;
  sub_19EEBD664((uint64_t)&v38, &qword_1EB393260);
  v29._uint64_t countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  *(void *)(v5 + 32) = v40;
  *(void *)&long long v35 = v6;
  LOBYTE(v32) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v32);

  swift_bridgeObjectRelease();
  os_unfair_lock_lock(v22);
  sub_19EE4B37C(v21, &v35);
  os_unfair_lock_unlock(v22);
  if (v35)
  {
    os_unfair_lock_lock(v22);
    sub_19EE4B37C(v21, &v35);
    os_unfair_lock_unlock(v22);
    uint64_t v30 = notify_cancel(v35);
    MEMORY[0x1F4188790](v30);
    os_unfair_lock_lock(v22);
    sub_19F01EEDC(v21);
    os_unfair_lock_unlock(v22);
  }
  return sub_19F01ABC0(0xD000000000000014, 0x800000019F26DC10, (uint64_t)a1);
}

uint64_t JSStack.__deallocating_deinit()
{
  JSStack.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19EFFF4AC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 160);
  uint64_t v5 = *(void *)(v3 + 168);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    Swift::String v7 = sub_19F01CB28;
  }
  else
  {
    Swift::String v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_19EE47F40(v4);
}

uint64_t sub_19EFFF540(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_19F01CAF0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 160);
  *(void *)(v7 + 160) = v6;
  *(void *)(v7 + 168) = v5;
  sub_19EE47F40(v3);
  return sub_19EE83660(v8);
}

uint64_t JSStack.exceptionObserver.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 160);
  sub_19EE47F40(v1);
  return v1;
}

uint64_t (*JSStack.exceptionObserver.modify())()
{
  return j__swift_endAccess;
}

void sub_19EFFF6A4(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v30 = a2;
  uint64_t v5 = sub_19F1DB9FC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_19F1DBA3C();
  uint64_t v9 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    JSError.init(_:)(a1, (uint64_t)&v32);
    sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
    uint64_t v12 = (void *)sub_19F1DC87C();
    uint64_t v13 = swift_allocObject();
    long long v14 = v34;
    *(_OWORD *)(v13 + 72) = v35;
    long long v15 = v37;
    *(_OWORD *)(v13 + 88) = v36;
    *(_OWORD *)(v13 + 104) = v15;
    long long v16 = v33;
    *(_OWORD *)(v13 + 24) = v32;
    *(_OWORD *)(v13 + 40) = v16;
    *(void *)(v13 + 16) = v3;
    *(void *)(v13 + 120) = v38;
    *(_OWORD *)(v13 + 56) = v14;
    aBlock[4] = sub_19F01E438;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_19EEA4A68;
    aBlock[3] = &block_descriptor_428;
    long long v17 = _Block_copy(aBlock);
    swift_retain();
    sub_19F01E444((uint64_t)&v32);
    swift_release();
    sub_19F1DBA1C();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_19EE9784C(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
    sub_19EEC8CCC();
    sub_19F1DCC1C();
    MEMORY[0x19F3C6B90](0, v11, v8, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
    if (v30)
    {
      sub_19EF600C0();
      long long v18 = (void *)swift_allocError();
      long long v20 = v33;
      long long v19 = v34;
      *(_OWORD *)uint64_t v21 = v32;
      *(_OWORD *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 32) = v19;
      long long v23 = v36;
      long long v22 = v37;
      long long v24 = v35;
      *(void *)(v21 + 96) = v38;
      *(_OWORD *)(v21 + 64) = v23;
      *(_OWORD *)(v21 + 80) = v22;
      *(_OWORD *)(v21 + 48) = v24;
      sub_19F01E444((uint64_t)&v32);
      if (qword_1E946C9D8 != -1) {
        swift_once();
      }
      sub_19EFFFB90(v18, qword_1E94988B0, *(uint64_t *)algn_1E94988B8, qword_1E94988C0);
      sub_19F01E528((uint64_t)&v32);
    }
    else
    {
      uint64_t v25 = swift_allocObject();
      long long v26 = v34;
      *(_OWORD *)(v25 + 72) = v35;
      long long v27 = v37;
      *(_OWORD *)(v25 + 88) = v36;
      *(_OWORD *)(v25 + 104) = v27;
      long long v28 = v33;
      *(_OWORD *)(v25 + 24) = v32;
      *(_OWORD *)(v25 + 40) = v28;
      *(void *)(v25 + 16) = v3;
      *(void *)(v25 + 120) = v38;
      *(_OWORD *)(v25 + 56) = v26;
      swift_retain();
      sub_19F01E444((uint64_t)&v32);
      sub_19EEC9E30((uint64_t)sub_19F01E51C, v25);
      sub_19F01E528((uint64_t)&v32);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_19EFFFAF4(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, _OWORD *))(a1 + 160);
  if (v5)
  {
    long long v6 = *(_OWORD *)(a2 + 80);
    void v9[4] = *(_OWORD *)(a2 + 64);
    v9[5] = v6;
    uint64_t v10 = *(void *)(a2 + 96);
    long long v7 = *(_OWORD *)(a2 + 16);
    v9[0] = *(_OWORD *)a2;
    v9[1] = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    void v9[2] = *(_OWORD *)(a2 + 32);
    v9[3] = v8;
    swift_retain();
    v5(a1, v9);
    return sub_19EE83660((uint64_t)v5);
  }
  return result;
}

void sub_19EFFFB90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_19EEC3ED8(v4 + 40, (uint64_t)&v52, &qword_1EB391C60);
  uint64_t v9 = v54;
  sub_19EEBD664((uint64_t)&v52, &qword_1EB391C60);
  if (v9)
  {
    v42[0] = (uint64_t)a1;
    id v10 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (!swift_dynamicCast())
    {
      id v25 = a1;
      sub_19F03024C(a1, (uint64_t)&v52);
      sub_19F001600(&v52, a2, a3, a4);
      sub_19F01DB44((uint64_t)&v52);
      return;
    }
    uint64_t v12 = *((void *)&v52 + 1);
    uint64_t v11 = v52;
    uint64_t v13 = v53;
    char v14 = v54;
    uint64_t v15 = v55;
    char v16 = v56;
    uint64_t v17 = v57;
    uint64_t v18 = v58;
    uint64_t v41 = v59;
    uint64_t v40 = v60;
    long long v19 = v61;
    long long v20 = (void *)v61;
    uint64_t v21 = v62;
    if ((void)v61)
    {
      uint64_t v32 = v57;
      char v33 = v56;
      uint64_t v34 = v55;
      uint64_t v35 = v53;
      uint64_t v36 = v52;
      long long v37 = v61;
      uint64_t v38 = v62;
      long long v22 = (void *)sub_19F1DBD4C();
      id v23 = objc_msgSend(v20, sel_valueForProperty_, v22);

      if (!v23)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        return;
      }
      if (objc_msgSend(v23, sel_isBoolean))
      {
        unsigned int v24 = objc_msgSend(v23, sel_toBool);

        uint64_t v21 = v38;
        long long v19 = v37;
        uint64_t v13 = v35;
        uint64_t v11 = v36;
        uint64_t v15 = v34;
        char v16 = v33;
        uint64_t v17 = v32;
        if (v24)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_16:
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {

        uint64_t v21 = v38;
        long long v19 = v37;
        uint64_t v13 = v35;
        uint64_t v11 = v36;
        uint64_t v15 = v34;
        char v16 = v33;
        uint64_t v17 = v32;
      }
    }
    v42[0] = v11;
    v42[1] = v12;
    _OWORD v42[2] = v13;
    char v43 = v14;
    uint64_t v44 = v15;
    char v45 = v16;
    uint64_t v46 = v17;
    uint64_t v47 = v18;
    uint64_t v48 = v41;
    uint64_t v49 = v40;
    long long v50 = v19;
    uint64_t v51 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v39 = v20;
    id v26 = v20;
    sub_19F02FF84(v42, (uint64_t)&v52);
    sub_19F001600(&v52, a2, a3, a4);
    sub_19F01DB44((uint64_t)&v52);
    if (!v39)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    id v27 = v26;
    id v28 = objc_msgSend(v27, sel_context);
    id v29 = objc_msgSend(self, sel_valueWithBool_inContext_, 1, v28);

    if (v29)
    {
      id v30 = v29;
      int64_t v31 = (void *)sub_19F1DBD4C();
      objc_msgSend(v27, sel_setValue_forProperty_, v30, v31);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_18;
  }
}

void sub_19F000188(uint64_t a1, uint64_t a2)
{
  sub_19EF600C0();
  uint64_t v3 = (void *)swift_allocError();
  long long v5 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v5;
  *(_OWORD *)(v6 + 32) = v4;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 80);
  long long v9 = *(_OWORD *)(a2 + 48);
  *(void *)(v6 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 80) = v7;
  *(_OWORD *)(v6 + 48) = v9;
  sub_19F01E444(a2);
  if (qword_1E946C9D8 != -1) {
    swift_once();
  }
  sub_19EFFFB90(v3, qword_1E94988B0, *(uint64_t *)algn_1E94988B8, qword_1E94988C0);
}

uint64_t *JSStack.withUnsafeContext<A>(_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Promise();
  long long v4 = Promise.__allocating_init()();
  long long v5 = (void *)swift_allocObject();
  long long v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  long long v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  v7[3] = sub_19F01B0B4;
  v7[4] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19EEC9E30((uint64_t)sub_19F01EFB0, (uint64_t)v7);
  swift_release();
  swift_release();
  swift_release();
  return v4;
}

void sub_19F000380(uint64_t a1, uint64_t a2, void (*a3)(void **__return_ptr))
{
  a3(&v4);
  id v3 = v4;
  sub_19EE9086C(v4);
}

void sub_19F000420(uint64_t a1, uint64_t a2, void (*a3)(void))
{
}

uint64_t sub_19F0004A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v9 - v5;
  v7(v4);
  Promise.resolve(_:)((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

Swift::Void __swiftcall JSStack.makeRemoteInspectable()()
{
  uint64_t v0 = swift_allocObject();
  swift_weakInit();
  uint64_t v1 = (void *)swift_allocObject();
  uint64_t v1[2] = v0;
  v1[3] = sub_19F000668;
  v1[4] = 0;
  swift_retain();
  sub_19EEC9E30((uint64_t)sub_19F01EFB0, (uint64_t)v1);
  swift_release();
  swift_release();
}

void sub_19F000668(void *a1)
{
  JSRemoteInspectorSetLogToSystemConsole();
  objc_msgSend(a1, sel_setInspectable_, 1);
  uint64_t v2 = CFRunLoopGetCurrent();
  objc_msgSend(a1, sel__setDebuggerRunLoop_, v2);
}

uint64_t JSStack.evaluate(script:against:)(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for JSSource();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  sub_19EE94FA8(a1, (uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for JSSource);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_19EE948D8((uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for JSSource);
  *(void *)(v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392220);
  uint64_t v9 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)(v9 + 16) = v10;
  *(void *)(v9 + 24) = v11;
  *(unsigned char *)(v9 + 32) = 0;
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v9;
  v12[3] = sub_19F01B260;
  void v12[4] = v8;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  char v14 = (void *)swift_allocObject();
  long long v14[2] = v13;
  void v14[3] = sub_19F01B32C;
  v14[4] = v12;
  id v15 = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19EEC9E30((uint64_t)sub_19F01EFB0, (uint64_t)v14);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v9;
}

uint64_t JSStack.notify(withName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FC80);
  uint64_t v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v5 + 16) = v6;
  *(void *)(v5 + 24) = v7;
  *(unsigned char *)(v5 + 32) = 0;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v5;
  void v8[3] = sub_19F01B38C;
  v8[4] = v4;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v10[2] = v9;
  void v10[3] = sub_19F01B3C4;
  v10[4] = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19EEC9E30((uint64_t)sub_19F01EFB0, (uint64_t)v10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v5;
}

{
  uint64_t v2;
  void *v3;

  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  return MEMORY[0x1F4188298](sub_19F0028BC, 0, 0);
}

void sub_19F000AD4(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(a1, sel_globalObject);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = (void *)sub_19F1DBD4C();
    id v9 = objc_msgSend(v7, sel_valueForProperty_, v8);

    if (v9)
    {

      id v10 = objc_msgSend(v9, sel_toObject);
      if (v10)
      {
        sub_19F1DCBEC();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v16, 0, sizeof(v16));
      }
      sub_19EEBDC4C((uint64_t)v16, (uint64_t)v17, &qword_1EB393260);
      if (v17[3])
      {
        type metadata accessor for JSNotifyObject();
        if (swift_dynamicCast())
        {
          uint64_t v11 = (void *)v17[5];
          v17[0] = a2;
          v17[1] = a3;
          swift_bridgeObjectRetain();
          id v12 = a1;
          uint64_t v13 = sub_19F1DD62C();
          id v14 = objc_msgSend(self, sel_valueWithObject_inContext_, v13, v12);
          swift_unknownObjectRelease();

          if (v14)
          {
            sub_19F16898C(v14);

            return;
          }
          goto LABEL_14;
        }
      }
      else
      {
        sub_19EEBD664((uint64_t)v17, &qword_1EB393260);
      }
      sub_19EF600C0();
      swift_allocError();
      *(void *)uint64_t v15 = 0xD000000000000025;
      *(void *)(v15 + 8) = 0x800000019F26DB80;
      *(void *)(v15 + 16) = 0;
      *(unsigned char *)(v15 + 24) = 1;
      *(void *)(v15 + 32) = 0;
      *(unsigned char *)(v15 + 40) = 1;
      *(_OWORD *)(v15 + 48) = 0u;
      *(_OWORD *)(v15 + 64) = 0u;
      *(_OWORD *)(v15 + 80) = 0u;
      *(void *)(v15 + 96) = 0;
      swift_willThrow();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_19F000D10(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v7 = (os_unfair_lock_s *)(*(void *)(a1 + 16) + 16);
  os_unfair_lock_lock(v7);
  sub_19EE978D8(&v11);
  os_unfair_lock_unlock(v7);
  if ((v11 & 1) == 0)
  {
    sub_19EFC56B0();
    uint64_t v8 = (void *)swift_allocError();
    uint64_t v10 = v9;
    swift_bridgeObjectRetain();
    *(unsigned char *)uint64_t v10 = sub_19EFC55D0() & 1;
    *(void *)(v10 + 8) = a2;
    *(void *)(v10 + 16) = a3;
    *(double *)(v10 + 24) = a4;
    sub_19F0804B4(v8);
  }
}

void sub_19F000DF4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *(os_unfair_lock_s **)(a2 + 16);
  void v12[4] = sub_19EE97938;
  v12[5] = a2;
  id v6 = v5 + 4;
  os_unfair_lock_lock(v5 + 4);
  sub_19F01EEC0(&v13);
  os_unfair_lock_unlock(v6);
  if ((v13 & 1) == 0)
  {
    sub_19EEC3ED8(a3, (uint64_t)&v13, &qword_1EB390DE0);
    if (v14 == 1)
    {
      sub_19EEBD664((uint64_t)&v13, &qword_1EB390DE0);
    }
    else
    {
      uint64_t v7 = (__CFRunLoopTimer *)MEMORY[0x19F3C95C0](&v13);
      if (v7)
      {
        uint64_t v8 = v7;
        CFRunLoopTimerInvalidate(v7);
      }
      sub_19EE9DD1C((uint64_t)&v13);
    }
    sub_19F0804B4(a1);
    uint64_t v13 = 0;
    uint64_t v11 = 0;
    v12[0] = 0;
    uint64_t v10 = 0;
    uint64_t v9 = (void *)sub_19F1DBD4C();
    JESignpostArgumentsFromString(v9, &v13, v12, &v11, &v10);

    JESignpostEmitTrace();
  }
}

uint64_t JSStack.dispatcher<A, B>(for:asPartOf:)(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x1F4188298](sub_19F000FA8, 0, 0);
}

uint64_t sub_19F000FA8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[2];
  v2[3] = v0[4];
  v2[4] = &protocol witness table for JSStack;
  *uint64_t v2 = v1;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  swift_retain();
  return v4();
}

uint64_t sub_19F001028()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F001150()
{
  sub_19EE94E88(*(void *)(v0 + 568), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
  sub_19EE95960(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0012A0()
{
  *(void *)(v0 + 304) = 0;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 288) = 0u;
  *(void *)(v0 + 664) = 0;
  unint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 200);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 160), v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  *(void *)(v0 + 672) = sub_19EE9A808(0x656D69746E757224, 0xE800000000000000, 0x6863746170736964, 0xE800000000000000, v7, v8, *(void *)(v0 + 208), *(unsigned __int8 *)(v0 + 216), v3, v2, v1, (void *)(v0 + 272), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_19EE3AFD0, 0, 0);
}

uint64_t sub_19F0013E4()
{
  uint64_t v1 = v0[71];
  uint64_t v2 = v0[61];
  swift_release();
  sub_19EEBD664((uint64_t)(v0 + 34), (uint64_t *)&unk_1E946FC10);
  sub_19EE94E88(v2, (uint64_t (*)(void))type metadata accessor for JSStack.DecoratedIntent);
  sub_19EE94E88(v1, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
  sub_19EE95960((uint64_t)(v0 + 20));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_19F001574(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_19EFFFB90(a1, a3, a4, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_19F001600(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v73 = a3;
  uint64_t v60 = a2;
  uint64_t v8 = sub_19F1DB5AC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v59 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for SentryEvent();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_19EEC3ED8(v4 + 40, (uint64_t)&v65, &qword_1EB391C60);
  if (!*((void *)&v66 + 1)) {
    return sub_19EEBD664((uint64_t)&v65, &qword_1EB391C60);
  }
  uint64_t v57 = v4;
  uint64_t v58 = v5;
  v72[5] = v70;
  v72[6] = v71;
  v72[3] = v68;
  v72[4] = v69;
  v72[0] = v65;
  v72[1] = v66;
  v72[2] = v67;
  uint64_t v49 = v8;
  uint64_t v50 = *((void *)&v67 + 1);
  uint64_t v48 = v9;
  uint64_t v14 = v68;
  uint64_t v15 = v70;
  uint64_t v52 = *((void *)&v69 + 1);
  uint64_t v16 = v71;
  uint64_t v54 = *((void *)&v70 + 1);
  uint64_t v17 = *((void *)&v71 + 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAE8);
  uint64_t v18 = a4;
  long long v19 = (_OWORD *)swift_allocObject();
  long long v20 = a1[4];
  long long v21 = a1[6];
  long long v22 = a1[7];
  v19[7] = a1[5];
  v19[8] = v21;
  v19[9] = v22;
  long long v23 = *a1;
  long long v24 = a1[1];
  v19[1] = xmmword_19F24EAD0;
  void v19[2] = v23;
  long long v25 = a1[2];
  long long v26 = a1[3];
  _OWORD v19[3] = v24;
  v19[4] = v25;
  v19[5] = v26;
  v19[6] = v20;
  uint64_t v55 = v17;
  swift_bridgeObjectRetain();
  uint64_t v51 = v14;
  swift_bridgeObjectRetain();
  uint64_t v53 = v15;
  uint64_t v27 = v18;
  swift_bridgeObjectRetain();
  uint64_t v56 = v16;
  swift_bridgeObjectRetain();
  sub_19F01DC4C((uint64_t)a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v28 = v59;
  sub_19F1DB59C();
  uint64_t v29 = sub_19F1DB58C();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v49);
  *(void *)&long long v65 = v29;
  *((void *)&v65 + 1) = v31;
  uint64_t v63 = 45;
  unint64_t v64 = 0xE100000000000000;
  uint64_t v61 = 0;
  unint64_t v62 = 0xE000000000000000;
  sub_19EEC4910();
  sub_19F1DCB8C();
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_19F1DBE1C();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  sub_19F1DB56C();
  if (qword_1E946CA88 != -1) {
    swift_once();
  }
  *(uint64_t *)((char *)v13 + v11[15]) = 1;
  uint64_t v36 = qword_1E94988C8;
  uint64_t v35 = unk_1E94988D0;
  *uint64_t v13 = v32;
  v13[1] = v34;
  uint64_t v37 = v51;
  long long v13[2] = v50;
  v13[3] = v37;
  uint64_t v38 = (uint64_t *)((char *)v13 + v11[7]);
  void *v38 = 0x697263736176616ALL;
  v38[1] = 0xEA00000000007470;
  long long v39 = (uint64_t *)((char *)v13 + v11[8]);
  *long long v39 = v52;
  v39[1] = v53;
  uint64_t v40 = (uint64_t *)((char *)v13 + v11[9]);
  *uint64_t v40 = 0;
  v40[1] = 0;
  uint64_t v41 = (uint64_t *)((char *)v13 + v11[10]);
  void *v41 = v54;
  v41[1] = v56;
  *(uint64_t *)((char *)v13 + v11[11]) = v55;
  *(uint64_t *)((char *)v13 + v11[12]) = (uint64_t)v19;
  uint64_t v42 = qword_1E94988D8;
  uint64_t v43 = unk_1E94988E0;
  uint64_t v44 = (uint64_t *)((char *)v13 + v11[13]);
  *uint64_t v44 = v60;
  v44[1] = v73;
  v44[2] = v27;
  char v45 = (uint64_t *)((char *)v13 + v11[14]);
  *char v45 = v36;
  v45[1] = v35;
  _OWORD v45[2] = v42;
  v45[3] = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19F001A30();
  sub_19EE94E88((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SentryEvent);
  return sub_19EEA6ED8((uint64_t)v72);
}

uint64_t sub_19F001A30()
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_19F1DAD5C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEC3ED8(v0 + 40, (uint64_t)&v27, &qword_1EB391C60);
  if (!*((void *)&v28 + 1)) {
    return sub_19EEBD664((uint64_t)&v27, &qword_1EB391C60);
  }
  long long v37 = v30;
  long long v38 = v31;
  long long v39 = v32;
  long long v40 = v33;
  long long v34 = v27;
  long long v35 = v28;
  long long v36 = v29;
  char v6 = sub_19F0EBEC0();
  if (v6 == 2)
  {
    if (objc_msgSend(self, sel_diagnosticsSubmissionAllowed)) {
      goto LABEL_10;
    }
LABEL_7:
    if (qword_1E946FC20 != -1) {
      swift_once();
    }
    if (byte_1E9498AF8 != 1) {
      return sub_19EEA6ED8((uint64_t)&v34);
    }
    goto LABEL_10;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_10:
  sub_19F1DADCC();
  swift_allocObject();
  sub_19F1DADBC();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F26CF8], v2);
  sub_19F1DAD7C();
  uint64_t v8 = type metadata accessor for SentryEvent();
  sub_19EE9784C(&qword_1E946C9B8, (void (*)(uint64_t))type metadata accessor for SentryEvent);
  uint64_t v9 = sub_19F1DADAC();
  if (!v1)
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
    uint64_t v13 = self;
    uint64_t v14 = (void *)sub_19F1DB3EC();
    *(void *)&long long v27 = 0;
    id v15 = objc_msgSend(v13, sel_JSONObjectWithData_options_error_, v14, 0, &v27);

    if (v15)
    {
      id v16 = (id)v27;
      sub_19F1DCBEC();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
      if (swift_dynamicCast())
      {
        sub_19EEA072C(v11, v12);
        swift_release();
        uint64_t v17 = v26[1];
        uint64_t v18 = *((void *)&v35 + 1);
        uint64_t v19 = v36;
        __swift_project_boxed_opaque_existential_1(&v34, *((uint64_t *)&v35 + 1));
        *(void *)&long long v27 = v17;
        *((void *)&v27 + 1) = MEMORY[0x1E4FBC860];
        uint64_t v20 = *((void *)&v37 + 1);
        uint64_t v21 = v38;
        long long v22 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8);
        swift_bridgeObjectRetain();
        v22(&v27, v20, v21, v18, v19);
        swift_bridgeObjectRelease();
        sub_19EEA6ED8((uint64_t)&v34);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      sub_19EF5B580();
      swift_allocError();
      uint64_t v24 = MEMORY[0x1E4FBC860];
      *long long v25 = v8;
      v25[1] = v24;
      _OWORD v25[2] = 0;
      void v25[3] = 0;
    }
    else
    {
      id v23 = (id)v27;
      sub_19F1DB19C();
    }
    swift_willThrow();
    sub_19EEA072C(v11, v12);
  }
  swift_release();
  return sub_19EEA6ED8((uint64_t)&v34);
}

uint64_t sub_19F001E74(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  long long v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_19EEB8A6C;
  v5[4] = *v4;
  return MEMORY[0x1F4188298](sub_19F000FA8, 0, 0);
}

uint64_t sub_19F001F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_19EE17780;
  return JSStack.dispatch<A>(_:objectGraph:)(a1, a2, a3, a4, a5);
}

void *sub_19F002018(uint64_t a1)
{
  return JSStack.performRequest(_:)(a1);
}

uint64_t sub_19F00203C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19EE17780;
  return JSStack.performRequest(_:)(a1, a2);
}

uint64_t JSStack.performRequest(_:)(uint64_t a1, uint64_t a2)
{
  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  type metadata accessor for JSResponse();
  v3[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F00217C, 0, 0);
}

uint64_t sub_19F00217C()
{
  *(void *)(v0 + 192) = JSStack.performRequest(_:)(*(void *)(v0 + 168));
  return MEMORY[0x1F4188298](sub_19F0021E8, 0, 0);
}

uint64_t sub_19F0021E8()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[23];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_19F0022A8;
  v0[10] = swift_continuation_init();
  uint64_t v3 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v3 + 72) = 1;
  sub_19EE6EBE4(v3);
  sub_19EEBD664(v3, &qword_1EB3912C0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0022A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 200) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F0023E4;
  }
  else
  {
    sub_19EE948D8(*(void *)(v1 + 184), *(void *)(v1 + 160), (uint64_t (*)(void))type metadata accessor for JSResponse);
    uint64_t v3 = sub_19EE28B50;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F0023E4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t JSStack.withUnsafeContext<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  long long v5[2] = a1;
  return MEMORY[0x1F4188298](sub_19F002478, 0, 0);
}

uint64_t sub_19F002478()
{
  v0[7] = JSStack.withUnsafeContext<A>(_:)(v0[3], v0[4]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  uint64_t v2 = type metadata accessor for Promise();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v1 = v0;
  v1[1] = sub_19F002564;
  uint64_t v4 = v0[2];
  return Future.result.getter(v4, v2, WitnessTable);
}

uint64_t sub_19F002564()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0026DC;
  }
  else {
    uint64_t v2 = sub_19F002678;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F002678()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0026DC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t JSStack.evaluate(script:against:)(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  return MEMORY[0x1F4188298](sub_19F002764, 0, 0);
}

uint64_t sub_19F002764()
{
  *(void *)(v0 + 192) = JSStack.evaluate(script:against:)(*(void *)(v0 + 168), *(void **)(v0 + 176));
  return MEMORY[0x1F4188298](sub_19F0027D4, 0, 0);
}

uint64_t sub_19F0027D4()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19EEDCDDC;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EE9B38C(v2);
  sub_19EEBD664(v2, &qword_1EB3912E0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0028BC()
{
  v0[23] = JSStack.notify(withName:)(v0[20], v0[21]);
  return MEMORY[0x1F4188298](sub_19F00292C, 0, 0);
}

uint64_t sub_19F00292C()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[3] = sub_19F0029E8;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EE7EC80(v2);
  sub_19EEBD664(v2, &qword_1E946FBE0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0029E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1)
  {
    swift_willThrow();
    uint64_t v2 = sub_19F002B68;
  }
  else
  {
    uint64_t v2 = sub_19F002B04;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F002B04()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F002B68()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F002BCC()
{
  return 3;
}

uint64_t sub_19F002BD4(void *a1, void *a2, uint64_t a3, char a4)
{
  objc_msgSend(a1, sel_setException_, a2);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_19EFFF6A4(a2, a4 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_19F002C58(uint64_t (*a1)(void))
{
  return a1();
}

id sub_19F002C80(uint64_t a1)
{
  return _sSo7JSValueC9JetEngineE12makeFunction2in5whereABSo9JSContextC_AbH_ABSayABGtKctFZ_0(a1, (uint64_t)sub_19EE28FB0, 0);
}

id sub_19F002CC0(uint64_t a1)
{
  return _sSo7JSValueC9JetEngineE12makeFunction2in5whereABSo9JSContextC_AbH_ABSayABGtKctFZ_0(a1, (uint64_t)sub_19EE90094, 0);
}

uint64_t sub_19F002D00()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v1 + 5);
  sub_19EE4B37C(&v1[4]._os_unfair_lock_opaque, &v4);
  os_unfair_lock_unlock(v1 + 5);
  if (v4)
  {
    os_unfair_lock_lock(v1 + 5);
    sub_19EE4B37C(&v1[4]._os_unfair_lock_opaque, &v4);
    os_unfair_lock_unlock(v1 + 5);
    uint64_t v2 = notify_cancel(v4);
    MEMORY[0x1F4188790](v2);
    os_unfair_lock_lock(v1 + 5);
    sub_19EEDEF50(&v1[4]._os_unfair_lock_opaque);
    os_unfair_lock_unlock(v1 + 5);
  }
  swift_release();
  return v0;
}

uint64_t sub_19F002DFC()
{
  sub_19F002D00();
  return swift_deallocClassInstance();
}

void sub_19F002E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x19F3C95C0](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_beginAccess();
      sub_19EE3FC7C(v9, a4, *(_DWORD *)(a5 + 16));
      swift_release();
    }
  }
}

uint64_t sub_19F002EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_19F002F3C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a4[3];
  uint64_t v6 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  if (v8)
  {
    v13[0] = v7;
    v13[1] = v8;
    id v9 = a1;
    uint64_t v10 = sub_19F1DD42C();
    sub_19EFE2310((uint64_t)v13);
  }
  else
  {
    id v11 = a1;
    uint64_t v10 = 0;
  }
  id v12 = objc_msgSend(self, sel_valueWithObject_inContext_, v10, a1);
  swift_unknownObjectRelease();

  if (!v12) {
    __break(1u);
  }
}

uint64_t sub_19F003024(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = a2;
  return MEMORY[0x1F4188298](sub_19F003044, 0, 0);
}

uint64_t sub_19F003044()
{
  if (*(void *)(*(void *)(v0 + 192) + 16)
    && (unint64_t v1 = sub_19EEAB4C0((uint64_t)&type metadata for JetEngineBootstrap.URLProtocolHandler), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 192) + 56) + 32 * v1, v0 + 48);
    sub_19EEBDC00((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    sub_19EEBDBA4(v0 + 16, v0 + 80);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(_OWORD **)(v0 + 184);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      long long v4 = *(_OWORD *)(v0 + 128);
      *uint64_t v3 = *(_OWORD *)(v0 + 112);
      v3[1] = v4;
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B38);
    if (swift_dynamicCast())
    {
      sub_19EF2B590(*(void (***)(uint64_t))(v0 + 184));
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B40);
    if (swift_dynamicCast())
    {
      sub_19EF30120(*(uint64_t **)(v0 + 184));
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B48);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 208) = *(void *)(v0 + 168);
      uint64_t v17 = (uint64_t (*)(uint64_t))((char *)&dword_1E9472A60 + dword_1E9472A60);
      id v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 216) = v15;
      *id v15 = v0;
      v15[1] = sub_19F00355C;
      uint64_t v16 = *(void *)(v0 + 184);
      return v17(v16);
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 144) = 0;
      *(void *)(v0 + 152) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v5 = sub_19EF270B0();
    if (!v5)
    {
      uint64_t v13 = *(void *)(v0 + 184);
      *(_OWORD *)uint64_t v13 = xmmword_19F24DBD0;
      *(void *)(v13 + 16) = 0;
      *(void *)(v13 + 24) = 0;
LABEL_13:
      uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
      return v14();
    }
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    id v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v9;
    *id v9 = v0;
    v9[1] = sub_19F003468;
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 192);
    return sub_19F071874(v10, v7, v11, (uint64_t)&type metadata for JetEngineBootstrap.URLProtocolHandler, v7, v8);
  }
}

uint64_t sub_19F003468()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F00355C()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_19F0036EC;
  }
  else {
    char v2 = sub_19F003670;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F003670()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0036EC()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F003768(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  return MEMORY[0x1F4188298](sub_19F003788, 0, 0);
}

uint64_t sub_19F003788()
{
  if (*(void *)(*(void *)(v0 + 168) + 16) && (unint64_t v1 = sub_19EEAB4C0((uint64_t)&type metadata for Bag), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 168) + 56) + 32 * v1, v0 + 48);
    sub_19EEBDC00((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    sub_19EEBDBA4(v0 + 16, v0 + 80);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void **)(v0 + 160);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      *uint64_t v3 = *(void *)(v0 + 128);
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470AF8);
    if (swift_dynamicCast())
    {
      sub_19EF2B838(*(void (***)(uint64_t))(v0 + 160));
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B00);
    if (swift_dynamicCast())
    {
      sub_19EF303D4(*(void (***)(uint64_t))(v0 + 160));
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470B08);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 184) = *(void *)(v0 + 144);
      id v15 = (uint64_t (*)(uint64_t))((char *)&dword_1E9472840 + dword_1E9472840);
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_19F003C84;
      uint64_t v14 = *(void *)(v0 + 160);
      return v15(v14);
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 112) = 0;
      *(void *)(v0 + 120) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v4 = sub_19EF270BC();
    if (!v4)
    {
      **(void **)(v0 + 160) = 0;
LABEL_13:
      id v12 = *(uint64_t (**)(void))(v0 + 8);
      return v12();
    }
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_19F003B90;
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 168);
    return sub_19F071874(v9, v6, v10, (uint64_t)&type metadata for Bag, v6, v7);
  }
}

uint64_t sub_19F003B90()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F003C84()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_19F003E14;
  }
  else {
    char v2 = sub_19F003D98;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F003D98()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F003E14()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F003E90(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
  *(void *)(v1 + 176) = sub_19EEBDC10(0, &qword_1EB392278);
  return MEMORY[0x1F4188298](sub_19F003F10, 0, 0);
}

uint64_t sub_19F003F10()
{
  if (*(void *)(*(void *)(v0 + 168) + 16) && (unint64_t v1 = sub_19EEAB4C0(*(void *)(v0 + 176)), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 168) + 56) + 32 * v1, v0 + 48);
    sub_19EEBDC00((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    sub_19EEBDBA4(v0 + 16, v0 + 80);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      uint64_t v3 = *(void *)(v0 + 160);
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B78);
    if (swift_dynamicCast())
    {
      uint64_t v3 = sub_19EF2B030();
LABEL_11:
      swift_release();
      *(void *)(v0 + 128) = v3;
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B80);
    if (swift_dynamicCast())
    {
      uint64_t v3 = sub_19EF2FBA0();
      goto LABEL_11;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B88);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 192) = *(void *)(v0 + 152);
      id v12 = (uint64_t (__cdecl *)())((char *)&dword_1E9472A90 + dword_1E9472A90);
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_19F0044A8;
      return v12();
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 112) = 0;
      *(void *)(v0 + 120) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v3 = sub_19EF270A4();
    if (!v3)
    {
LABEL_13:
      uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v10(v3);
    }
    uint64_t v5 = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_19F004364;
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 176);
    return sub_19F071874(v0 + 128, v3, v7, v8, v3, v5);
  }
}

uint64_t sub_19F004364()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 128);
    uint64_t v7 = *(uint64_t (**)(uint64_t))(v3 + 8);
    return v7(v6);
  }
}

uint64_t sub_19F0044A8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_19F004660;
  }
  else
  {
    *(void *)(v4 + 216) = a1;
    *(void *)(v4 + 128) = a1;
    uint64_t v5 = sub_19F0045D4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_19F0045D4()
{
  uint64_t v1 = *(void *)(v0 + 216);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_19F004660()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0046DC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_19F01EDD4;
  }
  else
  {
    *(void *)(v4 + 216) = a1;
    *(void *)(v4 + 128) = a1;
    uint64_t v5 = sub_19F01EDD8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_19F004808()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F01EFAC;
  }
  else {
    uint64_t v2 = sub_19F01EFD8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F00491C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F004A10()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F004660;
  }
  else {
    uint64_t v2 = sub_19F004B24;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F004B24()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  *(unsigned char *)(v1 + 9) = 0;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F004BB0()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F01EFB8;
  }
  else {
    uint64_t v2 = sub_19F01EDC0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F004CC4(uint64_t a1, uint64_t a2)
{
  unsigned char v2[24] = a1;
  v2[25] = a2;
  v2[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
  return MEMORY[0x1F4188298](sub_19F004D38, 0, 0);
}

uint64_t sub_19F004D38()
{
  if (*(void *)(*(void *)(v0 + 200) + 16) && (unint64_t v1 = sub_19EEAB4C0(*(void *)(v0 + 208)), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 200) + 56) + 32 * v1, v0 + 88);
    sub_19EEBDC00((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 56));
    sub_19EEBDBA4(v0 + 56, v0 + 120);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v0 + 192);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
      sub_19EEBB420((long long *)(v0 + 16), v3);
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A8);
    if (swift_dynamicCast())
    {
      sub_19EF2D868(*(void *)(v0 + 192));
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708B0);
    if (swift_dynamicCast())
    {
      sub_19EF32798(*(void *)(v0 + 192));
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708B8);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 224) = *(void *)(v0 + 176);
      uint64_t v17 = (uint64_t (*)(uint64_t))((char *)&dword_1E9472940 + dword_1E9472940);
      id v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v15;
      *id v15 = v0;
      v15[1] = sub_19F004808;
      uint64_t v16 = *(void *)(v0 + 192);
      return v17(v16);
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 152) = 0;
      *(void *)(v0 + 160) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v4 = sub_19EF270D4();
    if (!v4)
    {
      uint64_t v13 = *(void *)(v0 + 192);
      *(void *)(v13 + 32) = 0;
      *(_OWORD *)uint64_t v13 = 0u;
      *(_OWORD *)(v13 + 16) = 0u;
LABEL_13:
      uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
      return v14();
    }
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_19F01EFBC;
    uint64_t v9 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 192);
    return sub_19F071874(v11, v6, v9, v10, v6, v7);
  }
}

uint64_t sub_19F005164(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 232) = a1;
  *(void *)(v2 + 240) = a2;
  return MEMORY[0x1F4188298](sub_19F005184, 0, 0);
}

uint64_t sub_19F005184()
{
  if (*(void *)(*(void *)(v0 + 240) + 16)
    && (unint64_t v1 = sub_19EEAB4C0((uint64_t)&type metadata for JetPackAssetSession.Configuration), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 240) + 56) + 32 * v1, v0 + 128);
    sub_19EEBDC00((_OWORD *)(v0 + 128), (_OWORD *)(v0 + 96));
    sub_19EEBDBA4(v0 + 96, v0 + 160);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(_OWORD **)(v0 + 232);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
      *uint64_t v3 = *(_OWORD *)(v0 + 16);
      long long v4 = *(_OWORD *)(v0 + 32);
      long long v5 = *(_OWORD *)(v0 + 48);
      long long v6 = *(_OWORD *)(v0 + 80);
      v3[3] = *(_OWORD *)(v0 + 64);
      v3[4] = v6;
      v3[1] = v4;
      void v3[2] = v5;
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 160);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94728A0);
    if (swift_dynamicCast())
    {
      sub_19EF2DB10(*(void *)(v0 + 232));
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94728A8);
    if (swift_dynamicCast())
    {
      sub_19EF32A54(*(_OWORD **)(v0 + 232));
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 160);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94728B0);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 256) = *(void *)(v0 + 216);
      uint64_t v19 = (uint64_t (*)(uint64_t))((char *)&dword_1E94728B8 + dword_1E94728B8);
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 264) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_19F0056B0;
      uint64_t v18 = *(void *)(v0 + 232);
      return v19(v18);
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 192) = 0;
      *(void *)(v0 + 200) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v7 = sub_19EF270E0();
    if (!v7)
    {
      id v15 = *(_OWORD **)(v0 + 232);
      void v15[3] = 0u;
      v15[4] = 0u;
      v15[1] = 0u;
      uint64_t v15[2] = 0u;
      *id v15 = 0u;
LABEL_13:
      uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
      return v16();
    }
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_19F0055BC;
    uint64_t v12 = *(void *)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 240);
    return sub_19F071874(v12, v9, v13, (uint64_t)&type metadata for JetPackAssetSession.Configuration, v9, v10);
  }
}

uint64_t sub_19F0055BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F0056B0()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_19F005840;
  }
  else {
    char v2 = sub_19F0057C4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0057C4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 160);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F005840()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 160);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0058BC(uint64_t a1, uint64_t a2)
{
  unsigned char v2[24] = a1;
  v2[25] = a2;
  v2[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94709B0);
  return MEMORY[0x1F4188298](sub_19F005930, 0, 0);
}

uint64_t sub_19F005930()
{
  if (*(void *)(*(void *)(v0 + 200) + 16) && (unint64_t v1 = sub_19EEAB4C0(*(void *)(v0 + 208)), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 200) + 56) + 32 * v1, v0 + 88);
    sub_19EEBDC00((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 56));
    sub_19EEBDBA4(v0 + 56, v0 + 120);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v0 + 192);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
      sub_19EEBB420((long long *)(v0 + 16), v3);
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94728F0);
    if (swift_dynamicCast())
    {
      sub_19EF2DDB8(*(void *)(v0 + 192));
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94728F8);
    if (swift_dynamicCast())
    {
      sub_19EF32D08(*(void *)(v0 + 192));
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472900);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 224) = *(void *)(v0 + 176);
      uint64_t v17 = (uint64_t (*)(uint64_t))((char *)&dword_1E9472908 + dword_1E9472908);
      id v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v15;
      *id v15 = v0;
      v15[1] = sub_19F005E50;
      uint64_t v16 = *(void *)(v0 + 192);
      return v17(v16);
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 152) = 0;
      *(void *)(v0 + 160) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v4 = sub_19EF270EC();
    if (!v4)
    {
      uint64_t v13 = *(void *)(v0 + 192);
      *(void *)(v13 + 32) = 0;
      *(_OWORD *)uint64_t v13 = 0u;
      *(_OWORD *)(v13 + 16) = 0u;
LABEL_13:
      uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
      return v14();
    }
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_19F005D5C;
    uint64_t v9 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 192);
    return sub_19F071874(v11, v6, v9, v10, v6, v7);
  }
}

uint64_t sub_19F005D5C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F005E50()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_19F005FE0;
  }
  else {
    char v2 = sub_19F005F64;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F005F64()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F005FE0()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F00605C(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
  *(void *)(v1 + 176) = sub_19EEBDC10(0, (unint64_t *)&qword_1E946DC70);
  return MEMORY[0x1F4188298](sub_19F0060DC, 0, 0);
}

uint64_t sub_19F0060DC()
{
  if (*(void *)(*(void *)(v0 + 168) + 16) && (unint64_t v1 = sub_19EEAB4C0(*(void *)(v0 + 176)), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 168) + 56) + 32 * v1, v0 + 48);
    sub_19EEBDC00((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    sub_19EEBDBA4(v0 + 16, v0 + 80);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      uint64_t v3 = *(void *)(v0 + 160);
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94727F0);
    if (swift_dynamicCast())
    {
      uint64_t v3 = sub_19EF2E060();
LABEL_11:
      swift_release();
      *(void *)(v0 + 128) = v3;
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94727F8);
    if (swift_dynamicCast())
    {
      uint64_t v3 = sub_19EF32FC4();
      goto LABEL_11;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472800);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 192) = *(void *)(v0 + 152);
      uint64_t v12 = (uint64_t (__cdecl *)())((char *)&dword_1E9472808 + dword_1E9472808);
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_19F0046DC;
      return v12();
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 112) = 0;
      *(void *)(v0 + 120) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v3 = sub_19EF270F8();
    if (!v3)
    {
LABEL_13:
      uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v10(v3);
    }
    uint64_t v5 = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_19F01EED8;
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 176);
    return sub_19F071874(v0 + 128, v3, v7, v8, v3, v5);
  }
}

uint64_t sub_19F006530(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
  *(void *)(v1 + 176) = type metadata accessor for JetPackAssetSession();
  return MEMORY[0x1F4188298](sub_19F0065A0, 0, 0);
}

uint64_t sub_19F0065A0()
{
  if (*(void *)(*(void *)(v0 + 168) + 16) && (unint64_t v1 = sub_19EEAB4C0(*(void *)(v0 + 176)), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 168) + 56) + 32 * v1, v0 + 48);
    sub_19EEBDC00((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    sub_19EEBDBA4(v0 + 16, v0 + 80);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      uint64_t v3 = *(void *)(v0 + 160);
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470978);
    if (swift_dynamicCast())
    {
      uint64_t v3 = sub_19EF2E318();
LABEL_11:
      swift_release();
      *(void *)(v0 + 128) = v3;
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470980);
    if (swift_dynamicCast())
    {
      uint64_t v3 = sub_19EF33290();
      goto LABEL_11;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470988);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 192) = *(void *)(v0 + 152);
      uint64_t v12 = (uint64_t (__cdecl *)())((char *)&dword_1E9472868 + dword_1E9472868);
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_19F0044A8;
      return v12();
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 112) = 0;
      *(void *)(v0 + 120) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v3 = sub_19EF27104();
    if (!v3)
    {
LABEL_13:
      uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v10(v3);
    }
    uint64_t v5 = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_19F004364;
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 176);
    return sub_19F071874(v0 + 128, v3, v7, v8, v3, v5);
  }
}

uint64_t sub_19F0069F4(uint64_t a1, uint64_t a2)
{
  v2[19] = a1;
  v2[20] = a2;
  uint64_t v3 = type metadata accessor for JetPackAsset(0);
  v2[21] = v3;
  v2[22] = *(void *)(v3 - 8);
  v2[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F006AB4, 0, 0);
}

uint64_t sub_19F006AB4()
{
  if (*(void *)(*(void *)(v0 + 160) + 16) && (unint64_t v1 = sub_19EEAB4C0(*(void *)(v0 + 168)), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 160) + 56) + 32 * v1, v0 + 48);
    sub_19EEBDC00((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    sub_19EEBDBA4(v0 + 16, v0 + 80);
    if (swift_dynamicCast())
    {
      uint64_t v4 = *(void *)(v0 + 176);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v5 = *(void *)(v0 + 168);
      uint64_t v6 = *(void *)(v0 + 152);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      sub_19EE948D8(v3, v6, type metadata accessor for JetPackAsset);
LABEL_12:
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470900);
    if (swift_dynamicCast())
    {
      uint64_t v5 = *(void *)(v0 + 168);
      uint64_t v4 = *(void *)(v0 + 176);
      uint64_t v6 = *(void *)(v0 + 152);
      sub_19EF2E5C0(v6);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470908);
    if (swift_dynamicCast())
    {
      sub_19EF3354C(*(void *)(v0 + 152));
      uint64_t v5 = *(void *)(v0 + 168);
      uint64_t v4 = *(void *)(v0 + 176);
      uint64_t v6 = *(void *)(v0 + 152);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      swift_release();
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470910);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 200) = *(void *)(v0 + 136);
      uint64_t v19 = (uint64_t (*)(uint64_t))((char *)&dword_1E9472720 + dword_1E9472720);
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_19EE2E168;
      uint64_t v18 = *(void *)(v0 + 152);
      return v19(v18);
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 112) = 0;
      *(void *)(v0 + 120) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v7 = sub_19EF27110();
    if (!v7)
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 176) + 56))(*(void *)(v0 + 152), 1, 1, *(void *)(v0 + 168));
LABEL_13:
      swift_task_dealloc();
      uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
      return v16();
    }
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_19F006F60;
    uint64_t v12 = *(void *)(v0 + 160);
    uint64_t v13 = *(void *)(v0 + 168);
    uint64_t v14 = *(void *)(v0 + 152);
    return sub_19F071874(v14, v9, v12, v13, v9, v10);
  }
}

uint64_t sub_19F006F60()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F007078()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0070FC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = a2;
  return MEMORY[0x1F4188298](sub_19F00711C, 0, 0);
}

uint64_t sub_19F00711C()
{
  if (*(void *)(*(void *)(v0 + 216) + 16)
    && (unint64_t v1 = sub_19EEAB4C0((uint64_t)&type metadata for DiskJetPackLoader), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 216) + 56) + 32 * v1, v0 + 104);
    sub_19EEBDC00((_OWORD *)(v0 + 104), (_OWORD *)(v0 + 72));
    sub_19EEBDBA4(v0 + 72, v0 + 136);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v0 + 208);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
      long long v4 = *(_OWORD *)(v0 + 16);
      long long v5 = *(_OWORD *)(v0 + 32);
      long long v6 = *(_OWORD *)(v0 + 48);
      *(void *)(v3 + 48) = *(void *)(v0 + 64);
      *(_OWORD *)(v3 + 16) = v5;
      *(_OWORD *)(v3 + 32) = v6;
      *(_OWORD *)uint64_t v3 = v4;
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94727A8);
    if (swift_dynamicCast())
    {
      sub_19EF2E8A8(*(void *)(v0 + 208));
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94727B0);
    if (swift_dynamicCast())
    {
      sub_19EF33848(*(_OWORD **)(v0 + 208));
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94727B8);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 232) = *(void *)(v0 + 192);
      uint64_t v19 = (uint64_t (*)(uint64_t))((char *)&dword_1E94727C0 + dword_1E94727C0);
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_19F00764C;
      uint64_t v18 = *(void *)(v0 + 208);
      return v19(v18);
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 168) = 0;
      *(void *)(v0 + 176) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v7 = sub_19EF2711C();
    if (!v7)
    {
      uint64_t v15 = *(void *)(v0 + 208);
      *(void *)(v15 + 32) = 0;
      *(_OWORD *)uint64_t v15 = 0u;
      *(_OWORD *)(v15 + 16) = 0u;
      *(_OWORD *)(v15 + 40) = xmmword_19F249000;
LABEL_13:
      uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
      return v16();
    }
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_19F007558;
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v13 = *(void *)(v0 + 216);
    return sub_19F071874(v12, v9, v13, (uint64_t)&type metadata for DiskJetPackLoader, v9, v10);
  }
}

uint64_t sub_19F007558()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F00764C()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_19F0077DC;
  }
  else {
    char v2 = sub_19F007760;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F007760()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0077DC()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F007858(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = a2;
  return MEMORY[0x1F4188298](sub_19F007878, 0, 0);
}

uint64_t sub_19F007878()
{
  if (*(void *)(*(void *)(v0 + 216) + 16)
    && (unint64_t v1 = sub_19EEAB4C0((uint64_t)&type metadata for InMemoryJetPackLoader), (v2 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v0 + 216) + 56) + 32 * v1, v0 + 104);
    sub_19EEBDC00((_OWORD *)(v0 + 104), (_OWORD *)(v0 + 72));
    sub_19EEBDBA4(v0 + 72, v0 + 136);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v0 + 208);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
      long long v4 = *(_OWORD *)(v0 + 16);
      long long v5 = *(_OWORD *)(v0 + 32);
      long long v6 = *(_OWORD *)(v0 + 48);
      *(void *)(v3 + 48) = *(void *)(v0 + 64);
      *(_OWORD *)(v3 + 16) = v5;
      *(_OWORD *)(v3 + 32) = v6;
      *(_OWORD *)uint64_t v3 = v4;
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472758);
    if (swift_dynamicCast())
    {
      sub_19EF2EB50(*(void *)(v0 + 208));
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
      goto LABEL_12;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472760);
    if (swift_dynamicCast())
    {
      sub_19EF33AFC(*(_OWORD **)(v0 + 208));
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472768);
    if (swift_dynamicCast())
    {
      *(void *)(v0 + 232) = *(void *)(v0 + 192);
      uint64_t v19 = (uint64_t (*)(uint64_t))((char *)&dword_1E9472770 + dword_1E9472770);
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_19F007CB4;
      uint64_t v18 = *(void *)(v0 + 208);
      return v19(v18);
    }
    else
    {
      sub_19F1DCCEC();
      *(void *)(v0 + 168) = 0;
      *(void *)(v0 + 176) = 0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      return sub_19F1DCFCC();
    }
  }
  else
  {
    uint64_t v7 = sub_19EF27128();
    if (!v7)
    {
      uint64_t v15 = *(void *)(v0 + 208);
      *(void *)(v15 + 32) = 0;
      *(_OWORD *)uint64_t v15 = 0u;
      *(_OWORD *)(v15 + 16) = 0u;
      *(_OWORD *)(v15 + 40) = xmmword_19F249000;
LABEL_13:
      uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
      return v16();
    }
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_19F01EFB4;
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v13 = *(void *)(v0 + 216);
    return sub_19F071874(v12, v9, v13, (uint64_t)&type metadata for InMemoryJetPackLoader, v9, v10);
  }
}

uint64_t sub_19F007CB4()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_19F01EDC4;
  }
  else {
    char v2 = sub_19F01EFC8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F007DC8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB85C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v10);
    return v11;
  }
  else
  {
    uint64_t v47 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v48 = v9;
    uint64_t v49 = v3;
    uint64_t v13 = v0;
    uint64_t v14 = *(void *)(v0 + 32);
    type metadata accessor for BaseObjectGraph();
    uint64_t v44 = v14;
    swift_retain();
    uint64_t v15 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v50 = v15;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_19EEAD6E0(v16);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v18 = &type metadata for JetEngineBootstrap.URLProtocolHandler;
    uint64_t v45 = v11;
    uint64_t v46 = v17;
    if (!v17) {
      goto LABEL_13;
    }
    uint64_t v19 = swift_conformsToProtocol2();
    if (v19) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 0;
    }
    if (!v19) {
      uint64_t v18 = 0;
    }
    if (v18)
    {
      uint64_t v21 = *(void (**)(ValueMetadata *, uint64_t))(v20 + 8);
      swift_retain();
      v21(v18, v20);
      uint64_t v22 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v40 = v22;
      swift_release();
    }
    else
    {
LABEL_13:
      uint64_t v40 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472A68);
    uint64_t v12 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v23 = swift_allocObject();
    *(_DWORD *)(v23 + 16) = 0;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    *(void *)(v12 + 16) = v23;
    *(void *)(v12 + 24) = v24;
    *(void *)(v12 + 40) = 0;
    *(void *)(v12 + 48) = 0;
    *(void *)(v12 + 32) = 0;
    *(unsigned char *)(v12 + 56) = 0;
    *(void *)(v13 + 24) = v12;
    *(void *)(v13 + 32) = 0;
    *(unsigned char *)(v13 + 40) = 1;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v10);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_19F1DB89C();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    long long v26 = v48;
    sub_19F1DB81C();
    uint64_t v27 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v49, 1, 1, v27);
    uint64_t v43 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v47, v26, v4);
    unint64_t v28 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v29 = (v6 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = v13;
    unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v41 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = 0;
    *(void *)(v33 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v33 + v28, v47, v4);
    long long v34 = (void *)(v33 + v29);
    uint64_t v35 = v44;
    *long long v34 = v45;
    v34[1] = v35;
    long long v36 = (void *)(v33 + v30);
    *long long v36 = v42;
    v36[1] = &type metadata for JetEngineBootstrap.URLProtocolHandler;
    unint64_t v37 = v41;
    *(void *)(v33 + v31) = v40;
    *(void *)(v33 + v37) = v46;
    *(void *)(v33 + v32) = v12;
    *(void *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v43;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v49, (uint64_t)&unk_1E9472A78, v33);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v48, v4);
  }
  return v12;
}

uint64_t sub_19F008328()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_19F1DB85C();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v1 + 24);
  if (*(unsigned char *)(v1 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v10);
    return v11;
  }
  else
  {
    uint64_t v52 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v53 = v4;
    uint64_t v13 = *(void *)(v1 + 32);
    type metadata accessor for BaseObjectGraph();
    uint64_t v48 = v13;
    swift_retain();
    uint64_t v14 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v54 = v14;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_19EEAD6E0(v15);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v17 = &type metadata for Bag;
    uint64_t v49 = v11;
    uint64_t v50 = v16;
    if (!v16) {
      goto LABEL_13;
    }
    uint64_t v18 = swift_conformsToProtocol2();
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (!v18) {
      uint64_t v17 = 0;
    }
    if (v17)
    {
      uint64_t v20 = *(void (**)(ValueMetadata *, uint64_t))(v19 + 8);
      swift_retain();
      v20(v17, v19);
      uint64_t v21 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v42 = v21;
      swift_release();
    }
    else
    {
LABEL_13:
      uint64_t v42 = 0;
    }
    uint64_t v22 = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391058);
    uint64_t v23 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v24 = swift_allocObject();
    *(_DWORD *)(v24 + 16) = 0;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    *(void *)(v23 + 16) = v24;
    *(void *)(v23 + 24) = v25;
    *(unsigned char *)(v23 + 32) = 0;
    *(void *)(v1 + 24) = v23;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 1;
    uint64_t v47 = v23;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v10);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_19F1DB89C();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v27 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v53, 1, 1, v27);
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = v51;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v52, v9, v5);
    unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    unint64_t v30 = (v6 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v45 = v5;
    uint64_t v46 = v22;
    uint64_t v43 = v1;
    unint64_t v32 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v35 + v29, v52, v5);
    long long v36 = (void *)(v35 + v30);
    uint64_t v37 = v48;
    *long long v36 = v49;
    v36[1] = v37;
    long long v38 = (void *)(v35 + v31);
    uint64_t v39 = v42;
    void *v38 = v43;
    v38[1] = &type metadata for Bag;
    *(void *)(v35 + v32) = v39;
    *(void *)(v35 + v33) = v50;
    uint64_t v40 = v47;
    *(void *)(v35 + v34) = v47;
    *(void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v44;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v53, (uint64_t)&unk_1E9472850, v35);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v46, v45);
    return v40;
  }
}

uint64_t sub_19F00887C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB85C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v10);
    return v11;
  }
  else
  {
    uint64_t v53 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v54 = v3;
    uint64_t v52 = v0;
    uint64_t v13 = *(void *)(v0 + 32);
    uint64_t v51 = sub_19EEBDC10(0, &qword_1EB392278);
    type metadata accessor for BaseObjectGraph();
    uint64_t v48 = v13;
    swift_retain();
    uint64_t v14 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v55 = v14;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_19EEAD6E0(v15);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v49 = v11;
    uint64_t v50 = v16;
    if (!v16) {
      goto LABEL_13;
    }
    uint64_t v17 = v51;
    uint64_t v18 = swift_conformsToProtocol2();
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (!v18) {
      uint64_t v17 = 0;
    }
    if (v17)
    {
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      swift_retain();
      v20(v17, v19);
      uint64_t v21 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v43 = v21;
      swift_release();
    }
    else
    {
LABEL_13:
      uint64_t v43 = 0;
    }
    uint64_t v22 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E1B8);
    uint64_t v23 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v24 = swift_allocObject();
    *(_DWORD *)(v24 + 16) = 0;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    *(void *)(v23 + 16) = v24;
    *(void *)(v23 + 24) = v25;
    *(unsigned char *)(v23 + 32) = 0;
    uint64_t v26 = v52;
    *(void *)(v52 + 24) = v23;
    *(void *)(v26 + 32) = 0;
    *(unsigned char *)(v26 + 40) = 1;
    uint64_t v47 = v23;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v10);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_19F1DB89C();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v28 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v54, 1, 1, v28);
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v53, v9, v4);
    unint64_t v29 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v30 = (v6 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v45 = v4;
    uint64_t v46 = v22;
    unint64_t v32 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v35 + v29, v53, v4);
    long long v36 = (void *)(v35 + v30);
    uint64_t v37 = v48;
    *long long v36 = v49;
    v36[1] = v37;
    long long v38 = (void *)(v35 + v31);
    uint64_t v39 = v51;
    void *v38 = v52;
    v38[1] = v39;
    uint64_t v40 = v44;
    *(void *)(v35 + v32) = v43;
    *(void *)(v35 + v33) = v50;
    uint64_t v41 = v47;
    *(void *)(v35 + v34) = v47;
    *(void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v40;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v54, (uint64_t)&unk_1E9472AA0, v35);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v46, v45);
    return v41;
  }
}

uint64_t sub_19F008DE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_19F1DB85C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v42 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v11);
  uint64_t v12 = *(void *)(v1 + 24);
  if (*(unsigned char *)(v1 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v11);
    return v12;
  }
  else
  {
    uint64_t v14 = *(void *)(v1 + 32);
    uint64_t started = type metadata accessor for StartUpPerformanceEvent();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472A30);
    uint64_t v15 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v16 = swift_allocObject();
    *(_DWORD *)(v16 + 16) = 0;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    *(void *)(v15 + 16) = v16;
    *(void *)(v15 + 24) = v17;
    *(unsigned char *)(v15 + 32) = 0;
    *(void *)(v1 + 24) = v15;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 1;
    sub_19EEAF010();
    uint64_t v39 = v15;
    swift_retain();
    uint64_t v40 = v14;
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v11);
    uint64_t v37 = v12;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_19F1DB89C();
    __swift_project_value_buffer(v18, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v19 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
    uint64_t v35 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v42, v10, v5);
    uint64_t v20 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v41 = v5;
    uint64_t v21 = (v20 + 32) & ~v20;
    unint64_t v22 = (v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = v4;
    unint64_t v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    long long v36 = v10;
    unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = 0;
    *(void *)(v27 + 24) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v27 + v21, v42, v41);
    uint64_t v28 = (void *)(v27 + v22);
    uint64_t v29 = started;
    uint64_t v30 = v40;
    *uint64_t v28 = v37;
    v28[1] = v30;
    unint64_t v31 = (void *)(v27 + v23);
    *unint64_t v31 = v1;
    v31[1] = v29;
    *(void *)(v27 + v24) = 0;
    *(void *)(v27 + v25) = 0;
    uint64_t v32 = v39;
    *(void *)(v27 + v26) = v39;
    *(void *)(v27 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8)) = v35;
    sub_19EEAF010();
    swift_retain();
    sub_19EEAED68((uint64_t)v34, (uint64_t)&unk_1E9472A40, v27);
    swift_release();
    sub_19EEAE6F8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v36, v41);
    return v32;
  }
}

uint64_t sub_19F0091E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_19F1DB85C();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v11);
  uint64_t v12 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v1 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v11);
    return v12;
  }
  else
  {
    uint64_t v48 = v12;
    uint64_t v14 = *(void *)(v1 + 32);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFB0);
    uint64_t started = type metadata accessor for StartUpPerformanceEvent();
    uint64_t v46 = v15;
    uint64_t v47 = v14;
    uint64_t v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = v10;
    if (v15 == started)
    {
      swift_retain();
      uint64_t v40 = 0;
    }
    else
    {
      type metadata accessor for BaseObjectGraph();
      swift_retain();
      uint64_t v17 = static BaseObjectGraph.current.getter();
      if (qword_1E946FD30 != -1) {
        swift_once();
      }
      v52[0] = v17;
      swift_retain();
      swift_task_localValuePush();
      uint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v40 = sub_19EEAD6E0(v18);
      swift_bridgeObjectRelease();
      swift_task_localValuePop();
      swift_release();
      uint64_t v7 = v49;
    }
    v52[0] = MEMORY[0x1E4FBC860];
    char v53 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94729A0);
    uint64_t v19 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v20 = swift_allocObject();
    *(_DWORD *)(v20 + 16) = 0;
    *(void *)(v19 + 16) = v20;
    sub_19EEBDC4C((uint64_t)v52, v19 + 24, &qword_1E9471030);
    *(void *)(v1 + 24) = v19;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 1;
    uint64_t v45 = v19;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v11);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_19F1DB89C();
    __swift_project_value_buffer(v21, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    unint64_t v22 = v50;
    sub_19F1DB81C();
    uint64_t v23 = sub_19F1DC37C();
    unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    uint64_t v42 = v4;
    v24(v4, 1, 1, v23);
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = v51;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v7, v22, v5);
    unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    unint64_t v27 = (v6 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = v5;
    unint64_t v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = v1;
    uint64_t v30 = v25;
    unint64_t v31 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = 0;
    *(void *)(v33 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v33 + v26, v49, v5);
    unint64_t v34 = (void *)(v33 + v27);
    uint64_t v35 = v47;
    *unint64_t v34 = v48;
    v34[1] = v35;
    long long v36 = (void *)(v33 + v28);
    uint64_t v37 = v40;
    uint64_t v39 = v45;
    uint64_t v38 = v46;
    *long long v36 = v41;
    v36[1] = v38;
    *(void *)(v33 + v29) = 0;
    *(void *)(v33 + v31) = v37;
    *(void *)(v33 + v32) = v39;
    *(void *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v44;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v42, (uint64_t)&unk_1E94729B0, v33);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v43);
    return v39;
  }
}

uint64_t sub_19F0096E4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB85C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v10);
    return v11;
  }
  else
  {
    uint64_t v50 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v51 = v3;
    uint64_t v49 = v0;
    uint64_t v13 = *(void *)(v0 + 32);
    type metadata accessor for BaseObjectGraph();
    uint64_t v46 = v13;
    swift_retain();
    uint64_t v14 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v52 = v14;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_19EEAD6E0(v15);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v17 = &type metadata for IntentDispatchTimeout;
    uint64_t v47 = v11;
    uint64_t v48 = v16;
    if (!v16) {
      goto LABEL_13;
    }
    uint64_t v18 = swift_conformsToProtocol2();
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (!v18) {
      uint64_t v17 = 0;
    }
    if (v17)
    {
      uint64_t v20 = *(void (**)(ValueMetadata *, uint64_t))(v19 + 8);
      swift_retain();
      v20(v17, v19);
      uint64_t v21 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v41 = v21;
      swift_release();
    }
    else
    {
LABEL_13:
      uint64_t v41 = 0;
    }
    unint64_t v22 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94729D0);
    uint64_t v23 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v24 = swift_allocObject();
    *(_DWORD *)(v24 + 16) = 0;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    *(void *)(v23 + 16) = v24;
    *(void *)(v23 + 24) = v25;
    *(_WORD *)(v23 + 32) = 0;
    uint64_t v26 = v49;
    *(void *)(v49 + 24) = v23;
    *(void *)(v26 + 32) = 0;
    *(unsigned char *)(v26 + 40) = 1;
    uint64_t v45 = v23;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v10);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_19F1DB89C();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v28 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v51, 1, 1, v28);
    uint64_t v42 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v50, v9, v4);
    unint64_t v29 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v30 = (v6 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = v5;
    uint64_t v44 = v22;
    unint64_t v32 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v35 + v29, v50, v4);
    long long v36 = (void *)(v35 + v30);
    uint64_t v37 = v46;
    *long long v36 = v47;
    v36[1] = v37;
    uint64_t v38 = (void *)(v35 + v31);
    void *v38 = v49;
    v38[1] = &type metadata for IntentDispatchTimeout;
    uint64_t v39 = v42;
    *(void *)(v35 + v32) = v41;
    *(void *)(v35 + v33) = v48;
    uint64_t v40 = v45;
    *(void *)(v35 + v34) = v45;
    *(void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v39;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v51, (uint64_t)&unk_1E94729E0, v35);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v4);
    return v40;
  }
}

void *sub_19F009C40()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB85C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v58 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471048);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v13);
  uint64_t v14 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v13);
    return (void *)v14;
  }
  else
  {
    uint64_t v53 = *(void *)(v0 + 24);
    uint64_t v54 = v5;
    uint64_t v56 = v9;
    uint64_t v57 = v0;
    uint64_t v59 = v3;
    uint64_t v16 = *(void *)(v0 + 32);
    uint64_t v17 = type metadata accessor for PageIntentInstrumentation();
    type metadata accessor for BaseObjectGraph();
    uint64_t v52 = v16;
    swift_retain();
    uint64_t v18 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v60 = v18;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = sub_19EEAD6E0(v19);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v55 = v20;
    uint64_t v51 = v17;
    if (v20
      && ((uint64_t v21 = swift_conformsToProtocol2()) != 0 ? (v22 = v21) : (v22 = 0), v21 ? (v23 = v17) : (v23 = 0), v23))
    {
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      swift_retain();
      v24(v23, v22);
      uint64_t v25 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v46 = v25;
      swift_release();
    }
    else
    {
      uint64_t v46 = 0;
    }
    uint64_t v26 = v56;
    void *v12 = MEMORY[0x1E4FBC860];
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472A00);
    uint64_t v27 = (void *)swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v28 = swift_allocObject();
    *(_DWORD *)(v28 + 16) = 0;
    void v27[2] = v28;
    sub_19EEBDC4C((uint64_t)v12, (uint64_t)v27 + *(void *)(*v27 + 96), &qword_1E9471048);
    uint64_t v29 = v57;
    *(void *)(v57 + 24) = v27;
    *(void *)(v29 + 32) = 0;
    *(unsigned char *)(v29 + 40) = 1;
    uint64_t v50 = v27;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v13);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_19F1DB89C();
    __swift_project_value_buffer(v30, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v31 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v59, 1, 1, v31);
    uint64_t v48 = swift_allocObject();
    swift_weakInit();
    uint64_t v32 = v54;
    unint64_t v33 = v58;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v58, v26, v4);
    unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    unint64_t v35 = (v6 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v49 = v4;
    unint64_t v47 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v37 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = 0;
    *(void *)(v39 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v39 + v34, v33, v4);
    uint64_t v40 = (void *)(v39 + v35);
    uint64_t v41 = v52;
    *uint64_t v40 = v53;
    v40[1] = v41;
    uint64_t v42 = (void *)(v39 + v36);
    uint64_t v43 = v51;
    *uint64_t v42 = v57;
    v42[1] = v43;
    *(void *)(v39 + v47) = v46;
    *(void *)(v39 + v37) = v55;
    uint64_t v44 = v50;
    *(void *)(v39 + v38) = v50;
    *(void *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = v48;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v59, (uint64_t)asc_1E9472A10, v39);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v56, v49);
    return v44;
  }
}

uint64_t sub_19F00A240()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_19F1DB85C();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v11);
  uint64_t v12 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v1 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v11);
    return v12;
  }
  else
  {
    uint64_t v48 = v12;
    uint64_t v14 = *(void *)(v1 + 32);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
    uint64_t started = type metadata accessor for StartUpPerformanceEvent();
    uint64_t v46 = v15;
    uint64_t v47 = v14;
    uint64_t v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = v10;
    if (v15 == started)
    {
      swift_retain();
      uint64_t v40 = 0;
    }
    else
    {
      type metadata accessor for BaseObjectGraph();
      swift_retain();
      uint64_t v17 = static BaseObjectGraph.current.getter();
      if (qword_1E946FD30 != -1) {
        swift_once();
      }
      v52[0] = v17;
      swift_retain();
      swift_task_localValuePush();
      uint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v40 = sub_19EEAD6E0(v18);
      swift_bridgeObjectRelease();
      swift_task_localValuePop();
      swift_release();
      uint64_t v7 = v49;
    }
    v52[0] = MEMORY[0x1E4FBC860];
    char v53 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472948);
    uint64_t v19 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v20 = swift_allocObject();
    *(_DWORD *)(v20 + 16) = 0;
    *(void *)(v19 + 16) = v20;
    sub_19EEBDC4C((uint64_t)v52, v19 + 24, (uint64_t *)&unk_1E9471020);
    *(void *)(v1 + 24) = v19;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 1;
    uint64_t v45 = v19;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v11);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_19F1DB89C();
    __swift_project_value_buffer(v21, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    uint64_t v22 = v50;
    sub_19F1DB81C();
    uint64_t v23 = sub_19F1DC37C();
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    uint64_t v42 = v4;
    v24(v4, 1, 1, v23);
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = v51;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v7, v22, v5);
    unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    unint64_t v27 = (v6 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = v5;
    unint64_t v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = v1;
    uint64_t v30 = v25;
    unint64_t v31 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = 0;
    *(void *)(v33 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v33 + v26, v49, v5);
    unint64_t v34 = (void *)(v33 + v27);
    uint64_t v35 = v47;
    *unint64_t v34 = v48;
    v34[1] = v35;
    unint64_t v36 = (void *)(v33 + v28);
    uint64_t v37 = v40;
    uint64_t v39 = v45;
    uint64_t v38 = v46;
    *unint64_t v36 = v41;
    v36[1] = v38;
    *(void *)(v33 + v29) = 0;
    *(void *)(v33 + v31) = v37;
    *(void *)(v33 + v32) = v39;
    *(void *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v44;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v42, (uint64_t)&unk_1E9472958, v33);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v43);
    return v39;
  }
}

uint64_t sub_19F00A73C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB85C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v10);
    return v11;
  }
  else
  {
    uint64_t v49 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = v3;
    uint64_t v48 = v0;
    uint64_t v13 = *(void *)(v0 + 32);
    type metadata accessor for BaseObjectGraph();
    uint64_t v45 = v13;
    swift_retain();
    uint64_t v14 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    v51[0] = v14;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_19EEAD6E0(v15);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v17 = &type metadata for JetPackAssetSession.Configuration;
    uint64_t v46 = v11;
    uint64_t v47 = v16;
    if (!v16) {
      goto LABEL_13;
    }
    uint64_t v18 = swift_conformsToProtocol2();
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (!v18) {
      uint64_t v17 = 0;
    }
    if (v17)
    {
      uint64_t v20 = *(void (**)(ValueMetadata *, uint64_t))(v19 + 8);
      swift_retain();
      v20(v17, v19);
      uint64_t v21 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v40 = v21;
      swift_release();
    }
    else
    {
LABEL_13:
      uint64_t v40 = 0;
    }
    uint64_t v22 = v9;
    v51[0] = MEMORY[0x1E4FBC860];
    char v52 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94728C0);
    uint64_t v23 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v24 = swift_allocObject();
    *(_DWORD *)(v24 + 16) = 0;
    *(void *)(v23 + 16) = v24;
    sub_19EEBDC4C((uint64_t)v51, v23 + 24, (uint64_t *)&unk_1E9471000);
    uint64_t v25 = v48;
    *(void *)(v48 + 24) = v23;
    *(void *)(v25 + 32) = 0;
    *(unsigned char *)(v25 + 40) = 1;
    uint64_t v44 = v23;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v10);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_19F1DB89C();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v27 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
    uint64_t v41 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v49, v9, v4);
    unint64_t v28 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v29 = (v6 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = v5;
    uint64_t v43 = v22;
    unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = 0;
    *(void *)(v34 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v34 + v28, v49, v4);
    uint64_t v35 = (void *)(v34 + v29);
    uint64_t v36 = v45;
    *uint64_t v35 = v46;
    v35[1] = v36;
    uint64_t v37 = (void *)(v34 + v30);
    void *v37 = v48;
    v37[1] = &type metadata for JetPackAssetSession.Configuration;
    *(void *)(v34 + v31) = v40;
    *(void *)(v34 + v32) = v47;
    uint64_t v38 = v44;
    *(void *)(v34 + v33) = v44;
    *(void *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v41;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v50, (uint64_t)&unk_1E94728D0, v34);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v4);
    return v38;
  }
}

uint64_t sub_19F00ACC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_19F1DB85C();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v11);
  uint64_t v12 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v1 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v11);
    return v12;
  }
  else
  {
    uint64_t v48 = v12;
    uint64_t v14 = *(void *)(v1 + 32);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94709B0);
    uint64_t started = type metadata accessor for StartUpPerformanceEvent();
    uint64_t v46 = v15;
    uint64_t v47 = v14;
    uint64_t v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = v10;
    if (v15 == started)
    {
      swift_retain();
      uint64_t v40 = 0;
    }
    else
    {
      type metadata accessor for BaseObjectGraph();
      swift_retain();
      uint64_t v17 = static BaseObjectGraph.current.getter();
      if (qword_1E946FD30 != -1) {
        swift_once();
      }
      v52[0] = v17;
      swift_retain();
      swift_task_localValuePush();
      uint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v40 = sub_19EEAD6E0(v18);
      swift_bridgeObjectRelease();
      swift_task_localValuePop();
      swift_release();
      uint64_t v7 = v49;
    }
    v52[0] = MEMORY[0x1E4FBC860];
    char v53 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472910);
    uint64_t v19 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v20 = swift_allocObject();
    *(_DWORD *)(v20 + 16) = 0;
    *(void *)(v19 + 16) = v20;
    sub_19EEBDC4C((uint64_t)v52, v19 + 24, (uint64_t *)&unk_1E9471010);
    *(void *)(v1 + 24) = v19;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 1;
    uint64_t v45 = v19;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v11);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_19F1DB89C();
    __swift_project_value_buffer(v21, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    uint64_t v22 = v50;
    sub_19F1DB81C();
    uint64_t v23 = sub_19F1DC37C();
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    uint64_t v42 = v4;
    v24(v4, 1, 1, v23);
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = v51;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v7, v22, v5);
    unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    unint64_t v27 = (v6 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = v5;
    unint64_t v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = v1;
    uint64_t v30 = v25;
    unint64_t v31 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = 0;
    *(void *)(v33 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v33 + v26, v49, v5);
    uint64_t v34 = (void *)(v33 + v27);
    uint64_t v35 = v47;
    *uint64_t v34 = v48;
    v34[1] = v35;
    uint64_t v36 = (void *)(v33 + v28);
    uint64_t v37 = v40;
    uint64_t v39 = v45;
    uint64_t v38 = v46;
    *uint64_t v36 = v41;
    v36[1] = v38;
    *(void *)(v33 + v29) = 0;
    *(void *)(v33 + v31) = v37;
    *(void *)(v33 + v32) = v39;
    *(void *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v44;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v42, (uint64_t)&unk_1E9472920, v33);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v43);
    return v39;
  }
}

uint64_t sub_19F00B1BC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB85C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v10);
    return v11;
  }
  else
  {
    char v53 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v54 = v3;
    uint64_t v52 = v0;
    uint64_t v13 = *(void *)(v0 + 32);
    uint64_t v51 = sub_19EEBDC10(0, (unint64_t *)&qword_1E946DC70);
    type metadata accessor for BaseObjectGraph();
    uint64_t v48 = v13;
    swift_retain();
    uint64_t v14 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v55 = v14;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_19EEAD6E0(v15);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v49 = v11;
    uint64_t v50 = v16;
    if (!v16) {
      goto LABEL_13;
    }
    uint64_t v17 = v51;
    uint64_t v18 = swift_conformsToProtocol2();
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (!v18) {
      uint64_t v17 = 0;
    }
    if (v17)
    {
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      swift_retain();
      v20(v17, v19);
      uint64_t v21 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v43 = v21;
      swift_release();
    }
    else
    {
LABEL_13:
      uint64_t v43 = 0;
    }
    uint64_t v22 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472810);
    uint64_t v23 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v24 = swift_allocObject();
    *(_DWORD *)(v24 + 16) = 0;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    *(void *)(v23 + 16) = v24;
    *(void *)(v23 + 24) = v25;
    *(unsigned char *)(v23 + 32) = 0;
    uint64_t v26 = v52;
    *(void *)(v52 + 24) = v23;
    *(void *)(v26 + 32) = 0;
    *(unsigned char *)(v26 + 40) = 1;
    uint64_t v47 = v23;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v10);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_19F1DB89C();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v28 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v54, 1, 1, v28);
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v53, v9, v4);
    unint64_t v29 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v30 = (v6 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v45 = v5;
    uint64_t v46 = v22;
    unint64_t v32 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v35 + v29, v53, v4);
    uint64_t v36 = (void *)(v35 + v30);
    uint64_t v37 = v48;
    *uint64_t v36 = v49;
    v36[1] = v37;
    uint64_t v38 = (void *)(v35 + v31);
    uint64_t v39 = v51;
    void *v38 = v52;
    v38[1] = v39;
    uint64_t v40 = v44;
    *(void *)(v35 + v32) = v43;
    *(void *)(v35 + v33) = v50;
    uint64_t v41 = v47;
    *(void *)(v35 + v34) = v47;
    *(void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v40;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v54, (uint64_t)&unk_1E9472820, v35);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v4);
    return v41;
  }
}

uint64_t sub_19F00B728()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB85C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v10);
    return v11;
  }
  else
  {
    char v53 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v54 = v3;
    uint64_t v52 = v0;
    uint64_t v13 = *(void *)(v0 + 32);
    uint64_t v51 = type metadata accessor for JetPackAssetSession();
    type metadata accessor for BaseObjectGraph();
    uint64_t v48 = v13;
    swift_retain();
    uint64_t v14 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v55 = v14;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_19EEAD6E0(v15);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v49 = v11;
    uint64_t v50 = v16;
    if (!v16) {
      goto LABEL_13;
    }
    uint64_t v17 = v51;
    uint64_t v18 = swift_conformsToProtocol2();
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (!v18) {
      uint64_t v17 = 0;
    }
    if (v17)
    {
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      swift_retain();
      v20(v17, v19);
      uint64_t v21 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v43 = v21;
      swift_release();
    }
    else
    {
LABEL_13:
      uint64_t v43 = 0;
    }
    uint64_t v22 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472870);
    uint64_t v23 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v24 = swift_allocObject();
    *(_DWORD *)(v24 + 16) = 0;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    *(void *)(v23 + 16) = v24;
    *(void *)(v23 + 24) = v25;
    *(unsigned char *)(v23 + 32) = 0;
    uint64_t v26 = v52;
    *(void *)(v52 + 24) = v23;
    *(void *)(v26 + 32) = 0;
    *(unsigned char *)(v26 + 40) = 1;
    uint64_t v47 = v23;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v10);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_19F1DB89C();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v28 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v54, 1, 1, v28);
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v53, v9, v4);
    unint64_t v29 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v30 = (v6 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v45 = v5;
    uint64_t v46 = v22;
    unint64_t v32 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v35 + v29, v53, v4);
    uint64_t v36 = (void *)(v35 + v30);
    uint64_t v37 = v48;
    *uint64_t v36 = v49;
    v36[1] = v37;
    uint64_t v38 = (void *)(v35 + v31);
    uint64_t v39 = v51;
    void *v38 = v52;
    v38[1] = v39;
    uint64_t v40 = v44;
    *(void *)(v35 + v32) = v43;
    *(void *)(v35 + v33) = v50;
    uint64_t v41 = v47;
    *(void *)(v35 + v34) = v47;
    *(void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v40;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v54, (uint64_t)&unk_1E9472880, v35);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v4);
    return v41;
  }
}

void *sub_19F00BC84()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB85C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v58 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470FC0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v13);
  uint64_t v14 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v13);
    return (void *)v14;
  }
  else
  {
    uint64_t v53 = *(void *)(v0 + 24);
    uint64_t v54 = v5;
    uint64_t v56 = v9;
    uint64_t v57 = v0;
    uint64_t v59 = v3;
    uint64_t v16 = *(void *)(v0 + 32);
    uint64_t v17 = type metadata accessor for JetPackAsset(0);
    type metadata accessor for BaseObjectGraph();
    uint64_t v52 = v16;
    swift_retain();
    uint64_t v18 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v60 = v18;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = sub_19EEAD6E0(v19);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v55 = v20;
    uint64_t v51 = v17;
    if (v20
      && ((uint64_t v21 = swift_conformsToProtocol2()) != 0 ? (v22 = v21) : (v22 = 0), v21 ? (v23 = v17) : (v23 = 0), v23))
    {
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      swift_retain();
      v24(v23, v22);
      uint64_t v25 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v46 = v25;
      swift_release();
    }
    else
    {
      uint64_t v46 = 0;
    }
    uint64_t v26 = v56;
    void *v12 = MEMORY[0x1E4FBC860];
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472728);
    uint64_t v27 = (void *)swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v28 = swift_allocObject();
    *(_DWORD *)(v28 + 16) = 0;
    void v27[2] = v28;
    sub_19EEBDC4C((uint64_t)v12, (uint64_t)v27 + *(void *)(*v27 + 96), (uint64_t *)&unk_1E9470FC0);
    uint64_t v29 = v57;
    *(void *)(v57 + 24) = v27;
    *(void *)(v29 + 32) = 0;
    *(unsigned char *)(v29 + 40) = 1;
    uint64_t v50 = v27;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v13);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_19F1DB89C();
    __swift_project_value_buffer(v30, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v31 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v59, 1, 1, v31);
    uint64_t v48 = swift_allocObject();
    swift_weakInit();
    uint64_t v32 = v54;
    unint64_t v33 = v58;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v58, v26, v4);
    unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    unint64_t v35 = (v6 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v49 = v4;
    unint64_t v47 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v37 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = 0;
    *(void *)(v39 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v39 + v34, v33, v4);
    uint64_t v40 = (void *)(v39 + v35);
    uint64_t v41 = v52;
    *uint64_t v40 = v53;
    v40[1] = v41;
    uint64_t v42 = (void *)(v39 + v36);
    uint64_t v43 = v51;
    *uint64_t v42 = v57;
    v42[1] = v43;
    *(void *)(v39 + v47) = v46;
    *(void *)(v39 + v37) = v55;
    uint64_t v44 = v50;
    *(void *)(v39 + v38) = v50;
    *(void *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = v48;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v59, (uint64_t)&unk_1E9472738, v39);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v56, v49);
    return v44;
  }
}

uint64_t sub_19F00C284()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB85C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v40 - v8;
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v10);
    return v11;
  }
  else
  {
    uint64_t v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = v3;
    uint64_t v48 = v0;
    uint64_t v13 = *(void *)(v0 + 32);
    type metadata accessor for BaseObjectGraph();
    uint64_t v45 = v13;
    swift_retain();
    uint64_t v14 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    v51[0] = v14;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_19EEAD6E0(v15);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v17 = &type metadata for DiskJetPackLoader;
    uint64_t v46 = v11;
    uint64_t v47 = v16;
    if (!v16) {
      goto LABEL_13;
    }
    uint64_t v18 = swift_conformsToProtocol2();
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (!v18) {
      uint64_t v17 = 0;
    }
    if (v17)
    {
      uint64_t v20 = *(void (**)(ValueMetadata *, uint64_t))(v19 + 8);
      swift_retain();
      v20(v17, v19);
      uint64_t v21 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v40 = v21;
      swift_release();
    }
    else
    {
LABEL_13:
      uint64_t v40 = 0;
    }
    uint64_t v22 = v9;
    v51[0] = MEMORY[0x1E4FBC860];
    char v52 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94727C8);
    uint64_t v23 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v24 = swift_allocObject();
    *(_DWORD *)(v24 + 16) = 0;
    *(void *)(v23 + 16) = v24;
    sub_19EEBDC4C((uint64_t)v51, v23 + 24, (uint64_t *)&unk_1E9470FE0);
    uint64_t v25 = v48;
    *(void *)(v48 + 24) = v23;
    *(void *)(v25 + 32) = 0;
    *(unsigned char *)(v25 + 40) = 1;
    uint64_t v44 = v23;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v10);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_19F1DB89C();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v27 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
    uint64_t v41 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v49, v9, v4);
    unint64_t v28 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v29 = (v6 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = v5;
    uint64_t v43 = v22;
    unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = 0;
    *(void *)(v34 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v34 + v28, v49, v4);
    unint64_t v35 = (void *)(v34 + v29);
    uint64_t v36 = v45;
    *unint64_t v35 = v46;
    v35[1] = v36;
    unint64_t v37 = (void *)(v34 + v30);
    void *v37 = v48;
    v37[1] = &type metadata for DiskJetPackLoader;
    uint64_t v38 = v41;
    *(void *)(v34 + v31) = v40;
    *(void *)(v34 + v32) = v47;
    uint64_t v39 = v44;
    *(void *)(v34 + v33) = v44;
    *(void *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v38;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v50, (uint64_t)&unk_1E94727D8, v34);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v4);
    return v39;
  }
}

uint64_t sub_19F00C7F8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB85C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v40 - v8;
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 40))
  {
    swift_retain();
    os_unfair_lock_unlock(v10);
    return v11;
  }
  else
  {
    uint64_t v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = v3;
    uint64_t v48 = v0;
    uint64_t v13 = *(void *)(v0 + 32);
    type metadata accessor for BaseObjectGraph();
    uint64_t v45 = v13;
    swift_retain();
    uint64_t v14 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    v51[0] = v14;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_19EEAD6E0(v15);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v17 = &type metadata for InMemoryJetPackLoader;
    uint64_t v46 = v11;
    uint64_t v47 = v16;
    if (!v16) {
      goto LABEL_13;
    }
    uint64_t v18 = swift_conformsToProtocol2();
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (!v18) {
      uint64_t v17 = 0;
    }
    if (v17)
    {
      uint64_t v20 = *(void (**)(ValueMetadata *, uint64_t))(v19 + 8);
      swift_retain();
      v20(v17, v19);
      uint64_t v21 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v40 = v21;
      swift_release();
    }
    else
    {
LABEL_13:
      uint64_t v40 = 0;
    }
    uint64_t v22 = v9;
    v51[0] = MEMORY[0x1E4FBC860];
    char v52 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472778);
    uint64_t v23 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v24 = swift_allocObject();
    *(_DWORD *)(v24 + 16) = 0;
    *(void *)(v23 + 16) = v24;
    sub_19EEBDC4C((uint64_t)v51, v23 + 24, (uint64_t *)&unk_1E9470FD0);
    uint64_t v25 = v48;
    *(void *)(v48 + 24) = v23;
    *(void *)(v25 + 32) = 0;
    *(unsigned char *)(v25 + 40) = 1;
    uint64_t v44 = v23;
    swift_retain();
    sub_19EEAE6F8();
    os_unfair_lock_unlock(v10);
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_19F1DB89C();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v27 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
    uint64_t v41 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v49, v9, v4);
    unint64_t v28 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v29 = (v6 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = v5;
    uint64_t v43 = v22;
    unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = 0;
    *(void *)(v34 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v34 + v28, v49, v4);
    unint64_t v35 = (void *)(v34 + v29);
    uint64_t v36 = v45;
    *unint64_t v35 = v46;
    v35[1] = v36;
    unint64_t v37 = (void *)(v34 + v30);
    void *v37 = v48;
    v37[1] = &type metadata for InMemoryJetPackLoader;
    uint64_t v38 = v41;
    *(void *)(v34 + v31) = v40;
    *(void *)(v34 + v32) = v47;
    uint64_t v39 = v44;
    *(void *)(v34 + v33) = v44;
    *(void *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v38;
    sub_19EEAF010();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19EEAED68((uint64_t)v50, (uint64_t)asc_1E9472788, v34);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v4);
    return v39;
  }
}

uint64_t sub_19F00CD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 136) = v15;
  *(void *)(v8 + 144) = v16;
  *(_OWORD *)(v8 + 120) = v14;
  *(void *)(v8 + 104) = a7;
  *(void *)(v8 + 112) = a8;
  *(void *)(v8 + 88) = a5;
  *(void *)(v8 + 96) = a6;
  *(void *)(v8 + 80) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 152) = v9;
  *(void *)(v8 + 160) = *(void *)(v9 - 8);
  *(void *)(v8 + 168) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 176) = v10;
  *(void *)(v8 + 184) = *(void *)(v10 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 200) = v11;
  *(void *)(v8 + 208) = *(void *)(v11 - 8);
  *(void *)(v8 + 216) = swift_task_alloc();
  *(void *)(v8 + 224) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F00CF10, 0, 0);
}

uint64_t sub_19F00CF10()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[29] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[28];
    uint64_t v21 = v0[26];
    uint64_t v20 = v0[25];
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[10]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[9] = sub_19EEAD23C(0xD000000000000012, 0x800000019F26DF40, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[26];

    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[28];
  uint64_t v12 = v0[25];
  uint64_t v13 = v0[10];
  v0[30] = v5;
  v0[31] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[32] = sub_19F1DB8DC();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472A80 + dword_1E9472A80);
  long long v14 = (void *)swift_task_alloc();
  v0[33] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F00D1E0;
  uint64_t v15 = v0[13];
  uint64_t v16 = v0[14];
  uint64_t v17 = v0[11];
  uint64_t v18 = v0[12];
  return v22((uint64_t)(v0 + 2), v17, v18, v15, v16);
}

uint64_t sub_19F00D1E0()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F00D5B0;
  }
  else {
    uint64_t v2 = sub_19F00D2F4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F00D2F4()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 184);
    uint64_t v3 = *(void *)(v0 + 192);
    uint64_t v5 = *(void *)(v0 + 176);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 216);
    uint64_t v10 = *(void *)(v0 + 224);
    uint64_t v12 = *(void *)(v0 + 200);
    uint64_t v13 = *(void *)(v0 + 208);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 240))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 120)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 216);
    uint64_t v9 = *(void *)(v0 + 200);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 120))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 160);
      uint64_t v17 = *(void *)(v0 + 168);
      uint64_t v19 = *(void *)(v0 + 152);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 128))
  {
    uint64_t v22 = &type metadata for JetEngineBootstrap.URLProtocolHandler;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v22);
  }
  sub_19F1AD754(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
  swift_release();
  sub_19EF4BE88(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F00D5B0()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 88);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 120))
  {
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 152);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 272);
  sub_19F07DCF0(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F00D7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 112) = v15;
  *(void *)(v8 + 120) = v16;
  *(_OWORD *)(v8 + 96) = v14;
  *(void *)(v8 + 80) = a7;
  *(void *)(v8 + 88) = a8;
  *(void *)(v8 + 64) = a5;
  *(void *)(v8 + 72) = a6;
  *(void *)(v8 + 56) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 128) = v9;
  *(void *)(v8 + 136) = *(void *)(v9 - 8);
  *(void *)(v8 + 144) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 152) = v10;
  *(void *)(v8 + 160) = *(void *)(v10 - 8);
  *(void *)(v8 + 168) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 176) = v11;
  *(void *)(v8 + 184) = *(void *)(v11 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  *(void *)(v8 + 200) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F00D948, 0, 0);
}

uint64_t sub_19F00D948()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[26] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[25];
    uint64_t v21 = v0[23];
    uint64_t v20 = v0[22];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[7]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[6] = sub_19EEAD23C(6775106, 0xE300000000000000, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[23];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[25];
  uint64_t v12 = v0[22];
  uint64_t v13 = v0[7];
  v0[27] = v5;
  v0[28] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[29] = sub_19F1DB8DC();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472858 + dword_1E9472858);
  long long v14 = (void *)swift_task_alloc();
  v0[30] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F00DC0C;
  uint64_t v15 = v0[10];
  uint64_t v16 = v0[11];
  uint64_t v17 = v0[8];
  uint64_t v18 = v0[9];
  return v22((uint64_t)(v0 + 5), v17, v18, v15, v16);
}

uint64_t sub_19F00DC0C()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F00DFD4;
  }
  else {
    uint64_t v2 = sub_19F00DD20;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F00DD20()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v5 = *(void *)(v0 + 152);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 200);
    uint64_t v12 = *(void *)(v0 + 176);
    uint64_t v13 = *(void *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 216))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 96)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v7 = *(void *)(v0 + 192);
    uint64_t v9 = *(void *)(v0 + 176);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 96))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 136);
      uint64_t v17 = *(void *)(v0 + 144);
      uint64_t v19 = *(void *)(v0 + 128);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 104))
  {
    uint64_t v22 = &type metadata for Bag;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v22);
  }
  sub_19EE34290(*(void *)(v0 + 40));
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F00DFD4()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 64);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 96))
  {
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 248);
  sub_19F07D7A8(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F00E1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v15;
  *(void *)(v8 + 112) = v16;
  *(_OWORD *)(v8 + 88) = v14;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 64) = a6;
  *(void *)(v8 + 48) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 144) = v10;
  *(void *)(v8 + 152) = *(void *)(v10 - 8);
  *(void *)(v8 + 160) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 168) = v11;
  *(void *)(v8 + 176) = *(void *)(v11 - 8);
  *(void *)(v8 + 184) = swift_task_alloc();
  *(void *)(v8 + 192) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F00E36C, 0, 0);
}

uint64_t sub_19F00E36C()
{
  uint64_t v27 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[25] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v21 = v0[24];
    uint64_t v23 = v0[21];
    uint64_t v24 = v0[22];
    os_signpost_type_t v22 = v3;
    uint64_t v4 = *(void (**)(void))(v24 + 16);
    unint64_t v5 = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v4();
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v26 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_19EEBDC10(0, &qword_1EB392278);
    uint64_t v8 = sub_19F1DD98C();
    v0[5] = sub_19EEAD23C(v8, v9, &v26);
    sub_19F1DCB3C();
    swift_bridgeObjectRelease();
    os_signpost_id_t v10 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v22, v10, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v7, -1, -1);
    MEMORY[0x19F3C9470](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
  }
  else
  {
    uint64_t v11 = v0[22];

    uint64_t v4 = *(void (**)(void))(v11 + 16);
    unint64_t v5 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v12 = v0[24];
  uint64_t v13 = v0[21];
  uint64_t v14 = v0[6];
  v0[26] = v4;
  v0[27] = v5;
  ((void (*)(uint64_t, uint64_t, uint64_t))v4)(v12, v14, v13);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[28] = sub_19F1DB8DC();
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472AA8 + dword_1E9472AA8);
  uint64_t v15 = (void *)swift_task_alloc();
  v0[29] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_19F00E648;
  uint64_t v16 = v0[9];
  uint64_t v17 = v0[10];
  uint64_t v19 = v0[7];
  uint64_t v18 = v0[8];
  return v25(v19, v18, v16, v17);
}

uint64_t sub_19F00E648(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_19F00EA10;
  }
  else {
    uint64_t v4 = sub_19F00E75C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19F00E75C()
{
  uint64_t v24 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 144);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
      uint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208))(v10, v11, v12);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 88)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 88))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 128);
      uint64_t v17 = *(void *)(v0 + 136);
      uint64_t v19 = *(void *)(v0 + 120);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 96))
  {
    uint64_t ObjectType = swift_getObjectType();
    StartUpPerformanceEvent.record(checkpoint:)(&ObjectType);
  }
  uint64_t v20 = *(void **)(v0 + 240);
  sub_19F1ADA50(v20);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_19F00EA10()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 56);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 88))
  {
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 248);
  sub_19F07DFA8(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F00EC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v15;
  *(void *)(v8 + 112) = v16;
  *(_OWORD *)(v8 + 88) = v14;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 64) = a6;
  *(void *)(v8 + 48) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 144) = v10;
  *(void *)(v8 + 152) = *(void *)(v10 - 8);
  *(void *)(v8 + 160) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 168) = v11;
  *(void *)(v8 + 176) = *(void *)(v11 - 8);
  *(void *)(v8 + 184) = swift_task_alloc();
  *(void *)(v8 + 192) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F00EDA8, 0, 0);
}

uint64_t sub_19F00EDA8()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[25] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[24];
    uint64_t v21 = v0[22];
    uint64_t v20 = v0[21];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[6]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[5] = sub_19EEAD23C(0xD000000000000017, 0x800000019F269080, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[22];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[24];
  uint64_t v12 = v0[21];
  uint64_t v13 = v0[6];
  v0[26] = v5;
  v0[27] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[28] = sub_19F1DB8DC();
  os_signpost_type_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472A48 + dword_1E9472A48);
  long long v14 = (void *)swift_task_alloc();
  v0[29] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F00F070;
  uint64_t v15 = v0[9];
  uint64_t v16 = v0[10];
  uint64_t v18 = v0[7];
  uint64_t v17 = v0[8];
  return v22(v18, v17, v15, v16);
}

uint64_t sub_19F00F070(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_19F00F45C;
  }
  else {
    uint64_t v4 = sub_19F00F184;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19F00F184()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 144);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
      uint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 88)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 88))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 128);
      uint64_t v17 = *(void *)(v0 + 136);
      uint64_t v19 = *(void *)(v0 + 120);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 96))
  {
    uint64_t v22 = **(void **)(v0 + 240);
    StartUpPerformanceEvent.record(checkpoint:)(&v22);
  }
  sub_19F1AF360(*(void *)(v0 + 240));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F00F45C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 56);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 88))
  {
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 248);
  sub_19F07F40C(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F00F650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 144) = v15;
  *(void *)(v8 + 152) = v16;
  *(_OWORD *)(v8 + 128) = v14;
  *(void *)(v8 + 112) = a7;
  *(void *)(v8 + 120) = a8;
  *(void *)(v8 + 96) = a5;
  *(void *)(v8 + 104) = a6;
  *(void *)(v8 + 88) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 160) = v9;
  *(void *)(v8 + 168) = *(void *)(v9 - 8);
  *(void *)(v8 + 176) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 184) = v10;
  *(void *)(v8 + 192) = *(void *)(v10 - 8);
  *(void *)(v8 + 200) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 208) = v11;
  *(void *)(v8 + 216) = *(void *)(v11 - 8);
  *(void *)(v8 + 224) = swift_task_alloc();
  *(void *)(v8 + 232) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F00F7F4, 0, 0);
}

uint64_t sub_19F00F7F4()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[30] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[29];
    uint64_t v21 = v0[27];
    uint64_t v20 = v0[26];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[11]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[10] = sub_19EEAD23C(0xD000000000000021, 0x800000019F2692F0, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[27];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[29];
  uint64_t v12 = v0[26];
  uint64_t v13 = v0[11];
  v0[31] = v5;
  v0[32] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[33] = sub_19F1DB8DC();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E94729B8 + dword_1E94729B8);
  long long v14 = (void *)swift_task_alloc();
  v0[34] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F00FAC4;
  uint64_t v15 = v0[14];
  uint64_t v16 = v0[15];
  uint64_t v17 = v0[12];
  uint64_t v18 = v0[13];
  return v22((uint64_t)(v0 + 2), v17, v18, v15, v16);
}

uint64_t sub_19F00FAC4()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F00FE94;
  }
  else {
    uint64_t v2 = sub_19F00FBD8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F00FBD8()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v5 = *(void *)(v0 + 184);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 232);
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v13 = *(void *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 128)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 216);
    uint64_t v7 = *(void *)(v0 + 224);
    uint64_t v9 = *(void *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 128))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 168);
      uint64_t v17 = *(void *)(v0 + 176);
      uint64_t v19 = *(void *)(v0 + 160);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 136))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFB0);
    StartUpPerformanceEvent.record(checkpoint:)(&v22);
  }
  sub_19F1AF644(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F00FE94()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 96);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 128))
  {
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v10 = *(void *)(v0 + 160);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 280);
  sub_19F07F958(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F010088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 120) = v15;
  *(void *)(v8 + 128) = v16;
  *(_OWORD *)(v8 + 104) = v14;
  *(void *)(v8 + 88) = a7;
  *(void *)(v8 + 96) = a8;
  *(void *)(v8 + 72) = a5;
  *(void *)(v8 + 80) = a6;
  *(void *)(v8 + 64) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 136) = v9;
  *(void *)(v8 + 144) = *(void *)(v9 - 8);
  *(void *)(v8 + 152) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 160) = v10;
  *(void *)(v8 + 168) = *(void *)(v10 - 8);
  *(void *)(v8 + 176) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 184) = v11;
  *(void *)(v8 + 192) = *(void *)(v11 - 8);
  *(void *)(v8 + 200) = swift_task_alloc();
  *(void *)(v8 + 208) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F01022C, 0, 0);
}

uint64_t sub_19F01022C()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[27] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[26];
    uint64_t v21 = v0[24];
    uint64_t v20 = v0[23];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[8]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[7] = sub_19EEAD23C(0xD000000000000015, 0x800000019F269150, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[24];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[26];
  uint64_t v12 = v0[23];
  uint64_t v13 = v0[8];
  v0[28] = v5;
  v0[29] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[30] = sub_19F1DB8DC();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E94729E8 + dword_1E94729E8);
  long long v14 = (void *)swift_task_alloc();
  v0[31] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F0104FC;
  uint64_t v15 = v0[11];
  uint64_t v16 = v0[12];
  uint64_t v17 = v0[9];
  uint64_t v18 = v0[10];
  return v22((uint64_t)(v0 + 5), v17, v18, v15, v16);
}

uint64_t sub_19F0104FC()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0108C0;
  }
  else {
    uint64_t v2 = sub_19F010610;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F010610()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 168);
    uint64_t v3 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 160);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v13 = *(void *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 104)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v9 = *(void *)(v0 + 184);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 104))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 144);
      uint64_t v17 = *(void *)(v0 + 152);
      uint64_t v19 = *(void *)(v0 + 136);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 112))
  {
    uint64_t v22 = &type metadata for IntentDispatchTimeout;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v22);
  }
  sub_19F1AF8F4(*(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F0108C0()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 72);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 104))
  {
    uint64_t v9 = *(void *)(v0 + 144);
    uint64_t v8 = *(void *)(v0 + 152);
    uint64_t v10 = *(void *)(v0 + 136);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 256);
  sub_19F07F988(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F010AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v15;
  *(void *)(v8 + 112) = v16;
  *(_OWORD *)(v8 + 88) = v14;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 64) = a6;
  *(void *)(v8 + 48) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 144) = v10;
  *(void *)(v8 + 152) = *(void *)(v10 - 8);
  *(void *)(v8 + 160) = swift_task_alloc();
  *(void *)(v8 + 168) = type metadata accessor for PageIntentInstrumentation();
  *(void *)(v8 + 176) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 184) = v11;
  *(void *)(v8 + 192) = *(void *)(v11 - 8);
  *(void *)(v8 + 200) = swift_task_alloc();
  *(void *)(v8 + 208) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F010C88, 0, 0);
}

uint64_t sub_19F010C88()
{
  uint64_t v25 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[27] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[26];
    uint64_t v22 = v0[24];
    uint64_t v21 = v0[23];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
    unint64_t v6 = (v22 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[6]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v24 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[5] = sub_19EEAD23C(0xD000000000000019, 0x800000019F269130, &v24);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v4, v21);
  }
  else
  {
    uint64_t v10 = v0[24];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[26];
  uint64_t v12 = v0[23];
  uint64_t v13 = v0[6];
  v0[28] = v5;
  v0[29] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[30] = sub_19F1DB8DC();
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472A18 + dword_1E9472A18);
  long long v14 = (void *)swift_task_alloc();
  v0[31] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F010F54;
  uint64_t v15 = v0[22];
  uint64_t v16 = v0[9];
  uint64_t v17 = v0[10];
  uint64_t v18 = v0[7];
  uint64_t v19 = v0[8];
  return v23(v15, v18, v19, v16, v17);
}

uint64_t sub_19F010F54()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F01133C;
  }
  else {
    uint64_t v2 = sub_19F011068;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F011068()
{
  uint64_t v24 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 144);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v13 = *(void *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 88)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v9 = *(void *)(v0 + 184);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 88))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 128);
      uint64_t v17 = *(void *)(v0 + 136);
      uint64_t v19 = *(void *)(v0 + 120);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 96))
  {
    uint64_t v23 = *(void *)(v0 + 168);
    StartUpPerformanceEvent.record(checkpoint:)(&v23);
  }
  uint64_t v20 = *(void *)(v0 + 176);
  sub_19F1AFB80(v20);
  swift_release();
  sub_19EE94E88(v20, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_19F01133C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 56);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 88))
  {
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 256);
  sub_19F07FC04(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F01153C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 144) = v15;
  *(void *)(v8 + 152) = v16;
  *(_OWORD *)(v8 + 128) = v14;
  *(void *)(v8 + 112) = a7;
  *(void *)(v8 + 120) = a8;
  *(void *)(v8 + 96) = a5;
  *(void *)(v8 + 104) = a6;
  *(void *)(v8 + 88) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 160) = v9;
  *(void *)(v8 + 168) = *(void *)(v9 - 8);
  *(void *)(v8 + 176) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 184) = v10;
  *(void *)(v8 + 192) = *(void *)(v10 - 8);
  *(void *)(v8 + 200) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 208) = v11;
  *(void *)(v8 + 216) = *(void *)(v11 - 8);
  *(void *)(v8 + 224) = swift_task_alloc();
  *(void *)(v8 + 232) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F0116E0, 0, 0);
}

uint64_t sub_19F0116E0()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[30] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[29];
    uint64_t v21 = v0[27];
    uint64_t v20 = v0[26];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[11]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[10] = sub_19EEAD23C(0xD000000000000010, 0x800000019F269170, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[27];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[29];
  uint64_t v12 = v0[26];
  uint64_t v13 = v0[11];
  v0[31] = v5;
  v0[32] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[33] = sub_19F1DB8DC();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472960 + dword_1E9472960);
  long long v14 = (void *)swift_task_alloc();
  v0[34] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F0119B0;
  uint64_t v15 = v0[14];
  uint64_t v16 = v0[15];
  uint64_t v17 = v0[12];
  uint64_t v18 = v0[13];
  return v22((uint64_t)(v0 + 2), v17, v18, v15, v16);
}

uint64_t sub_19F0119B0()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F011D80;
  }
  else {
    uint64_t v2 = sub_19F011AC4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F011AC4()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v5 = *(void *)(v0 + 184);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 232);
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v13 = *(void *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 128)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 216);
    uint64_t v7 = *(void *)(v0 + 224);
    uint64_t v9 = *(void *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 128))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 168);
      uint64_t v17 = *(void *)(v0 + 176);
      uint64_t v19 = *(void *)(v0 + 160);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 136))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
    StartUpPerformanceEvent.record(checkpoint:)(&v22);
  }
  sub_19F1B0E88(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F011D80()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 96);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 128))
  {
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v10 = *(void *)(v0 + 160);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 280);
  sub_19F08053C(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F011F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 184) = v15;
  *(void *)(v8 + 192) = v16;
  *(_OWORD *)(v8 + 168) = v14;
  *(void *)(v8 + 152) = a7;
  *(void *)(v8 + 160) = a8;
  *(void *)(v8 + 136) = a5;
  *(void *)(v8 + 144) = a6;
  *(void *)(v8 + 128) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 200) = v9;
  *(void *)(v8 + 208) = *(void *)(v9 - 8);
  *(void *)(v8 + 216) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 224) = v10;
  *(void *)(v8 + 232) = *(void *)(v10 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 248) = v11;
  *(void *)(v8 + 256) = *(void *)(v11 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  *(void *)(v8 + 272) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F012118, 0, 0);
}

uint64_t sub_19F012118()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[34];
    uint64_t v21 = v0[32];
    uint64_t v20 = v0[31];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[16]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[15] = sub_19EEAD23C(0x72756769666E6F43, 0xED00006E6F697461, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[32];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[34];
  uint64_t v12 = v0[31];
  uint64_t v13 = v0[16];
  v0[36] = v5;
  v0[37] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[38] = sub_19F1DB8DC();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E94728D8 + dword_1E94728D8);
  long long v14 = (void *)swift_task_alloc();
  v0[39] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F0123F0;
  uint64_t v15 = v0[19];
  uint64_t v16 = v0[20];
  uint64_t v17 = v0[17];
  uint64_t v18 = v0[18];
  return v22((uint64_t)(v0 + 2), v17, v18, v15, v16);
}

uint64_t sub_19F0123F0()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0127BC;
  }
  else {
    uint64_t v2 = sub_19F012504;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F012504()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 232);
    uint64_t v3 = *(void *)(v0 + 240);
    uint64_t v5 = *(void *)(v0 + 224);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 264);
    uint64_t v10 = *(void *)(v0 + 272);
    uint64_t v12 = *(void *)(v0 + 248);
    uint64_t v13 = *(void *)(v0 + 256);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 288))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 168)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v7 = *(void *)(v0 + 264);
    uint64_t v9 = *(void *)(v0 + 248);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 168))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 208);
      uint64_t v17 = *(void *)(v0 + 216);
      uint64_t v19 = *(void *)(v0 + 200);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 176))
  {
    uint64_t v22 = &type metadata for JetPackAssetSession.Configuration;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v22);
  }
  sub_19F1B13FC(v0 + 16);
  swift_release();
  sub_19EEDFEE4(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F0127BC()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 136);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 168))
  {
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 216);
    uint64_t v10 = *(void *)(v0 + 200);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 320);
  sub_19F08085C(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F0129B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 144) = v15;
  *(void *)(v8 + 152) = v16;
  *(_OWORD *)(v8 + 128) = v14;
  *(void *)(v8 + 112) = a7;
  *(void *)(v8 + 120) = a8;
  *(void *)(v8 + 96) = a5;
  *(void *)(v8 + 104) = a6;
  *(void *)(v8 + 88) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 160) = v9;
  *(void *)(v8 + 168) = *(void *)(v9 - 8);
  *(void *)(v8 + 176) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 184) = v10;
  *(void *)(v8 + 192) = *(void *)(v10 - 8);
  *(void *)(v8 + 200) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 208) = v11;
  *(void *)(v8 + 216) = *(void *)(v11 - 8);
  *(void *)(v8 + 224) = swift_task_alloc();
  *(void *)(v8 + 232) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F012B54, 0, 0);
}

uint64_t sub_19F012B54()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[30] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[29];
    uint64_t v21 = v0[27];
    uint64_t v20 = v0[26];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[11]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[10] = sub_19EEAD23C(0xD000000000000011, 0x800000019F2692D0, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[27];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[29];
  uint64_t v12 = v0[26];
  uint64_t v13 = v0[11];
  v0[31] = v5;
  v0[32] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[33] = sub_19F1DB8DC();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472928 + dword_1E9472928);
  long long v14 = (void *)swift_task_alloc();
  v0[34] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F012E24;
  uint64_t v15 = v0[14];
  uint64_t v16 = v0[15];
  uint64_t v17 = v0[12];
  uint64_t v18 = v0[13];
  return v22((uint64_t)(v0 + 2), v17, v18, v15, v16);
}

uint64_t sub_19F012E24()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0131F4;
  }
  else {
    uint64_t v2 = sub_19F012F38;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F012F38()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v5 = *(void *)(v0 + 184);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 232);
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v13 = *(void *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 128)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 216);
    uint64_t v7 = *(void *)(v0 + 224);
    uint64_t v9 = *(void *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 128))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 168);
      uint64_t v17 = *(void *)(v0 + 176);
      uint64_t v19 = *(void *)(v0 + 160);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 136))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94709B0);
    StartUpPerformanceEvent.record(checkpoint:)(&v22);
  }
  sub_19F1B16DC(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F0131F4()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 96);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 128))
  {
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v10 = *(void *)(v0 + 160);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 280);
  sub_19F080B04(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F0133E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v15;
  *(void *)(v8 + 112) = v16;
  *(_OWORD *)(v8 + 88) = v14;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 64) = a6;
  *(void *)(v8 + 48) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 144) = v10;
  *(void *)(v8 + 152) = *(void *)(v10 - 8);
  *(void *)(v8 + 160) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 168) = v11;
  *(void *)(v8 + 176) = *(void *)(v11 - 8);
  *(void *)(v8 + 184) = swift_task_alloc();
  *(void *)(v8 + 192) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F01358C, 0, 0);
}

uint64_t sub_19F01358C()
{
  uint64_t v27 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[25] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v21 = v0[24];
    uint64_t v23 = v0[21];
    uint64_t v24 = v0[22];
    os_signpost_type_t v22 = v3;
    uint64_t v4 = *(void (**)(void))(v24 + 16);
    unint64_t v5 = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v4();
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v26 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_19EEBDC10(0, (unint64_t *)&qword_1E946DC70);
    uint64_t v8 = sub_19F1DD98C();
    v0[5] = sub_19EEAD23C(v8, v9, &v26);
    sub_19F1DCB3C();
    swift_bridgeObjectRelease();
    os_signpost_id_t v10 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v22, v10, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v7, -1, -1);
    MEMORY[0x19F3C9470](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
  }
  else
  {
    uint64_t v11 = v0[22];

    uint64_t v4 = *(void (**)(void))(v11 + 16);
    unint64_t v5 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v12 = v0[24];
  uint64_t v13 = v0[21];
  uint64_t v14 = v0[6];
  v0[26] = v4;
  v0[27] = v5;
  ((void (*)(uint64_t, uint64_t, uint64_t))v4)(v12, v14, v13);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[28] = sub_19F1DB8DC();
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472828 + dword_1E9472828);
  uint64_t v15 = (void *)swift_task_alloc();
  v0[29] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_19F013868;
  uint64_t v16 = v0[9];
  uint64_t v17 = v0[10];
  uint64_t v19 = v0[7];
  uint64_t v18 = v0[8];
  return v25(v19, v18, v16, v17);
}

uint64_t sub_19F013868(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_19F013C30;
  }
  else {
    uint64_t v4 = sub_19F01397C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19F01397C()
{
  uint64_t v24 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 144);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
      uint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208))(v10, v11, v12);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 88)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 88))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 128);
      uint64_t v17 = *(void *)(v0 + 136);
      uint64_t v19 = *(void *)(v0 + 120);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 96))
  {
    uint64_t ObjectType = swift_getObjectType();
    StartUpPerformanceEvent.record(checkpoint:)(&ObjectType);
  }
  uint64_t v20 = *(void **)(v0 + 240);
  sub_19F1B198C(v20);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_19F013C30()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 56);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 88))
  {
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 248);
  sub_19F080B34(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F013E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v15;
  *(void *)(v8 + 112) = v16;
  *(_OWORD *)(v8 + 88) = v14;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 64) = a6;
  *(void *)(v8 + 48) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 144) = v10;
  *(void *)(v8 + 152) = *(void *)(v10 - 8);
  *(void *)(v8 + 160) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 168) = v11;
  *(void *)(v8 + 176) = *(void *)(v11 - 8);
  *(void *)(v8 + 184) = swift_task_alloc();
  *(void *)(v8 + 192) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F013FC8, 0, 0);
}

uint64_t sub_19F013FC8()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[25] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[24];
    uint64_t v21 = v0[22];
    uint64_t v20 = v0[21];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[6]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[5] = sub_19EEAD23C(0xD000000000000013, 0x800000019F2692B0, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[22];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[24];
  uint64_t v12 = v0[21];
  uint64_t v13 = v0[6];
  v0[26] = v5;
  v0[27] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[28] = sub_19F1DB8DC();
  os_signpost_type_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472888 + dword_1E9472888);
  long long v14 = (void *)swift_task_alloc();
  v0[29] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F014290;
  uint64_t v15 = v0[9];
  uint64_t v16 = v0[10];
  uint64_t v18 = v0[7];
  uint64_t v17 = v0[8];
  return v22(v18, v17, v15, v16);
}

uint64_t sub_19F014290(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_19F01467C;
  }
  else {
    uint64_t v4 = sub_19F0143A4;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19F0143A4()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 144);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
      uint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 88)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 88))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 128);
      uint64_t v17 = *(void *)(v0 + 136);
      uint64_t v19 = *(void *)(v0 + 120);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 96))
  {
    uint64_t v22 = **(void **)(v0 + 240);
    StartUpPerformanceEvent.record(checkpoint:)(&v22);
  }
  sub_19F1B19B4(*(void *)(v0 + 240));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F01467C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 56);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 88))
  {
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 248);
  sub_19F080B5C(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F014870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v15;
  *(void *)(v8 + 112) = v16;
  *(_OWORD *)(v8 + 88) = v14;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 64) = a6;
  *(void *)(v8 + 48) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 144) = v10;
  *(void *)(v8 + 152) = *(void *)(v10 - 8);
  *(void *)(v8 + 160) = swift_task_alloc();
  *(void *)(v8 + 168) = type metadata accessor for JetPackAsset(0);
  *(void *)(v8 + 176) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 184) = v11;
  *(void *)(v8 + 192) = *(void *)(v11 - 8);
  *(void *)(v8 + 200) = swift_task_alloc();
  *(void *)(v8 + 208) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F014A44, 0, 0);
}

uint64_t sub_19F014A44()
{
  uint64_t v25 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[27] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[26];
    uint64_t v22 = v0[24];
    uint64_t v21 = v0[23];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
    unint64_t v6 = (v22 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[6]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v24 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[5] = sub_19EEAD23C(0x416B63615074654ALL, 0xEC00000074657373, &v24);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v4, v21);
  }
  else
  {
    uint64_t v10 = v0[24];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[26];
  uint64_t v12 = v0[23];
  uint64_t v13 = v0[6];
  v0[28] = v5;
  v0[29] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[30] = sub_19F1DB8DC();
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472740 + dword_1E9472740);
  long long v14 = (void *)swift_task_alloc();
  v0[31] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F014D14;
  uint64_t v15 = v0[22];
  uint64_t v16 = v0[9];
  uint64_t v17 = v0[10];
  uint64_t v18 = v0[7];
  uint64_t v19 = v0[8];
  return v23(v15, v18, v19, v16, v17);
}

uint64_t sub_19F014D14()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0150FC;
  }
  else {
    uint64_t v2 = sub_19F014E28;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F014E28()
{
  uint64_t v24 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 144);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v13 = *(void *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 88)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v9 = *(void *)(v0 + 184);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 88))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 128);
      uint64_t v17 = *(void *)(v0 + 136);
      uint64_t v19 = *(void *)(v0 + 120);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 96))
  {
    uint64_t v23 = *(void *)(v0 + 168);
    StartUpPerformanceEvent.record(checkpoint:)(&v23);
  }
  uint64_t v20 = *(void *)(v0 + 176);
  sub_19F1B1C48(v20);
  swift_release();
  sub_19EE94E88(v20, type metadata accessor for JetPackAsset);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_19F0150FC()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 56);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01CD58(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 88))
  {
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 256);
  sub_19F080B84(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F0152FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 160) = v15;
  *(void *)(v8 + 168) = v16;
  *(_OWORD *)(v8 + 144) = v14;
  *(void *)(v8 + 128) = a7;
  *(void *)(v8 + 136) = a8;
  *(void *)(v8 + 112) = a5;
  *(void *)(v8 + 120) = a6;
  *(void *)(v8 + 104) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 176) = v9;
  *(void *)(v8 + 184) = *(void *)(v9 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 200) = v10;
  *(void *)(v8 + 208) = *(void *)(v10 - 8);
  *(void *)(v8 + 216) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 224) = v11;
  *(void *)(v8 + 232) = *(void *)(v11 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  *(void *)(v8 + 248) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F0154A0, 0, 0);
}

uint64_t sub_19F0154A0()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[32] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[31];
    uint64_t v21 = v0[29];
    uint64_t v20 = v0[28];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[13]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[12] = sub_19EEAD23C(0xD000000000000011, 0x800000019F269250, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[29];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[31];
  uint64_t v12 = v0[28];
  uint64_t v13 = v0[13];
  v0[33] = v5;
  v0[34] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[35] = sub_19F1DB8DC();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E94727E0 + dword_1E94727E0);
  long long v14 = (void *)swift_task_alloc();
  v0[36] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F015770;
  uint64_t v15 = v0[16];
  uint64_t v16 = v0[17];
  uint64_t v17 = v0[14];
  uint64_t v18 = v0[15];
  return v22((uint64_t)(v0 + 2), v17, v18, v15, v16);
}

uint64_t sub_19F015770()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F015B3C;
  }
  else {
    uint64_t v2 = sub_19F015884;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F015884()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 208);
    uint64_t v3 = *(void *)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 200);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 240);
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v12 = *(void *)(v0 + 224);
    uint64_t v13 = *(void *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 144)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 240);
    uint64_t v9 = *(void *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 144))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 184);
      uint64_t v17 = *(void *)(v0 + 192);
      uint64_t v19 = *(void *)(v0 + 176);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 152))
  {
    uint64_t v22 = &type metadata for DiskJetPackLoader;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v22);
  }
  sub_19F1B20DC(v0 + 16);
  swift_release();
  sub_19EF58B50(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F015B3C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 112);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01D0B4;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 144))
  {
    uint64_t v9 = *(void *)(v0 + 184);
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 176);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 296);
  sub_19F080BB4(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F015D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 160) = v15;
  *(void *)(v8 + 168) = v16;
  *(_OWORD *)(v8 + 144) = v14;
  *(void *)(v8 + 128) = a7;
  *(void *)(v8 + 136) = a8;
  *(void *)(v8 + 112) = a5;
  *(void *)(v8 + 120) = a6;
  *(void *)(v8 + 104) = a4;
  uint64_t v9 = sub_19F1DB97C();
  *(void *)(v8 + 176) = v9;
  *(void *)(v8 + 184) = *(void *)(v9 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB8AC();
  *(void *)(v8 + 200) = v10;
  *(void *)(v8 + 208) = *(void *)(v10 - 8);
  *(void *)(v8 + 216) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB85C();
  *(void *)(v8 + 224) = v11;
  *(void *)(v8 + 232) = *(void *)(v11 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  *(void *)(v8 + 248) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F015ED4, 0, 0);
}

uint64_t sub_19F015ED4()
{
  uint64_t v24 = v0;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[32] = __swift_project_value_buffer(v1, (uint64_t)qword_1E9498AC0);
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[31];
    uint64_t v21 = v0[29];
    uint64_t v20 = v0[28];
    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    unint64_t v6 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(uint64_t, void))v5)(v4, v0[13]);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[12] = sub_19EEAD23C(0xD000000000000015, 0x800000019F269230, &v23);
    sub_19F1DCB3C();
    os_signpost_id_t v9 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v9, "MakeAsyncDependency", "object=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v8, -1, -1);
    MEMORY[0x19F3C9470](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v20);
  }
  else
  {
    uint64_t v10 = v0[29];

    long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v6 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[31];
  uint64_t v12 = v0[28];
  uint64_t v13 = v0[13];
  v0[33] = v5;
  v0[34] = v6;
  v5(v11, v13, v12);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[35] = sub_19F1DB8DC();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9472790 + dword_1E9472790);
  long long v14 = (void *)swift_task_alloc();
  v0[36] = v14;
  *long long v14 = v0;
  v14[1] = sub_19F0161A4;
  uint64_t v15 = v0[16];
  uint64_t v16 = v0[17];
  uint64_t v17 = v0[14];
  uint64_t v18 = v0[15];
  return v22((uint64_t)(v0 + 2), v17, v18, v15, v16);
}

uint64_t sub_19F0161A4()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F016570;
  }
  else {
    uint64_t v2 = sub_19F0162B8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0162B8()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 208);
    uint64_t v3 = *(void *)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 200);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
      unint64_t v6 = "";
    }
    uint64_t v11 = *(void *)(v0 + 240);
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v12 = *(void *)(v0 + 224);
    uint64_t v13 = *(void *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264))(v10, v11, v12);
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    os_signpost_id_t v15 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x19F3C9470](v14, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (*(void *)(v0 + 144)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 240);
    uint64_t v9 = *(void *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (*(void *)(v0 + 144))
    {
LABEL_8:
      uint64_t v18 = *(void *)(v0 + 184);
      uint64_t v17 = *(void *)(v0 + 192);
      uint64_t v19 = *(void *)(v0 + 176);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F38918], v19);
      sub_19F1DB9BC();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  if (*(void *)(v0 + 152))
  {
    uint64_t v22 = &type metadata for InMemoryJetPackLoader;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v22);
  }
  sub_19F1B23B0(v0 + 16);
  swift_release();
  sub_19EF58AFC(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_19F016570()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 112);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F01CD2C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F01EEA8(v7);
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 144))
  {
    uint64_t v9 = *(void *)(v0 + 184);
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 176);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F38910], v10);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = *(void **)(v0 + 296);
  sub_19F080BE4(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F016764(uint64_t a1)
{
  *(void *)(v2 + 200) = a1;
  *(void *)(v2 + 208) = v1;
  return MEMORY[0x1F4188298](sub_19F016784, 0, 0);
}

uint64_t sub_19F016784()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[26];
  sub_19F1DD95C();
  LOBYTE(v1) = sub_19EEAC6C0(v1, (uint64_t)&type metadata for JetEngineBootstrap.URLProtocolHandler, v0[10]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_19F1DD95C();
    uint64_t v2 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v3 = v2;
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    v0[27] = sub_19F007DC8();
    return MEMORY[0x1F4188298](sub_19F016904, 0, 0);
  }
}

uint64_t sub_19F016904()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F0169C8;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF52EE4(v2);
  sub_19EEBD664(v2, &qword_1E9471080);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0169C8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 224) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F016B34, 0, 0);
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 200);
    long long v9 = *(_OWORD *)(v1 + 160);
    uint64_t v5 = *(void *)(v1 + 176);
    uint64_t v6 = *(void *)(v1 + 184);
    swift_release();
    *(_OWORD *)uint64_t v4 = v9;
    *(void *)(v4 + 16) = v5;
    *(void *)(v4 + 24) = v6;
    uint64_t v7 = *(uint64_t (**)(void))(v2 + 8);
    return v7();
  }
}

uint64_t sub_19F016B34()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F016B98(uint64_t a1)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = v1;
  return MEMORY[0x1F4188298](sub_19F016BB8, 0, 0);
}

uint64_t sub_19F016BB8()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[23];
  sub_19F1DD95C();
  LOBYTE(v1) = sub_19EEAC6C0(v1, (uint64_t)&type metadata for Bag, v0[10]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_19F1DD95C();
    uint64_t v2 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v3 = v2;
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    v0[24] = sub_19F008328();
    return MEMORY[0x1F4188298](sub_19F016D38, 0, 0);
  }
}

uint64_t sub_19F016D38()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F016DFC;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF52E9C(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1EB3909D0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F016DFC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 200) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F016F58, 0, 0);
  }
  else
  {
    uint64_t v4 = *(void **)(v1 + 176);
    uint64_t v5 = *(void *)(v1 + 160);
    swift_release();
    *uint64_t v4 = v5;
    uint64_t v6 = *(uint64_t (**)(void))(v2 + 8);
    return v6();
  }
}

uint64_t sub_19F016F58()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F016FBC()
{
  *(void *)(v1 + 176) = v0;
  return MEMORY[0x1F4188298](sub_19F016FDC, 0, 0);
}

uint64_t sub_19F016FDC()
{
  uint64_t v1 = sub_19EEBDC10(0, &qword_1EB392278);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[22];
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v2, v1, v0[10]);
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v4 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v5 = v4;
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    v0[23] = sub_19F00887C();
    return MEMORY[0x1F4188298](sub_19F017174, 0, 0);
  }
}

uint64_t sub_19F017174()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F017238;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF53100(v2);
  sub_19EEBD664(v2, &qword_1E94738A0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F017238()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 192) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F01EFCC, 0, 0);
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 160);
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 8);
    return v5(v4);
  }
}

uint64_t sub_19F017390()
{
  *(void *)(v1 + 176) = v0;
  return MEMORY[0x1F4188298](sub_19F0173B0, 0, 0);
}

uint64_t sub_19F0173B0()
{
  uint64_t started = type metadata accessor for StartUpPerformanceEvent();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[22];
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v2, started, v0[10]);
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v4 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v5 = v4;
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    v0[23] = sub_19F008DE0();
    return MEMORY[0x1F4188298](sub_19F017538, 0, 0);
  }
}

uint64_t sub_19F017538()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F017238;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF546C0(v2);
  sub_19EEBD664(v2, &qword_1E9471060);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0175FC(uint64_t a1)
{
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = v1;
  return MEMORY[0x1F4188298](sub_19F01761C, 0, 0);
}

uint64_t sub_19F01761C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFB0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[27];
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v2, v1, v0[10]);
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v4 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v5 = v4;
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    v0[28] = sub_19F0091E8();
    return MEMORY[0x1F4188298](sub_19F0177A8, 0, 0);
  }
}

uint64_t sub_19F0177A8()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F01786C;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF54738(v2);
  sub_19EEBD664(v2, &qword_1E9471038);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F01786C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 232) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F01EFD0, 0, 0);
  }
  else
  {
    sub_19EEBB420((long long *)(v1 + 160), *(void *)(v1 + 208));
    swift_release();
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

uint64_t sub_19F0179CC(uint64_t a1)
{
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = v1;
  return MEMORY[0x1F4188298](sub_19F0179EC, 0, 0);
}

uint64_t sub_19F0179EC()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[24];
  sub_19F1DD95C();
  LOBYTE(v1) = sub_19EEAC6C0(v1, (uint64_t)&type metadata for IntentDispatchTimeout, v0[10]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_19F1DD95C();
    uint64_t v2 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v3 = v2;
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    v0[25] = sub_19F0096E4();
    return MEMORY[0x1F4188298](sub_19F017B6C, 0, 0);
  }
}

uint64_t sub_19F017B6C()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F017C30;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF54904(v2);
  sub_19EEBD664(v2, &qword_1E9471040);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F017C30()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 208) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F017D94, 0, 0);
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 184);
    uint64_t v5 = *(void *)(v1 + 160);
    uint64_t v6 = *(unsigned __int8 *)(v1 + 168);
    swift_release();
    *(void *)uint64_t v4 = v5;
    *(unsigned char *)(v4 + 8) = v6;
    uint64_t v7 = *(uint64_t (**)(void))(v2 + 8);
    return v7();
  }
}

uint64_t sub_19F017D94()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F017DF8(uint64_t a1)
{
  v2[23] = a1;
  unsigned char v2[24] = v1;
  v2[25] = type metadata accessor for PageIntentInstrumentation();
  v2[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F017E8C, 0, 0);
}

uint64_t sub_19F017E8C()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  sub_19F1DD95C();
  LOBYTE(v1) = sub_19EEAC6C0(v2, v1, v0[20]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_19F1DD95C();
    uint64_t v3 = sub_19EF26A38(v0[21]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v4 = v3;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    v0[27] = sub_19F009C40();
    return MEMORY[0x1F4188298](sub_19F018010, 0, 0);
  }
}

uint64_t sub_19F018010()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[26];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_19F0180D0;
  v0[10] = swift_continuation_init();
  uint64_t v3 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v3 + 72) = 1;
  sub_19EF5494C(v3);
  sub_19EEBD664(v3, (uint64_t *)&unk_1E9471050);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0180D0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 224) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F01EDCC, 0, 0);
  }
  else
  {
    sub_19EE948D8(*(void *)(v1 + 208), *(void *)(v1 + 184), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

uint64_t sub_19F01824C(uint64_t a1)
{
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = v1;
  return MEMORY[0x1F4188298](sub_19F01826C, 0, 0);
}

uint64_t sub_19F01826C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[27];
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v2, v1, v0[10]);
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v4 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v5 = v4;
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    v0[28] = sub_19F00A240();
    return MEMORY[0x1F4188298](sub_19F0183F8, 0, 0);
  }
}

uint64_t sub_19F0183F8()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F01786C;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF554F0(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1E9473890);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0184BC(uint64_t a1)
{
  *(void *)(v2 + 248) = a1;
  *(void *)(v2 + 256) = v1;
  return MEMORY[0x1F4188298](sub_19F0184DC, 0, 0);
}

uint64_t sub_19F0184DC()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[32];
  sub_19F1DD95C();
  LOBYTE(v1) = sub_19EEAC6C0(v1, (uint64_t)&type metadata for JetPackAssetSession.Configuration, v0[10]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_19F1DD95C();
    uint64_t v2 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *char v3 = v2;
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    v0[33] = sub_19F00A73C();
    return MEMORY[0x1F4188298](sub_19F01865C, 0, 0);
  }
}

uint64_t sub_19F01865C()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_19F018720;
  v0[20] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 20);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF55948(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1E9473870);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F018720()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 272) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F018890, 0, 0);
  }
  else
  {
    uint64_t v4 = (_OWORD *)(v1 + 80);
    uint64_t v5 = *(_OWORD **)(v1 + 248);
    long long v6 = v4[4];
    long long v8 = v4[1];
    long long v7 = v4[2];
    v5[3] = v4[3];
    v5[4] = v6;
    v5[1] = v8;
    long long v5[2] = v7;
    *uint64_t v5 = *v4;
    swift_release();
    uint64_t v9 = *(uint64_t (**)(void))(v2 + 8);
    return v9();
  }
}

uint64_t sub_19F018890()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0188F4(uint64_t a1)
{
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = v1;
  return MEMORY[0x1F4188298](sub_19F018914, 0, 0);
}

uint64_t sub_19F018914()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94709B0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[27];
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v2, v1, v0[10]);
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v4 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v5 = v4;
    swift_willThrow();
    long long v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    v0[28] = sub_19F00ACC0();
    return MEMORY[0x1F4188298](sub_19F018AA0, 0, 0);
  }
}

uint64_t sub_19F018AA0()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F018B64;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF55B2C(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1E9473880);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F018B64()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 232) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F018CC4, 0, 0);
  }
  else
  {
    sub_19EEBB420((long long *)(v1 + 160), *(void *)(v1 + 208));
    swift_release();
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

uint64_t sub_19F018CC4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F018D28()
{
  *(void *)(v1 + 176) = v0;
  return MEMORY[0x1F4188298](sub_19F018D48, 0, 0);
}

uint64_t sub_19F018D48()
{
  uint64_t v1 = sub_19EEBDC10(0, (unint64_t *)&qword_1E946DC70);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[22];
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v2, v1, v0[10]);
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v4 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v5 = v4;
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    v0[23] = sub_19F00B1BC();
    return MEMORY[0x1F4188298](sub_19F018EE0, 0, 0);
  }
}

uint64_t sub_19F018EE0()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F017238;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF55CF8(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1E9470FF0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F018FA4()
{
  *(void *)(v1 + 176) = v0;
  return MEMORY[0x1F4188298](sub_19F018FC4, 0, 0);
}

uint64_t sub_19F018FC4()
{
  uint64_t v1 = type metadata accessor for JetPackAssetSession();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[22];
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v2, v1, v0[10]);
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v4 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v5 = v4;
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    v0[23] = sub_19F00B728();
    return MEMORY[0x1F4188298](sub_19F01914C, 0, 0);
  }
}

uint64_t sub_19F01914C()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F019210;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF55D40(v2);
  sub_19EEBD664(v2, qword_1E9476580);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F019210()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 192) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F019368, 0, 0);
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 160);
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 8);
    return v5(v4);
  }
}

uint64_t sub_19F019368()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0193CC(uint64_t a1)
{
  v2[23] = a1;
  unsigned char v2[24] = v1;
  v2[25] = type metadata accessor for JetPackAsset(0);
  v2[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F019460, 0, 0);
}

uint64_t sub_19F019460()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  sub_19F1DD95C();
  LOBYTE(v1) = sub_19EEAC6C0(v2, v1, v0[20]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_19F1DD95C();
    uint64_t v3 = sub_19EF26A38(v0[21]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v4 = v3;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    v0[27] = sub_19F00BC84();
    return MEMORY[0x1F4188298](sub_19F0195E4, 0, 0);
  }
}

uint64_t sub_19F0195E4()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[26];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_19F0196A4;
  v0[10] = swift_continuation_init();
  uint64_t v3 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v3 + 72) = 1;
  sub_19EF55D98(v3);
  sub_19EEBD664(v3, (uint64_t *)&unk_1E9473840);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0196A4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 224) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F019820, 0, 0);
  }
  else
  {
    sub_19EE948D8(*(void *)(v1 + 208), *(void *)(v1 + 184), type metadata accessor for JetPackAsset);
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

uint64_t sub_19F019820()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F01988C(uint64_t a1)
{
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = v1;
  return MEMORY[0x1F4188298](sub_19F0198AC, 0, 0);
}

uint64_t sub_19F0198AC()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[29];
  sub_19F1DD95C();
  LOBYTE(v1) = sub_19EEAC6C0(v1, (uint64_t)&type metadata for DiskJetPackLoader, v0[10]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_19F1DD95C();
    uint64_t v2 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v3 = v2;
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    v0[30] = sub_19F00C284();
    return MEMORY[0x1F4188298](sub_19F019A2C, 0, 0);
  }
}

uint64_t sub_19F019A2C()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F019AF0;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF56070(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1E9473860);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F019AF0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 248) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F019C60, 0, 0);
  }
  else
  {
    uint64_t v4 = (long long *)(v1 + 160);
    uint64_t v5 = *(void *)(v1 + 224);
    long long v6 = *v4;
    long long v7 = v4[1];
    long long v8 = v4[2];
    *(void *)(v5 + 48) = *((void *)v4 + 6);
    *(_OWORD *)(v5 + 16) = v7;
    *(_OWORD *)(v5 + 32) = v8;
    *(_OWORD *)uint64_t v5 = v6;
    swift_release();
    uint64_t v9 = *(uint64_t (**)(void))(v2 + 8);
    return v9();
  }
}

uint64_t sub_19F019C60()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F019CC4(uint64_t a1)
{
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = v1;
  return MEMORY[0x1F4188298](sub_19F019CE4, 0, 0);
}

uint64_t sub_19F019CE4()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[29];
  sub_19F1DD95C();
  LOBYTE(v1) = sub_19EEAC6C0(v1, (uint64_t)&type metadata for InMemoryJetPackLoader, v0[10]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_19F1DD95C();
    uint64_t v2 = sub_19EF26A38(v0[10]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    swift_allocError();
    *uint64_t v3 = v2;
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    v0[30] = sub_19F00C7F8();
    return MEMORY[0x1F4188298](sub_19F019E64, 0, 0);
  }
}

uint64_t sub_19F019E64()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F019F28;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF56264(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1E9473850);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F019F28()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 248) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_19F01EFD4, 0, 0);
  }
  else
  {
    uint64_t v4 = (long long *)(v1 + 160);
    uint64_t v5 = *(void *)(v1 + 224);
    long long v6 = *v4;
    long long v7 = v4[1];
    long long v8 = v4[2];
    *(void *)(v5 + 48) = *((void *)v4 + 6);
    *(_OWORD *)(v5 + 16) = v7;
    *(_OWORD *)(v5 + 32) = v8;
    *(_OWORD *)uint64_t v5 = v6;
    swift_release();
    uint64_t v9 = *(uint64_t (**)(void))(v2 + 8);
    return v9();
  }
}

uint64_t sub_19F01A098(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F01A0B8, 0, 0);
}

uint64_t sub_19F01A0B8()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9472A58 + dword_1E9472A58);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EECE0E0;
  uint64_t v3 = v0[2];
  return v5(v3, v1);
}

uint64_t sub_19F01A180(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F01A1A0, 0, 0);
}

uint64_t sub_19F01A1A0()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9472838 + dword_1E9472838);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EECE0E0;
  uint64_t v3 = v0[2];
  return v5(v3, v1);
}

uint64_t sub_19F01A268(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19EE34AD4, 0, 0);
}

uint64_t sub_19F01A288(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19EE34B9C, 0, 0);
}

uint64_t sub_19F01A2A8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19EE34C64, 0, 0);
}

uint64_t sub_19F01A2C8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F01A2E8, 0, 0);
}

uint64_t sub_19F01A2E8()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9472938 + dword_1E9472938);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EECE0E0;
  uint64_t v3 = v0[2];
  return v5(v3, v1);
}

uint64_t sub_19F01A3B0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F01A3D0, 0, 0);
}

uint64_t sub_19F01A3D0()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9472898 + dword_1E9472898);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EECE0E0;
  uint64_t v3 = v0[2];
  return v5(v3, v1);
}

uint64_t sub_19F01A498(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F01A4B8, 0, 0);
}

uint64_t sub_19F01A4B8()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E94728E8 + dword_1E94728E8);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EECE0E0;
  uint64_t v3 = v0[2];
  return v5(v3, v1);
}

uint64_t sub_19F01A580(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F01A5A0, 0, 0);
}

uint64_t sub_19F01A5A0()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9472718 + dword_1E9472718);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EECE0E0;
  uint64_t v3 = v0[2];
  return v5(v3, v1);
}

uint64_t sub_19F01A668(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F01A688, 0, 0);
}

uint64_t sub_19F01A688()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E94727A0 + dword_1E94727A0);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EE48564;
  uint64_t v3 = v0[2];
  return v5(v3, v1);
}

uint64_t sub_19F01A750(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F01A770, 0, 0);
}

uint64_t sub_19F01A770()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9472750 + dword_1E9472750);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EECE0E0;
  uint64_t v3 = v0[2];
  return v5(v3, v1);
}

uint64_t sub_19F01A838()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 112))
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 232, 7);
}

void sub_19F01A8C8()
{
  sub_19EFFC250(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_19F01A8E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_19F01A918(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v10 = type metadata accessor for JSPlatformUnavailableObject();
  uint64_t v31 = v10;
  unint64_t v32 = &off_1EF146BC0;
  *(void *)&long long v30 = a1;
  uint64_t v11 = (void *)*a5;
  unint64_t v13 = sub_19EEBD400(a2, a3);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = (void *)*a5;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7] + 40 * v13;
      __swift_destroy_boxed_opaque_existential_1Tm(v20);
      return sub_19EEBB420(&v30, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a4 & 1) == 0)
  {
    sub_19EFBF704();
    goto LABEL_7;
  }
  sub_19EFB9F38(v16, a4 & 1);
  unint64_t v22 = sub_19EEBD400(a2, a3);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_19F1DD65C();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = (void *)*a5;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v30, v10);
  double v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (uint64_t *)((char *)&v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v28 + 16))(v27, v25);
  sub_19F01AB10(v13, a2, a3, *v27, v19);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v30);
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F01AB10(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v16 = type metadata accessor for JSPlatformUnavailableObject();
  char v17 = &off_1EF146BC0;
  *(void *)&long long v15 = a4;
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = (void *)(a5[6] + 16 * a1);
  *uint64_t v10 = a2;
  v10[1] = a3;
  uint64_t result = sub_19EEBB420(&v15, a5[7] + 40 * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

char *sub_19F01ABC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = dlopen("/AppleInternal/Library/Frameworks/JetTracingSupport.framework/JetTracingSupport", 4);
  if (!v6)
  {
    if (qword_1E946FBA8 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)qword_1E946FBD8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
    id v12 = v10;
    uint64_t v42 = sub_19EEC3F3C(0, 45, 0, MEMORY[0x1E4FBC860]);
    v13._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
    v13._object = (void *)0x800000019F26DC80;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t result = dlerror();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v14 = sub_19F1DBF1C();
    uint64_t v41 = MEMORY[0x1E4FBB1A0];
    uint64_t v39 = v14;
    uint64_t v40 = v15;
    sub_19EEC3ED8((uint64_t)&v39, (uint64_t)v35, &qword_1EB393260);
    long long v33 = 0u;
    long long v34 = 0u;
    sub_19EEC3E70((uint64_t)v35, (uint64_t)&v33);
    char v38 = 0;
    long long v36 = v33;
    long long v37 = v34;
    uint64_t v16 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v16 = sub_19EEC3F3C(0, v16[2] + 1, 1, v16);
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1) {
      uint64_t v16 = sub_19EEC3F3C((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    _OWORD v16[2] = v18 + 1;
    uint64_t v19 = &v16[5 * v18];
    long long v20 = v36;
    long long v21 = v37;
    *((unsigned char *)v19 + 64) = v38;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    uint64_t v42 = v16;
    sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
LABEL_21:
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v22);
    *(void *)(v11 + 32) = v42;
    *(void *)&long long v36 = v12;
    LOBYTE(v33) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v33);

    return (char *)swift_bridgeObjectRelease();
  }
  long long v7 = v6;
  uint64_t v8 = sub_19F1DBE3C();
  unint64_t v32 = (uint64_t (*)(uint64_t))dlsym(v7, (const char *)(v8 + 32));
  swift_release();
  if (!v32)
  {
    if (qword_1E946FBA8 != -1) {
      swift_once();
    }
    uint64_t v24 = (void *)qword_1E946FBD8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
    id v12 = v24;
    uint64_t v42 = sub_19EEC3F3C(0, 35, 0, MEMORY[0x1E4FBC860]);
    v25._uint64_t countAndFlagsBits = 0x74636E7566206F4ELL;
    v25._object = (void *)0xEC000000206E6F69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t v41 = MEMORY[0x1E4FBB1A0];
    uint64_t v39 = a1;
    uint64_t v40 = a2;
    sub_19EEC3ED8((uint64_t)&v39, (uint64_t)v35, &qword_1EB393260);
    long long v33 = 0u;
    long long v34 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v35, (uint64_t)&v33);
    char v38 = 0;
    long long v36 = v33;
    long long v37 = v34;
    uint64_t v26 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
    }
    unint64_t v28 = v26[2];
    unint64_t v27 = v26[3];
    if (v28 >= v27 >> 1) {
      uint64_t v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
    }
    void v26[2] = v28 + 1;
    uint64_t v29 = &v26[5 * v28];
    long long v30 = v36;
    long long v31 = v37;
    *((unsigned char *)v29 + 64) = v38;
    *((_OWORD *)v29 + 2) = v30;
    *((_OWORD *)v29 + 3) = v31;
    uint64_t v42 = v26;
    sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
    unint64_t v23 = 0x800000019F26DCB0;
    unint64_t v22 = 0xD000000000000016;
    goto LABEL_21;
  }
  return (char *)v32(a3);
}

void sub_19F01AFE4()
{
  sub_19EFFE184(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t objectdestroy_12Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F01B044()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F01B07C()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_19F01B098()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_19F01B0B4(uint64_t a1)
{
  return sub_19F0004A0(a1, *(void *)(v1 + 16));
}

uint64_t sub_19F01B0C0()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_19F01B0DC()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_19F01B0F8()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_19F01B114()
{
  uint64_t v1 = (int *)(type metadata accessor for JSSource() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[7];
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  unint64_t v8 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v8 + 8;

  return MEMORY[0x1F4186498](v0, v9, v2 | 7);
}

JSValue sub_19F01B260@<X0>(Swift::Bool a1@<W0>, JSValue *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for JSSource() - 8);
  v9.value.super.Class isa = *(Class *)(v2
                                + ((*(void *)(v5 + 64)
                                  + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
                                  + 7) & 0xFFFFFFFFFFFFFFF8));
  v9.is_nil = a1;
  result.super.Class isa = JSSource.evaluate(against:in:)(v9, v6).super.isa;
  if (!v8) {
    a2->super.Class isa = result.super.isa;
  }
  return result;
}

uint64_t sub_19F01B310()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

void sub_19F01B32C(uint64_t a1)
{
  sub_19F000380(a1, *(void *)(v1 + 16), *(void (**)(void **__return_ptr))(v1 + 24));
}

uint64_t sub_19F01B338()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_19F01B354()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_19F01B38C(void *a1)
{
  sub_19F000AD4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19F01B3A8()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

void sub_19F01B3C4(uint64_t a1)
{
  sub_19F000420(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_19F01B3D0()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

unint64_t sub_19F01B3F0()
{
  unint64_t result = qword_1E94726E8;
  if (!qword_1E94726E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94726E8);
  }
  return result;
}

uint64_t method lookup function for JSStack(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for JSStack);
}

uint64_t dispatch thunk of JSStack.__allocating_init(with:)(uint64_t a1)
{
  JSContext v6 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 128) + **(int **)(v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19F01B558;
  return v6(a1);
}

uint64_t sub_19F01B558(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of JSStack.__allocating_init(prerequisites:sentryConfiguration:virtualMachine:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of JSStack.__allocating_init(prerequisites:qualityOfService:sentryConfiguration:virtualMachine:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

unsigned char *storeEnumTagSinglePayload for JSStack.CallingConvention(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F01B770);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSStack.CallingConvention()
{
  return &type metadata for JSStack.CallingConvention;
}

uint64_t destroy for JSStack.Configuration(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 88))
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSStack.Configuration(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  id v7 = v5;
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v6;
    *(void *)(a1 + 96) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 64, a2 + 64, v6);
    uint64_t v9 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v9;
    uint64_t v10 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v10;
    uint64_t v11 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v11;
    uint64_t v12 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v12;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v13;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    long long v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    long long v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v16 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSStack.Configuration(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  id v7 = (_OWORD *)(a1 + 64);
  uint64_t v8 = (_OWORD *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v9)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19EEA6ED8(a1 + 64);
      long long v11 = *(_OWORD *)(a2 + 80);
      long long v10 = *(_OWORD *)(a2 + 96);
      *id v7 = *v8;
      *(_OWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 96) = v10;
      long long v12 = *(_OWORD *)(a2 + 160);
      long long v14 = *(_OWORD *)(a2 + 112);
      long long v13 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v12;
      *(_OWORD *)(a1 + 112) = v14;
      *(_OWORD *)(a1 + 128) = v13;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 88) = v9;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 64, a2 + 64);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *v8;
    long long v16 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v16;
    *id v7 = v15;
    long long v17 = *(_OWORD *)(a2 + 112);
    long long v18 = *(_OWORD *)(a2 + 128);
    long long v19 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v19;
    *(_OWORD *)(a1 + 112) = v17;
    *(_OWORD *)(a1 + 128) = v18;
  }
  uint64_t v20 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v20;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for JSStack.Configuration(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  long long v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v7 = (_OWORD *)(a1 + 64);
  uint64_t v8 = (_OWORD *)(a2 + 64);
  if (!*(void *)(a1 + 88)) {
    goto LABEL_5;
  }
  if (!*(void *)(a2 + 88))
  {
    sub_19EEA6ED8(a1 + 64);
LABEL_5:
    long long v14 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v14;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    long long v15 = *(_OWORD *)(a2 + 80);
    *long long v7 = *v8;
    *(_OWORD *)(a1 + 80) = v15;
    long long v16 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v16;
    goto LABEL_6;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  *long long v7 = *v8;
  *(_OWORD *)(a1 + 80) = v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSStack.Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSStack.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSStack.Configuration()
{
  return &type metadata for JSStack.Configuration;
}

uint64_t assignWithCopy for JSStack.Prerequisite(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 4) {
      unsigned int v4 = *(_DWORD *)a1 + 4;
    }
    switch(v4)
    {
      case 1u:
      case 3u:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        swift_release();
        break;
      default:
        __swift_destroy_boxed_opaque_existential_1Tm(a1);
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 4) {
      unsigned int v5 = *(_DWORD *)a2 + 4;
    }
    switch(v5)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v7 = 1;
        goto LABEL_15;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v8 = *(void *)(a2 + 16);
        uint64_t v9 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = v8;
        *(void *)(a1 + 24) = v9;
        *(unsigned char *)(a1 + 40) = 2;
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v7 = 3;
LABEL_15:
        *(unsigned char *)(a1 + 40) = v7;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        break;
      default:
        uint64_t v6 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 0;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for JSStack.Prerequisite(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 4) {
      unsigned int v4 = *(_DWORD *)a1 + 4;
    }
    switch(v4)
    {
      case 1u:
      case 3u:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        swift_release();
        break;
      default:
        __swift_destroy_boxed_opaque_existential_1Tm(a1);
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 4) {
      unsigned int v5 = *(_DWORD *)a2 + 4;
    }
    switch(v5)
    {
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v6 = 1;
        break;
      case 2u:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        char v6 = 2;
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v6 = 3;
        break;
      default:
        char v6 = 0;
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        break;
    }
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for JSStack.Prerequisite(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 4) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for JSStack.Prerequisite(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19F01C1BC(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 4) {
    return (*(_DWORD *)a1 + 4);
  }
  return result;
}

uint64_t assignWithCopy for JSStack.StandardGlobalConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  unsigned int v3 = (_OWORD *)(a1 + 8);
  unsigned int v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *unsigned int v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for JSStack.StandardGlobalConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  unsigned int v3 = (_OWORD *)(a1 + 8);
  unsigned int v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v7;
      return a1;
    }
LABEL_7:
    *unsigned int v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSStack.StandardGlobalConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSStack.StandardGlobalConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t *sub_19F01C3A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    long long v8 = (char *)a2 + v6;
    sub_19EE94E88((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    uint64_t v9 = type metadata accessor for PageIntentInstrumentation();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_19F1DB57C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
      uint64_t v11 = type metadata accessor for MonotonicTimeReference();
      *(_OWORD *)&v7[*(int *)(v11 + 20)] = *(_OWORD *)&v8[*(int *)(v11 + 20)];
      uint64_t v12 = type metadata accessor for PageRenderEvent();
      uint64_t v13 = *(int *)(v12 + 20);
      long long v14 = *(void **)&v8[v13];
      id v15 = v14;
      *(void *)&v7[v13] = v14;
      uint64_t v16 = *(int *)(v12 + 24);
      uint64_t v17 = &v7[v16];
      long long v18 = &v8[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = *((void *)v18 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_19F01C5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  uint64_t v8 = type metadata accessor for PageIntentInstrumentation();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_19F1DB57C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    uint64_t v10 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)&v6[*(int *)(v10 + 20)] = *(_OWORD *)&v7[*(int *)(v10 + 20)];
    uint64_t v11 = type metadata accessor for PageRenderEvent();
    *(void *)&v6[*(int *)(v11 + 20)] = *(void *)&v7[*(int *)(v11 + 20)];
    *(_OWORD *)&v6[*(int *)(v11 + 24)] = *(_OWORD *)&v7[*(int *)(v11 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_19F01C764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_19EE94E88(a1 + v7, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    uint64_t v10 = type metadata accessor for PageIntentInstrumentation();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_19F1DB57C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      uint64_t v12 = type metadata accessor for MonotonicTimeReference();
      *(_OWORD *)&v8[*(int *)(v12 + 20)] = *(_OWORD *)&v9[*(int *)(v12 + 20)];
      uint64_t v13 = type metadata accessor for PageRenderEvent();
      *(void *)&v8[*(int *)(v13 + 20)] = *(void *)&v9[*(int *)(v13 + 20)];
      *(_OWORD *)&v8[*(int *)(v13 + 24)] = *(_OWORD *)&v9[*(int *)(v13 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_19F01C938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F01C94C);
}

uint64_t sub_19F01C94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PageIntentInstrumentation();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_19F01C9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F01CA10);
}

uint64_t sub_19F01CA10(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PageIntentInstrumentation();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_19F01CAB8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F01CAF0(uint64_t a1)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_19F01CB28(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_19F01CB54()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F01CB90(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F014870(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01CD2C()
{
  return sub_19F01ED60((void (*)(uint64_t, uint64_t, uint64_t))sub_19EF4C654);
}

uint64_t sub_19F01CD58(uint64_t a1)
{
  return sub_19F08DDE4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_19F01CD78(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F015D30(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01CF18(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EEB8A6C;
  return sub_19F0152FC(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01D0B4()
{
  return sub_19F01ED60((void (*)(uint64_t, uint64_t, uint64_t))sub_19EEAE6F8);
}

uint64_t sub_19F01D0E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F0133E8(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01D284(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F00D7A4(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01D424(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F013E24(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01D5C4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F011F74(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01D764(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F0129B0(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01D904(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F01153C(a1, v15, v14, v7, v8, v9, v10, v11);
}

void sub_19F01DAAC(void *a1)
{
  sub_19F000DF4(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_19F01DABC()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC898], 48);
}

void sub_19F01DAD8()
{
  sub_19F000D10(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t objectdestroy_281Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F01DB38(void *a1)
{
  return sub_19F001574(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_19F01DB44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19F01DBFC(v4, v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19F01DBFC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19F01DC4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19F01DD04(v4, v2);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19F01DD04(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19F01DD54()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_19F01DD94(void *a1)
{
}

uint64_t sub_19F01DDA0()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_19F01DDC0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F00F650(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01DF60(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F010088(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01E100(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F010AB4(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t objectdestroy_274Tm()
{
  swift_release();
  if ((*(unsigned char *)(v0 + 32) & 1) == 0) {
    swift_unknownObjectWeakDestroy();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F01E2F8()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC898], 48);
}

uint64_t objectdestroy_296Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_19F01E378()
{
  return objectdestroy_32Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t objectdestroy_32Tm(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 32));
  return MEMORY[0x1F4186498](v2, a2, 7);
}

uint64_t sub_19F01E3F0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_19F01E428(void *a1, void *a2)
{
  return sub_19F002BD4(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_19F01E438()
{
  return sub_19EFFFAF4(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_19F01E444(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t objectdestroy_424Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 128, 7);
}

void sub_19F01E51C()
{
  sub_19F000188(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_19F01E528(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19F01E594()
{
  return MEMORY[0x1F4186498](v0, 20, 7);
}

uint64_t sub_19F01E5A4()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F01E5DC()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_19F01E634(uint64_t a1)
{
  sub_19F002E2C(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[9]);
}

void sub_19F01E644(void *a1, uint64_t a2, uint64_t a3)
{
  sub_19F002F3C(a1, a2, a3, (void *)(v3 + 16));
}

uint64_t sub_19F01E660()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 255) {
    sub_19EE432F8(*(id *)(v0 + 16), v1 & 1);
  }
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_19F01E6AC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroy_505Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F01E73C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F00EC04(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01E8DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F00CD6C(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t objectdestroy_129Tm()
{
  uint64_t v1 = sub_19F1DB85C();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v7 = v3 | 7;
  unint64_t v5 = (((((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v5 + 8, v7);
}

uint64_t sub_19F01EBC4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB85C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_19EE17780;
  return sub_19F00E1C8(a1, v15, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_19F01ED60(void (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(unsigned __int8 *)(v3 + 40);
  *(void *)(v3 + 24) = v4;
  *(void *)(v3 + 32) = v5;
  *(unsigned char *)(v3 + 40) = 0;
  a1(v6, v7, v8);
  return swift_retain();
}

ValueMetadata *type metadata accessor for JSStack.Options()
{
  return &type metadata for JSStack.Options;
}

uint64_t sub_19F01EEA8(uint64_t a1)
{
  return sub_19F01CD58(a1);
}

void *sub_19F01EEC0@<X0>(unsigned char *a1@<X8>)
{
  return sub_19EE978D8(a1);
}

_DWORD *sub_19F01EEDC(_DWORD *a1)
{
  return sub_19EEDEF50(a1);
}

uint64_t sub_19F01EF90()
{
  return sub_19EED8BD0();
}

uint64_t initializeWithCopy for SentryExceptionMechanism(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SentryExceptionMechanism(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SentryExceptionMechanism(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SentryExceptionMechanism(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 50)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SentryExceptionMechanism(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 50) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 50) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryExceptionMechanism()
{
  return &type metadata for SentryExceptionMechanism;
}

uint64_t sub_19F01F200(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAD8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F01FEC4();
  sub_19F1DD8FC();
  v8[15] = 0;
  sub_19F1DD26C();
  if (!v1)
  {
    v8[14] = 1;
    sub_19F1DD21C();
    v8[13] = 2;
    sub_19F1DD21C();
    v8[12] = 3;
    sub_19F1DD22C();
    v8[11] = 4;
    sub_19F1DD22C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_19F01F3D8(unsigned __int8 *a1, char *a2)
{
  return sub_19F03A2F8(*a1, *a2);
}

uint64_t sub_19F01F3E4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F01F4E8()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F01F5D4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F01F6D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F020124();
  *a1 = result;
  return result;
}

void sub_19F01F704(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701869940;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB000000006E6F69;
      uint64_t v3 = 0x7470697263736564;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E696C5F706C6568;
      a1[1] = 0xE90000000000006BLL;
      break;
    case 3:
      *a1 = 0x64656C646E6168;
      a1[1] = 0xE700000000000000;
      break;
    case 4:
      *a1 = 0x69746568746E7973;
      a1[1] = 0xE900000000000063;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_19F01F7CC()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7470697263736564;
      break;
    case 2:
      uint64_t result = 0x6E696C5F706C6568;
      break;
    case 3:
      uint64_t result = 0x64656C646E6168;
      break;
    case 4:
      uint64_t result = 0x69746568746E7973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F01F884@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F020124();
  *a1 = result;
  return result;
}

uint64_t sub_19F01F8AC(uint64_t a1)
{
  unint64_t v2 = sub_19F01FEC4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F01F8E8(uint64_t a1)
{
  unint64_t v2 = sub_19F01FEC4();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_19F01F924@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19F01FB34(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_WORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_19F01F974(void *a1)
{
  return sub_19F01F200(a1);
}

uint64_t sub_19F01F98C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  long long v5[2] = *(_OWORD *)(a1 + 32);
  __int16 v6 = *(_WORD *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  __int16 v8 = *(_WORD *)(a2 + 48);
  return sub_19F01F9E8((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_19F01F9E8(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v5 = sub_19F1DD44C();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v7)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && v7 == v8;
  if (v9 || (v10 = sub_19F1DD44C(), uint64_t result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    uint64_t v11 = *(void *)(a1 + 40);
    uint64_t v12 = *(void *)(a2 + 40);
    if (v11)
    {
      if (v12)
      {
        if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v11 != v12)
        {
          char v13 = sub_19F1DD44C();
          uint64_t result = 0;
          if ((v13 & 1) == 0) {
            return result;
          }
        }
LABEL_22:
        int v14 = *(unsigned __int8 *)(a1 + 48);
        int v15 = *(unsigned __int8 *)(a2 + 48);
        if (v14 == 2)
        {
          if (v15 != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          BOOL v16 = (v14 & 1) == 0;
          if (v15 == 2 || ((v16 ^ v15) & 1) == 0) {
            return result;
          }
        }
        int v17 = *(unsigned __int8 *)(a1 + 49);
        int v18 = *(unsigned __int8 *)(a2 + 49);
        if (v17 == 2)
        {
          if (v18 != 2) {
            return 0;
          }
        }
        else
        {
          BOOL v19 = (v17 & 1) == 0;
          if (v18 == 2 || ((v19 ^ v18) & 1) == 0) {
            return 0;
          }
        }
        return 1;
      }
    }
    else if (!v12)
    {
      goto LABEL_22;
    }
    return 0;
  }
  return result;
}

uint64_t sub_19F01FB34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472AB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F01FEC4();
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v33 = 0;
  uint64_t v9 = sub_19F1DD18C();
  uint64_t v11 = v10;
  uint64_t v27 = v9;
  char v32 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_19F1DD13C();
  uint64_t v28 = v13;
  uint64_t v24 = v12;
  char v31 = 2;
  swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  uint64_t v23 = sub_19F1DD13C();
  char v30 = 3;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  int v16 = sub_19F1DD14C();
  uint64_t v25 = v15;
  int v22 = v16;
  char v29 = 4;
  char v17 = sub_19F1DD14C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  uint64_t v18 = v25;
  swift_bridgeObjectRelease();
  uint64_t v19 = v28;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v27;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v23;
  *(void *)(a2 + 40) = v18;
  *(unsigned char *)(a2 + 48) = v22;
  *(unsigned char *)(a2 + 49) = v17;
  return result;
}

unint64_t sub_19F01FEC4()
{
  unint64_t result = qword_1E946CA48;
  if (!qword_1E946CA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA48);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SentryExceptionMechanism.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F01FFE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryExceptionMechanism.CodingKeys()
{
  return &type metadata for SentryExceptionMechanism.CodingKeys;
}

unint64_t sub_19F020020()
{
  unint64_t result = qword_1E9472AB8;
  if (!qword_1E9472AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472AB8);
  }
  return result;
}

unint64_t sub_19F020078()
{
  unint64_t result = qword_1E946CA58;
  if (!qword_1E946CA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA58);
  }
  return result;
}

unint64_t sub_19F0200D0()
{
  unint64_t result = qword_1E946CA50;
  if (!qword_1E946CA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA50);
  }
  return result;
}

uint64_t sub_19F020124()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_19F020170(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB3913A8);
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = v4;
  *(unsigned char *)(v2 + 32) = 0;
  uint64_t v12 = sub_19F0208F8;
  uint64_t v13 = v2;
  uint64_t v8 = MEMORY[0x1E4F143A8];
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_19EE530EC;
  uint64_t v11 = &block_descriptor_21;
  uint64_t v5 = _Block_copy(&v8);
  swift_retain_n();
  swift_release();
  objc_msgSend(a1, sel_addSuccessBlock_, v5);
  _Block_release(v5);
  uint64_t v12 = sub_19F020900;
  uint64_t v13 = v2;
  uint64_t v8 = MEMORY[0x1E4F143A8];
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_19EEA60B4;
  uint64_t v11 = &block_descriptor_24;
  unsigned int v6 = _Block_copy(&v8);
  swift_release();
  objc_msgSend(a1, sel_addErrorBlock_, v6);

  _Block_release(v6);
  return v2;
}

uint64_t sub_19F020310(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DDD8);
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = v4;
  *(unsigned char *)(v2 + 32) = 0;
  uint64_t v12 = sub_19F020908;
  uint64_t v13 = v2;
  uint64_t v8 = MEMORY[0x1E4F143A8];
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_19EE530EC;
  uint64_t v11 = &block_descriptor_27_0;
  uint64_t v5 = _Block_copy(&v8);
  swift_retain_n();
  swift_release();
  objc_msgSend(a1, sel_addSuccessBlock_, v5);
  _Block_release(v5);
  uint64_t v12 = sub_19F020910;
  uint64_t v13 = v2;
  uint64_t v8 = MEMORY[0x1E4F143A8];
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_19EEA60B4;
  uint64_t v11 = &block_descriptor_30;
  unsigned int v6 = _Block_copy(&v8);
  swift_release();
  objc_msgSend(a1, sel_addErrorBlock_, v6);

  _Block_release(v6);
  return v2;
}

uint64_t AppleServicesFetcher.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t AppleServicesFetcher.fetch(contentsOf:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 168) = a1;
  *(void *)(v2 + 176) = v3;
  return MEMORY[0x1F4188298](sub_19F0204DC, 0, 0);
}

uint64_t sub_19F0204DC()
{
  id v1 = objc_msgSend(*(id *)(v0 + 176), sel_dataTaskPromiseWithRequest_, *(void *)(v0 + 168));
  *(void *)(v0 + 184) = v1;
  *(void *)(v0 + 192) = sub_19EE40A94(v1);
  return MEMORY[0x1F4188298](sub_19F020564, 0, 0);
}

uint64_t sub_19F020564()
{
  id v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F020620;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EE24580(v2);
  sub_19EE24520(v2);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F020620()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 200) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F0207B4;
  }
  else
  {
    *(void *)(v1 + 208) = *(void *)(v1 + 160);
    swift_release();
    uint64_t v3 = sub_19F02074C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F02074C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 208);
  return v1(v2);
}

uint64_t sub_19F0207B4()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F02081C(uint64_t a1, uint64_t *a2)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_19EE1C0A4;
  uint64_t v6 = *v2;
  v5[21] = v4;
  v5[22] = v6;
  return MEMORY[0x1F4188298](sub_19F0204DC, 0, 0);
}

ValueMetadata *type metadata accessor for AppleServicesFetcher()
{
  return &type metadata for AppleServicesFetcher;
}

void sub_19F0208E0(void *a1)
{
}

void sub_19F0208E8(void *a1)
{
}

void sub_19F0208F0(void *a1)
{
}

void sub_19F0208F8(void *a1)
{
}

void sub_19F020900(void *a1)
{
}

void sub_19F020908(void *a1)
{
}

void sub_19F020910(void *a1)
{
}

void sub_19F020918(void *a1)
{
}

void sub_19F020938(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_valueWithNewObjectInContext_, a1);
  if (!v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  id v8 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  id v9 = objc_msgSend(v5, sel_valueWithObject_inContext_, sub_19F1DD62C(), v8);
  swift_unknownObjectRelease();

  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v10 = v9;
  uint64_t v11 = (void *)sub_19F1DBD4C();
  objc_msgSend(v7, sel_setValue_forProperty_, v10, v11);

  uint64_t v12 = swift_bridgeObjectRetain();
  sub_19EF9EC80(v12);
  swift_bridgeObjectRelease();
  id v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
  id v14 = objc_msgSend(v5, sel_valueWithObject_inContext_, sub_19F1DD62C(), v13);
  swift_unknownObjectRelease();

  if (!v14)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v15 = v14;
  int v16 = (void *)sub_19F1DBD4C();
  objc_msgSend(v7, sel_setValue_forProperty_, v15, v16);

  id v17 = v13;
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_19F021D80(v18, v17);
  swift_bridgeObjectRelease();
  if (v2)
  {

    return;
  }

  id v19 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAE0);
  id v20 = objc_msgSend(v5, sel_valueWithObject_inContext_, sub_19F1DD62C(), v19);
  swift_unknownObjectRelease();

  if (v20)
  {
    id v21 = v20;
    int v22 = (void *)sub_19F1DBD4C();
    objc_msgSend(v7, (SEL)&selRef_currentContext, v21, v22);

    a2[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1EB392790);
    a2[4] = &protocol witness table for JSValue;
    *a2 = v7;
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_19F020C48(void *a1@<X0>, void *a2@<X8>)
{
}

unint64_t sub_19F020C68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  void v26[2] = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  v26[0] = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 56;
    v24[0] = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = *(void *)(v24[0] + 8 * v5++);
      sub_19F1DD72C();
      swift_bridgeObjectRetain();
      sub_19EF5B5D4((uint64_t)v25, v6);
      uint64_t v7 = sub_19F1DD78C();
      uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v9 = v7 & ~v8;
      if ((*(void *)(v4 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
      {
        uint64_t v10 = swift_bridgeObjectRetain();
        sub_19EF6990C(v10, v6);
        char v12 = v11;
        swift_bridgeObjectRelease();
        if (v12)
        {
LABEL_10:
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          v26[1] = v5;
          char v18 = *(unsigned char *)(v2 + 32);
          unint64_t v19 = (unint64_t)((1 << v18) + 63) >> 6;
          size_t v20 = 8 * v19;
          if ((v18 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            memcpy((char *)v24 - ((v20 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v20);
            unint64_t v21 = sub_19F0213D0((unint64_t)v24 - ((v20 + 15) & 0x3FFFFFFFFFFFFFF0), v19, v2, v9, v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            int v22 = (void *)swift_slowAlloc();
            memcpy(v22, (const void *)(v2 + 56), v20);
            unint64_t v21 = sub_19F0213D0((unint64_t)v22, v19, v2, v9, v26);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x19F3C9470](v22, -1, -1);
          }
          return v21;
        }
        uint64_t v13 = ~v8;
        while (1)
        {
          unint64_t v9 = (v9 + 1) & v13;
          if (((*(void *)(v4 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            break;
          }
          uint64_t v14 = swift_bridgeObjectRetain();
          sub_19EF6990C(v14, v6);
          char v16 = v15;
          swift_bridgeObjectRelease();
          if (v16) {
            goto LABEL_10;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_19F020F60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 64);
    uint64_t v37 = a1 + 64;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_19EEBDCB0();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      char v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_19F1DD72C();
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      uint64_t v19 = sub_19F1DD78C();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_19F1DD44C() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_19F1DD44C() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_19F0215EC((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_19EEBDCB0();
    }
    else
    {
      char v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_19F0215EC((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_19EEBDCB0();
      MEMORY[0x19F3C9470](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

unint64_t sub_19F0213D0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  char v29 = (unint64_t *)result;
  uint64_t v30 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_19F0218E4(v29, a2, v30, a3);
  }
  uint64_t v10 = a3 + 56;
  uint64_t v32 = a5;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_21;
    }
    uint64_t v11 = *(void *)(v8 + 8 * v7 + 32);
    a5[1] = v7 + 1;
    sub_19F1DD72C();
    swift_bridgeObjectRetain();
    sub_19EF5B5D4((uint64_t)v31, v11);
    uint64_t v12 = sub_19F1DD78C();
    uint64_t v13 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    uint64_t v16 = 1 << v14;
    if (((1 << v14) & *(void *)(v10 + 8 * (v14 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_19EF6990C(v17, v11);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      uint64_t v20 = ~v13;
      for (unint64_t i = v14 + 1; ; unint64_t i = v22 + 1)
      {
        unint64_t v22 = i & v20;
        if (((*(void *)(v10 + (((i & v20) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v20)) & 1) == 0) {
          break;
        }
        uint64_t v23 = swift_bridgeObjectRetain();
        sub_19EF6990C(v23, v11);
        char v25 = v24;
        swift_bridgeObjectRelease();
        if (v25)
        {
          unint64_t result = swift_bridgeObjectRelease();
          unint64_t v15 = v22 >> 6;
          uint64_t v16 = 1 << v22;
          goto LABEL_16;
        }
      }
LABEL_4:
      unint64_t result = swift_bridgeObjectRelease();
      a5 = v32;
      goto LABEL_5;
    }
    unint64_t result = swift_bridgeObjectRelease();
LABEL_16:
    unint64_t v26 = v29[v15];
    v29[v15] = v26 & ~v16;
    a5 = v32;
    if ((v16 & v26) != 0)
    {
      uint64_t v27 = v30 - 1;
      if (__OFSUB__(v30, 1)) {
        goto LABEL_22;
      }
      --v30;
      if (!v27) {
        return MEMORY[0x1E4FBC870];
      }
    }
LABEL_5:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19F0215EC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_19F021AE8(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        char v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v22 = sub_19F1DD78C();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_19F1DD44C() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          long long v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_19F1DD44C() & 1) != 0)
          {
            unint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        unint64_t result = swift_bridgeObjectRelease();
      }
      unint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

unint64_t sub_19F0218E4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472AD8);
  unint64_t result = sub_19F1DCCCC();
  unint64_t v6 = result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  unint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_30;
      }
      if (v15 >= a2)
      {
LABEL_27:
        swift_release();
        return v6;
      }
      unint64_t v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          goto LABEL_27;
        }
        unint64_t v16 = a1[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            goto LABEL_27;
          }
          unint64_t v16 = a1[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              goto LABEL_27;
            }
            unint64_t v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_31;
                }
                if (v11 >= a2) {
                  goto LABEL_27;
                }
                unint64_t v16 = a1[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(a4 + 48) + 8 * v14);
    sub_19F1DD72C();
    swift_bridgeObjectRetain();
    sub_19EF5B5D4((uint64_t)v20, v18);
    sub_19F1DD78C();
    unint64_t result = sub_19F1DCC3C();
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(*(void *)(v6 + 48) + 8 * result) = v18;
    ++*(void *)(v6 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_19F021AE8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB390A00);
  uint64_t result = sub_19F1DCCCC();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_19F1DD72C();
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_19F021D80(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_19F1DCE6C();
    unint64_t v6 = (char *)(a1 + 32);
    uint64_t v7 = self;
    uint64_t v17 = v4 - 1;
    for (i = v7; ; uint64_t v7 = i)
    {
      memcpy(__dst, v6, 0x158uLL);
      memcpy(v18, v6, sizeof(v18));
      sub_19EEB1F44((uint64_t)__dst);
      v18[0] = sub_19EE7CC40();
      id v8 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
      id v9 = objc_msgSend(v7, sel_valueWithObject_inContext_, sub_19F1DD62C(), v8);
      swift_unknownObjectRelease();

      if (v9)
      {
        uint64_t v10 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB392790);
        void v18[3] = v10;
        uint64_t v11 = &protocol witness table for JSValue;
        id v12 = v9;
      }
      else
      {
        id v12 = objc_msgSend(v7, sel_valueWithUndefinedInContext_, v8);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
        void v18[3] = v10;
        uint64_t v11 = (_UNKNOWN **)sub_19EF606C0();
      }
      _OWORD v18[4] = v11;
      v18[0] = v12;
      __swift_project_boxed_opaque_existential_1(v18, v10);
      unint64_t v13 = (void (*)(id, uint64_t, _UNKNOWN **))v11[2];
      id v14 = v9;
      v13(v8, v10, v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);

      sub_19EEB1ECC((uint64_t)__dst);
      if (v2) {
        return swift_release();
      }
      sub_19F1DCE3C();
      sub_19F1DCE7C();
      sub_19F1DCE8C();
      sub_19F1DCE4C();
      if (!v17) {
        break;
      }
      v6 += 344;
      --v17;
    }
    return v20;
  }
  return result;
}

uint64_t sub_19F021FCC(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  uint64_t v72 = a2;
  if (*(unsigned char *)(a2 + 40))
  {
    if (a1 >> 62) {
      goto LABEL_80;
    }
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_4:
      unint64_t v4 = 0;
      unint64_t v80 = v2 & 0xC000000000000001;
      uint64_t v76 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
      unint64_t v74 = v2 + 32;
      uint64_t v78 = v3;
      while (1)
      {
        if (v80)
        {
          id v6 = (id)MEMORY[0x19F3C7060](v4, v2);
          BOOL v7 = __OFADD__(v4, 1);
          unint64_t v8 = v4 + 1;
          if (v7) {
            goto LABEL_76;
          }
        }
        else
        {
          if (v4 >= *(void *)(v76 + 16)) {
            goto LABEL_78;
          }
          id v6 = *(id *)(v74 + 8 * v4);
          BOOL v7 = __OFADD__(v4, 1);
          unint64_t v8 = v4 + 1;
          if (v7) {
            goto LABEL_76;
          }
        }
        id v83 = v6;
        unint64_t v85 = v8;
        id v9 = objc_msgSend(v6, sel_allItems, v72);
        sub_19EEBDC10(0, &qword_1E9472AD0);
        unint64_t v10 = sub_19F1DC16C();

        if (v10 >> 62) {
          break;
        }
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11) {
          goto LABEL_14;
        }
LABEL_5:

        swift_bridgeObjectRelease();
        unint64_t v4 = v85;
        unint64_t v2 = a1;
        if (v85 == v78) {
          goto LABEL_69;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_19F1DD03C();
      swift_bridgeObjectRelease();
      if (!v11) {
        goto LABEL_5;
      }
LABEL_14:
      unint64_t v87 = v10;
      unint64_t v89 = v10 & 0xC000000000000001;
      uint64_t v12 = 4;
      while (1)
      {
        if (v89) {
          id v13 = (id)MEMORY[0x19F3C7060](v12 - 4, v10);
        }
        else {
          id v13 = *(id *)(v10 + 8 * v12);
        }
        id v14 = v13;
        uint64_t v15 = v12 - 3;
        if (__OFADD__(v12 - 4, 1))
        {
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          swift_bridgeObjectRetain();
          uint64_t v3 = sub_19F1DD03C();
          swift_bridgeObjectRelease();
          unint64_t v2 = a1;
          if (!v3) {
            goto LABEL_83;
          }
          goto LABEL_4;
        }
        id v16 = objc_msgSend(v13, sel_bundleIdentifier);
        if (v16) {
          break;
        }

LABEL_16:
        ++v12;
        if (v15 == v11) {
          goto LABEL_5;
        }
      }
      uint64_t v17 = v16;
      uint64_t v18 = v11;
      uint64_t v19 = sub_19F1DBD7C();
      uint64_t v21 = v20;

      id v22 = objc_msgSend(v14, sel_itemDictionary);
      uint64_t v23 = sub_19F1DBB3C();

      uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390A60);
      *(void *)&long long v92 = v23;
      sub_19EEBDC00(&v92, v91);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v26 = sub_19EEBD400(v19, v21);
      uint64_t v27 = v5[2];
      BOOL v28 = (v25 & 1) == 0;
      uint64_t v29 = v27 + v28;
      if (__OFADD__(v27, v28)) {
        goto LABEL_72;
      }
      char v30 = v25;
      if (v5[3] < v29)
      {
        sub_19EEBD714(v29, isUniquelyReferenced_nonNull_native);
        unint64_t v31 = sub_19EEBD400(v19, v21);
        if ((v30 & 1) != (v32 & 1)) {
          goto LABEL_85;
        }
        unint64_t v26 = v31;
        if ((v30 & 1) == 0) {
          goto LABEL_31;
        }
LABEL_29:
        unint64_t v33 = (_OWORD *)(v5[7] + 32 * v26);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
        sub_19EEBDC00(v91, v33);
LABEL_33:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = v18;
        unint64_t v10 = v87;
        goto LABEL_16;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v25) {
          goto LABEL_29;
        }
      }
      else
      {
        sub_19EE7DBE0();
        if (v30) {
          goto LABEL_29;
        }
      }
LABEL_31:
      v5[(v26 >> 6) + 8] |= 1 << v26;
      long long v34 = (uint64_t *)(v5[6] + 16 * v26);
      *long long v34 = v19;
      v34[1] = v21;
      sub_19EEBDC00(v91, (_OWORD *)(v5[7] + 32 * v26));
      uint64_t v35 = v5[2];
      BOOL v7 = __OFADD__(v35, 1);
      uint64_t v36 = v35 + 1;
      if (v7) {
        goto LABEL_74;
      }
      long long v5[2] = v36;
      swift_bridgeObjectRetain();
      goto LABEL_33;
    }
LABEL_83:
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
LABEL_84:
    swift_bridgeObjectRetain();
    uint64_t v69 = swift_bridgeObjectRetain();
    uint64_t v70 = sub_19EFAB050(v69);
    swift_bridgeObjectRelease();
    sub_19F0227E8(v72);
    sub_19F020F60((uint64_t)v5, v70);
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
    unint64_t v2 = a1;
    if (!v37) {
      goto LABEL_83;
    }
  }
  else
  {
    uint64_t v37 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v37) {
      goto LABEL_83;
    }
  }
  unint64_t v38 = 0;
  unint64_t v79 = v2 & 0xC000000000000001;
  unint64_t v73 = v2 + 32;
  uint64_t v75 = v2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v77 = v37;
  while (1)
  {
    if (v79)
    {
      id v39 = (id)MEMORY[0x19F3C7060](v38, v2);
    }
    else
    {
      if (v38 >= *(void *)(v75 + 16)) {
        goto LABEL_79;
      }
      id v39 = *(id *)(v73 + 8 * v38);
    }
    id v84 = v39;
    BOOL v7 = __OFADD__(v38, 1);
    unint64_t v40 = v38 + 1;
    if (v7) {
      goto LABEL_77;
    }
    unint64_t v81 = v40;
    id v41 = objc_msgSend(v39, sel_allItems);
    sub_19EEBDC10(0, &qword_1E9472AD0);
    unint64_t v42 = sub_19F1DC16C();

    if (!(v42 >> 62))
    {
      uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v43) {
        break;
      }
      goto LABEL_39;
    }
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
    if (v43) {
      break;
    }
LABEL_39:

    swift_bridgeObjectRelease();
    unint64_t v38 = v81;
    unint64_t v2 = a1;
    if (v81 == v77)
    {
LABEL_69:
      swift_bridgeObjectRelease();
      goto LABEL_84;
    }
  }
  unint64_t v88 = v42;
  unint64_t v90 = v42 & 0xC000000000000001;
  uint64_t v44 = 4;
  uint64_t v86 = v43;
  while (1)
  {
    if (v90) {
      id v45 = (id)MEMORY[0x19F3C7060](v44 - 4, v42);
    }
    else {
      id v45 = *(id *)(v42 + 8 * v44);
    }
    uint64_t v46 = v45;
    uint64_t v47 = v44 - 3;
    if (__OFADD__(v44 - 4, 1)) {
      goto LABEL_71;
    }
    id v48 = objc_msgSend(v45, sel_iTunesStoreIdentifier);
    if (v48) {
      break;
    }

LABEL_49:
    ++v44;
    if (v47 == v43) {
      goto LABEL_39;
    }
  }
  uint64_t v49 = v48;
  id v50 = objc_msgSend(v48, sel_stringValue);
  uint64_t v51 = sub_19F1DBD7C();
  uint64_t v53 = v52;

  id v54 = objc_msgSend(v46, sel_itemDictionary);
  uint64_t v55 = sub_19F1DBB3C();

  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390A60);
  *(void *)&long long v92 = v55;
  sub_19EEBDC00(&v92, v91);
  char v56 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v58 = sub_19EEBD400(v51, v53);
  uint64_t v59 = v5[2];
  BOOL v60 = (v57 & 1) == 0;
  uint64_t v61 = v59 + v60;
  if (__OFADD__(v59, v60)) {
    goto LABEL_73;
  }
  char v62 = v57;
  if (v5[3] >= v61)
  {
    if (v56)
    {
      if (v57) {
        goto LABEL_62;
      }
    }
    else
    {
      sub_19EE7DBE0();
      if (v62) {
        goto LABEL_62;
      }
    }
LABEL_64:
    v5[(v58 >> 6) + 8] |= 1 << v58;
    long long v66 = (uint64_t *)(v5[6] + 16 * v58);
    uint64_t *v66 = v51;
    v66[1] = v53;
    sub_19EEBDC00(v91, (_OWORD *)(v5[7] + 32 * v58));
    uint64_t v67 = v5[2];
    BOOL v7 = __OFADD__(v67, 1);
    uint64_t v68 = v67 + 1;
    if (v7) {
      goto LABEL_75;
    }
    long long v5[2] = v68;
    swift_bridgeObjectRetain();
    goto LABEL_66;
  }
  sub_19EEBD714(v61, v56);
  unint64_t v63 = sub_19EEBD400(v51, v53);
  if ((v62 & 1) == (v64 & 1))
  {
    unint64_t v58 = v63;
    if ((v62 & 1) == 0) {
      goto LABEL_64;
    }
LABEL_62:
    long long v65 = (_OWORD *)(v5[7] + 32 * v58);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
    sub_19EEBDC00(v91, v65);
LABEL_66:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = v86;
    unint64_t v42 = v88;
    goto LABEL_49;
  }
LABEL_85:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F0227E8(uint64_t a1)
{
  return a1;
}

uint64_t destroy for LookupResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s9JetEngine14LookupResponseVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LookupResponse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LookupResponse(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LookupResponse()
{
  return &type metadata for LookupResponse;
}

void *static ObjectGraphBuilder.buildBlock()()
{
  sub_19EE6D228();
  uint64_t v1 = sub_19F1DBB7C();
  sub_19EE6C294(MEMORY[0x1E4FBC860]);
  type metadata accessor for BaseObjectGraph();
  uint64_t result = (void *)swift_allocObject();
  result[3] = 0;
  result[4] = 0xE000000000000000;
  result[2] = v1;
  return result;
}

void *static ObjectGraphBuilder.buildPartialBlock(first:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392D00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  sub_19EEA966C(a1, inited + 32);
  sub_19EE6D228();
  uint64_t v4 = sub_19F1DBB7C();
  sub_19EE6C294(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  type metadata accessor for BaseObjectGraph();
  uint64_t result = (void *)swift_allocObject();
  result[3] = 0;
  result[4] = 0xE000000000000000;
  result[2] = v4;
  return result;
}

uint64_t static ObjectGraphBuilder.buildPartialBlock(accumulated:next:)(uint64_t a1, uint64_t *a2)
{
  return sub_19EEAA240(a2);
}

uint64_t static ObjectGraphBuilder.buildPartialBlock(accumulated:next:)(uint64_t a1, uint64_t a2)
{
  return sub_19EE52668(a2);
}

void *static ObjectGraphBuilder.buildOptional(_:)(void *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
  }
  else
  {
    sub_19EE6D228();
    uint64_t v3 = sub_19F1DBB7C();
    sub_19EE6C294(MEMORY[0x1E4FBC860]);
    type metadata accessor for BaseObjectGraph();
    uint64_t v1 = (void *)swift_allocObject();
    v1[3] = 0;
    v1[4] = 0xE000000000000000;
    uint64_t v1[2] = v3;
  }
  swift_retain();
  return v1;
}

ValueMetadata *type metadata accessor for ObjectGraphBuilder()
{
  return &type metadata for ObjectGraphBuilder;
}

__n128 ImpressionsTracking.AppearanceJournal.__allocating_init(elementID:metricsFields:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 48);
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 120) = 0u;
  *(void *)(v4 + 136) = 0;
  *(unsigned char *)(v4 + 144) = 1;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v6;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v4 + 48) = result;
  *(void *)(v4 + 64) = v7;
  *(void *)(v4 + 72) = a2;
  *(void *)(v4 + 80) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_19F022CA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_19F1DB57C();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2[1];
  uint64_t v49 = *a2;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, a1, v6, v8);
  LOBYTE(v59[0]) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19F1DB52C();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v14 = v59[0];
  uint64_t v15 = v3 + 10;
  swift_beginAccess();
  id v16 = (void *)v3[10];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v3[10] = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v16 = sub_19EE8A2B4(0, v16[2] + 1, 1, v16);
    *uint64_t v15 = v16;
  }
  unint64_t v19 = v16[2];
  unint64_t v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    id v16 = sub_19EE8A2B4((void *)(v18 > 1), v19 + 1, 1, v16);
    *uint64_t v15 = v16;
  }
  _OWORD v16[2] = v19 + 1;
  uint64_t v20 = &v16[4 * v19];
  *((unsigned char *)v20 + 32) = v14;
  uint64_t v20[5] = v13;
  void v20[6] = v49;
  v20[7] = v11;
  swift_endAccess();
  if (qword_1EB390880 != -1) {
    swift_once();
  }
  sub_19EEC4154((uint64_t)&qword_1EB394E98, (uint64_t)v59);
  uint64_t v21 = v60;
  uint64_t v49 = v61;
  id v48 = __swift_project_boxed_opaque_existential_1(v59, v60);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_19F24EAD0;
  unint64_t v58 = sub_19EEC3F3C(0, 25, 0, MEMORY[0x1E4FBC860]);
  v23._uint64_t countAndFlagsBits = 0x206D657449;
  v23._object = (void *)0xE500000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  swift_beginAccess();
  uint64_t v25 = v3[2];
  uint64_t v24 = v3[3];
  uint64_t v27 = v3[4];
  uint64_t v26 = v3[5];
  uint64_t v28 = v3[6];
  uint64_t v29 = v3[7];
  uint64_t v30 = v3[8];
  char v57 = &type metadata for ImpressionMetrics.ID;
  unint64_t v31 = (void *)swift_allocObject();
  v56[0] = v31;
  v31[2] = v25;
  _OWORD v31[3] = v24;
  v31[4] = v27;
  v31[5] = v26;
  v31[6] = v28;
  v31[7] = v29;
  v31[8] = v30;
  sub_19EEBCD00((uint64_t)v56, (uint64_t)v52);
  long long v51 = 0u;
  long long v50 = 0u;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v52, (uint64_t)&v50);
  char v55 = 0;
  long long v53 = v50;
  long long v54 = v51;
  char v32 = v58;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v32 = sub_19EEC3F3C(0, v32[2] + 1, 1, v32);
  }
  unint64_t v34 = v32[2];
  unint64_t v33 = v32[3];
  if (v34 >= v33 >> 1) {
    char v32 = sub_19EEC3F3C((void *)(v33 > 1), v34 + 1, 1, v32);
  }
  v32[2] = v34 + 1;
  uint64_t v35 = &v32[5 * v34];
  long long v36 = v53;
  long long v37 = v54;
  *((unsigned char *)v35 + 64) = v55;
  *((_OWORD *)v35 + 2) = v36;
  *((_OWORD *)v35 + 3) = v37;
  unint64_t v58 = v32;
  sub_19EEBCB4C((uint64_t)v56);
  v38._object = (void *)0x800000019F26E050;
  v38._uint64_t countAndFlagsBits = 0xD000000000000012;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  uint64_t v39 = v3[9];
  char v57 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  v56[0] = v39;
  sub_19EEBCD00((uint64_t)v56, (uint64_t)v52);
  long long v51 = 0u;
  long long v50 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v52, (uint64_t)&v50);
  char v55 = 1;
  long long v53 = v50;
  long long v54 = v51;
  unint64_t v40 = v58;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v40 = sub_19EEC3F3C(0, v40[2] + 1, 1, v40);
  }
  unint64_t v42 = v40[2];
  unint64_t v41 = v40[3];
  if (v42 >= v41 >> 1) {
    unint64_t v40 = sub_19EEC3F3C((void *)(v41 > 1), v42 + 1, 1, v40);
  }
  _OWORD v40[2] = v42 + 1;
  uint64_t v43 = &v40[5 * v42];
  long long v44 = v53;
  long long v45 = v54;
  *((unsigned char *)v43 + 64) = v55;
  *((_OWORD *)v43 + 2) = v44;
  *((_OWORD *)v43 + 3) = v45;
  unint64_t v58 = v40;
  sub_19EEBCB4C((uint64_t)v56);
  v46._uint64_t countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v46);
  *(void *)(v22 + 32) = v58;
  Logger.info(_:)(v22, v21, v49);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v59);
}

uint64_t ImpressionsTracking.AppearanceJournal.isAppeared.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2) {
    char v3 = *(unsigned char *)(v1 + 32 * v2) ^ 1;
  }
  else {
    char v3 = 1;
  }
  return v3 & 1;
}

BOOL static ImpressionsTracking.AppearanceJournal.Time.EventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ImpressionsTracking.AppearanceJournal.Time.EventType.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t ImpressionsTracking.AppearanceJournal.Time.EventType.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t ImpressionsTracking.AppearanceJournal.Time.init(eventType:on:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_19F1DB57C();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, a2, v6, v8);
  char v16 = (char)a1;
  sub_19F1DB52C();
  uint64_t v12 = v11;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v10, v6);
  LOBYTE(v10) = v16;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v13)(a2, v6);
  *(unsigned char *)a3 = (_BYTE)v10;
  *(void *)(a3 + 8) = v12;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0xE000000000000000;
  return result;
}

void ImpressionsTracking.AppearanceJournal.Time.eventType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

double ImpressionsTracking.AppearanceJournal.Time.timeStamp.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t ImpressionsTracking.AppearanceJournal.init(elementID:metricsFields:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 48);
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(void *)(v2 + 136) = 0;
  *(unsigned char *)(v2 + 144) = 1;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v2 + 64) = v5;
  *(void *)(v2 + 72) = a2;
  *(void *)(v2 + 80) = MEMORY[0x1E4FBC860];
  return v2;
}

uint64_t ImpressionsTracking.AppearanceJournal.elementID.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 64);
  *(void *)a1 = *(void *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(void *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 48);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsTracking.AppearanceJournal.metricsFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsTracking.AppearanceJournal.times.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsTracking.AppearanceJournal.trackAppearance(on:)(uint64_t a1)
{
  return sub_19F023570(a1, sub_19EE89C9C);
}

uint64_t ImpressionsTracking.AppearanceJournal.trackDisappearance(on:)(uint64_t a1)
{
  return sub_19F023570(a1, sub_19F022CA0);
}

uint64_t sub_19F023570(uint64_t a1, uint64_t (*a2)(uint64_t, void *))
{
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  void v3[2] = 0;
  char v4 = 1;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  return a2(a1, v3);
}

uint64_t ImpressionsTracking.AppearanceJournal.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ImpressionsTracking.AppearanceJournal.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_19F0236B8()
{
  unint64_t result = qword_1E9472AE0;
  if (!qword_1E9472AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472AE0);
  }
  return result;
}

uint64_t method lookup function for ImpressionsTracking.AppearanceJournal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ImpressionsTracking.AppearanceJournal);
}

uint64_t dispatch thunk of ImpressionsTracking.AppearanceJournal.__allocating_init(elementID:metricsFields:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t _s17AppearanceJournalC4TimeVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s17AppearanceJournalC4TimeVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17AppearanceJournalC4TimeVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17AppearanceJournalC4TimeVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *_s17AppearanceJournalC4TimeV9EventTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F0238E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsTracking.AppearanceJournal.Time.EventType()
{
  return &type metadata for ImpressionsTracking.AppearanceJournal.Time.EventType;
}

uint64_t sub_19F02391C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

__n128 ClosureAction.init(actionMetrics:body:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result = *a1;
  *a4 = *a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  return result;
}

uint64_t ClosureAction.actionMetrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ClosureAction.actionMetrics.setter(__n128 *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *a1;
  *uint64_t v1 = *a1;
  return result;
}

uint64_t (*ClosureAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t sub_19F023A10(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 16) = sub_19F023D68;
  *(void *)(a2 + 24) = v5;
  return result;
}

uint64_t ClosureAction.body.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t ClosureAction.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ClosureAction.body.modify())()
{
  return nullsub_1;
}

uint64_t sub_19F023B08@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F023B44@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_19EED8BF8;
  a2[1] = (uint64_t (*)())v5;
  return swift_retain();
}

uint64_t destroy for ClosureAction()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ClosureAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ClosureAction(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ClosureAction(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ClosureAction()
{
  return &type metadata for ClosureAction;
}

uint64_t sub_19F023D30()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F023D68()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

ValueMetadata *type metadata accessor for JetPackCompoundKeyProvider()
{
  return &type metadata for JetPackCompoundKeyProvider;
}

uint64_t dispatch thunk of NetFetcher.fetch(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19EEB8A6C;
  return v11(a1, a2, a3, a4);
}

unint64_t NetworkReachabilityError.errorDescription.getter()
{
  unint64_t v1 = 0xD00000000000003ELL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000003BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000035;
  }
}

BOOL static NetworkReachabilityError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkReachabilityError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t NetworkReachabilityError.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F023FA0()
{
  unint64_t result = qword_1E9472AF0;
  if (!qword_1E9472AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472AF0);
  }
  return result;
}

unint64_t sub_19F023FF8()
{
  unint64_t result = qword_1E9472AF8;
  if (!qword_1E9472AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472AF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NetworkReachabilityError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F02411CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkReachabilityError()
{
  return &type metadata for NetworkReachabilityError;
}

uint64_t static JESignpostComponent.jet.getter()
{
  return 172;
}

double static IntervalSignpost.jsStackCall.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 172;
  *(void *)a1 = 172;
  *(_DWORD *)(a1 + 8) = 1;
  return result;
}

double static IntervalSignpost.jsStackDeserialization.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 0x2000000ACLL;
  *(void *)a1 = 0x2000000ACLL;
  *(_DWORD *)(a1 + 8) = 3;
  return result;
}

double static ImpulseSignpost.metricsEventPosted.getter@<D0>(void *a1@<X8>)
{
  *(void *)&double result = 0x64000000ACLL;
  *a1 = 0x64000000ACLL;
  return result;
}

void DeepLinkRoute.init(scheme:host:path:query:handler:)(uint64_t a1@<X6>, uint64_t a2@<X7>, void *a3@<X8>, unsigned __int8 a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = sub_19F1DCD2C();
  uint64_t v13 = sub_19F0EB8B4(v11, v12);
  if (v9)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    swift_bridgeObjectRelease();
    id v17 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
    id v18 = sub_19EF7FBBC(v15, v16, 0);
    uint64_t v19 = sub_19F1DCD2C();
    uint64_t v21 = sub_19F0EB8B4(v19, v20);
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    id v24 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
    id v25 = sub_19EF7FBBC(v21, v23, 0);
    PathExpression.init(pattern:)(a1, a2, a4, &v30);
    uint64_t v26 = v30;
    QueryExpression.init(pattern:)(a5, a6, a7, &v30);
    uint64_t v27 = v30;
    *a3 = v18;
    a3[1] = v25;
    a3[2] = v26;
    a3[3] = v27;
    a3[4] = a8;
    a3[5] = a9;
  }
}

uint64_t destroy for DeepLinkRoute(id *a1)
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for DeepLinkRoute(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DeepLinkRoute(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  unint64_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DeepLinkRoute(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DeepLinkRoute()
{
  return &type metadata for DeepLinkRoute;
}

JetEngine::DeResolutionNumberRule __swiftcall DeResolutionNumberRule.init(fieldName:magnitude:significantDigits:)(Swift::String fieldName, Swift::Double magnitude, Swift::Double significantDigits)
{
  *(Swift::String *)uint64_t v3 = fieldName;
  *(Swift::Double *)(v3 + 16) = magnitude;
  *(Swift::Double *)(v3 + 24) = significantDigits;
  result.fieldName = fieldName;
  result.significantDigits = significantDigits;
  result.magnitude = magnitude;
  return result;
}

Swift::Double __swiftcall DeResolutionNumberRule.apply(to:)(Swift::Double to)
{
  double v3 = *(double *)(v1 + 16);
  Swift::Double result = NAN;
  if (v3 > 0.0 && *(double *)(v1 + 24) >= 0.0)
  {
    double v5 = __exp10(*(double *)(v1 + 24));
    return v5 * trunc(to / v3 / v5);
  }
  return result;
}

BOOL _s9JetEngine22DeResolutionNumberRuleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 16);
  double v2 = *(double *)(a1 + 24);
  double v5 = *(double *)(a2 + 16);
  double v4 = *(double *)(a2 + 24);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v3 != v5) {
      return 0;
    }
    return v2 == v4;
  }
  char v7 = sub_19F1DD44C();
  BOOL result = 0;
  if ((v7 & 1) != 0 && v3 == v5) {
    return v2 == v4;
  }
  return result;
}

uint64_t initializeWithCopy for DeResolutionNumberRule(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DeResolutionNumberRule(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for DeResolutionNumberRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for DeResolutionNumberRule()
{
  return &type metadata for DeResolutionNumberRule;
}

void sub_19F024728()
{
}

void sub_19F02474C()
{
}

void sub_19F024770()
{
}

void sub_19F024794()
{
}

void sub_19F0247B8()
{
}

void sub_19F0247DC()
{
}

void sub_19F024800()
{
}

void sub_19F024824()
{
}

uint64_t sub_19F024848()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t sub_19F02488C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 168) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 184), a1);
  return v2;
}

uint64_t sub_19F024920()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 176) + 16))(*(void *)(*(void *)v0 + 168)) & 1;
}

uint64_t sub_19F02499C()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 176) + 24))(*(void *)(*(void *)v0 + 168));
}

uint64_t sub_19F024A14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  uint64_t v6 = *a1;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, void))(*(void *)(v4 + 176) + 32))(&v6, a2, a3, *(void *)(v4 + 168));
}

uint64_t sub_19F024A9C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v5 = *a1;
  return (*(uint64_t (**)(uint64_t *, uint64_t, void))(*(void *)(v3 + 176) + 40))(&v5, a2, *(void *)(v3 + 168));
}

uint64_t sub_19F024B24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v5 = *a1;
  return (*(uint64_t (**)(uint64_t *, uint64_t, void))(*(void *)(v3 + 176) + 48))(&v5, a2, *(void *)(v3 + 168));
}

uint64_t sub_19F024BAC()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 176) + 56))(*(void *)(*(void *)v0 + 168));
}

uint64_t sub_19F024C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(*(void *)v4 + 176)
                                                                               + 64))(a1, a2, a3, a4, *(void *)(*(void *)v4 + 168));
}

uint64_t sub_19F024C98(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 168);
  double v3 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v8 - v6, v1 + *(void *)(v4 + 184), v2, v3);
  return sub_19F1DBE0C();
}

uint64_t sub_19F024D7C()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 168) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 184));
}

uint64_t sub_19F024DD4()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 168) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 184));
  return swift_deallocClassInstance();
}

uint64_t AnyStateStore.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for ConcreteStateStoreBox();
  uint64_t result = sub_19F02488C(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for ConcreteStateStoreBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t AnyStateStore.isConcurrent.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))() & 1;
}

uint64_t AnyStateStore.onChange.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))();
}

uint64_t AnyStateStore.currentState<A>(at:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *v4;
  uint64_t v7 = *a1;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)v5 + 112))(&v7, a3, a4);
}

uint64_t AnyStateStore.updateState(at:to:)(uint64_t *a1)
{
  uint64_t v2 = *v1;
  uint64_t v4 = *a1;
  return (*(uint64_t (**)(uint64_t *))(*(void *)v2 + 120))(&v4);
}

uint64_t AnyStateStore.removeState(at:recursively:)(uint64_t *a1)
{
  uint64_t v2 = *v1;
  uint64_t v4 = *a1;
  return (*(uint64_t (**)(uint64_t *))(*(void *)v2 + 128))(&v4);
}

Swift::Void __swiftcall AnyStateStore.removeAllState()()
{
  (*(void (**)(void))(**(void **)v0 + 136))();
}

uint64_t AnyStateStore.performTransaction<A>(postingChanges:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(**(void **)v5 + 144))(a1, a2, a3, a5);
}

uint64_t AnyStateStore.description.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t sub_19F025158(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return AnyStateStore.currentState<A>(at:)(a1, a2, a2, a3);
}

uint64_t sub_19F025170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return AnyStateStore.performTransaction<A>(postingChanges:_:)(a1, a2, a3, a4, a4);
}

uint64_t type metadata accessor for AnyStateStoreBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0251A8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AnyStateStore()
{
  return __swift_instantiateGenericMetadata();
}

void sub_19F025254()
{
}

uint64_t OpenCodingKey.stringValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return sub_19F1DD2EC();
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t OpenCodingKey.intValue.getter(uint64_t result, unint64_t a2, char a3)
{
  if (a3)
  {
    uint64_t v4 = HIBYTE(a2) & 0xF;
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
    if ((a2 & 0x2000000000000000) != 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
    }
    if (!v6) {
      return 0;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      uint64_t v22 = result;
      sub_19EFDE2AC(result, a2, 1);
      uint64_t v8 = (uint64_t)sub_19F025C48(v22, a2, 10);
      char v10 = v23;
      sub_19EF6EAD0(v22, a2, 1);
LABEL_37:
      if (v10) {
        return 0;
      }
      else {
        return v8;
      }
    }
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v7 = (unsigned __int8 *)sub_19F1DCE2C();
      }
      uint64_t v8 = (uint64_t)sub_19EF83214(v7, v5, 10);
      char v10 = v9 & 1;
      goto LABEL_37;
    }
    v24[0] = result;
    v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v4)
      {
        uint64_t v15 = v4 - 1;
        if (v4 != 1)
        {
          uint64_t v8 = 0;
          uint64_t v16 = (unsigned __int8 *)v24 + 1;
          while (1)
          {
            unsigned int v17 = *v16 - 48;
            if (v17 > 9) {
              break;
            }
            uint64_t v18 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              break;
            }
            uint64_t v8 = v18 + v17;
            if (__OFADD__(v18, v17)) {
              break;
            }
            char v10 = 0;
            ++v16;
            if (!--v15) {
              goto LABEL_37;
            }
          }
        }
        goto LABEL_36;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v4)
        {
          uint64_t v8 = 0;
          uint64_t v19 = (unsigned __int8 *)v24;
          while (1)
          {
            unsigned int v20 = *v19 - 48;
            if (v20 > 9) {
              break;
            }
            uint64_t v21 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              break;
            }
            uint64_t v8 = v21 + v20;
            if (__OFADD__(v21, v20)) {
              break;
            }
            char v10 = 0;
            ++v19;
            if (!--v4) {
              goto LABEL_37;
            }
          }
        }
        goto LABEL_36;
      }
      if (v4)
      {
        uint64_t v11 = v4 - 1;
        if (v4 != 1)
        {
          uint64_t v8 = 0;
          id v12 = (unsigned __int8 *)v24 + 1;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              break;
            }
            uint64_t v14 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              break;
            }
            uint64_t v8 = v14 - v13;
            if (__OFSUB__(v14, v13)) {
              break;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_37;
            }
          }
        }
LABEL_36:
        uint64_t v8 = 0;
        char v10 = 1;
        goto LABEL_37;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t OpenCodingKey.description.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_19F025D30();
    return sub_19F1DCBDC();
  }
  return a1;
}

uint64_t sub_19F025600()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 16) != 1) {
    return sub_19F1DD2EC();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_19F025670@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_19F025680()
{
  return OpenCodingKey.intValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_19F0256A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_19F0256B0()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 16) == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_19F025D30();
    return sub_19F1DCBDC();
  }
  return v1;
}

uint64_t sub_19F025720(uint64_t a1)
{
  unint64_t v2 = sub_19EF6EA7C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F02575C()
{
  unint64_t v0 = sub_19F1DC00C();
  uint64_t v4 = sub_19F0257DC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_19F0257DC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_19F025934(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_19EEAED00(v9, 0);
      unint64_t v12 = sub_19F025A34((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_19F1DCE2C();
LABEL_4:
        JUMPOUT(0x19F3C6180);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x19F3C6180](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x19F3C6180]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_19F025934(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_19EFAA240(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_19EFAA240(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_19F025A34(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_19EFAA240(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_19F1DBF8C();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_19F1DCE2C();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_19EFAA240(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_19F1DBF5C();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unsigned __int8 *sub_19F025C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_19F1DBFFC();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_19F02575C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_19F1DCE2C();
  }
LABEL_7:
  uint64_t v11 = sub_19F025F44(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_19F025D30()
{
  unint64_t result = qword_1E946FE58;
  if (!qword_1E946FE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946FE58);
  }
  return result;
}

unint64_t sub_19F025D88()
{
  unint64_t result = qword_1E946CC58;
  if (!qword_1E946CC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CC58);
  }
  return result;
}

unint64_t sub_19F025DE0()
{
  unint64_t result = qword_1E946CDD8;
  if (!qword_1E946CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CDD8);
  }
  return result;
}

uint64_t destroy for OpenCodingKey(uint64_t a1)
{
  return sub_19EF6EAD0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s9JetEngine13OpenCodingKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_19EFDE2AC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for OpenCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_19EFDE2AC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_19EF6EAD0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for OpenCodingKey(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_19EF6EAD0(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for OpenCodingKey()
{
  return &type metadata for OpenCodingKey;
}

unsigned __int8 *sub_19F025F44(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  char v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_19F0261C0()
{
  unint64_t v1 = 0x647574696E67616DLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D614E646C656966;
  }
}

uint64_t sub_19F026220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F026DF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F026248(uint64_t a1)
{
  unint64_t v2 = sub_19F026A48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F026284(uint64_t a1)
{
  unint64_t v2 = sub_19F026A48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F0262C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472B00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned __int8 v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F026A48();
  sub_19F1DD8AC();
  if (!v2)
  {
    LOBYTE(v20) = 0;
    uint64_t v9 = sub_19F1DD18C();
    uint64_t v11 = v10;
    uint64_t v17 = v9;
    unsigned __int8 v18 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472B10);
    char v19 = 1;
    sub_19F026A9C();
    sub_19F1DD17C();
    if (v22)
    {
      double v12 = 1048576.0;
    }
    else if (v21)
    {
      double v12 = 1048576.0;
    }
    else
    {
      double v12 = v20;
    }
    char v19 = 2;
    sub_19F1DD17C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v14 = (double *)v18;
    if (v22)
    {
      double v15 = 2.0;
    }
    else
    {
      double v15 = v20;
      if (v21) {
        double v15 = 2.0;
      }
    }
    *unsigned __int8 v18 = v17;
    *((void *)v14 + 1) = v11;
    long long v14[2] = v12;
    void v14[3] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19F026540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRelease();
  JSONObject.subscript.getter(0x6D614E646C656966, 0xE900000000000065, (uint64_t)v26);
  sub_19EEBF040((uint64_t)v26, (uint64_t)v23);
  uint64_t v4 = v24;
  if (!v24)
  {
    sub_19EEBD664((uint64_t)v23, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v26);
    goto LABEL_8;
  }
  uint64_t v5 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  uint64_t v8 = v7;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  sub_19EEC3418((uint64_t)v26);
  if (!v8)
  {
LABEL_8:
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v15 = xmmword_19F256100;
    *(void *)(v15 + 16) = 0x20000001EF148EC0uLL;
    *(void *)(v15 + 24) = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  JSONObject.subscript.getter(0x647574696E67616DLL, 0xE900000000000065, (uint64_t)v26);
  sub_19EEBF040((uint64_t)v26, (uint64_t)v23);
  uint64_t v9 = v24;
  if (v24)
  {
    uint64_t v10 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    double v11 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 80))(v9, v10));
    char v13 = v12;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    sub_19EEC3418((uint64_t)v26);
    if (v13) {
      double v14 = 1048576.0;
    }
    else {
      double v14 = v11;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v23, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v26);
    double v14 = 1048576.0;
  }
  JSONObject.subscript.getter(0xD000000000000011, 0x800000019F26E250, (uint64_t)v26);
  sub_19EEBF040((uint64_t)v26, (uint64_t)v23);
  uint64_t v17 = v24;
  if (v24)
  {
    uint64_t v18 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 80))(v17, v18);
    char v21 = v20;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    sub_19EEC3418(a1);
    uint64_t result = sub_19EEC3418((uint64_t)v26);
    double v22 = *(double *)&v19;
    if (v21) {
      double v22 = 2.0;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v23, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418(a1);
    uint64_t result = sub_19EEC3418((uint64_t)v26);
    double v22 = 2.0;
  }
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(double *)(a2 + 16) = v14;
  *(double *)(a2 + 24) = v22;
  return result;
}

uint64_t sub_19F026808(void *a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  double v6 = *(double *)(v1 + 16);
  double v5 = *(double *)(v1 + 24);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  if (!*(void *)(v9 + 16))
  {
    long long v20 = 0u;
    long long v21 = 0u;
LABEL_11:
    swift_bridgeObjectRelease();
    return sub_19EEBD664((uint64_t)&v20, &qword_1EB393260);
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_19EEBD400(v4, v3);
  if ((v11 & 1) == 0)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_19EEBDBA4(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v21 + 1)) {
    return sub_19EEBD664((uint64_t)&v20, &qword_1EB393260);
  }
  sub_19EE85BDC();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v13 = v22;
    objc_msgSend(v22, sel_doubleValue);
    double v15 = v14;
    double v16 = NAN;
    if (v6 > 0.0 && v5 >= 0.0)
    {
      double v17 = __exp10(v5);
      double v16 = v17 * trunc(v15 / v6 / v17);
    }
    *((void *)&v21 + 1) = MEMORY[0x1E4FBB3D0];
    *(double *)&long long v20 = v16;
    uint64_t v18 = a1[3];
    uint64_t v19 = a1[4];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v18);
    (*(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 16))(&v20, v4, v3, v18, v19);

    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
  }
  return result;
}

uint64_t sub_19F0269EC(void *a1)
{
  return sub_19F026808(a1);
}

uint64_t sub_19F026A04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19F0262C0(a1, a2);
}

uint64_t sub_19F026A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F026540(a1, a2);
}

ValueMetadata *type metadata accessor for MetricsEventLinterDeResolutionRule()
{
  return &type metadata for MetricsEventLinterDeResolutionRule;
}

unint64_t sub_19F026A48()
{
  unint64_t result = qword_1E9472B08;
  if (!qword_1E9472B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472B08);
  }
  return result;
}

unint64_t sub_19F026A9C()
{
  unint64_t result = qword_1E9472B18;
  if (!qword_1E9472B18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9472B10);
    sub_19F026B10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472B18);
  }
  return result;
}

unint64_t sub_19F026B10()
{
  unint64_t result = qword_1E9472B20;
  if (!qword_1E9472B20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB390E70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472B20);
  }
  return result;
}

BOOL sub_19F026B7C(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 16);
  double v2 = *(double *)(a1 + 24);
  double v5 = *(double *)(a2 + 16);
  double v4 = *(double *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  BOOL result = 0;
  if (v6 || (sub_19F1DD44C()) && v3 == v5 && v2 == v4) {
    return 1;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MetricsEventLinterDeResolutionRule.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *BOOL result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F026CB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEventLinterDeResolutionRule.CodingKeys()
{
  return &type metadata for MetricsEventLinterDeResolutionRule.CodingKeys;
}

unint64_t sub_19F026CF4()
{
  unint64_t result = qword_1E9472B28;
  if (!qword_1E9472B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472B28);
  }
  return result;
}

unint64_t sub_19F026D4C()
{
  unint64_t result = qword_1E9472B30;
  if (!qword_1E9472B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472B30);
  }
  return result;
}

unint64_t sub_19F026DA4()
{
  unint64_t result = qword_1E9472B38;
  if (!qword_1E9472B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472B38);
  }
  return result;
}

uint64_t sub_19F026DF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E646C656966 && a2 == 0xE900000000000065;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x647574696E67616DLL && a2 == 0xE900000000000065 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000019F26E250)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

ValueMetadata *type metadata accessor for SentryStackTrace()
{
  return &type metadata for SentryStackTrace;
}

uint64_t getEnumTagSinglePayload for SentryStackTrace.StackFrame(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SentryStackTrace.StackFrame(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryStackTrace.StackFrame()
{
  return &type metadata for SentryStackTrace.StackFrame;
}

uint64_t sub_19F02701C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAC8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F028070();
  sub_19F1DD8FC();
  v8[15] = 0;
  sub_19F1DD26C();
  if (!v1)
  {
    v8[14] = 1;
    sub_19F1DD26C();
    v8[13] = 2;
    sub_19F1DD24C();
    v8[12] = 3;
    sub_19F1DD24C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_19F0271D4(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAD0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F027F04();
  sub_19F1DD8FC();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAA0);
  sub_19F027FAC(&qword_1E946CAA8, (void (*)(void))sub_19F02801C);
  sub_19F1DD2AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19F027354(unsigned __int8 *a1, char *a2)
{
  return sub_19F03AED8(*a1, *a2);
}

uint64_t sub_19F027360()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F027430()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0274E8()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F0275B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F0284AC();
  *a1 = result;
  return result;
}

void sub_19F0275E4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656D616E656C6966;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6E6F6974636E7566;
      goto LABEL_3;
    case 2:
      *a1 = 0x6F6E656E696CLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x6F6E6C6F63;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE800000000000000;
      break;
  }
}

uint64_t sub_19F027674()
{
  uint64_t result = 0x656D616E656C6966;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F6974636E7566;
      break;
    case 2:
      uint64_t result = 0x6F6E656E696CLL;
      break;
    case 3:
      uint64_t result = 0x6F6E6C6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F0276F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F0284AC();
  *a1 = result;
  return result;
}

uint64_t sub_19F027720(uint64_t a1)
{
  unint64_t v2 = sub_19F028070();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F02775C(uint64_t a1)
{
  unint64_t v2 = sub_19F028070();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_19F027798@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_19F027A98(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_19F0277E4(void *a1)
{
  return sub_19F02701C(a1);
}

uint64_t sub_19F0277FC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)a1 + 41);
  long long v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a2 + 41);
  return sub_19F0279C8((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_19F027858()
{
  return 0x73656D617266;
}

uint64_t sub_19F02786C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73656D617266 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_19F1DD44C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19F0278FC(uint64_t a1)
{
  unint64_t v2 = sub_19F027F04();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F027938(uint64_t a1)
{
  unint64_t v2 = sub_19F027F04();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_19F027974@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_19F027D5C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_19F0279A0(void *a1)
{
  return sub_19F0271D4(a1, *v1);
}

uint64_t sub_19F0279BC(uint64_t *a1, uint64_t *a2)
{
  return sub_19EF638FC(*a1, *a2);
}

uint64_t sub_19F0279C8(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_19F1DD44C(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (char v8 = sub_19F1DD44C(), result = 0, (v8 & 1) != 0))
    {
      char v9 = *(unsigned char *)(a2 + 40);
      if (*(unsigned char *)(a1 + 40))
      {
        if (!*(unsigned char *)(a2 + 40)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)(a1 + 32) != *(void *)(a2 + 32)) {
          char v9 = 1;
        }
        if (v9) {
          return 0;
        }
      }
      char v10 = *(unsigned char *)(a2 + 56);
      if (*(unsigned char *)(a1 + 56))
      {
        if ((*(unsigned char *)(a2 + 56) & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (*(void *)(a1 + 48) != *(void *)(a2 + 48)) {
          char v10 = 1;
        }
        if (v10) {
          return 0;
        }
      }
      return 1;
    }
  }
  return result;
}

uint64_t sub_19F027A98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472B58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F028070();
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v9 = sub_19F1DD18C();
  uint64_t v11 = v10;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_19F1DD18C();
  uint64_t v24 = v12;
  char v27 = 2;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_19F1DD16C();
  int v25 = v14;
  uint64_t v22 = v13;
  char v26 = 3;
  uint64_t v15 = sub_19F1DD16C();
  double v16 = v8;
  char v18 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  uint64_t v19 = v24;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v22;
  *(unsigned char *)(a2 + 40) = v25 & 1;
  *(void *)(a2 + 48) = v15;
  *(unsigned char *)(a2 + 56) = v18 & 1;
  return result;
}

void *sub_19F027D5C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472B40);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F027F04();
  sub_19F1DD8AC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAA0);
    sub_19F027FAC(&qword_1E9472B48, (void (*)(void))sub_19F027F58);
    sub_19F1DD1BC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_19F027F04()
{
  unint64_t result = qword_1E946CA20;
  if (!qword_1E946CA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA20);
  }
  return result;
}

unint64_t sub_19F027F58()
{
  unint64_t result = qword_1E9472B50;
  if (!qword_1E9472B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472B50);
  }
  return result;
}

uint64_t sub_19F027FAC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946CAA0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19F02801C()
{
  unint64_t result = qword_1E946CA18;
  if (!qword_1E946CA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA18);
  }
  return result;
}

unint64_t sub_19F028070()
{
  unint64_t result = qword_1E946CA00;
  if (!qword_1E946CA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SentryStackTrace.StackFrame.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F028190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryStackTrace.StackFrame.CodingKeys()
{
  return &type metadata for SentryStackTrace.StackFrame.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SentryStackTrace.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F028264);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryStackTrace.CodingKeys()
{
  return &type metadata for SentryStackTrace.CodingKeys;
}

unint64_t sub_19F0282A0()
{
  unint64_t result = qword_1E9472B60;
  if (!qword_1E9472B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472B60);
  }
  return result;
}

unint64_t sub_19F0282F8()
{
  unint64_t result = qword_1E9472B68;
  if (!qword_1E9472B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472B68);
  }
  return result;
}

unint64_t sub_19F028350()
{
  unint64_t result = qword_1E946CA10;
  if (!qword_1E946CA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA10);
  }
  return result;
}

unint64_t sub_19F0283A8()
{
  unint64_t result = qword_1E946CA08;
  if (!qword_1E946CA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA08);
  }
  return result;
}

unint64_t sub_19F028400()
{
  unint64_t result = qword_1E946CA30;
  if (!qword_1E946CA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA30);
  }
  return result;
}

unint64_t sub_19F028458()
{
  unint64_t result = qword_1E946CA28;
  if (!qword_1E946CA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA28);
  }
  return result;
}

uint64_t sub_19F0284AC()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for Unstable()
{
  return &type metadata for Unstable;
}

void sub_19F028508(uint64_t a1)
{
}

void sub_19F028518()
{
}

void AccountProvider.onActiveAccountChange.getter(uint64_t a1)
{
  double v1 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  uint64_t v4 = 0;
  unint64_t v5 = 0xE000000000000000;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  uint64_t v4 = 60;
  unint64_t v5 = 0xE100000000000000;
  swift_getDynamicType();
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F1DCFCC();
  __break(1u);
}

uint64_t AccountProviderActiveAccountChange.hash(into:)()
{
  return sub_19F1DD73C();
}

BOOL static AccountProviderActiveAccountChange.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AccountProviderActiveAccountChange.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F0287DC()
{
  unint64_t result = qword_1E9472B70;
  if (!qword_1E9472B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472B70);
  }
  return result;
}

uint64_t dispatch thunk of AccountProvider.activeAccount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AccountProvider.onActiveAccountChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unsigned char *storeEnumTagSinglePayload for AccountProviderActiveAccountChange(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F028924);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountProviderActiveAccountChange()
{
  return &type metadata for AccountProviderActiveAccountChange;
}

void sub_19F02895C()
{
}

uint64_t dispatch thunk of _ScenePhaseChangeObserverProtocol.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _ScenePhaseChangeObserverProtocol.addDelegate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of _ScenePhaseChangeObserverProtocol.removeDelegate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of _ScenePhaseChangeObserverDelegate.didEnterBackground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _ScenePhaseChangeObserverDelegate.willEnterForeground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NetRequestEncoder.encodeRequest(fromContentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19EEB8A6C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_19F028AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  unsigned int v6 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  id v8 = v6;
  uint64_t v30 = sub_19EEC3F3C(0, 25, 0, MEMORY[0x1E4FBC860]);
  v9._object = (void *)0x800000019F26E350;
  v9._uint64_t countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v9);
  uint64_t v10 = (uint64_t *)(a1 + *(int *)(type metadata accessor for JetPackAsset(0) + 28));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  v29[3] = MEMORY[0x1E4FBB1A0];
  v29[0] = v11;
  v29[1] = v12;
  sub_19EEBCD00((uint64_t)v29, (uint64_t)v25);
  long long v23 = 0u;
  long long v24 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
  char v28 = 0;
  long long v26 = v23;
  long long v27 = v24;
  uint64_t v13 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  void v13[2] = v15 + 1;
  double v16 = &v13[5 * v15];
  long long v17 = v26;
  long long v18 = v27;
  *((unsigned char *)v16 + 64) = v28;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  uint64_t v30 = v13;
  sub_19EEBD664((uint64_t)v29, &qword_1EB393260);
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(void *)(v7 + 32) = v30;
  *(void *)&long long v26 = v8;
  LOBYTE(v23) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v23);

  uint64_t v20 = swift_bridgeObjectRelease();
  uint64_t v21 = *(os_unfair_lock_s **)(v3 + 16);
  MEMORY[0x1F4188790](v20);
  swift_retain();
  os_unfair_lock_lock(v21 + 6);
  sub_19F029954((uint64_t)&v21[4]);
  os_unfair_lock_unlock(v21 + 6);
  swift_release();
  return sub_19EF93C94(a1, a2);
}

uint64_t sub_19F028D88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for JetPackAsset(0);
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(v6 + 28));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  sub_19EF93C94(a2, (uint64_t)v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  swift_bridgeObjectRetain();
  return sub_19EFB5C00((uint64_t)v5, v8, v9);
}

uint64_t sub_19F028E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
  id v10 = v8;
  char v29 = sub_19EEC3F3C(0, 36, 0, MEMORY[0x1E4FBC860]);
  v11._object = (void *)0x800000019F26E320;
  v11._uint64_t countAndFlagsBits = 0xD000000000000023;
  LogMessage.StringInterpolation.appendLiteral(_:)(v11);
  uint64_t v28[3] = MEMORY[0x1E4FBB1A0];
  v28[0] = a1;
  v28[1] = a2;
  sub_19EEBCD00((uint64_t)v28, (uint64_t)v24);
  long long v22 = 0u;
  long long v23 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v24, (uint64_t)&v22);
  char v27 = 0;
  long long v25 = v22;
  long long v26 = v23;
  uint64_t v12 = v29;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v12 = sub_19EEC3F3C(0, v12[2] + 1, 1, v12);
  }
  unint64_t v14 = v12[2];
  unint64_t v13 = v12[3];
  if (v14 >= v13 >> 1) {
    uint64_t v12 = sub_19EEC3F3C((void *)(v13 > 1), v14 + 1, 1, v12);
  }
  void v12[2] = v14 + 1;
  unint64_t v15 = &v12[5 * v14];
  long long v16 = v25;
  long long v17 = v26;
  *((unsigned char *)v15 + 64) = v27;
  *((_OWORD *)v15 + 2) = v16;
  *((_OWORD *)v15 + 3) = v17;
  char v29 = v12;
  sub_19EEBD664((uint64_t)v28, &qword_1EB393260);
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  *(void *)(v9 + 32) = v29;
  *(void *)&long long v25 = v10;
  LOBYTE(v22) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v22);

  uint64_t v19 = swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v4 + 16);
  MEMORY[0x1F4188790](v19);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v20 + 24));
  sub_19F029938((uint64_t *)(v20 + 16), a3);
  os_unfair_lock_unlock((os_unfair_lock_t)(v20 + 24));
  return swift_release();
}

uint64_t sub_19F0290FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1;
  if (*(void *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_19EEBD400(a2, a3);
    if (v9)
    {
      unint64_t v10 = v8;
      uint64_t v11 = *(void *)(v5 + 56);
      uint64_t v12 = type metadata accessor for JetPackAsset(0);
      uint64_t v13 = *(void *)(v12 - 8);
      sub_19EF93C94(v11 + *(void *)(v13 + 72) * v10, a4);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a4, 0, 1, v12);
    }
    else
    {
      uint64_t v16 = type metadata accessor for JetPackAsset(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a4, 1, 1, v16);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = type metadata accessor for JetPackAsset(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a4, 1, 1, v14);
  }
}

uint64_t sub_19F02927C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)(a2 + *(int *)(type metadata accessor for JetPackAsset(0) + 28));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  swift_bridgeObjectRetain();
  sub_19EF6B828(v7, v8, (uint64_t)v5);
  swift_bridgeObjectRelease();
  return sub_19EEBD664((uint64_t)v5, &qword_1EB3911D0);
}

uint64_t sub_19F02934C@<X0>(size_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  size_t v3 = sub_19EF9F018(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_19F02939C()
{
  uint64_t v1 = v0;
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  strcpy(v11, "Emptying cache");
  v11[15] = -18;
  long long v9 = 0u;
  long long v10 = 0u;
  id v5 = v2;
  sub_19EEC3E70((uint64_t)v11, (uint64_t)&v9);
  *(unsigned char *)(v4 + 64) = 0;
  long long v6 = v10;
  *(_OWORD *)(v4 + 32) = v9;
  *(_OWORD *)(v4 + 48) = v6;
  *(void *)(v3 + 32) = v4;
  *(void *)&long long v9 = v5;
  v11[0] = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)v11);

  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_19F029514((void *)(v7 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  return swift_release();
}

uint64_t sub_19F029514(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E4FBC868];
  return result;
}

uint64_t type metadata accessor for JetPackAssetInMemoryCache()
{
  return self;
}

uint64_t sub_19F029574(uint64_t a1, uint64_t a2)
{
  sub_19F028AFC(a2, a1);
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return sub_19EED02BC(v3);
}

uint64_t sub_19F029600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_19F028E90(a2, a3, a1);
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return sub_19EED02BC(v4);
}

uint64_t sub_19F029690(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)v1 + 16);
  *(void *)(swift_task_alloc() + 16) = a1;
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  sub_19F02991C((uint64_t)&v3[4]);
  os_unfair_lock_unlock(v3 + 6);
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
  return sub_19EED02BC(v4);
}

uint64_t sub_19F029790()
{
  sub_19F02939C();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return sub_19EED02BC(v1);
}

uint64_t sub_19F029814()
{
  uint64_t v7 = v1;
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v2 + 6);
  sub_19F02934C((size_t *)&v6);
  os_unfair_lock_unlock(v2 + 6);
  uint64_t v3 = v6;
  swift_release();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return sub_19F029908(v4, v1, v3);
}

uint64_t sub_19F029908(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_19F02991C(uint64_t a1)
{
  return sub_19F02927C(a1, *(void *)(v1 + 16));
}

uint64_t sub_19F029938@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F0290FC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_19F029954(uint64_t a1)
{
  return sub_19F028D88(a1, *(void *)(v1 + 16));
}

id JSWeakReference.__allocating_init(_:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  if (!objc_msgSend(a1, sel_isObject))
  {

    swift_deallocPartialClassInstance();
    return 0;
  }
  id result = objc_msgSend(a1, sel_context);
  if (result)
  {
    *(void *)(v2 + 16) = result;
    JSContextGetGroup((JSContextRef)objc_msgSend(result, sel_JSGlobalContextRef));
    objc_msgSend(a1, sel_JSValueRef);
    id result = (id)JSWeakCreate();
    if (result)
    {
      id v4 = result;

      *(void *)(v2 + 24) = v4;
      return (id)v2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id JSWeakReference.init(_:)(void *a1)
{
  if (!objc_msgSend(a1, sel_isObject))
  {

    swift_deallocPartialClassInstance();
    return 0;
  }
  id result = objc_msgSend(a1, sel_context);
  if (result)
  {
    *(void *)(v1 + 16) = result;
    JSContextGetGroup((JSContextRef)objc_msgSend(result, sel_JSGlobalContextRef));
    objc_msgSend(a1, sel_JSValueRef);
    id result = (id)JSWeakCreate();
    if (result)
    {
      id v4 = result;

      *(void *)(v1 + 24) = v4;
      return (id)v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t JSWeakReference.deinit()
{
  uint64_t v1 = *(void **)(v0 + 16);
  JSContextGetGroup((JSContextRef)objc_msgSend(v1, sel_JSGlobalContextRef));
  JSWeakRelease();

  return v0;
}

uint64_t JSWeakReference.__deallocating_deinit()
{
  uint64_t v1 = *(void **)(v0 + 16);
  JSContextGetGroup((JSContextRef)objc_msgSend(v1, sel_JSGlobalContextRef));
  JSWeakRelease();

  return swift_deallocClassInstance();
}

id JSWeakReference.referent.getter()
{
  id result = (id)JSWeakGetObject();
  if (result) {
    return objc_msgSend(self, sel_valueWithJSValueRef_inContext_, result, *(void *)(v0 + 16));
  }
  return result;
}

id sub_19F029C34()
{
  uint64_t v1 = *v0;
  id result = (id)JSWeakGetObject();
  if (result) {
    return objc_msgSend(self, sel_valueWithJSValueRef_inContext_, result, *(void *)(v1 + 16));
  }
  return result;
}

uint64_t type metadata accessor for JSWeakReference()
{
  return self;
}

uint64_t method lookup function for JSWeakReference(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for JSWeakReference);
}

uint64_t dispatch thunk of JSWeakReference.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_19F029CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DC37C();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_19F1DC36C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_19EEAEF0C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19F1DC2FC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CF00);
  return swift_task_create();
}

uint64_t sub_19F029E8C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 9; ; ++i)
  {
    uint64_t v4 = i - 7;
    if (__OFADD__(i - 8, 1)) {
      break;
    }
    BOOL v6 = *(_DWORD *)(a2 + 4 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

id LocalizedStringTable.bundle.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for LocalizedStringTable() + 20));
  return v1;
}

Swift::String_optional __swiftcall LocalizedStringTable.localizedString(forKey:in:)(Swift::String forKey, Swift::String_optional in)
{
  object = in.value._object;
  uint64_t countAndFlagsBits = in.value._countAndFlagsBits;
  BOOL v5 = forKey._object;
  uint64_t v6 = forKey._countAndFlagsBits;
  uint64_t v7 = *(void *)(v2 + *(int *)(type metadata accessor for LocalizedStringTable() + 28));
  uint64_t v8 = *(void **)(v7 + 16);
  long long v9 = (objc_class *)type metadata accessor for LocalizedStringsCache.Key();
  long long v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = (uint64_t *)&v10[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_key];
  *uint64_t v11 = v6;
  v11[1] = (uint64_t)v5;
  uint64_t v12 = (uint64_t *)&v10[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_domain];
  uint64_t *v12 = countAndFlagsBits;
  v12[1] = (uint64_t)object;
  v28.receiver = v10;
  v28.super_class = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = objc_msgSendSuper2(&v28, sel_init);
  uint64_t v14 = objc_msgSend(v8, sel_objectForKey_, v13);

  if (v14)
  {
    uint64_t v15 = v14[2];
    uint64_t v16 = (void *)v14[3];
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    uint64_t v15 = sub_19F0B60F8(v6, (uint64_t)v5, countAndFlagsBits, object);
    uint64_t v16 = v17;
    Swift::String v18 = *(void **)(v7 + 16);
    type metadata accessor for LocalizedStringsCache.Value();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v15;
    *(void *)(v19 + 24) = v16;
    uint64_t v20 = (char *)objc_allocWithZone(v9);
    uint64_t v21 = (uint64_t *)&v20[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_key];
    uint64_t *v21 = v6;
    v21[1] = (uint64_t)v5;
    long long v22 = (uint64_t *)&v20[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_domain];
    uint64_t *v22 = countAndFlagsBits;
    v22[1] = (uint64_t)object;
    v27.receiver = v20;
    v27.super_class = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v23 = objc_msgSendSuper2(&v27, sel_init);
    objc_msgSend(v18, sel_setObject_forKey_, v19, v23, v27.receiver, v27.super_class, v28.receiver, v28.super_class);
    swift_release();
  }
  uint64_t v24 = v15;
  long long v25 = v16;
  result.value._object = v25;
  result.value._uint64_t countAndFlagsBits = v24;
  return result;
}

uint64_t LocalizedStringTable.fetchLanguages()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_19F02A124, 0, 0);
}

uint64_t sub_19F02A124()
{
  uint64_t v1 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F24EAD0;
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for LocalizedStringTable() + 24));
  uint64_t v4 = v3[1];
  *(void *)(v2 + 32) = *v3;
  *(void *)(v2 + 40) = v4;
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  return v6(v2);
}

uint64_t LocalizedStringTable.fetchStrings(withLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v5 = type metadata accessor for LocalizedStringTable();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[9] = v6;
  v4[10] = *(void *)(v6 + 64);
  v4[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F02A2D8, 0, 0);
}

uint64_t sub_19F02A2D8()
{
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = (void *)(v1 + *(int *)(v0[8] + 24));
  if (*v4 == v3 && v4[1] == v2)
  {
LABEL_7:
    uint64_t v7 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v9 = v0[9];
    uint64_t v8 = v0[10];
    uint64_t v10 = sub_19F1DC37C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    sub_19EEC5FA8(v1, v7);
    unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = 0;
    *(void *)(v12 + 24) = 0;
    sub_19EE57E44(v7, v12 + v11);
    id v13 = (void *)(v12 + ((v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
    *id v13 = v3;
    v13[1] = v2;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_19F029CE0(v6, (uint64_t)&unk_1E9472BC0, v12);
    v0[13] = v14;
    uint64_t v15 = (void *)swift_task_alloc();
    v0[14] = v15;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CF00);
    *uint64_t v15 = v0;
    v15[1] = sub_19F02A554;
    uint64_t v17 = MEMORY[0x1E4FBC248];
    uint64_t v18 = MEMORY[0x1E4FBC278];
    return MEMORY[0x1F4187DA0](v0 + 2, v14, v16, v17, v18);
  }
  if (sub_19F1DD44C())
  {
    uint64_t v2 = v0[6];
    uint64_t v1 = v0[7];
    uint64_t v3 = v0[5];
    goto LABEL_7;
  }
  uint64_t v20 = v0[5];
  uint64_t v19 = v0[6];
  sub_19EF6FA4C();
  swift_allocError();
  *(void *)uint64_t v21 = v20;
  *(void *)(v21 + 8) = v19;
  *(unsigned char *)(v21 + 16) = 1;
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_19F02A554()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](sub_19F02A66C, 0, 0);
}

uint64_t sub_19F02A66C(uint64_t a1)
{
  uint64_t v14 = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v3 = MEMORY[0x1E4FBC248];
    uint64_t v4 = MEMORY[0x1E4FBC278];
    return MEMORY[0x1F41868E8](a1, v3, v4);
  }
  else
  {
    if (v2)
    {
      uint64_t v5 = *(uint64_t **)(v1 + 32);
      v13[3] = &type metadata for FoundationValue;
      v13[4] = &off_1EF13D8F8;
      uint64_t v6 = swift_allocObject();
      v13[0] = v6;
      *(void *)(v6 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
      *(void *)(v6 + 16) = v2;
      _OWORD v5[3] = (uint64_t)&type metadata for LocalizedStringsJSONObject;
      v5[4] = (uint64_t)&off_1EF145FC8;
      uint64_t v7 = swift_allocObject();
      *uint64_t v5 = v7;
      sub_19EEDC054((uint64_t)v13, v7 + 16);
      swift_task_dealloc();
      swift_task_dealloc();
    }
    else
    {
      uint64_t v9 = *(void *)(v1 + 40);
      uint64_t v8 = *(void *)(v1 + 48);
      sub_19EF6FA4C();
      swift_allocError();
      *(void *)uint64_t v10 = v9;
      *(void *)(v10 + 8) = v8;
      *(unsigned char *)(v10 + 16) = 1;
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
    }
    unint64_t v11 = *(uint64_t (**)(void))(v1 + 8);
    return v11();
  }
}

uint64_t sub_19F02A81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  _OWORD v6[2] = a1;
  void v6[3] = a4;
  return MEMORY[0x1F4188298](sub_19F02A840, 0, 0);
}

uint64_t sub_19F02A840()
{
  uint64_t v2 = (uint64_t *)v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = *(void **)(v1 + *(int *)(type metadata accessor for LocalizedStringTable() + 20));
  uint64_t v4 = (void *)sub_19F1DBD4C();
  id v5 = objc_msgSend(v3, sel_localizedStringsForTable_localization_, 0, v4);

  uint64_t v6 = sub_19F1DBB3C();
  *uint64_t v2 = v6;
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_19F02A918()
{
  uint64_t v1 = (int *)(type metadata accessor for LocalizedStringTable() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_19F1DB66C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v5, v4);
}

uint64_t sub_19F02AA44(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for LocalizedStringTable() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + v5;
  uint64_t v7 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[4] = v8;
  void v10[5] = v9;
  uint64_t v10[2] = a1;
  void v10[3] = v6;
  v10[1] = sub_19EEB8A6C;
  return MEMORY[0x1F4188298](sub_19F02A840, 0, 0);
}

uint64_t sub_19F02AB68()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F02ABA0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F02ABD8(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  return MEMORY[0x1F4188298](sub_19F02ABF8, 0, 0);
}

uint64_t sub_19F02ABF8()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
  uint64_t v4 = (void *)(v2 + *(int *)(v1 + 24));
  uint64_t v5 = v4[1];
  *(void *)(v3 + 32) = *v4;
  *(void *)(v3 + 40) = v5;
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  swift_bridgeObjectRetain();
  return v7(v3);
}

uint64_t sub_19F02ACA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_19EEB8A6C;
  return LocalizedStringTable.fetchStrings(withLanguage:)(a1, a2, a3);
}

uint64_t *initializeBufferWithCopyOfBuffer for LocalizedStringTable(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_19F1DB66C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)v4 + v8) = (uint64_t)v10;
    unint64_t v11 = (uint64_t *)((char *)v4 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *unint64_t v11 = *v12;
    v11[1] = v13;
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    id v14 = v10;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t assignWithCopy for LocalizedStringTable(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB66C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for LocalizedStringTable(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB66C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for LocalizedStringTable(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB66C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[6];
  id v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *id v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedStringTable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F02B078);
}

uint64_t sub_19F02B078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB66C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for LocalizedStringTable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F02B14C);
}

uint64_t sub_19F02B14C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_19F1DB66C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_19F02B208()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F02B240(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  int v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_19F02B320;
  return v5(v2 + 16);
}

uint64_t sub_19F02B320()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_19F02B450(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19EEB8A6C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E9472BE8 + dword_1E9472BE8);
  return v6(a1, v4);
}

BOOL static NetworkInterface.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkInterface.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t NetworkInterface.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F02B598()
{
  unint64_t result = qword_1E9472BF8;
  if (!qword_1E9472BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472BF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NetworkInterface(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F02B6B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterface()
{
  return &type metadata for NetworkInterface;
}

uint64_t dispatch thunk of NetworkObservation.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NetworkInquiry.isLikelyReachable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NetworkInquiry.interface.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NetworkInquiry.isExpensive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NetworkInquiry.isConstrained.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NetworkInquiry.observe(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

void sub_19F02B768(long long *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = sub_19F1DB9FC();
  uint64_t v75 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v70 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_19F1DBA3C();
  uint64_t v74 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v68 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_19F1DBA0C();
  uint64_t v11 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  long long v66 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_19F1DB5AC();
  uint64_t v13 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v4[3];
  uint64_t v17 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v16);
  long long v76 = *a1;
  long long aBlock = v76;
  (*(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8))(&aBlock, a2, a3, v16, v17);
  sub_19EF4C6D8(v76);
  id v18 = objc_allocWithZone(MEMORY[0x1E4F4DD60]);
  uint64_t v19 = (void *)sub_19F1DBB1C();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v18, sel_initWithUnderlyingDictionary_, v19);

  if (a3)
  {
    uint64_t v21 = (void *)sub_19F1DBD4C();
    objc_msgSend(v20, sel_setTopic_, v21);
  }
  uint64_t v22 = sub_19EF786BC();
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v63 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
    char v62 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v61 = (void (**)(char *, void, uint64_t))(v11 + 104);
    unsigned int v60 = *MEMORY[0x1E4FBCB50];
    uint64_t v59 = (void (**)(char *, uint64_t))(v11 + 8);
    unint64_t v58 = v79;
    char v57 = (void (**)(char *, uint64_t))(v75 + 8);
    char v56 = (void (**)(char *, uint64_t))(v74 + 8);
    uint64_t v53 = v22;
    uint64_t v24 = (uint64_t *)(v22 + 48);
    long long v55 = xmmword_19F24EAD0;
    long long v54 = v15;
    id v71 = v20;
    char v64 = v4;
    do
    {
      *(void *)&long long v76 = v23;
      uint64_t v25 = *(v24 - 1);
      uint64_t v74 = *(v24 - 2);
      uint64_t v26 = *v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472C00);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v55;
      uint64_t v28 = v25;
      swift_bridgeObjectRetain();
      char v29 = v54;
      sub_19F1DB59C();
      uint64_t v30 = sub_19F1DB58C();
      uint64_t v32 = v31;
      (*v62)(v29, v65);
      *(void *)(inited + 32) = v30;
      *(void *)(inited + 40) = v32;
      *(void *)(inited + 72) = sub_19EEBDC10(0, (unint64_t *)&qword_1E946F790);
      *(void *)(inited + 80) = sub_19EF4D4E4();
      unint64_t v33 = v71;
      *(void *)(inited + 48) = v71;
      id v34 = v33;
      unint64_t v35 = sub_19EFB4BF0(inited);
      long long v36 = (void *)v64[6];
      long long v37 = v66;
      uint64_t v38 = v67;
      (*v61)(v66, v60, v67);
      uint64_t v75 = sub_19F1DC8BC();
      (*v59)(v37, v38);
      uint64_t v39 = (void *)swift_allocObject();
      v39[2] = v74;
      v39[3] = v28;
      uint64_t v72 = v28;
      v39[4] = v26;
      v39[5] = v35;
      unint64_t v73 = v35;
      void v39[6] = v36;
      uint64_t v40 = MEMORY[0x1E4FBC860];
      *(void *)&long long aBlock = MEMORY[0x1E4FBC860];
      LOBYTE(v80) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472C08);
      uint64_t v41 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
      uint64_t v42 = swift_allocObject();
      *(_DWORD *)(v42 + 16) = 0;
      *(void *)(v41 + 16) = v42;
      sub_19F02C988((uint64_t)&aBlock, v41 + 24);
      uint64_t v43 = (void *)swift_allocObject();
      v43[2] = sub_19F02C958;
      void v43[3] = v39;
      v43[4] = v41;
      v79[2] = sub_19F02CA30;
      unint64_t v80 = v43;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      v79[0] = sub_19EEA4A68;
      v79[1] = &block_descriptor_13;
      long long v44 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v45 = v36;
      swift_retain();
      swift_retain();
      swift_retain();
      Swift::String v46 = v68;
      sub_19F1DBA1C();
      uint64_t v77 = v40;
      sub_19EEC8D28();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
      sub_19EEA5E10((unint64_t *)&qword_1EB393050, &qword_1EB393048);
      uint64_t v47 = v70;
      sub_19F1DCC1C();
      id v48 = (void *)v75;
      MEMORY[0x19F3C6B90](0, v46, v47, v44);
      _Block_release(v44);
      (*v57)(v47, v8);
      (*v56)(v46, v69);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();
      uint64_t v49 = v76;
      swift_release();
      v24 += 3;
      uint64_t v23 = v49 - 1;
    }
    while (v23);
    swift_bridgeObjectRelease();
    id v20 = v71;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v50 = qword_1E94701F8;
  id v51 = v20;
  if (v50 != -1) {
    swift_once();
  }
  if (-[_JEAtomicFlag currentValue](qword_1E94747A8))
  {
    if (qword_1E9470200 != -1) {
      swift_once();
    }
    uint64_t v52 = qword_1E9498BA0;
    swift_retain();
    sub_19F02C504(v51, v52);

    swift_release();
  }
  else
  {
  }
}

uint64_t sub_19F02C04C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

id MetricsEventRecorder.withRemoteInspection.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v38 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v35 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v35 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v35 - v16;
  double v19 = MEMORY[0x1F4188790](v18);
  uint64_t v39 = v7;
  id v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16);
  v20((char *)&v35 - v21, v3, a1, v19);
  if (!swift_dynamicCast())
  {
    uint64_t v36 = a2;
    uint64_t v37 = v3;
    ((void (*)(char *, uint64_t, uint64_t))v20)(v17, v3, a1);
    ((void (*)(char *, char *, uint64_t))v20)(v14, v17, a1);
    type metadata accessor for AMSMetricsEventRecorder();
    int v24 = swift_dynamicCast();
    if (v24) {
      swift_release();
    }
    uint64_t v25 = v39;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v26(v11, v17, a1);
    if (v24)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v11, a1);
      __break(1u);
    }
    else
    {
      v26(v38, v11, a1);
      type metadata accessor for AMSInMemoryMetricsEventRecorder();
      if (!swift_dynamicCast())
      {
        if ((sub_19EE5698C() & 1) == 0)
        {
          uint64_t v34 = v36;
          a3[3] = a1;
          a3[4] = v34;
          boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a3);
          uint64_t v23 = v37;
          return (id)((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v20)(boxed_opaque_existential_2Tm, v23, a1);
        }
        objc_super v27 = a3;
        a3[3] = (uint64_t)&type metadata for MetricsEventRecorderWithInspection;
        a3[4] = (uint64_t)&off_1EF148F30;
        a3 = (uint64_t *)swift_allocObject();
        void *v27 = a3;
        uint64_t v28 = v36;
        a3[5] = a1;
        a3[6] = v28;
        char v29 = __swift_allocate_boxed_opaque_existential_2Tm(a3 + 2);
        ((void (*)(uint64_t *, uint64_t, uint64_t))v20)(v29, v37, a1);
        if (qword_1E9470128 == -1)
        {
LABEL_9:
          uint64_t v30 = (void *)qword_1E9498B68;
          uint64_t v31 = self;
          id v32 = v30;
          id result = objc_msgSend(v31, sel_sharedSession);
          a3[7] = (uint64_t)v32;
          a3[8] = (uint64_t)result;
          return result;
        }
LABEL_14:
        swift_once();
        goto LABEL_9;
      }
    }
    swift_release();
    __break(1u);
    goto LABEL_14;
  }
  sub_19F02C774((uint64_t)v40);
  a3[3] = a1;
  a3[4] = a2;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a3);
  uint64_t v23 = v3;
  return (id)((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v20)(boxed_opaque_existential_2Tm, v23, a1);
}

uint64_t sub_19F02C424(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_19F02CA58(a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v6 = *(void *)(*(void *)a1 + 16);
  if (v6 >= v4) {
    return sub_19F02CCE4(v4, v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_19F02C494(uint64_t a1)
{
  return sub_19EFF65FC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19F02C4A8(void *a1)
{
  return sub_19EFF6C28(0, a1[2], 0, a1);
}

uint64_t sub_19F02C4BC(uint64_t a1)
{
  return sub_19EFF6DB4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19F02C4D0(void *a1)
{
  return sub_19EFF7C60(0, a1[2], 0, a1);
}

uint64_t sub_19F02C4E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_19F02C504(void *a1, uint64_t a2)
{
  void v17[3] = &type metadata for TraceMetricsEventEnqueue;
  v17[4] = &protocol witness table for TraceMetricsEventEnqueue;
  v17[0] = a1;
  uint64_t v3 = *(void *)(a2 + 16);
  id v4 = a1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_19F02C4E4((void *)(v3 + 16), &v16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  uint64_t v5 = v16;
  uint64_t result = swift_release();
  uint64_t v16 = MEMORY[0x1E4FBC870];
  uint64_t v7 = *(void *)(v5 + 16);
  if (v7)
  {
    for (unint64_t i = 0; i != v7; ++i)
    {
      if (i >= *(void *)(v5 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = *(void *)(v5 + 8 * i + 32);
      uint64_t v10 = *(uint64_t (**)(uint64_t))(*(void *)v9 + 88);
      uint64_t v11 = swift_retain();
      if ((v10(v11) & 1) == 0
        || (uint64_t v12 = (*(uint64_t (**)(void *))(*(void *)v9 + 104))(v17), (v10(v12) & 1) == 0))
      {
        sub_19F0429DC(&v15, v9);
      }
      uint64_t result = swift_release();
    }
    uint64_t v13 = swift_release();
    if (!*(void *)(v16 + 16)) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v13 = swift_release();
    if (!*(void *)(MEMORY[0x1E4FBC870] + 16)) {
      goto LABEL_11;
    }
  }
  uint64_t v14 = *(os_unfair_lock_s **)(a2 + 16);
  MEMORY[0x1F4188790](v13);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v14 + 6);
  sub_19F02CA3C((uint64_t)&v14[4]);
  os_unfair_lock_unlock(v14 + 6);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
}

uint64_t sub_19F02C72C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19F02C774(uint64_t a1)
{
  return a1;
}

void destroy for MetricsEventRecorderWithInspection(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);

  uint64_t v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for MetricsEventRecorderWithInspection(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void **)(a2 + 40);
  int64_t v6 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  id v7 = v5;
  id v8 = v6;
  return a1;
}

uint64_t *assignWithCopy for MetricsEventRecorderWithInspection(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  long long v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = (uint64_t)v4;
  id v6 = v4;

  id v7 = (void *)a2[6];
  id v8 = (void *)a1[6];
  a1[6] = (uint64_t)v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for MetricsEventRecorderWithInspection(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;

  id v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return a1;
}

ValueMetadata *type metadata accessor for MetricsEventRecorderWithInspection()
{
  return &type metadata for MetricsEventRecorderWithInspection;
}

uint64_t sub_19F02C910()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_19F02C958(uint64_t a1, uint64_t a2, void (*a3)(void *), void (*a4)(void *))
{
  sub_19F1BBF28(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void **)(v4 + 32), *(void *)(v4 + 40), *(void **)(v4 + 48));
}

uint64_t sub_19F02C988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9476560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F02C9F0()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F02CA30()
{
  return sub_19F0FB3B8(*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_19F02CA3C(uint64_t a1)
{
  return sub_19F02C424(a1, *(void *)(v1 + 16));
}

uint64_t sub_19F02CA58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 16);
  if (v3)
  {
    unint64_t v6 = 0;
    uint64_t v7 = a2 + 56;
    while (1)
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v8 = v2[v6 + 4];
        sub_19F1DD72C();
        sub_19F1DD73C();
        id v9 = &v26;
        uint64_t result = sub_19F1DD78C();
        uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v12 = result & ~v11;
        if ((*(void *)(v7 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12)) {
          break;
        }
      }
LABEL_3:
      if ((void *)++v6 == v3) {
        return v2[2];
      }
    }
    uint64_t v13 = *(void *)(a2 + 48);
    if (*(void *)(v13 + 8 * v12) != v8)
    {
      uint64_t v14 = ~v11;
      do
      {
        unint64_t v12 = (v12 + 1) & v14;
        if (((*(void *)(v7 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          goto LABEL_3;
        }
      }
      while (*(void *)(v13 + 8 * v12) != v8);
    }
    unint64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    while (1)
    {
      unint64_t v17 = v2[2];
      if (v15 == v17) {
        return v6;
      }
      if (v15 >= v17) {
        goto LABEL_38;
      }
      uint64_t v18 = v2 + 4;
      if (*(void *)(a2 + 16))
      {
        uint64_t v19 = v18[v15];
        sub_19F1DD72C();
        sub_19F1DD73C();
        uint64_t result = sub_19F1DD78C();
        uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v21 = result & ~v20;
        if ((*(void *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
        {
          uint64_t v22 = *(void *)(a2 + 48);
          if (*(void *)(v22 + 8 * v21) == v19) {
            goto LABEL_15;
          }
          uint64_t v23 = ~v20;
          while (1)
          {
            unint64_t v21 = (v21 + 1) & v23;
            if (((*(void *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              break;
            }
            if (*(void *)(v22 + 8 * v21) == v19) {
              goto LABEL_15;
            }
          }
        }
      }
      if (v6 != v15)
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_40;
        }
        unint64_t v24 = v2[2];
        if (v6 >= v24) {
          goto LABEL_41;
        }
        if (v15 >= v24) {
          goto LABEL_42;
        }
        id v9 = (char *)v18[v6];
        uint64_t v25 = v18[v15];
        swift_retain();
        swift_retain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = sub_19F02C4A8(v2);
          uint64_t v2 = (void *)result;
        }
        if (v6 >= v2[2]) {
          goto LABEL_43;
        }
        uint64_t v3 = v2 + 4;
        v2[v6 + 4] = v25;
        swift_release();
        if (v15 >= v2[2])
        {
          __break(1u);
          return 0;
        }
LABEL_13:
        v3[v15] = v9;
        uint64_t result = swift_release();
        *(void *)a1 = v2;
      }
      BOOL v16 = __OFADD__(v6++, 1);
      if (v16) {
        goto LABEL_39;
      }
LABEL_15:
      BOOL v16 = __OFADD__(v15++, 1);
      if (v16)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_19F02CCE4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    sub_19EFF6470(isUniquelyReferenced_nonNull_native, v11, 1);
    uint64_t v4 = *v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472660);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)(v4 + 16);
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    BOOL v16 = (const void *)(v4 + 32 + 8 * a2);
    if (a1 != a2 || v4 + 32 + 8 * a1 >= (unint64_t)v16 + 8 * v15) {
      uint64_t result = (uint64_t)memmove((void *)(v4 + 32 + 8 * a1), v16, 8 * v15);
    }
    uint64_t v17 = *(void *)(v4 + 16);
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      *(void *)(v4 + 16) = v18;
LABEL_20:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t destroy for EncryptedBlobHeader(uint64_t *a1)
{
  sub_19EEA072C(*a1, a1[1]);
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  return sub_19EEA072C(v2, v3);
}

uint64_t *initializeWithCopy for EncryptedBlobHeader(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_19EEA0784(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v7 = a2[2];
  unint64_t v6 = a2[3];
  sub_19EEA0784(v7, v6);
  a1[2] = v7;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for EncryptedBlobHeader(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_19EEA0784(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_19EEA072C(v6, v7);
  uint64_t v9 = a2[2];
  unint64_t v8 = a2[3];
  sub_19EEA0784(v9, v8);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  sub_19EEA072C(v10, v11);
  return a1;
}

uint64_t *assignWithTake for EncryptedBlobHeader(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_19EEA072C(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_19EEA072C(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for EncryptedBlobHeader(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for EncryptedBlobHeader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptedBlobHeader()
{
  return &type metadata for EncryptedBlobHeader;
}

uint64_t sub_19F02D058(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472C10);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F02D310();
  sub_19F1DD8FC();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  char v18 = 0;
  sub_19F02D364();
  sub_19F1DD2AC();
  if (!v5)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    char v18 = 1;
    sub_19F1DD2AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_19F02D1F8()
{
  if (*v0) {
    return 6775156;
  }
  else {
    return 30313;
  }
}

uint64_t sub_19F02D220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F02D810(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F02D248(uint64_t a1)
{
  unint64_t v2 = sub_19F02D310();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F02D284(uint64_t a1)
{
  unint64_t v2 = sub_19F02D310();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F02D2C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_19F02D3B8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_19F02D2F0(void *a1)
{
  return sub_19F02D058(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_19F02D310()
{
  unint64_t result = qword_1E946FD98;
  if (!qword_1E946FD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946FD98);
  }
  return result;
}

unint64_t sub_19F02D364()
{
  unint64_t result = qword_1E9472C18;
  if (!qword_1E9472C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472C18);
  }
  return result;
}

uint64_t sub_19F02D3B8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_19F02D310();
  sub_19F1DD8AC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    char v14 = 0;
    sub_19EEE0574();
    sub_19F1DD1BC();
    uint64_t v7 = v12;
    unint64_t v9 = v13;
    char v14 = 1;
    sub_19EEA0784(v12, v13);
    sub_19F1DD1BC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v10 = v12;
    unint64_t v11 = v13;
    sub_19EEA0784(v7, v9);
    sub_19EEA0784(v10, v11);
    sub_19EEA072C(v7, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    sub_19EEA072C(v7, v9);
    sub_19EEA072C(v10, v11);
  }
  return v7;
}

unsigned char *storeEnumTagSinglePayload for EncryptedBlobHeader.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F02D6D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptedBlobHeader.CodingKeys()
{
  return &type metadata for EncryptedBlobHeader.CodingKeys;
}

unint64_t sub_19F02D70C()
{
  unint64_t result = qword_1E9472C20;
  if (!qword_1E9472C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472C20);
  }
  return result;
}

unint64_t sub_19F02D764()
{
  unint64_t result = qword_1E946FDA8;
  if (!qword_1E946FDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946FDA8);
  }
  return result;
}

unint64_t sub_19F02D7BC()
{
  unint64_t result = qword_1E946FDA0;
  if (!qword_1E946FDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946FDA0);
  }
  return result;
}

uint64_t sub_19F02D810(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 30313 && a2 == 0xE200000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_19F02D8DC(uint64_t a1, int a2)
{
  return sub_19F181F84(*(void *)v2, *(void *)(v2 + 8), a2);
}

uint64_t sub_19F02D90C(uint64_t a1, int a2)
{
  int v3 = sqlite3_bind_int(*(sqlite3_stmt **)(a1 + 16), a2, *v2);
  if (qword_1EB3912E8 != -1) {
    swift_once();
  }
  uint64_t result = sub_19EE672C4(v3, qword_1EB394F10);
  if ((result & 1) == 0)
  {
    sub_19EFE0074();
    swift_allocError();
    *uint64_t v5 = v3;
    return swift_willThrow();
  }
  return result;
}

id sub_19F02D9B0(unint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0) {
LABEL_8:
  }
    JUMPOUT(0x19F3C7060);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  return *(id *)(a2 + 8 * a1 + 32);
}

uint64_t sub_19F02D9E4()
{
  sub_19EED9530();
  sub_19F1DC27C();
  id v1 = v0;
  if (swift_dynamicCast()) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_19F02DA5C(uint64_t a1)
{
  id v2 = objc_msgSend(*v1, sel_objectAtIndexedSubscript_, a1);
  sub_19F1DCBEC();
  return swift_unknownObjectRelease();
}

uint64_t sub_19F02DAB8()
{
  return sub_19F02D9E4();
}

uint64_t sub_19F02DADC(void *a1, uint64_t a2)
{
  v8[1] = a1;
  _OWORD v7[2] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAE0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  uint64_t v5 = sub_19F02DF4C(&qword_1E9472C30);
  return sub_19F053D3C((void (*)(char *, char *))sub_19F02DF2C, (uint64_t)v7, v3, a2, v4, v5, MEMORY[0x1E4FBC0F0], (uint64_t)v8);
}

void sub_19F02DBA4(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v10 = sub_19F1DCAAC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v24[-1] - v12;
  char v14 = *a1;
  sub_19EE7C060();
  if (!v4)
  {
    uint64_t v29 = a4;
    uint64_t v23 = a3;
    sub_19EEBF040((uint64_t)v28, (uint64_t)v24);
    uint64_t v15 = v25;
    if (v25)
    {
      uint64_t v16 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v16 + 96))(v27, v15, v16);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    }
    else
    {
      sub_19EEBF108((uint64_t)v24);
      memset(v27, 0, sizeof(v27));
    }
    sub_19EEC3418((uint64_t)v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393260);
    char v17 = swift_dynamicCast();
    char v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
    uint64_t v19 = v29;
    if (v17)
    {
      uint64_t v20 = *(void *)(a2 - 8);
      v18(v13, 0, 1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v19, v13, a2);
      return;
    }
    v18(v13, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    id v21 = v14;
    sub_19F1DD98C();
    sub_19EF600C0();
    uint64_t v6 = swift_allocError();
    JSError.init(badValue:expected:)(v21, v22);
    swift_willThrow();
    a3 = v23;
  }
  *a3 = v6;
}

uint64_t sub_19F02DE50()
{
  if (!(*v0 >> 62)) {
    return *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_19F1DD03C();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_19F02DEB0@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_19F02D9B0(a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_19F02DEDC(uint64_t a1)
{
  return sub_19F02DADC(*v1, a1);
}

uint64_t sub_19F02DEE8(uint64_t a1)
{
  uint64_t result = sub_19F02DF4C(&qword_1E9472C28);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_19F02DF2C(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_19F02DBA4(a1, *(void *)(v3 + 16), a2, a3);
}

uint64_t sub_19F02DF4C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946FAE0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_19F02DF94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))(*(void *)(a1 + 16)) == 0;
}

uint64_t sub_19F02DFC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))(*(void *)(a1 + 16));
}

uint64_t sub_19F02DFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  double v9 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v12 = *(void (**)(char *))(v2 + *(int *)(a2 + 36));
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v5 + 24))(a1, v6, v5, v9);
  v12(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
}

void *sub_19F02E118(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v36 = a1;
  uint64_t v39 = *(void *)(v2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v31 - v5;
  uint64_t v7 = sub_19F1DCAAC();
  MEMORY[0x1F4188790](v7 - 8);
  double v9 = (char *)&v31 - v8;
  uint64_t v10 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(v14 - 8);
  double v15 = MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v31 - v16;
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, double))(v2 + 16))(v3, v2, v15);
  uint64_t v19 = sub_19F09E5D8(0, v18 & ~(v18 >> 63), 0, MEMORY[0x1E4FBC860]);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v37 = v1;
  v20(v13, v1, v3);
  sub_19F1DC01C();
  uint64_t v21 = v32;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v38 = v17;
  uint64_t v39 = v14;
  uint64_t v35 = AssociatedConformanceWitness;
  sub_19F1DCB2C();
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v34(v9, 1, AssociatedTypeWitness) != 1)
  {
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v25 = (void (**)(char *, uint64_t))(v21 + 8);
    do
    {
      v24(v6, v9, AssociatedTypeWitness);
      (*(void (**)(_OWORD *__return_ptr, char *))(v37 + *(int *)(v36 + 36)))(v40, v6);
      unint64_t v27 = v19[2];
      unint64_t v26 = v19[3];
      if (v27 >= v26 >> 1) {
        uint64_t v19 = sub_19F09E5D8((void *)(v26 > 1), v27 + 1, 1, v19);
      }
      void v19[2] = v27 + 1;
      uint64_t v28 = &v19[5 * v27];
      long long v29 = v40[0];
      long long v30 = v40[1];
      v28[8] = v41;
      *((_OWORD *)v28 + 2) = v29;
      *((_OWORD *)v28 + 3) = v30;
      (*v25)(v6, AssociatedTypeWitness);
      sub_19F1DCB2C();
    }
    while (v34(v9, 1, AssociatedTypeWitness) != 1);
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v39);
  return v19;
}

uint64_t sub_19F02E510(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(a1 + 24) + 32))(a2, *(void *)(a1 + 16));
}

uint64_t sub_19F02E530(void (*a1)(void *), uint64_t a2, uint64_t a3, unsigned int (*a4)(char *, uint64_t, uint64_t))
{
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  long long v30 = a4;
  MEMORY[0x1F4188790](a1);
  uint64_t v39 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v6 + 16);
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v35 = v6;
  uint64_t v32 = *(void *)(v7 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_19F1DCAAC();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v36 = *(char **)(v8 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v31 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v18 = (char *)&v27 - v17;
  uint64_t v41 = sub_19F1DBAFC();
  uint64_t v19 = v37;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v8, v7);
  uint64_t v20 = sub_19F1DC27C();
  sub_19F1DC1AC();
  (*((void (**)(char *, uint64_t, uint64_t))v36 + 2))(v31, v19, v8);
  sub_19F1DC01C();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v36 = v18;
  sub_19F1DCB2C();
  uint64_t v22 = v28;
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v23(v14, 1, AssociatedTypeWitness) == 1)
  {
LABEL_5:
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v38);
    return v41;
  }
  else
  {
    long long v30 = v23;
    uint64_t v31 = (char *)AssociatedConformanceWitness;
    uint64_t v32 = v20;
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    uint64_t v25 = (void (**)(char *, uint64_t))(v22 + 8);
    while (1)
    {
      v24(v11, v14, AssociatedTypeWitness);
      (*(void (**)(void *__return_ptr, char *))(v37 + *(int *)(v35 + 36)))(v40, v11);
      v33(v40);
      if (v4) {
        break;
      }
      sub_19F1DC23C();
      sub_19EEC3418((uint64_t)v40);
      (*v25)(v11, AssociatedTypeWitness);
      sub_19F1DCB2C();
      if (v30(v14, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_5;
      }
    }
    sub_19EEC3418((uint64_t)v40);
    (*v25)(v11, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v38);
    return swift_bridgeObjectRelease();
  }
}

void *sub_19F02E9E8(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v41 = a3;
  uint64_t v43 = *(void *)(v4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_19F1DCAAC();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(v16 - 8);
  double v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v33 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v15, v47, v5, v17);
  sub_19F1DC01C();
  uint64_t v20 = v35;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v42 = v19;
  uint64_t v43 = v16;
  uint64_t v38 = AssociatedConformanceWitness;
  sub_19F1DCB2C();
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v37(v11, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
LABEL_3:
    (*(void (**)(char *, uint64_t))(v34 + 8))(v42, v43);
  }
  else
  {
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    uint64_t v23 = v20 + 32;
    uint64_t v36 = v24;
    uint64_t v25 = (void (**)(char *, uint64_t))(v23 - 24);
    uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v35 = v23;
    v24(v8, v11, AssociatedTypeWitness);
    while (1)
    {
      (*(void (**)(void *__return_ptr, char *))(v47 + *(int *)(v41 + 36)))(v46, v8);
      char v26 = v39(v46);
      if (v3) {
        break;
      }
      if (v26)
      {
        sub_19EEC355C((uint64_t)v46, (uint64_t)v44);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v22 = sub_19F09E5D8(0, v22[2] + 1, 1, v22);
        }
        unint64_t v28 = v22[2];
        unint64_t v27 = v22[3];
        if (v28 >= v27 >> 1) {
          uint64_t v22 = sub_19F09E5D8((void *)(v27 > 1), v28 + 1, 1, v22);
        }
        v22[2] = v28 + 1;
        uint64_t v29 = &v22[5 * v28];
        long long v30 = v44[0];
        long long v31 = v44[1];
        v29[8] = v45;
        *((_OWORD *)v29 + 2) = v30;
        *((_OWORD *)v29 + 3) = v31;
        sub_19EEC3418((uint64_t)v46);
        (*v25)(v8, AssociatedTypeWitness);
      }
      else
      {
        sub_19EEC3418((uint64_t)v46);
        (*v25)(v8, AssociatedTypeWitness);
      }
      sub_19F1DCB2C();
      if (v37(v11, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_3;
      }
      v36(v8, v11, AssociatedTypeWitness);
    }
    sub_19EEC3418((uint64_t)v46);
    (*v25)(v8, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v42, v43);
    swift_bridgeObjectRelease();
  }
  return v22;
}

uint64_t sub_19F02EE9C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, void *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = v6;
  long long v54 = a2;
  uint64_t v55 = a3;
  uint64_t v58 = a1;
  uint64_t v62 = a6;
  uint64_t v47 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v43 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v12 + 16);
  char v57 = *(char **)(*(void *)(v12 + 24) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unsigned int v60 = (char *)&v43 - v14;
  uint64_t v15 = sub_19F1DCAAC();
  MEMORY[0x1F4188790](v15 - 8);
  long long v44 = (char *)&v43 - v16;
  uint64_t v17 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(v21 - 8);
  double v22 = MEMORY[0x1F4188790](v21);
  unint64_t v24 = (char *)&v43 - v23;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v47 + 16);
  uint64_t v56 = a5;
  v25(v62, v58, a5, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v8, v13);
  uint64_t v26 = v59;
  sub_19F1DC01C();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v28 = v44;
  char v57 = v24;
  uint64_t v58 = v21;
  uint64_t v29 = AssociatedTypeWitness;
  sub_19F1DCB2C();
  long long v30 = v28;
  uint64_t v31 = v26 + 48;
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v32(v30, 1, v29) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v57, v58);
  }
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  uint64_t v33 = v26 + 32;
  id v51 = v34;
  uint64_t v52 = (void (**)(char *, uint64_t))(v33 - 24);
  uint64_t v53 = (void (**)(uint64_t, uint64_t))(v47 + 8);
  v47 += 32;
  id v48 = v32;
  uint64_t v35 = v43;
  uint64_t v59 = v33;
  uint64_t v49 = v31;
  uint64_t v50 = AssociatedConformanceWitness;
  while (1)
  {
    uint64_t v36 = v60;
    v51(v60, v30, v29);
    (*(void (**)(void *__return_ptr, char *))(v8 + *(int *)(a4 + 36)))(v61, v36);
    v54(v62, v61);
    if (v7) {
      break;
    }
    sub_19EEC3418((uint64_t)v61);
    (*v52)(v60, v29);
    uint64_t v37 = a4;
    uint64_t v38 = v8;
    uint64_t v39 = v62;
    uint64_t v40 = v56;
    (*v53)(v62, v56);
    uint64_t v41 = v39;
    uint64_t v8 = v38;
    a4 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))v47)(v41, v35, v40);
    sub_19F1DCB2C();
    if (v48(v30, 1, v29) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v57, v58);
    }
  }
  sub_19EEC3418((uint64_t)v61);
  (*v52)(v60, v29);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v57, v58);
  return ((uint64_t (*)(uint64_t, uint64_t))*v53)(v62, v56);
}

BOOL sub_19F02F3CC(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  long long v30 = a1;
  uint64_t v31 = a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v32 = a3;
  uint64_t v37 = *(void *)(v4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_19F1DCAAC();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v16 - 8);
  double v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v27 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v15, v34, v5, v17);
  uint64_t v35 = v19;
  sub_19F1DC01C();
  uint64_t v37 = v16;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v20 = (uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  uint64_t v21 = (void (**)(char *, char *, uint64_t))(v28 + 32);
  double v22 = (void (**)(char *, uint64_t))(v28 + 8);
  do
  {
    sub_19F1DCB2C();
    int v23 = (*v20)(v11, 1, AssociatedTypeWitness);
    if (v23 == 1) {
      break;
    }
    (*v21)(v8, v11, AssociatedTypeWitness);
    (*(void (**)(void *__return_ptr, char *))(v34 + *(int *)(v32 + 36)))(v36, v8);
    char v24 = v30(v36);
    if (v3)
    {
      sub_19EEC3418((uint64_t)v36);
      (*v22)(v8, AssociatedTypeWitness);
      break;
    }
    char v25 = v24;
    sub_19EEC3418((uint64_t)v36);
    (*v22)(v8, AssociatedTypeWitness);
  }
  while ((v25 & 1) == 0);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v37);
  return v23 != 1;
}

uint64_t sub_19F02F77C(uint64_t a1, uint64_t a2)
{
  return sub_19F02E510(a2, a1);
}

uint64_t sub_19F02F78C(void (*a1)(void *), uint64_t a2, unsigned int (*a3)(char *, uint64_t, uint64_t), uint64_t a4)
{
  return sub_19F02E530(a1, a2, a4, a3);
}

void *sub_19F02F7B0(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  return sub_19F02E9E8(a1, a2, a3);
}

uint64_t sub_19F02F7C8@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, void *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_19F02EE9C(a1, a2, a3, a5, a4, a6);
}

BOOL sub_19F02F7EC(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  return sub_19F02F3CC(a1, a2, a3);
}

uint64_t sub_19F02F808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *uint64_t v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_19F02F888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *uint64_t v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19F02F914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19F02F990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_19F02FA14(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x19F02FB60);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_19F02FB74(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x19F02FD54);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_19F02FD7C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = (v2 << 6) | 0x18;
  uint64_t v7 = 11;
  unint64_t v16 = v2 >> 1;
  while (1)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    if (v5 >= v8) {
      goto LABEL_13;
    }
    uint64_t v9 = v1[v7 - 6];
    uint64_t v10 = v1[v7 - 4];
    uint64_t v21 = v1[v7 - 5];
    uint64_t v22 = v1[v7 - 7];
    uint64_t v20 = v1[v7 - 3];
    char v19 = v1[v7 - 2];
    uint64_t v18 = v1[v7 - 1];
    char v17 = v1[v7];
    uint64_t v11 = *(void *)((char *)v1 + v6 - 48);
    uint64_t v27 = *(void *)((char *)v1 + v6 - 56);
    uint64_t v12 = *(void *)((char *)v1 + v6 - 32);
    uint64_t v26 = *(void *)((char *)v1 + v6 - 40);
    uint64_t v13 = *(void *)((char *)v1 + v6 - 24);
    char v25 = *((unsigned char *)v1 + v6 - 16);
    uint64_t v24 = *(void *)((char *)v1 + v6 - 8);
    char v23 = *((unsigned char *)v1 + v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_19F16BA30(v1);
    }
    uint64_t v14 = &v1[v7];
    *((void *)v14 - 7) = v27;
    *((void *)v14 - 6) = v11;
    *((void *)v14 - 5) = v26;
    *((void *)v14 - 4) = v12;
    *((void *)v14 - 3) = v13;
    *(v14 - 16) = v25;
    *((void *)v14 - 1) = v24;
    *uint64_t v14 = v23;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5 >= v1[2]) {
      goto LABEL_14;
    }
    int v15 = (char *)v1 + v6;
    *((void *)v15 - 7) = v22;
    *((void *)v15 - 6) = v9;
    *((void *)v15 - 5) = v21;
    *((void *)v15 - 4) = v10;
    *((void *)v15 - 3) = v20;
    *(v15 - 16) = v19;
    *((void *)v15 - 1) = v18;
    *int v15 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v4 = v16;
LABEL_4:
    ++v3;
    v7 += 8;
    --v5;
    v6 -= 64;
    if (v4 == v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

double sub_19F02FF84@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v29 = a1[9];
  unint64_t v3 = (void *)a1[10];
  if (a1[12])
  {
    uint64_t v4 = a1[11];
    unint64_t v5 = a1[12];
  }
  else
  {
    unint64_t v5 = 0xE500000000000000;
    uint64_t v4 = 0x726F727245;
  }
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[6];
  uint64_t v30 = a1[7];
  if (v29)
  {
    uint64_t v25 = a1[6];
    uint64_t v26 = *a1;
    uint64_t v27 = (void *)a1[10];
    uint64_t v28 = a1[1];
    int64_t v9 = *(void *)(v29 + 16);
    if (v9)
    {
      unint64_t v22 = v5;
      uint64_t v23 = v4;
      uint64_t v36 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19EFF6580(0, v9, 0);
      uint64_t v10 = v36;
      uint64_t v11 = v29 + 48;
      do
      {
        if (*(void *)(v11 - 8))
        {
          unint64_t v34 = *(void *)(v11 - 8);
          uint64_t v35 = *(void *)(v11 - 16);
        }
        else
        {
          unint64_t v34 = 0xE800000000000000;
          uint64_t v35 = 0x296C61626F6C6728;
        }
        uint64_t v12 = *(void *)(v11 + 8);
        uint64_t v32 = *(void *)(v11 + 16);
        char v31 = *(unsigned char *)(v11 + 24);
        uint64_t v13 = *(void *)(v11 + 32);
        char v33 = *(unsigned char *)(v11 + 40);
        if (v12) {
          uint64_t v14 = *(void *)v11;
        }
        else {
          uint64_t v14 = 0x296C61626F6C6728;
        }
        if (v12) {
          unint64_t v15 = *(void *)(v11 + 8);
        }
        else {
          unint64_t v15 = 0xE800000000000000;
        }
        unint64_t v16 = *(void *)(v36 + 16);
        unint64_t v17 = *(void *)(v36 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16 >= v17 >> 1) {
          sub_19EFF6580(v17 > 1, v16 + 1, 1);
        }
        *(void *)(v36 + 16) = v16 + 1;
        unint64_t v18 = v36 + (v16 << 6);
        *(void *)(v18 + 32) = v35;
        *(void *)(v18 + 40) = v34;
        *(void *)(v18 + 48) = v14;
        *(void *)(v18 + 56) = v15;
        *(void *)(v18 + 64) = v32;
        *(unsigned char *)(v18 + 72) = v31;
        *(void *)(v18 + 80) = v13;
        v11 += 64;
        *(unsigned char *)(v18 + 88) = v33;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      uint64_t v4 = v23;
      uint64_t v2 = a2;
      unint64_t v5 = v22;
      uint64_t v7 = v28;
      uint64_t v19 = v30;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = v30;
      swift_bridgeObjectRetain();
      uint64_t v10 = MEMORY[0x1E4FBC860];
    }
    uint64_t v20 = sub_19F02FD7C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v8 = v25;
    uint64_t v6 = v26;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v20 = 0;
    uint64_t v19 = v30;
  }
  *(void *)uint64_t v2 = v4;
  *(void *)(v2 + 8) = v5;
  *(void *)(v2 + 16) = v6;
  *(void *)(v2 + 24) = v7;
  *(void *)(v2 + 32) = v8;
  *(void *)(v2 + 40) = v19;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  double result = 4.82410885e228;
  *(_OWORD *)(v2 + 64) = xmmword_19F256BF0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_WORD *)(v2 + 112) = 514;
  *(void *)(v2 + 120) = v20;
  return result;
}

void sub_19F03024C(void *a1@<X0>, uint64_t a2@<X8>)
{
  v19[0] = (uint64_t)a1;
  id v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  if (swift_dynamicCast())
  {
    v19[0] = DynamicType;
    v19[1] = v29;
    void v19[2] = v30;
    char v20 = v31;
    uint64_t v21 = v32;
    char v22 = BYTE8(v32);
    long long v23 = v33;
    long long v24 = v34;
    long long v25 = v35;
    uint64_t v26 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v5 = (id)v35;
    sub_19F02FF84(v19, (uint64_t)&DynamicType);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v38;
    long long v7 = v34;
    long long v8 = v35;
    long long v9 = v36;
    __int16 v10 = v37;
    long long v11 = v32;
    long long v12 = v33;
    uint64_t v13 = v30;
    uint64_t v14 = v31;
    uint64_t v15 = DynamicType;
    uint64_t v16 = v29;
  }
  else
  {
    swift_getErrorValue();
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t v29 = v27;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946C8E0);
    uint64_t v15 = sub_19F1DBE0C();
    uint64_t v16 = v17;
    swift_getErrorValue();
    uint64_t v13 = sub_19F1DD6AC();
    uint64_t v14 = v18;

    uint64_t v6 = 0;
    long long v7 = xmmword_19F256C00;
    long long v11 = 0uLL;
    __int16 v10 = 514;
    long long v12 = 0uLL;
    long long v8 = 0uLL;
    long long v9 = 0uLL;
  }
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v16;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(_OWORD *)(a2 + 32) = v11;
  *(_OWORD *)(a2 + 48) = v12;
  *(_OWORD *)(a2 + 64) = v7;
  *(_OWORD *)(a2 + 80) = v8;
  *(_OWORD *)(a2 + 96) = v9;
  *(_WORD *)(a2 + 112) = v10;
  *(void *)(a2 + 120) = v6;
}

double sub_19F030458@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  int v3 = *a1;
  uint64_t v4 = *((void *)a1 + 9);
  if (v4)
  {
    int v22 = *a1;
    int64_t v5 = *(void *)(v4 + 16);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (v5)
    {
      uint64_t v29 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_19EFF6580(0, v5, 0);
      uint64_t v6 = v29;
      uint64_t v7 = v4 + 48;
      do
      {
        if (*(void *)(v7 - 8))
        {
          unint64_t v26 = *(void *)(v7 - 8);
          uint64_t v27 = *(void *)(v7 - 16);
        }
        else
        {
          unint64_t v26 = 0xE800000000000000;
          uint64_t v27 = 0x296C61626F6C6728;
        }
        uint64_t v8 = *(void *)(v7 + 8);
        char v9 = *(unsigned char *)(v7 + 24);
        uint64_t v23 = *(void *)(v7 + 32);
        uint64_t v24 = *(void *)(v7 + 16);
        char v25 = *(unsigned char *)(v7 + 40);
        if (v8) {
          uint64_t v10 = *(void *)v7;
        }
        else {
          uint64_t v10 = 0x296C61626F6C6728;
        }
        if (v8) {
          unint64_t v11 = *(void *)(v7 + 8);
        }
        else {
          unint64_t v11 = 0xE800000000000000;
        }
        unint64_t v12 = *(void *)(v29 + 16);
        unint64_t v13 = *(void *)(v29 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v12 >= v13 >> 1) {
          sub_19EFF6580(v13 > 1, v12 + 1, 1);
        }
        *(void *)(v29 + 16) = v12 + 1;
        unint64_t v14 = v29 + (v12 << 6);
        *(void *)(v14 + 32) = v27;
        *(void *)(v14 + 40) = v26;
        *(void *)(v14 + 48) = v10;
        *(void *)(v14 + 56) = v11;
        *(void *)(v14 + 64) = v24;
        *(unsigned char *)(v14 + 72) = v9;
        *(void *)(v14 + 80) = v23;
        v7 += 64;
        *(unsigned char *)(v14 + 88) = v25;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      uint64_t v2 = a2;
    }
    uint64_t v28 = sub_19F02FD7C(v6);
    int v3 = v22;
  }
  else
  {
    uint64_t v28 = 0;
  }
  if (v3) {
    uint64_t v15 = 0x20676E697373696DLL;
  }
  else {
    uint64_t v15 = 0x6570797420646162;
  }
  if (v3) {
    unint64_t v16 = 0xED000065756C6176;
  }
  else {
    unint64_t v16 = 0xE800000000000000;
  }
  uint64_t v17 = JSIncident.problemSummary.getter();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v2 = v15;
  *(void *)(v2 + 8) = v16;
  *(void *)(v2 + 16) = v17;
  *(void *)(v2 + 24) = v19;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0xD000000000000012;
  *(void *)(v2 + 72) = 0x800000019F26E3D0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_WORD *)(v2 + 112) = 514;
  *(void *)(v2 + 120) = v28;
  return result;
}

uint64_t destroy for DelegatingStateStoreHandle()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for DelegatingStateStoreHandle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DelegatingStateStoreHandle(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for DelegatingStateStoreHandle(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DelegatingStateStoreHandle()
{
  return &type metadata for DelegatingStateStoreHandle;
}

uint64_t sub_19F030858()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19F0308F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_19F0309FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_19F030A70(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_bridgeObjectRetain();
  v5(v7, v8, v4);
  return a1;
}

void *sub_19F030B00(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_19F030B90(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_19F030C00(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_19F030C88(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_19F030E28(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x19F031084);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          char v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for StateStoreHandle()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0310C4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v6 = (char *)a4 + *(int *)(type metadata accessor for StateStoreHandle() + 36);
  unsigned int v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v7(v6, a2, a3);
}

uint64_t sub_19F031150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, void))(*(void *)(a1 + 24) + 32))(&v5, a2, a3, *(void *)(a1 + 16));
}

uint64_t sub_19F0311A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](a1);
  BOOL v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v8 + 16))(v11, v3 + *(int *)(v12 + 36), v7, v9);
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  StateStore.performTransaction<A>(_:)((uint64_t)sub_19EED8BF8, (uint64_t)v14, v7, MEMORY[0x1E4FBC848] + 8, *(void *)(a3 + 24));
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_19F0312E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  return (*(uint64_t (**)(uint64_t *, uint64_t, void))(*(void *)(a2 + 24) + 40))(&v4, a1, *(void *)(a2 + 16));
}

uint64_t sub_19F03133C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F031150(a3, a1, a2);
}

uint64_t sub_19F031350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F0311A4(a1, a2, a3);
}

uint64_t sub_19F03136C@<X0>(void (*a1)(void *__return_ptr, double)@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_19F1DCAAC();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v37 - v11;
  a1(v46, v10);
  sub_19EEC4154((uint64_t)v46, (uint64_t)&v43);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFD8);
  int v13 = swift_dynamicCast();
  unsigned int v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  if (v13)
  {
    uint64_t v15 = *(void *)(a2 - 8);
    v14(v12, 0, 1, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v12, a2);
  }
  else
  {
    v14(v12, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    int v17 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_19F24EB80;
    id v19 = v17;
    uint64_t v42 = sub_19EEC3F3C(0, 16, 0, MEMORY[0x1E4FBC860]);
    v20._uint64_t countAndFlagsBits = 0x206574617453;
    v20._object = (void *)0xE600000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    __swift_project_boxed_opaque_existential_1(v46, v46[3]);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v40[0] = DynamicType;
    sub_19EEBCD00((uint64_t)v40, (uint64_t)v39);
    long long v38 = 0u;
    long long v37 = 0u;
    sub_19EEC3E70((uint64_t)v39, (uint64_t)&v37);
    char v45 = 0;
    long long v43 = v37;
    long long v44 = v38;
    int v22 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v22 = sub_19EEC3F3C(0, v22[2] + 1, 1, v22);
    }
    unint64_t v24 = v22[2];
    unint64_t v23 = v22[3];
    if (v24 >= v23 >> 1) {
      int v22 = sub_19EEC3F3C((void *)(v23 > 1), v24 + 1, 1, v22);
    }
    v22[2] = v24 + 1;
    char v25 = &v22[5 * v24];
    long long v26 = v43;
    long long v27 = v44;
    *((unsigned char *)v25 + 64) = v45;
    *((_OWORD *)v25 + 2) = v26;
    *((_OWORD *)v25 + 3) = v27;
    uint64_t v42 = v22;
    sub_19EEBCB4C((uint64_t)v40);
    v28._uint64_t countAndFlagsBits = 0x6F6E2073656F6420;
    v28._object = (void *)0xE900000000000074;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    *(void *)(v18 + 32) = v42;
    uint64_t v42 = sub_19EEC3F3C(0, 20, 0, MEMORY[0x1E4FBC860]);
    v29._object = (void *)0x800000019F26E3F0;
    v29._uint64_t countAndFlagsBits = 0xD000000000000013;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v40[0] = a2;
    sub_19EEBCD00((uint64_t)v40, (uint64_t)v39);
    long long v38 = 0u;
    long long v37 = 0u;
    sub_19EEC3E70((uint64_t)v39, (uint64_t)&v37);
    char v45 = 0;
    long long v43 = v37;
    long long v44 = v38;
    uint64_t v30 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v30 = sub_19EEC3F3C(0, v30[2] + 1, 1, v30);
    }
    unint64_t v32 = v30[2];
    unint64_t v31 = v30[3];
    if (v32 >= v31 >> 1) {
      uint64_t v30 = sub_19EEC3F3C((void *)(v31 > 1), v32 + 1, 1, v30);
    }
    v30[2] = v32 + 1;
    long long v33 = &v30[5 * v32];
    long long v34 = v43;
    long long v35 = v44;
    *((unsigned char *)v33 + 64) = v45;
    *((_OWORD *)v33 + 2) = v34;
    *((_OWORD *)v33 + 3) = v35;
    uint64_t v42 = v30;
    sub_19EEBCB4C((uint64_t)v40);
    v36._uint64_t countAndFlagsBits = 0;
    v36._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    *(void *)(v18 + 40) = v42;
    *(void *)&long long v43 = v19;
    LOBYTE(v37) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v37);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
  }
}

uint64_t sub_19F031858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (**v3)(void *__return_ptr, double);

  return sub_19F03136C(*v3, a1, a2, a3);
}

uint64_t sub_19F031868()
{
  uint64_t v0 = sub_19F1DB5AC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DB59C();
  uint64_t v4 = sub_19F1DB58C();
  uint64_t v6 = v5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1E9498AA0 = v4;
  *(void *)algn_1E9498AA8 = v6;
  return result;
}

uint64_t sub_19F031948()
{
  uint64_t v1 = v0;
  v41[4] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = &unk_1E9498000;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9JetEngine33JetPackResourceBundleDiskLocation_automaticallyCleanUp) == 1)
  {
    if (qword_1EB392AA8 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_1EB392860;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
    id v5 = v3;
    long long v34 = sub_19EEC3F3C(0, 23, 0, MEMORY[0x1E4FBC860]);
    v6._object = (void *)0x800000019F26E470;
    v6._uint64_t countAndFlagsBits = 0xD000000000000016;
    LogMessage.StringInterpolation.appendLiteral(_:)(v6);
    uint64_t v7 = sub_19F1DB2DC();
    v41[3] = MEMORY[0x1E4FBB1A0];
    v41[0] = v7;
    v41[1] = v8;
    sub_19EEBCD00((uint64_t)v41, (uint64_t)v37);
    long long v35 = 0u;
    long long v36 = 0u;
    sub_19EEC3E70((uint64_t)v37, (uint64_t)&v35);
    char v40 = 0;
    long long v38 = v35;
    long long v39 = v36;
    uint64_t v9 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_19EEC3F3C(0, v34[2] + 1, 1, v34);
    }
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      uint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
    }
    void v9[2] = v11 + 1;
    uint64_t v12 = &v9[5 * v11];
    long long v13 = v38;
    long long v14 = v39;
    *((unsigned char *)v12 + 64) = v40;
    *((_OWORD *)v12 + 2) = v13;
    *((_OWORD *)v12 + 3) = v14;
    sub_19EEBCB4C((uint64_t)v41);
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    *(void *)(v4 + 32) = v9;
    *(void *)&long long v38 = v5;
    LOBYTE(v35) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v35);

    swift_bridgeObjectRelease();
    uint64_t v16 = self;
    id v17 = objc_msgSend(v16, sel_defaultManager);
    sub_19F1DB2DC();
    uint64_t v18 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    unsigned int v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

    if (v19)
    {
      id v20 = objc_msgSend(v16, sel_defaultManager);
      sub_19F1DB2DC();
      uint64_t v21 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      *(void *)&long long v38 = 0;
      unsigned int v22 = objc_msgSend(v20, sel_removeItemAtPath_error_, v21, &v38);

      uint64_t v2 = &unk_1E9498000;
      if (v22)
      {
        id v23 = (id)v38;
      }
      else
      {
        id v29 = (id)v38;
        uint64_t v30 = (void *)sub_19F1DB19C();

        swift_willThrow();
      }
    }
    else
    {
      unint64_t v24 = (void *)qword_1EB392860;
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_19F24EAD0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_19F24EAD0;
      *((void *)&v36 + 1) = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v35 = 0xD000000000000025;
      *((void *)&v35 + 1) = 0x800000019F26E490;
      long long v38 = 0u;
      long long v39 = 0u;
      id v27 = v24;
      sub_19EEC3E70((uint64_t)&v35, (uint64_t)&v38);
      *(unsigned char *)(v26 + 64) = 0;
      long long v28 = v39;
      *(_OWORD *)(v26 + 32) = v38;
      *(_OWORD *)(v26 + 48) = v28;
      *(void *)(v25 + 32) = v26;
      *(void *)&long long v38 = v27;
      LOBYTE(v35) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v25, (JetEngine::LogMessageLevel)&v35);

      swift_bridgeObjectRelease();
      uint64_t v2 = (void *)&unk_1E9498000;
    }
  }
  uint64_t v31 = v1 + v2[342];
  uint64_t v32 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  return v1;
}

uint64_t sub_19F031DA0()
{
  sub_19F031948();
  return swift_deallocClassInstance();
}

uint64_t sub_19F031DF8()
{
  return type metadata accessor for JetPackResourceBundleDiskLocation();
}

uint64_t sub_19F031E00()
{
  uint64_t result = sub_19F1DB34C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t NetResponse.netResponse.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19F031EA4(v1, a1);
}

uint64_t sub_19F031EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F031F08@<X0>(uint64_t a1@<X8>)
{
  return sub_19F031EA4(v1, a1);
}

unint64_t sub_19F031F14(uint64_t a1)
{
  return sub_19EE77A5C(a1, (uint64_t (*)())sub_19EEBD400);
}

uint64_t dispatch thunk of CustomNetResponseConvertible.netResponse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_19F031F40()
{
  uint64_t result = sub_19EE22910((uint64_t)&unk_1EF138B28);
  qword_1EB394F50 = result;
  *(void *)algn_1EB394F58 = v1;
  return result;
}

uint64_t sub_19F031F6C(char *a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(v1 + 56))
  {
    sub_19F0324E0();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    char v4 = *a1;
    char v5 = a1[1];
    char v6 = a1[2];
    char v31 = a1[4];
    char v32 = a1[3];
    __int16 v30 = *((_WORD *)a1 + 12);
    long long v33 = *((_OWORD *)a1 + 2);
    long long v34 = *(_OWORD *)(a1 + 8);
    uint64_t v29 = *((void *)a1 + 6);
    uint64_t v7 = (void *)(v1 + 16);
    uint64_t v8 = *(void *)(v1 + 40);
    uint64_t v9 = *(void *)(v1 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v8);
    if (qword_1E946FCC0 != -1) {
      swift_once();
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 8))(qword_1EB394F50, *(void *)algn_1EB394F58, v8, v9);
    if (!v2)
    {
      char v27 = v6;
      char v28 = v5;
      char __src = 0;
      uint64_t v10 = *(void *)(v1 + 48);
      __swift_project_boxed_opaque_existential_1(v7, *(void *)(v1 + 40));
      uint64_t v11 = sub_19EE684CC(&__src, 1);
      unint64_t v13 = v12;
      (*(void (**)(void))(v10 + 8))();
      sub_19EEA072C(v11, v13);
      LOBYTE(v37) = v4;
      BYTE1(v37) = v28;
      BYTE2(v37) = v27;
      HIBYTE(v37) = v32;
      char v38 = v31;
      long long v39 = v34;
      __int16 v40 = v30;
      long long v41 = v33;
      uint64_t v42 = v29;
      uint64_t v14 = sub_19F0330F0((unsigned __int8 *)&v37);
      unint64_t v16 = v15;
      LODWORD(v17) = 0;
      switch(v15 >> 62)
      {
        case 1uLL:
          LODWORD(v17) = HIDWORD(v14) - v14;
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_16:
            __break(1u);
          }
          unint64_t v17 = (int)v17;
LABEL_11:
          if ((v17 & 0x8000000000000000) != 0 || HIDWORD(v17))
          {
            sub_19F1DCFBC();
            __break(1u);
            JUMPOUT(0x19F032350);
          }
LABEL_13:
          uint64_t v35 = v14;
          int v37 = v17;
          uint64_t v21 = *(void *)(v1 + 48);
          __swift_project_boxed_opaque_existential_1(v7, *(void *)(v1 + 40));
          uint64_t v22 = sub_19EE684CC(&v37, 4);
          unint64_t v24 = v23;
          (*(void (**)(void))(v21 + 8))();
          sub_19EEA072C(v22, v24);
          uint64_t v25 = *(void *)(v1 + 40);
          uint64_t v26 = *(void *)(v1 + 48);
          __swift_project_boxed_opaque_existential_1(v7, v25);
          (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v26 + 8))(v35, v16, v25, v26);
          uint64_t result = sub_19EEA072C(v35, v16);
          *(unsigned char *)(v1 + 56) = 1;
          break;
        case 2uLL:
          uint64_t v19 = *(void *)(v14 + 16);
          uint64_t v18 = *(void *)(v14 + 24);
          BOOL v20 = __OFSUB__(v18, v19);
          unint64_t v17 = v18 - v19;
          if (!v20) {
            goto LABEL_11;
          }
          goto LABEL_16;
        case 3uLL:
          goto LABEL_13;
        default:
          LODWORD(v17) = BYTE6(v15);
          goto LABEL_13;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for JetPackageFormatWriter()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for JetPackageFormatWriter.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F032450);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageFormatWriter.State()
{
  return &type metadata for JetPackageFormatWriter.State;
}

unint64_t sub_19F03248C()
{
  unint64_t result = qword_1E9472C38;
  if (!qword_1E9472C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472C38);
  }
  return result;
}

unint64_t sub_19F0324E0()
{
  unint64_t result = qword_1E9472C40;
  if (!qword_1E9472C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472C40);
  }
  return result;
}

uint64_t sub_19F032534(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_19F1DB04C();
  if (!result || (uint64_t result = sub_19F1DB07C(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_19F1DB06C();
      return sub_19F1DB3CC();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19F0325C8(uint64_t a1, unint64_t a2)
{
  void v10[5] = *MEMORY[0x1E4F143B8];
  void v10[3] = MEMORY[0x1E4F277C0];
  v10[4] = MEMORY[0x1E4F277B0];
  v10[0] = a1;
  v10[1] = a2;
  unsigned int v4 = __swift_project_boxed_opaque_existential_1(v10, MEMORY[0x1E4F277C0]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_19EEA0784(a1, a2);
      sub_19EEA0784(v5, v6);
      sub_19F032534((int)v5, v5 >> 32);
      sub_19EEA072C(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_19EEA0784(a1, a2);
      swift_retain();
      swift_retain();
      sub_19F032534(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_19EEA0784(a1, a2);
      sub_19F1DB3CC();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t sub_19F0327EC(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_19F1DB08C();
  swift_allocObject();
  uint64_t result = sub_19F1DB03C();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_19F1DB3BC();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_19F032868(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_19F1DB08C();
  swift_allocObject();
  uint64_t result = sub_19F1DB03C();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_19F0328EC(uint64_t a1, uint64_t a2)
{
  __src[2] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_19F1DBDEC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&__src[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    LOWORD(__src[0]) = 0;
    return sub_19EE22A80(__src, (unsigned char *)__src + 2);
  }
  sub_19F1DBDCC();
  uint64_t v7 = sub_19F1DBD8C();
  unint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v9 >> 60 == 15)
  {
    sub_19F0E88E4(0xD000000000000027, 0x800000019F26E5C0);
    sub_19F0324E0();
    swift_allocError();
    return swift_willThrow();
  }
  switch(v9 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v7), v7)) {
        goto LABEL_23;
      }
      if (HIDWORD(v7) - (int)v7 <= 65534) {
        goto LABEL_16;
      }
      goto LABEL_21;
    case 2uLL:
      uint64_t v13 = *(void *)(v7 + 16);
      uint64_t v12 = *(void *)(v7 + 24);
      BOOL v14 = __OFSUB__(v12, v13);
      uint64_t v15 = v12 - v13;
      if (v14)
      {
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      if (v15 < 0xFFFF)
      {
        if (v9 >> 62 == 2)
        {
          uint64_t v17 = *(void *)(v7 + 16);
          uint64_t v16 = *(void *)(v7 + 24);
          BOOL v14 = __OFSUB__(v16, v17);
          unint64_t v11 = v16 - v17;
          if (v14)
          {
            __break(1u);
LABEL_13:
            LOWORD(v11) = 0;
            goto LABEL_20;
          }
LABEL_18:
          if ((v11 & 0x8000000000000000) != 0 || v11 >= 0x10000)
          {
            sub_19F1DCFBC();
            __break(1u);
            JUMPOUT(0x19F032C78);
          }
LABEL_20:
          HIWORD(v21) = v11;
          uint64_t v18 = sub_19EE684CC((unsigned char *)&v21 + 6, 2);
          unint64_t v20 = v19;
          __src[0] = v18;
          __src[1] = v19;
          sub_19EEA0784(v18, v19);
          sub_19EEE0560(v7, v9);
          sub_19F0325C8(v7, v9);
          sub_19EED5BFC(v7, v9);
          sub_19EED5BFC(v7, v9);
          sub_19EEA072C(v18, v20);
          return __src[0];
        }
LABEL_16:
        LODWORD(v11) = HIDWORD(v7) - v7;
        if (!__OFSUB__(HIDWORD(v7), v7))
        {
          unint64_t v11 = (int)v11;
          goto LABEL_18;
        }
LABEL_24:
        __break(1u);
      }
LABEL_21:
      sub_19F0E88E4(0xD000000000000024, 0x800000019F26E5F0);
      sub_19F0324E0();
      swift_allocError();
      swift_willThrow();
      return sub_19EED5BFC(v7, v9);
    case 3uLL:
      goto LABEL_13;
    default:
      LOWORD(v11) = BYTE6(v9);
      goto LABEL_20;
  }
}

uint64_t sub_19F032C88(__int16 a1)
{
  __src[2] = *MEMORY[0x1E4F143B8];
  LOBYTE(__src[0]) = (a1 & 0x100) == 0;
  uint64_t v3 = sub_19EE22A80(__src, (unsigned char *)__src + 1);
  if ((a1 & 0x100) != 0) {
    goto LABEL_4;
  }
  char v4 = a1 + 1;
  if (((a1 + 1) & 0x100) != 0)
  {
    __break(1u);
LABEL_4:
    char v4 = 0;
  }
  uint64_t v5 = v2 & 0xFFFFFFFFFFFFFFLL;
  LOBYTE(__src[0]) = v4;
  uint64_t v6 = sub_19EE22A80(__src, (unsigned char *)__src + 1);
  __src[0] = v3;
  __src[1] = v5;
  sub_19F0325C8(v6, v7 & 0xFFFFFFFFFFFFFFLL);
  return __src[0];
}

uint64_t sub_19F032D48(uint64_t a1, unint64_t a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (a2 >> 60 == 15) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = a1;
  }
  if (a2 >> 60 == 15) {
    unint64_t v3 = 0xC000000000000000;
  }
  else {
    unint64_t v3 = a2;
  }
  switch(v3 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v2), v2)) {
        goto LABEL_25;
      }
      if (HIDWORD(v2) - (int)v2 <= 65534) {
        goto LABEL_18;
      }
      goto LABEL_23;
    case 2uLL:
      uint64_t v6 = *(void *)(v2 + 16);
      uint64_t v5 = *(void *)(v2 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v8 = v5 - v6;
      if (v7)
      {
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      if (v8 < 0xFFFF)
      {
        if (v3 >> 62 == 2)
        {
          uint64_t v10 = *(void *)(v2 + 16);
          uint64_t v9 = *(void *)(v2 + 24);
          BOOL v7 = __OFSUB__(v9, v10);
          unint64_t v4 = v9 - v10;
          if (v7)
          {
            __break(1u);
LABEL_15:
            LOWORD(v4) = 0;
            goto LABEL_22;
          }
LABEL_20:
          if ((v4 & 0x8000000000000000) != 0 || v4 >= 0x10000)
          {
            sub_19F1DCFBC();
            __break(1u);
            JUMPOUT(0x19F032FB0);
          }
LABEL_22:
          __int16 __src = v4;
          sub_19EEE0560(a1, a2);
          uint64_t v11 = sub_19EE684CC(&__src, 2);
          unint64_t v13 = v12;
          uint64_t v16 = v11;
          unint64_t v17 = v12;
          sub_19EEA0784(v11, v12);
          sub_19EEA0784(v2, v3);
          sub_19F0325C8(v2, v3);
          sub_19EEA072C(v2, v3);
          sub_19EEA072C(v2, v3);
          sub_19EEA072C(v11, v13);
          return v16;
        }
LABEL_18:
        LODWORD(v4) = HIDWORD(v2) - v2;
        if (!__OFSUB__(HIDWORD(v2), v2))
        {
          unint64_t v4 = (int)v4;
          goto LABEL_20;
        }
LABEL_26:
        __break(1u);
      }
LABEL_23:
      sub_19EEE0560(a1, a2);
      sub_19F0E88E4(0xD000000000000022, 0x800000019F26E590);
      sub_19F0324E0();
      swift_allocError();
      swift_willThrow();
      return sub_19EEA072C(v2, v3);
    case 3uLL:
      goto LABEL_15;
    default:
      LOWORD(v4) = BYTE6(v3);
      goto LABEL_22;
  }
}

uint64_t sub_19F032FC0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  __int16 v5 = *a1;
  if (v4 >> 60 == 15)
  {
    __int16 v5 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = a1[1];
  }
  if (v4 >> 60 == 15) {
    unint64_t v7 = 0xF000000000000000;
  }
  else {
    unint64_t v7 = a1[2];
  }
  uint64_t v8 = sub_19F032C88(v5 | (unsigned __int16)((v4 >> 60 == 15) << 8));
  unint64_t v10 = v9;
  sub_19EF63FE0(v2, v3, v4);
  uint64_t v11 = sub_19F032D48(v6, v7);
  if (v1)
  {
    sub_19F033400(v2, v3, v4);
    return sub_19EEA072C(v8, v10);
  }
  else
  {
    uint64_t v14 = v11;
    unint64_t v15 = v12;
    sub_19F033400(v2, v3, v4);
    sub_19EEA0784(v8, v10);
    sub_19EEA0784(v14, v15);
    sub_19F0325C8(v14, v15);
    sub_19EEA072C(v14, v15);
    sub_19EEA072C(v14, v15);
    sub_19EEA072C(v8, v10);
    return v8;
  }
}

uint64_t sub_19F0330F0(unsigned __int8 *a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  __int16 v1 = *a1;
  __int16 v2 = a1[1];
  __int16 v3 = a1[2];
  __int16 v4 = a1[3];
  int v5 = a1[4];
  uint64_t v6 = *((void *)a1 + 1);
  uint64_t v7 = *((void *)a1 + 2);
  __int16 v33 = *((_WORD *)a1 + 12);
  unint64_t v35 = *((void *)a1 + 5);
  uint64_t v36 = *((void *)a1 + 4);
  uint64_t v34 = *((void *)a1 + 6);
  type metadata accessor for DataOutputStream();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F256D40;
  uint64_t v8 = sub_19F032C88(v1 | (unsigned __int16)(v2 << 8));
  unint64_t v10 = v9;
  swift_beginAccess();
  sub_19F1DB42C();
  swift_endAccess();
  sub_19EEA072C(v8, v10);
  uint64_t v11 = sub_19F032C88(v3 | (unsigned __int16)(v4 << 8));
  unint64_t v13 = v12;
  swift_beginAccess();
  sub_19F1DB42C();
  swift_endAccess();
  sub_19EEA072C(v11, v13);
  LOBYTE(__src) = 1;
  uint64_t v14 = sub_19EE22A80(&__src, (unsigned char *)&__src + 1);
  if (((v5 + 1) >> 8)) {
    __break(1u);
  }
  uint64_t v16 = v14;
  uint64_t v17 = v15 & 0xFFFFFFFFFFFFFFLL;
  LOBYTE(__src) = v5 + 1;
  uint64_t v18 = sub_19EE22A80(&__src, (unsigned char *)&__src + 1);
  uint64_t __src = v16;
  unint64_t v41 = v17;
  sub_19F0325C8(v18, v19 & 0xFFFFFFFFFFFFFFLL);
  uint64_t v20 = __src;
  unint64_t v21 = v41;
  swift_beginAccess();
  sub_19F1DB42C();
  swift_endAccess();
  sub_19EEA072C(v20, v21);
  uint64_t v22 = sub_19F0328EC(v6, v7);
  if (v37) {
    return swift_release();
  }
  uint64_t v24 = v22;
  unint64_t v25 = v23;
  swift_beginAccess();
  sub_19F1DB42C();
  swift_endAccess();
  sub_19EEA072C(v24, v25);
  __int16 v39 = v33;
  uint64_t v26 = sub_19EE684CC(&v39, 2);
  unint64_t v28 = v27;
  swift_beginAccess();
  sub_19F1DB42C();
  swift_endAccess();
  sub_19EEA072C(v26, v28);
  uint64_t __src = v36;
  unint64_t v41 = v35;
  uint64_t v42 = v34;
  uint64_t v30 = sub_19F032FC0(&__src);
  unint64_t v32 = v31;
  swift_beginAccess();
  sub_19F1DB42C();
  swift_endAccess();
  sub_19EEA072C(v30, v32);
  return *(void *)(inited + 16);
}

uint64_t sub_19F033400(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 60 != 15) {
    return sub_19EEA072C(a2, a3);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JetPackageFormatWriterError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F0334B8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageFormatWriterError()
{
  return &type metadata for JetPackageFormatWriterError;
}

unint64_t sub_19F0334F4()
{
  unint64_t result = qword_1E9472C48;
  if (!qword_1E9472C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472C48);
  }
  return result;
}

uint64_t AllowedFieldsTreatmentFilter.Definition.eventType.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t AllowedFieldsTreatmentFilter.Definition.fieldNames.getter()
{
  return swift_bridgeObjectRetain();
}

JetEngine::AllowedFieldsTreatmentFilter::Definition __swiftcall AllowedFieldsTreatmentFilter.Definition.init(eventType:fieldNames:)(JetEngine::MetricsEventType eventType, Swift::OpaquePointer fieldNames)
{
  uint64_t v3 = *(void *)(eventType.rawValue._countAndFlagsBits + 8);
  *uint64_t v2 = *(void *)eventType.rawValue._countAndFlagsBits;
  v2[1] = v3;
  void v2[2] = eventType.rawValue._object;
  result.eventType = eventType;
  result.fieldNames = fieldNames;
  return result;
}

JetEngine::AllowedFieldsTreatmentFilter __swiftcall AllowedFieldsTreatmentFilter.init(_:)(JetEngine::AllowedFieldsTreatmentFilter result)
{
  *(void *)uint64_t v1 = *(void *)result.allowed.eventType.rawValue._countAndFlagsBits;
  *(_OWORD *)(v1 + 8) = *(_OWORD *)(result.allowed.eventType.rawValue._countAndFlagsBits + 8);
  return result;
}

ValueMetadata *type metadata accessor for AllowedFieldsTreatmentFilter()
{
  return &type metadata for AllowedFieldsTreatmentFilter;
}

void *assignWithCopy for SentryRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SentryRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AllowedFieldsTreatmentFilter.Definition()
{
  return &type metadata for AllowedFieldsTreatmentFilter.Definition;
}

uint64_t sub_19F033658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[24] = a4;
  uint64_t v6 = sub_19F1DAD2C();
  v4[25] = v6;
  v4[26] = *(void *)(v6 - 8);
  v4[27] = swift_task_alloc();
  uint64_t v7 = sub_19F1DB20C();
  v4[28] = v7;
  v4[29] = *(void *)(v7 - 8);
  v4[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  v4[31] = swift_task_alloc();
  uint64_t v8 = sub_19F1DB34C();
  v4[32] = v8;
  v4[33] = *(void *)(v8 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  uint64_t v9 = sub_19F1DCF0C();
  v4[36] = v9;
  v4[37] = *(void *)(v9 - 8);
  v4[38] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F033870, a4, 0);
}

uint64_t sub_19F033870()
{
  sub_19F1DCEFC();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1E9472C88 + dword_1E9472C88);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_19F03393C;
  return v3(500000000000000, 0, 0, 0, 1);
}

uint64_t sub_19F03393C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[38];
  uint64_t v4 = v2[37];
  uint64_t v5 = v2[36];
  uint64_t v6 = v2[24];
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    uint64_t v7 = sub_19F03406C;
  }
  else {
    uint64_t v7 = sub_19F033AB8;
  }
  return MEMORY[0x1F4188298](v7, v6, 0);
}

uint64_t sub_19F033AB8()
{
  uint64_t v41 = v0;
  unint64_t v35 = *(void **)(v0 + 320);
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v6 = *(void *)(v0 + 232);
  uint64_t v33 = *(void *)(v0 + 224);
  uint64_t v34 = *(void *)(v0 + 192);
  uint64_t v7 = NSTemporaryDirectory();
  sub_19F1DBD7C();

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v3);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, *MEMORY[0x1E4F276C0], v33);
  sub_19F1DB30C();
  sub_19F1DB26C();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v1, v3);
  sub_19F1DADCC();
  swift_allocObject();
  sub_19F1DADBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472C90);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
  sub_19F1DAD1C();
  *(void *)(v0 + 176) = v9;
  sub_19F0350DC(&qword_1E9472C98, 255, MEMORY[0x1E4F26CD0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472CA0);
  sub_19F035004();
  sub_19F1DCC1C();
  sub_19F1DAD3C();
  swift_beginAccess();
  *(void *)(v0 + 184) = *(void *)(v34 + 128);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E40);
  sub_19F035060();
  unint64_t v10 = v35;
  uint64_t v11 = sub_19F1DADAC();
  uint64_t v13 = *(void *)(v0 + 280);
  if (v35)
  {
    uint64_t v14 = *(void *)(v0 + 256);
    swift_release();
    swift_bridgeObjectRelease();
    v8(v13, v14);
    uint64_t v17 = (long long *)(v0 + 16);
    if (qword_1EB393240 != -1) {
      swift_once();
    }
    *(void *)&long long v38 = 0xD000000000000013;
    *((void *)&v38 + 1) = 0x800000019F2697A0;
    id v36 = sub_19EE7DF10((uint64_t *)&v38, 0x6552746E65746E49, 0xEC00000079616C70);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_19F24EAD0;
    uint64_t v37 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
    v19._uint64_t countAndFlagsBits = 0xD000000000000015;
    v19._object = (void *)0x800000019F26E680;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    swift_getErrorValue();
    uint64_t v20 = *(void *)(v0 + 120);
    uint64_t v21 = *(void *)(v0 + 128);
    *(void *)(v0 + 80) = v21;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 56));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(boxed_opaque_existential_2Tm, v20, v21);
    sub_19EEBCD00(v0 + 56, v0 + 88);
    *uint64_t v17 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_19EEC3E70(v0 + 88, v0 + 16);
    *(unsigned char *)(v0 + 48) = 0;
    long long v23 = *(_OWORD *)(v0 + 32);
    long long v38 = *v17;
    long long v39 = v23;
    char v40 = *(unsigned char *)(v0 + 48);
    uint64_t v24 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_19EEC3F3C(0, v37[2] + 1, 1, v37);
    }
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    if (v26 >= v25 >> 1) {
      uint64_t v24 = sub_19EEC3F3C((void *)(v25 > 1), v26 + 1, 1, v24);
    }
    void v24[2] = v26 + 1;
    unint64_t v27 = &v24[5 * v26];
    long long v28 = v38;
    long long v29 = v39;
    *((unsigned char *)v27 + 64) = v40;
    *((_OWORD *)v27 + 2) = v28;
    *((_OWORD *)v27 + 3) = v29;
    uint64_t v37 = v24;
    sub_19EEBCB4C(v0 + 56);
    v30._uint64_t countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    *(void *)(v18 + 32) = v24;
    *(void *)&long long v38 = v36;
    LOBYTE(v37) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v37);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v11;
    unint64_t v16 = v12;
    swift_bridgeObjectRelease();
    sub_19F1DB41C();
    v8(*(void *)(v0 + 280), *(void *)(v0 + 256));
    sub_19EEA072C(v15, v16);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_19F03406C()
{
  uint64_t v23 = v0;
  uint64_t v1 = (long long *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 320);
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  *(void *)&long long v20 = 0xD000000000000013;
  *((void *)&v20 + 1) = 0x800000019F2697A0;
  id v18 = sub_19EE7DF10((uint64_t *)&v20, 0x6552746E65746E49, 0xEC00000079616C70);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
  Swift::String v19 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
  v4._uint64_t countAndFlagsBits = 0xD000000000000015;
  v4._object = (void *)0x800000019F26E680;
  LogMessage.StringInterpolation.appendLiteral(_:)(v4);
  swift_getErrorValue();
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 128);
  *(void *)(v0 + 80) = v6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 56));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v5, v6);
  sub_19EEBCD00(v0 + 56, v0 + 88);
  *uint64_t v1 = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19EEC3E70(v0 + 88, v0 + 16);
  *(unsigned char *)(v0 + 48) = 0;
  long long v8 = *(_OWORD *)(v0 + 32);
  long long v20 = *v1;
  long long v21 = v8;
  char v22 = *(unsigned char *)(v0 + 48);
  uint64_t v9 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
  }
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  void v9[2] = v11 + 1;
  unint64_t v12 = &v9[5 * v11];
  long long v13 = v20;
  long long v14 = v21;
  *((unsigned char *)v12 + 64) = v22;
  *((_OWORD *)v12 + 2) = v13;
  *((_OWORD *)v12 + 3) = v14;
  Swift::String v19 = v9;
  sub_19EEBCB4C(v0 + 56);
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  *(void *)(v3 + 32) = v9;
  *(void *)&long long v20 = v18;
  LOBYTE(v19) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v19);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_19F034368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  void v5[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  v5[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F034404, v4, 0);
}

uint64_t sub_19F034404()
{
  unint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[5];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19EEA0784(v3, v1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *(void *)(v2 + 128);
  *(void *)(v2 + 128) = 0x8000000000000000;
  sub_19EE5210C(v3, v1, v5, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + 128) = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if ((*(unsigned char *)(v2 + 112) & 1) == 0)
  {
    uint64_t v7 = v0[9];
    uint64_t v8 = v7;
    if (*(void *)(v7 + 120))
    {
      swift_retain();
      sub_19F1DC43C();
      swift_release();
      uint64_t v8 = v0[9];
    }
    uint64_t v9 = v0[10];
    uint64_t v10 = sub_19F1DC37C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    uint64_t v12 = sub_19F0350DC(&qword_1E9472C78, v11, (void (*)(uint64_t))type metadata accessor for StandardIntentReplayStorage);
    long long v13 = (void *)swift_allocObject();
    void v13[2] = v8;
    v13[3] = v12;
    v13[4] = v8;
    swift_retain_n();
    *(void *)(v7 + 120) = sub_19EEAED68(v9, (uint64_t)&unk_1E9472C80, (uint64_t)v13);
    swift_release();
  }
  swift_task_dealloc();
  long long v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_19F03462C(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return MEMORY[0x1F4188298](sub_19F034650, v2, 0);
}

uint64_t sub_19F034650()
{
  uint64_t v1 = v0[7];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 128);
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = v0[5];
    uint64_t v3 = v0[6];
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_19EEBD400(v4, v3);
    if (v6)
    {
      uint64_t v7 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v5);
      uint64_t v8 = *v7;
      unint64_t v9 = v7[1];
      sub_19EEA0784(*v7, v9);
    }
    else
    {
      uint64_t v8 = 0;
      unint64_t v9 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  swift_endAccess();
  uint64_t v10 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
  return v10(v8, v9);
}

uint64_t sub_19F03473C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for StandardIntentReplayStorage()
{
  return self;
}

uint64_t sub_19F0347A0()
{
  return v0;
}

uint64_t sub_19F0347AC()
{
  return *(unsigned __int8 *)(*(void *)v0 + 112);
}

uint64_t sub_19F0347B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_19EE17780;
  return sub_19F034368(a1, a2, a3, a4);
}

uint64_t sub_19F034878(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_19F034938;
  void v7[6] = a2;
  v7[7] = v6;
  v7[5] = a1;
  return MEMORY[0x1F4188298](sub_19F034650, v6, 0);
}

uint64_t sub_19F034938(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_19F034A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_19F1DCEEC();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x1F4188298](sub_19F034B40, 0, 0);
}

uint64_t sub_19F034B40()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_19F1DCF0C();
  uint64_t v5 = sub_19F0350DC(&qword_1E9472CB8, 255, MEMORY[0x1E4FBD1A8]);
  sub_19F1DD66C();
  sub_19F0350DC(&qword_1E9472CC0, 255, MEMORY[0x1E4FBD178]);
  sub_19F1DCF1C();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_19F034CE8;
  uint64_t v8 = v0[11];
  return MEMORY[0x1F4188178](v8, v0 + 2, v4, v5);
}

uint64_t sub_19F034CE8()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F034EA4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_19F034EA4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F034F10()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F034F50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_19EEB8A6C;
  return sub_19F033658(a1, v4, v5, v6);
}

unint64_t sub_19F035004()
{
  unint64_t result = qword_1E9472CA8;
  if (!qword_1E9472CA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9472CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472CA8);
  }
  return result;
}

unint64_t sub_19F035060()
{
  unint64_t result = qword_1E9472CB0;
  if (!qword_1E9472CB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB390E40);
    sub_19F02D364();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472CB0);
  }
  return result;
}

uint64_t sub_19F0350DC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_19F035124(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_19F035130(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v5 = *v2;
  uint64_t v4 = v3;
  ImpressionsMetricsFieldsProvider.addMetricsFields(into:using:)(a1, &v4);
}

void *sub_19F03516C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return MetricsFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(a1, a2, a3, a4);
}

uint64_t sub_19F035184(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  void v10[3] = a3;
  v10[4] = a4;
  v10[1] = sub_19EEB8A6C;
  uint64_t v10[2] = a1;
  uint64_t v11 = *a2;
  void v10[5] = v4;
  void v10[6] = v11;
  return MEMORY[0x1F4188298](sub_19EEB8CE4, 0, 0);
}

void sub_19F035254(unsigned char *a1@<X8>)
{
}

BOOL static MetricsFieldsProviderCategory.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MetricsFieldsProviderCategory.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t MetricsFieldsProviderCategory.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F0352F8()
{
  unint64_t result = qword_1E9472CD0;
  if (!qword_1E9472CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472CD0);
  }
  return result;
}

uint64_t dispatch thunk of MetricsFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of MetricsFieldsProvider.addExpensiveMetricsFields(into:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19EEB8A6C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of MetricsFieldsProvider.category.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MetricsFieldsProvider.addMetricsFields(into:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

unsigned char *storeEnumTagSinglePayload for MetricsFieldsProviderCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F035588);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_19F0355B0(uint64_t a1, void *a2)
{
  void v3[2] = a1;
  void v3[3] = v2;
  v3[4] = *a2;
  return MEMORY[0x1F4188298](sub_19F0355D8, 0, 0);
}

uint64_t sub_19F0355D8()
{
  uint64_t v5 = v0;
  uint64_t v1 = v0[2];
  uint64_t v4 = v0[4];
  AMSMetricsIdentifierFieldsProvider.addMetricsFields(into:using:)(v1, &v4);
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

id sub_19F035668(void *a1, void *a2)
{
  *(void *)&long long v11 = a1;
  id v3 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946FB70);
  if (swift_dynamicCast())
  {
    sub_19EEBB420(v12, (uint64_t)v14);
    uint64_t v4 = v15;
    uint64_t v5 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v6 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 16))(a2, v4, v5);
LABEL_5:
    id v9 = (id)v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    return v9;
  }
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  sub_19EEBD664((uint64_t)v12, qword_1E946C848);
  swift_getErrorValue();
  sub_19F1DD6AC();
  id v7 = a2;
  uint64_t v8 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_valueWithNewErrorFromMessage_inContext_, v8, v7);

  if (!v9)
  {
    __break(1u);
    goto LABEL_5;
  }
  return v9;
}

void sub_19F035B70(void *a1@<X0>, char *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_toString);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_19F1DBD7C();
    uint64_t v8 = v7;

    BOOL v9 = v6 == 0x363532616873 && v8 == 0xE600000000000000;
    if (v9 || (sub_19F1DD44C() & 1) != 0)
    {
      swift_bridgeObjectRelease();

      char v10 = 0;
      goto LABEL_11;
    }
    if (v6 == 0x323135616873 && v8 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();

      char v10 = 1;
      goto LABEL_11;
    }
    char v12 = sub_19F1DD44C();
    swift_bridgeObjectRelease();

    if (v12)
    {
      char v10 = 1;
      goto LABEL_11;
    }
  }
  else
  {
  }
  char v10 = 2;
LABEL_11:
  *a2 = v10;
}

uint64_t sub_19F035CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  void (*v12)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v14;
  void v15[6];

  char v12 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 16);
  swift_unknownObjectRetain();
  v12(v15, a4, a5);
  EventEmitter.addObserver(on:singleUse:_:)((uint64_t)v15, 0, a2, a3, a4, a5);
  swift_unknownObjectRelease();
  swift_release();
  unint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  uint64_t v14 = v15[5];
  *a6 = a1;
  a6[1] = v14;
  return result;
}

uint64_t sub_19F035D60(uint64_t a1)
{
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  id v4 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 32);
  swift_retain();
  v4(&v6, v3, v2);
  return swift_release();
}

uint64_t EventEmitter.asyncStream.getter(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_19F1DC3AC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v11[-v6];
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  uint64_t v14 = v2;
  swift_checkMetadataState();
  uint64_t v8 = *MEMORY[0x1E4FBD028];
  uint64_t v9 = sub_19F1DC3AC();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  return sub_19F1DC41C();
}

uint64_t sub_19F035F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_19F1DC3CC();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  long long v11 = (char *)&v17 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v17 - v10, a1, v7, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  uint64_t v14 = swift_unknownObjectRetain();
  sub_19F035CA4(v14, (uint64_t)sub_19F03636C, v13, a3, a4, &v18);
  long long v17 = v18;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  *(_OWORD *)(v15 + 32) = v17;
  return sub_19F1DC39C();
}

uint64_t sub_19F0360E0(uint64_t a1)
{
  return sub_19F035F18(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_19F0360EC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v5 = (char *)&v12 - v4;
  uint64_t v6 = sub_19F1DC38C();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v5, a1, AssociatedTypeWitness, v8);
  sub_19F1DC3CC();
  sub_19F1DC3BC();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t dispatch thunk of EventEmitter.addObserver<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of EventEmitter.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of EventEmitter.post(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_19F0362BC()
{
  swift_getAssociatedTypeWitness();
  uint64_t v1 = sub_19F1DC3CC();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19F03636C(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  sub_19F1DC3CC();
  return sub_19F0360EC(a1);
}

uint64_t sub_19F036414()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F036454()
{
  uint64_t v0 = type metadata accessor for StreamEventSubscription();
  return sub_19F035D60(v0);
}

uint64_t type metadata accessor for StreamEventSubscription()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0364B0()
{
  swift_unknownObjectRelease();
  return swift_release();
}

void *sub_19F0364EC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *sub_19F036524(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_19F036584(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t ProxyingStateCenter.Transaction.changeState<A>(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a5 + 8);
  void v10[3] = a4;
  v10[4] = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_2Tm, a2, a4);
  char v11 = 0;
  swift_bridgeObjectRetain();
  type metadata accessor for ProxyingStateCenter.Transaction.Change();
  sub_19F1DC27C();
  return sub_19F1DC23C();
}

uint64_t type metadata accessor for ProxyingStateCenter.Transaction.Change()
{
  return swift_getGenericMetadata();
}

uint64_t ProxyingStateCenter.Transaction.removeState(at:recursively:)()
{
  return sub_19F1DC23C();
}

Swift::Void __swiftcall ProxyingStateCenter.Transaction.removeAllState()()
{
  type metadata accessor for ProxyingStateCenter.Transaction.Change();
  sub_19F1DD30C();
  swift_allocObject();
  uint64_t v1 = sub_19F1DC18C();
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(unsigned char *)(v2 + 48) = 3;
  uint64_t v3 = sub_19EFF4808(v1);
  swift_bridgeObjectRelease();
  *uint64_t v0 = v3;
}

uint64_t sub_19F0367A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ProxyingStateCenter.Transaction.changeState<A>(at:to:)(a1, a2, a5, a3, a4);
}

uint64_t ProxyingStateCenter.__allocating_init<A>(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  AnyStateStore.init<A>(_:)(a1, &v4);
  *(void *)(v2 + 16) = v4;
  return v2;
}

uint64_t ProxyingStateCenter.init<A>(_:)(uint64_t a1)
{
  AnyStateStore.init<A>(_:)(a1, &v3);
  *(void *)(v1 + 16) = v3;
  return v1;
}

uint64_t ProxyingStateCenter.currentState<A>(at:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(v3 + 16);
  v9[0] = *a1;
  v9[1] = v6;
  uint64_t v7 = type metadata accessor for AnyStateStore();
  return AnyStateStore.currentState<A>(at:)(v9, v7, a2, a3);
}

uint64_t ProxyingStateCenter.beginTransaction()@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ProxyingStateCenter.Transaction.Change();
  uint64_t result = sub_19F1DC1CC();
  *a1 = result;
  return result;
}

uint64_t ProxyingStateCenter.commit(_:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  v6[5] = *(void *)(v1 + 16);
  _OWORD v6[2] = v2;
  uint64_t v3 = type metadata accessor for AnyStateStore();
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  StateStore.performTransaction<A>(_:)((uint64_t)sub_19F036D1C, (uint64_t)v6, v3, MEMORY[0x1E4FBC848] + 8, WitnessTable);
  return swift_release();
}

uint64_t sub_19F036A34(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  long long v4 = *(_OWORD *)(v3 + 96);
  v15[0] = *(_OWORD *)(v3 + 80);
  v15[1] = v4;
  uint64_t v5 = type metadata accessor for ProxyingStateCenter.Transaction.Change();
  if (MEMORY[0x19F3C6550](a1, v5))
  {
    uint64_t v6 = 0;
    uint64_t v7 = a1 + 32;
    do
    {
      char v9 = sub_19F1DC1FC();
      sub_19F1DC19C();
      if ((v9 & 1) == 0)
      {
        sub_19F1DCD5C();
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x19F036CA8);
      }
      uint64_t v10 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_13;
      }
      (*(void (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v15, v7, v5);
      switch(v16)
      {
        case 1:
        case 2:
          v14[0] = a2[2];
          uint64_t v17 = *(void *)&v15[0];
          type metadata accessor for AnyStateStore();
          AnyStateStore.removeState(at:recursively:)(&v17);
          goto LABEL_4;
        case 3:
          v14[0] = a2[2];
          type metadata accessor for AnyStateStore();
          AnyStateStore.removeAllState()();
          break;
        default:
          uint64_t v8 = *(void *)&v15[0];
          sub_19EEBB420((_OWORD *)((char *)v15 + 8), (uint64_t)v14);
          uint64_t v17 = a2[2];
          uint64_t v13 = v8;
          type metadata accessor for AnyStateStore();
          AnyStateStore.updateState(at:to:)(&v13);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
LABEL_4:
          swift_bridgeObjectRelease();
          break;
      }
      ++v6;
      v7 += 56;
    }
    while (v10 != MEMORY[0x19F3C6550](a1, v5));
  }
  return swift_bridgeObjectRelease();
}

uint64_t ProxyingStateCenter.deinit()
{
  swift_release();
  return v0;
}

uint64_t ProxyingStateCenter.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19F036D1C()
{
  return sub_19F036A34(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_19F036D38(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_19F036D40(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 40);
}

uint64_t sub_19F036D48()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F036D64()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ProxyingStateCenter()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for ProxyingStateCenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProxyingStateCenter);
}

uint64_t dispatch thunk of ProxyingStateCenter.__allocating_init<A>(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t type metadata accessor for ProxyingStateCenter.Transaction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_19F036E08(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 48);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)result + 3;
  }
  if (v2 == 2 || v2 == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!v2)
  {
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 8);
  }
  return result;
}

void ShelfBasedPageModel<>.presentation.getter(uint64_t a1)
{
  double v1 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  uint64_t v4 = 0;
  unint64_t v5 = 0xE000000000000000;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  uint64_t v4 = 60;
  unint64_t v5 = 0xE100000000000000;
  swift_getDynamicType();
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F1DCFCC();
  __break(1u);
}

uint64_t dispatch thunk of ShelfBasedPageModel.presentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ShelfBasedPageModel.shelves.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of NavigablePagePresentation.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t StateLens.init<A>(contentsOf:in:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *a1;
  a4[3] = type metadata accessor for StateStoreHandle();
  a4[4] = (uint64_t)&off_1EF13F2F0;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a4);
  return sub_19F0310C4(&v9, a2, a3, boxed_opaque_existential_2Tm);
}

void *StateLens.init(get:set:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  a5[3] = &type metadata for DelegatingStateStoreHandle;
  a5[4] = &off_1EF145F00;
  uint64_t result = (void *)swift_allocObject();
  *a5 = result;
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

uint64_t sub_19F037118()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t StateLens<A>.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v3[3];
  uint64_t v10 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v5, a3, v9, v10);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StateLens<A>.currentValue.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v6 + 8))(*(void *)(a1 + 16), a2, v5, v6);
}

uint64_t StateLens<A>.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1);
  char v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v4[3];
  uint64_t v13 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v8, a3, v12, v13);
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v15[0] = v15[1];
  return ReadOnlyLens.init(_:)((uint64_t)v15, *(void *)(*MEMORY[0x1E4FBC5F0] + v7 + 8), a4);
}

uint64_t StateLens.init(_:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EEBB420(a1, a2);
}

uint64_t type metadata accessor for StateLens()
{
  return __swift_instantiateGenericMetadata();
}

void CompoundTreatmentFilter.init()(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

uint64_t CompoundTreatmentFilter.addFilter(_:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return sub_19F03754C((uint64_t)v4, v1, v2, v3);
}

uint64_t CompoundTreatmentFilter.addingFilter(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = *v2;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  swift_bridgeObjectRetain();
  return sub_19F03754C((uint64_t)v6, a2, v4, v5);
}

uint64_t sub_19F03754C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = *(void (**)(char *))(v7 + 16);
  v13((char *)&v19 - v11);
  uint64_t v14 = (void *)*a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = (uint64_t)v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v14 = sub_19EE73658(0, v14[2] + 1, 1, v14);
    *a2 = (uint64_t)v14;
  }
  unint64_t v17 = v14[2];
  unint64_t v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t v14 = sub_19EE73658((void *)(v16 > 1), v17 + 1, 1, v14);
    *a2 = (uint64_t)v14;
  }
  ((void (*)(char *, char *, uint64_t))v13)(v10, v12, a3);
  sub_19EE6F6B0(v17, (uint64_t)v10, a2, a3, a4);
  *a2 = (uint64_t)v14;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, a3);
}

ValueMetadata *type metadata accessor for CompoundTreatmentFilter()
{
  return &type metadata for CompoundTreatmentFilter;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_19F037704()
{
}

unint64_t LowMemoryMetricsEventLinter.Error.errorDescription.getter()
{
  return 0xD00000000000003CLL;
}

uint64_t static LowMemoryMetricsEventLinter.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t LowMemoryMetricsEventLinter.Error.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t LowMemoryMetricsEventLinter.Error.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F037818()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_19F037834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  sub_19F0378A4(a1, a2, a3, a4, a5);
  return v10;
}

void *sub_19F0378A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8 = *a4;
  _OWORD v5[2] = a1;
  _OWORD v5[3] = a2;
  void v5[5] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946E690);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 56) = 0;
  sub_19EEC3ED8(a5, v9 + 16, &qword_1E946E678);
  sub_19EEBD664(a5, &qword_1E946E678);
  v5[4] = v9;
  v5[6] = a3;
  return v5;
}

uint64_t LowMemoryMetricsEventLinter.__allocating_init(defaultTopic:configuration:rules:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = 0;
  sub_19EEC4154(a3, (uint64_t)v10);
  uint64_t v8 = swift_allocObject();
  sub_19F0378A4(a1, a2, a4, &v11, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v8;
}

uint64_t LowMemoryMetricsEventLinter.__allocating_init(defaultTopic:bag:rules:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = *a3;
  uint64_t v11 = 0;
  uint64_t v12 = v7;
  memset(v10, 0, sizeof(v10));
  uint64_t v8 = swift_allocObject();
  sub_19F0378A4(a1, a2, a4, &v12, (uint64_t)v10);
  return v8;
}

uint64_t *sub_19F037A38()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FC80);
  uint64_t inited = swift_initStackObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = 0;
  *(unsigned char *)(inited + 32) = 1;
  if (qword_1E946DB80 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_1E9498950;
  void v10[3] = sub_19EEA5F34();
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = v4;
  id v5 = v4;
  swift_retain();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DDD0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = Promise.flatMap<A>(on:_:)((uint64_t)v10, (uint64_t)sub_19F0394F4, v1, v6, WitnessTable);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v8;
}

uint64_t *sub_19F037B78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(a2 + 32);
  swift_retain();
  os_unfair_lock_lock(v3 + 14);
  sub_19F037E0C((uint64_t)&v3[4], (uint64_t)&v13);
  os_unfair_lock_unlock(v3 + 14);
  swift_release();
  if (v14)
  {
    sub_19EEBB420(&v13, (uint64_t)&v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DDD0);
    sub_19EEBB420(&v15, (uint64_t)&v13);
    return Promise.__allocating_init(value:)((uint64_t)&v13);
  }
  sub_19EEBD664((uint64_t)&v13, &qword_1E946E678);
  if (!*(void *)(a2 + 40))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DDD0);
    type metadata accessor for LowMemoryMetricsEventLinter.Error();
    swift_getWitnessTable();
    uint64_t v12 = swift_allocError();
    return Promise.__allocating_init(error:)(v12);
  }
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)sub_19F1DBD4C();
  id v7 = objc_msgSend((id)swift_unknownObjectRetain(), sel_dictionaryForKey_, v6);
  swift_unknownObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DD60);
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v7;
  inited[3] = sub_19F181E44;
  inited[4] = 0;
  sub_19F151BA8();

  if (qword_1E946DB80 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1E9498950;
  unint64_t v16 = sub_19EEA5F34();
  unint64_t v17 = &protocol witness table for OS_dispatch_queue;
  *(void *)&long long v15 = v9;
  id v10 = v9;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946DD70);
  id v5 = Promise.map<A>(on:_:)((uint64_t)&v15, (uint64_t)sub_19F0394FC, a2);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v15);
  return v5;
}

uint64_t sub_19F037E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EEC3ED8(a1, a2, &qword_1E946E678);
}

void sub_19F037E40(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v10, &qword_1E946F7B0);
  if (*((void *)&v11 + 1) == 1)
  {
    sub_19EEBD664((uint64_t)&v10, &qword_1E946F7B0);
    type metadata accessor for LowMemoryMetricsEventLinter.Error();
    swift_getWitnessTable();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    v13[0] = v10;
    v13[1] = v11;
    uint64_t v14 = v12;
    uint64_t v6 = sub_19EEC355C((uint64_t)v13, (uint64_t)&v10);
    uint64_t v7 = *(void *)(a2 + 32);
    MEMORY[0x1F4188790](v6);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v7 + 56));
    sub_19F039518((uint64_t *)(v7 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 56));
    if (v3)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      a3[3] = (uint64_t)&type metadata for MetricsEventLinterBagConfiguration;
      a3[4] = (uint64_t)&off_1EF148D50;
      uint64_t v8 = swift_allocObject();
      *a3 = v8;
      long long v9 = v11;
      *(_OWORD *)(v8 + 16) = v10;
      *(_OWORD *)(v8 + 32) = v9;
      *(void *)(v8 + 48) = v12;
      sub_19EEC3418((uint64_t)v13);
    }
  }
}

uint64_t sub_19F038014(uint64_t *a1, uint64_t a2)
{
  sub_19EEBD664((uint64_t)a1, &qword_1E946E678);
  a1[3] = (uint64_t)&type metadata for MetricsEventLinterBagConfiguration;
  a1[4] = (uint64_t)&off_1EF148D50;
  uint64_t v4 = swift_allocObject();
  *a1 = v4;
  return sub_19F039574(a2, v4 + 16);
}

uint64_t LowMemoryMetricsEventLinter.processEvent(_:)(uint64_t a1)
{
  sub_19F037A38();
  if (qword_1E946DB80 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_1E9498950;
  uint64_t v5 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = v1[6];
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  _OWORD v7[3] = v5;
  void v7[4] = v4;
  v7[5] = v1;
  void v7[6] = v6;
  id v8 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = sub_19F038A14(v8, (uint64_t)sub_19F0389F0, (uint64_t)v7);

  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_19F038198@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  uint64_t v9 = *(void *)(*(void *)a4 + 88);
  long long v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  uint64_t v59 = *(void *)(*(void *)a4 + 80);
  uint64_t v8 = v59;
  uint64_t v60 = v9;
  __swift_allocate_boxed_opaque_existential_2Tm(v58);
  uint64_t v11 = swift_bridgeObjectRetain();
  v10(v11, v8, v9);
  uint64_t v12 = v59;
  uint64_t v13 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v14 = MetricsFieldsBuilder.subscript.getter(0x6369706F74, 0xE500000000000000, v12, v13);
  if (v15)
  {
    uint64_t v48 = v14;
    a3 = v15;
  }
  else
  {
    uint64_t v48 = a2;
    swift_bridgeObjectRetain();
  }
  uint64_t v49 = a3;
  uint64_t v16 = v59;
  uint64_t v17 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  sub_19EE76890();
  MetricsFieldsBuilder.subscript.getter(0x707954746E657665, 0xE900000000000065, v16, (uint64_t)&type metadata for MetricsEventType, v17, (uint64_t)&v53);
  long long v18 = v53;
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_19F24EAD0;
  id v21 = v19;
  uint64_t v61 = sub_19EEC3F3C(0, 27, 0, MEMORY[0x1E4FBC860]);
  v22._object = (void *)0x800000019F26E7C0;
  v22._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  if (*((void *)&v18 + 1))
  {
    *((void *)&v57 + 1) = &type metadata for MetricsEventType;
    long long v56 = v18;
  }
  else
  {
    long long v56 = 0u;
    long long v57 = 0u;
  }
  sub_19EEC3ED8((uint64_t)&v56, (uint64_t)v52, &qword_1EB393260);
  long long v50 = 0u;
  long long v51 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v52, (uint64_t)&v50);
  char v55 = 0;
  long long v53 = v50;
  long long v54 = v51;
  uint64_t v23 = v61;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v23 = sub_19EEC3F3C(0, v23[2] + 1, 1, v23);
  }
  unint64_t v25 = v23[2];
  unint64_t v24 = v23[3];
  if (v25 >= v24 >> 1) {
    uint64_t v23 = sub_19EEC3F3C((void *)(v24 > 1), v25 + 1, 1, v23);
  }
  _OWORD v23[2] = v25 + 1;
  unint64_t v26 = &v23[5 * v25];
  long long v27 = v53;
  long long v28 = v54;
  *((unsigned char *)v26 + 64) = v55;
  *((_OWORD *)v26 + 2) = v27;
  *((_OWORD *)v26 + 3) = v28;
  uint64_t v61 = v23;
  sub_19EEBD664((uint64_t)&v56, &qword_1EB393260);
  v29._uint64_t countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  *(void *)(v20 + 32) = v61;
  *(void *)&long long v53 = v21;
  LOBYTE(v50) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v20, (JetEngine::LogMessageLevel)&v50);

  swift_bridgeObjectRelease();
  sub_19F038D64(v58, v48, v49, a1);
  if (v46)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (*((void *)&v18 + 1))
    {
      if (v18 == __PAIR128__(0xE500000000000000, 0x616964656DLL) || (sub_19F1DD44C() & 1) != 0) {
        sub_19F03940C(v58);
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v31 = *(void *)(a5 + 16);
    if (v31)
    {
      unint64_t v32 = (void *)(a5 + 32);
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v33 = v32[3];
        uint64_t v34 = v32[4];
        __swift_project_boxed_opaque_existential_1(v32, v33);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v34 + 8))(v58, v33, v34);
        v32 += 5;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
    }
    uint64_t v35 = a1[3];
    uint64_t v36 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v35);
    uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 32))(v48, v49, v35, v36);
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void *)(v37 + 16);
    if (v38)
    {
      long long v39 = (void *)(v37 + 32);
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v40 = v39[3];
        uint64_t v41 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v40);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v41 + 8))(v58, v40, v41);
        v39 += 5;
        --v38;
      }
      while (v38);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v42 = v59;
    uint64_t v43 = v60;
    __swift_project_boxed_opaque_existential_1(v58, v59);
    *a6 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 24))(v42, v43);
    a6[1] = MEMORY[0x1E4FBC860];
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
}

uint64_t LowMemoryMetricsEventLinter.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LowMemoryMetricsEventLinter.__deallocating_deinit()
{
  LowMemoryMetricsEventLinter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19F038784(uint64_t a1)
{
  return LowMemoryMetricsEventLinter.processEvent(_:)(a1);
}

uint64_t sub_19F0387A8()
{
  uint64_t v0 = sub_19F1DC83C();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_19F1DBA3C();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = sub_19F1DC86C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEA5F34();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC68], v2);
  sub_19F1DBA1C();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_19EE99204();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393060);
  sub_19EE9925C();
  sub_19F1DCC1C();
  uint64_t result = sub_19F1DC8AC();
  qword_1E9498950 = result;
  return result;
}

uint64_t sub_19F0389A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F0389F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_19F038198(a1, v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t sub_19F038A14(void *a1, uint64_t a2, uint64_t a3)
{
  void v14[3] = sub_19EEA5F34();
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391BD0);
  uint64_t v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 16) = v7;
  *(void *)(v6 + 24) = v8;
  *(void *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 40) = 0;
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v9[2] = a2;
  v9[3] = a3;
  void v9[4] = v6;
  v12[0] = sub_19F038D58;
  v12[1] = v9;
  long long v12[2] = sub_19EFD97AC;
  v12[3] = v6;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  id v10 = a1;
  swift_retain();
  swift_retain();
  sub_19EF53168((uint64_t)v12);
  sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1E946DDB0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v6;
}

uint64_t sub_19F038B6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F038B88()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F038BA4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LowMemoryMetricsEventLinter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for LowMemoryMetricsEventLinter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LowMemoryMetricsEventLinter);
}

unsigned char *sub_19F038C3C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F038CD8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for LowMemoryMetricsEventLinter.Error()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F038D18()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F038D58(uint64_t a1)
{
  return sub_19F0D8D08(a1, *(void (**)(uint64_t *__return_ptr))(v1 + 16));
}

uint64_t sub_19F038D64(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = a4[3];
  uint64_t v10 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v9);
  uint64_t v64 = a2;
  uint64_t v65 = a3;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a2, a3, v9, v10);
  if (!result)
  {
LABEL_42:
    uint64_t v35 = MEMORY[0x1E4FBB1A0];
    uint64_t v75 = MEMORY[0x1E4FBB1A0];
    uint64_t v72 = 7628138;
    unint64_t v73 = 0xE300000000000000;
    uint64_t v36 = a1[3];
    uint64_t v37 = a1[4];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v36);
    (*(void (**)(uint64_t *, uint64_t, unint64_t, uint64_t, uint64_t))(v37 + 16))(&v72, 0x654D646E65537078, 0xEC000000646F6874, v36, v37);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
    if (!v5)
    {
      uint64_t v38 = a1[3];
      uint64_t v39 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v38);
      MetricsFieldsBuilder.subscript.getter(1701273968, 0xE400000000000000, v38, v39);
      uint64_t v41 = v40;
      swift_bridgeObjectRelease();
      if (!v41)
      {
        uint64_t v49 = a1[3];
        uint64_t v50 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v49);
        uint64_t v51 = MetricsFieldsBuilder.subscript.getter(0x6570795465676170, 0xE800000000000000, v49, v50);
        if (v52)
        {
          uint64_t v53 = v51;
          uint64_t v54 = a1[3];
          uint64_t v55 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, v54);
          MetricsFieldsBuilder.subscript.getter(0x644965676170, 0xE600000000000000, v54, v55);
          if (v56)
          {
            uint64_t v57 = a4[3];
            uint64_t v58 = a4[4];
            __swift_project_boxed_opaque_existential_1(a4, v57);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 16))(v64, v65, v57, v58);
            sub_19F037704();
            unint64_t v60 = v59;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v75 = v35;
            uint64_t v72 = v53;
            unint64_t v73 = v60;
            uint64_t v61 = a1[3];
            uint64_t v62 = a1[4];
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v61);
            (*(void (**)(uint64_t *, uint64_t, unint64_t, uint64_t, uint64_t))(v62 + 16))(&v72, 1701273968, 0xE400000000000000, v61, v62);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
      }
      uint64_t v42 = a4[3];
      uint64_t v43 = a4[4];
      __swift_project_boxed_opaque_existential_1(a4, v42);
      uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 24))(v64, v65, v42, v43);
      uint64_t v45 = *(void *)(v44 + 16);
      if (v45)
      {
        uint64_t v46 = v44 + 32;
        do
        {
          sub_19EEC4154(v46, (uint64_t)&v72);
          uint64_t v47 = v75;
          uint64_t v48 = v76;
          __swift_project_boxed_opaque_existential_1(&v72, v75);
          (*(void (**)(void *, uint64_t, uint64_t))(v48 + 8))(a1, v47, v48);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
          v46 += 40;
          --v45;
        }
        while (v45);
      }
      return swift_bridgeObjectRelease();
    }
    return result;
  }
  uint64_t v12 = result;
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(result + 64);
  uint64_t v66 = result + 64;
  uint64_t v15 = 1 << *(unsigned char *)(result + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v77 = &v74;
  int64_t v67 = (unint64_t)(v15 + 63) >> 6;
  if ((v16 & v14) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v19 = v18 | (v13 << 6);
LABEL_8:
  uint64_t v20 = *(void *)(v12 + 56);
  id v21 = (void *)(*(void *)(v12 + 48) + 16 * v19);
  uint64_t v22 = v21[1];
  *(void *)&long long v70 = *v21;
  *((void *)&v70 + 1) = v22;
  sub_19EEBDBA4(v20 + 32 * v19, (uint64_t)v71);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_19EE71BB0((uint64_t)&v70, (uint64_t)&v72);
    uint64_t v25 = v73;
    if (!v73)
    {
      swift_release();
      uint64_t v5 = v4;
      goto LABEL_42;
    }
    uint64_t v26 = v72;
    sub_19EEBDC00(v77, &v70);
    uint64_t v27 = a1[3];
    uint64_t v28 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v27);
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    if (*(void *)(v29 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_19EEBD400(v26, v25);
      if (v31)
      {
        sub_19EEBDBA4(*(void *)(v29 + 56) + 32 * v30, (uint64_t)&v68);
      }
      else
      {
        long long v68 = 0u;
        long long v69 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v68 = 0u;
      long long v69 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v69 + 1))
    {
      swift_bridgeObjectRelease();
      sub_19EEBD664((uint64_t)&v68, &qword_1EB393260);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v70);
      if (v17) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)&v68, &qword_1EB393260);
      uint64_t v32 = a1[3];
      uint64_t v33 = a1[4];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v32);
      (*(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 16))(&v70, v26, v25, v32, v33);
      if (v4)
      {
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v70);
        return swift_release();
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v70);
      uint64_t result = swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_7;
      }
    }
LABEL_9:
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v23 < v67)
    {
      unint64_t v24 = *(void *)(v66 + 8 * v23);
      if (v24) {
        goto LABEL_12;
      }
      v13 += 2;
      if (v23 + 1 >= v67)
      {
        int64_t v13 = v23;
        goto LABEL_17;
      }
      unint64_t v24 = *(void *)(v66 + 8 * v13);
      if (v24)
      {
        ++v23;
LABEL_12:
        unint64_t v17 = (v24 - 1) & v24;
        unint64_t v19 = __clz(__rbit64(v24)) + (v23 << 6);
        int64_t v13 = v23;
        goto LABEL_8;
      }
      if (v23 + 2 < v67) {
        break;
      }
    }
LABEL_17:
    unint64_t v17 = 0;
    memset(v71, 0, sizeof(v71));
    long long v70 = 0u;
  }
  unint64_t v24 = *(void *)(v66 + 8 * (v23 + 2));
  if (v24)
  {
    v23 += 2;
    goto LABEL_12;
  }
  int64_t v34 = v23 + 3;
  if (v23 + 3 >= v67)
  {
    int64_t v13 = v23 + 2;
    goto LABEL_17;
  }
  unint64_t v24 = *(void *)(v66 + 8 * v34);
  if (v24)
  {
    v23 += 3;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v23 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v23 >= v67)
    {
      int64_t v13 = v67 - 1;
      goto LABEL_17;
    }
    unint64_t v24 = *(void *)(v66 + 8 * v23);
    ++v34;
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_19F03940C(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  uint64_t result = MetricsFieldsBuilder.subscript.getter(0x6E6F697469736F70, 0xE800000000000000, v2, v3);
  if ((v5 & 1) == 0)
  {
    void v8[3] = MEMORY[0x1E4FBB3D0];
    v8[0] = round(*(double *)&result);
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v6);
    (*(void (**)(void *, uint64_t, unint64_t, uint64_t, uint64_t))(v7 + 16))(v8, 0x6E6F697469736F70, 0xE800000000000000, v6, v7);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  return result;
}

uint64_t *sub_19F0394F4(uint64_t a1)
{
  return sub_19F037B78(a1, v1);
}

void sub_19F0394FC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19F037E40(a1, v2, a2);
}

uint64_t sub_19F039518(uint64_t *a1)
{
  return sub_19F038014(a1, *(void *)(v1 + 16));
}

uint64_t sub_19F039534()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F039574(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SyncTaskScheduler.schedule(task:)(uint64_t (*a1)(void))
{
  return a1();
}

void NSOperationQueue.schedule(task:)(uint64_t a1, uint64_t a2)
{
  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_19EEA4A68;
  void v6[3] = &block_descriptor_3;
  uint64_t v3 = _Block_copy(v6);
  uint64_t v4 = self;
  swift_retain();
  id v5 = objc_msgSend(v4, sel_blockOperationWithBlock_, v3);
  _Block_release(v3);
  swift_release();
  objc_msgSend(v2, sel_addOperation_, v5);
}

void sub_19F0396DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  void v7[4] = a1;
  v7[5] = a2;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  void v7[2] = sub_19EEA4A68;
  _OWORD v7[3] = &block_descriptor_6_2;
  uint64_t v4 = _Block_copy(v7);
  id v5 = self;
  swift_retain();
  id v6 = objc_msgSend(v5, sel_blockOperationWithBlock_, v4);
  _Block_release(v4);
  swift_release();
  objc_msgSend(v3, sel_addOperation_, v6);
}

uint64_t sub_19F0397C4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6469746E65696C63;
  }
  else {
    uint64_t v3 = 0x646972657375;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6469746E65696C63;
  }
  else {
    uint64_t v5 = 0x646972657375;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19F039868(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7463757274736564;
  }
  else {
    uint64_t v3 = 0x6C65636E6163;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000657669;
  }
  if (a2) {
    uint64_t v5 = 0x7463757274736564;
  }
  else {
    uint64_t v5 = 0x6C65636E6163;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000657669;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19F039914(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 25705;
  }
  else {
    uint64_t v3 = 0x646E696B24;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE200000000000000;
  }
  if (a2) {
    uint64_t v5 = 25705;
  }
  else {
    uint64_t v5 = 0x646E696B24;
  }
  if (a2) {
    unint64_t v6 = 0xE200000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19F0399AC(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x656C746974;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1852793705;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x6E6572646C696863;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE500000000000000;
      if (v4 == 0x656C746974) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v5 = 0xE400000000000000;
      uint64_t v6 = 1852793705;
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0xE800000000000000;
      if (v4 == 0x6E6572646C696863) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F039B10(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x79726575516C7275;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x79726575516C7275;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x726564616568;
      break;
    case 2:
      unsigned int v6 = 1852797802;
      goto LABEL_5;
    case 3:
      unsigned int v6 = 1836216166;
LABEL_5:
      uint64_t v5 = v6 | 0x79646F4200000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      if (v5 == 0x726564616568) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      uint64_t v2 = 0x79646F426E6F736ALL;
      goto LABEL_10;
    case 3:
      if (v5 == 0x79646F426D726F66) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_19F039C80(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1954047348;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1954047348;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6C69616D65;
      break;
    case 2:
      uint64_t v5 = 0x6D754E656E6F6870;
      unint64_t v3 = 0xEB00000000726562;
      break;
    case 3:
      uint64_t v5 = 0x506C616D69636564;
      unint64_t v3 = 0xEA00000000006461;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6C69616D65) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6D754E656E6F6870;
      unint64_t v6 = 0xEB00000000726562;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEA00000000006461;
      if (v5 == 0x506C616D69636564) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F039E10(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C61636974697263;
  }
  else {
    uint64_t v3 = 0x74616D726F666E69;
  }
  if (v2) {
    unint64_t v4 = 0xED00006C616E6F69;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6C61636974697263;
  }
  else {
    uint64_t v5 = 0x74616D726F666E69;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xED00006C616E6F69;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19F039EC4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x646E616D65446E6FLL;
    }
    else {
      uint64_t v3 = 0x74726174536E6FLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x646E616D65446E6FLL;
      }
      else {
        uint64_t v6 = 0x74726174536E6FLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701736302;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    char v8 = sub_19F1DD44C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_19F039FD0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7261646E6F636573;
  }
  else {
    uint64_t v3 = 0x447972616D697270;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000617461;
  }
  else {
    unint64_t v4 = 0xED00006174614479;
  }
  if (a2) {
    uint64_t v5 = 0x7261646E6F636573;
  }
  else {
    uint64_t v5 = 0x447972616D697270;
  }
  if (a2) {
    unint64_t v6 = 0xED00006174614479;
  }
  else {
    unint64_t v6 = 0xEB00000000617461;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19F03A08C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1702125924;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1702125924;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x656D695474696177;
      break;
    case 2:
      unint64_t v5 = 0x6C6F506568636163;
      unint64_t v3 = 0xEB00000000796369;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x7465736572;
      break;
    case 4:
      unint64_t v5 = 0x676E697473697865;
      unint64_t v3 = 0xEC000000796C6E4FLL;
      break;
    case 5:
      unint64_t v5 = 0x74696157636E7973;
      unint64_t v3 = 0xEC000000656D6954;
      break;
    case 6:
      unint64_t v3 = 0x800000019F2687F0;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x656D695474696177) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xEB00000000796369;
      if (v5 != 0x6C6F506568636163) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7465736572) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xEC000000796C6E4FLL;
      if (v5 != 0x676E697473697865) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x74696157636E7973;
      unint64_t v6 = 0xEC000000656D6954;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0x800000019F2687F0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03A2F8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701869940;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701869940;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7470697263736564;
      unint64_t v3 = 0xEB000000006E6F69;
      break;
    case 2:
      uint64_t v5 = 0x6E696C5F706C6568;
      unint64_t v3 = 0xE90000000000006BLL;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x64656C646E6168;
      break;
    case 4:
      uint64_t v5 = 0x69746568746E7973;
      unint64_t v3 = 0xE900000000000063;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB000000006E6F69;
      if (v5 == 0x7470697263736564) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE90000000000006BLL;
      if (v5 != 0x6E696C5F706C6568) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x64656C646E6168;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE900000000000063;
      if (v5 != 0x69746568746E7973) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03A4DC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x63617073656D616ELL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x63617073656D616ELL;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1701869940;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x736369706F74;
      break;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6E6170736566696CLL;
      break;
    case 4:
      uint64_t v5 = 0x74616C6572726F63;
      unint64_t v6 = 0xEC000000736E6F69;
      break;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6E6F697461746F72;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1701869940) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x736369706F74) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x6E6170736566696CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v3 = 0x74616C6572726F63;
      unint64_t v2 = 0xEC000000736E6F69;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x6E6F697461746F72) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_19;
      }
LABEL_16:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03A6E8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701736302;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701736302;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x746C7561666564;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x656D697270;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6D726F6674616C70;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x746C7561666564) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x656D697270;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x6D726F6674616C70) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03A860(uint64_t a1, uint64_t a2)
{
  return sub_19F03AAEC(a1, a2, AutomationSemantics.NowPlayingElement.rawValue.getter);
}

uint64_t sub_19F03A878(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6B726F77747261;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6B726F77747261;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F65646976;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x656C746974;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x656C746974627573;
      break;
    case 4:
      uint64_t v5 = 0x7375615079616C70;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 5:
      uint64_t v5 = 0x747475427478656ELL;
      unint64_t v3 = 0xEA00000000006E6FLL;
      break;
    case 6:
      uint64_t v5 = 0x77726F4674736166;
      unint64_t v3 = 0xEB00000000647261;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6F65646976) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x656C746974) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x656C746974627573) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x7375615079616C70) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x747475427478656ELL;
      unint64_t v6 = 0xEA00000000006E6FLL;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xEB00000000647261;
      if (v5 != 0x77726F4674736166) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03AAD4(uint64_t a1, uint64_t a2)
{
  return sub_19F03AAEC(a1, a2, AutomationSemantics.Subcomponent.rawValue.getter);
}

uint64_t sub_19F03AAEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_19F03AB90(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6449746E65726170;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6449746E65726170;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 25705;
      break;
    case 2:
      uint64_t v5 = 0x6973736572706D69;
      unint64_t v3 = 0xEF7865646E496E6FLL;
      break;
    case 3:
      uint64_t v5 = 0x4449657571696E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 25705) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6973736572706D69;
      unint64_t v6 = 0xEF7865646E496E6FLL;
      goto LABEL_9;
    case 3:
      if (v5 == 0x4449657571696E75) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03AD18(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v4 = 0x73646C656966;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v4 = 0x6D6F74737563;
      break;
    case 3:
      unint64_t v4 = 0x69466E6F6D6D6F63;
      unint64_t v3 = 0xEC00000073646C65;
      break;
    case 4:
      unint64_t v3 = 0x800000019F268200;
      unint64_t v4 = 0xD000000000000013;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE600000000000000;
      if (v4 == 0x73646C656966) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v5 = 0xE600000000000000;
      if (v4 != 0x6D6F74737563) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v6 = 0x69466E6F6D6D6F63;
      unint64_t v5 = 0xEC00000073646C65;
      goto LABEL_12;
    case 4:
      unint64_t v5 = 0x800000019F268200;
      if (v4 != 0xD000000000000013) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v4 != v6) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03AED8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656D616E656C6966;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656D616E656C6966;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6E6F6974636E7566;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6F6E656E696CLL;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F6E6C6F63;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x6E6F6974636E7566) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x6F6E656E696CLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6F6E6C6F63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03B050(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x63696D616E7964;
      break;
    case 2:
      unint64_t v5 = 0x6F6C61646E617473;
      unint64_t v3 = 0xEA0000000000656ELL;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6D6574497473696CLL;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v3 = 0x800000019F268340;
      break;
    case 5:
      unint64_t v3 = 0x800000019F268360;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x63696D616E7964) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEA0000000000656ELL;
      if (v5 != 0x6F6C61646E617473) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6D6574497473696CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0xD000000000000013;
      unint64_t v6 = 0x800000019F268340;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0x800000019F268360;
      if (v5 != 0xD000000000000010) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03B274(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701869940;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701869940;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x65756C6176;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656C75646F6DLL;
      break;
    case 3:
      uint64_t v5 = 0x695F646165726874;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 4:
      uint64_t v5 = 0x6172746B63617473;
      unint64_t v3 = 0xEA00000000006563;
      break;
    case 5:
      uint64_t v5 = 0x73696E616863656DLL;
      unint64_t v3 = 0xE90000000000006DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x65756C6176) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x656C75646F6DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x695F646165726874) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x6172746B63617473;
      unint64_t v6 = 0xEA00000000006563;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE90000000000006DLL;
      if (v5 != 0x73696E616863656DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03B488(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD00000000000001FLL;
  }
  else {
    unint64_t v3 = 0xD00000000000001ALL;
  }
  if (v2) {
    unint64_t v4 = 0x800000019F2682A0;
  }
  else {
    unint64_t v4 = 0x800000019F2682C0;
  }
  if (a2) {
    unint64_t v5 = 0xD00000000000001FLL;
  }
  else {
    unint64_t v5 = 0xD00000000000001ALL;
  }
  if (a2) {
    unint64_t v6 = 0x800000019F2682C0;
  }
  else {
    unint64_t v6 = 0x800000019F2682A0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19F03B538(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6D6F74737563;
  }
  else {
    uint64_t v3 = 1635017060;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6D6F74737563;
  }
  else {
    uint64_t v5 = 1635017060;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19F03B5D4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 1635017060;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0x800000019F268220;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 1635017060;
  }
  if (a2) {
    unint64_t v6 = 0x800000019F268220;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19F03B678(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC000000736E6F69;
  uint64_t v3 = 0x7463757274736E69;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7463757274736E69;
  unint64_t v6 = 0xEC000000736E6F69;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6C65694665676170;
      unint64_t v6 = 0xEA00000000007364;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x6D6F74737563;
      break;
    case 3:
      unint64_t v6 = 0x800000019F268200;
      unint64_t v5 = 0xD000000000000013;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007364;
      if (v5 == 0x6C65694665676170) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6D6F74737563;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x800000019F268200;
      if (v5 == 0xD000000000000013) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_19F03B820(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6369706F74;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6369706F74;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6C46646C756F6873;
      unint64_t v3 = 0xEB00000000687375;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x73646C656966;
      break;
    case 3:
      uint64_t v5 = 0x6E6964756C636E69;
      goto LABEL_6;
    case 4:
      uint64_t v5 = 0x6E6964756C637865;
LABEL_6:
      unint64_t v3 = 0xEF73646C65694667;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v2 = 0x6C46646C756F6873;
      unint64_t v6 = 0xEB00000000687375;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x73646C656966;
      break;
    case 3:
      uint64_t v2 = 0x6E6964756C636E69;
      goto LABEL_12;
    case 4:
      uint64_t v2 = 0x6E6964756C637865;
LABEL_12:
      unint64_t v6 = 0xEF73646C65694667;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19F03B9F0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x756C61566C6C756ELL;
  }
  else {
    uint64_t v3 = 0x65707954646162;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000065;
  }
  if (a2) {
    uint64_t v5 = 0x756C61566C6C756ELL;
  }
  else {
    uint64_t v5 = 0x65707954646162;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000065;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19F03BA9C(char a1, char a2)
{
  if (qword_19F2576B8[a1] == qword_19F2576B8[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t QueryExpression.init(pattern:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  uint64_t v76 = a4;
  uint64_t v90 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_19F1DABEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v72 = (char *)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DABFC();
  uint64_t v74 = *(void *)(v9 - 8);
  uint64_t v75 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v73 = (char *)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DAEFC();
  uint64_t v84 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v85 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v70 - v14;
  uint64_t v16 = sub_19F1DB01C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70[1] = a1;
  v70[2] = a2;
  int v71 = a3;
  sub_19F1DCD2C();
  sub_19F1DB00C();
  swift_bridgeObjectRetain();
  sub_19F1DAFDC();
  uint64_t v20 = sub_19F1DAF3C();
  if (v20) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
    uint64_t result = swift_bridgeObjectRelease();
    void *v76 = MEMORY[0x1E4FBC868];
    return result;
  }
  id v23 = v83;
  uint64_t v24 = v84 + 16;
  uint64_t v84 = *(void *)(v84 + 16);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 64);
  v70[0] = v21;
  uint64_t v26 = v21 + ((v25 + 32) & ~v25);
  id v27 = (id)MEMORY[0x1E4FBC868];
  uint64_t v28 = (void (**)(char *, uint64_t))(v24 - 8);
  uint64_t v77 = *(void *)(v24 + 56);
  uint64_t v78 = v11;
  unint64_t v79 = v15;
  while (1)
  {
    uint64_t v82 = v22;
    id v83 = v27;
    uint64_t v81 = v26;
    ((void (*)(char *))v84)(v15);
    uint64_t v29 = sub_19F1DAEDC();
    unint64_t v31 = v30;
    uint64_t v88 = v29;
    unint64_t v89 = v30;
    swift_bridgeObjectRetain();
    char v32 = sub_19F1DBFBC();
    swift_bridgeObjectRelease();
    if (v32)
    {
      if ((v31 & 0x2000000000000000) != 0)
      {
        if ((v31 & 0xF00000000000000) == 0) {
          goto LABEL_27;
        }
      }
      else if ((v29 & 0xFFFFFFFFFFFFLL) == 0)
      {
        __break(1u);
LABEL_27:
        __break(1u);
      }
      sub_19F1DBECC();
      sub_19F1DBF0C();
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = v88 & 0xFFFFFFFFFFFFLL;
    if ((v89 & 0x2000000000000000) != 0) {
      uint64_t v33 = HIBYTE(v89) & 0xF;
    }
    if (!v33)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_19F1DABAC();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
      uint64_t v50 = sub_19F1DBD7C();
      uint64_t v51 = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 32) = v50;
      *(void *)(inited + 40) = v52;
      *(void *)(inited + 72) = v51;
      *(void *)(inited + 48) = 0xD000000000000026;
      *(void *)(inited + 56) = 0x800000019F26E850;
      *(void *)(inited + 80) = sub_19F1DBD7C();
      *(void *)(inited + 88) = v53;
      uint64_t v54 = sub_19F1DCD2C();
      *(void *)(inited + 120) = v51;
      *(void *)(inited + 96) = v54;
      *(void *)(inited + 104) = v55;
      sub_19EEBF898(inited);
      sub_19F045728((unint64_t *)&qword_1E9472FE0, MEMORY[0x1E4F26C20]);
      uint64_t v56 = v73;
      uint64_t v57 = v75;
      sub_19F1DB17C();
      sub_19F1DAB9C();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v56, v57);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v24 - 8))(v15, v11);
    }
    ((void (*)(char *, char *, uint64_t))v84)(v85, v15, v11);
    uint64_t v34 = sub_19F1DAEEC();
    sub_19F0EB8B4(v34, v35);
    if (v23)
    {
      uint64_t v58 = *v28;
      (*v28)(v85, v11);
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRelease();
      v58(v15, v11);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    id v36 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
    uint64_t v37 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    id v86 = 0;
    id v38 = objc_msgSend(v36, sel_initWithPattern_options_error_, v37, 0, &v86, v70[0]);

    if (!v38)
    {
      id v59 = v86;
      sub_19F1DB19C();

      swift_willThrow();
      uint64_t v58 = *v28;
      (*v28)(v85, v11);
      uint64_t v15 = v79;
      goto LABEL_24;
    }
    id v39 = v86;
    uint64_t v40 = v85;
    sub_19F1DAEDC();
    uint64_t v41 = v11;
    char v42 = sub_19F1DBFBC();
    swift_bridgeObjectRelease();
    unint64_t v80 = *v28;
    v80(v40, v41);
    uint64_t v43 = v88;
    uint64_t v44 = v89;
    swift_bridgeObjectRetain();
    uint64_t v45 = v83;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v86 = v45;
    uint64_t v47 = (void *)sub_19F044CF0((uint64_t)v38, v42 & 1, v43, v44, isUniquelyReferenced_nonNull_native);
    id v27 = v86;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v47) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v78;
    uint64_t v15 = v79;
    v80(v79, v78);
    uint64_t v26 = v81 + v77;
    uint64_t v22 = v82 - 1;
    if (v82 == 1)
    {
      uint64_t result = swift_bridgeObjectRelease();
      void *v76 = v27;
      return result;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19F1DABAC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t v60 = swift_initStackObject();
  *(_OWORD *)(v60 + 16) = xmmword_19F24EB80;
  *(void *)(v60 + 32) = sub_19F1DBD7C();
  *(void *)(v60 + 40) = v61;
  id v86 = 0;
  unint64_t v87 = 0xE000000000000000;
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  id v62 = v86;
  unint64_t v63 = v87;
  uint64_t v64 = MEMORY[0x1E4FBB1A0];
  *(void *)(v60 + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(v60 + 48) = v62;
  *(void *)(v60 + 56) = v63;
  *(void *)(v60 + 80) = sub_19F1DBD7C();
  *(void *)(v60 + 88) = v65;
  uint64_t v66 = sub_19F1DCD2C();
  *(void *)(v60 + 120) = v64;
  *(void *)(v60 + 96) = v66;
  *(void *)(v60 + 104) = v67;
  sub_19EEBF898(v60);
  sub_19F045728((unint64_t *)&qword_1E9472FE0, MEMORY[0x1E4F26C20]);
  long long v68 = v73;
  uint64_t v69 = v75;
  sub_19F1DB17C();
  sub_19F1DAB9C();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v68, v69);
  swift_willThrow();
  return ((uint64_t (*)(char *, uint64_t))v80)(v79, v78);
}

uint64_t QueryExpression.match(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v4 = v3;
  uint64_t v69 = a3;
  uint64_t v7 = sub_19F1DAEFC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v77 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v65 - v11;
  uint64_t v13 = sub_19F1DB01C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *v4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = MEMORY[0x1E4FBC870];
  uint64_t v76 = v18 + 16;
  sub_19F1DB00C();
  swift_bridgeObjectRetain();
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  sub_19F1DAFDC();
  uint64_t v19 = sub_19F1DAF3C();
  if (v19) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v65 = v20;
    uint64_t v66 = v18;
    id v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v22 = v8 + 16;
    unint64_t v71 = (*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64);
    unint64_t v24 = v20 + v71;
    uint64_t v82 = *(void *)(v22 + 56);
    uint64_t v25 = (void (**)(char *, uint64_t))(v22 - 8);
    long long v70 = (void (**)(unint64_t, char *, uint64_t))(v22 + 16);
    unint64_t v79 = v23;
    unint64_t v80 = MEMORY[0x1E4FBC860];
    uint64_t v26 = v22;
    id v27 = (void (*)(char *, unint64_t, uint64_t))v23;
    uint64_t v72 = v17;
    unint64_t v73 = v25;
    uint64_t v74 = v26;
    uint64_t v75 = v7;
    v23(v12, (char *)(v20 + v71), v7);
    while (1)
    {
      uint64_t v28 = sub_19F1DAEDC();
      if (*(void *)(v17 + 16) && (unint64_t v30 = sub_19EEBD400(v28, v29), (v31 & 1) != 0))
      {
        uint64_t v32 = *(void *)(v17 + 56) + 16 * v30;
        uint64_t v33 = *(void **)v32;
        int v78 = *(unsigned __int8 *)(v32 + 8);
        id v34 = v33;
        swift_bridgeObjectRelease();
        uint64_t v35 = sub_19F1DAEDC();
        sub_19F04282C(v84, v35, v36);
        swift_bridgeObjectRelease();
        uint64_t v37 = sub_19F1DAEEC();
        if (v38) {
          uint64_t v39 = v37;
        }
        else {
          uint64_t v39 = 0;
        }
        if (v38) {
          unint64_t v40 = v38;
        }
        else {
          unint64_t v40 = 0xE000000000000000;
        }
        uint64_t v41 = HIBYTE(v40) & 0xF;
        if ((v40 & 0x2000000000000000) == 0) {
          uint64_t v41 = v39;
        }
        uint64_t v42 = 7;
        if (((v40 >> 60) & ((v39 & 0x800000000000000) == 0)) != 0) {
          uint64_t v42 = 11;
        }
        uint64_t v43 = v42 | (v41 << 16);
        swift_bridgeObjectRetain();
        uint64_t v44 = (void *)sub_19F1DBD4C();
        uint64_t v83 = v43;
        v84[0] = v39;
        v84[1] = v40;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E94717E0);
        sub_19EEA5E10((unint64_t *)&qword_1E94717E8, &qword_1E94717E0);
        sub_19EEC4910();
        uint64_t v45 = sub_19F1DCA4C();
        id v81 = v34;
        objc_msgSend(v34, sel_rangeOfFirstMatchInString_options_range_, v44, 0, v45, v46, v65);

        sub_19F1DC73C();
        LOBYTE(v43) = v47;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v43)
        {
          uint64_t v7 = v75;
          if ((v78 & 1) == 0)
          {

            (*v73)(v12, v7);
            swift_release();
            swift_bridgeObjectRelease();
LABEL_37:
            uint64_t result = swift_bridgeObjectRelease();
            uint64_t v64 = v69;
            void *v69 = 0;
            v64[1] = 0;
            v64[2] = 0;
            return result;
          }
          uint64_t v25 = v73;
          (*v73)(v12, v75);

          uint64_t v17 = v72;
        }
        else
        {
          uint64_t v7 = v75;
          v79(v77, v12, v75);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v80 = sub_19F09D610(0, *(void *)(v80 + 16) + 1, 1, v80);
          }
          uint64_t v17 = v72;
          uint64_t v25 = v73;
          id v48 = v81;
          unint64_t v50 = *(void *)(v80 + 16);
          unint64_t v49 = *(void *)(v80 + 24);
          if (v50 >= v49 >> 1) {
            unint64_t v80 = sub_19F09D610(v49 > 1, v50 + 1, 1, v80);
          }
          unint64_t v51 = v80;
          *(void *)(v80 + 16) = v50 + 1;
          (*v70)(v51 + v71 + v50 * v82, v77, v7);

          (*v25)(v12, v7);
        }
        id v27 = (void (*)(char *, unint64_t, uint64_t))v79;
      }
      else
      {
        swift_bridgeObjectRelease();
        (*v25)(v12, v7);
      }
      v24 += v82;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = v66;
        goto LABEL_32;
      }
      v27(v12, v24, v7);
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v80 = MEMORY[0x1E4FBC860];
LABEL_32:
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = sub_19F045290;
  *(void *)(v52 + 24) = v18;
  uint64_t v53 = swift_bridgeObjectRetain();
  uint64_t result = sub_19F045020(v53, (uint64_t (*)(void *))sub_19F0452D0);
  if (v56)
  {
LABEL_40:
    __break(1u);
    return result;
  }
  uint64_t v57 = result;
  int v58 = v55;
  int v59 = *(_DWORD *)(v17 + 36);
  char v60 = *(unsigned char *)(v17 + 32);
  swift_retain();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v59 != v58)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v57 != 1 << v60)
  {
    swift_release();
    goto LABEL_37;
  }
  uint64_t v61 = v68;
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  id v62 = v69;
  uint64_t v63 = v67;
  void *v69 = v80;
  v62[1] = v63;
  v62[2] = v61;
  return result;
}

BOOL static QueryExpression.MatchResult.Index.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

uint64_t QueryExpression.MatchResult.Index.description.getter()
{
  return 0x287865646E49;
}

BOOL static QueryExpression.MatchResult.Index.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL sub_19F03CB60(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_19F03CB74(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_19F03CB88(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_19F03CB9C(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_19F03CBB0()
{
  return 0x287865646E49;
}

uint64_t QueryExpression.MatchResult.raw.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t QueryExpression.MatchResult.startIndex.getter()
{
  return 0;
}

uint64_t QueryExpression.MatchResult.endIndex.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

JetEngine::QueryExpression::MatchResult::Index __swiftcall QueryExpression.MatchResult.index(after:)(JetEngine::QueryExpression::MatchResult::Index after)
{
  BOOL v1 = __OFADD__(after.rawValue, 1);
  result.rawValue = after.rawValue + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

unint64_t QueryExpression.MatchResult.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v3 = result;
  uint64_t v5 = *v2;
  if (*(void *)(v5 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = sub_19F1DAEFC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v7 + 16);
  unint64_t v9 = v5
     + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
     + *(void *)(v7 + 72) * v3;
  return v8(a2, v9, v6);
}

uint64_t QueryExpression.MatchResult.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_19F1DAEFC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v31 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v37 = (char *)&v31 - v12;
  uint64_t v13 = *v2;
  uint64_t v14 = *(void *)(*v2 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t result = swift_bridgeObjectRetain();
  if (v14)
  {
    unint64_t v16 = 0;
    uint64_t v39 = v14;
    uint64_t v40 = v6 + 16;
    uint64_t v17 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
    uint64_t v33 = v14 - 1;
    id v34 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    unint64_t v38 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      unint64_t v18 = v16;
      while (1)
      {
        if (v18 >= *(void *)(v13 + 16))
        {
          __break(1u);
          return result;
        }
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v10, v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v18, v5);
        if (sub_19F1DAEDC() == a1 && v19 == a2) {
          break;
        }
        char v20 = sub_19F1DD44C();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_11;
        }
        ++v18;
        uint64_t result = (*v17)(v10, v5);
        if (v39 == v18) {
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease();
LABEL_11:
      uint64_t v21 = *v34;
      (*v34)(v37, v10, v5);
      uint64_t v22 = v21;
      id v23 = v36;
      v22(v36, v37, v5);
      uint64_t v35 = sub_19F1DAEEC();
      uint64_t v25 = v24;
      uint64_t result = (*v17)(v23, v5);
      if (v25)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_19EE91FA0(0, v38[2] + 1, 1, v38);
          unint64_t v38 = (void *)result;
        }
        unint64_t v27 = v38[2];
        unint64_t v26 = v38[3];
        unint64_t v28 = v27 + 1;
        if (v27 >= v26 >> 1)
        {
          unint64_t v32 = v27 + 1;
          uint64_t result = (uint64_t)sub_19EE91FA0((void *)(v26 > 1), v27 + 1, 1, v38);
          unint64_t v28 = v32;
          unint64_t v38 = (void *)result;
        }
        uint64_t v29 = v38;
        _OWORD v38[2] = v28;
        unint64_t v30 = &v29[2 * v27];
        v30[4] = v35;
        void v30[5] = v25;
      }
      unint64_t v16 = v18 + 1;
    }
    while (v33 != v18);
  }
  else
  {
    unint64_t v38 = (void *)MEMORY[0x1E4FBC860];
  }
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return (uint64_t)v38;
}

{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t (**v18)(char *, uint64_t);
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;

  uint64_t v5 = sub_19F1DAEFC();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)&v35 - v9;
  MEMORY[0x1F4188790](v10);
  unint64_t v38 = (char *)&v35 - v12;
  uint64_t v13 = *v2;
  uint64_t v14 = *(void *)(*v2 + 16);
  if (!v14) {
    return 0;
  }
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v15 = v11 + 16;
  uint64_t v36 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
  uint64_t v17 = v13 + v36;
  uint64_t v41 = *(void *)(v15 + 56);
  uint64_t v42 = v16;
  uint64_t v43 = v15;
  unint64_t v18 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
  uint64_t v39 = v13;
  swift_bridgeObjectRetain();
  uint64_t v44 = a2;
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  uint64_t v37 = v17;
  while (1)
  {
    v42(v7, v17, v5);
    if (sub_19F1DAEDC() == a1 && v20 == v44) {
      break;
    }
    uint64_t v21 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    uint64_t v22 = *v18;
    uint64_t result = (*v18)(v7, v5);
    if (v21) {
      goto LABEL_9;
    }
    ++v19;
    v17 += v41;
    if (v14 == v19) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = *v18;
  uint64_t result = (*v18)(v7, v5);
LABEL_9:
  if (v14 == v19)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v36 += v39;
  while (2)
  {
    if ((v19 & 0x8000000000000000) != 0)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v19 >= *(void *)(v39 + 16))
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v25 = v38;
    unint64_t v26 = v37 + v19 * v41;
    v42(v38, v26, v5);
    swift_bridgeObjectRetain();
    sub_19F1DAEEC();
    unint64_t v28 = v27;
    v22(v25, v5);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v28)
    {
      if (v19 != v14)
      {
        if (++v19 != v14)
        {
          uint64_t v29 = v36 + v41 * v19;
          while (1)
          {
            if (v19 >= *(void *)(v39 + 16))
            {
              __break(1u);
              goto LABEL_34;
            }
            v42(v40, v29, v5);
            if (sub_19F1DAEDC() == a1 && v30 == v44) {
              break;
            }
            uint64_t v31 = sub_19F1DD44C();
            swift_bridgeObjectRelease();
            uint64_t result = v22(v40, v5);
            if (v31) {
              goto LABEL_27;
            }
            ++v19;
            v29 += v41;
            if (v14 == v19) {
              goto LABEL_10;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t result = v22(v40, v5);
LABEL_27:
          if (v14 != v19) {
            continue;
          }
        }
        goto LABEL_10;
      }
      goto LABEL_36;
    }
    break;
  }
  if (v19 == v14) {
    goto LABEL_10;
  }
  if (v19 >= *(void *)(v39 + 16)) {
    goto LABEL_37;
  }
  unint64_t v32 = v38;
  v42(v38, v26, v5);
  uint64_t v24 = sub_19F1DAEEC();
  id v34 = v33;
  uint64_t result = v22(v32, v5);
  if (v34)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v24;
  }
LABEL_38:
  __break(1u);
  return result;
}

{
  unint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;

  uint64_t v5 = sub_19F1DABEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v22 = sub_19F1DABFC();
  unint64_t v28 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2[1];
  uint64_t v9 = v2[2];
  uint64_t v25 = *v2;
  unint64_t v26 = v8;
  unint64_t v27 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = a1;
  uint64_t v24 = a2;
  uint64_t v10 = QueryExpression.MatchResult.subscript.getter(a1, a2);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v12)
  {
    sub_19F1DABAC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
    *(void *)(inited + 32) = sub_19F1DBD7C();
    *(void *)(inited + 40) = v14;
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    uint64_t v25 = 0xD000000000000019;
    unint64_t v26 = 0x800000019F26E880;
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    uint64_t v15 = v25;
    unint64_t v16 = v26;
    uint64_t v17 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v15;
    *(void *)(inited + 56) = v16;
    *(void *)(inited + 80) = sub_19F1DBD7C();
    *(void *)(inited + 88) = v18;
    *(void *)(inited + 120) = v17;
    *(void *)(inited + 96) = v8;
    *(void *)(inited + 104) = v9;
    swift_bridgeObjectRetain();
    sub_19EEBF898(inited);
    sub_19F045728((unint64_t *)&qword_1E9472FE0, MEMORY[0x1E4F26C20]);
    uint64_t v19 = v22;
    sub_19F1DB17C();
    uint64_t v10 = (uint64_t)v7;
    sub_19F1DAB9C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v19);
    swift_willThrow();
  }
  return v10;
}

uint64_t QueryExpression.MatchResult.debugDescription.getter()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472FE8);
  sub_19F04530C();
  sub_19F1DBCCC();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "MatchResult(");
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return v1[0];
}

uint64_t sub_19F03D834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = sub_19F1DAEDC();
  uint64_t v5 = v2;
  sub_19F1DBEFC();
  sub_19F1DAEEC();
  sub_19F1DBEFC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v5;
  return result;
}

void sub_19F03D8B8(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_19F03D8C0(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
}

void (*sub_19F03D8D0(uint64_t *a1, void *a2))(void *a1)
{
  uint64_t v5 = sub_19F1DAEFC();
  *a1 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  a1[1] = v6;
  uint64_t result = (void (*)(void *))malloc(*(void *)(v6 + 64));
  a1[2] = (uint64_t)result;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*a2 < *(void *)(*(void *)v2 + 16))
  {
    (*(void (**)(void))(v7 + 16))();
    return sub_19F03D9D0;
  }
  __break(1u);
  return result;
}

void sub_19F03D9D0(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t *sub_19F03DA1C@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result < 0 || (uint64_t v4 = result[1], result = *v2, (*v2)[2] < v4))
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    a2[2] = result;
    a2[3] = v5;
    a2[4] = v6;
    *a2 = v3;
    a2[1] = v4;
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19F03DA80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = 0;
  a1[4] = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_19F03DACC()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

void sub_19F03DAE0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_19F03DAF0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    unint64_t v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19F03DB28@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_19F196918(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_19F03DB60(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result) {
    return 0;
  }
  unint64_t v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    uint64_t result = 0;
    unint64_t v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      uint64_t result = (uint64_t *)((char *)result + 1);
      if (v4 == result) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_19F03DBB8(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_19F03DBD4(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_19F03DBF0(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

void *sub_19F03DC0C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_19F03DC24(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

uint64_t sub_19F03DC3C()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472FE8);
  sub_19F04530C();
  sub_19F1DBCCC();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "MatchResult(");
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return v1[0];
}

__n128 sub_19F03DD14@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  unint64_t v3 = v1[1].n128_u64[0];
  *a1 = *v1;
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u64[1] = 0;
  return result;
}

uint64_t sub_19F03DD28()
{
  return *(void *)(*(void *)v0 + 16);
}

size_t sub_19F03DD34()
{
  size_t v1 = sub_19EF9E944(*v0, v0[1], v0[2]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}