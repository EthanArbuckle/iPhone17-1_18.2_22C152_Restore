uint64_t sub_19F03DD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_19EF9D9A4(a1, a2, a3, *v3, v3[1], v3[2]);
}

uint64_t sub_19F03DD90()
{
  return sub_19F1DC06C();
}

uint64_t sub_19F03DDB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  if (a4) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v9 = *(void *)(a5 + 16);
  swift_bridgeObjectRetain();
  LOBYTE(a2) = sub_19EE7F4A0(a1, a2, v9);
  swift_bridgeObjectRelease();
  return (a2 ^ 1) & 1;
}

void *sub_19F03DE40()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473080);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DCCAC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24)
      {
        int64_t v9 = v23 + 2;
        if (v23 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v9);
        if (!v24) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 56 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 24);
    uint64_t v19 = *(void *)(v17 + 48);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    long long v21 = *(_OWORD *)(v17 + 8);
    long long v22 = *(_OWORD *)(v17 + 32);
    *(void *)uint64_t v20 = *(void *)v17;
    *(_OWORD *)(v20 + 8) = v21;
    *(void *)(v20 + 24) = v18;
    *(_OWORD *)(v20 + 32) = v22;
    *(void *)(v20 + 48) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v13) {
    goto LABEL_28;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19F03E034()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB390A00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DCCAC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19F03E1E8()
{
  return sub_19EECB808((uint64_t *)&unk_1EB390890);
}

void *sub_19F03E1F4()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473050);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DCCAC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19F03E3A0()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472AD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DCCAC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19F03E54C()
{
  v1 = v0;
  uint64_t v2 = sub_19F1DB34C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE78);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_19F1DCCAC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    result = (void *)swift_release();
    v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_19F03E7F0()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473058);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DCCAC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v13) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27)
      {
        int64_t v9 = v26 + 2;
        if (v26 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v27 = *(void *)(v6 + 8 * v9);
        if (!v27) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 72 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 8);
    char v19 = *(unsigned char *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    uint64_t v20 = *(void *)(v17 + 32);
    char v22 = *(unsigned char *)(v17 + 40);
    uint64_t v23 = *(void *)(v17 + 64);
    uint64_t v24 = *(void *)(v4 + 48) + v16;
    long long v25 = *(_OWORD *)(v17 + 48);
    *(void *)uint64_t v24 = *(void *)v17;
    *(void *)(v24 + 8) = v18;
    *(unsigned char *)(v24 + 16) = v19;
    *(void *)(v24 + 24) = v21;
    *(void *)(v24 + 32) = v20;
    *(unsigned char *)(v24 + 40) = v22;
    *(_OWORD *)(v24 + 48) = v25;
    *(void *)(v24 + 64) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v13) {
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19F03E9F4()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473070);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DCCAC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19F03EB8C()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473068);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DCCAC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19F03ED24()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473060);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19F1DCCAC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    result = (void *)sub_19EE77E34(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_19F03EEF4()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473080);
  uint64_t v3 = sub_19F1DCCBC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  v35 = v1;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain_n();
  int64_t v10 = 0;
  uint64_t v38 = v2;
  uint64_t v39 = v4;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v40 = v10;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_21;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v37) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    int64_t v17 = v10 + 1;
    if (!v16)
    {
      int64_t v17 = v10 + 2;
      if (v10 + 2 >= v37) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v17);
      if (!v16)
      {
        uint64_t v18 = v10 + 3;
        if (v10 + 3 >= v37)
        {
LABEL_35:
          uint64_t result = swift_release_n();
          v1 = v35;
          goto LABEL_37;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v18);
        int64_t v17 = v10 + 3;
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v16 - 1) & v16;
    int64_t v40 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_21:
    long long v19 = (uint64_t *)(*(void *)(v2 + 48) + 56 * v14);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = v19[3];
    uint64_t v24 = v19[4];
    uint64_t v25 = v19[5];
    uint64_t v26 = v19[6];
    sub_19F1DD72C();
    uint64_t v41 = v24;
    if (v20)
    {
      sub_19F1DD74C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v27 = v21;
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = v21;
      sub_19F1DD74C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
    sub_19F1DD74C();
    if (v26)
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_19F1DD78C();
    uint64_t v4 = v39;
    uint64_t v28 = -1 << *(unsigned char *)(v39 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v8 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v11 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v39 + 48) + 56 * v11);
    *unint64_t v12 = v27;
    v12[1] = v20;
    v12[2] = v22;
    v12[3] = v23;
    int64_t v10 = v40;
    v12[4] = v41;
    v12[5] = v25;
    v12[6] = v26;
    ++*(void *)(v39 + 16);
    uint64_t v2 = v38;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v37) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_19F03F27C()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB390A00);
  uint64_t v3 = sub_19F1DCCBC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_32:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain_n();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_21;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v29) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_30;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v18 = v16 + 2;
        if (v18 >= v29)
        {
LABEL_30:
          uint64_t result = swift_release_n();
          v1 = v0;
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v18);
        int64_t v11 = v18;
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_21:
    long long v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_19F1DD72C();
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_19F03F508()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473050);
  uint64_t result = sub_19F1DCCBC();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_19F1DD72C();
    sub_19F1DD73C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_retain();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_19F03F78C()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472AD8);
  uint64_t v3 = sub_19F1DCCBC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  unint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v9) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_7:
    uint64_t v15 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_19F1DD72C();
    swift_bridgeObjectRetain();
    sub_19EF5B5D4((uint64_t)v19, v15);
    sub_19F1DD78C();
    unint64_t result = sub_19F1DCC3C();
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(*(void *)(v4 + 48) + 8 * result) = v15;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    v1 = v0;
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_19F03F9A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_19F1DCCBC();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v13);
      if (!v19)
      {
        int64_t v13 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v13);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_24:
    unint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    sub_19F1DD72C();
    swift_bridgeObjectRetain_n();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_19F1DD78C();
    uint64_t v24 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v6 + 48) + 16 * v14);
    *uint64_t v15 = v22;
    v15[1] = v23;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v13 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v13 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v13 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v13);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_19F03FC58()
{
  v1 = v0;
  uint64_t v2 = sub_19F1DB34C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE78);
  uint64_t v7 = sub_19F1DCCBC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_19F045728((unint64_t *)&qword_1EB392868, MEMORY[0x1E4F276F0]);
    uint64_t result = sub_19F1DBC8C();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_19F040008()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473058);
  uint64_t v2 = sub_19F1DCCBC();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    *uint64_t v25 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v26 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v27 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v28 = v2 + 56;
  uint64_t v29 = v1;
  unint64_t result = swift_retain();
  for (int64_t i = 0; ; int64_t i = v32)
  {
    if (v6)
    {
      uint64_t v31 = (v6 - 1) & v6;
      int64_t v32 = i;
      unint64_t v9 = __clz(__rbit64(v6)) | (i << 6);
      uint64_t v10 = v29;
      goto LABEL_7;
    }
    int64_t v21 = i + 1;
    uint64_t v10 = v29;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v21 >= v27) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    int64_t v23 = i + 1;
    if (!v22)
    {
      int64_t v23 = i + 2;
      if (i + 2 >= v27) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = i + 3;
        if (i + 3 >= v27) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v23);
        if (!v22) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v31 = (v22 - 1) & v22;
    int64_t v32 = v23;
    unint64_t v9 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_7:
    uint64_t v11 = *(void *)(v10 + 48) + 72 * v9;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *(void *)(v11 + 8);
    char v14 = *(unsigned char *)(v11 + 16);
    uint64_t v15 = *(void *)(v11 + 24);
    uint64_t v16 = *(void *)(v11 + 32);
    char v17 = *(unsigned char *)(v11 + 40);
    uint64_t v18 = *(void *)(v11 + 48);
    uint64_t v30 = *(void *)(v11 + 56);
    uint64_t v19 = *(void *)(v11 + 64);
    sub_19F1DD72C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19F157928();
    sub_19F1DD78C();
    unint64_t result = sub_19F1DCC3C();
    *(void *)(v28 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = *(void *)(v3 + 48) + 72 * result;
    *(void *)uint64_t v20 = v12;
    *(void *)(v20 + 8) = v13;
    *(unsigned char *)(v20 + 16) = v14;
    *(void *)(v20 + 24) = v15;
    *(void *)(v20 + 32) = v16;
    *(unsigned char *)(v20 + 40) = v17;
    unint64_t v6 = v31;
    *(void *)(v20 + 48) = v18;
    *(void *)(v20 + 56) = v30;
    *(void *)(v20 + 64) = v19;
    ++*(void *)(v3 + 16);
  }
  uint64_t v24 = i + 4;
  if (i + 4 >= v27)
  {
LABEL_23:
    swift_release();
    goto LABEL_24;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v24);
  if (v22)
  {
    int64_t v23 = i + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v27) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_19F0402E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473070);
  uint64_t result = sub_19F1DCCBC();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_19F1DD72C();
    sub_19F1DD73C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_19F04055C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473068);
  uint64_t result = sub_19F1DCCBC();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v10) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_19F1DD72C();
    if (v18) {
      sub_19F1DD73C();
    }
    sub_19F1DD73C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_35:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_19F0407F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473060);
  uint64_t v3 = sub_19F1DCCBC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_24:
    sub_19EE77E34(*(void *)(v2 + 48) + 40 * v18, (uint64_t)v29);
    uint64_t result = sub_19F1DCC4C();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
    long long v15 = v29[0];
    long long v16 = v29[1];
    *(void *)(v14 + 32) = v30;
    *(_OWORD *)uint64_t v14 = v15;
    *(_OWORD *)(v14 + 16) = v16;
    ++*(void *)(v4 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_19F040A84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473080);
  uint64_t v3 = sub_19F1DCCBC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_41;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  int64_t v36 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  uint64_t v34 = v1;
  int64_t v35 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v37 = v2;
  uint64_t v38 = v4;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v15 >= v35) {
      break;
    }
    long long v16 = v36;
    unint64_t v17 = v36[v15];
    ++v10;
    if (!v17)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v35) {
        goto LABEL_35;
      }
      unint64_t v17 = v36[v10];
      if (!v17)
      {
        int64_t v18 = v15 + 2;
        if (v18 >= v35)
        {
LABEL_35:
          swift_release();
          uint64_t v1 = v34;
          goto LABEL_37;
        }
        unint64_t v17 = v36[v18];
        if (!v17)
        {
          while (1)
          {
            int64_t v10 = v18 + 1;
            if (__OFADD__(v18, 1)) {
              goto LABEL_43;
            }
            if (v10 >= v35) {
              goto LABEL_35;
            }
            unint64_t v17 = v36[v10];
            ++v18;
            if (v17) {
              goto LABEL_21;
            }
          }
        }
        int64_t v10 = v18;
      }
    }
LABEL_21:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_22:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 56 * v14);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = v19[3];
    uint64_t v24 = v19[5];
    uint64_t v39 = v19[4];
    uint64_t v25 = v19[6];
    sub_19F1DD72C();
    sub_19F1DD74C();
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
    sub_19F1DD74C();
    if (v25)
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_19F1DD78C();
    uint64_t v4 = v38;
    uint64_t v26 = -1 << *(unsigned char *)(v38 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v8 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v11 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    int64_t v12 = (void *)(*(void *)(v38 + 48) + 56 * v11);
    *int64_t v12 = v21;
    v12[1] = v20;
    v12[2] = v22;
    v12[3] = v23;
    v12[4] = v39;
    v12[5] = v24;
    v12[6] = v25;
    ++*(void *)(v38 + 16);
    uint64_t v2 = v37;
  }
  swift_release();
  uint64_t v1 = v34;
  long long v16 = v36;
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v2 + 32);
  if (v33 > 63) {
    bzero(v16, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v16 = -1 << v33;
  }
  *(void *)(v2 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_19F040E14()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB390A00);
  uint64_t v3 = sub_19F1DCCBC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v31 = v0;
  uint64_t v32 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_22;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v16 >= v8) {
      break;
    }
    unint64_t v17 = (void *)(v2 + 56);
    unint64_t v18 = *(void *)(v32 + 8 * v16);
    ++v11;
    if (!v18)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_31;
      }
      unint64_t v18 = *(void *)(v32 + 8 * v11);
      if (!v18)
      {
        int64_t v19 = v16 + 2;
        if (v19 >= v8)
        {
LABEL_31:
          swift_release();
          uint64_t v1 = v31;
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v32 + 8 * v19);
        if (!v18)
        {
          while (1)
          {
            int64_t v11 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              goto LABEL_39;
            }
            if (v11 >= v8) {
              goto LABEL_31;
            }
            unint64_t v18 = *(void *)(v32 + 8 * v11);
            ++v19;
            if (v18) {
              goto LABEL_21;
            }
          }
        }
        int64_t v11 = v19;
      }
    }
LABEL_21:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_22:
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    sub_19F1DD72C();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v9 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v21;
    v13[1] = v22;
    ++*(void *)(v4 + 16);
  }
  swift_release();
  uint64_t v1 = v31;
  unint64_t v17 = (void *)(v2 + 56);
LABEL_33:
  uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
  if (v30 > 63) {
    bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v17 = -1 << v30;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_19F0410DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473050);
  uint64_t result = sub_19F1DCCBC();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_19F1DD72C();
      sub_19F1DD73C();
      uint64_t result = sub_19F1DD78C();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_19F041388()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472AD8);
  uint64_t v3 = sub_19F1DCCBC();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    unint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_23;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_23;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_23;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_23:
                swift_release();
                uint64_t v19 = 1 << *(unsigned char *)(v2 + 32);
                if (v19 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v19;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_29;
                  }
                  if (v12 >= v9) {
                    goto LABEL_23;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_22:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v14 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v15 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_19F1DD72C();
      sub_19EF5B5D4((uint64_t)v20, v15);
      sub_19F1DD78C();
      unint64_t result = sub_19F1DCC3C();
      *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(void *)(*(void *)(v4 + 48) + 8 * result) = v15;
      ++*(void *)(v4 + 16);
    }
  }
  unint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_19F0415D0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_19F1DB34C();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE78);
  uint64_t v5 = sub_19F1DCCBC();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    int64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_19F045728((unint64_t *)&qword_1EB392868, MEMORY[0x1E4F276F0]);
      uint64_t result = sub_19F1DBC8C();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

unint64_t sub_19F0419CC()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473058);
  uint64_t v2 = sub_19F1DCCBC();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v27 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v28 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v29 = v2 + 56;
    uint64_t v30 = v1;
    unint64_t result = swift_retain();
    for (int64_t i = 0; ; int64_t i = v33)
    {
      if (v6)
      {
        uint64_t v32 = (v6 - 1) & v6;
        int64_t v33 = i;
        unint64_t v9 = __clz(__rbit64(v6)) | (i << 6);
        uint64_t v10 = v30;
      }
      else
      {
        int64_t v21 = i + 1;
        uint64_t v10 = v30;
        if (__OFADD__(i, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v21 >= v28) {
          goto LABEL_23;
        }
        unint64_t v22 = v27[v21];
        int64_t v23 = i + 1;
        if (!v22)
        {
          int64_t v23 = i + 2;
          if (i + 2 >= v28) {
            goto LABEL_23;
          }
          unint64_t v22 = v27[v23];
          if (!v22)
          {
            int64_t v23 = i + 3;
            if (i + 3 >= v28) {
              goto LABEL_23;
            }
            unint64_t v22 = v27[v23];
            if (!v22)
            {
              uint64_t v24 = i + 4;
              if (i + 4 >= v28)
              {
LABEL_23:
                swift_release();
                uint64_t v25 = 1 << *(unsigned char *)(v30 + 32);
                if (v25 > 63) {
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v27 = -1 << v25;
                }
                *(void *)(v30 + 16) = 0;
                break;
              }
              unint64_t v22 = v27[v24];
              if (!v22)
              {
                while (1)
                {
                  int64_t v23 = v24 + 1;
                  if (__OFADD__(v24, 1)) {
                    goto LABEL_29;
                  }
                  if (v23 >= v28) {
                    goto LABEL_23;
                  }
                  unint64_t v22 = v27[v23];
                  ++v24;
                  if (v22) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v23 = i + 4;
            }
          }
        }
LABEL_22:
        uint64_t v32 = (v22 - 1) & v22;
        int64_t v33 = v23;
        unint64_t v9 = __clz(__rbit64(v22)) + (v23 << 6);
      }
      uint64_t v11 = *(void *)(v10 + 48) + 72 * v9;
      uint64_t v13 = *(void *)v11;
      uint64_t v12 = *(void *)(v11 + 8);
      char v14 = *(unsigned char *)(v11 + 16);
      uint64_t v15 = *(void *)(v11 + 24);
      uint64_t v16 = *(void *)(v11 + 32);
      char v17 = *(unsigned char *)(v11 + 40);
      uint64_t v18 = *(void *)(v11 + 56);
      uint64_t v31 = *(void *)(v11 + 48);
      uint64_t v19 = *(void *)(v11 + 64);
      sub_19F1DD72C();
      sub_19F157928();
      sub_19F1DD78C();
      unint64_t result = sub_19F1DCC3C();
      *(void *)(v29 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v20 = *(void *)(v3 + 48) + 72 * result;
      *(void *)uint64_t v20 = v13;
      *(void *)(v20 + 8) = v12;
      *(unsigned char *)(v20 + 16) = v14;
      *(void *)(v20 + 24) = v15;
      *(void *)(v20 + 32) = v16;
      *(unsigned char *)(v20 + 40) = v17;
      unint64_t v6 = v32;
      *(void *)(v20 + 48) = v31;
      *(void *)(v20 + 56) = v18;
      *(void *)(v20 + 64) = v19;
      ++*(void *)(v3 + 16);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v26 = v3;
  return result;
}

uint64_t sub_19F041CC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473070);
  uint64_t result = sub_19F1DCCBC();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_19F1DD72C();
      sub_19F1DD73C();
      uint64_t result = sub_19F1DD78C();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_19F041F70()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473068);
  uint64_t result = sub_19F1DCCBC();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_35;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_35;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_35;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_35:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_41;
                  }
                  if (v5 >= v10) {
                    goto LABEL_35;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_19F1DD72C();
      if (v18) {
        sub_19F1DD73C();
      }
      sub_19F1DD73C();
      uint64_t result = sub_19F1DD78C();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_19F042234()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473060);
  uint64_t v3 = sub_19F1DCCBC();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v15 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v16 = v15 | (v12 << 6);
      }
      else
      {
        int64_t v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v9) {
          goto LABEL_33;
        }
        unint64_t v18 = v6[v17];
        ++v12;
        if (!v18)
        {
          int64_t v12 = v17 + 1;
          if (v17 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v18 = v6[v12];
          if (!v18)
          {
            int64_t v12 = v17 + 2;
            if (v17 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v18 = v6[v12];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v18 = v6[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v12 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v6[v12];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      uint64_t v20 = *(void *)(v2 + 48) + 40 * v16;
      long long v29 = *(_OWORD *)v20;
      long long v30 = *(_OWORD *)(v20 + 16);
      uint64_t v31 = *(void *)(v20 + 32);
      uint64_t result = sub_19F1DCC4C();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
      *(_OWORD *)uint64_t v14 = v29;
      *(_OWORD *)(v14 + 16) = v30;
      *(void *)(v14 + 32) = v31;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_19F042500(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *v2;
  sub_19F1DD72C();
  uint64_t v5 = *a2;
  uint64_t v40 = a2[1];
  sub_19F1DD74C();
  swift_bridgeObjectRetain();
  if (v40)
  {
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  sub_19F1DD74C();
  if (v9)
  {
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = (uint64_t)a2;
  uint64_t v10 = sub_19F1DD78C();
  uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v4 + 56;
  if ((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v38 = v5;
    uint64_t v39 = v9;
    uint64_t v37 = v8;
    uint64_t v14 = ~v11;
    uint64_t v15 = *(void *)(v4 + 48);
    uint64_t v16 = v40;
    do
    {
      int64_t v17 = (uint64_t *)(v15 + 56 * v12);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      uint64_t v21 = v17[5];
      uint64_t v20 = v17[6];
      if (v17[2] != v6 || v17[3] != v7)
      {
        char v23 = sub_19F1DD44C();
        uint64_t v16 = v40;
        if ((v23 & 1) == 0) {
          goto LABEL_8;
        }
      }
      if (v19)
      {
        if (!v16) {
          goto LABEL_8;
        }
        if (v18 != v38 || v19 != v16)
        {
          char v25 = sub_19F1DD44C();
          uint64_t v16 = v40;
          if ((v25 & 1) == 0) {
            goto LABEL_8;
          }
        }
      }
      else if (v16)
      {
        goto LABEL_8;
      }
      if (v20)
      {
        if (v39)
        {
          BOOL v26 = v21 == v37 && v20 == v39;
          if (v26 || (v27 = sub_19F1DD44C(), uint64_t v16 = v40, (v27 & 1) != 0))
          {
LABEL_30:
            swift_bridgeObjectRelease();
            sub_19EE89AC0(v35);
            uint64_t v28 = *(void *)(*v34 + 48) + 56 * v12;
            uint64_t v29 = *(void *)(v28 + 24);
            uint64_t v30 = *(void *)(v28 + 48);
            *(void *)a1 = *(void *)v28;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(v28 + 8);
            *(void *)(a1 + 24) = v29;
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(v28 + 32);
            *(void *)(a1 + 48) = v30;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            return 0;
          }
        }
      }
      else if (!v39)
      {
        goto LABEL_30;
      }
LABEL_8:
      unint64_t v12 = (v12 + 1) & v14;
    }
    while (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = *v34;
  *uint64_t v34 = 0x8000000000000000;
  sub_19EE89A74(v35);
  sub_19F043904(v35, v12, isUniquelyReferenced_nonNull_native);
  *uint64_t v34 = v41;
  swift_bridgeObjectRelease();
  long long v33 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v35;
  *(_OWORD *)(a1 + 16) = v33;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v35 + 32);
  *(void *)(a1 + 48) = *(void *)(v35 + 48);
  return 1;
}

uint64_t sub_19F04282C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_19F1DD72C();
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  uint64_t v8 = sub_19F1DD78C();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_19F1DD44C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_19F1DD44C() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_19F043BD8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_19F0429DC(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_19F1DD72C();
  sub_19F1DD73C();
  uint64_t v6 = sub_19F1DD78C();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = *(void *)(v5 + 48);
    if (*(void *)(v9 + 8 * v8) == a2)
    {
LABEL_6:
      swift_release();
      *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
      swift_retain();
      return 0;
    }
    uint64_t v10 = ~v7;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      if (*(void *)(v9 + 8 * v8) == a2) {
        goto LABEL_6;
      }
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  uint64_t v13 = swift_retain();
  sub_19F043D74(v13, v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v14;
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_19F042B14(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_19F1DD72C();
  swift_bridgeObjectRetain();
  sub_19EF5B5D4((uint64_t)v19, a2);
  uint64_t v6 = sub_19F1DD78C();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_19EF6990C(v9, a2);
    char v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v12 = ~v7;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v12;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      uint64_t v13 = swift_bridgeObjectRetain();
      sub_19EF6990C(v13, a2);
      char v15 = v14;
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19[0] = *v2;
  *uint64_t v2 = 0x8000000000000000;
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_19F043EC8(v18, v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v19[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_19F042CA8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_19F045728((unint64_t *)&qword_1EB392868, MEMORY[0x1E4F276F0]);
  swift_bridgeObjectRetain();
  long long v33 = a2;
  uint64_t v11 = sub_19F1DBC8C();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    char v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_19F045728((unint64_t *)&qword_1EB392870, MEMORY[0x1E4F276F0]);
      char v21 = sub_19F1DBD3C();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      char v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_19F044054((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_19F042FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_19F1DD72C();
  swift_bridgeObjectRetain();
  sub_19F157928();
  uint64_t v5 = sub_19F1DD78C();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v65 = v4 + 56;
  uint64_t v55 = a2;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_93:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v67 = *v54;
    uint64_t *v54 = 0x8000000000000000;
    sub_19EFAB254(v55);
    sub_19F0442F4(v55, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v54 = v67;
    swift_bridgeObjectRelease();
    long long v42 = *(_OWORD *)(v55 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v55 + 32);
    *(_OWORD *)(a1 + 48) = v42;
    *(void *)(a1 + 64) = *(void *)(v55 + 64);
    long long v43 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v55;
    *(_OWORD *)(a1 + 16) = v43;
    return 1;
  }
  uint64_t v64 = ~v6;
  uint64_t v8 = *(void *)a2;
  uint64_t v66 = *(void *)(a2 + 8);
  v62 = *(void **)(a2 + 24);
  double v9 = *(double *)(a2 + 32);
  char v58 = *(unsigned char *)(a2 + 40);
  v57 = *(void **)(a2 + 48);
  uint64_t v52 = *(void *)(a2 + 56);
  uint64_t v53 = *(void *)(a2 + 64);
  if (*(unsigned char *)(a2 + 16)) {
    uint64_t v10 = 0x6469746E65696C63;
  }
  else {
    uint64_t v10 = 0x646972657375;
  }
  unint64_t v11 = 0xE600000000000000;
  if (*(unsigned char *)(a2 + 16)) {
    unint64_t v11 = 0xE800000000000000;
  }
  unint64_t v60 = v11;
  uint64_t v61 = v10;
  uint64_t v59 = *(void *)a2;
  while (1)
  {
    uint64_t v12 = *(void *)(v4 + 48) + 72 * v7;
    int v13 = *(unsigned __int8 *)(v12 + 16);
    char v14 = *(void **)(v12 + 24);
    double v15 = *(double *)(v12 + 32);
    char v16 = *(unsigned char *)(v12 + 40);
    uint64_t v17 = *(void **)(v12 + 48);
    uint64_t v63 = *(void *)(v12 + 56);
    uint64_t v18 = *(void *)(v12 + 64);
    BOOL v19 = *(void *)v12 == v8 && *(void *)(v12 + 8) == v66;
    if (!v19 && (sub_19F1DD44C() & 1) == 0) {
      goto LABEL_10;
    }
    uint64_t v20 = v4;
    if (v13) {
      uint64_t v21 = 0x6469746E65696C63;
    }
    else {
      uint64_t v21 = 0x646972657375;
    }
    if (v13) {
      unint64_t v22 = 0xE800000000000000;
    }
    else {
      unint64_t v22 = 0xE600000000000000;
    }
    if (v21 == v61 && v22 == v60)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v24 = sub_19F1DD44C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t v25 = v14[2];
    BOOL v26 = v62;
    if (v25 != v62[2]) {
      goto LABEL_8;
    }
    if (v25) {
      BOOL v27 = v14 == v62;
    }
    else {
      BOOL v27 = 1;
    }
    if (!v27)
    {
      if (v14[4] != v62[4] || v14[5] != v62[5])
      {
        uint64_t v4 = v20;
        char v32 = sub_19F1DD44C();
        BOOL v26 = v62;
        if ((v32 & 1) == 0) {
          goto LABEL_89;
        }
      }
      if (v25 != 1)
      {
        if (v14[6] != v26[6] || v14[7] != v26[7])
        {
          uint64_t v4 = v20;
          char v34 = sub_19F1DD44C();
          BOOL v26 = v62;
          if ((v34 & 1) == 0) {
            goto LABEL_89;
          }
        }
        uint64_t v35 = v25 - 2;
        if (v35)
        {
          uint64_t v36 = 0;
          while (1)
          {
            if (v14[v36 + 8] != v26[v36 + 8] || v14[v36 + 9] != v26[v36 + 9])
            {
              char v38 = sub_19F1DD44C();
              BOOL v26 = v62;
              if ((v38 & 1) == 0) {
                break;
              }
            }
            v36 += 2;
            if (!--v35) {
              goto LABEL_35;
            }
          }
LABEL_8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v4 = v20;
LABEL_9:
          uint64_t v8 = v59;
          goto LABEL_10;
        }
      }
    }
LABEL_35:
    uint64_t v4 = v20;
    if (v16)
    {
      if ((v58 & 1) == 0) {
        goto LABEL_89;
      }
    }
    else if ((v58 & 1) != 0 || v15 != v9)
    {
      goto LABEL_89;
    }
    if (v17)
    {
      if (!v57) {
        goto LABEL_89;
      }
      uint64_t v28 = v17[2];
      if (v28 != v57[2]) {
        goto LABEL_89;
      }
      if (v28 && v17 != v57)
      {
        if ((v17[4] != v57[4] || v17[5] != v57[5]) && (sub_19F1DD44C() & 1) == 0) {
          goto LABEL_8;
        }
        if (v28 != 1)
        {
          if ((v17[6] != v57[6] || v17[7] != v57[7]) && (sub_19F1DD44C() & 1) == 0) {
            goto LABEL_8;
          }
          uint64_t v29 = v28 - 2;
          if (v29)
          {
            uint64_t v30 = 0;
            do
            {
              BOOL v39 = v17[v30 + 8] == v57[v30 + 8] && v17[v30 + 9] == v57[v30 + 9];
              if (!v39 && (sub_19F1DD44C() & 1) == 0) {
                goto LABEL_8;
              }
              v30 += 2;
            }
            while (--v29);
          }
        }
      }
    }
    else if (v57)
    {
      goto LABEL_8;
    }
    uint64_t v4 = v20;
    if (!v18)
    {
      if (!v53) {
        break;
      }
LABEL_89:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    if (!v53) {
      goto LABEL_89;
    }
    uint64_t v8 = v59;
    if (v63 == v52 && v18 == v53) {
      break;
    }
    char v40 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v40) {
      goto LABEL_95;
    }
LABEL_10:
    unint64_t v7 = (v7 + 1) & v64;
    if (((*(void *)(v65 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      goto LABEL_93;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_95:
  swift_bridgeObjectRelease();
  sub_19F0456D0(a2);
  uint64_t v45 = *(void *)(*v54 + 48) + 72 * v7;
  uint64_t v46 = *(void *)(v45 + 8);
  char v47 = *(unsigned char *)(v45 + 16);
  uint64_t v49 = *(void *)(v45 + 24);
  uint64_t v48 = *(void *)(v45 + 32);
  char v50 = *(unsigned char *)(v45 + 40);
  uint64_t v51 = *(void *)(v45 + 64);
  *(void *)a1 = *(void *)v45;
  *(void *)(a1 + 8) = v46;
  *(unsigned char *)(a1 + 16) = v47;
  *(void *)(a1 + 24) = v49;
  *(void *)(a1 + 32) = v48;
  *(unsigned char *)(a1 + 40) = v50;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v45 + 48);
  *(void *)(a1 + 64) = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_19F043668(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_19F1DD72C();
  sub_19F1DD73C();
  uint64_t v6 = sub_19F1DD78C();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_19F0448D4(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_19F043788(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_19F1DCC4C();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      sub_19EE77E34(*(void *)(v6 + 48) + 40 * v9, (uint64_t)v16);
      char v11 = MEMORY[0x19F3C6F50](v16, a2);
      sub_19EE7760C((uint64_t)v16);
      if (v11) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_19EE7760C(a2);
    sub_19EE77E34(*(void *)(*v3 + 48) + 40 * v9, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE77E34(a2, (uint64_t)v16);
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_19F044A24((uint64_t)v16, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return 1;
  }
}

uint64_t sub_19F043904(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = (uint64_t *)result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  uint64_t v34 = result;
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_38;
  }
  if (a3)
  {
    sub_19F040A84();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_19F03DE40();
      goto LABEL_38;
    }
    sub_19F03EEF4();
  }
  uint64_t v8 = *v3;
  sub_19F1DD72C();
  uint64_t v9 = *v5;
  uint64_t v38 = v5[1];
  sub_19F1DD74C();
  if (v38)
  {
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v5[2];
  uint64_t v11 = v5[3];
  uint64_t v12 = v5[5];
  uint64_t v13 = v5[6];
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  sub_19F1DD74C();
  if (v13)
  {
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_19F1DD78C();
  uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v14;
  uint64_t v15 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v36 = v9;
    uint64_t v37 = v13;
    uint64_t v35 = v12;
    uint64_t v16 = ~v14;
    uint64_t v17 = *(void *)(v8 + 48);
    uint64_t v18 = v38;
    do
    {
      BOOL v19 = (uint64_t *)(v17 + 56 * a2);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      uint64_t result = v19[2];
      uint64_t v23 = v19[5];
      uint64_t v22 = v19[6];
      if (result != v10 || v19[3] != v11)
      {
        uint64_t result = sub_19F1DD44C();
        uint64_t v18 = v38;
        if ((result & 1) == 0) {
          goto LABEL_15;
        }
      }
      if (v20)
      {
        if (!v18) {
          goto LABEL_15;
        }
        if (v21 != v36 || v20 != v18)
        {
          uint64_t result = sub_19F1DD44C();
          uint64_t v18 = v38;
          if ((result & 1) == 0) {
            goto LABEL_15;
          }
        }
      }
      else if (v18)
      {
        goto LABEL_15;
      }
      if (v22)
      {
        if (v37)
        {
          BOOL v26 = v23 == v35 && v22 == v37;
          if (v26 || (result = sub_19F1DD44C(), uint64_t v18 = v38, (result & 1) != 0))
          {
LABEL_37:
            uint64_t result = sub_19F1DD64C();
            __break(1u);
            break;
          }
        }
      }
      else if (!v37)
      {
        goto LABEL_37;
      }
LABEL_15:
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_38:
  uint64_t v27 = *v33;
  *(void *)(*v33 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v28 = *(void *)(v27 + 48) + 56 * a2;
  long long v29 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v34;
  *(_OWORD *)(v28 + 16) = v29;
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v34 + 32);
  *(void *)(v28 + 48) = *(void *)(v34 + 48);
  uint64_t v30 = *(void *)(v27 + 16);
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31) {
    __break(1u);
  }
  else {
    *(void *)(v27 + 16) = v32;
  }
  return result;
}

uint64_t sub_19F043BD8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_19F040E14();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_19F03E034();
      goto LABEL_22;
    }
    sub_19F03F27C();
  }
  uint64_t v11 = *v4;
  sub_19F1DD72C();
  sub_19F1DBE9C();
  uint64_t result = sub_19F1DD78C();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_19F1DD44C(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_19F1DD64C();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_19F1DD44C();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_19F043D74(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_19F0410DC();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_19F03E1F4();
      goto LABEL_14;
    }
    sub_19F03F508();
  }
  uint64_t v8 = *v3;
  sub_19F1DD72C();
  sub_19F1DD73C();
  uint64_t result = sub_19F1DD78C();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472660);
      uint64_t result = sub_19F1DD64C();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_19F043EC8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_19F041388();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_19F03E3A0();
      goto LABEL_14;
    }
    sub_19F03F78C();
  }
  uint64_t v8 = *v3;
  sub_19F1DD72C();
  sub_19EF5B5D4((uint64_t)v21, v5);
  uint64_t result = sub_19F1DD78C();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    sub_19EF6990C(v10, v5);
    char v12 = v11;
    uint64_t result = swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_13:
      uint64_t result = sub_19F1DD64C();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v14 = swift_bridgeObjectRetain();
        sub_19EF6990C(v14, v5);
        char v16 = v15;
        uint64_t result = swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = v5;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
  return result;
}

uint64_t sub_19F044054(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  long long v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_19F0415D0();
  }
  else
  {
    if (v12 > v11)
    {
      sub_19F03E54C();
      goto LABEL_12;
    }
    sub_19F03FC58();
  }
  uint64_t v13 = *v3;
  sub_19F045728((unint64_t *)&qword_1EB392868, MEMORY[0x1E4F276F0]);
  uint64_t v14 = sub_19F1DBC8C();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_19F045728((unint64_t *)&qword_1EB392870, MEMORY[0x1E4F276F0]);
      char v22 = sub_19F1DBD3C();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_19F1DD64C();
  __break(1u);
  return result;
}

uint64_t sub_19F0442F4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  uint64_t v53 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_19F0419CC();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_19F03E7F0();
        goto LABEL_99;
      }
      sub_19F040008();
    }
    uint64_t v8 = *v3;
    sub_19F1DD72C();
    sub_19F157928();
    uint64_t result = sub_19F1DD78C();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    uint64_t v58 = v8 + 56;
    uint64_t v59 = v8;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v57 = ~v9;
      uint64_t v60 = *(void *)(v5 + 8);
      uint64_t v61 = *(void *)v5;
      v56 = *(void **)(v5 + 24);
      double v10 = *(double *)(v5 + 32);
      char v54 = *(unsigned char *)(v5 + 40);
      uint64_t v51 = *(void **)(v5 + 48);
      uint64_t v49 = *(void *)(v5 + 56);
      uint64_t v50 = *(void *)(v5 + 64);
      if (*(unsigned char *)(v5 + 16)) {
        uint64_t v11 = 0x6469746E65696C63;
      }
      else {
        uint64_t v11 = 0x646972657375;
      }
      uint64_t v55 = v11;
      if (*(unsigned char *)(v5 + 16)) {
        unint64_t v12 = 0xE800000000000000;
      }
      else {
        unint64_t v12 = 0xE600000000000000;
      }
      while (1)
      {
        uint64_t v13 = *(void *)(v59 + 48) + 72 * a2;
        int v14 = *(unsigned __int8 *)(v13 + 16);
        uint64_t v15 = *(void **)(v13 + 24);
        double v16 = *(double *)(v13 + 32);
        char v17 = *(unsigned char *)(v13 + 40);
        uint64_t v19 = *(void **)(v13 + 48);
        uint64_t v18 = *(void *)(v13 + 56);
        uint64_t v20 = *(void *)(v13 + 64);
        if (*(void *)v13 != v61 || *(void *)(v13 + 8) != v60)
        {
          uint64_t result = sub_19F1DD44C();
          if ((result & 1) == 0) {
            goto LABEL_17;
          }
        }
        if (v14) {
          uint64_t v22 = 0x6469746E65696C63;
        }
        else {
          uint64_t v22 = 0x646972657375;
        }
        if (v14) {
          unint64_t v23 = 0xE800000000000000;
        }
        else {
          unint64_t v23 = 0xE600000000000000;
        }
        if (v22 == v55 && v23 == v12)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v25 = sub_19F1DD44C();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v25 & 1) == 0) {
            goto LABEL_15;
          }
        }
        uint64_t v26 = v15[2];
        BOOL v27 = v56;
        if (v26 != v56[2]) {
          goto LABEL_15;
        }
        if (v26 && v15 != v56)
        {
          if (v15[4] != v56[4] || v15[5] != v56[5])
          {
            char v33 = sub_19F1DD44C();
            BOOL v27 = v56;
            if ((v33 & 1) == 0) {
              goto LABEL_15;
            }
          }
          if (v26 != 1)
          {
            if (v15[6] != v27[6] || v15[7] != v27[7])
            {
              char v35 = sub_19F1DD44C();
              BOOL v27 = v56;
              if ((v35 & 1) == 0) {
                goto LABEL_15;
              }
            }
            uint64_t v36 = v26 - 2;
            if (v36) {
              break;
            }
          }
        }
LABEL_42:
        if (v17)
        {
          if ((v54 & 1) == 0) {
            goto LABEL_15;
          }
        }
        else if ((v54 & 1) != 0 || v16 != v10)
        {
          goto LABEL_15;
        }
        if (v19)
        {
          if (!v51) {
            goto LABEL_15;
          }
          uint64_t v29 = v19[2];
          if (v29 != v51[2]) {
            goto LABEL_15;
          }
          if (v29 && v19 != v51)
          {
            if ((v19[4] != v51[4] || v19[5] != v51[5]) && (sub_19F1DD44C() & 1) == 0) {
              goto LABEL_15;
            }
            if (v29 != 1)
            {
              if ((v19[6] != v51[6] || v19[7] != v51[7]) && (sub_19F1DD44C() & 1) == 0) {
                goto LABEL_15;
              }
              uint64_t v30 = v29 - 2;
              if (v30)
              {
                uint64_t v31 = 0;
                do
                {
                  BOOL v40 = v19[v31 + 8] == v51[v31 + 8] && v19[v31 + 9] == v51[v31 + 9];
                  if (!v40 && (sub_19F1DD44C() & 1) == 0) {
                    goto LABEL_15;
                  }
                  v31 += 2;
                }
                while (--v30);
              }
            }
          }
        }
        else if (v51)
        {
          goto LABEL_15;
        }
        if (!v20)
        {
          swift_bridgeObjectRelease();
          if (!v50) {
            goto LABEL_103;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        if (!v50) {
          goto LABEL_15;
        }
        if (v18 == v49 && v20 == v50) {
          goto LABEL_102;
        }
        char v41 = sub_19F1DD44C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v41) {
          goto LABEL_104;
        }
LABEL_17:
        a2 = (a2 + 1) & v57;
        if (((*(void *)(v58 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_99;
        }
      }
      uint64_t v37 = 0;
      while (1)
      {
        if (v15[v37 + 8] != v27[v37 + 8] || v15[v37 + 9] != v27[v37 + 9])
        {
          char v39 = sub_19F1DD44C();
          BOOL v27 = v56;
          if ((v39 & 1) == 0) {
            break;
          }
        }
        v37 += 2;
        if (!--v36) {
          goto LABEL_42;
        }
      }
LABEL_15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_16:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
LABEL_99:
  uint64_t v42 = *v52;
  *(void *)(*v52 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v43 = *(void *)(v42 + 48) + 72 * a2;
  *(void *)(v43 + 64) = *(void *)(v53 + 64);
  long long v44 = *(_OWORD *)(v53 + 48);
  *(_OWORD *)(v43 + 32) = *(_OWORD *)(v53 + 32);
  *(_OWORD *)(v43 + 48) = v44;
  long long v45 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v53;
  *(_OWORD *)(v43 + 16) = v45;
  uint64_t v46 = *(void *)(v42 + 16);
  BOOL v47 = __OFADD__(v46, 1);
  uint64_t v48 = v46 + 1;
  if (v47)
  {
    __break(1u);
    __break(1u);
LABEL_102:
    swift_bridgeObjectRelease();
LABEL_103:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_104:
    uint64_t result = sub_19F1DD64C();
    __break(1u);
  }
  else
  {
    *(void *)(v42 + 16) = v48;
  }
  return result;
}

uint64_t sub_19F0448D4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_19F041CC4();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_19F03E9F4();
      goto LABEL_14;
    }
    sub_19F0402E0();
  }
  uint64_t v8 = *v3;
  sub_19F1DD72C();
  sub_19F1DD73C();
  uint64_t result = sub_19F1DD78C();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_19F1DD64C();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_19F044A24(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_19F042234();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_19F03ED24();
      goto LABEL_12;
    }
    sub_19F0407F0();
  }
  uint64_t v9 = *v3;
  uint64_t result = sub_19F1DCC4C();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      sub_19EE77E34(*(void *)(v9 + 48) + 40 * a2, (uint64_t)v19);
      char v12 = MEMORY[0x19F3C6F50](v19, v6);
      uint64_t result = sub_19EE7760C((uint64_t)v19);
      if (v12) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v14 = *(void *)(v13 + 48) + 40 * a2;
  long long v15 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v6;
  *(_OWORD *)(v14 + 16) = v15;
  *(void *)(v14 + 32) = *(void *)(v6 + 32);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v13 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_19F1DD64C();
  __break(1u);
  return result;
}

uint64_t sub_19F044B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  unint64_t v8 = (void **)v7;
  long long v15 = (void *)*v7;
  unint64_t v17 = sub_19EEBD400(a5, a6);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    char v21 = v16;
    uint64_t v22 = v15[3];
    if (v22 >= v20 && (a7 & 1) != 0)
    {
LABEL_7:
      unint64_t v23 = *v8;
      if (v21)
      {
LABEL_8:
        uint64_t v24 = (uint64_t *)(v23[7] + 32 * v17);
        uint64_t result = *v24;
        *uint64_t v24 = a1;
        v24[1] = a2;
        v24[2] = a3;
        v24[3] = a4;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a7 & 1) == 0)
    {
      sub_19EFBE454();
      goto LABEL_7;
    }
    sub_19EFB8F88(v20, a7 & 1);
    unint64_t v26 = sub_19EEBD400(a5, a6);
    if ((v21 & 1) == (v27 & 1))
    {
      unint64_t v17 = v26;
      unint64_t v23 = *v8;
      if (v21) {
        goto LABEL_8;
      }
LABEL_11:
      sub_19EFBD274(v17, a5, a6, a1, a2, a3, a4, v23);
      swift_bridgeObjectRetain();
      return 0;
    }
  }
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F044CF0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  char v12 = (void *)*v5;
  unint64_t v14 = sub_19EEBD400(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    char v18 = v13;
    uint64_t v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      uint64_t v20 = *v6;
      if (v18)
      {
LABEL_8:
        uint64_t v21 = v20[7] + 16 * v14;
        uint64_t result = *(void *)v21;
        *(void *)uint64_t v21 = a1;
        *(unsigned char *)(v21 + 8) = a2 & 1;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_19EFBE880();
      goto LABEL_7;
    }
    sub_19EFB96A0(v17, a5 & 1);
    unint64_t v23 = sub_19EEBD400(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
LABEL_11:
      sub_19EFBD2C4(v14, a3, a4, a1, a2 & 1, v20);
      swift_bridgeObjectRetain();
      return 0;
    }
  }
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

_OWORD *sub_19F044E30@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  uint64_t v5 = (void **)v4;
  uint64_t v28 = a1;
  uint64_t v9 = sub_19F1DCF8C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (void *)*v4;
  unint64_t v15 = sub_19EE71FE4(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 < v18 || (a3 & 1) == 0)
  {
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      sub_19EFBDE24();
      goto LABEL_7;
    }
    sub_19EFB8860(v18, a3 & 1);
    unint64_t v25 = sub_19EE71FE4(a2);
    if ((v19 & 1) == (v26 & 1))
    {
      unint64_t v15 = v25;
      uint64_t v21 = *v5;
      if (v19) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
      uint64_t result = sub_19EFBD1B4(v15, (uint64_t)v12, v28, v21);
      *a4 = 0u;
      a4[1] = 0u;
      return result;
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_19F1DD65C();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v21 = *v5;
  if ((v19 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  sub_19EEBDC00((_OWORD *)(v21[7] + 32 * v15), a4);
  uint64_t v22 = (_OWORD *)(v21[7] + 32 * v15);
  unint64_t v23 = v28;
  return sub_19EEBDC00(v23, v22);
}

uint64_t sub_19F045020(uint64_t a1, uint64_t (*a2)(void *))
{
  uint64_t result = sub_19EF7E550(a1);
  if (v5) {
    goto LABEL_32;
  }
  int v6 = v4;
  if (*(_DWORD *)(a1 + 36) != v4) {
    goto LABEL_31;
  }
  unint64_t v7 = result;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  if (result == v8) {
    return v7;
  }
  uint64_t v9 = a1 + 64;
  int v24 = v4;
  int v10 = v4;
  while ((v7 & 0x8000000000000000) == 0 && (uint64_t)v7 < v8)
  {
    if (v6 != v10) {
      goto LABEL_27;
    }
    unint64_t v11 = v7 >> 6;
    if ((*(void *)(v9 + 8 * (v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_27;
    }
    char v12 = (void *)(*(void *)(a1 + 48) + 16 * v7);
    uint64_t v13 = v12[1];
    uint64_t v14 = *(void *)(a1 + 56) + 16 * v7;
    unint64_t v15 = *(void **)v14;
    LOBYTE(v14) = *(unsigned char *)(v14 + 8);
    v26[0] = *v12;
    v26[1] = v13;
    void v26[2] = v15;
    char v27 = v14;
    swift_retain();
    swift_bridgeObjectRetain();
    id v16 = v15;
    char v17 = a2(v26);

    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v17) {
      return v7;
    }
    char v18 = *(unsigned char *)(a1 + 32);
    if ((uint64_t)v7 >= 1 << v18) {
      goto LABEL_28;
    }
    uint64_t v19 = *(void *)(v9 + 8 * v11);
    if ((v19 & (1 << v7)) == 0) {
      goto LABEL_29;
    }
    if (*(_DWORD *)(a1 + 36) != v6) {
      goto LABEL_30;
    }
    unint64_t v20 = v19 & (-2 << (v7 & 0x3F));
    if (v20)
    {
      unint64_t v7 = __clz(__rbit64(v20)) | v7 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v21 = v11 + 1;
      unint64_t v22 = (unint64_t)((1 << v18) + 63) >> 6;
      if (v11 + 1 >= v22) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v9 + 8 * v21);
      if (!v23)
      {
        unint64_t v21 = v11 + 2;
        if (v11 + 2 >= v22) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v9 + 8 * v21);
        if (!v23)
        {
          while (v22 - 3 != v11)
          {
            unint64_t v23 = *(void *)(a1 + 88 + 8 * v11++);
            if (v23)
            {
              unint64_t v21 = v11 + 2;
              goto LABEL_18;
            }
          }
LABEL_24:
          unint64_t v7 = 1 << v18;
          goto LABEL_6;
        }
      }
LABEL_18:
      unint64_t v7 = __clz(__rbit64(v23)) + (v21 << 6);
    }
LABEL_6:
    uint64_t v8 = 1 << v18;
    int v10 = v24;
    if (v7 == v8) {
      return v7;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_19F045258()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F045290(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_19F03DDB4(a1, a2, a3, a4, v4);
}

uint64_t sub_19F045298()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0452D0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24)) & 1;
}

unint64_t sub_19F04530C()
{
  unint64_t result = qword_1E9472FF0;
  if (!qword_1E9472FF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9472FE8);
    sub_19EEA5E10(&qword_1E9472FF8, &qword_1E9473000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472FF0);
  }
  return result;
}

unint64_t sub_19F0453A8()
{
  unint64_t result = qword_1E9473008;
  if (!qword_1E9473008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473008);
  }
  return result;
}

unint64_t sub_19F045400()
{
  unint64_t result = qword_1E9473010;
  if (!qword_1E9473010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473010);
  }
  return result;
}

unint64_t sub_19F045458()
{
  unint64_t result = qword_1E9473018;
  if (!qword_1E9473018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473018);
  }
  return result;
}

uint64_t sub_19F0454AC()
{
  return sub_19EEA5E10(&qword_1E9473020, &qword_1E9473028);
}

uint64_t sub_19F0454E8()
{
  return sub_19EEA5E10(&qword_1E9473030, &qword_1E9473038);
}

uint64_t sub_19F045524()
{
  return sub_19EEA5E10(&qword_1E9473040, &qword_1E9473048);
}

ValueMetadata *type metadata accessor for QueryExpression()
{
  return &type metadata for QueryExpression;
}

uint64_t destroy for QueryExpression.MatchResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s9JetEngine15QueryExpressionV11MatchResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for QueryExpression.MatchResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for QueryExpression.MatchResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for QueryExpression.MatchResult()
{
  return &type metadata for QueryExpression.MatchResult;
}

ValueMetadata *type metadata accessor for QueryExpression.MatchResult.Index()
{
  return &type metadata for QueryExpression.MatchResult.Index;
}

ValueMetadata *type metadata accessor for QueryExpression.Rule()
{
  return &type metadata for QueryExpression.Rule;
}

uint64_t sub_19F0456D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_19F045728(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TimezoneOffsetFieldProvider()
{
  return &type metadata for TimezoneOffsetFieldProvider;
}

uint64_t Models.ExternalURLAction.init(actionMetrics:url:isSensitive:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v7 = type metadata accessor for Models.ExternalURLAction();
  uint64_t v8 = (char *)a4 + *(int *)(v7 + 20);
  uint64_t v9 = sub_19F1DB34C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  *((unsigned char *)a4 + *(int *)(v7 + 24)) = a3;
  return result;
}

uint64_t type metadata accessor for Models.ExternalURLAction()
{
  uint64_t result = qword_1E946D428;
  if (!qword_1E946D428) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Models.ExternalURLAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v35 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = *a2;
  uint64_t v42 = a1;
  JSONObject.subscript.getter(7107189, 0xE300000000000000, (uint64_t)v41);
  sub_19EEBF040((uint64_t)v41, (uint64_t)v38);
  uint64_t v16 = v39;
  if (v39)
  {
    uint64_t v17 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    uint64_t v19 = v18;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    if (v19)
    {
      sub_19F1DB2FC();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v38, (uint64_t *)&unk_1E946FD20);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_6:
  sub_19EEC3418((uint64_t)v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1EB392E50);
    uint64_t v20 = type metadata accessor for Models.ExternalURLAction() | 0x2000000000000000;
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v21 = xmmword_19F257730;
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = 0;
    swift_willThrow();
    return sub_19EEC3418(v42);
  }
  else
  {
    uint64_t v34 = a3;
    unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v23(v14, v8, v9);
    uint64_t v24 = v42;
    JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v41);
    v38[0] = v15;
    unint64_t v25 = v36;
    ActionMetrics.init(deserializing:using:)((uint64_t)v41, v38, (uint64_t *)&v37);
    if (v25)
    {
      sub_19EEC3418(v24);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    }
    else
    {
      uint64_t v36 = v23;
      long long v33 = v37;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v14, v9);
      JSONObject.subscript.getter(0x7469736E65537369, 0xEB00000000657669, (uint64_t)v41);
      sub_19EEBF040((uint64_t)v41, (uint64_t)v38);
      uint64_t v26 = v39;
      if (v39)
      {
        uint64_t v27 = v24;
        uint64_t v28 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        char v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 88))(v26, v28);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
        sub_19EEC3418(v27);
        sub_19EEC3418((uint64_t)v41);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
        if (v29 == 2) {
          char v30 = 0;
        }
        else {
          char v30 = v29 & 1;
        }
      }
      else
      {
        sub_19EEBD664((uint64_t)v38, (uint64_t *)&unk_1E946FD20);
        sub_19EEC3418(v24);
        sub_19EEC3418((uint64_t)v41);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
        char v30 = 0;
      }
      uint64_t v31 = v34;
      *uint64_t v34 = v33;
      uint64_t v32 = type metadata accessor for Models.ExternalURLAction();
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v36)((char *)v31 + *(int *)(v32 + 20), v35, v9);
      *((unsigned char *)v31 + *(int *)(v32 + 24)) = v30;
    }
  }
  return result;
}

uint64_t Models.ExternalURLAction.actionMetrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Models.ExternalURLAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Models.ExternalURLAction() + 20);
  uint64_t v4 = sub_19F1DB34C();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Models.ExternalURLAction.isSensitive.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Models.ExternalURLAction() + 24));
}

uint64_t sub_19F045DD0()
{
  uint64_t v1 = 7107189;
  if (*v0 != 1) {
    uint64_t v1 = 0x7469736E65537369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x654D6E6F69746361;
  }
}

uint64_t sub_19F045E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F046F50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F045E60(uint64_t a1)
{
  unint64_t v2 = sub_19F0460C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F045E9C(uint64_t a1)
{
  unint64_t v2 = sub_19F0460C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Models.ExternalURLAction.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473088);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F0460C4();
  sub_19F1DD8FC();
  long long v11 = *v3;
  v10[15] = 0;
  sub_19F046118();
  sub_19F1DD2AC();
  if (!v2)
  {
    type metadata accessor for Models.ExternalURLAction();
    LOBYTE(v11) = 1;
    sub_19F1DB34C();
    sub_19F046584(&qword_1E94730A0);
    sub_19F1DD2AC();
    LOBYTE(v11) = 2;
    sub_19F1DD27C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_19F0460C4()
{
  unint64_t result = qword_1E9473090;
  if (!qword_1E9473090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473090);
  }
  return result;
}

unint64_t sub_19F046118()
{
  unint64_t result = qword_1E9473098;
  if (!qword_1E9473098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473098);
  }
  return result;
}

uint64_t Models.ExternalURLAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94730A8);
  uint64_t v19 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Models.ExternalURLAction();
  MEMORY[0x1F4188790](v9);
  long long v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  unint64_t v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_19F0460C4();
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  }
  uint64_t v13 = v11;
  uint64_t v14 = v20;
  char v24 = 0;
  sub_19F046530();
  sub_19F1DD1BC();
  *(_OWORD *)uint64_t v13 = v23;
  LOBYTE(v23) = 1;
  sub_19F046584((unint64_t *)&qword_1E94730B8);
  sub_19F1DD1BC();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v13[*(int *)(v9 + 20)], v6, v4);
  LOBYTE(v23) = 2;
  uint64_t v17 = 0;
  char v15 = sub_19F1DD19C();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v21);
  v13[*(int *)(v9 + 24)] = v15 & 1;
  sub_19F0465C8((uint64_t)v13, v18);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  return sub_19F04662C((uint64_t)v13);
}

unint64_t sub_19F046530()
{
  unint64_t result = qword_1E94730B0;
  if (!qword_1E94730B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94730B0);
  }
  return result;
}

uint64_t sub_19F046584(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_19F1DB34C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19F0465C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Models.ExternalURLAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F04662C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Models.ExternalURLAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19F046688@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.ExternalURLAction.init(from:)(a1, a2);
}

uint64_t sub_19F0466A0(void *a1)
{
  return Models.ExternalURLAction.encode(to:)(a1);
}

uint64_t sub_19F0466B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  return Models.ExternalURLAction.init(deserializing:using:)(a1, a2, a3);
}

void *_s17ExternalURLActionVwCP(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_19F1DB34C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((unsigned char *)v7 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

uint64_t _s17ExternalURLActionVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_19F1DB34C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *_s17ExternalURLActionVwcp(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_19F1DB34C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *_s17ExternalURLActionVwca(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *_s17ExternalURLActionVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *_s17ExternalURLActionVwta(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s17ExternalURLActionVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F046B38);
}

uint64_t sub_19F046B38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_19F1DB34C();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t _s17ExternalURLActionVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F046BFC);
}

void *sub_19F046BFC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    _OWORD *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_19F1DB34C();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_19F046CA4()
{
  uint64_t result = sub_19F1DB34C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s17ExternalURLActionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    _OWORD *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F046E10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17ExternalURLActionV10CodingKeysOMa()
{
  return &_s17ExternalURLActionV10CodingKeysON;
}

unint64_t sub_19F046E4C()
{
  unint64_t result = qword_1E94730C0;
  if (!qword_1E94730C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94730C0);
  }
  return result;
}

unint64_t sub_19F046EA4()
{
  unint64_t result = qword_1E94730C8;
  if (!qword_1E94730C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94730C8);
  }
  return result;
}

unint64_t sub_19F046EFC()
{
  unint64_t result = qword_1E94730D0;
  if (!qword_1E94730D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94730D0);
  }
  return result;
}

uint64_t sub_19F046F50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7469736E65537369 && a2 == 0xEB00000000657669)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t _AsyncJust.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t _AsyncJust.AsyncIterator.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v9(a3, 1, 1, a2);
  uint64_t v7 = sub_19F1DCAAC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a3, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a3, a1, a2);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v9)(a3, 0, 1, a2);
}

uint64_t _AsyncJust.AsyncIterator.element.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DCAAC();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t _AsyncJust.AsyncIterator.element.setter(uint64_t a1)
{
  uint64_t v3 = sub_19F1DCAAC();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*_AsyncJust.AsyncIterator.element.modify())()
{
  return nullsub_1;
}

uint64_t _AsyncJust.AsyncIterator.next()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_19F047350, 0, 0);
}

uint64_t sub_19F047350()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(*(void *)(v0[3] + 16) - 8) + 56))(v0[2], 1, 1, *(void *)(v0[3] + 16));
  sub_19F1DCAAC();
  sub_19F1DD63C();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_19F047410(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_19EE4AA60;
  v6[2] = a1;
  return MEMORY[0x1F4188298](sub_19F047350, 0, 0);
}

uint64_t sub_19F0474C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_19F047594;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6, v12);
}

uint64_t sub_19F047594()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t _AsyncJust.element.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t _AsyncJust.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  double v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v6, v4);
  return _AsyncJust.AsyncIterator.init(_:)((uint64_t)v6, v3, a2);
}

uint64_t _AsyncJust.description.getter()
{
  return 0;
}

uint64_t sub_19F0477D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _AsyncJust.makeAsyncIterator()(a1, a2);
  double v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t _AsyncJust<A>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v18[6] = a3;
  uint64_t v17 = a4;
  uint64_t v16 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for _AsyncJust();
  uint64_t v15 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v4)
  {
    uint64_t v14 = v9;
    __swift_project_boxed_opaque_existential_1(v18, v18[3]);
    sub_19F1DD49C();
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v8, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v11, v14);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t type metadata accessor for _AsyncJust()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F047A50@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return _AsyncJust<A>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t _AsyncJust<A>.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD51C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19F047B1C(void *a1)
{
  return _AsyncJust<A>.encode(to:)(a1);
}

uint64_t static _AsyncJust<A>.== infix(_:_:)()
{
  return sub_19F1DBD3C() & 1;
}

uint64_t sub_19F047B60()
{
  return MEMORY[0x1E4FBC278];
}

uint64_t sub_19F047B6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F047B88()
{
  return static _AsyncJust<A>.== infix(_:_:)();
}

uint64_t sub_19F047B94(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_19F047CF0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19F047F08);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_19F047F30()
{
  uint64_t result = sub_19F1DCAAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19F047FC0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_19F048160(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x19F04839CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for _AsyncJust.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t IntentMetricsEventLinter.init(objectGraph:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = swift_bridgeObjectRetain();
  char v5 = sub_19F048FB0(v4);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_19F24DBC0;
    id v9 = v7;
    uint64_t v31 = sub_19EEC3F3C(0, 45, 0, MEMORY[0x1E4FBC860]);
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    uint64_t v41 = MEMORY[0x1E4FBB1A0];
    unint64_t v39 = 0xD000000000000012;
    unint64_t v40 = 0x800000019F26E8F0;
    sub_19EEBCD00((uint64_t)&v39, (uint64_t)v35);
    long long v33 = 0u;
    long long v34 = 0u;
    sub_19EEC3E70((uint64_t)v35, (uint64_t)&v33);
    char v38 = 0;
    long long v36 = v33;
    long long v37 = v34;
    unsigned int v12 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned int v12 = sub_19EEC3F3C(0, v31[2] + 1, 1, v31);
    }
    unint64_t v14 = v12[2];
    unint64_t v13 = v12[3];
    if (v14 >= v13 >> 1) {
      unsigned int v12 = sub_19EEC3F3C((void *)(v13 > 1), v14 + 1, 1, v12);
    }
    v12[2] = v14 + 1;
    int v15 = &v12[5 * v14];
    long long v16 = v36;
    long long v17 = v37;
    *((unsigned char *)v15 + 64) = v38;
    *((_OWORD *)v15 + 2) = v16;
    *((_OWORD *)v15 + 3) = v17;
    sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
    v18._countAndFlagsBits = 0xD00000000000002CLL;
    v18._object = (void *)0x800000019F26E910;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    *(void *)(v8 + 32) = v12;
    uint64_t v32 = sub_19EEC3F3C(0, 20, 0, MEMORY[0x1E4FBC860]);
    v19._countAndFlagsBits = 1612738153;
    v19._object = (void *)0xE400000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    swift_beginAccess();
    unint64_t v20 = *(void *)(a1 + 24);
    unint64_t v21 = *(void *)(a1 + 32);
    uint64_t v41 = v11;
    unint64_t v39 = v20;
    unint64_t v40 = v21;
    sub_19EEBCD00((uint64_t)&v39, (uint64_t)v35);
    long long v33 = 0u;
    long long v34 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v35, (uint64_t)&v33);
    char v38 = 2;
    long long v36 = v33;
    long long v37 = v34;
    unint64_t v22 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v22 = sub_19EEC3F3C(0, v32[2] + 1, 1, v32);
    }
    unint64_t v24 = v22[2];
    unint64_t v23 = v22[3];
    if (v24 >= v23 >> 1) {
      unint64_t v22 = sub_19EEC3F3C((void *)(v23 > 1), v24 + 1, 1, v22);
    }
    v22[2] = v24 + 1;
    unint64_t v25 = &v22[5 * v24];
    long long v26 = v36;
    long long v27 = v37;
    *((unsigned char *)v25 + 64) = v38;
    *((_OWORD *)v25 + 2) = v26;
    *((_OWORD *)v25 + 3) = v27;
    sub_19EEBD664((uint64_t)&v39, &qword_1EB393260);
    v28._countAndFlagsBits = 0x7463656A626F2060;
    v28._object = (void *)0xEF2E687061726720;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    *(void *)(v8 + 40) = v22;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_19F24EAD0;
    *((void *)&v34 + 1) = v11;
    *(void *)&long long v33 = 0xD00000000000002BLL;
    *((void *)&v33 + 1) = 0x800000019F26E940;
    long long v36 = 0u;
    long long v37 = 0u;
    sub_19EEC3E70((uint64_t)&v33, (uint64_t)&v36);
    *(unsigned char *)(v29 + 64) = 0;
    long long v30 = v37;
    *(_OWORD *)(v29 + 32) = v36;
    *(_OWORD *)(v29 + 48) = v30;
    *(void *)(v8 + 48) = v29;
    *(void *)&long long v36 = v9;
    LOBYTE(v33) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v8, (JetEngine::LogMessageLevel)&v33);

    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = a1;
  return result;
}

uint64_t IntentMetricsEventLinter.processEvent(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391BD0);
  uint64_t v8 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 16) = 0;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *(void *)(v8 + 16) = v9;
  *(void *)(v8 + 24) = v10;
  *(void *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 40) = 0;
  uint64_t v11 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  unsigned int v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = &unk_1E94731F8;
  v12[5] = v7;
  v12[6] = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19EE9A0F8((uint64_t)v5, (uint64_t)aL, (uint64_t)v12);
  swift_release();
  return v8;
}

uint64_t sub_19F04895C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  return MEMORY[0x1F4188298](sub_19F048980, 0, 0);
}

uint64_t sub_19F048980()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v0[12] = v0[15];
  unint64_t v1 = (void *)swift_task_alloc();
  v0[17] = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946CC60);
  void *v1 = v0;
  v1[1] = sub_19F048ABC;
  uint64_t v2 = v0[15];
  return MEMORY[0x1F41881B8](v0 + 7, v0 + 12, &unk_1E9473200, v2, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19F048ABC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F048DA4;
  }
  else {
    uint64_t v2 = sub_19F048BD0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F048BD0()
{
  uint64_t v1 = (long long *)(v0 + 7);
  if (v0[10])
  {
    uint64_t v2 = v0[16];
    sub_19EEBB420(v1, (uint64_t)(v0 + 2));
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
    v0[13] = v2;
    uint64_t v11 = (uint64_t (*)(uint64_t, void *, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v4 + 16) + **(int **)(v4 + 16));
    swift_bridgeObjectRetain();
    char v5 = (void *)swift_task_alloc();
    v0[19] = v5;
    void *v5 = v0;
    v5[1] = sub_19F048DBC;
    uint64_t v6 = v0[14];
    uint64_t v7 = v0[15];
    return v11(v6, v0 + 13, v7, &type metadata for LintMetricsEventIntent, &protocol witness table for LintMetricsEventIntent, v3, v4);
  }
  else
  {
    sub_19EEBD664((uint64_t)v1, qword_1E946CC60);
    sub_19F049244();
    swift_allocError();
    *uint64_t v9 = 1;
    swift_willThrow();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_19F048DA4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19F048DBC()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F048F3C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_19F048ED8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F048ED8()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F048F3C()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F048FB0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
  if (*(void *)(a1 + 16) && (unint64_t v3 = sub_19EEAB4C0(v2), (v4 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v3, (uint64_t)v7);
    sub_19EEBD664((uint64_t)v7, &qword_1EB393260);
    LOBYTE(v5) = 1;
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    sub_19EEBD664((uint64_t)v7, &qword_1EB393260);
    uint64_t v5 = sub_19EF270D4();
    if (v5) {
      LOBYTE(v5) = sub_19EE6E508(v5, a1);
    }
  }
  return v5 & 1;
}

uint64_t sub_19F04905C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F04909C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_19EE17780;
  *(_OWORD *)(v4 + 120) = v5;
  *(void *)(v4 + 112) = a1;
  return MEMORY[0x1F4188298](sub_19F048980, 0, 0);
}

uint64_t sub_19F049150()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

ValueMetadata *type metadata accessor for IntentMetricsEventLinter()
{
  return &type metadata for IntentMetricsEventLinter;
}

uint64_t sub_19F0491A8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EEB8A6C;
  return sub_19F01A2C8(a1, v1);
}

unint64_t sub_19F049244()
{
  unint64_t result = qword_1E9473208;
  if (!qword_1E9473208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473208);
  }
  return result;
}

uint64_t assignWithCopy for JSONObject(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for JSONObject(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONObject(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONObject(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEventLinterBagConfiguration()
{
  return &type metadata for MetricsEventLinterBagConfiguration;
}

uint64_t sub_19F049448(uint64_t a1, uint64_t a2)
{
  JSONObject.subscript.getter(a1, a2, (uint64_t)v8);
  JSONObject.subscript.getter(0x427363697274656DLL, 0xEB00000000657361, (uint64_t)&v13);
  sub_19EEC3418((uint64_t)v8);
  sub_19EEBF040((uint64_t)&v13, (uint64_t)v8);
  uint64_t v2 = v9;
  if (v9)
  {
    uint64_t v3 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
    if ((v4 & 1) == 0)
    {
      v11[0] = v13;
      v11[1] = v14;
      uint64_t v12 = v15;
      goto LABEL_6;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418((uint64_t)&v13);
  JSONObject.subscript.getter(0x427363697274656DLL, 0xEB00000000657361, (uint64_t)v11);
LABEL_6:
  JSONObject.dictionary.getter((uint64_t)&v13);
  sub_19EEC3418((uint64_t)v11);
  uint64_t v5 = *((void *)&v14 + 1);
  if (*((void *)&v14 + 1))
  {
    uint64_t v6 = v15;
    __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
    uint64_t v5 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v6 + 32))(MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB1B0], v5, v6);
    sub_19EEC05FC((uint64_t)&v13);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v13, &qword_1E946F740);
  }
  return v5;
}

uint64_t sub_19F0495E8(uint64_t a1, uint64_t a2)
{
  JSONObject.subscript.getter(a1, a2, (uint64_t)&v11);
  JSONObject.subscript.getter(0xD000000000000011, 0x800000019F26AFF0, (uint64_t)&v8);
  sub_19EEC3418((uint64_t)&v11);
  sub_19EEBF040((uint64_t)&v8, (uint64_t)&v11);
  uint64_t v2 = *((void *)&v12 + 1);
  if (*((void *)&v12 + 1))
  {
    uint64_t v3 = v13;
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v11);
    if ((v4 & 1) == 0)
    {
      long long v11 = v8;
      long long v12 = v9;
      uint64_t v13 = v10;
      goto LABEL_6;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v11, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418((uint64_t)&v8);
  JSONObject.subscript.getter(0xD000000000000011, 0x800000019F26AFF0, (uint64_t)&v11);
LABEL_6:
  sub_19EEBF040((uint64_t)&v11, (uint64_t)&v8);
  uint64_t v5 = *((void *)&v9 + 1);
  if (*((void *)&v9 + 1))
  {
    uint64_t v6 = v10;
    __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v8);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v8, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418((uint64_t)&v11);
  return v5;
}

uint64_t sub_19F04976C(uint64_t a1, uint64_t a2)
{
  JSONObject.subscript.getter(a1, a2, (uint64_t)&v11);
  JSONObject.subscript.getter(0x6569467365526564, 0xEB0000000073646CLL, (uint64_t)v9);
  sub_19EEC3418((uint64_t)&v11);
  sub_19EEBF040((uint64_t)v9, (uint64_t)&v11);
  uint64_t v2 = *((void *)&v12 + 1);
  if (!*((void *)&v12 + 1))
  {
    sub_19EEBD664((uint64_t)&v11, (uint64_t *)&unk_1E946FD20);
    goto LABEL_5;
  }
  uint64_t v3 = v13;
  __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
  char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v11);
  if (v4)
  {
LABEL_5:
    sub_19EEC3418((uint64_t)v9);
    JSONObject.subscript.getter(0x6569467365526564, 0xEB0000000073646CLL, (uint64_t)&v11);
    goto LABEL_6;
  }
  long long v11 = v9[0];
  long long v12 = v9[1];
  uint64_t v13 = v10;
LABEL_6:
  unint64_t v5 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  uint64_t v6 = sub_19F1232A8((uint64_t)&v11, v5);
  uint64_t v7 = sub_19EFA5484(v6);
  swift_bridgeObjectRelease();
  return v7;
}

double sub_19F0498B0(uint64_t a1, uint64_t a2)
{
  JSONObject.subscript.getter(a1, a2, (uint64_t)v10);
  JSONObject.subscript.getter(0xD00000000000001DLL, 0x800000019F26E970, (uint64_t)&v13);
  sub_19EEC3418((uint64_t)v10);
  sub_19EEBF040((uint64_t)&v13, (uint64_t)v10);
  uint64_t v2 = v11;
  if (v11)
  {
    uint64_t v3 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    if ((v4 & 1) == 0)
    {
      v16[0] = v13;
      v16[1] = v14;
      uint64_t v17 = v15;
      goto LABEL_6;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v10, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418((uint64_t)&v13);
  JSONObject.subscript.getter(0xD00000000000001DLL, 0x800000019F26E970, (uint64_t)v16);
LABEL_6:
  sub_19EEBF040((uint64_t)v16, (uint64_t)&v13);
  uint64_t v5 = *((void *)&v14 + 1);
  if (!*((void *)&v14 + 1))
  {
    sub_19EEBD664((uint64_t)&v13, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v16);
LABEL_11:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DDE0);
    uint64_t v9 = swift_allocObject();
    *(void *)&double result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
    *(void *)(v9 + 56) = &type metadata for MetricsEventLinterEmptyImpressionsRule;
    *(void *)(v9 + 64) = &off_1EF1491B0;
    return result;
  }
  uint64_t v6 = v15;
  __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
  char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
  sub_19EEC3418((uint64_t)v16);
  if (v7 == 2 || (v7 & 1) == 0) {
    goto LABEL_11;
  }
  return result;
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSCallable.call(against:withArguments:)(JSValue against, Swift::OpaquePointer withArguments)
{
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v6.super.Class isa = JSReference.unwrap()().super.isa;
  if (v7) {
    return (JSValue)v5;
  }
  Class isa = v6.super.isa;
  result.super.Class isa = (Class)[(objc_class *)v6.super.isa context];
  if (result.super.isa)
  {
    Class v10 = result.super.isa;
    uint64_t v11 = against.super.isa;
    swift_bridgeObjectRetain();
    uint64_t v12 = isa;
    uint64_t v5 = sub_19EEB29F8(v10, v11, (uint64_t)withArguments._rawValue, v12);

    return (JSValue)v5;
  }
  __break(1u);
  return result;
}

uint64_t JSCallable.reference.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC4154(v1, a1);
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSCallable.call(withArguments:)(Swift::OpaquePointer withArguments)
{
  id v3 = v2;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v4.super.Class isa = JSReference.unwrap()().super.isa;
  if (v5) {
    return (JSValue)v3;
  }
  Class isa = v4.super.isa;
  result.super.Class isa = (Class)[(objc_class *)v4.super.isa context];
  if (result.super.isa)
  {
    Class v8 = result.super.isa;
    uint64_t v9 = isa;
    swift_bridgeObjectRetain();
    id v3 = sub_19EE92270(v8, v9);

    swift_bridgeObjectRelease();
    return (JSValue)v3;
  }
  __break(1u);
  return result;
}

id JSCallable.callAsFunction(this:_:)(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v4.super.Class isa = JSReference.unwrap()().super.isa;
  if (v5) {
    return (id)a2;
  }
  Class isa = v4.super.isa;
  id result = [(objc_class *)v4.super.isa context];
  if (result)
  {
    Class v8 = result;
    MEMORY[0x1F4188790](result);
    sub_19EE275D0((void (*)(id *__return_ptr, void *))sub_19F04A30C);
    a2 = v9;

    return (id)a2;
  }
  __break(1u);
  return result;
}

void sub_19F049D30(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  sub_19F04A32C(a2, (uint64_t)&v26);
  if (v27)
  {
    sub_19EEBB420(&v26, (uint64_t)v28);
    *(void *)&long long v26 = MEMORY[0x1E4FBC860];
    uint64_t v10 = v29;
    uint64_t v11 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    (*(void (**)(void *, uint64_t, uint64_t))(v11 + 16))(a1, v10, v11);
    if (v5)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      MEMORY[0x19F3C6430]();
      if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_19F1DC1BC();
      }
      sub_19F1DC20C();
      sub_19F1DC17C();
      uint64_t v16 = *(void *)(a3 + 16);
      if (v16)
      {
        uint64_t v31 = a5;
        uint64_t v17 = (void *)(a3 + 32);
        swift_bridgeObjectRetain();
        do
        {
          uint64_t v18 = v17[3];
          uint64_t v19 = v17[4];
          __swift_project_boxed_opaque_existential_1(v17, v18);
          (*(void (**)(void *, uint64_t, uint64_t))(v19 + 16))(a1, v18, v19);
          MEMORY[0x19F3C6430]();
          if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_19F1DC1BC();
          }
          sub_19F1DC20C();
          sub_19F1DC17C();
          v17 += 5;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease();
        a5 = v31;
      }
      sub_19EFA55B0(v26);
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(a4, sel_context);
      if (!v20)
      {
        __break(1u);
        return;
      }
      unint64_t v21 = v20;
      id v22 = a4;
      swift_bridgeObjectRetain();
      sub_19EEB2BCC(v21, v22);
      uint64_t v24 = v23;

      swift_bridgeObjectRelease_n();
      *a5 = v24;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  }
  else
  {
    sub_19F04A394((uint64_t)&v26);
    id v12 = a1;
    unint64_t v13 = sub_19EFA619C(a3, (uint64_t)v12);

    if (!v5)
    {
      sub_19EFA55B0(v13);
      swift_bridgeObjectRelease();
      long long v14 = (void *)sub_19F1DC14C();
      swift_bridgeObjectRelease();
      id v15 = objc_msgSend(a4, sel_callWithArguments_, v14);

      if (v15)
      {
        *a5 = v15;
      }
      else
      {
        sub_19EF600C0();
        swift_allocError();
        *(void *)uint64_t v25 = 0xD000000000000017;
        *(void *)(v25 + 8) = 0x800000019F26B680;
        *(void *)(v25 + 16) = 0;
        *(unsigned char *)(v25 + 24) = 1;
        *(void *)(v25 + 32) = 0;
        *(unsigned char *)(v25 + 40) = 1;
        *(_OWORD *)(v25 + 48) = 0u;
        *(_OWORD *)(v25 + 64) = 0u;
        *(_OWORD *)(v25 + 80) = 0u;
        *(void *)(v25 + 96) = 0;
        swift_willThrow();
      }
    }
  }
}

uint64_t JSCallable.description.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  id v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  if (!v3) {
    return 0x296C6C756E28;
  }
  JSValue v4 = v3;
  id v5 = objc_msgSend(v3, sel_description);
  uint64_t v6 = sub_19F1DBD7C();

  return v6;
}

uint64_t sub_19F04A17C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  id v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  if (!v3) {
    return 0x296C6C756E28;
  }
  JSValue v4 = v3;
  id v5 = objc_msgSend(v3, sel_description);
  uint64_t v6 = sub_19F1DBD7C();

  return v6;
}

uint64_t _s9JetEngine10JSCallableV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  id v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  uint64_t v9 = (void *)v8;
  if (v5)
  {
    if (!v8)
    {
      char v11 = 0;
      goto LABEL_8;
    }
    sub_19EE8FF40();
    id v10 = v5;
    char v11 = sub_19F1DCA1C();
  }
  else
  {
    if (!v8)
    {
      char v11 = 1;
      return v11 & 1;
    }
    char v11 = 0;
  }
  id v5 = v9;
LABEL_8:

  return v11 & 1;
}

void sub_19F04A30C(void *a1@<X0>, void *a2@<X8>)
{
  sub_19F049D30(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), a2);
}

uint64_t sub_19F04A32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946C848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F04A394(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946C848);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19F04A3F4()
{
  return v0;
}

uint64_t static TraceablePointOfInterest._attestation.getter()
{
  return v0;
}

uint64_t dispatch thunk of static TraceablePointOfInterest._attestation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for _AttestFromJetEngine()
{
  return &type metadata for _AttestFromJetEngine;
}

void sub_19F04A428(uint64_t a1, uint64_t a2)
{
  if ((ValueMetadata *)(*(uint64_t (**)(void))(a2 + 8))() != &type metadata for _AttestFromJetEngine)
  {
    sub_19F19CE88((unint64_t)"JetEngine/TraceablePointOfInterest.swift", 0x28uLL, 2, 0x32uLL);
  }
}

uint64_t sub_19F04A49C(char *a1, char *a2)
{
  return sub_19F039FD0(*a1, *a2);
}

uint64_t sub_19F04A4A8()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F04A540()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F04A5C4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F04A658@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_19F04A6B8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x447972616D697270;
  if (*v1) {
    uint64_t v2 = 0x7261646E6F636573;
  }
  unint64_t v3 = 0xEB00000000617461;
  if (*v1) {
    unint64_t v3 = 0xED00006174614479;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_19F04A70C(void *a1@<X0>, void *a2@<X8>)
{
  sub_19EE393CC(a1, *(void *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_19F04A72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_19EE2313C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

Swift::Void __swiftcall PageIntentInstrumentation._forBooksOnly_process(contentsOf:)(Swift::OpaquePointer contentsOf)
{
  uint64_t v2 = CFBundleGetMainBundle();
  unint64_t v3 = (id)CFBundleGetIdentifier(v2);

  if (v3)
  {
    sub_19F1DBD6C();
  }
  swift_bridgeObjectRelease();
  if ((sub_19F1DBFAC() & 1) == 0 && (sub_19F1DBFAC() & 1) == 0 && (sub_19F1DBFAC() & 1) == 0) {
    sub_19F19D4CC((unint64_t)"JetEngine/PageIntentInstrumentation.swift", 0x29uLL, 2, 0x7DuLL);
  }
  swift_bridgeObjectRelease();
  sub_19EE955D4((uint64_t)contentsOf._rawValue);
}

char *assignWithCopy for PageIntentInstrumentation(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_19EE94EE8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_19F1DB57C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for MonotonicTimeReference();
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      uint64_t v8 = type metadata accessor for PageRenderEvent();
      uint64_t v9 = *(int *)(v8 + 20);
      id v10 = *(void **)&a2[v9];
      id v11 = v10;
      *(void *)&a1[v9] = v10;
      uint64_t v12 = *(int *)(v8 + 24);
      unint64_t v13 = &a1[v12];
      long long v14 = &a2[v12];
      *(void *)unint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = *((void *)v14 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for PageIntentInstrumentation(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_19F1DB57C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
    uint64_t v8 = type metadata accessor for PageRenderEvent();
    *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
    *(_OWORD *)&a1[*(int *)(v8 + 24)] = *(_OWORD *)&a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for PageIntentInstrumentation(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_19EE94EE8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_19F1DB57C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for MonotonicTimeReference();
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      uint64_t v8 = type metadata accessor for PageRenderEvent();
      *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
      *(_OWORD *)&a1[*(int *)(v8 + 24)] = *(_OWORD *)&a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_19F04AD90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PageIntentInstrumentationModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for PageIntentInstrumentationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageIntentInstrumentationModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageIntentInstrumentationModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageIntentInstrumentationModel()
{
  return &type metadata for PageIntentInstrumentationModel;
}

unsigned char *storeEnumTagSinglePayload for PageIntentInstrumentationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    _OWORD *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F04AFC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageIntentInstrumentationType()
{
  return &type metadata for PageIntentInstrumentationType;
}

unint64_t sub_19F04B000()
{
  unint64_t result = qword_1E9473210[0];
  if (!qword_1E9473210[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9473210);
  }
  return result;
}

uint64_t JSConstructable.reference.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC4154(v1, a1);
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSConstructable.makeObject(withArguments:)(Swift::OpaquePointer withArguments)
{
  id v3 = v2;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v4.super.Class isa = JSReference.unwrap()().super.isa;
  if (v5) {
    return (JSValue)v3;
  }
  Class isa = v4.super.isa;
  result.super.Class isa = (Class)[(objc_class *)v4.super.isa context];
  if (result.super.isa)
  {
    Class v8 = result.super.isa;
    uint64_t v9 = isa;
    swift_bridgeObjectRetain();
    id v3 = sub_19EE92814(v8, v9);

    swift_bridgeObjectRelease();
    return (JSValue)v3;
  }
  __break(1u);
  return result;
}

id JSConstructable.makeObject(_:)()
{
  id v2 = v1;
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v3.super.Class isa = JSReference.unwrap()().super.isa;
  if (v4) {
    return v2;
  }
  Class isa = v3.super.isa;
  id result = [(objc_class *)v3.super.isa context];
  if (result)
  {
    uint64_t v7 = result;
    Class v8 = isa;
    swift_bridgeObjectRetain();
    id v2 = sub_19EE92814(v7, v8);

    swift_bridgeObjectRelease();
    return v2;
  }
  __break(1u);
  return result;
}

id JSConstructable.callAsFunction(_:)(uint64_t a1)
{
  JSValue v3 = __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v4.super.Class isa = JSReference.unwrap()().super.isa;
  if (v5) {
    return v3;
  }
  Class isa = v4.super.isa;
  id result = [(objc_class *)v4.super.isa context];
  if (result)
  {
    Class v8 = result;
    swift_bridgeObjectRetain();
    uint64_t v9 = isa;
    JSValue v3 = sub_19EFA6298(v8, a1, v9);

    return v3;
  }
  __break(1u);
  return result;
}

uint64_t JSConstructable.description.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  JSValue v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  if (!v3) {
    return 0x296C6C756E28;
  }
  JSValue v4 = v3;
  id v5 = objc_msgSend(v3, sel_description);
  uint64_t v6 = sub_19F1DBD7C();

  return v6;
}

ValueMetadata *type metadata accessor for JSConstructable()
{
  return &type metadata for JSConstructable;
}

void *sub_19F04B378(uint64_t a1)
{
  uint64_t v2 = v1;
  v40[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v34 = *v1;
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  long long v36 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v5;
  uint64_t v39 = v8;
  uint64_t v9 = *(void (**)(double))(v5 + 16);
  long long v33 = (char *)v1 + OBJC_IVAR____TtC9JetEngine16FileOutputStream_url;
  char v35 = v9;
  v9(v6);
  id v10 = self;
  id v11 = objc_msgSend(v10, sel_defaultManager);
  sub_19F1DB2DC();
  uint64_t v12 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  unsigned int v13 = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if (v13)
  {
    id v14 = objc_msgSend(v10, sel_defaultManager);
    id v15 = (void *)sub_19F1DB25C();
    v40[0] = 0;
    unsigned int v16 = objc_msgSend(v14, sel_removeItemAtURL_error_, v15, v40);

    if (!v16)
    {
      id v29 = v40[0];
      sub_19F1DB19C();

      swift_willThrow();
      uint64_t v27 = v38;
      uint64_t v24 = v39;
      goto LABEL_10;
    }
    id v17 = v40[0];
  }
  id v18 = objc_msgSend(v10, sel_defaultManager);
  sub_19F1DB2DC();
  uint64_t v19 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  unsigned __int8 v20 = objc_msgSend(v18, sel_fileExistsAtPath_, v19);

  if ((v20 & 1) == 0)
  {
    id v21 = objc_msgSend(v10, sel_defaultManager);
    sub_19F1DB2DC();
    id v22 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_createFileAtPath_contents_attributes_, v22, 0, 0);
  }
  sub_19F04BFC0();
  uint64_t v23 = (uint64_t)v36;
  uint64_t v24 = v39;
  ((void (*)(char *, uint64_t, uint64_t))v35)(v36, a1, v39);
  uint64_t v25 = v37;
  id v26 = sub_19F04B738(v23);
  if (v25)
  {
    uint64_t v27 = v38;
LABEL_10:
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v30(a1, v24);
    v30((uint64_t)v33, v24);
    swift_deallocPartialClassInstance();
    return v2;
  }
  id v28 = v26;
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(a1, v24);
  *(void *)((char *)v2 + OBJC_IVAR____TtC9JetEngine16FileOutputStream_fileHandle) = v28;
  return v2;
}

id sub_19F04B738(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_19F1DB25C();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_19F1DB34C();
    double v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_19F1DB19C();

    swift_willThrow();
    uint64_t v9 = sub_19F1DB34C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_19F04B890()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9JetEngine16FileOutputStream_url;
  uint64_t v2 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_19F04B940()
{
  return type metadata accessor for FileOutputStream();
}

uint64_t type metadata accessor for FileOutputStream()
{
  uint64_t result = qword_1E946FD60;
  if (!qword_1E946FD60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_19F04B994()
{
  uint64_t result = sub_19F1DB34C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_19F04BA30()
{
  return sub_19F1DC7AC();
}

uint64_t sub_19F04BA88(unsigned char *a1, uint64_t a2)
{
  uint64_t v2 = sub_19EE684CC(a1, a2);
  unint64_t v4 = v3;
  sub_19F04BF6C();
  sub_19F1DC7AC();
  return sub_19EEA072C(v2, v4);
}

uint64_t sub_19F04BB08()
{
  uint64_t v1 = sub_19F1DBE3C();
  swift_bridgeObjectRelease();
  uint64_t v2 = fopen((const char *)(v1 + 32), "rb");
  swift_release();
  if (v2 && (*(void *)(v0 + 16) = v2, uint64_t v3 = MEMORY[0x19F3C8780](v2), !fseek(v2, 0, 2)))
  {
    uint64_t v5 = MEMORY[0x19F3C8780](v2);
    *(void *)(v0 + 24) = v5;
    if (v5 < 0 || fseek(v2, v3, 0))
    {
      sub_19F04C000();
      swift_release();
    }
    else
    {
      clearerr(v2);
    }
  }
  else
  {
    sub_19F04C000();
    swift_deallocPartialClassInstance();
  }
  return v0;
}

uint64_t sub_19F04BC20()
{
  fclose(*(FILE **)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileInputStream()
{
  return self;
}

int64_t sub_19F04BC7C(void *a1, int64_t a2)
{
  uint64_t v5 = sub_19F1DAC1C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(FILE **)(v2 + 16);
  int64_t v10 = fread(a1, 1uLL, a2, v9);
  if (v10 < a2 && ferror(v9))
  {
    uint64_t v11 = sub_19F1DB90C();
    if ((v11 & 0x100000000) != 0)
    {
      sub_19EF87378();
      swift_allocError();
      *uint64_t v12 = 1;
    }
    else
    {
      int v15 = v11;
      sub_19EFAA108(MEMORY[0x1E4FBC860]);
      sub_19F04BF14();
      sub_19F1DB17C();
      sub_19F1DAC0C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    swift_willThrow();
  }
  return v10;
}

BOOL sub_19F04BE08()
{
  uint64_t v1 = *(FILE **)(*(void *)v0 + 16);
  clearerr(v1);
  int v2 = fgetc(v1);
  ungetc(v2, v1);
  int v3 = ferror(v1);
  return v2 != -1 && v3 == 0;
}

uint64_t sub_19F04BE5C()
{
  return *(void *)(*(void *)v0 + 24);
}

uint64_t sub_19F04BE6C(int64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = (unsigned char *)swift_slowAlloc();
  int64_t v5 = sub_19F04BC7C(v4, a1);
  if (!v1) {
    uint64_t v2 = sub_19EE684CC(v4, v5);
  }
  MEMORY[0x19F3C9470](v4, -1, -1);
  return v2;
}

int64_t sub_19F04BEF0(void *a1, int64_t a2)
{
  return sub_19F04BC7C(a1, a2);
}

unint64_t sub_19F04BF14()
{
  unint64_t result = qword_1E946C8F0;
  if (!qword_1E946C8F0)
  {
    sub_19F1DAC1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C8F0);
  }
  return result;
}

unint64_t sub_19F04BF6C()
{
  unint64_t result = qword_1E946F150;
  if (!qword_1E946F150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946F150);
  }
  return result;
}

unint64_t sub_19F04BFC0()
{
  unint64_t result = qword_1E946FE60;
  if (!qword_1E946FE60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946FE60);
  }
  return result;
}

uint64_t sub_19F04C000()
{
  uint64_t v0 = sub_19F1DAC1C();
  uint64_t v1 = *(void *)(v0 - 8);
  double v2 = MEMORY[0x1F4188790](v0);
  unint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x19F3C5C20](v2);
  uint64_t v5 = sub_19F1DB90C();
  if ((v5 & 0x100000000) != 0)
  {
    sub_19EF87378();
    swift_allocError();
    *uint64_t v6 = 1;
  }
  else
  {
    void v8[3] = v5;
    sub_19EFAA108(MEMORY[0x1E4FBC860]);
    sub_19F04BF14();
    sub_19F1DB17C();
    sub_19F1DAC0C();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
  return swift_willThrow();
}

id sub_19F04C144(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)(v2 + 16);
  objc_msgSend(v4, sel_lock);
  sub_19F1AB32C(v2, a2);
  return objc_msgSend(v4, sel_unlock);
}

void sub_19F04C1B4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

void ProcessAssertion.init(interruptableTask:)(void *a1@<X8>)
{
}

id ProcessAssertion.isAcquired.getter()
{
  uint64_t v1 = *(void **)v0;
  if ((uint64_t)-[_JEAtomicCounter currentValue](*(void *)(v0 + 8)) < 1) {
    return 0;
  }
  else {
    return objc_msgSend(v1, sel_isValid);
  }
}

uint64_t ProcessAssertion.onInvalidate.getter()
{
  return swift_retain();
}

uint64_t sub_19F04C2C4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (qword_1E946F668 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1E946F658;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EB80;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  *((void *)&v19 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v18 = 0xD00000000000002DLL;
  *((void *)&v18 + 1) = 0x800000019F26ECD0;
  long long v24 = 0u;
  long long v25 = 0u;
  id v5 = v2;
  sub_19EEC3E70((uint64_t)&v18, (uint64_t)&v24);
  *(unsigned char *)(v4 + 64) = 0;
  long long v6 = v25;
  *(_OWORD *)(v4 + 32) = v24;
  *(_OWORD *)(v4 + 48) = v6;
  *(void *)(v3 + 32) = v4;
  uint64_t v23 = sub_19EEC3F3C(0, 20, 0, MEMORY[0x1E4FBC860]);
  v7._object = (void *)0x800000019F26ED00;
  v7._countAndFlagsBits = 0xD000000000000013;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  if (v1)
  {
    swift_getErrorValue();
    *((void *)&v22 + 1) = v17;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v21);
    (*(void (**)(uint64_t *))(*(void *)(v17 - 8) + 16))(boxed_opaque_existential_2Tm);
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }
  sub_19EEBCD00((uint64_t)&v21, (uint64_t)v20);
  long long v18 = 0u;
  long long v19 = 0u;
  sub_19EEC3E70((uint64_t)v20, (uint64_t)&v18);
  char v26 = 0;
  long long v24 = v18;
  long long v25 = v19;
  uint64_t v9 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = sub_19EEC3F3C(0, v9[2] + 1, 1, v9);
  }
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  _OWORD v9[2] = v11 + 1;
  uint64_t v12 = &v9[5 * v11];
  long long v13 = v24;
  long long v14 = v25;
  *((unsigned char *)v12 + 64) = v26;
  *((_OWORD *)v12 + 2) = v13;
  *((_OWORD *)v12 + 3) = v14;
  uint64_t v23 = v9;
  sub_19EEBCB4C((uint64_t)&v21);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  *(void *)(v3 + 40) = v23;
  *(void *)&long long v24 = v5;
  LOBYTE(v18) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v18);

  return swift_bridgeObjectRelease();
}

uint64_t destroy for ProcessAssertion(id *a1)
{
  return swift_release();
}

void *_s9JetEngine16ProcessAssertionVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ProcessAssertion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  Swift::String v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ProcessAssertion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

Swift::Double_optional __swiftcall JSONObject.timeInterval(convertedFrom:)(JetEngine::JSONTimeUnit convertedFrom)
{
  int v2 = *(unsigned __int8 *)convertedFrom;
  sub_19EEBF040(v1, (uint64_t)v10);
  uint64_t v3 = v11;
  if (v11)
  {
    uint64_t v4 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    double v5 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 80))(v3, v4));
    char v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    if ((v7 & 1) == 0 && ((v2 ^ 1) & 1) == 0)
    {
      double v8 = v5 / 1000.0;
      double v5 = v5 / 1000.0;
    }
  }
  else
  {
    sub_19EEBF108((uint64_t)v10);
    LOBYTE(v5) = 0;
  }
  Swift::Bool v9 = LOBYTE(v5);
  result.value = v8;
  result.is_nil = v9;
  return result;
}

uint64_t _Lazy_Many.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = a1;
  uint64_t v3 = sub_19F1DC27C();
  uint64_t result = sub_19EF96A18((uint64_t)&v5, v3, &v6);
  *a2 = v6;
  return result;
}

uint64_t _Lazy_Many.wrappedValue.getter()
{
  sub_19F1DC27C();
  type metadata accessor for LazyValueWrapper();
  swift_retain();
  sub_19EF96F20((uint64_t)&v1);
  swift_release();
  return v1;
}

uint64_t sub_19F04C874()
{
  type metadata accessor for _Lazy_Many();
  swift_bridgeObjectRetain();
  sub_19F04D07C();
  return swift_bridgeObjectRelease();
}

uint64_t _Lazy_Many.wrappedValue.setter()
{
  sub_19F04D07C();
  return swift_bridgeObjectRelease();
}

uint64_t (*_Lazy_Many.wrappedValue.modify(uint64_t *a1, uint64_t a2))(uint64_t a1, char a2)
{
  a1[1] = a2;
  a1[2] = v2;
  *a1 = _Lazy_Many.wrappedValue.getter();
  return sub_19F04C95C;
}

uint64_t sub_19F04C95C(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_19F04D07C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19F04D07C();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _Lazy_Many.description.getter()
{
  return 0;
}

uint64_t _Lazy_Many<A>.encode(to:)()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F04CABC()
{
  return _Lazy_Many<A>.encode(to:)();
}

uint64_t _Lazy_Many<A>._partiallyEncode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _Lazy_Many.wrappedValue.getter();
  Array<A>._partiallyEncode(to:)(a1, v6, *(void *)(a2 + 16), a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F04CB3C(void *a1, uint64_t a2, uint64_t a3)
{
  return _Lazy_Many<A>._partiallyEncode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t _Lazy_Many<A>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *a2;
  sub_19EEC355C(a1, (uint64_t)v13);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  long long v11 = v13[1];
  *(_OWORD *)(v10 + 32) = v13[0];
  *(_OWORD *)(v10 + 48) = v11;
  *(void *)(v10 + 64) = v14;
  *(void *)(v10 + 72) = v9;
  sub_19F1DC27C();
  sub_19EF96924((uint64_t)sub_19F04D0D4, v10, (uint64_t *)v13);
  uint64_t result = sub_19EEC3418(a1);
  *a5 = *(void *)&v13[0];
  return result;
}

uint64_t sub_19F04CC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v17);
  v14[0] = a2;
  swift_bridgeObjectRetain();
  uint64_t result = Array<A>.init(deserializing:using:)((uint64_t)v17, v14, a3, a4);
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, a2, (uint64_t)v17);
    swift_bridgeObjectRelease();
    sub_19EFE5A88((uint64_t)v17, (uint64_t)v14);
    uint64_t v11 = v15;
    if (v15)
    {
      uint64_t v12 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      uint64_t v13 = sub_19F1DC27C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v13, v5, v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    }
    else
    {
      sub_19EFE5AF0((uint64_t)v14);
    }
    swift_willThrow();
    return sub_19EFE5AF0((uint64_t)v17);
  }
  else
  {
    *a5 = result;
  }
  return result;
}

uint64_t sub_19F04CD50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return _Lazy_Many<A>.init(deserializing:using:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8), a5);
}

uint64_t _Lazy_Many<A>.init(_partiallyDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *a2;
  sub_19EEC355C(a1, (uint64_t)v13);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  long long v11 = v13[1];
  *(_OWORD *)(v10 + 32) = v13[0];
  *(_OWORD *)(v10 + 48) = v11;
  *(void *)(v10 + 64) = v14;
  *(void *)(v10 + 72) = v9;
  sub_19F1DC27C();
  sub_19EF96924((uint64_t)sub_19F04D0FC, v10, (uint64_t *)v13);
  uint64_t result = sub_19EEC3418(a1);
  *a5 = *(void *)&v13[0];
  return result;
}

uint64_t sub_19F04CE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v10);
  uint64_t v11 = a2;
  swift_bridgeObjectRetain();
  uint64_t result = Array<A>.init(_partiallyDeserializing:using:)((uint64_t)v10, &v11, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_19F04CEA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return _Lazy_Many<A>.init(_partiallyDeserializing:using:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8), a5);
}

uint64_t static _Lazy_Many<A>.== infix(_:_:)()
{
  type metadata accessor for _Lazy_Many();
  _Lazy_Many.wrappedValue.getter();
  _Lazy_Many.wrappedValue.getter();
  char v0 = sub_19F1DC2AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_19F04CF44()
{
  return static _Lazy_Many<A>.== infix(_:_:)();
}

uint64_t _Lazy_Many<A>.hash(into:)()
{
  _Lazy_Many.wrappedValue.getter();
  sub_19F1DC29C();
  return swift_bridgeObjectRelease();
}

uint64_t _Lazy_Many<A>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F04D018()
{
  return _Lazy_Many<A>.hashValue.getter();
}

uint64_t sub_19F04D020()
{
  return _Lazy_Many<A>.hash(into:)();
}

uint64_t sub_19F04D028()
{
  return sub_19F1DD78C();
}

void sub_19F04D07C()
{
}

uint64_t sub_19F04D0D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_19F04CC14((uint64_t)(v1 + 4), v1[9], v1[2], v1[3], a1);
}

uint64_t sub_19F04D0FC@<X0>(uint64_t *a1@<X8>)
{
  return sub_19F04CE30((uint64_t)(v1 + 4), v1[9], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for _Lazy_Many()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F04D138()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F04D180@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for _Lazy_Many();
  uint64_t result = _Lazy_Many.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_19F04D1D0()
{
  return 8;
}

void *sub_19F04D1DC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t destroy for AMSMetricsIDService(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for AMSMetricsIDService(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void **)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  id v7 = v5;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AMSMetricsIDService(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  long long v4 = *(void **)(a2 + 40);
  uint64_t v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v4;
  id v6 = v4;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AMSMetricsIDService(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for AMSMetricsIDService(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AMSMetricsIDService(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AMSMetricsIDService()
{
  return &type metadata for AMSMetricsIDService;
}

uint64_t sub_19F04D454(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v19 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v32 = (uint64_t)v30 + 8;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  id v7 = (void *)MEMORY[0x1E4FBC860];
  if (v4) {
    goto LABEL_30;
  }
LABEL_6:
  int64_t v8 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v8 < v19)
    {
      unint64_t v9 = *(void *)(v18 + 8 * v8);
      ++v6;
      if (v9) {
        goto LABEL_21;
      }
      int64_t v6 = v8 + 1;
      if (v8 + 1 >= v19) {
        goto LABEL_31;
      }
      unint64_t v9 = *(void *)(v18 + 8 * v6);
      if (v9) {
        goto LABEL_21;
      }
      int64_t v6 = v8 + 2;
      if (v8 + 2 >= v19) {
        goto LABEL_31;
      }
      unint64_t v9 = *(void *)(v18 + 8 * v6);
      if (v9) {
        goto LABEL_21;
      }
      int64_t v6 = v8 + 3;
      if (v8 + 3 >= v19) {
        goto LABEL_31;
      }
      unint64_t v9 = *(void *)(v18 + 8 * v6);
      if (v9)
      {
LABEL_21:
        unint64_t v4 = (v9 - 1) & v9;
        for (unint64_t i = __clz(__rbit64(v9)) + (v6 << 6); ; unint64_t i = v17 | (v6 << 6))
        {
          sub_19EE77E34(*(void *)(a1 + 48) + 40 * i, (uint64_t)v29);
          sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * i, v32);
          v27[0] = v30[0];
          v27[1] = v30[1];
          uint64_t v28 = v31;
          v26[0] = v29[0];
          v26[1] = v29[1];
          sub_19EE77E34((uint64_t)v26, (uint64_t)&v20);
          sub_19EEBDBA4((uint64_t)v27 + 8, (uint64_t)&v22 + 8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D640);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CE0);
          if ((swift_dynamicCast() & 1) == 0)
          {
            long long v24 = 0u;
            long long v25 = 0u;
            long long v23 = 0u;
          }
          sub_19EEBD664((uint64_t)v26, &qword_1EB391080);
          if (*((void *)&v23 + 1))
          {
            long long v20 = v23;
            long long v21 = v24;
            long long v22 = v25;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_19F09E724(0, v7[2] + 1, 1, v7);
              id v7 = (void *)result;
            }
            unint64_t v13 = v7[2];
            unint64_t v12 = v7[3];
            if (v13 >= v12 >> 1)
            {
              uint64_t result = (uint64_t)sub_19F09E724((void *)(v12 > 1), v13 + 1, 1, v7);
              id v7 = (void *)result;
            }
            _OWORD v7[2] = v13 + 1;
            uint64_t v14 = &v7[6 * v13];
            long long v15 = v20;
            long long v16 = v22;
            uint64_t v14[3] = v21;
            v14[4] = v16;
            v14[2] = v15;
            if (!v4) {
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t result = sub_19EEBD664((uint64_t)&v23, &qword_1E9473308);
            if (!v4) {
              goto LABEL_6;
            }
          }
LABEL_30:
          unint64_t v17 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      int64_t v10 = v8 + 4;
      if (v10 < v19)
      {
        unint64_t v9 = *(void *)(v18 + 8 * v10);
        if (v9)
        {
          int64_t v6 = v10;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v6 = v10 + 1;
          if (__OFADD__(v10, 1)) {
            goto LABEL_33;
          }
          if (v6 >= v19) {
            break;
          }
          unint64_t v9 = *(void *)(v18 + 8 * v6);
          ++v10;
          if (v9) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_31:
    swift_release();
    return (uint64_t)v7;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_19F04D75C()
{
  uint64_t v24 = v0;
  swift_release();
  swift_getErrorValue();
  if (sub_19EEA3A88(*(void *)(v0 + 232)))
  {
  }
  else
  {
    uint64_t v1 = (long long *)(v0 + 80);
    if (qword_1EB3910D8 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)qword_1EB394F08;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
    id v4 = v2;
    long long v20 = sub_19EEC3F3C(0, 34, 0, MEMORY[0x1E4FBC860]);
    v5._object = (void *)0x800000019F269A50;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 256);
    *(void *)(v0 + 184) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19EEC3ED8(v0 + 160, v0 + 192, &qword_1EB393260);
    long long *v1 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    sub_19EEC3E70(v0 + 192, v0 + 80);
    *(unsigned char *)(v0 + 112) = 0;
    long long v9 = *(_OWORD *)(v0 + 96);
    long long v21 = *v1;
    long long v22 = v9;
    char v23 = *(unsigned char *)(v0 + 112);
    int64_t v10 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v10 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      int64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    unint64_t v13 = *(void **)(v0 + 304);
    v10[2] = v12 + 1;
    uint64_t v14 = &v10[5 * v12];
    long long v15 = v21;
    long long v16 = v22;
    *((unsigned char *)v14 + 64) = v23;
    *((_OWORD *)v14 + 2) = v15;
    *((_OWORD *)v14 + 3) = v16;
    long long v20 = v10;
    sub_19EEBD664(v0 + 160, &qword_1EB393260);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    *(void *)(v3 + 32) = v10;
    *(void *)&long long v21 = v4;
    LOBYTE(v20) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v20);
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18(0);
}

uint64_t sub_19F04DA34()
{
  uint64_t v24 = v0;
  swift_release();
  swift_getErrorValue();
  if (sub_19EEA3A88(*(void *)(v0 + 232)))
  {
  }
  else
  {
    uint64_t v1 = (long long *)(v0 + 80);
    if (qword_1EB3910D8 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)qword_1EB394F08;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
    id v4 = v2;
    long long v20 = sub_19EEC3F3C(0, 34, 0, MEMORY[0x1E4FBC860]);
    v5._object = (void *)0x800000019F269A50;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 256);
    *(void *)(v0 + 184) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19EEC3ED8(v0 + 160, v0 + 192, &qword_1EB393260);
    long long *v1 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    sub_19EEC3E70(v0 + 192, v0 + 80);
    *(unsigned char *)(v0 + 112) = 0;
    long long v9 = *(_OWORD *)(v0 + 96);
    long long v21 = *v1;
    long long v22 = v9;
    char v23 = *(unsigned char *)(v0 + 112);
    int64_t v10 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v10 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      int64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    unint64_t v13 = *(void **)(v0 + 304);
    v10[2] = v12 + 1;
    uint64_t v14 = &v10[5 * v12];
    long long v15 = v21;
    long long v16 = v22;
    *((unsigned char *)v14 + 64) = v23;
    *((_OWORD *)v14 + 2) = v15;
    *((_OWORD *)v14 + 3) = v16;
    long long v20 = v10;
    sub_19EEBD664(v0 + 160, &qword_1EB393260);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    *(void *)(v3 + 32) = v10;
    *(void *)&long long v21 = v4;
    LOBYTE(v20) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v20);
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
  return v18(0, 1);
}

uint64_t sub_19F04DD10()
{
  uint64_t v24 = v0;
  swift_release();
  swift_getErrorValue();
  if (sub_19EEA3A88(*(void *)(v0 + 232)))
  {
  }
  else
  {
    uint64_t v1 = (long long *)(v0 + 80);
    if (qword_1EB3910D8 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)qword_1EB394F08;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
    id v4 = v2;
    long long v20 = sub_19EEC3F3C(0, 34, 0, MEMORY[0x1E4FBC860]);
    v5._object = (void *)0x800000019F269A50;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 256);
    *(void *)(v0 + 184) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19EEC3ED8(v0 + 160, v0 + 192, &qword_1EB393260);
    long long *v1 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    sub_19EEC3E70(v0 + 192, v0 + 80);
    *(unsigned char *)(v0 + 112) = 0;
    long long v9 = *(_OWORD *)(v0 + 96);
    long long v21 = *v1;
    long long v22 = v9;
    char v23 = *(unsigned char *)(v0 + 112);
    int64_t v10 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v10 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      int64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    unint64_t v13 = *(void **)(v0 + 304);
    v10[2] = v12 + 1;
    uint64_t v14 = &v10[5 * v12];
    long long v15 = v21;
    long long v16 = v22;
    *((unsigned char *)v14 + 64) = v23;
    *((_OWORD *)v14 + 2) = v15;
    *((_OWORD *)v14 + 3) = v16;
    long long v20 = v10;
    sub_19EEBD664(v0 + 160, &qword_1EB393260);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    *(void *)(v3 + 32) = v10;
    *(void *)&long long v21 = v4;
    LOBYTE(v20) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v20);
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v18(2);
}

uint64_t sub_19F04DFE8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_19F250E90;
  uint64_t v1 = (void *)sub_19F1DBD4C();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_keyWithName_crossDeviceSync_, v1, 1);

  *(void *)(v0 + 32) = v3;
  id v4 = (void *)sub_19F1DBD4C();
  id v5 = objc_msgSend(v2, sel_keyWithName_crossDeviceSync_, v4, 0);

  *(void *)(v0 + 40) = v5;
  uint64_t result = sub_19F1DC17C();
  qword_1E9473298 = v0;
  return result;
}

uint64_t sub_19F04E0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  return MEMORY[0x1F4188298](sub_19F04E114, 0, 0);
}

uint64_t sub_19F04E114()
{
  v0[2] = *(void *)(v0[7] + 48);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_19F04E1CC;
  v1[21] = v0[2];
  return MEMORY[0x1F4188298](sub_19F04E694, 0, 0);
}

uint64_t sub_19F04E1CC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 72) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19F04E2CC, 0, 0);
}

uint64_t sub_19F04E2CC()
{
  long long v33 = v0;
  uint64_t v1 = v0[9];
  if (v1)
  {
    uint64_t v2 = v0[4];
    uint64_t v3 = v0[5];
    swift_bridgeObjectRetain();
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_19F0508A0(v4, v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_19F050518(v5, v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v6 + 16))
    {
      uint64_t v8 = *(void *)(v6 + 32);
      uint64_t v7 = *(void *)(v6 + 40);
      char v9 = *(unsigned char *)(v6 + 48);
      uint64_t v11 = *(void *)(v6 + 56);
      uint64_t v10 = *(void *)(v6 + 64);
      char v24 = *(unsigned char *)(v6 + 72);
      uint64_t v12 = *(void *)(v6 + 80);
      uint64_t v23 = *(void *)(v6 + 88);
      uint64_t v13 = *(void *)(v6 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25[0] = v8;
      v25[1] = v7;
      char v26 = v9;
      uint64_t v27 = v11;
      uint64_t v28 = v10;
      char v29 = v24;
      uint64_t v30 = v12;
      uint64_t v31 = v23;
      uint64_t v32 = v13;
      id v14 = sub_19F04ED68((uint64_t)v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1E9470140 != -1) {
        swift_once();
      }
      id v15 = sub_19EF87794(qword_1E9473298, v0[6], 1, 0);

      if (*(void *)(sub_19F04D454((uint64_t)v15) + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392F20);
        uint64_t v16 = sub_19F1DD06C();
      }
      else
      {
        uint64_t v16 = MEMORY[0x1E4FBC868];
      }
      v25[0] = v16;
      uint64_t v21 = swift_bridgeObjectRetain();
      sub_19F050144(v21, 1, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v20 = v25[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v20 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
    }
    long long v22 = (uint64_t (*)(unint64_t))v0[1];
    return v22(v20);
  }
  else
  {
    sub_19F05003C();
    swift_allocError();
    *Swift::String v17 = 1;
    swift_willThrow();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_19F04E600()
{
  *(void *)(v1 + 168) = *v0;
  return MEMORY[0x1F4188298](sub_19F04E694, 0, 0);
}

uint64_t sub_19F04E694()
{
  sub_19F1DBEFC();
  uint64_t v1 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend((id)swift_unknownObjectRetain(), sel_dictionaryForKey_, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391D10);
  uint64_t v3 = (void *)swift_allocObject();
  *(void *)(v0 + 176) = v3;
  v3[2] = v2;
  v3[3] = sub_19EEA4604;
  v3[4] = 0;

  swift_unknownObjectRelease();
  uint64_t v4 = dword_1E94732F0;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v5;
  void *v5 = v0;
  v5[1] = sub_19F04E82C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1E94732F0 + v4))((uint64_t)v3);
}

uint64_t sub_19F04E82C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](sub_19F04E978, 0, 0);
}

uint64_t sub_19F04E978()
{
  uint64_t v34 = v0;
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  if (*(void *)(v0 + 192))
  {
    sub_19F1DAD0C();
    swift_allocObject();
    sub_19F1DACFC();
    uint64_t v1 = self;
    id v2 = (void *)sub_19F1DBB1C();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 152) = 0;
    id v3 = objc_msgSend(v1, sel_dataWithJSONObject_options_error_, v2, 0, v0 + 152);

    id v4 = *(id *)(v0 + 152);
    if (v3)
    {
      uint64_t v5 = sub_19F1DB40C();
      unint64_t v7 = v6;

      sub_19F05084C();
      sub_19F1DACEC();
      swift_release();
      sub_19EEA072C(v5, v7);
      uint64_t v8 = *(void *)(v0 + 144);
      goto LABEL_12;
    }
    char v9 = v4;
    swift_release();
    uint64_t v10 = (void *)sub_19F1DB19C();

    swift_willThrow();
    uint64_t v11 = (long long *)(v0 + 16);
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    id v14 = v12;
    char v29 = sub_19EEC3F3C(0, 47, 0, MEMORY[0x1E4FBC860]);
    v15._object = (void *)0x800000019F26ED20;
    v15._countAndFlagsBits = 0xD00000000000002ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    swift_getErrorValue();
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v17 = *(void *)(v0 + 128);
    *(void *)(v0 + 112) = v17;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 88));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(boxed_opaque_existential_2Tm, v16, v17);
    sub_19EEC3ED8(v0 + 88, v0 + 56, &qword_1EB393260);
    *uint64_t v11 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_19EEC3E70(v0 + 56, v0 + 16);
    *(unsigned char *)(v0 + 48) = 0;
    long long v19 = *(_OWORD *)(v0 + 32);
    long long v30 = *v11;
    long long v31 = v19;
    char v32 = *(unsigned char *)(v0 + 48);
    unint64_t v20 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v20 = sub_19EEC3F3C(0, v29[2] + 1, 1, v29);
    }
    unint64_t v22 = v20[2];
    unint64_t v21 = v20[3];
    if (v22 >= v21 >> 1) {
      unint64_t v20 = sub_19EEC3F3C((void *)(v21 > 1), v22 + 1, 1, v20);
    }
    v20[2] = v22 + 1;
    uint64_t v23 = &v20[5 * v22];
    long long v24 = v30;
    long long v25 = v31;
    *((unsigned char *)v23 + 64) = v32;
    *((_OWORD *)v23 + 2) = v24;
    *((_OWORD *)v23 + 3) = v25;
    char v29 = v20;
    sub_19EEBD664(v0 + 88, &qword_1EB393260);
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    *(void *)(v13 + 32) = v20;
    *(void *)&long long v30 = v14;
    LOBYTE(v29) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v29);
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = 0;
LABEL_12:
  uint64_t v27 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v27(v8);
}

id sub_19F04ED68(uint64_t a1)
{
  uint64_t v2 = (uint64_t)v1;
  double v3 = *(double *)(a1 + 32);
  int v4 = *(unsigned __int8 *)(a1 + 40);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD78]), sel_init);
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v11, v6, v7);
  uint64_t v8 = (void *)v11[0];
  objc_msgSend(v5, sel_setAccount_, v11[0]);

  objc_msgSend(v5, sel_setClientInfo_, *(void *)(v2 + 40));
  char v9 = (void *)sub_19F1DBD4C();
  objc_msgSend(v5, sel_setDomain_, v9);

  sub_19F0506C4(v2, (uint64_t)v11);
  if (v4) {
    double v3 = *(double *)&v11[7];
  }
  sub_19F05081C((uint64_t)v11);
  objc_msgSend(v5, sel_setResetInterval_, v3);
  objc_msgSend(v5, sel_setIsActiveITunesAccountRequired_, *(unsigned __int8 *)(v2 + 64));
  return v5;
}

uint64_t sub_19F04EEB0(uint64_t a1)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = v1;
  return MEMORY[0x1F4188298](sub_19F04EED0, 0, 0);
}

uint64_t sub_19F04EED0()
{
  v0[11] = *(void *)(v0[14] + 48);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  void *v1 = v0;
  v1[1] = sub_19F04EF88;
  v1[21] = v0[11];
  return MEMORY[0x1F4188298](sub_19F04E694, 0, 0);
}

uint64_t sub_19F04EF88(uint64_t a1)
{
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19F04F088, 0, 0);
}

uint64_t sub_19F04F088()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_19EF9EC80(v2);
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_19F050AF4(v4, v3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_19F050518(v5, v1);
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_19EFAB134(v6);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_19EF9F16C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v9 = v8[2];
    if (v9)
    {
      uint64_t v10 = (double *)(v8 + 7);
      uint64_t v22 = *((void *)v24 + 14);
      uint64_t v23 = (uint64_t)(v24 + 2);
      do
      {
        uint64_t v11 = (void *)*((void *)v24 + 14);
        double v12 = v10[1];
        int v25 = *((unsigned __int8 *)v10 + 16);
        id v13 = objc_allocWithZone(MEMORY[0x1E4F4DD78]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v14 = objc_msgSend(v13, sel_init);
        uint64_t v15 = *(void *)(v22 + 24);
        uint64_t v16 = *(void *)(v22 + 32);
        __swift_project_boxed_opaque_existential_1(v11, v15);
        (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v16 + 8))(&v26, v15, v16);
        uint64_t v17 = v26;
        objc_msgSend(v14, sel_setAccount_, v26);

        objc_msgSend(v14, sel_setClientInfo_, *(void *)(v22 + 40));
        uint64_t v18 = (void *)sub_19F1DBD4C();
        objc_msgSend(v14, sel_setDomain_, v18);

        sub_19F0506C4((uint64_t)v11, v23);
        if (v25) {
          double v12 = v24[9];
        }
        sub_19F05081C(v23);
        objc_msgSend(v14, sel_setResetInterval_, v12);
        objc_msgSend(v14, sel_setIsActiveITunesAccountRequired_, *(unsigned __int8 *)(v22 + 64));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_reset);

        v10 += 9;
        --v9;
      }
      while (v9);
    }
    swift_release();
    long long v19 = (uint64_t (*)(void))*((void *)v24 + 1);
  }
  else
  {
    sub_19F05003C();
    swift_allocError();
    *unint64_t v20 = 1;
    swift_willThrow();
    long long v19 = (uint64_t (*)(void))*((void *)v24 + 1);
  }
  return v19();
}

uint64_t sub_19F04F3D8()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_19F04F3F8, 0, 0);
}

uint64_t sub_19F04F3F8()
{
  v0[2] = *(void *)(v0[3] + 48);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_19F04F4B0;
  v1[21] = v0[2];
  return MEMORY[0x1F4188298](sub_19F04E694, 0, 0);
}

uint64_t sub_19F04F4B0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19F04F5B0, 0, 0);
}

uint64_t sub_19F04F5B0()
{
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v2 = v0[3];
    uint64_t v3 = swift_task_alloc();
    v0[6] = v3;
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[7] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_19F04F708;
    uint64_t v5 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v6 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v7 = MEMORY[0x1E4FBC848] + 8;
    return MEMORY[0x1F4188080](v4, v5, v6, 0, 0, &unk_1E94732D8, v3, v7);
  }
  else
  {
    sub_19F05003C();
    swift_allocError();
    *uint64_t v8 = 1;
    swift_willThrow();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_19F04F708()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19F04F83C, 0, 0);
}

uint64_t sub_19F04F83C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19F04F854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[29] = a3;
  v4[30] = a4;
  v4[28] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F04F8FC, 0, 0);
}

uint64_t sub_19F04F8FC()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_19F050518(v2, v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_19EFAB134(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_19EF9F16C(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5[2];
  if (v6)
  {
    uint64_t v7 = (long long *)(v0 + 16);
    uint64_t v8 = v5 + 4;
    uint64_t v9 = sub_19F1DC37C();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    long long v36 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v34 = (void (**)(uint64_t, uint64_t))(v10 + 8);
    uint64_t v35 = v9;
    do
    {
      uint64_t v38 = v6;
      uint64_t v12 = *(void *)(v0 + 248);
      uint64_t v13 = *(void *)(v0 + 256);
      uint64_t v14 = *(void *)(v0 + 240);
      *uint64_t v7 = *(_OWORD *)v8;
      long long v16 = *((_OWORD *)v8 + 2);
      long long v15 = *((_OWORD *)v8 + 3);
      long long v17 = *((_OWORD *)v8 + 1);
      *(void *)(v0 + 80) = v8[8];
      *(_OWORD *)(v0 + 48) = v16;
      *(_OWORD *)(v0 + 64) = v15;
      *(_OWORD *)(v0 + 32) = v17;
      v37(v13, 1, 1, v9);
      sub_19F0506C4(v14, v0 + 88);
      uint64_t v18 = swift_allocObject();
      long long v19 = *(_OWORD *)(v0 + 136);
      *(_OWORD *)(v18 + 64) = *(_OWORD *)(v0 + 120);
      *(_OWORD *)(v18 + 80) = v19;
      long long v20 = *(_OWORD *)(v0 + 104);
      *(_OWORD *)(v18 + 32) = *(_OWORD *)(v0 + 88);
      *(_OWORD *)(v18 + 48) = v20;
      long long v21 = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v18 + 152) = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v18 + 136) = v21;
      long long v22 = *v7;
      *(_OWORD *)(v18 + 120) = *(_OWORD *)(v0 + 32);
      *(void *)(v18 + 16) = 0;
      uint64_t v23 = (void *)(v18 + 16);
      *(void *)(v18 + 24) = 0;
      *(unsigned char *)(v18 + 96) = *(unsigned char *)(v0 + 152);
      *(void *)(v18 + 168) = *(void *)(v0 + 80);
      *(_OWORD *)(v18 + 104) = v22;
      sub_19EEC3ED8(v13, v12, (uint64_t *)&unk_1EB392830);
      uint64_t v24 = v9;
      int v25 = (*v36)(v12, 1, v9);
      sub_19EFAB254(v0 + 16);
      uint64_t v26 = *(void *)(v0 + 248);
      if (v25 == 1)
      {
        sub_19EEBD664(*(void *)(v0 + 248), (uint64_t *)&unk_1EB392830);
        if (!*v23) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_19F1DC36C();
        (*v34)(v26, v24);
        if (!*v23)
        {
LABEL_8:
          uint64_t v27 = 0;
          uint64_t v29 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v27 = sub_19F1DC2FC();
      uint64_t v29 = v28;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v30 = **(void **)(v0 + 224);
      uint64_t v31 = v29 | v27;
      if (v29 | v27)
      {
        uint64_t v31 = v0 + 160;
        *(void *)(v0 + 160) = 0;
        *(void *)(v0 + 168) = 0;
        *(void *)(v0 + 176) = v27;
        *(void *)(v0 + 184) = v29;
      }
      uint64_t v9 = v35;
      uint64_t v11 = *(void *)(v0 + 256);
      *(void *)(v0 + 192) = 1;
      *(void *)(v0 + 200) = v31;
      *(void *)(v0 + 208) = v30;
      swift_task_create();
      swift_release();
      sub_19EEBD664(v11, (uint64_t *)&unk_1EB392830);
      v8 += 9;
      uint64_t v6 = v38 - 1;
    }
    while (v38 != 1);
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  char v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_19F04FC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 64) = a4;
  *(void *)(v5 + 72) = a5;
  return MEMORY[0x1F4188298](sub_19F04FCA0, 0, 0);
}

uint64_t sub_19F04FCA0()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[9];
  long long v2 = *(_OWORD *)(v1 + 48);
  id v11[2] = *(_OWORD *)(v1 + 32);
  v11[3] = v2;
  uint64_t v12 = *(void *)(v1 + 64);
  long long v3 = *(_OWORD *)(v1 + 16);
  v11[0] = *(_OWORD *)v1;
  v11[1] = v3;
  id v4 = sub_19F04ED68((uint64_t)v11);
  uint64_t v5 = (void *)sub_19F1DBD4C();
  id v6 = objc_msgSend(self, sel_keyWithName_crossDeviceSync_, v5, 1);

  id v7 = objc_msgSend(v4, sel_identifierIfExistsForKey_, v6);
  v0[6] = nullsub_1;
  v0[7] = 0;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_19EF7D74C;
  v0[5] = &block_descriptor_16;
  uint64_t v8 = _Block_copy(v0 + 2);
  objc_msgSend(v7, sel_addFinishBlock_, v8);
  _Block_release(v8);

  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_19F04FE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_19EE19904;
  v8[6] = a3;
  v8[7] = v3;
  _DWORD v8[4] = a1;
  v8[5] = a2;
  return MEMORY[0x1F4188298](sub_19F04E114, 0, 0);
}

uint64_t sub_19F04FEE8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE17780;
  v4[13] = a1;
  v4[14] = v1;
  return MEMORY[0x1F4188298](sub_19F04EED0, 0, 0);
}

uint64_t sub_19F04FF94()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_19EEB8A6C;
  v2[3] = v0;
  return MEMORY[0x1F4188298](sub_19F04F3F8, 0, 0);
}

unint64_t sub_19F05003C()
{
  unint64_t result = qword_1E94732C8;
  if (!qword_1E94732C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E94732C8);
  }
  return result;
}

uint64_t sub_19F050090(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_19EEB8A6C;
  return sub_19F04F854(a1, a2, v7, v6);
}

void sub_19F050144(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  sub_19EEC3ED8(a1 + 32, (uint64_t)&v44, (uint64_t *)&unk_1EB392CE0);
  uint64_t v7 = v44;
  uint64_t v8 = v45;
  uint64_t v42 = v44;
  uint64_t v43 = v45;
  sub_19EEBDC00(v46, v41);
  uint64_t v9 = (void *)*a3;
  unint64_t v11 = sub_19EEBD400(v7, v8);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_19EE7DBE0();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    long long v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    long long v21 = (uint64_t *)(v20[6] + 16 * v11);
    *long long v21 = v7;
    v21[1] = v8;
    sub_19EEBDC00(v41, (_OWORD *)(v20[7] + 32 * v11));
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    uint64_t v25 = v4 - 1;
    if (!v25)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v26 = a1 + 80;
    while (1)
    {
      sub_19EEC3ED8(v26, (uint64_t)&v44, (uint64_t *)&unk_1EB392CE0);
      uint64_t v27 = v44;
      uint64_t v28 = v45;
      uint64_t v42 = v44;
      uint64_t v43 = v45;
      sub_19EEBDC00(v46, v41);
      uint64_t v29 = (void *)*a3;
      unint64_t v30 = sub_19EEBD400(v27, v28);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v23 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v23) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_19EEBD714(v34, 1);
        unint64_t v30 = sub_19EEBD400(v27, v28);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      uint64_t v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
      *uint64_t v38 = v27;
      v38[1] = v28;
      sub_19EEBDC00(v41, (_OWORD *)(v37[7] + 32 * v30));
      uint64_t v39 = v37[2];
      BOOL v23 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v37[2] = v40;
      v26 += 48;
      if (!--v25) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_19EEBD714(v14, a2 & 1);
  unint64_t v16 = sub_19EEBD400(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v18 = (void *)swift_allocError();
    swift_willThrow();
    id v47 = v18;
    id v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_19F1DD65C();
  __break(1u);
LABEL_26:
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  sub_19F1DCFCC();
  __break(1u);
}

uint64_t sub_19F050518(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v43 = MEMORY[0x1E4FBC860];
    sub_19EFF6410(0, v2, 0);
    uint64_t v3 = v43;
    uint64_t v5 = (char *)(a1 + 48);
    do
    {
      uint64_t v6 = *((void *)v5 - 1);
      char v7 = *v5;
      uint64_t v9 = *((void *)v5 + 1);
      uint64_t v8 = *((void *)v5 + 2);
      char v10 = v5[24];
      uint64_t v11 = *((void *)v5 + 6);
      v29[0] = *((void *)v5 - 2);
      v29[1] = v6;
      char v30 = v7;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      char v33 = v10;
      long long v34 = *((_OWORD *)v5 + 2);
      uint64_t v35 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19F157F28(v29, a2, (uint64_t)v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v36[0];
      uint64_t v13 = v36[1];
      char v14 = v37;
      uint64_t v15 = v38;
      uint64_t v16 = v39;
      char v17 = v40;
      long long v18 = v41;
      uint64_t v19 = v42;
      unint64_t v21 = *(void *)(v3 + 16);
      unint64_t v20 = *(void *)(v3 + 24);
      uint64_t v43 = v3;
      if (v21 >= v20 >> 1)
      {
        long long v27 = v41;
        uint64_t v26 = v38;
        char v25 = v40;
        uint64_t v24 = v42;
        sub_19EFF6410(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v24;
        char v17 = v25;
        uint64_t v15 = v26;
        long long v18 = v27;
        uint64_t v3 = v43;
      }
      v5 += 72;
      *(void *)(v3 + 16) = v21 + 1;
      uint64_t v22 = v3 + 72 * v21;
      *(void *)(v22 + 32) = v12;
      *(void *)(v22 + 40) = v13;
      *(unsigned char *)(v22 + 48) = v14;
      *(void *)(v22 + 56) = v15;
      *(void *)(v22 + 64) = v16;
      *(unsigned char *)(v22 + 72) = v17;
      *(_OWORD *)(v22 + 80) = v18;
      *(void *)(v22 + 96) = v19;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_19F0506C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19F0506FC()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 176, 7);
}

uint64_t sub_19F05076C()
{
  int64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *int64_t v2 = v1;
  v2[1] = sub_19EE17780;
  v2[8] = v0 + 32;
  v2[9] = v0 + 104;
  return MEMORY[0x1F4188298](sub_19F04FCA0, 0, 0);
}

uint64_t sub_19F05081C(uint64_t a1)
{
  return a1;
}

unint64_t sub_19F05084C()
{
  unint64_t result = qword_1E946DB78;
  if (!qword_1E946DB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DB78);
  }
  return result;
}

uint64_t sub_19F0508A0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    unint64_t v6 = 0;
    uint64_t v28 = result + 32;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    unint64_t v27 = *(void *)(result + 16);
    while (1)
    {
      if (v6 <= v3) {
        unint64_t v7 = v3;
      }
      else {
        unint64_t v7 = v6;
      }
      unint64_t v30 = v7;
      while (1)
      {
        if (v6 == v30) {
          goto LABEL_34;
        }
        uint64_t v8 = v28 + 72 * v6;
        uint64_t v9 = *(void **)(v8 + 24);
        ++v6;
        uint64_t v10 = v9[2];
        if (!v10) {
          goto LABEL_7;
        }
        uint64_t v26 = *(void *)v8;
        uint64_t v22 = *(void *)(v8 + 8);
        char v25 = *(unsigned char *)(v8 + 16);
        uint64_t v24 = *(void *)(v8 + 32);
        char v23 = *(unsigned char *)(v8 + 40);
        long long v29 = *(_OWORD *)(v8 + 48);
        uint64_t v11 = *(void *)(v8 + 64);
        if (v9[4] == a2 && v9[5] == a3) {
          break;
        }
        unint64_t result = sub_19F1DD44C();
        if (result) {
          break;
        }
        if (v10 != 1)
        {
          uint64_t v13 = v9 + 7;
          uint64_t v14 = 1;
          while (1)
          {
            uint64_t v15 = v14 + 1;
            if (__OFADD__(v14, 1)) {
              break;
            }
            if (*(v13 - 1) == a2 && *v13 == a3) {
              goto LABEL_25;
            }
            unint64_t result = sub_19F1DD44C();
            if (result) {
              goto LABEL_25;
            }
            v13 += 2;
            ++v14;
            if (v15 == v10) {
              goto LABEL_7;
            }
          }
          __break(1u);
LABEL_34:
          __break(1u);
          return result;
        }
LABEL_7:
        if (v6 == v27) {
          return v21;
        }
      }
LABEL_25:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = v21;
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = sub_19EFF6410(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v17 = v21;
      }
      unint64_t v19 = *(void *)(v17 + 16);
      unint64_t v18 = *(void *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        unint64_t result = sub_19EFF6410(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v21;
      }
      *(void *)(v17 + 16) = v19 + 1;
      uint64_t v21 = v17;
      uint64_t v20 = v17 + 72 * v19;
      *(void *)(v20 + 32) = v26;
      *(void *)(v20 + 40) = v22;
      *(unsigned char *)(v20 + 48) = v25;
      *(void *)(v20 + 56) = v9;
      *(void *)(v20 + 64) = v24;
      *(unsigned char *)(v20 + 72) = v23;
      *(_OWORD *)(v20 + 80) = v29;
      *(void *)(v20 + 96) = v11;
      unint64_t v3 = v27;
      if (v6 == v27) {
        return v21;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_19F050AF4(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v3 = 0;
  uint64_t v24 = result + 32;
  uint64_t v21 = a2 + 7;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v23 = *(void *)(result + 16);
  while (2)
  {
    if (v3 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v3;
    }
    uint64_t v31 = v4;
    unint64_t v22 = v5;
    while (1)
    {
      if (v3 == v5)
      {
LABEL_38:
        __break(1u);
        return result;
      }
      uint64_t v6 = v24 + 72 * v3++;
      uint64_t v34 = *(void *)(v6 + 24);
      uint64_t v7 = *(void *)(v34 + 16);
      if (v7) {
        break;
      }
LABEL_27:
      unint64_t v5 = v22;
      uint64_t v4 = v31;
      if (v3 == v23) {
        return v4;
      }
    }
    uint64_t v8 = 0;
    uint64_t v29 = *(void *)(v6 + 8);
    uint64_t v30 = *(void *)v6;
    char v28 = *(unsigned char *)(v6 + 16);
    uint64_t v27 = *(void *)(v6 + 32);
    char v26 = *(unsigned char *)(v6 + 40);
    long long v32 = *(_OWORD *)(v6 + 48);
    uint64_t v25 = *(void *)(v6 + 64);
    uint64_t v9 = a2[2];
    while (1)
    {
      if (!v9) {
        goto LABEL_10;
      }
      uint64_t v10 = (uint64_t *)(v34 + 32 + 16 * v8);
      uint64_t v11 = *v10;
      uint64_t v12 = v10[1];
      if (a2[4] == *v10 && a2[5] == v12) {
        break;
      }
      unint64_t result = sub_19F1DD44C();
      if (result) {
        break;
      }
      if (v9 != 1)
      {
        uint64_t v14 = v21;
        uint64_t v15 = 1;
        while (1)
        {
          uint64_t v16 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            break;
          }
          if (*(v14 - 1) == v11 && *v14 == v12) {
            goto LABEL_29;
          }
          unint64_t result = sub_19F1DD44C();
          if (result) {
            goto LABEL_29;
          }
          v14 += 2;
          ++v15;
          if (v16 == v9) {
            goto LABEL_10;
          }
        }
        __break(1u);
        goto LABEL_38;
      }
LABEL_10:
      if (++v8 == v7) {
        goto LABEL_27;
      }
    }
LABEL_29:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = v31;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_19EFF6410(0, *(void *)(v31 + 16) + 1, 1);
      uint64_t v4 = v31;
    }
    unint64_t v19 = *(void *)(v4 + 16);
    unint64_t v18 = *(void *)(v4 + 24);
    if (v19 >= v18 >> 1)
    {
      unint64_t result = sub_19EFF6410(v18 > 1, v19 + 1, 1);
      uint64_t v4 = v31;
    }
    *(void *)(v4 + 16) = v19 + 1;
    uint64_t v20 = v4 + 72 * v19;
    *(void *)(v20 + 32) = v30;
    *(void *)(v20 + 40) = v29;
    *(unsigned char *)(v20 + 48) = v28;
    *(void *)(v20 + 56) = v34;
    *(void *)(v20 + 64) = v27;
    *(unsigned char *)(v20 + 72) = v26;
    *(_OWORD *)(v20 + 80) = v32;
    *(void *)(v20 + 96) = v25;
    unint64_t v2 = v23;
    if (v3 != v23) {
      continue;
    }
    return v4;
  }
}

uint64_t LazyPromise.__allocating_init(on:perform:)(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  LazyPromise.init(on:perform:)(a1, a2, a3);
  return v6;
}

uint64_t LazyPromise.init(on:perform:)(long long *a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  *(void *)(v3 + 16) = v7;
  sub_19EEBB420(a1, v3 + 24);
  *(void *)(v3 + 64) = a2;
  *(void *)(v3 + 72) = a3;
  *(unsigned char *)(v3 + 80) = 0;
  return v3;
}

uint64_t LazyPromise.hasStarted.getter()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_19EE978D8(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_19F050EBC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = a1 + 24;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for LazyPromise.State();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, v3, v4);
  if (v8[56])
  {
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
    char v7 = 1;
  }
  else
  {
    swift_release();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_19F050FC8@<X0>(char *a1@<X8>)
{
  return sub_19F050EBC(v1, a1);
}

uint64_t *LazyPromise.start()()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  uint64_t v2 = v0 + 24;
  swift_beginAccess();
  uint64_t v3 = type metadata accessor for LazyPromise.State();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(long long *, uint64_t, uint64_t))(v4 + 16))(v19, v0 + 24, v3);
  if (v22)
  {
    uint64_t v5 = *(uint64_t **)&v19[0];
    os_unfair_lock_unlock(v1);
  }
  else
  {
    uint64_t v7 = v20;
    uint64_t v6 = v21;
    sub_19EEBB420(v19, (uint64_t)v16);
    type metadata accessor for Promise();
    uint64_t v5 = Promise.__allocating_init()();
    uint64_t v14 = v5;
    char v15 = 1;
    swift_beginAccess();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t **, uint64_t))(v4 + 40);
    swift_retain();
    v8(v2, &v14, v3);
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    uint64_t v9 = v17;
    uint64_t v10 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    uint64_t v11 = (void *)swift_allocObject();
    id v11[2] = v7;
    v11[3] = v6;
    _OWORD v11[4] = v5;
    uint64_t v12 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v10 + 8);
    swift_retain();
    swift_retain();
    v12(sub_19F05340C, v11, v9, v10);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  }
  return v5;
}

uint64_t sub_19F0511EC(void (*a1)(void (*)(uint64_t), uint64_t, void (*)(void *), uint64_t), uint64_t a2, uint64_t a3)
{
  return swift_release_n();
}

uint64_t LazyPromise.then(perform:orCatchError:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LazyPromise.start()();
  Promise.then(perform:orCatchError:on:)(a1, a2, a3, a4, a5);
  return swift_release();
}

uint64_t LazyPromise.then()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_19F051300, 0, 0);
}

uint64_t sub_19F051300()
{
  v0[4] = LazyPromise.start()();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_19F0513A8;
  uint64_t v2 = v0[2];
  return Promise.then()(v2);
}

uint64_t sub_19F0513A8()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F051520;
  }
  else {
    uint64_t v2 = sub_19F0514BC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0514BC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F051520()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t LazyPromise.map<A>(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  type metadata accessor for LazyPromise();
  sub_19EEC4154(a1, (uint64_t)v14);
  sub_19EEC4154(a1, (uint64_t)v13);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a4;
  void v10[3] = v5;
  v10[4] = a2;
  v10[5] = a3;
  sub_19EEBB420(v13, (uint64_t)(v10 + 6));
  uint64_t v11 = swift_allocObject();
  LazyPromise.init(on:perform:)(v14, (uint64_t)sub_19F053478, (uint64_t)v10);
  swift_retain();
  swift_retain();
  return v11;
}

uint64_t sub_19F051668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = *a5;
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = *(void *)(v15 + 80);
  void v16[3] = a9;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = a6;
  v16[7] = a7;
  v16[8] = a3;
  v16[9] = a4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  swift_retain_n();
  swift_retain();
  swift_retain();
  LazyPromise.start()();
  Promise.then(perform:orCatchError:on:)((uint64_t)sub_19F053C60, (uint64_t)v16, (uint64_t)sub_19F053C94, v17, a8);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_19F0517AC(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = *(void *)(a9 - 8);
  double v11 = MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14(v11);
  a2(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, a9);
}

uint64_t LazyPromise.flatMap<A>(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  swift_getAssociatedTypeWitness();
  type metadata accessor for LazyPromise();
  sub_19EEC4154(a1, (uint64_t)v16);
  sub_19EEC4154(a1, (uint64_t)v15);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = v6;
  v12[5] = a2;
  v12[6] = a3;
  sub_19EEBB420(v15, (uint64_t)(v12 + 7));
  uint64_t v13 = swift_allocObject();
  LazyPromise.init(on:perform:)(v16, (uint64_t)sub_19F0534F0, (uint64_t)v12);
  swift_retain();
  swift_retain();
  return v13;
}

uint64_t sub_19F0519E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = *a5;
  sub_19EEC4154(a8, (uint64_t)v21);
  uint64_t v16 = (void *)swift_allocObject();
  long long v16[2] = *(void *)(v15 + 80);
  void v16[3] = a9;
  v16[4] = a10;
  v16[5] = a6;
  v16[6] = a7;
  v16[7] = a1;
  v16[8] = a2;
  v16[9] = a3;
  v16[10] = a4;
  sub_19EEBB420(v21, (uint64_t)(v16 + 11));
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  swift_retain_n();
  swift_retain();
  swift_retain();
  LazyPromise.start()();
  Promise.then(perform:orCatchError:on:)((uint64_t)sub_19F053B44, (uint64_t)v16, (uint64_t)sub_19F053CC4, v17, a8);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t LazyPromise.join<A>(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  uint64_t v19 = *v3;
  uint64_t v6 = sub_19F1DC83C();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_19F1DBA3C();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_19F1DC86C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = sub_19EEA5F34();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCC68], v8);
  sub_19F1DBA1C();
  *(void *)&long long v22 = MEMORY[0x1E4FBC860];
  sub_19EE6A33C((unint64_t *)&qword_1EB393078, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393060);
  sub_19EEA5E54((unint64_t *)&qword_1EB393068, &qword_1EB393060);
  sub_19F1DCC1C();
  uint64_t v13 = (void *)sub_19F1DC8AC();
  uint64_t v14 = v20;
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  type metadata accessor for LazyPromise();
  unint64_t v23 = v12;
  uint64_t v24 = &protocol witness table for OS_dispatch_queue;
  *(void *)&long long v22 = v13;
  uint64_t v15 = (void *)swift_allocObject();
  long long v15[2] = a2;
  v15[3] = v14;
  v15[4] = v4;
  v15[5] = v13;
  v15[6] = v21;
  uint64_t v16 = swift_allocObject();
  LazyPromise.init(on:perform:)(&v22, (uint64_t)sub_19F05356C, (uint64_t)v15);
  id v17 = v13;
  swift_retain();
  swift_unknownObjectRetain();
  return v16;
}

uint64_t sub_19F051E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v50 = a7;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v13 = *a5;
  uint64_t v55 = sub_19F1DB9FC();
  uint64_t v58 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  char v54 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_19F1DBA3C();
  uint64_t v56 = *(void *)(v15 - 8);
  uint64_t v57 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v51 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (void *)swift_allocObject();
  uint64_t v18 = *(void *)(v13 + 80);
  uint64_t v49 = v17;
  v17[2] = v18;
  v17[3] = a8;
  v17[4] = a9;
  v17[5] = a1;
  v17[6] = a2;
  swift_retain();
  uint64_t v19 = dispatch_group_create();
  uint64_t v20 = type metadata accessor for Result();
  sub_19F1DCAAC();
  uint64_t v21 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v22, 1, 1, v20);
  dispatch_group_enter(v19);
  unint64_t v23 = (void *)swift_allocObject();
  _OWORD v23[2] = v18;
  v23[3] = a8;
  v23[4] = a9;
  v23[5] = v21;
  v23[6] = v19;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v18;
  v24[3] = a8;
  v24[4] = a9;
  v24[5] = v21;
  uint64_t v48 = v21;
  v24[6] = v19;
  id v47 = sub_19EEA5F34();
  uint64_t v61 = v47;
  v62 = (void (*)())&protocol witness table for OS_dispatch_queue;
  aBlock[0] = a6;
  swift_retain_n();
  uint64_t v25 = v19;
  id v26 = a6;
  LazyPromise.start()();
  Promise.then(perform:orCatchError:on:)((uint64_t)sub_19F0539D0, (uint64_t)v23, (uint64_t)sub_19F0539EC, (uint64_t)v24, (uint64_t)aBlock);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  swift_getAssociatedTypeWitness();
  uint64_t v27 = type metadata accessor for Result();
  sub_19F1DCAAC();
  uint64_t v28 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v29, 1, 1, v27);
  dispatch_group_enter(v25);
  uint64_t v30 = (void *)swift_allocObject();
  v46[0] = v18;
  _OWORD v30[2] = v18;
  v30[3] = a8;
  v30[4] = a9;
  v30[5] = v28;
  v30[6] = v25;
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v18;
  v31[3] = a8;
  uint64_t v32 = a8;
  v31[4] = a9;
  v31[5] = v28;
  v31[6] = v25;
  uint64_t v61 = v47;
  v62 = (void (*)())&protocol witness table for OS_dispatch_queue;
  aBlock[0] = v26;
  char v33 = *(void (**)(uint64_t (*)(uint64_t), void *, uint64_t (*)(uint64_t), void *, void *, uint64_t, uint64_t))(a9 + 16);
  uint64_t v34 = v25;
  swift_retain_n();
  id v47 = v34;
  v46[1] = v26;
  v33(sub_19F053A08, v30, sub_19F053A3C, v31, aBlock, v32, a9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  uint64_t v35 = (void *)swift_allocObject();
  v35[2] = v46[0];
  v35[3] = v32;
  uint64_t v37 = v48;
  char v36 = v49;
  v35[4] = a9;
  v35[5] = v37;
  v35[6] = v28;
  v35[7] = sub_19F0539BC;
  uint64_t v38 = v52;
  uint64_t v39 = v53;
  v35[8] = v36;
  v35[9] = v38;
  v35[10] = v39;
  v62 = sub_19F053ABC;
  uint64_t v63 = v35;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  uint64_t v61 = &block_descriptor_17;
  char v40 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  long long v41 = v51;
  sub_19F1DBA1C();
  uint64_t v59 = MEMORY[0x1E4FBC860];
  sub_19EE6A33C(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEA5E54((unint64_t *)&qword_1EB393050, &qword_1EB393048);
  uint64_t v43 = v54;
  uint64_t v42 = v55;
  sub_19F1DCC1C();
  uint64_t v44 = v47;
  sub_19F1DC81C();
  _Block_release(v40);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v42);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v57);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_19F05249C(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = *(void *)(TupleTypeMetadata2 - 8);
  double v12 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(void *)(a5 - 8) + 16))((char *)&v16 - v13, a1, a5, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(&v14[*(int *)(TupleTypeMetadata2 + 48)], a2, AssociatedTypeWitness);
  a3(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, TupleTypeMetadata2);
}

void sub_19F052628(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Result();
  uint64_t v8 = sub_19F1DCAAC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - v10;
  uint64_t v12 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v11, a1, a4);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v11, 0, 1, v7);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v12, v11, v8);
  dispatch_group_leave(a3);
}

void sub_19F0527BC(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = type metadata accessor for Result();
  uint64_t v6 = sub_19F1DCAAC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v12 - v8);
  uint64_t v10 = swift_projectBox();
  *uint64_t v9 = a1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v9, 0, 1, v5);
  swift_beginAccess();
  id v11 = a1;
  (*(void (**)(uint64_t, void *, uint64_t))(v7 + 40))(v10, v9, v6);
  dispatch_group_leave(a3);
}

void sub_19F052924(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = type metadata accessor for Result();
  uint64_t v7 = sub_19F1DCAAC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - v9;
  uint64_t v11 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v10, a1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v10, 0, 1, v6);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v11, v10, v7);
  dispatch_group_leave(a3);
}

void sub_19F052ADC(void *a1, uint64_t a2, NSObject *a3)
{
  swift_getAssociatedTypeWitness();
  uint64_t v5 = type metadata accessor for Result();
  uint64_t v6 = sub_19F1DCAAC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v12 - v8);
  uint64_t v10 = swift_projectBox();
  *uint64_t v9 = a1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v9, 0, 1, v5);
  swift_beginAccess();
  id v11 = a1;
  (*(void (**)(uint64_t, void *, uint64_t))(v7 + 40))(v10, v9, v6);
  dispatch_group_leave(a3);
}

void sub_19F052C68(uint64_t a1, uint64_t a2, void (*a3)(char *, char *), uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t a7)
{
  uint64_t v50 = a6;
  uint64_t v51 = a5;
  uint64_t v46 = a4;
  id v47 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v43 = (char *)&v42 - v9;
  uint64_t v48 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v42 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a7;
  uint64_t v12 = type metadata accessor for Result();
  uint64_t v45 = AssociatedTypeWitness;
  uint64_t v13 = type metadata accessor for Result();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v15 = (void **)((char *)&v42 - v14);
  uint64_t v53 = sub_19F1DCAAC();
  uint64_t v16 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v19 = sub_19F1DCAAC();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v42 - v21;
  uint64_t v23 = swift_projectBox();
  uint64_t v24 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v23, v19);
  uint64_t v25 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v12) == 1)
  {
    __break(1u);
    goto LABEL_14;
  }
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v24, v53);
  uint64_t v26 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v18, 1, v13) == 1)
  {
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v27 = (void **)((char *)v15 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(void **, char *, uint64_t))(v25 + 32))(v15, v22, v12);
  (*(void (**)(void **, char *, uint64_t))(v26 + 32))(v27, v18, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = *v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = *v27;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D900);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_19F24EB80;
      *(void *)(v30 + 32) = v28;
      *(void *)(v30 + 40) = v29;
      sub_19EFA6878();
      uint64_t v31 = (void *)swift_allocError();
      char v33 = v32;
      id v34 = v28;
      id v35 = v29;
      *char v33 = v30;
      v51(v31);

LABEL_10:
      return;
    }
    (*(void (**)(void **, uint64_t))(v26 + 8))(v27, v13);
LABEL_9:
    v51(v28);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = *v27;
    (*(void (**)(void **, uint64_t))(v48 + 8))(v15, v49);
    goto LABEL_9;
  }
  uint64_t v37 = v48;
  uint64_t v36 = v49;
  uint64_t v38 = v42;
  (*(void (**)(char *, void **, uint64_t))(v48 + 32))(v42, v15, v49);
  char v40 = v43;
  uint64_t v39 = v44;
  uint64_t v41 = v45;
  (*(void (**)(char *, void **, uint64_t))(v44 + 32))(v43, v27, v45);
  v47(v38, v40);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
}

uint64_t LazyPromise.deinit()
{
  swift_release();
  uint64_t v1 = type metadata accessor for LazyPromise.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + 24, v1);
  return v0;
}

uint64_t LazyPromise.__deallocating_deinit()
{
  LazyPromise.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19F053308(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_19EEB8A6C;
  return MEMORY[0x1F4188298](sub_19F051300, 0, 0);
}

uint64_t type metadata accessor for LazyPromise.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0533CC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F05340C()
{
  return sub_19F0511EC(*(void (**)(void (*)(uint64_t), uint64_t, void (*)(void *), uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t type metadata accessor for LazyPromise()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F053430()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_19F053478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19F051668(a1, a2, a3, a4, *(uint64_t **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), v4 + 48, *(void *)(v4 + 16));
}

uint64_t sub_19F0534A8()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_19F0534F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19F0519E0(a1, a2, a3, a4, *(uint64_t **)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), v4 + 56, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_19F053524()
{
  swift_release();

  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F05356C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19F051E6C(a1, a2, a3, a4, *(uint64_t **)(v4 + 32), *(void **)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_19F05359C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for LazyPromise(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LazyPromise);
}

uint64_t dispatch thunk of LazyPromise.__allocating_init(on:perform:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_19F053618(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 != 1) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  return swift_release();
}

uint64_t sub_19F053674(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    *(void *)a1 = *(void *)a2;
    char v5 = 1;
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    char v5 = 0;
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
  }
  swift_retain();
  *(unsigned char *)(a1 + 56) = v5;
  return a1;
}

uint64_t sub_19F053720(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 != 1) {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    swift_release();
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
    }
    else
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      LOBYTE(v5) = 0;
      uint64_t v7 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v7;
    }
    *(unsigned char *)(a1 + 56) = v5;
    swift_retain();
  }
  return a1;
}

uint64_t sub_19F053800(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 != 1) {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    swift_release();
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    *(unsigned char *)(a1 + 56) = v6;
  }
  return a1;
}

uint64_t sub_19F0538B0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_19F0538EC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19F05393C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_19F053958(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 56) = a2;
  return result;
}

uint64_t sub_19F053984()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F0539BC(uint64_t a1, uint64_t a2)
{
  return sub_19F05249C(a1, a2, *(void (**)(char *))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16));
}

uint64_t sub_19F0539D0(uint64_t a1)
{
  return sub_19F053A20(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_19F052628);
}

uint64_t sub_19F0539EC(uint64_t a1)
{
  return sub_19F053A54(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_19F0527BC);
}

uint64_t sub_19F053A08(uint64_t a1)
{
  return sub_19F053A20(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_19F052924);
}

uint64_t sub_19F053A20(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t sub_19F053A3C(uint64_t a1)
{
  return sub_19F053A54(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_19F052ADC);
}

uint64_t sub_19F053A54(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t sub_19F053A6C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

void sub_19F053ABC()
{
  sub_19F052C68(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void (**)(char *, char *))(v0 + 56), *(void *)(v0 + 64), *(void (**)(void *))(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 16));
}

uint64_t sub_19F053AF4()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  return MEMORY[0x1F4186498](v0, 128, 7);
}

uint64_t sub_19F053B44()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 80);
  (*(void (**)(void))(v0 + 40))();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v4, v5, v6, v0 + 88, v1, v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_19F053BE0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F053C18()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19F053C60(uint64_t a1)
{
  return sub_19F0517AC(a1, *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19F053C94()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

ValueMetadata *type metadata accessor for AppVersionFieldProvider()
{
  return &type metadata for AppVersionFieldProvider;
}

uint64_t sub_19F053CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = a3;
  return MEMORY[0x1F4188298](sub_19EEB9C18, 0, 0);
}

unint64_t sub_19F053CFC()
{
  unint64_t result = qword_1E946DB88;
  if (!qword_1E946DB88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946DB88);
  }
  return result;
}

uint64_t sub_19F053D3C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  char v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v26 - v13;
  MEMORY[0x1F4188790](v15);
  char v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_19F1DC63C();
  if (!v20) {
    return sub_19F1DC1CC();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v14;
  uint64_t v43 = sub_19F1DBAFC();
  uint64_t v35 = sub_19F1DCECC();
  sub_19F1DCE5C();
  uint64_t v41 = v19;
  uint64_t result = sub_19F1DC62C();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_19F1DC6FC();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_19F1DCE9C();
      sub_19F1DC64C();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

void *sub_19F054138(void *a1)
{
  return sub_19F054494(a1);
}

id sub_19F054154(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CD80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = 7107189;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(void *)(inited + 48) = sub_19F1DB21C();
  *(void *)(inited + 56) = v4;
  unint64_t v5 = sub_19EE8F204(inited);
  id v6 = a1;
  sub_19F05BE3C(v5, v6);
  if (v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {

    id v7 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F670);
    uint64_t v8 = sub_19F1DD62C();
    id v9 = objc_msgSend(self, sel_valueWithObject_inContext_, v8, v7);
    swift_unknownObjectRelease();

    id v6 = (id)sub_19EEB1FBC((uint64_t)v7, v9);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_19F0542A0(uint64_t a1)
{
  uint64_t v2 = v1;
  v11[3] = *v2;
  _OWORD v11[4] = &protocol witness table for AppleServicesLocalizerFactory;
  v11[0] = v2;
  uint64_t v4 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  id v5 = objc_allocWithZone(v4);
  sub_19EEC4154((uint64_t)v11, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v10.receiver = v5;
  v10.super_class = v4;
  swift_retain();
  id v6 = objc_msgSendSuper2(&v10, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  id v7 = objc_msgSend(self, sel_valueWithObject_inContext_, v6, a1);
  uint64_t v8 = sub_19EEB1FBC(a1, v7);

  return v8;
}

uint64_t sub_19F0543BC(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  __dst[0] = sub_19EE7CC40();
  id v3 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  uint64_t v4 = sub_19F1DD62C();
  id v5 = objc_msgSend(self, sel_valueWithObject_inContext_, v4, v3);
  swift_unknownObjectRelease();

  uint64_t v6 = sub_19EEB1FBC((uint64_t)v3, v5);
  return v6;
}

void *sub_19F054494(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471110);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = 0x73646C656966;
  *(void *)(inited + 40) = 0xE600000000000000;
  swift_bridgeObjectRetain();
  id v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  uint64_t v5 = sub_19F1DD62C();
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_valueWithObject_inContext_, v5, v4);
  swift_unknownObjectRelease();

  *(void *)(inited + 48) = v7;
  unint64_t v8 = sub_19EFB4E54(inited);
  id v9 = v4;
  sub_19F05C1AC(v8, (uint64_t)v9);
  if (v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {

    id v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F670);
    id v11 = objc_msgSend(v6, sel_valueWithObject_inContext_, sub_19F1DD62C(), v10);
    swift_unknownObjectRelease();

    uint64_t v6 = (void *)sub_19EEB1FBC((uint64_t)v10, v11);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_19F05464C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  v12[4] = &off_1EF143028;
  v12[5] = &protocol witness table for AppleServicesLocalizer;
  v12[3] = v4;
  v12[0] = v2;
  uint64_t v5 = (objc_class *)type metadata accessor for JSLocalizerObject();
  id v6 = objc_allocWithZone(v5);
  sub_19EE959B4((uint64_t)v12, (uint64_t)v6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v11.receiver = v6;
  v11.super_class = v5;
  swift_retain();
  id v7 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  id v8 = objc_msgSend(self, sel_valueWithObject_inContext_, v7, a1, v11.receiver, v11.super_class, v12[0]);
  uint64_t v9 = sub_19EEB1FBC(a1, v8);

  return v9;
}

uint64_t sub_19F054774(uint64_t a1, uint64_t (*a2)(void), void *a3)
{
  uint64_t v6 = v3;
  sub_19EEC4154(v6, (uint64_t)v15);
  id v8 = (objc_class *)a2(0);
  id v9 = objc_allocWithZone(v8);
  sub_19EEC4154((uint64_t)v15, (uint64_t)v9 + *a3);
  v14.receiver = v9;
  v14.super_class = v8;
  id v10 = objc_msgSendSuper2(&v14, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  id v11 = objc_msgSend(self, sel_valueWithObject_inContext_, v10, a1);
  uint64_t v12 = sub_19EEB1FBC(a1, v11);

  return v12;
}

uint64_t *sub_19F054864(void *a1)
{
  uint64_t v11 = *v1;
  uint64_t v4 = &v11;
  ScalarDictionary.jsRepresentation(in:)(a1, v8);
  if (!v2)
  {
    uint64_t v5 = v9;
    uint64_t v6 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v4 = (uint64_t *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 16))(a1, v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  return v4;
}

unint64_t sub_19F05490C@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  return CustomJSValueConvertible.jsRepresentation(in:)(a1, a2);
}

JSValue sub_19F054924(JSContext a1)
{
  return CustomJSValueConvertible._jsValue(in:)(a1);
}

unint64_t sub_19F05493C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19F05BBA0(a1, a2);
}

unint64_t JSExport<>.jsRepresentation(in:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = a1;
  uint64_t v4 = sub_19F1DD42C();
  id v5 = objc_msgSend(self, sel_valueWithObject_inContext_, v4, v3);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v5;
  return result;
}

uint64_t sub_19F054A00(uint64_t a1)
{
  return sub_19F05BC20(a1);
}

uint64_t sub_19F054A18(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E9473458);
}

long long *sub_19F054A44(uint64_t a1, void (*a2)(long long *__return_ptr), uint64_t (*a3)(void), uint64_t *a4)
{
  return sub_19F055FB4(a1, v4, a2, a3, a4);
}

id sub_19F054B44(void *a1)
{
  return sub_19F056248(a1);
}

uint64_t sub_19F054C38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

long long *sub_19F054D2C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_19F056840(a1, a2, a3, a4 & 1);
}

uint64_t sub_19F054E20(uint64_t a1, uint64_t *a2)
{
  return sub_19F0578A0(a1, v2, a2);
}

uint64_t sub_19F054F18(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

long long *sub_19F055014(void *a1)
{
  return sub_19F05734C(a1);
}

uint64_t sub_19F055104(uint64_t a1, uint64_t (*a2)(void), void *a3, uint64_t *a4, uint64_t a5)
{
  return sub_19F0575C8(a1, v5, a2, a3, a4, a5);
}

uint64_t sub_19F055208(void *a1)
{
  return sub_19F057B1C(a1, v1);
}

uint64_t sub_19F0552EC(uint64_t a1, uint64_t a2, SEL *a3, uint64_t *a4, uint64_t a5)
{
  return sub_19F057E44(a1, a2, a3, a4, a5);
}

uint64_t sub_19F0553DC(uint64_t a1, SEL *a2, uint64_t (*a3)(void), uint64_t *a4, double a5, double a6)
{
  return sub_19F05833C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19F0554CC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  return sub_19F0585D0(a1, a2, a3, a4, a5);
}

uint64_t sub_19F0555BC(uint64_t a1, double a2)
{
  return sub_19F058874(a1, a2);
}

uint64_t sub_19F0556AC(uint64_t a1, char a2)
{
  return sub_19F058AF4(a1, a2);
}

uint64_t sub_19F05579C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

JSValue __swiftcall CustomJSValueConvertible.makeValue(in:)(JSContext in)
{
  return (JSValue)sub_19F058FF8((uint64_t)in.super.isa, v3, v1, v2);
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSValue._jsValue(in:)(JSContext in)
{
  return (JSValue)v1;
}

uint64_t sub_19F0559B4(void *a1)
{
  uint64_t v3 = (uint64_t)a1;
  uint64_t v4 = *((void *)v1 + 2);
  char v5 = *((unsigned char *)v1 + 24);
  uint64_t v6 = *((void *)v1 + 4);
  char v7 = *((unsigned char *)v1 + 40);
  uint64_t v8 = *((void *)v1 + 12);
  long long v16 = *v1;
  uint64_t v17 = v4;
  char v18 = v5;
  uint64_t v19 = v6;
  char v20 = v7;
  long long v9 = v1[4];
  long long v21 = v1[3];
  long long v22 = v9;
  long long v23 = v1[5];
  uint64_t v24 = v8;
  JSError.jsRepresentation(in:)(a1, v13);
  if (!v2)
  {
    uint64_t v10 = v14;
    uint64_t v11 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v3, v10, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
  return v3;
}

uint64_t sub_19F055A98(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E9473470);
}

uint64_t sub_19F055AC4(uint64_t a1)
{
  return sub_19F05464C(a1);
}

uint64_t sub_19F055AE8(uint64_t a1)
{
  return sub_19F054F18(a1, (uint64_t (*)(void))sub_19F056DE8);
}

uint64_t sub_19F055B20(uint64_t a1)
{
  return sub_19F054C38(a1, *v1, (uint64_t (*)(void))sub_19F055D04);
}

long long *sub_19F055B50(uint64_t a1)
{
  return sub_19F054A44(a1, (void (*)(long long *__return_ptr))sub_19EEB3714, (uint64_t (*)(void))type metadata accessor for JSStack.DecoratedIntent, &qword_1E94734B8);
}

uint64_t JSCalculatedValue.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_19F055BA0(void *a1)
{
  sub_19F020938(a1, v7);
  if (!v2)
  {
    uint64_t v4 = v8;
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 16))(a1, v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  }
  return v1;
}

long long *sub_19F055C44(void *a1)
{
  return sub_19F055014(a1);
}

uint64_t sub_19F055C50(void *a1)
{
  sub_19EE393CC(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16), v7);
  if (!v2)
  {
    uint64_t v4 = v8;
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 16))(a1, v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  }
  return v1;
}

long long *sub_19F055CF4(void *a1)
{
  return sub_19F054D2C(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_19F055D04(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)&long long v25 = a2;
  swift_bridgeObjectRetain();
  id v5 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  uint64_t v6 = sub_19F1DD62C();
  id v7 = objc_msgSend(self, sel_valueWithObject_inContext_, v6, v5);
  swift_unknownObjectRelease();

  uint64_t v8 = v3;
  uint64_t v9 = sub_19EEB1FBC((uint64_t)v5, v7);
  if (v8)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
    id v12 = v10;
    uint64_t v29 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v13._countAndFlagsBits = 0x69747265766E6F43;
    v13._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    void v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473538);
    v28[0] = &type metadata for JSStack.Options;
    sub_19EEBCD00((uint64_t)v28, (uint64_t)v24);
    long long v22 = 0u;
    long long v23 = 0u;
    sub_19EEC3E70((uint64_t)v24, (uint64_t)&v22);
    char v27 = 0;
    long long v25 = v22;
    long long v26 = v23;
    uint64_t v14 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_19EEC3F3C(0, v14[2] + 1, 1, v14);
    }
    unint64_t v16 = v14[2];
    unint64_t v15 = v14[3];
    if (v16 >= v15 >> 1) {
      uint64_t v14 = sub_19EEC3F3C((void *)(v15 > 1), v16 + 1, 1, v14);
    }
    long long v14[2] = v16 + 1;
    uint64_t v17 = &v14[5 * v16];
    long long v18 = v25;
    long long v19 = v26;
    *((unsigned char *)v17 + 64) = v27;
    *((_OWORD *)v17 + 2) = v18;
    *((_OWORD *)v17 + 3) = v19;
    uint64_t v29 = v14;
    sub_19EEBCB4C((uint64_t)v28);
    v20._object = (void *)0x800000019F269F20;
    v20._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    *(void *)(v11 + 32) = v29;
    *(void *)&long long v25 = v12;
    LOBYTE(v22) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v22);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v9;
}

long long *sub_19F055FB4(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr), uint64_t (*a4)(void), uint64_t *a5)
{
  a3(&v29);
  if (v5)
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v11 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19F24EAD0;
    id v13 = v11;
    uint64_t v32 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v14._countAndFlagsBits = 0x69747265766E6F43;
    v14._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t v15 = a4(0);
    void v28[3] = __swift_instantiateConcreteTypeFromMangledName(a5);
    v28[0] = v15;
    sub_19EEBCD00((uint64_t)v28, (uint64_t)v27);
    long long v25 = 0u;
    long long v26 = 0u;
    sub_19EEC3E70((uint64_t)v27, (uint64_t)&v25);
    LOBYTE(v31) = 0;
    long long v29 = v25;
    long long v30 = v26;
    unint64_t v16 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v16 = sub_19EEC3F3C(0, v16[2] + 1, 1, v16);
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1) {
      unint64_t v16 = sub_19EEC3F3C((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    long long v16[2] = v18 + 1;
    long long v19 = &v16[5 * v18];
    long long v20 = v29;
    long long v21 = v30;
    *((unsigned char *)v19 + 64) = v31;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    uint64_t v32 = v16;
    sub_19EEBCB4C((uint64_t)v28);
    v22._object = (void *)0x800000019F269F20;
    v22._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    *(void *)(v12 + 32) = v32;
    *(void *)&long long v29 = v13;
    LOBYTE(v25) = 1;
    uint64_t v24 = &v29;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v25);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    uint64_t v9 = *((void *)&v30 + 1);
    uint64_t v10 = v31;
    __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
    uint64_t v24 = (long long *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v9, v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
  }
  return v24;
}

id sub_19F056248(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CD80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = 7107189;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(void *)(inited + 48) = sub_19F1DB21C();
  *(void *)(inited + 56) = v4;
  unint64_t v5 = sub_19EE8F204(inited);
  id v6 = a1;
  sub_19F05BE3C(v5, v6);
  uint64_t v8 = v7;

  if (v1)
  {
    swift_bridgeObjectRelease();
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    id v24 = v12;
    uint64_t v32 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v14._countAndFlagsBits = 0x69747265766E6F43;
    v14._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t v15 = type metadata accessor for Models.DeepLinkIntent();
    v31[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94734E0);
    v31[0] = v15;
    sub_19EEBCD00((uint64_t)v31, (uint64_t)v27);
    long long v25 = 0u;
    long long v26 = 0u;
    sub_19EEC3E70((uint64_t)v27, (uint64_t)&v25);
    char v30 = 0;
    long long v28 = v25;
    long long v29 = v26;
    unint64_t v16 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v16 = sub_19EEC3F3C(0, v16[2] + 1, 1, v16);
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1) {
      unint64_t v16 = sub_19EEC3F3C((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    long long v16[2] = v18 + 1;
    long long v19 = &v16[5 * v18];
    long long v20 = v28;
    long long v21 = v29;
    *((unsigned char *)v19 + 64) = v30;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    uint64_t v32 = v16;
    sub_19EEBCB4C((uint64_t)v31);
    v22._object = (void *)0x800000019F269F20;
    v22._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    *(void *)(v13 + 32) = v32;
    *(void *)&long long v28 = v24;
    LOBYTE(v25) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v25);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    *(void *)&long long v28 = v8;
    id v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F670);
    uint64_t v10 = sub_19F1DD62C();
    id v11 = objc_msgSend(self, sel_valueWithObject_inContext_, v10, v9);
    swift_unknownObjectRelease();

    id v24 = (id)sub_19EEB1FBC((uint64_t)v9, v11);
    swift_bridgeObjectRelease();
  }
  return v24;
}

uint64_t sub_19F056580(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (objc_class *)type metadata accessor for JSBagObject();
  id v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag] = a2;
  v29.receiver = v6;
  v29.super_class = v5;
  swift_unknownObjectRetain();
  id v7 = objc_msgSendSuper2(&v29, sel_init);
  id v8 = objc_msgSend(self, sel_valueWithObject_inContext_, v7, a1);
  uint64_t v9 = sub_19EEB1FBC(a1, v8);
  if (v2)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
    id v12 = v10;
    char v30 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v13._countAndFlagsBits = 0x69747265766E6F43;
    v13._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    void v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94734C0);
    v28[0] = &type metadata for Bag;
    sub_19EEBCD00((uint64_t)v28, (uint64_t)v24);
    long long v22 = 0u;
    long long v23 = 0u;
    sub_19EEC3E70((uint64_t)v24, (uint64_t)&v22);
    char v27 = 0;
    long long v25 = v22;
    long long v26 = v23;
    Swift::String v14 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v14 = sub_19EEC3F3C(0, v14[2] + 1, 1, v14);
    }
    unint64_t v16 = v14[2];
    unint64_t v15 = v14[3];
    if (v16 >= v15 >> 1) {
      Swift::String v14 = sub_19EEC3F3C((void *)(v15 > 1), v16 + 1, 1, v14);
    }
    long long v14[2] = v16 + 1;
    unint64_t v17 = &v14[5 * v16];
    long long v18 = v25;
    long long v19 = v26;
    *((unsigned char *)v17 + 64) = v27;
    *((_OWORD *)v17 + 2) = v18;
    *((_OWORD *)v17 + 3) = v19;
    char v30 = v14;
    sub_19EEBCB4C((uint64_t)v28);
    v20._object = (void *)0x800000019F269F20;
    v20._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    *(void *)(v11 + 32) = v30;
    *(void *)&long long v25 = v12;
    LOBYTE(v22) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v22);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v9;
}

long long *sub_19F056840(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_19EE393CC(a1, a2, a3, a4 & 1, &v26);
  if (v4)
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    id v8 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
    id v10 = v8;
    long long v25 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v11._countAndFlagsBits = 0x69747265766E6F43;
    v11._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    v24[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94734B0);
    v24[0] = &type metadata for PageIntentInstrumentationModel;
    sub_19EEBCD00((uint64_t)v24, (uint64_t)v23);
    long long v21 = 0u;
    long long v22 = 0u;
    sub_19EEC3E70((uint64_t)v23, (uint64_t)&v21);
    LOBYTE(v28) = 0;
    long long v26 = v21;
    long long v27 = v22;
    id v12 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v12 = sub_19EEC3F3C(0, v12[2] + 1, 1, v12);
    }
    unint64_t v14 = v12[2];
    unint64_t v13 = v12[3];
    if (v14 >= v13 >> 1) {
      id v12 = sub_19EEC3F3C((void *)(v13 > 1), v14 + 1, 1, v12);
    }
    v12[2] = v14 + 1;
    unint64_t v15 = &v12[5 * v14];
    long long v16 = v26;
    long long v17 = v27;
    *((unsigned char *)v15 + 64) = v28;
    *((_OWORD *)v15 + 2) = v16;
    *((_OWORD *)v15 + 3) = v17;
    long long v25 = v12;
    sub_19EEBCB4C((uint64_t)v24);
    v18._object = (void *)0x800000019F269F20;
    v18._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    *(void *)(v9 + 32) = v25;
    *(void *)&long long v26 = v10;
    LOBYTE(v21) = 1;
    Swift::String v20 = &v26;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v21);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    uint64_t v6 = *((void *)&v27 + 1);
    uint64_t v7 = v28;
    __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
    Swift::String v20 = (long long *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 16))(a1, v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
  }
  return v20;
}

uint64_t sub_19F056AC0(uint64_t a1, void *a2)
{
  *((void *)&v29 + 1) = *a2;
  char v30 = &protocol witness table for AppleServicesLocalizerFactory;
  *(void *)&long long v28 = a2;
  unint64_t v5 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  id v6 = objc_allocWithZone(v5);
  sub_19EEC4154((uint64_t)&v28, (uint64_t)v6 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v27.receiver = v6;
  v27.super_class = v5;
  swift_retain();
  id v7 = objc_msgSendSuper2(&v27, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
  id v8 = objc_msgSend(self, sel_valueWithObject_inContext_, v7, a1);
  uint64_t v9 = sub_19EEB1FBC(a1, v8);
  if (v2)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    id v10 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
    id v12 = v10;
    uint64_t v31 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v13._countAndFlagsBits = 0x69747265766E6F43;
    v13._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t v14 = *a2;
    void v26[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94734D0);
    v26[0] = v14;
    sub_19EEBCD00((uint64_t)v26, (uint64_t)v25);
    long long v23 = 0u;
    long long v24 = 0u;
    sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
    LOBYTE(v30) = 0;
    long long v28 = v23;
    long long v29 = v24;
    unint64_t v15 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v15 = sub_19EEC3F3C(0, v15[2] + 1, 1, v15);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      unint64_t v15 = sub_19EEC3F3C((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    long long v15[2] = v17 + 1;
    Swift::String v18 = &v15[5 * v17];
    long long v19 = v28;
    long long v20 = v29;
    *((unsigned char *)v18 + 64) = (_BYTE)v30;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    uint64_t v31 = v15;
    sub_19EEBCB4C((uint64_t)v26);
    v21._object = (void *)0x800000019F269F20;
    v21._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(void *)(v11 + 32) = v31;
    *(void *)&long long v28 = v12;
    LOBYTE(v23) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v23);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v9;
}

uint64_t sub_19F056DE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v31 = &off_1EF143028;
  uint64_t v32 = &protocol witness table for AppleServicesLocalizer;
  *((void *)&v30 + 1) = v5;
  *(void *)&long long v29 = a2;
  id v6 = (objc_class *)type metadata accessor for JSLocalizerObject();
  id v7 = objc_allocWithZone(v6);
  sub_19EE959B4((uint64_t)&v29, (uint64_t)v7 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v28.receiver = v7;
  v28.super_class = v6;
  swift_retain();
  id v8 = objc_msgSendSuper2(&v28, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
  id v9 = objc_msgSend(self, sel_valueWithObject_inContext_, v8, a1);
  uint64_t v10 = sub_19EEB1FBC(a1, v9);
  if (v2)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v11 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19F24EAD0;
    id v13 = v11;
    char v33 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v14._countAndFlagsBits = 0x69747265766E6F43;
    v14._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t v15 = *a2;
    v27[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473530);
    v27[0] = v15;
    sub_19EEBCD00((uint64_t)v27, (uint64_t)v26);
    long long v24 = 0u;
    long long v25 = 0u;
    sub_19EEC3E70((uint64_t)v26, (uint64_t)&v24);
    LOBYTE(v31) = 0;
    long long v29 = v24;
    long long v30 = v25;
    unint64_t v16 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v16 = sub_19EEC3F3C(0, v16[2] + 1, 1, v16);
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1) {
      unint64_t v16 = sub_19EEC3F3C((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    long long v16[2] = v18 + 1;
    long long v19 = &v16[5 * v18];
    long long v20 = v29;
    long long v21 = v30;
    *((unsigned char *)v19 + 64) = (_BYTE)v31;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    char v33 = v16;
    sub_19EEBCB4C((uint64_t)v27);
    v22._object = (void *)0x800000019F269F20;
    v22._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    *(void *)(v12 + 32) = v33;
    *(void *)&long long v29 = v13;
    LOBYTE(v24) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v24);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v10;
}

uint64_t sub_19F05711C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2();
  if (v2)
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v4 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
    id v6 = v4;
    long long v23 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v7._countAndFlagsBits = 0x69747265766E6F43;
    v7._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v7);
    v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473528);
    v22[0] = &type metadata for JSCalculatedValue;
    sub_19EEBCD00((uint64_t)v22, (uint64_t)v18);
    long long v16 = 0u;
    long long v17 = 0u;
    sub_19EEC3E70((uint64_t)v18, (uint64_t)&v16);
    char v21 = 0;
    long long v19 = v16;
    long long v20 = v17;
    id v8 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v8 = sub_19EEC3F3C(0, v8[2] + 1, 1, v8);
    }
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      id v8 = sub_19EEC3F3C((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    v8[2] = v10 + 1;
    uint64_t v11 = &v8[5 * v10];
    long long v12 = v19;
    long long v13 = v20;
    *((unsigned char *)v11 + 64) = v21;
    *((_OWORD *)v11 + 2) = v12;
    *((_OWORD *)v11 + 3) = v13;
    long long v23 = v8;
    sub_19EEBCB4C((uint64_t)v22);
    v14._object = (void *)0x800000019F269F20;
    v14._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    *(void *)(v5 + 32) = v23;
    *(void *)&long long v19 = v6;
    LOBYTE(v16) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v16);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v3;
}

long long *sub_19F05734C(void *a1)
{
  sub_19F020938(a1, &v23);
  if (v1)
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
    id v7 = v5;
    Swift::String v22 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v8._countAndFlagsBits = 0x69747265766E6F43;
    v8._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    v21[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473540);
    v21[0] = &type metadata for LookupResponse;
    sub_19EEBCD00((uint64_t)v21, (uint64_t)v20);
    long long v18 = 0u;
    long long v19 = 0u;
    sub_19EEC3E70((uint64_t)v20, (uint64_t)&v18);
    LOBYTE(v25) = 0;
    long long v23 = v18;
    long long v24 = v19;
    unint64_t v9 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v9 = sub_19EEC3F3C(0, v9[2] + 1, 1, v9);
    }
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      unint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
    }
    _OWORD v9[2] = v11 + 1;
    long long v12 = &v9[5 * v11];
    long long v13 = v23;
    long long v14 = v24;
    *((unsigned char *)v12 + 64) = v25;
    *((_OWORD *)v12 + 2) = v13;
    *((_OWORD *)v12 + 3) = v14;
    Swift::String v22 = v9;
    sub_19EEBCB4C((uint64_t)v21);
    v15._object = (void *)0x800000019F269F20;
    v15._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    *(void *)(v6 + 32) = v22;
    *(void *)&long long v23 = v7;
    LOBYTE(v18) = 1;
    long long v17 = &v23;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v18);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    uint64_t v3 = *((void *)&v24 + 1);
    uint64_t v4 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    long long v17 = (long long *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
  }
  return v17;
}

uint64_t sub_19F0575C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void *a4, uint64_t *a5, uint64_t a6)
{
  sub_19EEC4154(a2, (uint64_t)&v34);
  long long v12 = (objc_class *)a3(0);
  id v13 = objc_allocWithZone(v12);
  sub_19EEC4154((uint64_t)&v34, (uint64_t)v13 + *a4);
  v33.receiver = v13;
  v33.super_class = v12;
  id v14 = objc_msgSendSuper2(&v33, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v34);
  id v15 = objc_msgSend(self, sel_valueWithObject_inContext_, v14, a1);
  uint64_t v16 = sub_19EEB1FBC(a1, v15);
  if (v6)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    long long v17 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_19F24EAD0;
    id v19 = v17;
    uint64_t v37 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v20._countAndFlagsBits = 0x69747265766E6F43;
    v20._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    v32[3] = __swift_instantiateConcreteTypeFromMangledName(a5);
    v32[0] = a6;
    sub_19EEBCD00((uint64_t)v32, (uint64_t)v31);
    long long v29 = 0u;
    long long v30 = 0u;
    sub_19EEC3E70((uint64_t)v31, (uint64_t)&v29);
    char v36 = 0;
    long long v34 = v29;
    long long v35 = v30;
    char v21 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v21 = sub_19EEC3F3C(0, v21[2] + 1, 1, v21);
    }
    unint64_t v23 = v21[2];
    unint64_t v22 = v21[3];
    if (v23 >= v22 >> 1) {
      char v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
    }
    long long v21[2] = v23 + 1;
    long long v24 = &v21[5 * v23];
    long long v25 = v34;
    long long v26 = v35;
    *((unsigned char *)v24 + 64) = v36;
    *((_OWORD *)v24 + 2) = v25;
    *((_OWORD *)v24 + 3) = v26;
    uint64_t v37 = v21;
    sub_19EEBCB4C((uint64_t)v32);
    v27._object = (void *)0x800000019F269F20;
    v27._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    *(void *)(v18 + 32) = v37;
    *(void *)&long long v34 = v19;
    LOBYTE(v29) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v29);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v16;
}

uint64_t sub_19F0578A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  id v6 = objc_msgSend(self, sel_valueWithObject_inContext_, a2, a1);
  uint64_t v7 = sub_19EEB1FBC(a1, v6);
  if (v3)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    Swift::String v8 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
    id v10 = v8;
    objc_super v28 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v11._countAndFlagsBits = 0x69747265766E6F43;
    v11._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t ObjectType = swift_getObjectType();
    v27[3] = __swift_instantiateConcreteTypeFromMangledName(a3);
    v27[0] = ObjectType;
    sub_19EEBCD00((uint64_t)v27, (uint64_t)v23);
    long long v21 = 0u;
    long long v22 = 0u;
    sub_19EEC3E70((uint64_t)v23, (uint64_t)&v21);
    char v26 = 0;
    long long v24 = v21;
    long long v25 = v22;
    id v13 = v28;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
    }
    unint64_t v15 = v13[2];
    unint64_t v14 = v13[3];
    if (v15 >= v14 >> 1) {
      id v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
    }
    long long v13[2] = v15 + 1;
    uint64_t v16 = &v13[5 * v15];
    long long v17 = v24;
    long long v18 = v25;
    *((unsigned char *)v16 + 64) = v26;
    *((_OWORD *)v16 + 2) = v17;
    *((_OWORD *)v16 + 3) = v18;
    objc_super v28 = v13;
    sub_19EEBCB4C((uint64_t)v27);
    v19._object = (void *)0x800000019F269F20;
    v19._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    *(void *)(v9 + 32) = v28;
    *(void *)&long long v24 = v10;
    LOBYTE(v21) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v21);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v7;
}

uint64_t sub_19F057B1C(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_19F1DB57C();
  double v6 = MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5, v6);
  id v9 = a1;
  uint64_t v10 = sub_19F1DD62C();
  id v11 = objc_msgSend(self, sel_valueWithObject_inContext_, v10, v9);
  swift_unknownObjectRelease();

  uint64_t v12 = sub_19EEB1FBC((uint64_t)v9, v11);
  if (v2)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    id v13 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19F24EAD0;
    id v15 = v13;
    uint64_t v32 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v16._countAndFlagsBits = 0x69747265766E6F43;
    v16._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    v31[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473520);
    v31[0] = v5;
    sub_19EEBCD00((uint64_t)v31, (uint64_t)v27);
    long long v25 = 0u;
    long long v26 = 0u;
    sub_19EEC3E70((uint64_t)v27, (uint64_t)&v25);
    char v30 = 0;
    long long v28 = v25;
    long long v29 = v26;
    long long v17 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
    }
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      long long v17 = sub_19EEC3F3C((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    v17[2] = v19 + 1;
    Swift::String v20 = &v17[5 * v19];
    long long v21 = v28;
    long long v22 = v29;
    *((unsigned char *)v20 + 64) = v30;
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v22;
    uint64_t v32 = v17;
    sub_19EEBCB4C((uint64_t)v31);
    v23._object = (void *)0x800000019F269F20;
    v23._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *(void *)(v14 + 32) = v32;
    *(void *)&long long v28 = v15;
    LOBYTE(v25) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v25);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v12;
}

uint64_t sub_19F057E44(uint64_t a1, uint64_t a2, SEL *a3, uint64_t *a4, uint64_t a5)
{
  id v9 = objc_msgSend(self, *a3, a2, a1);
  uint64_t v10 = sub_19EEB1FBC(a1, v9);
  if (v5)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    id v11 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19F24EAD0;
    id v13 = v11;
    char v30 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v14._countAndFlagsBits = 0x69747265766E6F43;
    v14._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    v29[3] = __swift_instantiateConcreteTypeFromMangledName(a4);
    v29[0] = a5;
    sub_19EEBCD00((uint64_t)v29, (uint64_t)v25);
    long long v23 = 0u;
    long long v24 = 0u;
    sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
    char v28 = 0;
    long long v26 = v23;
    long long v27 = v24;
    id v15 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v15 = sub_19EEC3F3C(0, v15[2] + 1, 1, v15);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      id v15 = sub_19EEC3F3C((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    long long v15[2] = v17 + 1;
    unint64_t v18 = &v15[5 * v17];
    long long v19 = v26;
    long long v20 = v27;
    *((unsigned char *)v18 + 64) = v28;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    char v30 = v15;
    sub_19EEBCB4C((uint64_t)v29);
    v21._object = (void *)0x800000019F269F20;
    v21._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(void *)(v12 + 32) = v30;
    *(void *)&long long v26 = v13;
    LOBYTE(v23) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v23);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v10;
}

uint64_t sub_19F0580B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(self, sel_valueWithRange_inContext_, a2, a3, a1);
  uint64_t v6 = sub_19EEB1FBC(a1, v5);
  if (v3)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_19F24EAD0;
    id v9 = v7;
    char v28 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v10._countAndFlagsBits = 0x69747265766E6F43;
    v10._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    type metadata accessor for _NSRange(0);
    uint64_t v12 = v11;
    v27[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473508);
    v27[0] = v12;
    sub_19EEBCD00((uint64_t)v27, (uint64_t)v23);
    long long v21 = 0u;
    long long v22 = 0u;
    sub_19EEC3E70((uint64_t)v23, (uint64_t)&v21);
    char v26 = 0;
    long long v24 = v21;
    long long v25 = v22;
    id v13 = v28;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
    }
    unint64_t v15 = v13[2];
    unint64_t v14 = v13[3];
    if (v15 >= v14 >> 1) {
      id v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
    }
    long long v13[2] = v15 + 1;
    unint64_t v16 = &v13[5 * v15];
    long long v17 = v24;
    long long v18 = v25;
    *((unsigned char *)v16 + 64) = v26;
    *((_OWORD *)v16 + 2) = v17;
    *((_OWORD *)v16 + 3) = v18;
    char v28 = v13;
    sub_19EEBCB4C((uint64_t)v27);
    v19._object = (void *)0x800000019F269F20;
    v19._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    *(void *)(v8 + 32) = v28;
    *(void *)&long long v24 = v9;
    LOBYTE(v21) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v8, (JetEngine::LogMessageLevel)&v21);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v6;
}

uint64_t sub_19F05833C(uint64_t a1, SEL *a2, uint64_t (*a3)(void), uint64_t *a4, double a5, double a6)
{
  id v10 = objc_msgSend(self, *a2, a1, a5, a6);
  uint64_t v11 = sub_19EEB1FBC(a1, v10);
  if (v6)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    id v14 = v12;
    uint64_t v32 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v15._countAndFlagsBits = 0x69747265766E6F43;
    v15._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t v16 = a3(0);
    v31[3] = __swift_instantiateConcreteTypeFromMangledName(a4);
    v31[0] = v16;
    sub_19EEBCD00((uint64_t)v31, (uint64_t)v27);
    long long v25 = 0u;
    long long v26 = 0u;
    sub_19EEC3E70((uint64_t)v27, (uint64_t)&v25);
    char v30 = 0;
    long long v28 = v25;
    long long v29 = v26;
    long long v17 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
    }
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      long long v17 = sub_19EEC3F3C((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    v17[2] = v19 + 1;
    long long v20 = &v17[5 * v19];
    long long v21 = v28;
    long long v22 = v29;
    *((unsigned char *)v20 + 64) = v30;
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v22;
    uint64_t v32 = v17;
    sub_19EEBCB4C((uint64_t)v31);
    v23._object = (void *)0x800000019F269F20;
    v23._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *(void *)(v13 + 32) = v32;
    *(void *)&long long v28 = v14;
    LOBYTE(v25) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v25);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v11;
}

uint64_t sub_19F0585D0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  id v7 = objc_msgSend(self, sel_valueWithRect_inContext_, a1, a2, a3, a4, a5);
  uint64_t v8 = sub_19EEB1FBC(a1, v7);
  if (v5)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    id v9 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
    id v11 = v9;
    char v30 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v12._countAndFlagsBits = 0x69747265766E6F43;
    v12._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    type metadata accessor for CGRect(0);
    uint64_t v14 = v13;
    v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94734F8);
    v29[0] = v14;
    sub_19EEBCD00((uint64_t)v29, (uint64_t)v25);
    long long v23 = 0u;
    long long v24 = 0u;
    sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
    char v28 = 0;
    long long v26 = v23;
    long long v27 = v24;
    Swift::String v15 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v15 = sub_19EEC3F3C(0, v15[2] + 1, 1, v15);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      Swift::String v15 = sub_19EEC3F3C((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    long long v15[2] = v17 + 1;
    unint64_t v18 = &v15[5 * v17];
    long long v19 = v26;
    long long v20 = v27;
    *((unsigned char *)v18 + 64) = v28;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    char v30 = v15;
    sub_19EEBCB4C((uint64_t)v29);
    v21._object = (void *)0x800000019F269F20;
    v21._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(void *)(v10 + 32) = v30;
    *(void *)&long long v26 = v11;
    LOBYTE(v23) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v8;
}

uint64_t sub_19F058874(uint64_t a1, double a2)
{
  id v4 = objc_msgSend(self, sel_valueWithDouble_inContext_, a1, a2);
  uint64_t v5 = sub_19EEB1FBC(a1, v4);
  if (v2)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v6 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
    id v8 = v6;
    long long v25 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v9._countAndFlagsBits = 0x69747265766E6F43;
    v9._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    v24[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471298);
    v24[0] = MEMORY[0x1E4FBB3D0];
    sub_19EEBCD00((uint64_t)v24, (uint64_t)v20);
    long long v18 = 0u;
    long long v19 = 0u;
    sub_19EEC3E70((uint64_t)v20, (uint64_t)&v18);
    char v23 = 0;
    long long v21 = v18;
    long long v22 = v19;
    uint64_t v10 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_19EEC3F3C(0, v10[2] + 1, 1, v10);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    v10[2] = v12 + 1;
    uint64_t v13 = &v10[5 * v12];
    long long v14 = v21;
    long long v15 = v22;
    *((unsigned char *)v13 + 64) = v23;
    *((_OWORD *)v13 + 2) = v14;
    *((_OWORD *)v13 + 3) = v15;
    long long v25 = v10;
    sub_19EEBCB4C((uint64_t)v24);
    v16._object = (void *)0x800000019F269F20;
    v16._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(void *)(v7 + 32) = v25;
    *(void *)&long long v21 = v8;
    LOBYTE(v18) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v18);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v5;
}

uint64_t sub_19F058AF4(uint64_t a1, char a2)
{
  id v4 = objc_msgSend(self, sel_valueWithBool_inContext_, a2 & 1, a1);
  uint64_t v5 = sub_19EEB1FBC(a1, v4);
  if (v2)
  {

    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v6 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
    id v8 = v6;
    long long v25 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v9._countAndFlagsBits = 0x69747265766E6F43;
    v9._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    v24[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94712A0);
    v24[0] = MEMORY[0x1E4FBB390];
    sub_19EEBCD00((uint64_t)v24, (uint64_t)v20);
    long long v18 = 0u;
    long long v19 = 0u;
    sub_19EEC3E70((uint64_t)v20, (uint64_t)&v18);
    char v23 = 0;
    long long v21 = v18;
    long long v22 = v19;
    uint64_t v10 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_19EEC3F3C(0, v10[2] + 1, 1, v10);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    v10[2] = v12 + 1;
    uint64_t v13 = &v10[5 * v12];
    long long v14 = v21;
    long long v15 = v22;
    *((unsigned char *)v13 + 64) = v23;
    *((_OWORD *)v13 + 2) = v14;
    *((_OWORD *)v13 + 3) = v15;
    long long v25 = v10;
    sub_19EEBCB4C((uint64_t)v24);
    v16._object = (void *)0x800000019F269F20;
    v16._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(void *)(v7 + 32) = v25;
    *(void *)&long long v21 = v8;
    LOBYTE(v18) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v18);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
  }
  return v5;
}

long long *sub_19F058D6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  sub_19F05B31C(a1, &v26);
  if (v3)
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    id v8 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
    id v10 = v8;
    long long v25 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v11._countAndFlagsBits = 0x69747265766E6F43;
    v11._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    v24[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94734F0);
    v24[0] = v5;
    sub_19EEBCD00((uint64_t)v24, (uint64_t)v23);
    long long v21 = 0u;
    long long v22 = 0u;
    sub_19EEC3E70((uint64_t)v23, (uint64_t)&v21);
    LOBYTE(v28) = 0;
    long long v26 = v21;
    long long v27 = v22;
    unint64_t v12 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_19EEC3F3C(0, v12[2] + 1, 1, v12);
    }
    unint64_t v14 = v12[2];
    unint64_t v13 = v12[3];
    if (v14 >= v13 >> 1) {
      unint64_t v12 = sub_19EEC3F3C((void *)(v13 > 1), v14 + 1, 1, v12);
    }
    v12[2] = v14 + 1;
    long long v15 = &v12[5 * v14];
    long long v16 = v26;
    long long v17 = v27;
    *((unsigned char *)v15 + 64) = v28;
    *((_OWORD *)v15 + 2) = v16;
    *((_OWORD *)v15 + 3) = v17;
    long long v25 = v12;
    sub_19EEBCB4C((uint64_t)v24);
    v18._object = (void *)0x800000019F269F20;
    v18._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    *(void *)(v9 + 32) = v25;
    *(void *)&long long v26 = v10;
    LOBYTE(v21) = 1;
    long long v20 = &v26;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v21);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    uint64_t v6 = *((void *)&v27 + 1);
    uint64_t v7 = v28;
    __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
    long long v20 = (long long *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 16))(a1, v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
  }
  return v20;
}

long long *sub_19F058FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 8))(&v26, a1, a3, a4);
  if (v4)
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    id v8 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
    id v10 = v8;
    uint64_t v29 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v11._countAndFlagsBits = 0x69747265766E6F43;
    v11._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t DynamicType = swift_getDynamicType();
    v25[3] = swift_getMetatypeMetadata();
    v25[0] = DynamicType;
    sub_19EEBCD00((uint64_t)v25, (uint64_t)v24);
    long long v22 = 0u;
    long long v23 = 0u;
    sub_19EEC3E70((uint64_t)v24, (uint64_t)&v22);
    LOBYTE(v28) = 0;
    long long v26 = v22;
    long long v27 = v23;
    unint64_t v13 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
    }
    unint64_t v15 = v13[2];
    unint64_t v14 = v13[3];
    if (v15 >= v14 >> 1) {
      unint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
    }
    long long v13[2] = v15 + 1;
    long long v16 = &v13[5 * v15];
    long long v17 = v26;
    long long v18 = v27;
    *((unsigned char *)v16 + 64) = v28;
    *((_OWORD *)v16 + 2) = v17;
    *((_OWORD *)v16 + 3) = v18;
    uint64_t v29 = v13;
    sub_19EEBCB4C((uint64_t)v25);
    v19._object = (void *)0x800000019F269F20;
    v19._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    *(void *)(v9 + 32) = v29;
    *(void *)&long long v26 = v10;
    LOBYTE(v22) = 1;
    long long v21 = &v26;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v22);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    uint64_t v6 = *((void *)&v27 + 1);
    uint64_t v7 = v28;
    __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
    long long v21 = (long long *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
  }
  return v21;
}

uint64_t CustomJSValueConvertible<>.jsRepresentation(in:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v39 = a4;
  id v40 = a1;
  uint64_t v4 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_19F1DAD8C();
  uint64_t v6 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  id v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DAD4C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_19F1DAD5C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  long long v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DADCC();
  swift_allocObject();
  uint64_t v17 = sub_19F1DADBC();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4F26D00], v13);
  sub_19F1DAD7C();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F26CF0], v9);
  sub_19F1DAD6C();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F26D38], v42);
  sub_19F1DAD9C();
  uint64_t v18 = v47;
  uint64_t v19 = sub_19F1DADAC();
  if (!v18)
  {
    uint64_t v21 = v19;
    unint64_t v22 = v20;
    uint64_t v47 = v17;
    sub_19F1DBDCC();
    uint64_t v23 = sub_19F1DBD9C();
    if (v24)
    {
      uint64_t v25 = v24;
      if ((v24 & 0x1000000000000000) != 0 || !(v24 & 0x2000000000000000 | v23 & 0x1000000000000000))
      {
        sub_19F1DCCDC();
        uint64_t v29 = *(OpaqueJSString **)string;
      }
      else
      {
        MEMORY[0x1F4188790](v23);
        *(&v38 - 2) = (uint64_t)sub_19EF4D53C;
        *(&v38 - 1) = 0;
        if ((v25 & 0x2000000000000000) != 0)
        {
          *(void *)string = v26;
          uint64_t v46 = v25 & 0xFFFFFFFFFFFFFFLL;
          uint64_t result = (uint64_t)JSStringCreateWithUTF8CString(string);
          if (!result)
          {
            __break(1u);
            return result;
          }
          uint64_t v29 = (OpaqueJSString *)result;
        }
        else
        {
          if ((v26 & 0x1000000000000000) != 0)
          {
            uint64_t v27 = (v25 & 0xFFFFFFFFFFFFFFFLL) + 32;
            uint64_t v28 = v26 & 0xFFFFFFFFFFFFLL;
          }
          else
          {
            uint64_t v27 = sub_19F1DCE2C();
          }
          uint64_t v29 = (OpaqueJSString *)sub_19F1069C8(v27, v28, (uint64_t (*)(void))sub_19EFC4F14);
        }
      }
      id v31 = v40;
      JSValueRef v32 = JSValueMakeFromJSONString((JSContextRef)objc_msgSend(v40, sel_JSGlobalContextRef), v29);
      if (v32)
      {
        id v33 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, v32, v31);
        JSStringRelease(v29);
        swift_bridgeObjectRelease();
        long long v34 = v39;
        if (v33)
        {
          v34[3] = sub_19EE8FF40();
          v34[4] = &protocol witness table for JSValue;
          sub_19EEA072C(v21, v22);
          uint64_t result = swift_release();
          *long long v34 = v33;
          return result;
        }
      }
      else
      {
        JSStringRelease(v29);
        swift_bridgeObjectRelease();
      }
    }
    *(void *)string = 0;
    uint64_t v46 = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DD40C();
    sub_19F1DBEFC();
    long long v35 = *(OpaqueJSString **)string;
    uint64_t v36 = v46;
    sub_19EF600C0();
    swift_allocError();
    *(void *)uint64_t v37 = v35;
    *(void *)(v37 + 8) = v36;
    *(void *)(v37 + 16) = 0;
    *(unsigned char *)(v37 + 24) = 1;
    *(void *)(v37 + 32) = 0;
    *(unsigned char *)(v37 + 40) = 1;
    *(_OWORD *)(v37 + 48) = 0u;
    *(_OWORD *)(v37 + 64) = 0u;
    *(_OWORD *)(v37 + 80) = 0u;
    *(void *)(v37 + 96) = 0;
    swift_willThrow();
    sub_19EEA072C(v21, v22);
  }
  return swift_release();
}

uint64_t AnyCustomJSValueConvertible.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  a4[3] = a2;
  a4[4] = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v7(boxed_opaque_existential_2Tm, a1, a2);
}

uint64_t AnyCustomJSValueConvertible.base.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC4154(v1, a1);
}

uint64_t AnyCustomJSValueConvertible.jsRepresentation(in:)(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AnyCustomJSValueConvertible._jsValue(in:)(JSContext in)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (JSValue)(*(uint64_t (**)(Class, uint64_t, uint64_t))(v4 + 16))(in.super.isa, v3, v4);
}

JSValue __swiftcall AnyCustomJSValueConvertible.makeValue(in:)(JSContext in)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (JSValue)(*(uint64_t (**)(Class, uint64_t, uint64_t))(v4 + 24))(in.super.isa, v3, v4);
}

uint64_t AnyCustomJSValueConvertible.description.getter()
{
  return 0;
}

uint64_t sub_19F059A20(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_19F059A94(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
}

uint64_t sub_19F059B00(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
}

uint64_t sub_19F059B5C()
{
  return 0;
}

unint64_t JSCalculatedValue.jsRepresentation(in:)@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = (*v1)();
  if (!v2)
  {
    unint64_t v5 = result;
    unint64_t result = sub_19EE8FF40();
    a1[3] = result;
    a1[4] = (unint64_t)&protocol witness table for JSValue;
    *a1 = v5;
  }
  return result;
}

unint64_t sub_19F059C0C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = (*v1)();
  if (!v2)
  {
    unint64_t v5 = result;
    unint64_t result = sub_19EE8FF40();
    a1[3] = result;
    a1[4] = (unint64_t)&protocol witness table for JSValue;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_19F059C68()
{
  return (*v0)();
}

uint64_t sub_19F059C90(uint64_t a1)
{
  return sub_19F05579C(a1, *v1, v1[1], (uint64_t (*)(void))sub_19F05711C);
}

void JSValue.init(jsConvertible:in:)(void *a1, void *a2)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 16))(a2, v5, v6);
  if (v2
    || (id v8 = (void *)v7,
        id v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_valueWithObject_inContext_, v7, a2),
        v8,
        v9))
  {

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __break(1u);
  }
}

id JSValue.jsRepresentation(in:)@<X0>(void *a1@<X8>)
{
  a1[3] = sub_19EE8FF40();
  a1[4] = &protocol witness table for JSValue;
  *a1 = v1;
  return v1;
}

JSValue __swiftcall JSValue.makeValue(in:)(JSContext in)
{
  return (JSValue)v1;
}

id sub_19F059DD8@<X0>(uint64_t a1@<X2>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  a2[3] = sub_19EE8FF40();
  a2[4] = a1;
  *a2 = v5;
  return v5;
}

id sub_19F059E24()
{
  return *v0;
}

unint64_t Array<A>.jsRepresentation(in:)@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  unint64_t v18 = a2;
  long long v16[2] = a3;
  void v16[3] = a4;
  v16[4] = a1;
  uint64_t v8 = sub_19F1DC27C();
  unint64_t v9 = sub_19EE8FF40();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t result = sub_19F053D3C((void (*)(char *, char *))sub_19F05BCCC, (uint64_t)v16, v8, v9, v10, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v17);
  if (!v5)
  {
    unint64_t v18 = result;
    id v13 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAE0);
    uint64_t v14 = sub_19F1DD62C();
    id v15 = objc_msgSend(self, sel_valueWithObject_inContext_, v14, v13);
    swift_unknownObjectRelease();

    a5[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
    unint64_t result = sub_19EF606C0();
    a5[4] = result;
    *a5 = v15;
  }
  return result;
}

unint64_t sub_19F059F94@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return Array<A>.jsRepresentation(in:)(a1, *v4, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

unint64_t Dictionary<>.jsRepresentation(in:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_19EE8FF40();
  unint64_t result = sub_19F1DBBEC();
  if (!v2)
  {
    id v6 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F670);
    uint64_t v7 = sub_19F1DD62C();
    id v8 = objc_msgSend(self, sel_valueWithObject_inContext_, v7, v6);
    swift_unknownObjectRelease();

    a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
    unint64_t result = sub_19EF606C0();
    a2[4] = result;
    *a2 = v8;
  }
  return result;
}

unint64_t sub_19F05A0D8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Dictionary<>.jsRepresentation(in:)(a1, a2);
}

unint64_t Optional<A>.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v16 + 16))(v15, v17, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    id v18 = objc_msgSend(self, sel_valueWithUndefinedInContext_, a1);
    a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
    unint64_t result = sub_19EF606C0();
    a4[4] = result;
    *a4 = (uint64_t)v18;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v15, v8);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a1, v8, a3);
    if (!v4)
    {
      uint64_t v21 = v20;
      a4[3] = sub_19EE8FF40();
      a4[4] = (uint64_t)&protocol witness table for JSValue;
      *a4 = v21;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

unint64_t sub_19F05A338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return Optional<A>.jsRepresentation(in:)(a1, a2, *(void *)(a3 - 8), a4);
}

unint64_t Bool.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  id v4 = objc_msgSend(self, sel_valueWithBool_inContext_, a2 & 1, a1);
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a3[4] = result;
  *a3 = v4;
  return result;
}

unint64_t sub_19F05A3D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_valueWithBool_inContext_, *v2, a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_19F05A454(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel_valueWithBool_inContext_, *v1, a1);
  uint64_t v4 = sub_19EEB1FBC(a1, v3);

  return v4;
}

uint64_t sub_19F05A4D4(uint64_t a1)
{
  return sub_19F0556AC(a1, *v1);
}

unint64_t Date.jsRepresentation(in:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_19F1DB57C();
  double v7 = MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v6, v7);
  id v10 = a1;
  uint64_t v11 = sub_19F1DD62C();
  id v12 = objc_msgSend(self, sel_valueWithObject_inContext_, v11, v10);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v12;
  return result;
}

unint64_t sub_19F05A620@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  double v4 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, double))(v6 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  id v7 = a1;
  uint64_t v8 = sub_19F1DD62C();
  id v9 = objc_msgSend(self, sel_valueWithObject_inContext_, v8, v7);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v9;
  return result;
}

uint64_t sub_19F05A758(void *a1)
{
  double v2 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, double))(v4 + 16))((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  id v5 = a1;
  uint64_t v6 = sub_19F1DD62C();
  id v7 = objc_msgSend(self, sel_valueWithObject_inContext_, v6, v5);
  swift_unknownObjectRelease();

  uint64_t v8 = sub_19EEB1FBC((uint64_t)v5, v7);
  return v8;
}

unint64_t Double.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  id v4 = objc_msgSend(self, sel_valueWithDouble_inContext_, a1, a3);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v4;
  return result;
}

unint64_t sub_19F05A914@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_valueWithDouble_inContext_, a1, *v2);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_19F05A99C(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel_valueWithDouble_inContext_, a1, *v1);
  uint64_t v4 = sub_19EEB1FBC(a1, v3);

  return v4;
}

uint64_t sub_19F05AA24(uint64_t a1)
{
  return sub_19F0555BC(a1, *v1);
}

unint64_t Int32.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_19F05B4E4(a1, a2, (SEL *)&selRef_valueWithInt32_inContext_, a3);
}

unint64_t sub_19F05AA4C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19F05B58C(a1, (SEL *)&selRef_valueWithInt32_inContext_, a2);
}

uint64_t sub_19F05AA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F05B634(a1, a2, a3, (SEL *)&selRef_valueWithInt32_inContext_);
}

uint64_t sub_19F05AA8C(uint64_t a1)
{
  return sub_19F0552EC(a1, *v1, (SEL *)&selRef_valueWithInt32_inContext_, &qword_1E9473518, MEMORY[0x1E4FBC150]);
}

unint64_t NSNull.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(self, sel_valueWithNullInContext_, a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v3;
  return result;
}

unint64_t sub_19F05AB38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(self, sel_valueWithNullInContext_, a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v3;
  return result;
}

unint64_t CGPoint.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  return sub_19F05AE40(a1, (SEL *)&selRef_valueWithPoint_inContext_, a2, a3, a4);
}

unint64_t sub_19F05ABD0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19F05AEF0(a1, (SEL *)&selRef_valueWithPoint_inContext_, a2);
}

uint64_t sub_19F05ABF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F05AF9C(a1, a2, a3, (SEL *)&selRef_valueWithPoint_inContext_);
}

uint64_t sub_19F05AC10(uint64_t a1)
{
  return sub_19F0553DC(a1, (SEL *)&selRef_valueWithPoint_inContext_, (uint64_t (*)(void))type metadata accessor for CGPoint, &qword_1E9473510, *v1, v1[1]);
}

unint64_t _NSRange.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id v5 = objc_msgSend(self, sel_valueWithRange_inContext_, a2, a3, a1);
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a4[4] = result;
  *a4 = v5;
  return result;
}

unint64_t sub_19F05ACE0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_valueWithRange_inContext_, *v2, v2[1], a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_19F05AD6C(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel_valueWithRange_inContext_, *v1, v1[1], a1);
  uint64_t v4 = sub_19EEB1FBC(a1, v3);

  return v4;
}

uint64_t sub_19F05ADF0(uint64_t a1)
{
  return sub_19F05579C(a1, *v1, v1[1], (uint64_t (*)(void))sub_19F0580B8);
}

unint64_t CGSize.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  return sub_19F05AE40(a1, (SEL *)&selRef_valueWithSize_inContext_, a2, a3, a4);
}

unint64_t sub_19F05AE40@<X0>(uint64_t a1@<X0>, SEL *a2@<X1>, void *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  id v6 = objc_msgSend(self, *a2, a1, a4, a5);
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a3[4] = result;
  *a3 = v6;
  return result;
}

unint64_t sub_19F05AED0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19F05AEF0(a1, (SEL *)&selRef_valueWithSize_inContext_, a2);
}

unint64_t sub_19F05AEF0@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, void *a3@<X8>)
{
  id v5 = objc_msgSend(self, *a2, a1, *v3, v3[1]);
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a3[4] = result;
  *a3 = v5;
  return result;
}

uint64_t sub_19F05AF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F05AF9C(a1, a2, a3, (SEL *)&selRef_valueWithSize_inContext_);
}

uint64_t sub_19F05AF9C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v6 = objc_msgSend(self, *a4, a1, *v4, v4[1]);
  uint64_t v7 = sub_19EEB1FBC(a1, v6);

  return v7;
}

uint64_t sub_19F05B028(uint64_t a1)
{
  return sub_19F0553DC(a1, (SEL *)&selRef_valueWithSize_inContext_, (uint64_t (*)(void))type metadata accessor for CGSize, &qword_1E9473500, *v1, v1[1]);
}

unint64_t CGRect.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  id v7 = objc_msgSend(self, sel_valueWithRect_inContext_, a1, a3, a4, a5, a6);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v7;
  return result;
}

unint64_t sub_19F05B110@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_valueWithRect_inContext_, a1, *v2, v2[1], v2[2], v2[3]);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_19F05B1B0(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel_valueWithRect_inContext_, a1, *v1, v1[1], v1[2], v1[3]);
  uint64_t v4 = sub_19EEB1FBC(a1, v3);

  return v4;
}

uint64_t sub_19F05B250(uint64_t a1)
{
  return sub_19F0554CC(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t String.jsRepresentation(in:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  swift_bridgeObjectRetain();
  id v6 = a1;
  uint64_t v7 = sub_19F1DD62C();
  id v8 = objc_msgSend(self, sel_valueWithObject_inContext_, v7, v6, a2, a3);
  swift_unknownObjectRelease();

  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a4[4] = result;
  *a4 = v8;
  return result;
}

unint64_t sub_19F05B31C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v9 = *v2;
  uint64_t v10 = v2[1];
  swift_bridgeObjectRetain();
  id v5 = a1;
  uint64_t v6 = sub_19F1DD62C();
  id v7 = objc_msgSend(self, sel_valueWithObject_inContext_, v6, v5, v9, v10);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v7;
  return result;
}

uint64_t *sub_19F05B3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = *v3;
  uint64_t v6 = &v13;
  (*(void (**)(void *__return_ptr))(a3 + 8))(v10);
  if (!v4)
  {
    uint64_t v7 = v11;
    uint64_t v8 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    uint64_t v6 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v7, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  return v6;
}

uint64_t sub_19F05B494(uint64_t a1)
{
  return sub_19F05579C(a1, *v1, v1[1], (uint64_t (*)(void))sub_19F058D6C);
}

unint64_t UInt32.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_19F05B4E4(a1, a2, (SEL *)&selRef_valueWithUInt32_inContext_, a3);
}

unint64_t sub_19F05B4E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, SEL *a3@<X2>, void *a4@<X8>)
{
  id v5 = objc_msgSend(self, *a3, a2, a1);
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a4[4] = result;
  *a4 = v5;
  return result;
}

unint64_t sub_19F05B56C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19F05B58C(a1, (SEL *)&selRef_valueWithUInt32_inContext_, a2);
}

unint64_t sub_19F05B58C@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, void *a3@<X8>)
{
  id v5 = objc_msgSend(self, *a2, *v3, a1);
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a3[4] = result;
  *a3 = v5;
  return result;
}

uint64_t sub_19F05B614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F05B634(a1, a2, a3, (SEL *)&selRef_valueWithUInt32_inContext_);
}

uint64_t sub_19F05B634(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v6 = objc_msgSend(self, *a4, *v4, a1);
  uint64_t v7 = sub_19EEB1FBC(a1, v6);

  return v7;
}

uint64_t sub_19F05B6B4(uint64_t a1)
{
  return sub_19F0552EC(a1, *v1, (SEL *)&selRef_valueWithUInt32_inContext_, &qword_1E94734E8, MEMORY[0x1E4FBC4C0]);
}

id sub_19F05B6E8(void *a1)
{
  return sub_19F054154(a1);
}

uint64_t sub_19F05B704(uint64_t a1)
{
  return sub_19F054774(a1, (uint64_t (*)(void))type metadata accessor for JSCookieProviderObject, &OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider);
}

uint64_t sub_19F05B738(uint64_t a1)
{
  return sub_19F055104(a1, (uint64_t (*)(void))type metadata accessor for JSCookieProviderObject, &OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider, &qword_1E94734D8, (uint64_t)&type metadata for CookieProvider);
}

uint64_t sub_19F05B77C(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E9473450);
}

uint64_t sub_19F05B7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EEB3674(a1, a2, a3, (void (*)(void *__return_ptr))sub_19F0BAFB8);
}

long long *sub_19F05B7D4(uint64_t a1)
{
  return sub_19F054A44(a1, (void (*)(long long *__return_ptr))sub_19F0BAFB8, (uint64_t (*)(void))type metadata accessor for JSCookie, &qword_1E9473478);
}

uint64_t sub_19F05B81C(uint64_t a1)
{
  return sub_19F0542A0(a1);
}

uint64_t sub_19F05B840(uint64_t a1)
{
  return sub_19F054F18(a1, (uint64_t (*)(void))sub_19F056AC0);
}

uint64_t sub_19F05B878(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E9473480);
}

uint64_t sub_19F05B8A4(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_19F0543BC(a1);
}

uint64_t sub_19F05B8F8(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E9473488);
}

uint64_t sub_19F05B924(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E9473490);
}

uint64_t sub_19F05B950(uint64_t a1)
{
  return sub_19F054774(a1, (uint64_t (*)(void))type metadata accessor for JSNetObject, &OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
}

uint64_t sub_19F05B984(uint64_t a1)
{
  return sub_19F055104(a1, (uint64_t (*)(void))type metadata accessor for JSNetObject, &OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts, &qword_1E94734C8, (uint64_t)&type metadata for Net);
}

uint64_t sub_19F05B9C8(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E9473460);
}

uint64_t sub_19F05B9F4(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E9473448);
}

uint64_t sub_19F05BA20(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E9473498);
}

uint64_t sub_19F05BA4C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (objc_class *)type metadata accessor for JSBagObject();
  id v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag] = v3;
  v10.receiver = v5;
  v10.super_class = v4;
  swift_unknownObjectRetain();
  id v6 = objc_msgSendSuper2(&v10, sel_init);
  id v7 = objc_msgSend(self, sel_valueWithObject_inContext_, v6, a1, v10.receiver, v10.super_class);
  uint64_t v8 = sub_19EEB1FBC(a1, v7);

  return v8;
}

uint64_t sub_19F05BB18(uint64_t a1)
{
  return sub_19F054C38(a1, *v1, (uint64_t (*)(void))sub_19F056580);
}

uint64_t sub_19F05BB48(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E9473468);
}

uint64_t sub_19F05BB74(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E94734A0);
}

unint64_t sub_19F05BBA0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_valueWithObject_inContext_, *v2, a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_19F05BC20(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel_valueWithObject_inContext_, *v1, a1);
  uint64_t v4 = sub_19EEB1FBC(a1, v3);

  return v4;
}

uint64_t sub_19F05BCA0(uint64_t a1)
{
  return sub_19F054E20(a1, &qword_1E94734A8);
}

uint64_t sub_19F05BCCC@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2[3] + 16))(v2[4], v2[2]);
  if (v3) {
    *a1 = v3;
  }
  else {
    *a2 = result;
  }
  return result;
}

uint64_t sub_19F05BD30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v1[3] + 16))(v1[4], v1[2]);
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t dispatch thunk of CustomJSValueConvertible.jsRepresentation(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of CustomJSValueConvertible._jsValue(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CustomJSValueConvertible.makeValue(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t assignWithTake for AnyCustomJSValueConvertible(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for AnyCustomJSValueConvertible()
{
  return &type metadata for AnyCustomJSValueConvertible;
}

ValueMetadata *type metadata accessor for JSCalculatedValue()
{
  return &type metadata for JSCalculatedValue;
}

void sub_19F05BE3C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F6B8);
  uint64_t v5 = sub_19F1DD04C();
  int64_t v6 = 0;
  uint64_t v40 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v8 = a1 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v37 = v8;
  int64_t v38 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v39 = v5 + 64;
  uint64_t v42 = (void *)v5;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v50 = v3;
  uint64_t v43 = (v12 - 1) & v12;
  int64_t v44 = v6;
  for (unint64_t i = __clz(__rbit64(v12)) | (v6 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v15 << 6))
  {
    id v18 = (uint64_t *)(*(void *)(v40 + 48) + 16 * i);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = (void *)(*(void *)(v40 + 56) + 16 * i);
    uint64_t v22 = v21[1];
    v47[0] = *v21;
    v47[1] = v22;
    uint64_t v45 = v19;
    swift_bridgeObjectRetain_n();
    uint64_t v46 = v20;
    swift_bridgeObjectRetain();
    id v23 = a2;
    uint64_t v24 = sub_19F1DD62C();
    uint64_t v25 = self;
    id v26 = objc_msgSend(v25, sel_valueWithObject_inContext_, v24, v23);
    swift_unknownObjectRelease();

    if (v26)
    {
      uint64_t v27 = sub_19EE8FF40();
      uint64_t v48 = v27;
      uint64_t v28 = &protocol witness table for JSValue;
      id v29 = v26;
    }
    else
    {
      id v29 = objc_msgSend(v25, sel_valueWithUndefinedInContext_, v23);
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
      uint64_t v48 = v27;
      uint64_t v28 = (_UNKNOWN **)sub_19EF606C0();
    }
    uint64_t v49 = v28;
    v47[0] = v29;
    __swift_project_boxed_opaque_existential_1(v47, v27);
    uint64_t v30 = (uint64_t (*)(id, uint64_t, _UNKNOWN **))v28[2];
    id v31 = v26;
    uint64_t v32 = v50;
    uint64_t v33 = v30(v23, v27, v28);
    uint64_t v3 = v32;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    swift_bridgeObjectRelease();
    if (v32)
    {
      swift_bridgeObjectRelease();
      swift_release();

      return;
    }

    *(void *)(v39 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    long long v34 = (void *)(v42[6] + 16 * i);
    *long long v34 = v45;
    v34[1] = v46;
    *(void *)(v42[7] + 8 * i) = v33;
    uint64_t v35 = v42[2];
    BOOL v14 = __OFADD__(v35, 1);
    uint64_t v36 = v35 + 1;
    if (v14)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v42[2] = v36;
    unint64_t v12 = v43;
    int64_t v6 = v44;
    if (v43) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v14 = __OFADD__(v6, 1);
    int64_t v15 = v6 + 1;
    if (v14) {
      goto LABEL_30;
    }
    if (v15 >= v38) {
      return;
    }
    unint64_t v16 = *(void *)(v37 + 8 * v15);
    if (!v16) {
      break;
    }
LABEL_15:
    uint64_t v50 = v3;
    uint64_t v43 = (v16 - 1) & v16;
    int64_t v44 = v15;
  }
  int64_t v17 = v15 + 1;
  if (v15 + 1 >= v38) {
    return;
  }
  unint64_t v16 = *(void *)(v37 + 8 * v17);
  if (v16) {
    goto LABEL_14;
  }
  int64_t v17 = v15 + 2;
  if (v15 + 2 >= v38) {
    return;
  }
  unint64_t v16 = *(void *)(v37 + 8 * v17);
  if (v16) {
    goto LABEL_14;
  }
  int64_t v17 = v15 + 3;
  if (v15 + 3 >= v38) {
    return;
  }
  unint64_t v16 = *(void *)(v37 + 8 * v17);
  if (v16)
  {
LABEL_14:
    int64_t v15 = v17;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v38) {
      return;
    }
    unint64_t v16 = *(void *)(v37 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_15;
    }
  }
LABEL_31:
  __break(1u);
}

void sub_19F05C1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F6B8);
  uint64_t v6 = sub_19F1DD04C();
  int64_t v7 = 0;
  uint64_t v36 = a1;
  uint64_t v37 = (void *)v6;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v33 = v9;
  int64_t v34 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v35 = v6 + 64;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v13));
  uint64_t v15 = (v13 - 1) & v13;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    unint64_t v38 = v15;
    int64_t v39 = v7;
    uint64_t v45 = v3;
    uint64_t v20 = (uint64_t *)(*(void *)(v36 + 48) + 16 * i);
    uint64_t v40 = *v20;
    uint64_t v41 = v20[1];
    uint64_t v21 = *(void **)(*(void *)(v36 + 56) + 8 * i);
    if (v21)
    {
      uint64_t v22 = sub_19EE8FF40();
      id v23 = &protocol witness table for JSValue;
      uint64_t v43 = v22;
      int64_t v44 = &protocol witness table for JSValue;
      swift_bridgeObjectRetain();
      id v24 = v21;
    }
    else
    {
      uint64_t v25 = self;
      swift_bridgeObjectRetain();
      id v24 = objc_msgSend(v25, sel_valueWithUndefinedInContext_, a2);
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
      uint64_t v43 = v22;
      id v23 = (_UNKNOWN **)sub_19EF606C0();
      int64_t v44 = v23;
    }
    v42[0] = v24;
    __swift_project_boxed_opaque_existential_1(v42, v22);
    id v26 = (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))v23[2];
    id v27 = v21;
    uint64_t v28 = v45;
    uint64_t v29 = v26(a2, v22, v23);
    uint64_t v3 = v28;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);

    if (v28)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    *(void *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v30 = (void *)(v37[6] + 16 * i);
    *uint64_t v30 = v40;
    v30[1] = v41;
    *(void *)(v37[7] + 8 * i) = v29;
    uint64_t v31 = v37[2];
    BOOL v17 = __OFADD__(v31, 1);
    uint64_t v32 = v31 + 1;
    if (v17)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v37[2] = v32;
    unint64_t v13 = v38;
    int64_t v7 = v39;
    if (v38) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v17 = __OFADD__(v7++, 1);
    if (v17) {
      goto LABEL_30;
    }
    if (v7 >= v34) {
      return;
    }
    unint64_t v18 = *(void *)(v33 + 8 * v7);
    if (!v18) {
      break;
    }
LABEL_15:
    uint64_t v15 = (v18 - 1) & v18;
  }
  int64_t v19 = v7 + 1;
  if (v7 + 1 >= v34) {
    return;
  }
  unint64_t v18 = *(void *)(v33 + 8 * v19);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v7 + 2;
  if (v7 + 2 >= v34) {
    return;
  }
  unint64_t v18 = *(void *)(v33 + 8 * v19);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v7 + 3;
  if (v7 + 3 >= v34) {
    return;
  }
  unint64_t v18 = *(void *)(v33 + 8 * v19);
  if (v18)
  {
LABEL_14:
    int64_t v7 = v19;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v34) {
      return;
    }
    unint64_t v18 = *(void *)(v33 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_15;
    }
  }
LABEL_31:
  __break(1u);
}

uint64_t MetricsFieldsContext.impressionsTracker.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_19EF91884(0xD000000000000026, 0x800000019F26AC20, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t MetricsFieldsContext.containsValue<A>(forProperty:)(uint64_t *a1)
{
  uint64_t v2 = *v1;
  if (!*(void *)(v2 + 16))
  {
    long long v9 = 0u;
    long long v10 = 0u;
    goto LABEL_7;
  }
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_19EEBD400(v4, v3);
  if ((v6 & 1) == 0)
  {
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_19EEBDBA4(*(void *)(v2 + 56) + 32 * v5, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_7:
    uint64_t v7 = 0;
    goto LABEL_8;
  }
  uint64_t v7 = 1;
LABEL_8:
  sub_19EEBCB4C((uint64_t)&v9);
  return v7;
}

JetEngine::MetricsFieldsContext __swiftcall MetricsFieldsContext.merging(_:)(JetEngine::MetricsFieldsContext a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = *(void *)a1.storage._rawValue;
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = v5;
  sub_19EEBCFC4(v4, (uint64_t)sub_19EEBD6C0, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v9);
  uint64_t v7 = v9;
  result.storage._rawValue = (void *)swift_bridgeObjectRelease();
  *uint64_t v3 = v7;
  return result;
}

uint64_t MetricsFieldsContext.Property.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsFieldsContext.Property.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MetricsFieldsContext.Property.key.modify())()
{
  return nullsub_1;
}

uint64_t static MetricsFieldsContext.Property.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_19F1DD44C();
  }
}

Swift::Void __swiftcall MetricsFieldsContext.merge(_:)(JetEngine::MetricsFieldsContext a1)
{
  uint64_t v2 = *(void *)a1.storage._rawValue;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  sub_19EEBCFC4(v2, (uint64_t)sub_19EEBD6C0, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v4);
  uint64_t *v1 = v4;
  swift_bridgeObjectRelease();
}

uint64_t MetricsFieldsContext.removeValue<A>(forProperty:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_19EF6B168(v1, v2, v4);
  swift_bridgeObjectRelease();
  return sub_19EEBCB4C((uint64_t)v4);
}

uint64_t MetricsFieldsContext.removingValue<A>(forProperty:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  *a2 = *v2;
  v7[0] = v4;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return MetricsFieldsContext.removeValue<A>(forProperty:)(v7);
}

Swift::Void __swiftcall MetricsFieldsContext.removeAll()()
{
  swift_bridgeObjectRelease();
  void *v0 = MEMORY[0x1E4FBC868];
}

JetEngine::MetricsFieldsContext __swiftcall MetricsFieldsContext.removingAll()()
{
  void *v0 = MEMORY[0x1E4FBC868];
  return result;
}

uint64_t static MetricsFieldsContext.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  v5[3] = v7;
  v6[0] = v2;
  v5[0] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v2) = _isStructurallyEqual(_:to:with:at:)(v6, v5, 3uLL, 0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v2 & 1;
}

uint64_t sub_19F05C914(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  v5[3] = v7;
  v6[0] = v2;
  v5[0] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v2) = _isStructurallyEqual(_:to:with:at:)(v6, v5, 3uLL, 0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v2 & 1;
}

void static MetricsFieldsContext.Property<A>.metricsIdentifierActiveITunesAccountRequired.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000040;
  a1[1] = 0x800000019F26EEB0;
}

void static MetricsFieldsContext.Property<A>.clickLocationTracker.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000028;
  a1[1] = 0x800000019F26EF00;
}

void static MetricsFieldsContext.Property<A>.clickLocationUniqueID.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000029;
  a1[1] = 0x800000019F26EF30;
}

void static MetricsFieldsContext.Property<A>.impressionsParentContextID.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000002ELL;
  a1[1] = 0x800000019F26EF60;
}

void static MetricsFieldsContext.Property<A>.topic.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x800000019F269850;
}

void static MetricsFieldsContext.Property<A>.pageRenderOmitsClientId.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000002BLL;
  a1[1] = 0x800000019F26C2E0;
}

void static MetricsFieldsContext.Property<A>.enableRequirements.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x800000019F26AC50;
}

void static MetricsFieldsContext.customMetrics.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000021;
  a1[1] = 0x800000019F26C0C0;
}

void static MetricsFieldsContext.metricsIdentifierDomain.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000002BLL;
  a1[1] = 0x800000019F26EE10;
}

void static MetricsFieldsContext.metricsIdentifierKeys.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000029;
  a1[1] = 0x800000019F26EE40;
}

void static MetricsFieldsContext.metricsIdentifierResetInterval.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000032;
  a1[1] = 0x800000019F26EE70;
}

void static MetricsFieldsContext.impressionsTracker.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x800000019F26AC20;
}

uint64_t sub_19F05CB14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_19EEBCFC4(a1, a2, a3, a4, a5);
}

uint64_t MonotonicTimeReference.date(from:)()
{
  type metadata accessor for MonotonicTimeReference();
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  return sub_19F1DB4FC();
}

uint64_t MonotonicTimeReference.init(date:time:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a3, a1, v7);
  uint64_t result = type metadata accessor for MonotonicTimeReference();
  uint64_t v9 = (void *)(a3 + *(int *)(result + 20));
  *uint64_t v9 = v5;
  v9[1] = v6;
  return result;
}

uint64_t MonotonicTimeReference.referenceDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB57C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

__n128 MonotonicTimeReference.referenceTime.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + *(int *)(type metadata accessor for MonotonicTimeReference() + 20));
  *a1 = result;
  return result;
}

double static MonotonicTimeReference.+ infix(_:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  sub_19F1DB4FC();
  uint64_t v6 = type metadata accessor for MonotonicTimeReference();
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(v6 + 20));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  MonotonicTime.init(timeInterval:)((double)v9 / *(double *)&qword_1EB392B98 + (double)v8 + a3);
  double result = *(double *)&v11;
  *(_OWORD *)(a2 + *(int *)(v6 + 20)) = v11;
  return result;
}

uint64_t static MonotonicTimeReference.+= infix(_:_:)(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for MonotonicTimeReference();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DB4FC();
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  MonotonicTime.init(timeInterval:)((double)v9 / *(double *)&qword_1EB392B98 + (double)v8 + a2);
  *(_OWORD *)&v6[*(int *)(v4 + 20)] = v11;
  sub_19EE9985C(a1);
  return sub_19EE9A4F0((uint64_t)v6, a1);
}

double static MonotonicTimeReference.- infix(_:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  sub_19F1DB50C();
  uint64_t v6 = type metadata accessor for MonotonicTimeReference();
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(v6 + 20));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  MonotonicTime.init(timeInterval:)((double)v9 / *(double *)&qword_1EB392B98 + (double)v8 - a3);
  double result = *(double *)&v11;
  *(_OWORD *)(a2 + *(int *)(v6 + 20)) = v11;
  return result;
}

uint64_t static MonotonicTimeReference.-= infix(_:_:)(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for MonotonicTimeReference();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DB50C();
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  MonotonicTime.init(timeInterval:)((double)v9 / *(double *)&qword_1EB392B98 + (double)v8 - a2);
  *(_OWORD *)&v6[*(int *)(v4 + 20)] = v11;
  sub_19EE9985C(a1);
  return sub_19EE9A4F0((uint64_t)v6, a1);
}

Swift::Int MonotonicTimeReference.time(from:)()
{
  sub_19F1DB4BC();
  double v2 = v1;
  uint64_t v3 = (uint64_t *)(v0 + *(int *)(type metadata accessor for MonotonicTimeReference() + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  double v6 = v2 + (double)v5 / *(double *)&qword_1EB392B98 + (double)v4;
  return MonotonicTime.init(timeInterval:)(v6).seconds;
}

JetEngine::MonotonicTime __swiftcall MonotonicTimeReference.time(fromIntervalSince1970:)(Swift::Double fromIntervalSince1970)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_19F1DB57C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DB51C();
  sub_19F1DB4BC();
  double v8 = v7;
  uint64_t v9 = (uint64_t *)(v2 + *(int *)(type metadata accessor for MonotonicTimeReference() + 20));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  MonotonicTime.init(timeInterval:)(v8 + (double)v11 / *(double *)&qword_1EB392B98 + (double)v10);
  Swift::Int v12 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  result.nanoseconds = v13;
  result.seconds = v12;
  return result;
}

BOOL static MonotonicTimeReference.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_19F1DB53C() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for MonotonicTimeReference() + 20);
  uint64_t v6 = *(void *)(a1 + v4);
  uint64_t v5 = *(void *)(a1 + v4 + 8);
  double v7 = (uint64_t *)(a2 + v4);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  return v6 == v9 && v5 == v8;
}

BOOL sub_19F05D338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_19F1DB53C() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v8 = *(void *)(a1 + v6);
  uint64_t v7 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (uint64_t *)(a2 + v6);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  return v8 == v11 && v7 == v10;
}

uint64_t *initializeBufferWithCopyOfBuffer for MonotonicTimeReference(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_19F1DB57C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for MonotonicTimeReference(uint64_t a1)
{
  uint64_t v2 = sub_19F1DB57C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MonotonicTimeReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for MonotonicTimeReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t initializeWithTake for MonotonicTimeReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for MonotonicTimeReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for MonotonicTimeReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F05D6DC);
}

uint64_t sub_19F05D6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB57C();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MonotonicTimeReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F05D75C);
}

uint64_t sub_19F05D75C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB57C();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_19F05D7CC(uint64_t a1)
{
  return sub_19F05D7F4(a1);
}

uint64_t sub_19F05D7F4(uint64_t a1)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, a1);
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 192) + 16);
  os_unfair_lock_lock(v2);
  sub_19EE84F90(&v6);
  os_unfair_lock_unlock(v2);
  uint64_t v3 = v6;

  return v3;
}

Swift::String __swiftcall Localizer.integer(for:in:)(Swift::Int a1, JetEngine::LocalizerContext in)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  char v6 = *(unsigned char *)in;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, a1);
  char v14 = v6;
  uint64_t v8 = (*(uint64_t (**)(id, void, uint64_t, void, void, char *, uint64_t, uint64_t))(v4 + 64))(v7, 0, 1, 0, 0, &v14, v5, v4);
  uint64_t v10 = v9;

  uint64_t v11 = v8;
  Swift::Int v12 = v10;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

BOOL static LocalizerLookupStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LocalizerLookupStrategy.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t LocalizerLookupStrategy.hashValue.getter()
{
  return sub_19F1DD78C();
}

JetEngine::LocalizerContext_optional __swiftcall LocalizerContext.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_19F1DD0FC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t LocalizerContext.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x63696D616E7964;
      break;
    case 2:
      unint64_t result = 0x6F6C61646E617473;
      break;
    case 3:
      unint64_t result = 0x6D6574497473696CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F05DB4C(unsigned __int8 *a1, char *a2)
{
  return sub_19F03B050(*a1, *a2);
}

uint64_t sub_19F05DB58()
{
  return sub_19F187208();
}

uint64_t sub_19F05DB60()
{
  return sub_19EFB5FD4();
}

uint64_t sub_19F05DB68()
{
  return sub_19EFB654C();
}

JetEngine::LocalizerContext_optional sub_19F05DB70(Swift::String *a1)
{
  return LocalizerContext.init(rawValue:)(*a1);
}

unint64_t sub_19F05DB7C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = LocalizerContext.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Swift::Bool __swiftcall Localizer.hasString(forKey:using:)(Swift::String forKey, JetEngine::LocalizerLookupStrategy using)
{
  return 1;
}

Swift::Bool __swiftcall Localizer.isLocalizedString(_:)(Swift::String a1)
{
  return 1;
}

uint64_t Localizer.string(forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  char v15 = *a5;
  Swift::Int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(a7 + 48);
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(a1, a2, a3, &v15, a6, a7);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_19F05DC5C(void *a1)
{
  objc_msgSend(a1, sel_decimalValue);
  uint64_t v3 = sub_19F1DCA5C();
  uint64_t v4 = v1;
  sub_19F1DBEFC();
  return v3;
}

Swift::String __swiftcall Localizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)(NSNumber forNumber, Swift::Int_optional minimumFractionDigits, Swift::Int_optional maximumFractionDigits, JetEngine::LocalizerContext in)
{
  [(objc_class *)forNumber.super.super.isa decimalValue];
  uint64_t v8 = sub_19F1DCA5C();
  uint64_t v9 = v4;
  sub_19F1DBEFC();
  uint64_t v5 = v8;
  char v6 = v9;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t Localizer.string(withCount:forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8)
{
  char v17 = *a6;
  char v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(a8 + 88);
  swift_bridgeObjectRetain();
  uint64_t v15 = v14(a1, a2, a3, a4, &v17, a7, a8);
  swift_bridgeObjectRelease();
  return v15;
}

Swift::String __swiftcall Localizer.string(forKey:with:)(Swift::String forKey, Swift::OpaquePointer_optional with)
{
  char v6 = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, void *, void *, char *, void))(v2 + 48))(forKey._countAndFlagsBits, forKey._object, with.value._rawValue, &v6, *(void *)&with.is_nil);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

Swift::String __swiftcall Localizer.string(forKey:using:)(Swift::String forKey, JetEngine::LocalizerLookupStrategy using)
{
  char v6 = *(unsigned char *)using;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, void *, void, char *))(v2 + 48))(forKey._countAndFlagsBits, forKey._object, 0, &v6);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

Swift::String __swiftcall Localizer.string(forKey:)(Swift::String forKey)
{
  char v5 = 0;
  uint64_t v2 = (*(uint64_t (**)(uint64_t, void *, void, char *))(v1 + 48))(forKey._countAndFlagsBits, forKey._object, 0, &v5);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t Localizer.string(forKey:defaultValue:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  char v5 = *((unsigned char *)a3 + 16);
  char v6 = *((unsigned char *)a3 + 17);
  long long v9 = *a3;
  char v10 = v5;
  char v11 = v6;
  char v8 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, long long *, char *, uint64_t, uint64_t))(a5 + 56))(a1, a2, 0, &v9, &v8, a4, a5);
}

uint64_t Localizer.string(forKey:defaultValue:using:)(uint64_t a1, uint64_t a2, long long *a3, char *a4, uint64_t a5, uint64_t a6)
{
  char v6 = *((unsigned char *)a3 + 16);
  char v7 = *((unsigned char *)a3 + 17);
  char v8 = *a4;
  long long v11 = *a3;
  char v12 = v6;
  char v13 = v7;
  char v10 = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, long long *, char *, uint64_t))(a6 + 56))(a1, a2, 0, &v11, &v10, a5);
}

uint64_t Localizer.string(forKey:with:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6)
{
  char v6 = *((unsigned char *)a4 + 16);
  char v7 = *((unsigned char *)a4 + 17);
  long long v10 = *a4;
  char v11 = v6;
  char v12 = v7;
  char v9 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, long long *, char *, uint64_t))(a6 + 56))(a1, a2, a3, &v10, &v9, a5);
}

Swift::String __swiftcall Localizer.decimal(forNumber:)(NSNumber forNumber)
{
  char v5 = 0;
  uint64_t v2 = (*(uint64_t (**)(Class, void, uint64_t, void, uint64_t, char *))(v1 + 64))(forNumber.super.super.isa, 0, 1, 0, 1, &v5);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Localizer.percentage(forNumber:)(NSNumber forNumber)
{
  char v5 = 0;
  uint64_t v2 = (*(uint64_t (**)(Class, void, uint64_t, void, uint64_t, char *))(v1 + 72))(forNumber.super.super.isa, 0, 1, 0, 1, &v5);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Localizer.integer(for:)(Swift::Int a1)
{
  char v5 = 0;
  uint64_t v2 = (*(uint64_t (**)(Swift::Int, char *))(v1 + 80))(a1, &v5);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Localizer.string(withCount:forKey:with:)(Swift::Int withCount, Swift::String forKey, Swift::OpaquePointer_optional with)
{
  char v7 = 0;
  uint64_t v4 = (*(uint64_t (**)(Swift::Int, uint64_t, void *, void *, char *, void))(v3 + 88))(withCount, forKey._countAndFlagsBits, forKey._object, with.value._rawValue, &v7, *(void *)&with.is_nil);
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

Swift::String __swiftcall Localizer.string(withCount:forKey:)(Swift::Int withCount, Swift::String forKey)
{
  char v6 = 0;
  uint64_t v3 = (*(uint64_t (**)(Swift::Int, uint64_t, void *, void, char *))(v2 + 88))(withCount, forKey._countAndFlagsBits, forKey._object, 0, &v6);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t Localizer.string(withCount:forKey:with:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7)
{
  char v7 = *((unsigned char *)a5 + 16);
  char v8 = *((unsigned char *)a5 + 17);
  long long v11 = *a5;
  char v12 = v7;
  char v13 = v8;
  char v10 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, long long *, char *, uint64_t))(a7 + 96))(a1, a2, a3, a4, &v11, &v10, a6);
}

uint64_t Localizer.string(withCount:forKey:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6)
{
  char v6 = *((unsigned char *)a4 + 16);
  char v7 = *((unsigned char *)a4 + 17);
  long long v10 = *a4;
  char v11 = v6;
  char v12 = v7;
  char v9 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, long long *, char *, uint64_t, uint64_t))(a6 + 96))(a1, a2, a3, 0, &v10, &v9, a5, a6);
}

uint64_t Localizer.relativeDate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(a3 + 136))(a1, &v4, a2);
}

unint64_t sub_19F05E218()
{
  unint64_t result = qword_1E9473548;
  if (!qword_1E9473548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473548);
  }
  return result;
}

unint64_t sub_19F05E270()
{
  unint64_t result = qword_1E9473550;
  if (!qword_1E9473550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473550);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocalizerLookupStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    _OWORD *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F05E390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocalizerContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    _OWORD *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F05E484);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t dispatch thunk of static Localizer.fetch(contentsOf:for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 16)
                                                                                     + **(int **)(a6 + 16));
  char v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *char v13 = v6;
  v13[1] = sub_19EEB8A6C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of Localizer.locale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Localizer.hasString(forKey:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of Localizer.isLocalizedString(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of Localizer.string(forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of Localizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(a8 + 72))(a1, a2, a3 & 1, a4, a5 & 1);
}

uint64_t dispatch thunk of Localizer.integer(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of Localizer.string(withCount:forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 96))();
}

uint64_t dispatch thunk of Localizer.fileSize(forBytes:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Localizer.formattedDate(format:date:withContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 120))();
}

uint64_t dispatch thunk of Localizer.relativeDate(_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t ReadOnlyLens.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(*MEMORY[0x1E4FBBE08] + *a1 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v8 - v5;
  swift_getAtKeyPath();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, v3);
}

uint64_t ReadOnlyLens.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F05E7BC(a1, MEMORY[0x1E4FBC5F0], a2);
}

{
  return sub_19F05E7BC(a1, MEMORY[0x1E4FBBE08], a2);
}

uint64_t sub_19F05E7BC@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getAtKeyPath();
  v7[0] = v7[1];
  return (*(uint64_t (**)(uint64_t, void *))(*(void *)(*(void *)(*a2 + v5 + 8) - 8) + 32))(a3, v7);
}

uint64_t ReadOnlyLens.description.getter(uint64_t a1)
{
  double v1 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  return sub_19F1DBE0C();
}

uint64_t static ReadOnlyLens<A>.== infix(_:_:)()
{
  return sub_19F1DBD3C() & 1;
}

uint64_t sub_19F05E954()
{
  return static ReadOnlyLens<A>.== infix(_:_:)();
}

uint64_t ReadOnlyLens<A>.hash(into:)()
{
  return sub_19F1DBC9C();
}

uint64_t ReadOnlyLens<A>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F05E9C0()
{
  return ReadOnlyLens<A>.hashValue.getter();
}

uint64_t sub_19F05E9C8()
{
  return ReadOnlyLens<A>.hash(into:)();
}

uint64_t sub_19F05E9D0()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F05EA24()
{
  return swift_getWitnessTable();
}

uint64_t destroy for SentryException(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SentryException(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v8;
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v10;
    *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SentryException(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 64);
  uint64_t v5 = (long long *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v6)
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
    }
    else
    {
      sub_19F05EDE8(a1 + 64);
      long long v8 = *(_OWORD *)(a2 + 80);
      long long v7 = *(_OWORD *)(a2 + 96);
      long long v9 = *v5;
      *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
      *(_OWORD *)(a1 + 80) = v8;
      *(_OWORD *)(a1 + 96) = v7;
      *uint64_t v4 = v9;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *(_OWORD *)(a2 + 80);
    long long v12 = *(_OWORD *)(a2 + 96);
    *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = v12;
    *uint64_t v4 = v10;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19F05EDE8(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for SentryException(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 72)) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(a2 + 72);
  if (!v8)
  {
    sub_19F05EDE8(a1 + 64);
LABEL_5:
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
    goto LABEL_6;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
LABEL_6:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SentryException(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SentryException(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryException()
{
  return &type metadata for SentryException;
}

uint64_t sub_19F05F008(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F05FEF0();
  sub_19F1DD8FC();
  v11[0] = 0;
  sub_19F1DD26C();
  if (!v2)
  {
    v11[0] = 1;
    sub_19F1DD26C();
    v11[0] = 2;
    sub_19F1DD21C();
    v11[0] = 3;
    sub_19F1DD21C();
    sub_19EEBDC4C(v3 + 120, (uint64_t)v14, &qword_1E946CA40);
    sub_19EEBDC4C((uint64_t)v14, (uint64_t)v11, &qword_1E946CA40);
    char v12 = 4;
    sub_19F05FFEC();
    sub_19F1DD25C();
    sub_19EEBDC4C(v3 + 64, (uint64_t)v13, &qword_1E946CA68);
    sub_19EEBDC4C((uint64_t)v13, (uint64_t)v11, &qword_1E946CA68);
    char v12 = 5;
    sub_19F060040();
    sub_19F1DD25C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_19F05F278(unsigned __int8 *a1, char *a2)
{
  return sub_19F03B274(*a1, *a2);
}

uint64_t sub_19F05F284()
{
  return sub_19F187328();
}

uint64_t sub_19F05F28C()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F05F38C()
{
  return sub_19EFB6668();
}

uint64_t sub_19F05F394@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F0602A0();
  *a1 = result;
  return result;
}

void sub_19F05F3C4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701869940;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x65756C6176;
      goto LABEL_3;
    case 2:
      *a1 = 0x656C75646F6DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x695F646165726874;
      a1[1] = 0xE900000000000064;
      break;
    case 4:
      *a1 = 0x6172746B63617473;
      a1[1] = 0xEA00000000006563;
      break;
    case 5:
      *a1 = 0x73696E616863656DLL;
      a1[1] = 0xE90000000000006DLL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_19F05F4A4()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x656C75646F6DLL;
      break;
    case 3:
      uint64_t result = 0x695F646165726874;
      break;
    case 4:
      uint64_t result = 0x6172746B63617473;
      break;
    case 5:
      uint64_t result = 0x73696E616863656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F05F570@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F0602A0();
  *a1 = result;
  return result;
}

uint64_t sub_19F05F598(uint64_t a1)
{
  unint64_t v2 = sub_19F05FEF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F05F5D4(uint64_t a1)
{
  unint64_t v2 = sub_19F05FEF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_19F05F610@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_19F05F97C(a1, v9);
  if (!v2)
  {
    long long v5 = v13;
    a2[4] = v12;
    a2[5] = v5;
    long long v6 = v15;
    a2[6] = v14;
    a2[7] = v6;
    long long v7 = v9[1];
    *a2 = v9[0];
    a2[1] = v7;
    double result = *(double *)&v10;
    long long v8 = v11;
    a2[2] = v10;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_19F05F664(void *a1)
{
  return sub_19F05F008(a1);
}

uint64_t sub_19F05F6B0(_OWORD *a1, long long *a2)
{
  long long v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  long long v3 = a1[7];
  v13[6] = a1[6];
  v13[7] = v3;
  long long v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  long long v5 = a1[3];
  long long v13[2] = a1[2];
  void v13[3] = v5;
  long long v6 = *a2;
  long long v7 = a2[1];
  long long v8 = a2[3];
  long long v14[2] = a2[2];
  uint64_t v14[3] = v8;
  v14[0] = v6;
  v14[1] = v7;
  long long v9 = a2[4];
  long long v10 = a2[5];
  long long v11 = a2[7];
  v14[6] = a2[6];
  v14[7] = v11;
  v14[4] = v9;
  v14[5] = v10;
  return sub_19F05F724((uint64_t)v13, (uint64_t)v14) & 1;
}

uint64_t sub_19F05F724(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_19F1DD44C(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (char v8 = sub_19F1DD44C(), result = 0, (v8 & 1) != 0))
    {
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(a2 + 40);
      if (v9)
      {
        if (!v10) {
          return 0;
        }
        if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v9 != v10)
        {
          char v11 = sub_19F1DD44C();
          uint64_t result = 0;
          if ((v11 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v10)
      {
        return 0;
      }
      uint64_t v12 = *(void *)(a1 + 56);
      uint64_t v13 = *(void *)(a2 + 56);
      if (v12)
      {
        if (!v13) {
          return 0;
        }
        if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v12 != v13)
        {
          char v14 = sub_19F1DD44C();
          uint64_t result = 0;
          if ((v14 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v13)
      {
        return 0;
      }
      uint64_t v15 = *(void *)(a1 + 72);
      uint64_t v16 = *(void *)(a1 + 80);
      uint64_t v17 = *(void *)(a1 + 88);
      uint64_t v19 = *(void *)(a1 + 96);
      uint64_t v18 = *(void *)(a1 + 104);
      __int16 v20 = *(_WORD *)(a1 + 112);
      uint64_t v22 = *(void *)(a2 + 64);
      uint64_t v21 = *(void *)(a2 + 72);
      uint64_t v23 = *(void *)(a2 + 80);
      uint64_t v24 = *(void *)(a2 + 88);
      uint64_t v26 = *(void *)(a2 + 96);
      uint64_t v25 = *(void *)(a2 + 104);
      __int16 v27 = *(_WORD *)(a2 + 112);
      if (v15)
      {
        if (v21)
        {
          v31[0] = *(void *)(a1 + 64);
          v31[1] = v15;
          v31[2] = v16;
          v31[3] = v17;
          void v31[4] = v19;
          v31[5] = v18;
          __int16 v32 = v20;
          v33[0] = v22;
          v33[1] = v21;
          v33[2] = v23;
          v33[3] = v24;
          v33[4] = v26;
          v33[5] = v25;
          __int16 v34 = v27;
          if ((sub_19F01F9E8((uint64_t)v31, (uint64_t)v33) & 1) == 0) {
            return 0;
          }
          goto LABEL_33;
        }
      }
      else if (!v21)
      {
LABEL_33:
        uint64_t v28 = *(void *)(a1 + 120);
        uint64_t v29 = *(void *)(a2 + 120);
        if (v28)
        {
          if (v29 && (sub_19EF638FC(v28, v29) & 1) != 0) {
            return 1;
          }
        }
        else if (!v29)
        {
          return 1;
        }
        return 0;
      }
      uint64_t v30 = *(void *)(a1 + 64);
      sub_19F01DD04(v30, v15);
      sub_19F01DD04(v22, v21);
      sub_19F01DBFC(v30, v15);
      sub_19F01DBFC(v22, v21);
      return 0;
    }
  }
  return result;
}

uint64_t sub_19F05F97C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473560);
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  BOOL v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F05FEF0();
  uint64_t v65 = v7;
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v8 = v5;
  uint64_t v43 = a2;
  LOBYTE(v53[0]) = 0;
  uint64_t v9 = v44;
  uint64_t v10 = sub_19F1DD18C();
  uint64_t v12 = v11;
  LOBYTE(v53[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_19F1DD18C();
  uint64_t v41 = v10;
  LOBYTE(v53[0]) = 2;
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_19F1DD13C();
  uint64_t v42 = v16;
  uint64_t v38 = v15;
  LOBYTE(v53[0]) = 3;
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_19F1DD13C();
  LOBYTE(v45) = 4;
  uint64_t v18 = v17;
  sub_19F05FF44();
  uint64_t v39 = v18;
  swift_bridgeObjectRetain();
  sub_19F1DD17C();
  uint64_t v19 = v53[0];
  char v58 = 5;
  sub_19F05FF98();
  uint64_t v36 = v19;
  swift_bridgeObjectRetain();
  sub_19F1DD17C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v65, v9);
  uint64_t v44 = v59;
  uint64_t v34 = v60;
  uint64_t v35 = *((void *)&v59 + 1);
  uint64_t v32 = v61;
  uint64_t v33 = *((void *)&v60 + 1);
  uint64_t v31 = *((void *)&v61 + 1);
  LODWORD(v65) = v62;
  uint64_t v20 = v40;
  *(void *)&long long v45 = v41;
  *((void *)&v45 + 1) = v12;
  *(void *)&long long v46 = v40;
  *((void *)&v46 + 1) = v14;
  uint64_t v21 = v39;
  uint64_t v22 = v42;
  *(void *)&long long v47 = v38;
  *((void *)&v47 + 1) = v42;
  uint64_t v23 = v36;
  *(void *)&long long v48 = v37;
  *((void *)&v48 + 1) = v39;
  long long v49 = v59;
  long long v50 = v60;
  long long v51 = v61;
  LOWORD(v52) = v62;
  *((void *)&v52 + 1) = v36;
  sub_19F01DC4C((uint64_t)&v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v53[0] = v41;
  v53[1] = v12;
  v53[2] = v20;
  v53[3] = v14;
  v53[4] = v38;
  v53[5] = v22;
  v53[6] = v37;
  v53[7] = v21;
  v53[8] = v44;
  v53[9] = v35;
  v53[10] = v34;
  v53[11] = v33;
  v53[12] = v32;
  v53[13] = v31;
  __int16 v54 = (__int16)v65;
  int v55 = v63;
  __int16 v56 = v64;
  uint64_t v57 = v23;
  uint64_t result = sub_19F01DB44((uint64_t)v53);
  long long v25 = v50;
  uint64_t v26 = v43;
  v43[4] = v49;
  v26[5] = v25;
  long long v27 = v52;
  v26[6] = v51;
  v26[7] = v27;
  long long v28 = v46;
  *uint64_t v26 = v45;
  v26[1] = v28;
  long long v29 = v48;
  _OWORD v26[2] = v47;
  void v26[3] = v29;
  return result;
}

unint64_t sub_19F05FEF0()
{
  unint64_t result = qword_1E946C9E8;
  if (!qword_1E946C9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C9E8);
  }
  return result;
}

unint64_t sub_19F05FF44()
{
  unint64_t result = qword_1E9473568;
  if (!qword_1E9473568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473568);
  }
  return result;
}

unint64_t sub_19F05FF98()
{
  unint64_t result = qword_1E9473570;
  if (!qword_1E9473570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473570);
  }
  return result;
}

unint64_t sub_19F05FFEC()
{
  unint64_t result = qword_1E946CA38;
  if (!qword_1E946CA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA38);
  }
  return result;
}

unint64_t sub_19F060040()
{
  unint64_t result = qword_1E946CA60;
  if (!qword_1E946CA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA60);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SentryException.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    _OWORD *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F060160);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryException.CodingKeys()
{
  return &type metadata for SentryException.CodingKeys;
}

unint64_t sub_19F06019C()
{
  unint64_t result = qword_1E9473578;
  if (!qword_1E9473578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473578);
  }
  return result;
}

unint64_t sub_19F0601F4()
{
  unint64_t result = qword_1E946C9F8;
  if (!qword_1E946C9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C9F8);
  }
  return result;
}

unint64_t sub_19F06024C()
{
  unint64_t result = qword_1E946C9F0;
  if (!qword_1E946C9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C9F0);
  }
  return result;
}

uint64_t sub_19F0602A0()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

void *assignWithCopy for PageRenderClientIdentifierFieldsProvider(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 4, a2 + 4);
  a1[9] = a2[9];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for PageRenderClientIdentifierFieldsProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderClientIdentifierFieldsProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderClientIdentifierFieldsProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageRenderClientIdentifierFieldsProvider()
{
  return &type metadata for PageRenderClientIdentifierFieldsProvider;
}

void sub_19F060494()
{
  unint64_t v0 = (void *)sub_19F1DBD4C();
  id v1 = objc_msgSend(self, sel_keyWithName_crossDeviceSync_, v0, 0);

  qword_1E9473580 = (uint64_t)v1;
}

uint64_t sub_19F060504(uint64_t a1, void *a2)
{
  v3[32] = a1;
  v3[33] = v2;
  v3[34] = *a2;
  return MEMORY[0x1F4188298](sub_19EE43304, 0, 0);
}

uint64_t sub_19F06052C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 288) = v1;
  if (v1) {
    uint64_t v2 = sub_19F0609A8;
  }
  else {
    uint64_t v2 = sub_19F06063C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F06063C()
{
  uint64_t v1 = *(void **)(v0 + 120);

  if (qword_1E9470148 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 256);
  int v3 = *(uint64_t **)(v0 + 264);
  id v4 = objc_msgSend(v1, sel_identifierForKey_, qword_1E9473580);
  uint64_t v5 = sub_19F1DBD7C();
  uint64_t v7 = v6;

  *(void *)(v0 + 104) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = v7;
  uint64_t v8 = *v3;
  uint64_t v9 = v3[1];
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t v11 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(v0 + 80, v8, v9, v10, v11);

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_19F0609A8()
{
  uint64_t v1 = (long long *)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 280);
  swift_willThrow();

  int v3 = *(void **)(v0 + 288);
  if (qword_1E946FC40 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v17 = *(void *)(v0 + 104);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 80), v17);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  uint64_t v18 = sub_19EEC3F3C(0, 192, 0, MEMORY[0x1E4FBC860]);
  v5._object = (void *)0x800000019F26EFC0;
  v5._countAndFlagsBits = 0xD0000000000000BFLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v7 = *(void *)(v0 + 232);
  *(void *)(v0 + 216) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 192));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
  sub_19EEBCD00(v0 + 192, v0 + 160);
  long long *v1 = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  sub_19EEC3E70(v0 + 160, v0 + 120);
  *(unsigned char *)(v0 + 152) = 0;
  long long v19 = *v1;
  long long v20 = *(_OWORD *)(v0 + 136);
  char v21 = *(unsigned char *)(v0 + 152);
  uint64_t v9 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = sub_19EEC3F3C(0, v18[2] + 1, 1, v18);
  }
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  _OWORD v9[2] = v11 + 1;
  uint64_t v12 = &v9[5 * v11];
  *((unsigned char *)v12 + 64) = v21;
  *((_OWORD *)v12 + 2) = v19;
  *((_OWORD *)v12 + 3) = v20;
  sub_19EEBCB4C(v0 + 192);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  *(void *)(v4 + 32) = v9;
  Logger.error(_:)(v4, v17, v16);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_19F060C60(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x1F4188298](sub_19F060C80, 0, 0);
}

uint64_t sub_19F060C80()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v0[3] = v0[5];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E680);
  void *v1 = v0;
  v1[1] = sub_19F060DBC;
  uint64_t v2 = v0[5];
  return MEMORY[0x1F41881B8](v0 + 2, v0 + 3, &unk_1E9473640, v2, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19F060DBC()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F060F90;
  }
  else {
    uint64_t v2 = sub_19F060ED0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F060ED0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    **(void **)(v0 + 32) = v1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    sub_19EF3D500();
    return sub_19F1DCFCC();
  }
}

uint64_t sub_19F060F90()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19F060FA8(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x1F4188298](sub_19F060FC8, 0, 0);
}

uint64_t sub_19F060FC8()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v0[6] = v0[8];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946DC88);
  void *v1 = v0;
  v1[1] = sub_19F061104;
  uint64_t v2 = v0[8];
  return MEMORY[0x1F41881B8](v0 + 2, v0 + 6, &unk_1E9473688, v2, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19F061104()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0612E4;
  }
  else {
    uint64_t v2 = sub_19F061218;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F061218()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 == 2)
  {
    sub_19EF3D4D0();
    return sub_19F1DCFCC();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 56);
    long long v4 = *(_OWORD *)(v0 + 32);
    *(void *)uint64_t v3 = *(void *)(v0 + 16);
    *(void *)(v3 + 8) = v1;
    *(_OWORD *)(v3 + 16) = v4;
    Swift::String v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_19F0612E4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19F0612FC(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F061394, 0, 0);
}

uint64_t sub_19F061394()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v0[2] = v0[4];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  void *v1 = v0;
  v1[1] = sub_19F0614B8;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  return MEMORY[0x1F41881B8](v2, v0 + 2, &unk_1E9473608, v3, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19F0614B8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0616F0;
  }
  else {
    uint64_t v2 = sub_19F0615CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0615CC()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = type metadata accessor for JetPackAsset(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    sub_19EEBD664(v1, &qword_1EB3911D0);
    sub_19EF3D560();
    return sub_19F1DCFCC();
  }
  else
  {
    sub_19EE648F8(v1, v0[3]);
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_19F0616F0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t JetPackAssetSession.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_19EEDFF38(a1, v2 + 16);
  unint64_t v3 = sub_19EED9C48(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3910C8);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v3;
  sub_19EEDFEE4(a1);
  *(void *)(v2 + 96) = v4;
  return v2;
}

uint64_t JetPackAssetSession.jetPack<A>(for:fetcher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[19] = a5;
  v6[20] = v5;
  v6[17] = a3;
  v6[18] = a4;
  v6[15] = a1;
  v6[16] = a2;
  uint64_t v8 = sub_19F1DB8AC();
  v6[21] = v8;
  v6[22] = *(void *)(v8 - 8);
  v6[23] = swift_task_alloc();
  v6[24] = swift_task_alloc();
  uint64_t v9 = *(void *)(a4 - 8);
  v6[25] = v9;
  v6[26] = *(void *)(v9 + 64);
  v6[27] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[28] = AssociatedTypeWitness;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  v6[29] = v11;
  v6[30] = *(void *)(v11 + 64);
  v6[31] = swift_task_alloc();
  uint64_t v12 = sub_19F1DB85C();
  v6[32] = v12;
  v6[33] = *(void *)(v12 - 8);
  v6[34] = swift_task_alloc();
  v6[35] = swift_task_alloc();
  v6[36] = swift_task_alloc();
  v6[37] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F061A20, 0, 0);
}

uint64_t sub_19F061A20()
{
  uint64_t v60 = v0;
  if (qword_1EB390CF0 != -1) {
    swift_once();
  }
  int v55 = (uint64_t *)(v0 + 56);
  uint64_t v1 = v0 + 88;
  uint64_t v2 = sub_19F1DB89C();
  *(void *)(v0 + 304) = __swift_project_value_buffer(v2, (uint64_t)qword_1EB390CD8);
  sub_19F1DB87C();
  sub_19F1DB82C();
  unint64_t v3 = sub_19F1DB87C();
  os_signpost_type_t v4 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v5 = *(void *)(v0 + 288);
    uint64_t v6 = *(void *)(v0 + 256);
    uint64_t v7 = *(void *)(v0 + 264);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    unint64_t v9 = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v8(v5, *(void *)(v0 + 296), v6);
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    os_signpost_id_t v11 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v3, v4, v11, "Perform JetPack Request", "", v10, 2u);
    MEMORY[0x19F3C9470](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    uint64_t v1 = v0 + 88;
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 264);

    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    unint64_t v9 = (v12 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  Swift::String v13 = (long long *)(v0 + 16);
  uint64_t v15 = *(void *)(v0 + 288);
  uint64_t v14 = *(void *)(v0 + 296);
  uint64_t v16 = *(void *)(v0 + 256);
  *(void *)(v0 + 312) = v8;
  *(void *)(v0 + 320) = v9;
  v8(v15, v14, v16);
  sub_19F1DB8EC();
  swift_allocObject();
  *(void *)(v0 + 328) = sub_19F1DB8DC();
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)(v0 + 224);
  uint64_t v18 = *(void *)(v0 + 232);
  uint64_t v19 = *(void *)(v0 + 128);
  long long v20 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t contentsOf = swift_allocObject();
  *(_OWORD *)(contentsOf + 16) = xmmword_19F24EAD0;
  id v54 = v20;
  __int16 v56 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
  v21._object = (void *)0x800000019F26F0A0;
  v21._countAndFlagsBits = 0xD00000000000001ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *(void *)(v0 + 80) = v17;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v55);
  uint64_t v53 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 16);
  v53(boxed_opaque_existential_2Tm, v19, v17);
  sub_19EEC3ED8((uint64_t)v55, v1, &qword_1EB393260);
  *Swift::String v13 = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19EEC3E70(v1, v0 + 16);
  *(unsigned char *)(v0 + 48) = 0;
  long long v23 = *(_OWORD *)(v0 + 32);
  long long v57 = *v13;
  long long v58 = v23;
  char v59 = *(unsigned char *)(v0 + 48);
  uint64_t v24 = v56;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v24 = sub_19EEC3F3C(0, v56[2] + 1, 1, v56);
  }
  unint64_t v26 = v24[2];
  unint64_t v25 = v24[3];
  if (v26 >= v25 >> 1) {
    uint64_t v24 = sub_19EEC3F3C((void *)(v25 > 1), v26 + 1, 1, v24);
  }
  long long v27 = *(uint64_t **)(v0 + 248);
  uint64_t v29 = *(void *)(v0 + 224);
  uint64_t v28 = *(void *)(v0 + 232);
  long long v46 = v27;
  uint64_t v30 = *(void *)(v0 + 200);
  uint64_t v49 = *(void *)(v0 + 240);
  uint64_t v31 = *(void *)(v0 + 144);
  uint64_t v50 = *(void *)(v0 + 152);
  uint64_t v51 = *(void *)(v0 + 160);
  uint64_t v32 = *(void *)(v0 + 128);
  uint64_t v47 = *(void *)(v0 + 136);
  uint64_t v48 = *(void *)(v0 + 216);
  v24[2] = v26 + 1;
  uint64_t v33 = &v24[5 * v26];
  long long v34 = v57;
  long long v35 = v58;
  *((unsigned char *)v33 + 64) = v59;
  *((_OWORD *)v33 + 2) = v34;
  *((_OWORD *)v33 + 3) = v35;
  __int16 v56 = v24;
  sub_19EEBD664((uint64_t)v55, &qword_1EB393260);
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v36);
  *(void *)(contentsOf + 32) = v24;
  *(void *)&long long v57 = v54;
  LOBYTE(v56) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)contentsOf, (JetEngine::LogMessageLevel)&v56);
  swift_bridgeObjectRelease();

  v53(v27, v32, v29);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v48, v47, v31);
  unint64_t v37 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v38 = (v49 + *(unsigned __int8 *)(v30 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v39 = (char *)swift_allocObject();
  *(void *)(v0 + 336) = v39;
  *((void *)v39 + 2) = v31;
  *((void *)v39 + 3) = v50;
  *((void *)v39 + 4) = v51;
  (*(void (**)(char *, uint64_t *, uint64_t))(v28 + 32))(&v39[v37], v46, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(&v39[v38], v48, v31);
  swift_retain();
  uint64_t v40 = swift_task_alloc();
  *(void *)(v0 + 344) = v40;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)uint64_t v40 = v0;
  *(void *)(v40 + 8) = sub_19F061FA8;
  uint64_t v42 = *(void *)(v0 + 224);
  uint64_t v43 = *(void *)(v0 + 160);
  long long v44 = *(_OWORD *)(v0 + 120);
  *(void *)(v40 + 56) = AssociatedConformanceWitness;
  *(void *)(v40 + 64) = v43;
  *(void *)(v40 + 40) = v39;
  *(void *)(v40 + 48) = v42;
  *(void *)(v40 + 32) = &unk_1E94735A8;
  *(_OWORD *)(v40 + 16) = v44;
  return MEMORY[0x1F4188298](sub_19F067B30, 0, 0);
}

uint64_t sub_19F061FA8()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F062324;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_19F0620C4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0620C4()
{
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v3 = *(void *)(v0 + 192);
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 176);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 168));
      uint64_t v6 = "";
    }
    uint64_t v7 = (uint64_t *)(v0 + 288);
    uint64_t v10 = *(void *)(v0 + 280);
    uint64_t v12 = *(void *)(v0 + 256);
    uint64_t v11 = *(void *)(v0 + 264);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 312))(*(void *)(v0 + 288), v10, v12);
    Swift::String v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v13 = 0;
    os_signpost_id_t v14 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v14, "Perform JetPack Request", v6, v13, 2u);
    MEMORY[0x19F3C9470](v13, -1, -1);

    unint64_t v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    uint64_t v7 = (uint64_t *)(v0 + 280);
    uint64_t v8 = *(void *)(v0 + 264);

    unint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *(void *)(v0 + 296);
  uint64_t v16 = *(void *)(v0 + 256);
  v9(*v7, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_19F062324()
{
  swift_release();
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v3 = *(void *)(v0 + 176);
    uint64_t v4 = *(void *)(v0 + 184);
    uint64_t v5 = *(void *)(v0 + 168);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v4, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
      uint64_t v6 = "";
    }
    uint64_t v7 = (uint64_t *)(v0 + 288);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v11 = *(void *)(v0 + 272);
    uint64_t v12 = *(void *)(v0 + 256);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 312))(*(void *)(v0 + 288), v11, v12);
    Swift::String v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v13 = 0;
    os_signpost_id_t v14 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v14, "Perform JetPack Request", v6, v13, 2u);
    MEMORY[0x19F3C9470](v13, -1, -1);

    unint64_t v9 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v9(v11, v12);
  }
  else
  {
    uint64_t v7 = (uint64_t *)(v0 + 272);
    uint64_t v8 = *(void *)(v0 + 264);

    unint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *(void *)(v0 + 296);
  uint64_t v16 = *(void *)(v0 + 256);
  v9(*v7, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_19F06258C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[75] = a6;
  v6[74] = a5;
  v6[73] = a4;
  v6[72] = a3;
  v6[71] = a2;
  v6[70] = a1;
  uint64_t v7 = *(void *)(a5 - 8);
  v6[76] = v7;
  v6[77] = *(void *)(v7 + 64);
  v6[78] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  v6[79] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[80] = AssociatedTypeWitness;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  v6[81] = v9;
  v6[82] = *(void *)(v9 + 64);
  v6[83] = swift_task_alloc();
  v6[84] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for JetPackAsset(0);
  v6[85] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v6[86] = v11;
  v6[87] = *(void *)(v11 + 64);
  v6[88] = swift_task_alloc();
  v6[89] = swift_task_alloc();
  v6[90] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  v6[91] = swift_task_alloc();
  v6[92] = swift_task_alloc();
  v6[93] = swift_task_alloc();
  v6[94] = swift_task_alloc();
  v6[95] = swift_task_alloc();
  v6[96] = swift_task_alloc();
  v6[97] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F06281C, 0, 0);
}

uint64_t sub_19F06281C()
{
  sub_19F1DC45C();
  uint64_t v1 = (void *)v0[71];
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
  uint64_t v4 = v0[97];
  uint64_t v5 = v0[86];
  uint64_t v6 = v0[85];
  uint64_t v7 = v0[80];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v0[98] = v8;
  v0[99] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v8(v4, 1, 1, v6);
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v9);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[100] = AssociatedConformanceWitness;
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  v0[101] = v12;
  v0[102] = (AssociatedConformanceWitness + 16) & 0xFFFFFFFFFFFFLL | 0x2A86000000000000;
  uint64_t v13 = v12(v7, AssociatedConformanceWitness);
  uint64_t v15 = v14;
  v0[103] = v14;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 16)
                                                                            + **(int **)(v10 + 16));
  uint64_t v16 = (void *)swift_task_alloc();
  v0[104] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_19F062B24;
  uint64_t v17 = v0[96];
  return v19(v17, v13, v15, v9, v10);
}

uint64_t sub_19F062B24()
{
  *(void *)(*(void *)v1 + 840) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F064BD0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_19F062C40;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_19F062C40()
{
  void (*v50)(long long *__return_ptr, uint64_t, uint64_t);
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  long long v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  long long v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(void);
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  void (*v120)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  long long v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  long long v128;
  long long v129;
  char v130;
  uint64_t v131;
  uint64_t v132;

  v131 = v0;
  uint64_t v1 = *(void *)(v0 + 776);
  uint64_t v2 = *(void *)(v0 + 768);
  uint64_t v3 = *(void *)(v0 + 760);
  uint64_t v4 = *(void *)(v0 + 688);
  uint64_t v5 = *(void *)(v0 + 680);
  sub_19EEBD664(v1, &qword_1EB3911D0);
  sub_19F06E494(v2, v1);
  sub_19EEC3ED8(v1, v3, &qword_1EB3911D0);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  uint64_t v7 = *(void *)(v0 + 760);
  if (v6 == 1)
  {
    sub_19EEBD664(v7, &qword_1EB3911D0);
    goto LABEL_3;
  }
  sub_19EE648F8(v7, *(void *)(v0 + 720));
  if (qword_1EB390B70 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)(v0 + 840);
  uint64_t v14 = qword_1EB394EE0;
  *(void *)(v0 + 536) = (*(uint64_t (**)(void, void))(v0 + 808))(*(void *)(v0 + 640), *(void *)(v0 + 800));
  *(void *)(v0 + 544) = v15;
  uint64_t v16 = *(void *)(v14 + 16);
  *(void *)(swift_task_alloc() + 16) = v0 + 536;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v16 + 24));
  sub_19EE7AE04((uint64_t *)(v16 + 16), &v128);
  os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 24));
  if (!v13)
  {
    __int16 v56 = v128;
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if ((v56 & 1) == 0)
    {
      sub_19EF4B3C4(*(void *)(v0 + 720));
LABEL_3:
      uint64_t v8 = *(void *)(v0 + 776);
      uint64_t v9 = *(void *)(v0 + 752);
      uint64_t v10 = *(void *)(v0 + 688);
      uint64_t v11 = *(void *)(v0 + 680);
      sub_19EEC4154(*(void *)(v0 + 568) + 56, v0 + 16);
      sub_19EEC3ED8(v8, v9, &qword_1EB3911D0);
      v117 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (v117(v9, 1, v11) == 1)
      {
        int v12 = 4;
      }
      else
      {
        uint64_t v17 = *(void *)(v0 + 712);
        sub_19EE648F8(*(void *)(v0 + 752), v17);
        uint64_t v18 = *(void *)(v0 + 40);
        uint64_t v19 = *(void *)(v0 + 48);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v18);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v19 + 8))(&v128, v17, v18, v19);
        int v12 = v128;
        sub_19EF4B3C4(v17);
      }
      v124 = v12;
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      if (qword_1EB390E38 != -1) {
        swift_once();
      }
      uint64_t v20 = (long long *)(v0 + 216);
      uint64_t v21 = *(void *)(v0 + 776);
      uint64_t v22 = *(void *)(v0 + 744);
      uint64_t v23 = *(void *)(v0 + 680);
      uint64_t v24 = (void *)qword_1EB390E30;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_19F24EAD0;
      id v26 = v24;
      v127 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
      v27._countAndFlagsBits = 0x7341646568636163;
      v27._object = (void *)0xEC0000003D746573;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      sub_19EEC3ED8(v21, v22, &qword_1EB3911D0);
      unsigned int v28 = v117(v22, 1, v23);
      uint64_t v29 = *(void *)(v0 + 744);
      if (v28 == 1)
      {
        sub_19EEBD664(*(void *)(v0 + 744), &qword_1EB3911D0);
        *(_OWORD *)(v0 + 256) = 0u;
        *(_OWORD *)(v0 + 272) = 0u;
      }
      else
      {
        *(void *)(v0 + 280) = *(void *)(v0 + 680);
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
        sub_19EE648F8(v29, (uint64_t)boxed_opaque_existential_2Tm);
      }
      sub_19EEC3ED8(v0 + 256, v0 + 288, &qword_1EB393260);
      *uint64_t v20 = 0u;
      *(_OWORD *)(v0 + 232) = 0u;
      sub_19EEC3E70(v0 + 288, v0 + 216);
      *(unsigned char *)(v0 + 248) = 0;
      long long v31 = *(_OWORD *)(v0 + 232);
      v128 = *v20;
      v129 = v31;
      v130 = *(unsigned char *)(v0 + 248);
      uint64_t v32 = v127;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v32 = sub_19EEC3F3C(0, v127[2] + 1, 1, v127);
      }
      unint64_t v34 = v32[2];
      unint64_t v33 = v32[3];
      if (v34 >= v33 >> 1) {
        uint64_t v32 = sub_19EEC3F3C((void *)(v33 > 1), v34 + 1, 1, v32);
      }
      long long v35 = (long long *)(v0 + 136);
      v32[2] = v34 + 1;
      Swift::String v36 = &v32[5 * v34];
      long long v37 = v128;
      long long v38 = v129;
      *((unsigned char *)v36 + 64) = v130;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v127 = v32;
      sub_19EEBD664(v0 + 256, &qword_1EB393260);
      v39._countAndFlagsBits = 0x3D73757461747320;
      v39._object = (void *)0xE800000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      if (v124 == 4)
      {
        *(_OWORD *)(v0 + 480) = 0u;
        *(_OWORD *)(v0 + 496) = 0u;
      }
      else
      {
        *(void *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
        *(unsigned char *)(v0 + 480) = v124;
      }
      sub_19EEC3ED8(v0 + 480, v0 + 384, &qword_1EB393260);
      long long *v35 = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      sub_19EEC3E70(v0 + 384, v0 + 136);
      *(unsigned char *)(v0 + 168) = 0;
      long long v40 = *(_OWORD *)(v0 + 152);
      v128 = *v35;
      v129 = v40;
      v130 = *(unsigned char *)(v0 + 168);
      uint64_t v41 = v127;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v41 = sub_19EEC3F3C(0, v127[2] + 1, 1, v127);
      }
      unint64_t v43 = v41[2];
      unint64_t v42 = v41[3];
      if (v43 >= v42 >> 1) {
        uint64_t v41 = sub_19EEC3F3C((void *)(v42 > 1), v43 + 1, 1, v41);
      }
      uint64_t v44 = *(void *)(v0 + 800);
      uint64_t v45 = *(void *)(v0 + 640);
      _OWORD v41[2] = v43 + 1;
      long long v46 = &v41[5 * v43];
      long long v47 = v128;
      long long v48 = v129;
      *((unsigned char *)v46 + 64) = v130;
      *((_OWORD *)v46 + 2) = v47;
      *((_OWORD *)v46 + 3) = v48;
      v127 = v41;
      sub_19EEBD664(v0 + 480, &qword_1EB393260);
      v49._countAndFlagsBits = 0;
      v49._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      *(void *)(v25 + 32) = v41;
      *(void *)&v128 = v26;
      LOBYTE(v127) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v25, (JetEngine::LogMessageLevel)&v127);
      swift_bridgeObjectRelease();

      uint64_t v50 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v44 + 24);
      v50(&v128, v45, v44);
      if ((_BYTE)v128)
      {
        uint64_t v51 = v124;
        if (v124 == 4 || v128 != 2) {
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v51 = v124;
        if (v124 == 4) {
          goto LABEL_46;
        }
      }
      long long v52 = *(void *)(v0 + 736);
      uint64_t v53 = *(void *)(v0 + 680);
      sub_19EEC3ED8(*(void *)(v0 + 776), v52, &qword_1EB3911D0);
      id v54 = v117(v52, 1, v53);
      int v55 = *(void *)(v0 + 736);
      if (v54 == 1)
      {
        sub_19EEBD664(v55, &qword_1EB3911D0);
      }
      else
      {
        sub_19EE648F8(v55, *(void *)(v0 + 704));
        v69 = v51 - 1;
        if (v51 <= 1)
        {
          v125 = *(void *)(v0 + 672);
          v70 = *(void *)(v0 + 648);
          v122 = *(void *)(v0 + 640);
          v118 = *(void *)(v0 + 576);
          v71 = (void *)qword_1EB390E30;
          v72 = swift_allocObject();
          *(_OWORD *)(v72 + 16) = xmmword_19F24EAD0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
          v73 = swift_allocObject();
          v74 = MEMORY[0x1E4FBB1A0];
          *(_OWORD *)(v73 + 16) = xmmword_19F24EAD0;
          *(void *)(v0 + 472) = v74;
          *(void *)(v0 + 448) = 0xD000000000000012;
          *(void *)(v0 + 456) = 0x800000019F26F1E0;
          *(_OWORD *)(v0 + 96) = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
          v75 = v71;
          sub_19EEC3E70(v0 + 448, v0 + 96);
          *(unsigned char *)(v0 + 128) = 0;
          v76 = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v73 + 32) = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v73 + 48) = v76;
          *(unsigned char *)(v73 + 64) = *(unsigned char *)(v0 + 128);
          *(void *)(v72 + 32) = v73;
          *(void *)&v128 = v75;
          LOBYTE(v127) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v72, (JetEngine::LogMessageLevel)&v127);
          swift_bridgeObjectRelease();

          v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16);
          v77(v125, v118, v122);
          if (v69 > 1)
          {
            (*(void (**)(void, void))(*(void *)(v0 + 648) + 8))(*(void *)(v0 + 672), *(void *)(v0 + 640));
          }
          else
          {
            v78 = *(void *)(v0 + 672);
            v79 = *(void *)(v0 + 648);
            v80 = *(void *)(v0 + 640);
            v50(&v128, v80, *(void *)(v0 + 800));
            (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
            if (!(_BYTE)v128 || v128 == 1)
            {
              v126 = *(void *)(v0 + 712);
              v115 = *(void *)(v0 + 688);
              v81 = *(void *)(v0 + 664);
              v114 = *(void *)(v0 + 656);
              v82 = *(void *)(v0 + 648);
              v83 = *(void *)(v0 + 640);
              v111 = *(void *)(v0 + 704);
              v84 = *(void *)(v0 + 632);
              v119 = v84;
              v85 = *(void *)(v0 + 624);
              v112 = v81;
              v113 = *(void *)(v0 + 616);
              v86 = *(void *)(v0 + 608);
              v110 = *(void *)(v0 + 584);
              v87 = *(void *)(v0 + 576);
              v116 = *(void *)(v0 + 568);
              v88 = sub_19F1DC37C();
              v123 = *(_OWORD *)(v0 + 592);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v84, 1, 1, v88);
              v77(v81, v87, v83);
              (*(void (**)(uint64_t, uint64_t, void))(v86 + 16))(v85, v110, v123);
              sub_19EF93C94(v111, v126);
              v89 = (*(unsigned __int8 *)(v82 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
              v90 = (v114 + *(unsigned __int8 *)(v86 + 80) + v89) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
              v91 = (v113 + *(unsigned __int8 *)(v115 + 80) + v90) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
              v92 = swift_allocObject();
              *(void *)(v92 + 16) = 0;
              *(void *)(v92 + 24) = 0;
              *(_OWORD *)(v92 + 32) = v123;
              *(void *)(v92 + 48) = v116;
              (*(void (**)(unint64_t, uint64_t, uint64_t))(v82 + 32))(v92 + v89, v112, v83);
              (*(void (**)(unint64_t, uint64_t, void))(v86 + 32))(v92 + v90, v85, v123);
              sub_19EE648F8(v126, v92 + v91);
              swift_retain();
              sub_19EE54490(v119, (uint64_t)&unk_1E9473678, v92);
              swift_release();
            }
          }
          v105 = *(void *)(v0 + 704);
          v106 = *(void *)(v0 + 560);
          sub_19EEBD664(*(void *)(v0 + 776), &qword_1EB3911D0);
          sub_19EE648F8(v105, v106);
          v107 = *(void **)(v0 + 568);
          v109 = v107[5];
          v108 = v107[6];
          __swift_project_boxed_opaque_existential_1(v107 + 2, v109);
          (*(void (**)(uint64_t, uint64_t))(v108 + 56))(v109, v108);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v104 = *(void (**)(void))(v0 + 8);
LABEL_57:
          v104();
          return;
        }
        sub_19EF4B3C4(*(void *)(v0 + 704));
        uint64_t v51 = v124;
      }
LABEL_46:
      v50(&v128, *(void *)(v0 + 640), *(void *)(v0 + 800));
      if (!(_BYTE)v128 || v128 == 1)
      {
        if (v51 == 3) {
          (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 784))(*(void *)(v0 + 728), 1, 1, *(void *)(v0 + 680));
        }
        else {
          sub_19EEC3ED8(*(void *)(v0 + 776), *(void *)(v0 + 728), &qword_1EB3911D0);
        }
        v93 = (void *)swift_task_alloc();
        *(void *)(v0 + 864) = v93;
        *v93 = v0;
        v93[1] = sub_19F064930;
        v94 = *(void *)(v0 + 728);
        v95 = *(void *)(v0 + 600);
        v96 = *(void *)(v0 + 592);
        v97 = *(void *)(v0 + 584);
        v98 = *(void *)(v0 + 576);
        v99 = *(void *)(v0 + 560);
        sub_19F066EEC(v99, v98, v97, v94, v96, v95);
        return;
      }
      v100 = *(void *)(v0 + 776);
      v101 = *(void **)(v0 + 568);
      sub_19F06DFE8();
      swift_allocError();
      swift_willThrow();
      sub_19EEBD664(v100, &qword_1EB3911D0);
      v102 = v101[5];
      v103 = v101[6];
      __swift_project_boxed_opaque_existential_1(v101 + 2, v102);
      (*(void (**)(uint64_t, uint64_t))(v103 + 56))(v102, v103);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v104 = *(void (**)(void))(v0 + 8);
      goto LABEL_57;
    }
    if (qword_1EB390E38 != -1) {
      swift_once();
    }
    v120 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 784);
    long long v57 = *(void *)(v0 + 776);
    long long v58 = *(void *)(v0 + 680);
    char v59 = *(void **)(v0 + 568);
    uint64_t v60 = (void *)qword_1EB390E30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    unsigned __int16 v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 344) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 320) = 0xD000000000000054;
    *(void *)(v0 + 328) = 0x800000019F26F200;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    int v63 = v60;
    sub_19EEC3E70(v0 + 320, v0 + 56);
    *(unsigned char *)(v0 + 88) = 0;
    *(unsigned char *)(v62 + 64) = 0;
    __int16 v64 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v62 + 32) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v62 + 48) = v64;
    *(void *)(v61 + 32) = v62;
    *(void *)&v128 = v63;
    LOBYTE(v127) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v61, (JetEngine::LogMessageLevel)&v127);
    swift_bridgeObjectRelease();

    sub_19EEBD664(v57, &qword_1EB3911D0);
    v120(v57, 1, 1, v58);
    uint64_t v65 = v59[5];
    uint64_t v66 = v59[6];
    __swift_project_boxed_opaque_existential_1(v59 + 2, v65);
    v121 = (void (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 + 24) + **(int **)(v66 + 24));
    uint64_t v67 = (void *)swift_task_alloc();
    *(void *)(v0 + 848) = v67;
    *uint64_t v67 = v0;
    v67[1] = sub_19F063C1C;
    v68 = *(void *)(v0 + 720);
    v121(v68, v65, v66);
  }
}

uint64_t sub_19F063C1C()
{
  *(void *)(*(void *)v1 + 856) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0659F8;
  }
  else {
    uint64_t v2 = sub_19F063D30;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F063D30()
{
  void (*v39)(long long *__return_ptr, uint64_t, uint64_t);
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  long long v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(void);
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  long long v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  long long v103;
  long long v104;
  char v105;
  uint64_t v106;
  uint64_t v107;

  v106 = v0;
  sub_19EF4B3C4(*(void *)(v0 + 720));
  uint64_t v1 = *(void *)(v0 + 776);
  uint64_t v2 = *(void *)(v0 + 752);
  uint64_t v3 = *(void *)(v0 + 688);
  uint64_t v4 = *(void *)(v0 + 680);
  sub_19EEC4154(*(void *)(v0 + 568) + 56, v0 + 16);
  sub_19EEC3ED8(v1, v2, &qword_1EB3911D0);
  v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v94(v2, 1, v4) == 1)
  {
    int v5 = 4;
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 712);
    sub_19EE648F8(*(void *)(v0 + 752), v6);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v7);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v8 + 8))(&v103, v6, v7, v8);
    int v5 = v103;
    sub_19EF4B3C4(v6);
  }
  v99 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v9 = (long long *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 776);
  uint64_t v11 = *(void *)(v0 + 744);
  uint64_t v12 = *(void *)(v0 + 680);
  uint64_t v13 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19F24EAD0;
  id v15 = v13;
  v102 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
  v16._countAndFlagsBits = 0x7341646568636163;
  v16._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  sub_19EEC3ED8(v10, v11, &qword_1EB3911D0);
  unsigned int v17 = v94(v11, 1, v12);
  uint64_t v18 = *(void *)(v0 + 744);
  if (v17 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 744), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(void *)(v0 + 280) = *(void *)(v0 + 680);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19EE648F8(v18, (uint64_t)boxed_opaque_existential_2Tm);
  }
  sub_19EEC3ED8(v0 + 256, v0 + 288, &qword_1EB393260);
  *uint64_t v9 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19EEC3E70(v0 + 288, v0 + 216);
  *(unsigned char *)(v0 + 248) = 0;
  long long v20 = *(_OWORD *)(v0 + 232);
  v103 = *v9;
  v104 = v20;
  v105 = *(unsigned char *)(v0 + 248);
  uint64_t v21 = v102;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v21 = sub_19EEC3F3C(0, v102[2] + 1, 1, v102);
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1) {
    uint64_t v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
  }
  uint64_t v24 = (long long *)(v0 + 136);
  long long v21[2] = v23 + 1;
  uint64_t v25 = &v21[5 * v23];
  long long v26 = v103;
  long long v27 = v104;
  *((unsigned char *)v25 + 64) = v105;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  v102 = v21;
  sub_19EEBD664(v0 + 256, &qword_1EB393260);
  v28._countAndFlagsBits = 0x3D73757461747320;
  v28._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  if (v99 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(void *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(unsigned char *)(v0 + 480) = v99;
  }
  sub_19EEC3ED8(v0 + 480, v0 + 384, &qword_1EB393260);
  *uint64_t v24 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19EEC3E70(v0 + 384, v0 + 136);
  *(unsigned char *)(v0 + 168) = 0;
  long long v29 = *(_OWORD *)(v0 + 152);
  v103 = *v24;
  v104 = v29;
  v105 = *(unsigned char *)(v0 + 168);
  uint64_t v30 = v102;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v30 = sub_19EEC3F3C(0, v102[2] + 1, 1, v102);
  }
  unint64_t v32 = v30[2];
  unint64_t v31 = v30[3];
  if (v32 >= v31 >> 1) {
    uint64_t v30 = sub_19EEC3F3C((void *)(v31 > 1), v32 + 1, 1, v30);
  }
  uint64_t v33 = *(void *)(v0 + 800);
  uint64_t v34 = *(void *)(v0 + 640);
  _OWORD v30[2] = v32 + 1;
  long long v35 = &v30[5 * v32];
  long long v36 = v103;
  long long v37 = v104;
  *((unsigned char *)v35 + 64) = v105;
  *((_OWORD *)v35 + 2) = v36;
  *((_OWORD *)v35 + 3) = v37;
  v102 = v30;
  sub_19EEBD664(v0 + 480, &qword_1EB393260);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  *(void *)(v14 + 32) = v30;
  *(void *)&v103 = v15;
  LOBYTE(v102) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v102);
  swift_bridgeObjectRelease();

  Swift::String v39 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v33 + 24);
  v39(&v103, v34, v33);
  if ((_BYTE)v103)
  {
    long long v40 = v99;
    if (v99 == 4 || v103 != 2) {
      goto LABEL_33;
    }
  }
  else
  {
    long long v40 = v99;
    if (v99 == 4) {
      goto LABEL_33;
    }
  }
  uint64_t v41 = *(void *)(v0 + 736);
  unint64_t v42 = *(void *)(v0 + 680);
  sub_19EEC3ED8(*(void *)(v0 + 776), v41, &qword_1EB3911D0);
  unint64_t v43 = v94(v41, 1, v42);
  uint64_t v44 = *(void *)(v0 + 736);
  if (v43 == 1)
  {
    sub_19EEBD664(v44, &qword_1EB3911D0);
  }
  else
  {
    sub_19EE648F8(v44, *(void *)(v0 + 704));
    uint64_t v45 = v40 - 1;
    if (v40 <= 1)
    {
      v100 = *(void *)(v0 + 672);
      long long v46 = *(void *)(v0 + 648);
      v95 = *(void *)(v0 + 576);
      v97 = *(void *)(v0 + 640);
      long long v47 = (void *)qword_1EB390E30;
      long long v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_19F24EAD0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      Swift::String v49 = swift_allocObject();
      uint64_t v50 = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)(v49 + 16) = xmmword_19F24EAD0;
      *(void *)(v0 + 472) = v50;
      *(void *)(v0 + 448) = 0xD000000000000012;
      *(void *)(v0 + 456) = 0x800000019F26F1E0;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      uint64_t v51 = v47;
      sub_19EEC3E70(v0 + 448, v0 + 96);
      *(unsigned char *)(v0 + 128) = 0;
      long long v52 = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v49 + 32) = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v49 + 48) = v52;
      *(unsigned char *)(v49 + 64) = *(unsigned char *)(v0 + 128);
      *(void *)(v48 + 32) = v49;
      *(void *)&v103 = v51;
      LOBYTE(v102) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v48, (JetEngine::LogMessageLevel)&v102);
      swift_bridgeObjectRelease();

      uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
      v53(v100, v95, v97);
      if (v45 > 1)
      {
        (*(void (**)(void, void))(*(void *)(v0 + 648) + 8))(*(void *)(v0 + 672), *(void *)(v0 + 640));
      }
      else
      {
        id v54 = *(void *)(v0 + 672);
        int v55 = *(void *)(v0 + 648);
        __int16 v56 = *(void *)(v0 + 640);
        v39(&v103, v56, *(void *)(v0 + 800));
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
        if (!(_BYTE)v103 || v103 == 1)
        {
          v101 = *(void *)(v0 + 712);
          v92 = *(void *)(v0 + 688);
          long long v57 = *(void *)(v0 + 664);
          v91 = *(void *)(v0 + 656);
          long long v58 = *(void *)(v0 + 648);
          char v59 = *(void *)(v0 + 640);
          v88 = *(void *)(v0 + 704);
          uint64_t v60 = *(void *)(v0 + 632);
          v96 = v60;
          uint64_t v61 = *(void *)(v0 + 624);
          v89 = v57;
          v90 = *(void *)(v0 + 616);
          unsigned __int16 v62 = *(void *)(v0 + 608);
          v87 = *(void *)(v0 + 584);
          int v63 = *(void *)(v0 + 576);
          v93 = *(void *)(v0 + 568);
          __int16 v64 = sub_19F1DC37C();
          v98 = *(_OWORD *)(v0 + 592);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v60, 1, 1, v64);
          v53(v57, v63, v59);
          (*(void (**)(uint64_t, uint64_t, void))(v62 + 16))(v61, v87, v98);
          sub_19EF93C94(v88, v101);
          uint64_t v65 = (*(unsigned __int8 *)(v58 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
          uint64_t v66 = (v91 + *(unsigned __int8 *)(v62 + 80) + v65) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
          uint64_t v67 = (v90 + *(unsigned __int8 *)(v92 + 80) + v66) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
          v68 = swift_allocObject();
          *(void *)(v68 + 16) = 0;
          *(void *)(v68 + 24) = 0;
          *(_OWORD *)(v68 + 32) = v98;
          *(void *)(v68 + 48) = v93;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v58 + 32))(v68 + v65, v89, v59);
          (*(void (**)(unint64_t, uint64_t, void))(v62 + 32))(v68 + v66, v61, v98);
          sub_19EE648F8(v101, v68 + v67);
          swift_retain();
          sub_19EE54490(v96, (uint64_t)&unk_1E9473678, v68);
          swift_release();
        }
      }
      v82 = *(void *)(v0 + 704);
      v83 = *(void *)(v0 + 560);
      sub_19EEBD664(*(void *)(v0 + 776), &qword_1EB3911D0);
      sub_19EE648F8(v82, v83);
      v84 = *(void **)(v0 + 568);
      v86 = v84[5];
      v85 = v84[6];
      __swift_project_boxed_opaque_existential_1(v84 + 2, v86);
      (*(void (**)(uint64_t, uint64_t))(v85 + 56))(v86, v85);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v81 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_44;
    }
    sub_19EF4B3C4(*(void *)(v0 + 704));
    long long v40 = v99;
  }
LABEL_33:
  v39(&v103, *(void *)(v0 + 640), *(void *)(v0 + 800));
  if (!(_BYTE)v103 || v103 == 1)
  {
    if (v40 == 3) {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 784))(*(void *)(v0 + 728), 1, 1, *(void *)(v0 + 680));
    }
    else {
      sub_19EEC3ED8(*(void *)(v0 + 776), *(void *)(v0 + 728), &qword_1EB3911D0);
    }
    v69 = (void *)swift_task_alloc();
    *(void *)(v0 + 864) = v69;
    *v69 = v0;
    v69[1] = sub_19F064930;
    v70 = *(void *)(v0 + 728);
    v71 = *(void *)(v0 + 600);
    v72 = *(void *)(v0 + 592);
    v73 = *(void *)(v0 + 584);
    v74 = *(void *)(v0 + 576);
    v75 = *(void *)(v0 + 560);
    return sub_19F066EEC(v75, v74, v73, v70, v72, v71);
  }
  v77 = *(void *)(v0 + 776);
  v78 = *(void **)(v0 + 568);
  sub_19F06DFE8();
  swift_allocError();
  swift_willThrow();
  sub_19EEBD664(v77, &qword_1EB3911D0);
  v79 = v78[5];
  v80 = v78[6];
  __swift_project_boxed_opaque_existential_1(v78 + 2, v79);
  (*(void (**)(uint64_t, uint64_t))(v80 + 56))(v79, v80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v81 = *(uint64_t (**)(void))(v0 + 8);
LABEL_44:
  return v81();
}

uint64_t sub_19F064930()
{
  *(void *)(*(void *)v1 + 872) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F066820;
  }
  else {
    uint64_t v2 = sub_19F064A44;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F064A44()
{
  uint64_t v1 = v0[97];
  sub_19EEBD664(v0[91], &qword_1EB3911D0);
  sub_19EEBD664(v1, &qword_1EB3911D0);
  uint64_t v2 = (void *)v0[71];
  uint64_t v4 = v2[5];
  uint64_t v3 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v4, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_19F064BD0()
{
  void (*v55)(long long *__return_ptr, uint64_t, uint64_t);
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  long long v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(void);
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  long long v114;
  id v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  long long v120;
  long long v121;
  char v122;
  uint64_t v123;
  uint64_t v124;

  v123 = v0;
  uint64_t v1 = (long long *)(v0 + 176);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(v0 + 840);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  v108 = (void *)(v0 + 16);
  uint64_t v3 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  v115 = v3;
  v119 = sub_19EEC3F3C(0, 45, 0, MEMORY[0x1E4FBC860]);
  v5._countAndFlagsBits = 0xD00000000000002CLL;
  v5._object = (void *)0x800000019F26F1B0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  uint64_t v6 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 520);
  *(void *)(v0 + 376) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 352));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
  sub_19EEC3ED8(v0 + 352, v0 + 416, &qword_1EB393260);
  long long *v1 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19EEC3E70(v0 + 416, v0 + 176);
  *(unsigned char *)(v0 + 208) = 0;
  long long v9 = *(_OWORD *)(v0 + 192);
  v120 = *v1;
  v121 = v9;
  v122 = *(unsigned char *)(v0 + 208);
  uint64_t v10 = v119;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_19EEC3F3C(0, v119[2] + 1, 1, v119);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  v10[2] = v12 + 1;
  uint64_t v13 = &v10[5 * v12];
  long long v14 = v120;
  long long v15 = v121;
  *((unsigned char *)v13 + 64) = v122;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  v119 = v10;
  sub_19EEBD664(v0 + 352, &qword_1EB393260);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v4 + 32) = v10;
  *(void *)&v120 = v115;
  LOBYTE(v119) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v119);
  swift_bridgeObjectRelease();

  uint64_t v17 = *(void *)(v0 + 776);
  uint64_t v18 = *(void *)(v0 + 752);
  uint64_t v19 = *(void *)(v0 + 688);
  uint64_t v20 = *(void *)(v0 + 680);
  sub_19EEC4154(*(void *)(v0 + 568) + 56, (uint64_t)v108);
  sub_19EEC3ED8(v17, v18, &qword_1EB3911D0);
  v110 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v110(v18, 1, v20) == 1)
  {
    int v21 = 4;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 712);
    sub_19EE648F8(*(void *)(v0 + 752), v22);
    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v24 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v108, v23);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v24 + 8))(&v120, v22, v23, v24);
    int v21 = v120;
    sub_19EF4B3C4(v22);
  }
  v116 = v21;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v25 = (long long *)(v0 + 216);
  uint64_t v26 = *(void *)(v0 + 776);
  uint64_t v27 = *(void *)(v0 + 744);
  uint64_t v28 = *(void *)(v0 + 680);
  long long v29 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_19F24EAD0;
  id v31 = v29;
  v119 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
  v32._countAndFlagsBits = 0x7341646568636163;
  v32._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  sub_19EEC3ED8(v26, v27, &qword_1EB3911D0);
  unsigned int v33 = v110(v27, 1, v28);
  uint64_t v34 = *(void *)(v0 + 744);
  if (v33 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 744), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(void *)(v0 + 280) = *(void *)(v0 + 680);
    long long v35 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19EE648F8(v34, (uint64_t)v35);
  }
  sub_19EEC3ED8(v0 + 256, v0 + 288, &qword_1EB393260);
  *uint64_t v25 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19EEC3E70(v0 + 288, v0 + 216);
  *(unsigned char *)(v0 + 248) = 0;
  long long v36 = *(_OWORD *)(v0 + 232);
  v120 = *v25;
  v121 = v36;
  v122 = *(unsigned char *)(v0 + 248);
  long long v37 = v119;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v37 = sub_19EEC3F3C(0, v37[2] + 1, 1, v37);
  }
  unint64_t v39 = v37[2];
  unint64_t v38 = v37[3];
  if (v39 >= v38 >> 1) {
    long long v37 = sub_19EEC3F3C((void *)(v38 > 1), v39 + 1, 1, v37);
  }
  long long v40 = (long long *)(v0 + 136);
  v37[2] = v39 + 1;
  uint64_t v41 = &v37[5 * v39];
  long long v42 = v120;
  long long v43 = v121;
  *((unsigned char *)v41 + 64) = v122;
  *((_OWORD *)v41 + 2) = v42;
  *((_OWORD *)v41 + 3) = v43;
  v119 = v37;
  sub_19EEBD664(v0 + 256, &qword_1EB393260);
  v44._countAndFlagsBits = 0x3D73757461747320;
  v44._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v44);
  if (v116 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(void *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(unsigned char *)(v0 + 480) = v116;
  }
  sub_19EEC3ED8(v0 + 480, v0 + 384, &qword_1EB393260);
  *long long v40 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19EEC3E70(v0 + 384, v0 + 136);
  *(unsigned char *)(v0 + 168) = 0;
  long long v45 = *(_OWORD *)(v0 + 152);
  v120 = *v40;
  v121 = v45;
  v122 = *(unsigned char *)(v0 + 168);
  long long v46 = v119;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v46 = sub_19EEC3F3C(0, v46[2] + 1, 1, v46);
  }
  unint64_t v48 = v46[2];
  unint64_t v47 = v46[3];
  if (v48 >= v47 >> 1) {
    long long v46 = sub_19EEC3F3C((void *)(v47 > 1), v48 + 1, 1, v46);
  }
  uint64_t v49 = *(void *)(v0 + 800);
  uint64_t v50 = *(void *)(v0 + 640);
  void v46[2] = v48 + 1;
  uint64_t v51 = &v46[5 * v48];
  long long v52 = v120;
  long long v53 = v121;
  *((unsigned char *)v51 + 64) = v122;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  v119 = v46;
  sub_19EEBD664(v0 + 480, &qword_1EB393260);
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(void *)(v30 + 32) = v119;
  *(void *)&v120 = v31;
  LOBYTE(v119) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v30, (JetEngine::LogMessageLevel)&v119);

  swift_bridgeObjectRelease();
  int v55 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v49 + 24);
  v55(&v120, v50, v49);
  if ((_BYTE)v120)
  {
    __int16 v56 = v116;
    if (v116 == 4 || v120 != 2) {
      goto LABEL_39;
    }
  }
  else
  {
    __int16 v56 = v116;
    if (v116 == 4) {
      goto LABEL_39;
    }
  }
  long long v57 = *(void *)(v0 + 736);
  long long v58 = *(void *)(v0 + 680);
  sub_19EEC3ED8(*(void *)(v0 + 776), v57, &qword_1EB3911D0);
  char v59 = v110(v57, 1, v58);
  uint64_t v60 = *(void *)(v0 + 736);
  if (v59 == 1)
  {
    sub_19EEBD664(v60, &qword_1EB3911D0);
  }
  else
  {
    sub_19EE648F8(v60, *(void *)(v0 + 704));
    uint64_t v61 = v56 - 1;
    if (v56 <= 1)
    {
      v117 = *(void *)(v0 + 672);
      unsigned __int16 v62 = *(void *)(v0 + 648);
      v111 = *(void *)(v0 + 576);
      v113 = *(void *)(v0 + 640);
      int v63 = (void *)qword_1EB390E30;
      __int16 v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_19F24EAD0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_19F24EAD0;
      *(void *)(v0 + 472) = MEMORY[0x1E4FBB1A0];
      *(void *)(v0 + 448) = 0xD000000000000012;
      *(void *)(v0 + 456) = 0x800000019F26F1E0;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      uint64_t v66 = v63;
      sub_19EEC3E70(v0 + 448, v0 + 96);
      *(unsigned char *)(v0 + 128) = 0;
      uint64_t v67 = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v65 + 32) = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v65 + 48) = v67;
      *(unsigned char *)(v65 + 64) = *(unsigned char *)(v0 + 128);
      *(void *)(v64 + 32) = v65;
      *(void *)&v120 = v66;
      LOBYTE(v119) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v64, (JetEngine::LogMessageLevel)&v119);

      swift_bridgeObjectRelease();
      v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
      v68(v117, v111, v113);
      if (v61 > 1)
      {
        (*(void (**)(void, void))(*(void *)(v0 + 648) + 8))(*(void *)(v0 + 672), *(void *)(v0 + 640));
      }
      else
      {
        v69 = *(void *)(v0 + 672);
        v70 = *(void *)(v0 + 648);
        v71 = *(void *)(v0 + 640);
        v55(&v120, v71, *(void *)(v0 + 800));
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
        if (!(_BYTE)v120 || v120 == 1)
        {
          v118 = *(void *)(v0 + 712);
          v107 = *(void *)(v0 + 688);
          v72 = *(void *)(v0 + 664);
          v106 = *(void *)(v0 + 656);
          v73 = *(void *)(v0 + 648);
          v74 = *(void *)(v0 + 640);
          v103 = *(void *)(v0 + 704);
          v75 = *(void *)(v0 + 632);
          v112 = v75;
          v76 = *(void *)(v0 + 624);
          v104 = v72;
          v105 = *(void *)(v0 + 616);
          v77 = *(void *)(v0 + 608);
          v102 = *(void *)(v0 + 584);
          v78 = *(void *)(v0 + 576);
          v109 = *(void *)(v0 + 568);
          v79 = sub_19F1DC37C();
          v114 = *(_OWORD *)(v0 + 592);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v75, 1, 1, v79);
          v68(v72, v78, v74);
          (*(void (**)(uint64_t, uint64_t, void))(v77 + 16))(v76, v102, v114);
          sub_19EF93C94(v103, v118);
          v80 = (*(unsigned __int8 *)(v73 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
          v81 = (v106 + *(unsigned __int8 *)(v77 + 80) + v80) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
          v82 = (v105 + *(unsigned __int8 *)(v107 + 80) + v81) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
          v83 = swift_allocObject();
          *(void *)(v83 + 16) = 0;
          *(void *)(v83 + 24) = 0;
          *(_OWORD *)(v83 + 32) = v114;
          *(void *)(v83 + 48) = v109;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v73 + 32))(v83 + v80, v104, v74);
          (*(void (**)(unint64_t, uint64_t, void))(v77 + 32))(v83 + v81, v76, v114);
          sub_19EE648F8(v118, v83 + v82);
          swift_retain();
          sub_19EE54490(v112, (uint64_t)&unk_1E9473678, v83);
          swift_release();
        }
      }
      v97 = *(void *)(v0 + 704);
      v98 = *(void *)(v0 + 560);
      sub_19EEBD664(*(void *)(v0 + 776), &qword_1EB3911D0);
      sub_19EE648F8(v97, v98);
      v99 = *(void **)(v0 + 568);
      v101 = v99[5];
      v100 = v99[6];
      __swift_project_boxed_opaque_existential_1(v99 + 2, v101);
      (*(void (**)(uint64_t, uint64_t))(v100 + 56))(v101, v100);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v96 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_50;
    }
    sub_19EF4B3C4(*(void *)(v0 + 704));
    __int16 v56 = v116;
  }
LABEL_39:
  v55(&v120, *(void *)(v0 + 640), *(void *)(v0 + 800));
  if (!(_BYTE)v120 || v120 == 1)
  {
    if (v56 == 3) {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 784))(*(void *)(v0 + 728), 1, 1, *(void *)(v0 + 680));
    }
    else {
      sub_19EEC3ED8(*(void *)(v0 + 776), *(void *)(v0 + 728), &qword_1EB3911D0);
    }
    v84 = (void *)swift_task_alloc();
    *(void *)(v0 + 864) = v84;
    *v84 = v0;
    v84[1] = sub_19F064930;
    v85 = *(void *)(v0 + 728);
    v86 = *(void *)(v0 + 600);
    v87 = *(void *)(v0 + 592);
    v88 = *(void *)(v0 + 584);
    v89 = *(void *)(v0 + 576);
    v90 = *(void *)(v0 + 560);
    return sub_19F066EEC(v90, v89, v88, v85, v87, v86);
  }
  v92 = *(void *)(v0 + 776);
  v93 = *(void **)(v0 + 568);
  sub_19F06DFE8();
  swift_allocError();
  swift_willThrow();
  sub_19EEBD664(v92, &qword_1EB3911D0);
  v94 = v93[5];
  v95 = v93[6];
  __swift_project_boxed_opaque_existential_1(v93 + 2, v94);
  (*(void (**)(uint64_t, uint64_t))(v95 + 56))(v94, v95);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v96 = *(uint64_t (**)(void))(v0 + 8);
LABEL_50:
  return v96();
}

uint64_t sub_19F0659F8()
{
  void (*v55)(long long *__return_ptr, uint64_t, uint64_t);
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  long long v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(void);
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  long long v114;
  id v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  long long v120;
  long long v121;
  char v122;
  uint64_t v123;
  uint64_t v124;

  v123 = v0;
  uint64_t v1 = (long long *)(v0 + 176);
  sub_19EF4B3C4(*(void *)(v0 + 720));
  uint64_t v2 = *(void **)(v0 + 856);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  v108 = (void *)(v0 + 16);
  uint64_t v3 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  v115 = v3;
  v119 = sub_19EEC3F3C(0, 45, 0, MEMORY[0x1E4FBC860]);
  v5._countAndFlagsBits = 0xD00000000000002CLL;
  v5._object = (void *)0x800000019F26F1B0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  uint64_t v6 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 520);
  *(void *)(v0 + 376) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 352));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
  sub_19EEC3ED8(v0 + 352, v0 + 416, &qword_1EB393260);
  long long *v1 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19EEC3E70(v0 + 416, v0 + 176);
  *(unsigned char *)(v0 + 208) = 0;
  long long v9 = *(_OWORD *)(v0 + 192);
  v120 = *v1;
  v121 = v9;
  v122 = *(unsigned char *)(v0 + 208);
  uint64_t v10 = v119;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_19EEC3F3C(0, v119[2] + 1, 1, v119);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  v10[2] = v12 + 1;
  uint64_t v13 = &v10[5 * v12];
  long long v14 = v120;
  long long v15 = v121;
  *((unsigned char *)v13 + 64) = v122;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  v119 = v10;
  sub_19EEBD664(v0 + 352, &qword_1EB393260);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v4 + 32) = v10;
  *(void *)&v120 = v115;
  LOBYTE(v119) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v119);
  swift_bridgeObjectRelease();

  uint64_t v17 = *(void *)(v0 + 776);
  uint64_t v18 = *(void *)(v0 + 752);
  uint64_t v19 = *(void *)(v0 + 688);
  uint64_t v20 = *(void *)(v0 + 680);
  sub_19EEC4154(*(void *)(v0 + 568) + 56, (uint64_t)v108);
  sub_19EEC3ED8(v17, v18, &qword_1EB3911D0);
  v110 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v110(v18, 1, v20) == 1)
  {
    int v21 = 4;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 712);
    sub_19EE648F8(*(void *)(v0 + 752), v22);
    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v24 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v108, v23);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v24 + 8))(&v120, v22, v23, v24);
    int v21 = v120;
    sub_19EF4B3C4(v22);
  }
  v116 = v21;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v25 = (long long *)(v0 + 216);
  uint64_t v26 = *(void *)(v0 + 776);
  uint64_t v27 = *(void *)(v0 + 744);
  uint64_t v28 = *(void *)(v0 + 680);
  long long v29 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_19F24EAD0;
  id v31 = v29;
  v119 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
  v32._countAndFlagsBits = 0x7341646568636163;
  v32._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  sub_19EEC3ED8(v26, v27, &qword_1EB3911D0);
  unsigned int v33 = v110(v27, 1, v28);
  uint64_t v34 = *(void *)(v0 + 744);
  if (v33 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 744), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(void *)(v0 + 280) = *(void *)(v0 + 680);
    long long v35 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19EE648F8(v34, (uint64_t)v35);
  }
  sub_19EEC3ED8(v0 + 256, v0 + 288, &qword_1EB393260);
  *uint64_t v25 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19EEC3E70(v0 + 288, v0 + 216);
  *(unsigned char *)(v0 + 248) = 0;
  long long v36 = *(_OWORD *)(v0 + 232);
  v120 = *v25;
  v121 = v36;
  v122 = *(unsigned char *)(v0 + 248);
  long long v37 = v119;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v37 = sub_19EEC3F3C(0, v37[2] + 1, 1, v37);
  }
  unint64_t v39 = v37[2];
  unint64_t v38 = v37[3];
  if (v39 >= v38 >> 1) {
    long long v37 = sub_19EEC3F3C((void *)(v38 > 1), v39 + 1, 1, v37);
  }
  long long v40 = (long long *)(v0 + 136);
  v37[2] = v39 + 1;
  uint64_t v41 = &v37[5 * v39];
  long long v42 = v120;
  long long v43 = v121;
  *((unsigned char *)v41 + 64) = v122;
  *((_OWORD *)v41 + 2) = v42;
  *((_OWORD *)v41 + 3) = v43;
  v119 = v37;
  sub_19EEBD664(v0 + 256, &qword_1EB393260);
  v44._countAndFlagsBits = 0x3D73757461747320;
  v44._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v44);
  if (v116 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(void *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(unsigned char *)(v0 + 480) = v116;
  }
  sub_19EEC3ED8(v0 + 480, v0 + 384, &qword_1EB393260);
  *long long v40 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19EEC3E70(v0 + 384, v0 + 136);
  *(unsigned char *)(v0 + 168) = 0;
  long long v45 = *(_OWORD *)(v0 + 152);
  v120 = *v40;
  v121 = v45;
  v122 = *(unsigned char *)(v0 + 168);
  long long v46 = v119;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v46 = sub_19EEC3F3C(0, v46[2] + 1, 1, v46);
  }
  unint64_t v48 = v46[2];
  unint64_t v47 = v46[3];
  if (v48 >= v47 >> 1) {
    long long v46 = sub_19EEC3F3C((void *)(v47 > 1), v48 + 1, 1, v46);
  }
  uint64_t v49 = *(void *)(v0 + 800);
  uint64_t v50 = *(void *)(v0 + 640);
  void v46[2] = v48 + 1;
  uint64_t v51 = &v46[5 * v48];
  long long v52 = v120;
  long long v53 = v121;
  *((unsigned char *)v51 + 64) = v122;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  v119 = v46;
  sub_19EEBD664(v0 + 480, &qword_1EB393260);
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(void *)(v30 + 32) = v119;
  *(void *)&v120 = v31;
  LOBYTE(v119) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v30, (JetEngine::LogMessageLevel)&v119);

  swift_bridgeObjectRelease();
  int v55 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v49 + 24);
  v55(&v120, v50, v49);
  if ((_BYTE)v120)
  {
    __int16 v56 = v116;
    if (v116 == 4 || v120 != 2) {
      goto LABEL_39;
    }
  }
  else
  {
    __int16 v56 = v116;
    if (v116 == 4) {
      goto LABEL_39;
    }
  }
  long long v57 = *(void *)(v0 + 736);
  long long v58 = *(void *)(v0 + 680);
  sub_19EEC3ED8(*(void *)(v0 + 776), v57, &qword_1EB3911D0);
  char v59 = v110(v57, 1, v58);
  uint64_t v60 = *(void *)(v0 + 736);
  if (v59 == 1)
  {
    sub_19EEBD664(v60, &qword_1EB3911D0);
  }
  else
  {
    sub_19EE648F8(v60, *(void *)(v0 + 704));
    uint64_t v61 = v56 - 1;
    if (v56 <= 1)
    {
      v117 = *(void *)(v0 + 672);
      unsigned __int16 v62 = *(void *)(v0 + 648);
      v111 = *(void *)(v0 + 576);
      v113 = *(void *)(v0 + 640);
      int v63 = (void *)qword_1EB390E30;
      __int16 v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_19F24EAD0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_19F24EAD0;
      *(void *)(v0 + 472) = MEMORY[0x1E4FBB1A0];
      *(void *)(v0 + 448) = 0xD000000000000012;
      *(void *)(v0 + 456) = 0x800000019F26F1E0;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      uint64_t v66 = v63;
      sub_19EEC3E70(v0 + 448, v0 + 96);
      *(unsigned char *)(v0 + 128) = 0;
      uint64_t v67 = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v65 + 32) = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v65 + 48) = v67;
      *(unsigned char *)(v65 + 64) = *(unsigned char *)(v0 + 128);
      *(void *)(v64 + 32) = v65;
      *(void *)&v120 = v66;
      LOBYTE(v119) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v64, (JetEngine::LogMessageLevel)&v119);

      swift_bridgeObjectRelease();
      v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
      v68(v117, v111, v113);
      if (v61 > 1)
      {
        (*(void (**)(void, void))(*(void *)(v0 + 648) + 8))(*(void *)(v0 + 672), *(void *)(v0 + 640));
      }
      else
      {
        v69 = *(void *)(v0 + 672);
        v70 = *(void *)(v0 + 648);
        v71 = *(void *)(v0 + 640);
        v55(&v120, v71, *(void *)(v0 + 800));
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
        if (!(_BYTE)v120 || v120 == 1)
        {
          v118 = *(void *)(v0 + 712);
          v107 = *(void *)(v0 + 688);
          v72 = *(void *)(v0 + 664);
          v106 = *(void *)(v0 + 656);
          v73 = *(void *)(v0 + 648);
          v74 = *(void *)(v0 + 640);
          v103 = *(void *)(v0 + 704);
          v75 = *(void *)(v0 + 632);
          v112 = v75;
          v76 = *(void *)(v0 + 624);
          v104 = v72;
          v105 = *(void *)(v0 + 616);
          v77 = *(void *)(v0 + 608);
          v102 = *(void *)(v0 + 584);
          v78 = *(void *)(v0 + 576);
          v109 = *(void *)(v0 + 568);
          v79 = sub_19F1DC37C();
          v114 = *(_OWORD *)(v0 + 592);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v75, 1, 1, v79);
          v68(v72, v78, v74);
          (*(void (**)(uint64_t, uint64_t, void))(v77 + 16))(v76, v102, v114);
          sub_19EF93C94(v103, v118);
          v80 = (*(unsigned __int8 *)(v73 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
          v81 = (v106 + *(unsigned __int8 *)(v77 + 80) + v80) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
          v82 = (v105 + *(unsigned __int8 *)(v107 + 80) + v81) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
          v83 = swift_allocObject();
          *(void *)(v83 + 16) = 0;
          *(void *)(v83 + 24) = 0;
          *(_OWORD *)(v83 + 32) = v114;
          *(void *)(v83 + 48) = v109;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v73 + 32))(v83 + v80, v104, v74);
          (*(void (**)(unint64_t, uint64_t, void))(v77 + 32))(v83 + v81, v76, v114);
          sub_19EE648F8(v118, v83 + v82);
          swift_retain();
          sub_19EE54490(v112, (uint64_t)&unk_1E9473678, v83);
          swift_release();
        }
      }
      v97 = *(void *)(v0 + 704);
      v98 = *(void *)(v0 + 560);
      sub_19EEBD664(*(void *)(v0 + 776), &qword_1EB3911D0);
      sub_19EE648F8(v97, v98);
      v99 = *(void **)(v0 + 568);
      v101 = v99[5];
      v100 = v99[6];
      __swift_project_boxed_opaque_existential_1(v99 + 2, v101);
      (*(void (**)(uint64_t, uint64_t))(v100 + 56))(v101, v100);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v96 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_50;
    }
    sub_19EF4B3C4(*(void *)(v0 + 704));
    __int16 v56 = v116;
  }
LABEL_39:
  v55(&v120, *(void *)(v0 + 640), *(void *)(v0 + 800));
  if (!(_BYTE)v120 || v120 == 1)
  {
    if (v56 == 3) {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 784))(*(void *)(v0 + 728), 1, 1, *(void *)(v0 + 680));
    }
    else {
      sub_19EEC3ED8(*(void *)(v0 + 776), *(void *)(v0 + 728), &qword_1EB3911D0);
    }
    v84 = (void *)swift_task_alloc();
    *(void *)(v0 + 864) = v84;
    *v84 = v0;
    v84[1] = sub_19F064930;
    v85 = *(void *)(v0 + 728);
    v86 = *(void *)(v0 + 600);
    v87 = *(void *)(v0 + 592);
    v88 = *(void *)(v0 + 584);
    v89 = *(void *)(v0 + 576);
    v90 = *(void *)(v0 + 560);
    return sub_19F066EEC(v90, v89, v88, v85, v87, v86);
  }
  v92 = *(void *)(v0 + 776);
  v93 = *(void **)(v0 + 568);
  sub_19F06DFE8();
  swift_allocError();
  swift_willThrow();
  sub_19EEBD664(v92, &qword_1EB3911D0);
  v94 = v93[5];
  v95 = v93[6];
  __swift_project_boxed_opaque_existential_1(v93 + 2, v94);
  (*(void (**)(uint64_t, uint64_t))(v95 + 56))(v94, v95);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v96 = *(uint64_t (**)(void))(v0 + 8);
LABEL_50:
  return v96();
}

uint64_t sub_19F066820()
{
  uint64_t v1 = v0[97];
  uint64_t v2 = (void *)v0[71];
  uint64_t v3 = v2 + 2;
  sub_19EEBD664(v0[91], &qword_1EB3911D0);
  sub_19EEBD664(v1, &qword_1EB3911D0);
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[6];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_19F0669AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a8;
  v8[16] = v12;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  v8[17] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for JetPackAsset(0);
  v8[18] = v9;
  v8[19] = *(void *)(v9 - 8);
  v8[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F066AAC, 0, 0);
}

uint64_t sub_19F066AAC()
{
  uint64_t v19 = v0;
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  *(void *)(v0 + 80) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = 0xD000000000000020;
  *(void *)(v0 + 64) = 0x800000019F26F260;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  id v8 = v5;
  sub_19EEC3E70(v0 + 56, v0 + 16);
  *(unsigned char *)(v0 + 48) = 0;
  *(unsigned char *)(v7 + 64) = 0;
  long long v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v7 + 48) = v9;
  *(void *)(v6 + 32) = v7;
  char v18 = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v18);
  swift_bridgeObjectRelease();

  sub_19EF93C94(v4, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_19F066CC4;
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v13 = *(void *)(v0 + 128);
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 104);
  return sub_19F066EEC(v11, v15, v16, v12, v14, v13);
}

uint64_t sub_19F066CC4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 136);
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  sub_19EEBD664(v3, &qword_1EB3911D0);
  if (v0)
  {
    uint64_t v4 = sub_19F066E7C;
  }
  else
  {
    sub_19EF4B3C4(*(void *)(v2 + 160));
    uint64_t v4 = sub_19F066E0C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19F066E0C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F066E7C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F066EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[37] = a6;
  v7[38] = v6;
  v7[35] = a4;
  v7[36] = a5;
  v7[33] = a2;
  v7[34] = a3;
  v7[32] = a1;
  uint64_t v8 = type metadata accessor for JetPackAsset(0);
  v7[39] = v8;
  v7[40] = *(void *)(v8 - 8);
  v7[41] = swift_task_alloc();
  v7[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  v7[43] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F066FF8, 0, 0);
}

uint64_t sub_19F066FF8()
{
  uint64_t v34 = v0;
  sub_19F1DC45C();
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v1 = (long long *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v5 = *(void *)(v0 + 280);
  uint64_t v6 = (void *)qword_1EB390E30;
  *(void *)(v0 + 352) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  id v27 = v6;
  uint64_t v30 = sub_19EEC3F3C(0, 51, 0, MEMORY[0x1E4FBC860]);
  v8._object = (void *)0x800000019F26F290;
  v8._countAndFlagsBits = 0xD000000000000032;
  LogMessage.StringInterpolation.appendLiteral(_:)(v8);
  sub_19EEC3ED8(v5, v2, &qword_1EB3911D0);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4);
  uint64_t v10 = *(void *)(v0 + 344);
  if (v9 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 344), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }
  else
  {
    *(void *)(v0 + 184) = *(void *)(v0 + 312);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
    sub_19EE648F8(v10, (uint64_t)boxed_opaque_existential_2Tm);
  }
  sub_19EEC3ED8(v0 + 160, v0 + 96, &qword_1EB393260);
  long long *v1 = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  sub_19EEC3E70(v0 + 96, v0 + 56);
  *(unsigned char *)(v0 + 88) = 0;
  long long v12 = *(_OWORD *)(v0 + 72);
  long long v31 = *v1;
  long long v32 = v12;
  char v33 = *(unsigned char *)(v0 + 88);
  uint64_t v13 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_19EEC3F3C(0, v30[2] + 1, 1, v30);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  uint64_t v29 = *(void *)(v0 + 296);
  uint64_t v30 = v13;
  long long v13[2] = v15 + 1;
  uint64_t v16 = &v13[5 * v15];
  long long v17 = v31;
  long long v18 = v32;
  *((unsigned char *)v16 + 64) = v33;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  sub_19EEBD664(v0 + 160, &qword_1EB393260);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(void *)(v7 + 32) = v30;
  *(void *)&long long v31 = v27;
  LOBYTE(v30) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v30);
  swift_bridgeObjectRelease();

  uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 + 24)
                                                                            + **(int **)(v29 + 24));
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_19F0673BC;
  uint64_t v21 = *(void *)(v0 + 336);
  uint64_t v22 = *(void *)(v0 + 288);
  uint64_t v23 = *(void *)(v0 + 296);
  uint64_t v24 = *(void *)(v0 + 280);
  uint64_t v25 = *(void *)(v0 + 264);
  return v28(v21, v25, v24, v22, v23);
}

uint64_t sub_19F0673BC()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F067808;
  }
  else {
    uint64_t v2 = sub_19F0674D0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0674D0()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[32];
  sub_19EE648F8(v0[42], v2);
  uint64_t v3 = *(int *)(v1 + 20);
  uint64_t v4 = v2 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 36) + v3;
  if ((*(unsigned char *)(v4 + 8) & 1) != 0 || *(double *)v4 != 0.0)
  {
    uint64_t v7 = (void *)v0[38];
    uint64_t v8 = v7[5];
    uint64_t v9 = v7[6];
    __swift_project_boxed_opaque_existential_1(v7 + 2, v8);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + **(int **)(v9 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[47] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_19F067674;
    uint64_t v11 = v0[41];
    uint64_t v12 = v0[32];
    return v13(v11, v12, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_19F067674()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_19F067888;
  }
  else
  {
    sub_19EF4B3C4(*(void *)(v2 + 328));
    uint64_t v3 = sub_19F067790;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F067790()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F067808()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F067888()
{
  uint64_t v23 = v0;
  uint64_t v1 = (void *)qword_1EB390E30;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F24EAD0;
  id v3 = v1;
  Swift::String v19 = sub_19EEC3F3C(0, 35, 0, MEMORY[0x1E4FBC860]);
  v4._object = (void *)0x800000019F26F2D0;
  v4._countAndFlagsBits = 0xD000000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v4);
  swift_getErrorValue();
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 232);
  *(void *)(v0 + 152) = v6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 128));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v5, v6);
  sub_19EEC3ED8(v0 + 128, v0 + 192, &qword_1EB393260);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19EEC3E70(v0 + 192, v0 + 16);
  *(unsigned char *)(v0 + 48) = 0;
  char v22 = 0;
  long long v8 = *(_OWORD *)(v0 + 32);
  long long v20 = *(_OWORD *)(v0 + 16);
  long long v21 = v8;
  uint64_t v9 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
  }
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  uint64_t v12 = *(void **)(v0 + 384);
  _OWORD v9[2] = v11 + 1;
  uint64_t v13 = &v9[5 * v11];
  long long v14 = v20;
  long long v15 = v21;
  *((unsigned char *)v13 + 64) = v22;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  Swift::String v19 = v9;
  sub_19EEBD664(v0 + 128, &qword_1EB393260);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v2 + 32) = v9;
  *(void *)&long long v20 = v3;
  LOBYTE(v19) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v2, (JetEngine::LogMessageLevel)&v19);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_19F067B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  void v7[3] = a2;
  v7[4] = a3;
  void v7[2] = a1;
  return MEMORY[0x1F4188298](sub_19F067B30, 0, 0);
}

uint64_t sub_19F067B30()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(*(void *)(v0 + 64) + 96);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = v1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
  sub_19F06DF84((uint64_t *)(v2 + 16), &v12);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
  uint64_t v5 = v12;
  *(void *)(v0 + 72) = v12;
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  uint64_t v7 = type metadata accessor for JetPackAsset(0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  *uint64_t v6 = v0;
  v6[1] = sub_19F067CA0;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187D90](v9, v5, v7, v8, v10);
}

uint64_t sub_19F067CA0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F067E28;
  }
  else {
    uint64_t v2 = sub_19F067DB4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F067DB4()
{
  sub_19F06AD44(*(void *)(v0 + 64));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F067E28()
{
  sub_19F06AD44(*(void *)(v0 + 64));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t JetPackAssetSession.emptyCache()()
{
  *(void *)(v1 + 88) = v0;
  return MEMORY[0x1F4188298](sub_19F067EBC, 0, 0);
}

uint64_t sub_19F067EBC()
{
  uint64_t v13 = v0;
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  *(void *)(v0 + 80) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = 0xD000000000000015;
  *(void *)(v0 + 64) = 0x800000019F26F0C0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  id v5 = v2;
  sub_19EEC3E70(v0 + 56, v0 + 16);
  *(unsigned char *)(v0 + 48) = 0;
  *(unsigned char *)(v4 + 64) = 0;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 48) = v6;
  *(void *)(v3 + 32) = v4;
  char v12 = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v12);
  swift_bridgeObjectRelease();

  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v7);
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v8 + 32) + **(int **)(v8 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_19F0680EC;
  return v11(v7, v8);
}

uint64_t sub_19F0680EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t JetPackAssetSession.performMaintenance()()
{
  v1[116] = v0;
  uint64_t v2 = sub_19F1DB8AC();
  v1[117] = v2;
  v1[118] = *(void *)(v2 - 8);
  v1[119] = swift_task_alloc();
  v1[120] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for JetPackAsset(0);
  v1[121] = v3;
  v1[122] = *(void *)(v3 - 8);
  v1[123] = swift_task_alloc();
  uint64_t v4 = sub_19F1DB85C();
  v1[124] = v4;
  v1[125] = *(void *)(v4 - 8);
  v1[126] = swift_task_alloc();
  v1[127] = swift_task_alloc();
  v1[128] = swift_task_alloc();
  v1[129] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F068390, 0, 0);
}

uint64_t sub_19F068390()
{
  if (qword_1EB390CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_19F1DB89C();
  v0[130] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB390CD8);
  sub_19F1DB87C();
  sub_19F1DB82C();
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = v0[128];
    uint64_t v5 = v0[125];
    uint64_t v6 = v0[124];
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    unint64_t v8 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v4, v0[129], v6);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    os_signpost_id_t v10 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v10, "Perform Maintenance", "", v9, 2u);
    MEMORY[0x19F3C9470](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  else
  {
    uint64_t v11 = v0[125];

    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    unint64_t v8 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  v0[131] = v7;
  uint64_t v12 = v0[129];
  uint64_t v13 = v0[128];
  uint64_t v14 = v0[124];
  long long v15 = (void *)v0[116];
  v0[132] = v8;
  v7(v13, v12, v14);
  sub_19F1DB8EC();
  swift_allocObject();
  v0[133] = sub_19F1DB8DC();
  Swift::String v16 = v15 + 2;
  uint64_t v17 = v15[5];
  uint64_t v18 = v15[6];
  __swift_project_boxed_opaque_existential_1(v16, v17);
  long long v21 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v18 + 40) + **(int **)(v18 + 40));
  Swift::String v19 = (void *)swift_task_alloc();
  v0[134] = v19;
  *Swift::String v19 = v0;
  v19[1] = sub_19F068628;
  return v21(v17, v18);
}

uint64_t sub_19F068628(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1080) = a1;
  *(void *)(v3 + 1088) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_19F0699F0;
  }
  else {
    uint64_t v4 = sub_19F068740;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19F068740()
{
  uint64_t v95 = v0;
  uint64_t v1 = *(void *)(v0 + 1080);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 1096) = v2;
  if (v2)
  {
    uint64_t v3 = 0;
    v91 = (long long *)(v0 + 96);
    uint64_t v4 = (long long *)(v0 + 336);
    v84 = (long long *)(v0 + 176);
    uint64_t v5 = (long long *)(v0 + 456);
    uint64_t v83 = v0 + 496;
    uint64_t v88 = v0 + 752;
    v89 = (long long *)(v0 + 256);
    uint64_t v87 = v0 + 784;
    uint64_t v81 = v0 + 848;
    uint64_t v82 = v0 + 720;
    uint64_t v6 = (void *)(v0 + 920);
    uint64_t v7 = *(void *)(v0 + 976);
    int v8 = *(_DWORD *)(v7 + 80);
    *(_DWORD *)(v0 + 52) = v8;
    uint64_t v9 = *(void *)(v7 + 72);
    *(void *)(v0 + 1104) = v9;
    while (1)
    {
      *(void *)(v0 + 1112) = v3;
      uint64_t v10 = *(void *)(v0 + 984);
      uint64_t v11 = *(void **)(v0 + 928);
      uint64_t v12 = v11 + 7;
      sub_19EF93C94(v1 + ((v8 + 32) & ~(unint64_t)v8) + v9 * v3, v10);
      uint64_t v13 = v11[10];
      uint64_t v14 = v11[11];
      __swift_project_boxed_opaque_existential_1(v12, v13);
      (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t, uint64_t))(v14 + 8))(&v92, v10, v13, v14);
      int v15 = v92;
      if (qword_1EB390E38 != -1) {
        swift_once();
      }
      Swift::String v16 = (void *)qword_1EB390E30;
      *(void *)(v0 + 1120) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_19F24EAD0;
      id v85 = v16;
      *(void *)(v0 + 920) = sub_19EEC3F3C(0, 52, 0, MEMORY[0x1E4FBC860]);
      v18._countAndFlagsBits = 0xD00000000000001ELL;
      v18._object = (void *)0x800000019F26F100;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      *(void *)(v0 + 776) = &type metadata for JetPackAssetCacheStatus;
      int v86 = v15;
      *(unsigned char *)(v0 + 752) = v15;
      sub_19EEC3ED8(v88, v81, &qword_1EB393260);
      long long *v84 = 0u;
      *(_OWORD *)(v0 + 192) = 0u;
      sub_19EEC3E70(v81, (uint64_t)v84);
      *(unsigned char *)(v0 + 208) = 0;
      long long v19 = *(_OWORD *)(v0 + 192);
      long long *v91 = *v84;
      *(_OWORD *)(v0 + 112) = v19;
      *(unsigned char *)(v0 + 128) = *(unsigned char *)(v0 + 208);
      long long v20 = *(void **)(v0 + 920);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v20 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
      }
      unint64_t v22 = v20[2];
      unint64_t v21 = v20[3];
      if (v22 >= v21 >> 1) {
        long long v20 = sub_19EEC3F3C((void *)(v21 > 1), v22 + 1, 1, v20);
      }
      uint64_t v23 = *(void *)(v0 + 984);
      uint64_t v24 = *(void *)(v0 + 968);
      v20[2] = v22 + 1;
      uint64_t v25 = &v20[5 * v22];
      long long v26 = *v91;
      long long v27 = *(_OWORD *)(v0 + 112);
      *((unsigned char *)v25 + 64) = *(unsigned char *)(v0 + 128);
      *((_OWORD *)v25 + 2) = v26;
      *((_OWORD *)v25 + 3) = v27;
      *(void *)(v0 + 920) = v20;
      sub_19EEBD664(v88, &qword_1EB393260);
      v28._countAndFlagsBits = 0x654B656863616320;
      v28._object = (void *)0xEA00000000003D79;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      uint64_t v29 = *(int *)(v24 + 28);
      *(_DWORD *)(v0 + 92) = v29;
      uint64_t v30 = (uint64_t *)(v23 + v29);
      uint64_t v31 = *v30;
      uint64_t v32 = v30[1];
      *(void *)(v0 + 808) = MEMORY[0x1E4FBB1A0];
      *(void *)(v0 + 784) = v31;
      *(void *)(v0 + 792) = v32;
      sub_19EEC3ED8(v87, v82, &qword_1EB393260);
      *uint64_t v4 = 0u;
      *(_OWORD *)(v0 + 352) = 0u;
      swift_bridgeObjectRetain();
      sub_19EEC3E70(v82, v0 + 336);
      *(unsigned char *)(v0 + 368) = 0;
      long long v33 = *(_OWORD *)(v0 + 352);
      long long *v89 = *v4;
      *(_OWORD *)(v0 + 272) = v33;
      *(unsigned char *)(v0 + 288) = *(unsigned char *)(v0 + 368);
      uint64_t v34 = *(void **)(v0 + 920);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v34 = sub_19EEC3F3C(0, v34[2] + 1, 1, v34);
      }
      unint64_t v36 = v34[2];
      unint64_t v35 = v34[3];
      if (v36 >= v35 >> 1) {
        uint64_t v34 = sub_19EEC3F3C((void *)(v35 > 1), v36 + 1, 1, v34);
      }
      uint64_t v37 = *(void *)(v0 + 984);
      uint64_t v38 = *(void *)(v0 + 968);
      v34[2] = v36 + 1;
      unint64_t v39 = &v34[5 * v36];
      long long v40 = *v89;
      long long v41 = *(_OWORD *)(v0 + 272);
      *((unsigned char *)v39 + 64) = *(unsigned char *)(v0 + 288);
      *((_OWORD *)v39 + 2) = v40;
      *((_OWORD *)v39 + 3) = v41;
      *(void *)(v0 + 920) = v34;
      sub_19EEBD664(v87, &qword_1EB393260);
      v42._countAndFlagsBits = 0x4449656863616320;
      v42._object = (void *)0xE90000000000003DLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      uint64_t v43 = *(int *)(v38 + 24);
      *(_DWORD *)(v0 + 132) = v43;
      Swift::String v44 = (int *)(v37 + v43);
      if (v44[1])
      {
        uint64_t v45 = v0 + 656;
        *(_OWORD *)(v0 + 656) = 0u;
        *(_OWORD *)(v0 + 672) = 0u;
        long long v46 = (long long *)(v0 + 416);
      }
      else
      {
        int v47 = *v44;
        *(void *)(v0 + 680) = MEMORY[0x1E4FBC150];
        *(_DWORD *)(v0 + 656) = v47;
        long long v46 = (long long *)(v0 + 416);
        uint64_t v45 = v0 + 656;
      }
      sub_19EEC3ED8(v45, v83, &qword_1EB393260);
      long long *v5 = 0u;
      *(_OWORD *)(v0 + 472) = 0u;
      sub_19EEC3E70(v83, v0 + 456);
      *(unsigned char *)(v0 + 488) = 0;
      long long v48 = *(_OWORD *)(v0 + 472);
      *long long v46 = *v5;
      v46[1] = v48;
      *((unsigned char *)v46 + 32) = *(unsigned char *)(v0 + 488);
      uint64_t v49 = *(void **)(v0 + 920);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v49 = sub_19EEC3F3C(0, v49[2] + 1, 1, v49);
      }
      unint64_t v51 = v49[2];
      unint64_t v50 = v49[3];
      if (v51 >= v50 >> 1) {
        uint64_t v49 = sub_19EEC3F3C((void *)(v50 > 1), v51 + 1, 1, v49);
      }
      v49[2] = v51 + 1;
      long long v52 = &v49[5 * v51];
      long long v53 = *v46;
      long long v54 = v46[1];
      *((unsigned char *)v52 + 64) = *((unsigned char *)v46 + 32);
      *((_OWORD *)v52 + 2) = v53;
      *((_OWORD *)v52 + 3) = v54;
      *uint64_t v6 = v49;
      sub_19EEBD664(v45, &qword_1EB393260);
      v55._countAndFlagsBits = 0;
      v55._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v55);
      *(void *)(v17 + 32) = *v6;
      id v93 = v85;
      char v94 = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v94);
      swift_bridgeObjectRelease();

      if (v86 == 3) {
        break;
      }
      uint64_t v56 = *(void *)(v0 + 1096);
      uint64_t v57 = *(void *)(v0 + 1112) + 1;
      sub_19EF4B3C4(*(void *)(v0 + 984));
      if (v57 == v56) {
        goto LABEL_26;
      }
      uint64_t v3 = *(void *)(v0 + 1112) + 1;
      uint64_t v9 = *(void *)(v0 + 1104);
      LOBYTE(v8) = *(unsigned char *)(v0 + 52);
      uint64_t v1 = *(void *)(v0 + 1080);
    }
    long long v58 = *(void **)(v0 + 928);
    uint64_t v59 = v58[5];
    uint64_t v60 = v58[6];
    __swift_project_boxed_opaque_existential_1(v58 + 2, v59);
    v90 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 + 24) + **(int **)(v60 + 24));
    uint64_t v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 1128) = v61;
    *uint64_t v61 = v0;
    v61[1] = sub_19F069024;
    uint64_t v62 = *(void *)(v0 + 984);
    return v90(v62, v59, v60);
  }
  else
  {
LABEL_26:
    swift_bridgeObjectRelease();
    __int16 v64 = sub_19F1DB87C();
    sub_19F1DB8CC();
    os_signpost_type_t v65 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      uint64_t v66 = *(void *)(v0 + 960);
      uint64_t v67 = *(void *)(v0 + 944);
      uint64_t v68 = *(void *)(v0 + 936);
      swift_retain();
      sub_19F1DB8FC();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v67 + 88))(v66, v68) == *MEMORY[0x1E4FBD340])
      {
        v69 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 944) + 8))(*(void *)(v0 + 960), *(void *)(v0 + 936));
        v69 = "";
      }
      v70 = (uint64_t *)(v0 + 1024);
      uint64_t v73 = *(void *)(v0 + 1016);
      uint64_t v74 = *(void *)(v0 + 1000);
      uint64_t v75 = *(void *)(v0 + 992);
      (*(void (**)(void, uint64_t, uint64_t))(v0 + 1048))(*(void *)(v0 + 1024), v73, v75);
      v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v76 = 0;
      os_signpost_id_t v77 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v64, v65, v77, "Perform Maintenance", v69, v76, 2u);
      MEMORY[0x19F3C9470](v76, -1, -1);

      v72 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
      v72(v73, v75);
    }
    else
    {
      v70 = (uint64_t *)(v0 + 1016);
      uint64_t v71 = *(void *)(v0 + 1000);

      v72 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    }
    uint64_t v78 = *(void *)(v0 + 1032);
    uint64_t v79 = *(void *)(v0 + 992);
    v72(*v70, v79);
    swift_release();
    v72(v78, v79);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v80 = *(uint64_t (**)(void))(v0 + 8);
    return v80();
  }
}

uint64_t sub_19F069024()
{
  *(void *)(*(void *)v1 + 1136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F069C60;
  }
  else {
    uint64_t v2 = sub_19F069138;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F069138()
{
  uint64_t v89 = v0;
  id v85 = (long long *)(v0 + 96);
  uint64_t v1 = (long long *)(v0 + 336);
  uint64_t v78 = (long long *)(v0 + 176);
  uint64_t v2 = (long long *)(v0 + 456);
  uint64_t v77 = v0 + 496;
  uint64_t v82 = v0 + 752;
  uint64_t v83 = (long long *)(v0 + 256);
  uint64_t v81 = v0 + 784;
  uint64_t v75 = v0 + 848;
  uint64_t v76 = v0 + 720;
  uint64_t v3 = (void *)(v0 + 920);
  while (1)
  {
    uint64_t v4 = *(void *)(v0 + 1096);
    uint64_t v5 = *(void *)(v0 + 1112) + 1;
    sub_19EF4B3C4(*(void *)(v0 + 984));
    if (v5 == v4) {
      break;
    }
    uint64_t v6 = *(void *)(v0 + 1112) + 1;
    *(void *)(v0 + 1112) = v6;
    uint64_t v7 = *(void *)(v0 + 984);
    int v8 = *(void **)(v0 + 928);
    sub_19EF93C94(*(void *)(v0 + 1080)+ ((*(unsigned __int8 *)(v0 + 52) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 52))+ *(void *)(v0 + 1104) * v6, v7);
    uint64_t v9 = v8[10];
    uint64_t v10 = v8[11];
    __swift_project_boxed_opaque_existential_1(v8 + 7, v9);
    (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t, uint64_t))(v10 + 8))(&v86, v7, v9, v10);
    int v11 = v86;
    if (qword_1EB390E38 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_1EB390E30;
    *(void *)(v0 + 1120) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    id v79 = v12;
    *(void *)(v0 + 920) = sub_19EEC3F3C(0, 52, 0, MEMORY[0x1E4FBC860]);
    v14._countAndFlagsBits = 0xD00000000000001ELL;
    v14._object = (void *)0x800000019F26F100;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    *(void *)(v0 + 776) = &type metadata for JetPackAssetCacheStatus;
    int v80 = v11;
    *(unsigned char *)(v0 + 752) = v11;
    sub_19EEC3ED8(v82, v75, &qword_1EB393260);
    *uint64_t v78 = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    sub_19EEC3E70(v75, (uint64_t)v78);
    *(unsigned char *)(v0 + 208) = 0;
    long long v15 = *(_OWORD *)(v0 + 192);
    *id v85 = *v78;
    *(_OWORD *)(v0 + 112) = v15;
    *(unsigned char *)(v0 + 128) = *(unsigned char *)(v0 + 208);
    Swift::String v16 = *(void **)(v0 + 920);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v16 = sub_19EEC3F3C(0, v16[2] + 1, 1, v16);
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1) {
      Swift::String v16 = sub_19EEC3F3C((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    uint64_t v19 = *(void *)(v0 + 984);
    uint64_t v20 = *(void *)(v0 + 968);
    long long v16[2] = v18 + 1;
    unint64_t v21 = &v16[5 * v18];
    long long v22 = *v85;
    long long v23 = *(_OWORD *)(v0 + 112);
    *((unsigned char *)v21 + 64) = *(unsigned char *)(v0 + 128);
    *((_OWORD *)v21 + 2) = v22;
    *((_OWORD *)v21 + 3) = v23;
    *(void *)(v0 + 920) = v16;
    sub_19EEBD664(v82, &qword_1EB393260);
    v24._countAndFlagsBits = 0x654B656863616320;
    v24._object = (void *)0xEA00000000003D79;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    uint64_t v25 = *(int *)(v20 + 28);
    *(_DWORD *)(v0 + 92) = v25;
    long long v26 = (uint64_t *)(v19 + v25);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    *(void *)(v0 + 808) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 784) = v27;
    *(void *)(v0 + 792) = v28;
    sub_19EEC3ED8(v81, v76, &qword_1EB393260);
    long long *v1 = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70(v76, v0 + 336);
    *(unsigned char *)(v0 + 368) = 0;
    long long v29 = *(_OWORD *)(v0 + 352);
    *uint64_t v83 = *v1;
    *(_OWORD *)(v0 + 272) = v29;
    *(unsigned char *)(v0 + 288) = *(unsigned char *)(v0 + 368);
    uint64_t v30 = *(void **)(v0 + 920);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v30 = sub_19EEC3F3C(0, v30[2] + 1, 1, v30);
    }
    unint64_t v32 = v30[2];
    unint64_t v31 = v30[3];
    if (v32 >= v31 >> 1) {
      uint64_t v30 = sub_19EEC3F3C((void *)(v31 > 1), v32 + 1, 1, v30);
    }
    uint64_t v33 = *(void *)(v0 + 984);
    uint64_t v34 = *(void *)(v0 + 968);
    _OWORD v30[2] = v32 + 1;
    unint64_t v35 = &v30[5 * v32];
    long long v36 = *v83;
    long long v37 = *(_OWORD *)(v0 + 272);
    *((unsigned char *)v35 + 64) = *(unsigned char *)(v0 + 288);
    *((_OWORD *)v35 + 2) = v36;
    *((_OWORD *)v35 + 3) = v37;
    *(void *)(v0 + 920) = v30;
    sub_19EEBD664(v81, &qword_1EB393260);
    v38._countAndFlagsBits = 0x4449656863616320;
    v38._object = (void *)0xE90000000000003DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    uint64_t v39 = *(int *)(v34 + 24);
    *(_DWORD *)(v0 + 132) = v39;
    long long v40 = (int *)(v33 + v39);
    if (v40[1])
    {
      uint64_t v41 = v0 + 656;
      *(_OWORD *)(v0 + 656) = 0u;
      *(_OWORD *)(v0 + 672) = 0u;
      Swift::String v42 = (long long *)(v0 + 416);
    }
    else
    {
      int v43 = *v40;
      *(void *)(v0 + 680) = MEMORY[0x1E4FBC150];
      *(_DWORD *)(v0 + 656) = v43;
      Swift::String v42 = (long long *)(v0 + 416);
      uint64_t v41 = v0 + 656;
    }
    sub_19EEC3ED8(v41, v77, &qword_1EB393260);
    *uint64_t v2 = 0u;
    *(_OWORD *)(v0 + 472) = 0u;
    sub_19EEC3E70(v77, v0 + 456);
    *(unsigned char *)(v0 + 488) = 0;
    long long v44 = *(_OWORD *)(v0 + 472);
    *Swift::String v42 = *v2;
    v42[1] = v44;
    *((unsigned char *)v42 + 32) = *(unsigned char *)(v0 + 488);
    uint64_t v45 = *(void **)(v0 + 920);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v45 = sub_19EEC3F3C(0, v45[2] + 1, 1, v45);
    }
    unint64_t v47 = v45[2];
    unint64_t v46 = v45[3];
    if (v47 >= v46 >> 1) {
      uint64_t v45 = sub_19EEC3F3C((void *)(v46 > 1), v47 + 1, 1, v45);
    }
    v45[2] = v47 + 1;
    long long v48 = &v45[5 * v47];
    long long v49 = *v42;
    long long v50 = v42[1];
    *((unsigned char *)v48 + 64) = *((unsigned char *)v42 + 32);
    *((_OWORD *)v48 + 2) = v49;
    *((_OWORD *)v48 + 3) = v50;
    *uint64_t v3 = v45;
    sub_19EEBD664(v41, &qword_1EB393260);
    v51._countAndFlagsBits = 0;
    v51._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v51);
    *(void *)(v13 + 32) = *v3;
    id v87 = v79;
    char v88 = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v88);
    swift_bridgeObjectRelease();

    if (v80 == 3)
    {
      long long v58 = *(void **)(v0 + 928);
      uint64_t v59 = v58[5];
      uint64_t v60 = v58[6];
      __swift_project_boxed_opaque_existential_1(v58 + 2, v59);
      v84 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 + 24) + **(int **)(v60 + 24));
      uint64_t v61 = (void *)swift_task_alloc();
      *(void *)(v0 + 1128) = v61;
      *uint64_t v61 = v0;
      v61[1] = sub_19F069024;
      uint64_t v62 = *(void *)(v0 + 984);
      return v84(v62, v59, v60);
    }
  }
  swift_bridgeObjectRelease();
  long long v52 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v53 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v54 = *(void *)(v0 + 960);
    uint64_t v55 = *(void *)(v0 + 944);
    uint64_t v56 = *(void *)(v0 + 936);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v55 + 88))(v54, v56) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v57 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 944) + 8))(*(void *)(v0 + 960), *(void *)(v0 + 936));
      uint64_t v57 = "";
    }
    __int16 v64 = (uint64_t *)(v0 + 1024);
    uint64_t v67 = *(void *)(v0 + 1016);
    uint64_t v68 = *(void *)(v0 + 1000);
    uint64_t v69 = *(void *)(v0 + 992);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 1048))(*(void *)(v0 + 1024), v67, v69);
    v70 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v70 = 0;
    os_signpost_id_t v71 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v52, v53, v71, "Perform Maintenance", v57, v70, 2u);
    MEMORY[0x19F3C9470](v70, -1, -1);

    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    v66(v67, v69);
  }
  else
  {
    __int16 v64 = (uint64_t *)(v0 + 1016);
    uint64_t v65 = *(void *)(v0 + 1000);

    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  }
  uint64_t v72 = *(void *)(v0 + 1032);
  uint64_t v73 = *(void *)(v0 + 992);
  v66(*v64, v73);
  swift_release();
  v66(v72, v73);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v74 = *(uint64_t (**)(void))(v0 + 8);
  return v74();
}

uint64_t sub_19F0699F0()
{
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v3 = *(void *)(v0 + 952);
    uint64_t v4 = *(void *)(v0 + 944);
    uint64_t v5 = *(void *)(v0 + 936);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 944) + 8))(*(void *)(v0 + 952), *(void *)(v0 + 936));
      uint64_t v6 = "";
    }
    uint64_t v7 = (uint64_t *)(v0 + 1024);
    uint64_t v10 = *(void *)(v0 + 1008);
    uint64_t v11 = *(void *)(v0 + 1000);
    uint64_t v12 = *(void *)(v0 + 992);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 1048))(*(void *)(v0 + 1024), v10, v12);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v14, "Perform Maintenance", v6, v13, 2u);
    MEMORY[0x19F3C9470](v13, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    uint64_t v7 = (uint64_t *)(v0 + 1008);
    uint64_t v8 = *(void *)(v0 + 1000);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *(void *)(v0 + 1032);
  uint64_t v16 = *(void *)(v0 + 992);
  v9(*v7, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_19F069C60()
{
  uint64_t v132 = v0;
  uint64_t v125 = v0 + 816;
  uint64_t v128 = v0 + 528;
  uint64_t v1 = (void *)qword_1EB390E30;
  uint64_t contentsOf = swift_allocObject();
  *(_OWORD *)(contentsOf + 16) = xmmword_19F24EAD0;
  id v120 = v1;
  *(void *)(v0 + 904) = sub_19EEC3F3C(0, 56, 0, MEMORY[0x1E4FBC860]);
  v2._countAndFlagsBits = 0xD000000000000022;
  v2._object = (void *)0x800000019F26F120;
  LogMessage.StringInterpolation.appendLiteral(_:)(v2);
  swift_getErrorValue();
  uint64_t v3 = *(void *)(v0 + 880);
  uint64_t v4 = *(void *)(v0 + 888);
  *(void *)(v0 + 584) = v4;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 560));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(boxed_opaque_existential_2Tm, v3, v4);
  sub_19EEC3ED8(v0 + 560, v0 + 688, &qword_1EB393260);
  *(_OWORD *)(v0 + 296) = 0u;
  *(_OWORD *)(v0 + 312) = 0u;
  sub_19EEC3E70(v0 + 688, v0 + 296);
  *(unsigned char *)(v0 + 328) = 0;
  *(unsigned char *)(v0 + 408) = 0;
  long long v6 = *(_OWORD *)(v0 + 312);
  *(_OWORD *)(v0 + 376) = *(_OWORD *)(v0 + 296);
  *(_OWORD *)(v0 + 392) = v6;
  uint64_t v7 = *(void **)(v0 + 904);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = sub_19EEC3F3C(0, v7[2] + 1, 1, v7);
  }
  uint64_t v8 = (long long *)(v0 + 136);
  uint64_t v9 = (long long *)(v0 + 216);
  unint64_t v11 = v7[2];
  unint64_t v10 = v7[3];
  if (v11 >= v10 >> 1) {
    uint64_t v7 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v7);
  }
  uint64_t v12 = (uint64_t *)(*(void *)(v0 + 984) + *(int *)(v0 + 92));
  void v7[2] = v11 + 1;
  uint64_t v13 = &v7[5 * v11];
  long long v14 = *(_OWORD *)(v0 + 376);
  long long v15 = *(_OWORD *)(v0 + 392);
  *((unsigned char *)v13 + 64) = *(unsigned char *)(v0 + 408);
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  *(void *)(v0 + 904) = v7;
  sub_19EEBD664(v0 + 560, &qword_1EB393260);
  v16._countAndFlagsBits = 0x654B656863616320;
  v16._object = (void *)0xEA00000000003D79;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v17 = *v12;
  uint64_t v18 = v12[1];
  *(void *)(v0 + 552) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 528) = v17;
  *(void *)(v0 + 536) = v18;
  sub_19EEC3ED8(v128, v125, &qword_1EB393260);
  *uint64_t v8 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70(v125, v0 + 136);
  *(unsigned char *)(v0 + 168) = 0;
  long long v19 = *(_OWORD *)(v0 + 152);
  *uint64_t v9 = *v8;
  *(_OWORD *)(v0 + 232) = v19;
  *(unsigned char *)(v0 + 248) = *(unsigned char *)(v0 + 168);
  uint64_t v20 = *(void **)(v0 + 904);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v20 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
  }
  unint64_t v22 = v20[2];
  unint64_t v21 = v20[3];
  if (v22 >= v21 >> 1) {
    uint64_t v20 = sub_19EEC3F3C((void *)(v21 > 1), v22 + 1, 1, v20);
  }
  long long v23 = (long long *)(v0 + 16);
  Swift::String v24 = (long long *)(v0 + 56);
  uint64_t v25 = *(void *)(v0 + 984) + *(int *)(v0 + 132);
  v20[2] = v22 + 1;
  long long v26 = &v20[5 * v22];
  long long v27 = *v9;
  long long v28 = *(_OWORD *)(v0 + 232);
  *((unsigned char *)v26 + 64) = *(unsigned char *)(v0 + 248);
  *((_OWORD *)v26 + 2) = v27;
  *((_OWORD *)v26 + 3) = v28;
  *(void *)(v0 + 904) = v20;
  sub_19EEBD664(v128, &qword_1EB393260);
  v29._countAndFlagsBits = 0x4449656863616320;
  v29._object = (void *)0xE90000000000003DLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  if (*(unsigned char *)(v25 + 4))
  {
    *(_OWORD *)(v0 + 624) = 0u;
    *(_OWORD *)(v0 + 640) = 0u;
  }
  else
  {
    int v30 = *(_DWORD *)(*(void *)(v0 + 984) + *(int *)(v0 + 132));
    *(void *)(v0 + 648) = MEMORY[0x1E4FBC150];
    *(_DWORD *)(v0 + 624) = v30;
  }
  sub_19EEC3ED8(v0 + 624, v0 + 592, &qword_1EB393260);
  *long long v23 = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19EEC3E70(v0 + 592, v0 + 16);
  *(unsigned char *)(v0 + 48) = 0;
  long long v31 = *(_OWORD *)(v0 + 32);
  *Swift::String v24 = *v23;
  *(_OWORD *)(v0 + 72) = v31;
  *(unsigned char *)(v0 + 88) = *(unsigned char *)(v0 + 48);
  unint64_t v32 = *(void **)(v0 + 904);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v32 = sub_19EEC3F3C(0, v32[2] + 1, 1, v32);
  }
  uint64_t v118 = v0 + 720;
  uint64_t v119 = v0 + 496;
  uint64_t v126 = v0 + 784;
  uint64_t v129 = v0 + 752;
  uint64_t v117 = v0 + 848;
  unint64_t v34 = v32[2];
  unint64_t v33 = v32[3];
  if (v34 >= v33 >> 1) {
    unint64_t v32 = sub_19EEC3F3C((void *)(v33 > 1), v34 + 1, 1, v32);
  }
  v123 = (long long *)(v0 + 256);
  v124 = (long long *)(v0 + 96);
  unint64_t v35 = (long long *)(v0 + 336);
  v116 = (long long *)(v0 + 176);
  long long v36 = (long long *)(v0 + 456);
  long long v37 = (void *)(v0 + 920);
  id v114 = *(id *)(v0 + 1136);
  v32[2] = v34 + 1;
  long long v38 = *v24;
  long long v39 = *(_OWORD *)(v0 + 72);
  long long v40 = &v32[5 * v34];
  *((unsigned char *)v40 + 64) = *(unsigned char *)(v0 + 88);
  *((_OWORD *)v40 + 2) = v38;
  *((_OWORD *)v40 + 3) = v39;
  *(void *)(v0 + 904) = v32;
  sub_19EEBD664(v0 + 624, &qword_1EB393260);
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v41);
  *(void *)(contentsOf + 32) = *(void *)(v0 + 904);
  id v130 = v120;
  char v131 = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)contentsOf, (JetEngine::LogMessageLevel)&v131);
  swift_bridgeObjectRelease();

  while (1)
  {
    uint64_t v42 = *(void *)(v0 + 1096);
    uint64_t v43 = *(void *)(v0 + 1112) + 1;
    sub_19EF4B3C4(*(void *)(v0 + 984));
    if (v43 == v42) {
      break;
    }
    uint64_t v44 = *(void *)(v0 + 1112) + 1;
    *(void *)(v0 + 1112) = v44;
    uint64_t v45 = *(void *)(v0 + 984);
    unint64_t v46 = *(void **)(v0 + 928);
    sub_19EF93C94(*(void *)(v0 + 1080)+ ((*(unsigned __int8 *)(v0 + 52) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 52))+ *(void *)(v0 + 1104) * v44, v45);
    uint64_t v47 = v46[10];
    uint64_t v48 = v46[11];
    __swift_project_boxed_opaque_existential_1(v46 + 7, v47);
    (*(void (**)(id *__return_ptr, uint64_t, uint64_t, uint64_t))(v48 + 8))(&v130, v45, v47, v48);
    char v49 = (char)v130;
    int v122 = v130;
    if (qword_1EB390E38 != -1) {
      swift_once();
    }
    long long v50 = (void *)qword_1EB390E30;
    *(void *)(v0 + 1120) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_19F24EAD0;
    id v52 = v50;
    *(void *)(v0 + 920) = sub_19EEC3F3C(0, 52, 0, MEMORY[0x1E4FBC860]);
    v53._countAndFlagsBits = 0xD00000000000001ELL;
    v53._object = (void *)0x800000019F26F100;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    *(void *)(v0 + 776) = &type metadata for JetPackAssetCacheStatus;
    *(unsigned char *)(v0 + 752) = v49;
    sub_19EEC3ED8(v129, v117, &qword_1EB393260);
    long long *v116 = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    sub_19EEC3E70(v117, (uint64_t)v116);
    *(unsigned char *)(v0 + 208) = 0;
    long long v54 = *(_OWORD *)(v0 + 192);
    long long *v124 = *v116;
    *(_OWORD *)(v0 + 112) = v54;
    *(unsigned char *)(v0 + 128) = *(unsigned char *)(v0 + 208);
    uint64_t v55 = *(void **)(v0 + 920);
    v121 = v52;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v55 = sub_19EEC3F3C(0, v55[2] + 1, 1, v55);
    }
    unint64_t v57 = v55[2];
    unint64_t v56 = v55[3];
    if (v57 >= v56 >> 1) {
      uint64_t v55 = sub_19EEC3F3C((void *)(v56 > 1), v57 + 1, 1, v55);
    }
    uint64_t v58 = *(void *)(v0 + 984);
    uint64_t v59 = *(void *)(v0 + 968);
    v55[2] = v57 + 1;
    uint64_t v60 = &v55[5 * v57];
    long long v61 = *v124;
    long long v62 = *(_OWORD *)(v0 + 112);
    *((unsigned char *)v60 + 64) = *(unsigned char *)(v0 + 128);
    *((_OWORD *)v60 + 2) = v61;
    *((_OWORD *)v60 + 3) = v62;
    *(void *)(v0 + 920) = v55;
    sub_19EEBD664(v129, &qword_1EB393260);
    v63._countAndFlagsBits = 0x654B656863616320;
    v63._object = (void *)0xEA00000000003D79;
    LogMessage.StringInterpolation.appendLiteral(_:)(v63);
    uint64_t v64 = *(int *)(v59 + 28);
    *(_DWORD *)(v0 + 92) = v64;
    uint64_t v65 = (uint64_t *)(v58 + v64);
    uint64_t v66 = *v65;
    uint64_t v67 = v65[1];
    *(void *)(v0 + 808) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 784) = v66;
    *(void *)(v0 + 792) = v67;
    sub_19EEC3ED8(v126, v118, &qword_1EB393260);
    long long *v35 = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70(v118, v0 + 336);
    *(unsigned char *)(v0 + 368) = 0;
    long long v68 = *(_OWORD *)(v0 + 352);
    long long *v123 = *v35;
    *(_OWORD *)(v0 + 272) = v68;
    *(unsigned char *)(v0 + 288) = *(unsigned char *)(v0 + 368);
    uint64_t v69 = *(void **)(v0 + 920);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v69 = sub_19EEC3F3C(0, v69[2] + 1, 1, v69);
    }
    unint64_t v71 = v69[2];
    unint64_t v70 = v69[3];
    if (v71 >= v70 >> 1) {
      uint64_t v69 = sub_19EEC3F3C((void *)(v70 > 1), v71 + 1, 1, v69);
    }
    uint64_t v72 = *(void *)(v0 + 984);
    uint64_t v73 = *(void *)(v0 + 968);
    v69[2] = v71 + 1;
    uint64_t v74 = &v69[5 * v71];
    long long v75 = *v123;
    long long v76 = *(_OWORD *)(v0 + 272);
    *((unsigned char *)v74 + 64) = *(unsigned char *)(v0 + 288);
    *((_OWORD *)v74 + 2) = v75;
    *((_OWORD *)v74 + 3) = v76;
    *(void *)(v0 + 920) = v69;
    sub_19EEBD664(v126, &qword_1EB393260);
    v77._countAndFlagsBits = 0x4449656863616320;
    v77._object = (void *)0xE90000000000003DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v77);
    uint64_t v78 = *(int *)(v73 + 24);
    *(_DWORD *)(v0 + 132) = v78;
    id v79 = (int *)(v72 + v78);
    if (v79[1])
    {
      uint64_t v81 = v0 + 656;
      int v80 = (long long *)(v0 + 416);
      *(_OWORD *)(v0 + 656) = 0u;
      *(_OWORD *)(v0 + 672) = 0u;
    }
    else
    {
      int v82 = *v79;
      *(void *)(v0 + 680) = MEMORY[0x1E4FBC150];
      *(_DWORD *)(v0 + 656) = v82;
      uint64_t v81 = v0 + 656;
      int v80 = (long long *)(v0 + 416);
    }
    sub_19EEC3ED8(v81, v119, &qword_1EB393260);
    *long long v36 = 0u;
    *(_OWORD *)(v0 + 472) = 0u;
    sub_19EEC3E70(v119, v0 + 456);
    *(unsigned char *)(v0 + 488) = 0;
    long long v83 = *(_OWORD *)(v0 + 472);
    *int v80 = *v36;
    v80[1] = v83;
    *((unsigned char *)v80 + 32) = *(unsigned char *)(v0 + 488);
    v84 = *(void **)(v0 + 920);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v84 = sub_19EEC3F3C(0, v84[2] + 1, 1, v84);
    }
    unint64_t v86 = v84[2];
    unint64_t v85 = v84[3];
    if (v86 >= v85 >> 1) {
      v84 = sub_19EEC3F3C((void *)(v85 > 1), v86 + 1, 1, v84);
    }
    v84[2] = v86 + 1;
    id v87 = &v84[5 * v86];
    long long v88 = *v80;
    long long v89 = v80[1];
    *((unsigned char *)v87 + 64) = *((unsigned char *)v80 + 32);
    *((_OWORD *)v87 + 2) = v88;
    *((_OWORD *)v87 + 3) = v89;
    *long long v37 = v84;
    sub_19EEBD664(v81, &qword_1EB393260);
    v90._countAndFlagsBits = 0;
    v90._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v90);
    *(void *)(v51 + 32) = *v37;
    id v130 = v121;
    char v131 = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v51, (JetEngine::LogMessageLevel)&v131);
    swift_bridgeObjectRelease();

    if (v122 == 3)
    {
      v97 = *(void **)(v0 + 928);
      uint64_t v98 = v97[5];
      uint64_t v99 = v97[6];
      __swift_project_boxed_opaque_existential_1(v97 + 2, v98);
      v127 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 + 24) + **(int **)(v99 + 24));
      v100 = (void *)swift_task_alloc();
      *(void *)(v0 + 1128) = v100;
      void *v100 = v0;
      v100[1] = sub_19F069024;
      uint64_t v101 = *(void *)(v0 + 984);
      return v127(v101, v98, v99);
    }
  }
  swift_bridgeObjectRelease();
  v91 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v92 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v93 = *(void *)(v0 + 960);
    uint64_t v94 = *(void *)(v0 + 944);
    uint64_t v95 = *(void *)(v0 + 936);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v94 + 88))(v93, v95) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v96 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 944) + 8))(*(void *)(v0 + 960), *(void *)(v0 + 936));
      uint64_t v96 = "";
    }
    v103 = (uint64_t *)(v0 + 1024);
    uint64_t v106 = *(void *)(v0 + 1016);
    uint64_t v107 = *(void *)(v0 + 1000);
    uint64_t v108 = *(void *)(v0 + 992);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 1048))(*(void *)(v0 + 1024), v106, v108);
    v109 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v109 = 0;
    os_signpost_id_t v110 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v91, v92, v110, "Perform Maintenance", v96, v109, 2u);
    MEMORY[0x19F3C9470](v109, -1, -1);

    v105 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
    v105(v106, v108);
  }
  else
  {
    v103 = (uint64_t *)(v0 + 1016);
    uint64_t v104 = *(void *)(v0 + 1000);

    v105 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
  }
  uint64_t v111 = *(void *)(v0 + 1032);
  uint64_t v112 = *(void *)(v0 + 992);
  v105(*v103, v112);
  swift_release();
  v105(v111, v112);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v113 = *(uint64_t (**)(void))(v0 + 8);
  return v113();
}

uint64_t sub_19F06A96C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v12 - 8);
  long long v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DD0EC();
  uint64_t v15 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v16 = sub_19EE77500((uint64_t)&v40), (v17 & 1) != 0))
  {
    uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
    swift_retain();
    sub_19EE7760C((uint64_t)&v40);
    if (qword_1EB390E38 != -1) {
      swift_once();
    }
    long long v19 = (void *)qword_1EB390E30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_19F24EAD0;
    id v21 = v19;
    uint64_t v43 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
    v22._object = (void *)0x800000019F26F190;
    v22._countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    v39[3] = a5;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v39);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_2Tm, a2, a5);
    sub_19EEC3ED8((uint64_t)v39, (uint64_t)v38, &qword_1EB393260);
    long long v36 = 0u;
    long long v37 = 0u;
    sub_19EEC3E70((uint64_t)v38, (uint64_t)&v36);
    char v42 = 0;
    long long v40 = v36;
    long long v41 = v37;
    Swift::String v24 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v24 = sub_19EEC3F3C(0, v24[2] + 1, 1, v24);
    }
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    if (v26 >= v25 >> 1) {
      Swift::String v24 = sub_19EEC3F3C((void *)(v25 > 1), v26 + 1, 1, v24);
    }
    v24[2] = v26 + 1;
    long long v27 = &v24[5 * v26];
    long long v28 = v40;
    long long v29 = v41;
    *((unsigned char *)v27 + 64) = v42;
    *((_OWORD *)v27 + 2) = v28;
    *((_OWORD *)v27 + 3) = v29;
    uint64_t v43 = v24;
    sub_19EEBD664((uint64_t)v39, &qword_1EB393260);
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    *(void *)(v20 + 32) = v43;
    *(void *)&long long v40 = v21;
    LOBYTE(v36) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v20, (JetEngine::LogMessageLevel)&v36);

    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    sub_19EE7760C((uint64_t)&v40);
    uint64_t v32 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v14, 1, 1, v32);
    unint64_t v33 = (void *)swift_allocObject();
    v33[2] = 0;
    v33[3] = 0;
    v33[4] = a3;
    v33[5] = a4;
    swift_retain();
    uint64_t v18 = sub_19EE76034((uint64_t)v14, (uint64_t)&unk_1E94758C0, (uint64_t)v33);
    sub_19F1DD0EC();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v36 = *a1;
    *a1 = 0x8000000000000000;
    sub_19EE75ED0(v18, (uint64_t)&v40, isUniquelyReferenced_nonNull_native);
    *a1 = v36;
    swift_bridgeObjectRelease();
    uint64_t result = sub_19EE7760C((uint64_t)&v40);
  }
  *a6 = v18;
  return result;
}

uint64_t sub_19F06AD44(uint64_t a1)
{
  uint64_t v1 = *(os_unfair_lock_s **)(a1 + 96);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_19F06DACC();
  os_unfair_lock_unlock(v1 + 6);
  return swift_release();
}

uint64_t sub_19F06ADB4(uint64_t a1)
{
  *(void *)(v1 + 392) = a1;
  return MEMORY[0x1F4188298](sub_19F06ADD4, 0, 0);
}

uint64_t sub_19F06ADD4()
{
  uint64_t v1 = v0;
  Swift::String v2 = v0 + 32;
  v1[50] = type metadata accessor for BaseObjectGraph();
  uint64_t v3 = static BaseObjectGraph.current.getter();
  v1[51] = v3;
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v1[47] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[52] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473650);
  *uint64_t v4 = v1;
  v4[1] = sub_19F06AF34;
  return MEMORY[0x1F41881B8](v2, v1 + 47, &unk_1E9473648, v3, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19F06AF34()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    Swift::String v2 = sub_19F06B210;
  }
  else
  {
    swift_release();
    Swift::String v2 = sub_19F06B050;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F06B050()
{
  if (*(void *)(v0 + 280))
  {
    sub_19EEBB420((long long *)(v0 + 256), v0 + 336);
LABEL_3:
    uint64_t v1 = static BaseObjectGraph.current.getter();
    *(void *)(v0 + 432) = v1;
    *(void *)(v0 + 384) = v1;
    Swift::String v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 440) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473660);
    *Swift::String v2 = v0;
    v2[1] = sub_19F06B274;
    return MEMORY[0x1F41881B8](v0 + 16, v0 + 384, &unk_1E9473658, v1, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
  }
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v4 = sub_19EE37638();
  if (!v3)
  {
    uint64_t v6 = v4;
    *(void *)(v0 + 360) = type metadata accessor for JetPackAssetDiskCache();
    *(void *)(v0 + 368) = &protocol witness table for JetPackAssetDiskCache;
    *(void *)(v0 + 336) = v6;
    sub_19EEBD664(v0 + 256, &qword_1E9473650);
    goto LABEL_3;
  }
  sub_19EEBD664(v0 + 256, &qword_1E9473650);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_19F06B210()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06B274()
{
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    Swift::String v2 = sub_19F06B50C;
  }
  else
  {
    swift_release();
    Swift::String v2 = sub_19F06B390;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F06B390()
{
  sub_19EEC4154(v0 + 336, v0 + 296);
  if (*(void *)(v0 + 40))
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 296);
    long long v1 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 224) = v1;
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 80);
    long long v2 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 192) = v2;
  }
  else
  {
    sub_19EEC4154(v0 + 296, v0 + 176);
    *(void *)(v0 + 240) = &type metadata for JetPackAssetStandardCachePolicy;
    *(void *)(v0 + 248) = &protocol witness table for JetPackAssetStandardCachePolicy;
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 296);
    sub_19EEBD664(v0 + 16, &qword_1E9473660);
  }
  uint64_t v3 = *(uint64_t **)(v0 + 392);
  sub_19EEDFF38(v0 + 176, v0 + 96);
  type metadata accessor for JetPackAssetSession();
  uint64_t v4 = swift_allocObject();
  sub_19EEDFF38(v0 + 96, v4 + 16);
  unint64_t v5 = sub_19EED9C48(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3910C8);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = v5;
  sub_19EEDFEE4(v0 + 96);
  *(void *)(v4 + 96) = v6;
  sub_19EEDFEE4(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 336);
  *uint64_t v3 = v4;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_19F06B50C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 336);
  long long v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06B57C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x1F4188298](sub_19F06B59C, 0, 0);
}

uint64_t sub_19F06B59C()
{
  v0[5] = type metadata accessor for BaseObjectGraph();
  v0[6] = static BaseObjectGraph.current.getter();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1E9471D48 + dword_1E9471D48);
  long long v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  void *v1 = v0;
  v1[1] = sub_19F06B658;
  return v3();
}

uint64_t sub_19F06B658(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_19F06B88C;
  }
  else {
    uint64_t v4 = sub_19F06B76C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19F06B76C()
{
  if (v0[8])
  {
    swift_release();
    v0[10] = static BaseObjectGraph.current.getter();
    uint64_t v3 = (uint64_t (*)(void *))((char *)&dword_1E9473638 + dword_1E9473638);
    uint64_t v1 = (void *)swift_task_alloc();
    v0[11] = v1;
    void *v1 = v0;
    v1[1] = sub_19F06B8F0;
    return v3(v0 + 2);
  }
  else
  {
    sub_19EF3D530();
    return sub_19F1DCFCC();
  }
}

uint64_t sub_19F06B88C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06B8F0()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F06BF00;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_19F06BA0C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F06BA0C()
{
  v0[13] = v0[2];
  v0[14] = static BaseObjectGraph.current.getter();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1E9471D28 + dword_1E9471D28);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  void *v1 = v0;
  v1[1] = sub_19F06BAC4;
  return v3();
}

uint64_t sub_19F06BAC4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 128) = a1;
  *(void *)(v3 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_19F06BF70;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_19F06BBE0;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19F06BBE0()
{
  id v1 = (id)v0[16];
  if (!v1) {
    id v1 = objc_msgSend(self, sel_ams_configurationWithProcessInfo_bag_, 0, v0[13]);
  }
  v0[18] = v1;
  uint64_t v2 = v0[13];
  id v3 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  swift_unknownObjectRetain_n();
  id v4 = v1;
  unint64_t v5 = (void *)sub_19F1DBD4C();
  id v6 = objc_msgSend(v3, sel_initWithContainerID_bag_, v5, v2);
  v0[19] = v6;

  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9475950
                                                                                     + dword_1E9475950);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[20] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_19F06BD5C;
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[3];
  uint64_t v10 = v0[4];
  return v12(v9, v10, v8, (uint64_t)v4, v8, (uint64_t)v6);
}

uint64_t sub_19F06BD5C()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F06BFE8;
  }
  else {
    uint64_t v2 = sub_19F06BE70;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F06BE70()
{
  uint64_t v2 = (void *)v0[18];
  uint64_t v1 = (void *)v0[19];

  swift_unknownObjectRelease_n();
  swift_release();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_19F06BF00()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06BF70()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06BFE8()
{
  uint64_t v2 = (void *)v0[18];
  uint64_t v1 = (void *)v0[19];

  swift_unknownObjectRelease_n();
  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t static JetPackAssetSession.diskJetPack(request:)(long long *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  uint64_t v2 = *((void *)a1 + 3);
  char v3 = *((unsigned char *)a1 + 32);
  long long v9 = *a1;
  uint64_t v10 = v1;
  uint64_t v11 = v2;
  LOBYTE(v12) = v3;
  sub_19F06D884((uint64_t)&v9);
  *(void *)&long long v9 = type metadata accessor for DiskJetPackResourceBundle();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94735D0);
  uint64_t v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(void *)(v5 + 16) = v6;
  *(void *)(v5 + 24) = &unk_1E94735C8;
  *(void *)(v5 + 32) = 0;
  *(unsigned char *)(v5 + 40) = 0;
  uint64_t v12 = v4;
  *((void *)&v9 + 1) = v5;
  uint64_t v7 = sub_19EEAA240((uint64_t *)&v9);
  swift_release();
  sub_19EEABFA4((uint64_t)&v9);
  return v7;
}

uint64_t sub_19F06C154(uint64_t a1)
{
  v1[17] = a1;
  uint64_t v2 = sub_19F1DB34C();
  v1[18] = v2;
  v1[19] = *(void *)(v2 - 8);
  v1[20] = swift_task_alloc();
  type metadata accessor for JetPackAsset(0);
  v1[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F06C240, 0, 0);
}

uint64_t sub_19F06C240()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 9;
  v1[22] = type metadata accessor for BaseObjectGraph();
  uint64_t v3 = static BaseObjectGraph.current.getter();
  v1[23] = v3;
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v1[16] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[24] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473618);
  *uint64_t v4 = v1;
  v4[1] = sub_19F06C3A0;
  return MEMORY[0x1F41881B8](v2, v1 + 16, &unk_1E9473610, v3, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19F06C3A0()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F06C5D0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_19F06C4BC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F06C4BC()
{
  uint64_t v1 = (_OWORD *)(v0 + 72);
  if (*(void *)(v0 + 112) == 1)
  {
    *(void *)(v0 + 56) = &type metadata for JetPackManagedKeyProvider;
    *(void *)(v0 + 64) = &protocol witness table for JetPackManagedKeyProvider;
    *(_OWORD *)(v0 + 16) = xmmword_19F258850;
    sub_19EEBD664((uint64_t)v1, &qword_1E9473618);
  }
  else
  {
    long long v2 = *(_OWORD *)(v0 + 88);
    *(_OWORD *)(v0 + 16) = *v1;
    *(_OWORD *)(v0 + 32) = v2;
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 104);
    *(void *)(v0 + 64) = *(void *)(v0 + 120);
  }
  *(void *)(v0 + 208) = static BaseObjectGraph.current.getter();
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_1E9473600 + dword_1E9473600);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_19F06C644;
  uint64_t v4 = *(void *)(v0 + 168);
  return v6(v4);
}

uint64_t sub_19F06C5D0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06C644()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    long long v2 = sub_19F06CA70;
  }
  else {
    long long v2 = sub_19F06C774;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F06C774()
{
  id v1 = objc_msgSend(self, sel_defaultManager);
  id v2 = objc_msgSend(v1, sel_temporaryDirectory);

  sub_19F1DB2BC();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[29] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_19F06C874;
  uint64_t v5 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v6 = v0[17];
  return DiskJetPackLoader.bundle(from:baseURL:automaticallyCleanUp:)(v6, v4, v5, 1);
}

uint64_t sub_19F06C874()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 160);
  uint64_t v3 = *(void *)(*(void *)v1 + 152);
  uint64_t v4 = *(void *)(*(void *)v1 + 144);
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_19F06CAE4;
  }
  else {
    uint64_t v5 = sub_19F06C9E4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_19F06C9E4()
{
  sub_19EF4B3C4(*(void *)(v0 + 168));
  sub_19EF58B50(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06CA70()
{
  sub_19EF58B50(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06CAE4()
{
  sub_19EF4B3C4(*(void *)(v0 + 168));
  sub_19EF58B50(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static JetPackAssetSession.inMemoryJetPack(request:)(long long *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  uint64_t v2 = *((void *)a1 + 3);
  char v3 = *((unsigned char *)a1 + 32);
  long long v9 = *a1;
  uint64_t v10 = v1;
  uint64_t v11 = v2;
  LOBYTE(v12) = v3;
  sub_19F06D884((uint64_t)&v9);
  *(void *)&long long v9 = type metadata accessor for InMemoryJetPackResourceBundle();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94735E0);
  uint64_t v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(void *)(v5 + 16) = v6;
  *(void *)(v5 + 24) = &unk_1E94735D8;
  *(void *)(v5 + 32) = 0;
  *(unsigned char *)(v5 + 40) = 0;
  uint64_t v12 = v4;
  *((void *)&v9 + 1) = v5;
  uint64_t v7 = sub_19EEAA240((uint64_t *)&v9);
  swift_release();
  sub_19EEABFA4((uint64_t)&v9);
  return v7;
}

uint64_t sub_19F06CC40(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  type metadata accessor for JetPackAsset(0);
  *(void *)(v1 + 144) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F06CCD0, 0, 0);
}

uint64_t sub_19F06CCD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 9;
  v1[19] = type metadata accessor for BaseObjectGraph();
  uint64_t v3 = static BaseObjectGraph.current.getter();
  v1[20] = v3;
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v1[16] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[21] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94735F8);
  *uint64_t v4 = v1;
  v4[1] = sub_19F06CE30;
  return MEMORY[0x1F41881B8](v2, v1 + 16, &unk_1E94735F0, v3, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19F06CE30()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F06D060;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_19F06CF4C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F06CF4C()
{
  uint64_t v1 = (_OWORD *)(v0 + 72);
  if (*(void *)(v0 + 112) == 1)
  {
    *(void *)(v0 + 56) = &type metadata for JetPackManagedKeyProvider;
    *(void *)(v0 + 64) = &protocol witness table for JetPackManagedKeyProvider;
    *(_OWORD *)(v0 + 16) = xmmword_19F258850;
    sub_19EEBD664((uint64_t)v1, &qword_1E94735F8);
  }
  else
  {
    long long v2 = *(_OWORD *)(v0 + 88);
    *(_OWORD *)(v0 + 16) = *v1;
    *(_OWORD *)(v0 + 32) = v2;
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 104);
    *(void *)(v0 + 64) = *(void *)(v0 + 120);
  }
  *(void *)(v0 + 184) = static BaseObjectGraph.current.getter();
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_1E9473600 + dword_1E9473600);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_19F06D0CC;
  uint64_t v4 = *(void *)(v0 + 144);
  return v6(v4);
}

uint64_t sub_19F06D060()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06D0CC()
{
  long long v2 = (void *)*v1;
  v2[25] = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F06D3FC, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[26] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_19F06D26C;
    uint64_t v4 = v2[17];
    uint64_t v5 = v2[18];
    return InMemoryJetPackLoader.bundle(from:)(v4, v5);
  }
}

uint64_t sub_19F06D26C()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    long long v2 = sub_19F06D468;
  }
  else {
    long long v2 = sub_19F06D380;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F06D380()
{
  sub_19EF4B3C4(*(void *)(v0 + 144));
  sub_19EF58AFC(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06D3FC()
{
  sub_19EF58AFC(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F06D468()
{
  sub_19EF4B3C4(*(void *)(v0 + 144));
  sub_19EF58AFC(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t JetPackAssetSession.deinit()
{
  sub_19EEDFEE4(v0 + 16);
  swift_release();
  return v0;
}

uint64_t JetPackAssetSession.__deallocating_deinit()
{
  sub_19EEDFEE4(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19F06D548()
{
  sub_19F1DD0EC();
  sub_19EE755DC((uint64_t)v1);
  sub_19EE7760C((uint64_t)v1);
  return swift_release();
}

uint64_t sub_19F06D5AC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  uint64_t v6 = *(void *)(v1 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + *(void *)(v3 + 64) + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v4 | v7 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v1);
  return MEMORY[0x1F4186498](v0, v9, v10);
}

uint64_t sub_19F06D710(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v8;
  uint64_t v11 = (uint64_t)v1
      + ((v8 + *(void *)(v7 + 64) + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_19EEB8A6C;
  return sub_19F06258C(a1, v9, v10, v11, v6, v5);
}

uint64_t sub_19F06D884(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v18[0] = *(_OWORD *)a1;
  v18[1] = v2;
  char v19 = *(unsigned char *)(a1 + 32);
  v17[0] = type metadata accessor for JetPackAssetSession();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470988);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = &unk_1E9473620;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 0;
  v17[4] = v3;
  v17[1] = v4;
  uint64_t v6 = swift_allocObject();
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(unsigned char *)(v6 + 48) = *(unsigned char *)(a1 + 32);
  v16[0] = type metadata accessor for JetPackAsset(0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470910);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(void *)(v9 + 16) = v10;
  *(void *)(v9 + 24) = &unk_1E9473630;
  *(void *)(v9 + 32) = v6;
  *(unsigned char *)(v9 + 40) = 0;
  v16[4] = v8;
  v16[1] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392D00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  sub_19EEA966C((uint64_t)v17, inited + 32);
  sub_19EE4E86C((uint64_t)v18);
  sub_19EE6D228();
  uint64_t v15 = sub_19F1DBB7C();
  sub_19EE6C294(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  type metadata accessor for BaseObjectGraph();
  uint64_t v12 = (void *)swift_initStackObject();
  v12[3] = 0;
  v12[4] = 0xE000000000000000;
  v12[2] = v15;
  uint64_t v13 = sub_19EEAA240(v16);
  swift_bridgeObjectRelease();
  sub_19EEABFA4((uint64_t)v16);
  sub_19EEABFA4((uint64_t)v17);
  return v13;
}

uint64_t method lookup function for JetPackAssetSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for JetPackAssetSession);
}

uint64_t dispatch thunk of JetPackAssetSession.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_19F06DACC()
{
  return sub_19F06D548();
}

uint64_t sub_19F06DAEC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE17780;
  return sub_19F01A750(a1, v1);
}

uint64_t sub_19F06DB88(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE17780;
  return sub_19F01A580(a1, v1);
}

uint64_t sub_19F06DC24(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE17780;
  return sub_19F01A668(a1, v1);
}

uint64_t sub_19F06DCC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_19F06DD00(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE17780;
  v4[3] = a1;
  v4[4] = v1 + 16;
  return MEMORY[0x1F4188298](sub_19F06B59C, 0, 0);
}

uint64_t sub_19F06DDB0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE17780;
  return sub_19F01A180(a1, v1);
}

uint64_t sub_19F06DE4C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE17780;
  return sub_19F01A498(a1, v1);
}

uint64_t sub_19F06DEE8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE17780;
  return sub_19F01A3B0(a1, v1);
}

uint64_t sub_19F06DF84@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19F06A96C(a1, v2[4], v2[5], v2[6], v2[2], a2);
}

uint64_t sub_19F06DFA8()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_19F06DFE8()
{
  unint64_t result = qword_1E946CF40;
  if (!qword_1E946CF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CF40);
  }
  return result;
}

uint64_t sub_19F06E03C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + *(void *)(v2 + 64) + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = (int *)(type metadata accessor for JetPackAsset(0) - 8);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v11 = (v7 + v8 + v10) & ~v10;
  uint64_t v18 = v11 + *(void *)(*(void *)v9 + 64);
  uint64_t v12 = v3 | v6 | v10 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v11);
  uint64_t v13 = v0 + v11 + v9[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  uint64_t v15 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v18, v12);
}

uint64_t sub_19F06E2A4(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (v7 + *(void *)(v6 + 64) + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for JetPackAsset(0) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v1[6];
  uint64_t v15 = (uint64_t)v1 + v7;
  uint64_t v16 = (uint64_t)v1 + v8;
  uint64_t v17 = (uint64_t)v1 + (v11 & ~v10);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v18;
  *uint64_t v18 = v3;
  v18[1] = sub_19EE17780;
  return sub_19F0669AC(a1, v12, v13, v14, v15, v16, v17, v5);
}

uint64_t sub_19F06E494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F06E4FC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE17780;
  return sub_19F01A098(a1, v1);
}

unsigned char *storeEnumTagSinglePayload for JetPackAssetSessionError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        _OWORD *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      _OWORD *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F06E634);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackAssetSessionError()
{
  return &type metadata for JetPackAssetSessionError;
}

unint64_t sub_19F06E670()
{
  unint64_t result = qword_1E9473690;
  if (!qword_1E9473690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473690);
  }
  return result;
}

uint64_t sub_19F06E6C4(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  void v7[3] = type metadata accessor for JSPackageIndex();
  v7[4] = (uint64_t)&protocol witness table for JSPackageIndex;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v7);
  sub_19F07011C(a1, (uint64_t)boxed_opaque_existential_2Tm);
  uint64_t v5 = a2(v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  return v5;
}

uint64_t IndexJSLoader.indexPipeline.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t IndexJSLoader.sourcePipeline.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t IndexJSLoader.init(url:bag:urlSession:urlEncoder:process:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  id v120 = a5;
  id v105 = a3;
  uint64_t v119 = a6;
  uint64_t v118 = sub_19F1DBDEC();
  uint64_t v116 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  v113 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = v9;
  MEMORY[0x1F4188790](v10);
  id v114 = (char *)&v97 - v11;
  uint64_t v111 = sub_19F1DBA0C();
  os_signpost_id_t v110 = *(void **)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  v109 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v108 = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v108);
  uint64_t v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_19F1DB34C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  int v122 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = MEMORY[0x1F4188790](v18);
  id v21 = (char *)&v97 - v20;
  uint64_t v22 = *a2;
  long long v23 = a4;
  uint64_t v24 = a1;
  uint64_t v26 = v25;
  uint64_t v27 = v16 + 16;
  long long v28 = *(void (**)(char *, uint64_t, double))(v16 + 16);
  v28((char *)&v97 - v20, a1, v19);
  uint64_t v123 = v16;
  long long v29 = (void (**)(char *, uint64_t))(v16 + 8);
  if (v23)
  {
    id v30 = v23;
    swift_unknownObjectRelease();
    long long v31 = *v29;
    uint64_t v117 = (unint64_t)v29 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v31(v21, v26);
    id v115 = v30;
  }
  else
  {
    uint64_t v127 = v22;
    id v32 = sub_19F06F9C8((uint64_t)v21, &v127, (uint64_t)v120);
    id v115 = 0;
    id v30 = v32;
    unint64_t v33 = *v29;
    uint64_t v117 = (unint64_t)v29 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v33(v21, v26);
    swift_unknownObjectRelease();
  }
  unint64_t v34 = v122;
  uint64_t v35 = v24;
  uint64_t v106 = v24;
  v121 = (void (*)(char *, uint64_t, uint64_t))v28;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v122, v24, v26);
  uint64_t v107 = v27;
  long long v36 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
  v123 += 32;
  v36(v14, v34, v26);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921F8);
  long long v37 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v38 = swift_allocObject();
  *(_DWORD *)(v38 + 16) = 0;
  v37[2] = v38;
  sub_19EEBDC4C((uint64_t)v14, (uint64_t)v37 + *(void *)(*v37 + 96), &qword_1EB3921D8);
  id v108 = (id)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946FC70);
  swift_allocObject();
  id v39 = v105;
  id v97 = v39;
  id v40 = v30;
  id v98 = v40;
  uint64_t v41 = ((uint64_t (*)(void))sub_19EE992B8)();
  type metadata accessor for JSRemoteIndexFetcher();
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v39;
  *(void *)(v42 + 24) = v40;
  *(void *)(v42 + 32) = 0;
  *(void *)(v42 + 40) = 0;
  *(void *)(v42 + 48) = 4;
  *(unsigned char *)(v42 + 56) = 1;
  *(void *)(v42 + 64) = v41;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = sub_19F06FC68;
  *(void *)(v43 + 24) = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAC8);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473698);
  uint64_t v45 = (void *)swift_allocObject();
  v45[2] = v44;
  v45[3] = sub_19F06FCA8;
  v45[4] = v43;
  v121(v34, v35, v26);
  id v105 = (id)sub_19F06FCD8();
  sub_19F1DCC8C();
  unint64_t v102 = sub_19EEA5F34();
  unsigned int v103 = *MEMORY[0x1E4FBCB48];
  unint64_t v46 = v110;
  uint64_t v101 = (void (*)(char *))v110[13];
  uint64_t v47 = v109;
  uint64_t v48 = v111;
  v101(v109);
  uint64_t v49 = sub_19F1DC8BC();
  v100 = (void (*)(char *, uint64_t))v46[1];
  v100(v47, v48);
  sub_19EE77E34((uint64_t)&v127, (uint64_t)&v124);
  uint64_t v99 = type metadata accessor for PersistentPipelineBackoff();
  uint64_t v50 = swift_allocObject();
  long long v51 = v125;
  *(_OWORD *)(v50 + 16) = v124;
  *(_OWORD *)(v50 + 32) = v51;
  *(void *)(v50 + 48) = v126;
  *(void *)(v50 + 56) = sub_19F06F468;
  *(void *)(v50 + 64) = 0;
  id v52 = (void *)swift_allocObject();
  v52[2] = v50;
  v52[3] = &off_1EF145828;
  v52[4] = v49;
  sub_19EE7760C((uint64_t)&v127);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736A0);
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736A8);
  long long v54 = (void *)swift_allocObject();
  v54[2] = v53;
  v54[3] = sub_19F06FD34;
  v54[4] = v52;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = 0;
  id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v56;
  *(void *)(v57 + 24) = v55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736B0);
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = v54;
  uint64_t v59 = (void *)swift_allocObject();
  v59[2] = v58;
  v59[3] = sub_19F06FD48;
  v59[4] = v57;
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = v59;
  swift_allocObject();
  id v61 = v97;
  id v108 = v61;
  long long v62 = v98;
  os_signpost_id_t v110 = v62;
  uint64_t v63 = swift_retain();
  uint64_t v64 = sub_19EE992B8(v63);
  type metadata accessor for JSRemoteScriptFetcher();
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v61;
  *(void *)(v65 + 24) = v62;
  *(_OWORD *)(v65 + 32) = xmmword_19F24DBD0;
  *(void *)(v65 + 48) = 4;
  *(unsigned char *)(v65 + 56) = 1;
  *(void *)(v65 + 64) = v64;
  uint64_t v66 = swift_allocObject();
  *(void *)(v66 + 16) = sub_19EF84634;
  *(void *)(v66 + 24) = v65;
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = sub_19F06FD60;
  *(void *)(v67 + 24) = v66;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736B8);
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = v60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736C0);
  uint64_t v69 = (void *)swift_allocObject();
  v69[2] = v68;
  v69[3] = sub_19F06FD68;
  v69[4] = v67;
  uint64_t v70 = v106;
  uint64_t v104 = v26;
  v121(v122, v106, v26);
  sub_19F1DCC8C();
  ((void (*)(char *, void, uint64_t))v101)(v47, v103, v48);
  uint64_t v71 = sub_19F1DC8BC();
  v100(v47, v48);
  sub_19EE77E34((uint64_t)&v127, (uint64_t)&v124);
  uint64_t v72 = swift_allocObject();
  long long v73 = v125;
  *(_OWORD *)(v72 + 16) = v124;
  *(_OWORD *)(v72 + 32) = v73;
  *(void *)(v72 + 48) = v126;
  *(void *)(v72 + 56) = sub_19F06F468;
  *(void *)(v72 + 64) = 0;
  uint64_t v74 = (void *)swift_allocObject();
  v74[2] = v72;
  v74[3] = &off_1EF145828;
  v74[4] = v71;
  sub_19EE7760C((uint64_t)&v127);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736C8);
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = v69;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736D0);
  long long v76 = (void *)swift_allocObject();
  v76[2] = v75;
  v76[3] = sub_19F06FD9C;
  v76[4] = v74;
  Swift::String v77 = v114;
  sub_19F1DBDCC();
  uint64_t v78 = v116;
  id v79 = v113;
  uint64_t v80 = v118;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v113, v77, v118);
  unint64_t v81 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v82 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v78 + 32))(v82 + v81, v79, v80);
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = sub_19F06FE3C;
  *(void *)(v83 + 24) = v82;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736D8);
  uint64_t v84 = swift_allocObject();
  *(void *)(v84 + 16) = v76;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F7E0);
  unint64_t v85 = (void *)swift_allocObject();
  v85[2] = v84;
  v85[3] = sub_19F06FEAC;
  v85[4] = v83;
  uint64_t v86 = swift_allocObject();
  *(void *)(v86 + 16) = sub_19F06FEDC;
  *(void *)(v86 + 24) = 0;
  uint64_t v87 = swift_allocObject();
  *(void *)(v87 + 16) = sub_19F06FEE0;
  *(void *)(v87 + 24) = v86;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F850);
  uint64_t v88 = swift_allocObject();
  *(void *)(v88 + 16) = v85;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F800);
  long long v89 = (void *)swift_allocObject();
  v89[2] = v88;
  v89[3] = sub_19EF9633C;
  v89[4] = v87;
  uint64_t v90 = swift_allocObject();
  *(void *)(v90 + 16) = 0;
  id v91 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  uint64_t v92 = swift_allocObject();
  *(void *)(v92 + 16) = v91;
  *(void *)(v92 + 24) = v90;

  (*(void (**)(uint64_t, uint64_t))(v123 - 24))(v70, v104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F870);
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v89;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736E0);
  uint64_t v94 = (void *)swift_allocObject();
  v94[2] = v93;
  v94[3] = sub_19F06FF24;
  v94[4] = v92;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736E8);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v94;
  uint64_t v96 = v119;
  *uint64_t v119 = v60;
  v96[1] = result;
  return result;
}

uint64_t sub_19F06F46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F06F7E4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_19F06F484);
}

void *sub_19F06F484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470FB0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = &type metadata for SyncTaskScheduler;
  uint64_t v16 = &protocol witness table for SyncTaskScheduler;
  *uint64_t v6 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736F0);
  unint64_t v7 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  void v7[2] = v8;
  sub_19EEBDC4C((uint64_t)v6, (uint64_t)v7 + *(void *)(*v7 + 96), (uint64_t *)&unk_1E9470FB0);
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  sub_19EEBB420(v13, (uint64_t)(v9 + 5));
  v11[0] = sub_19F070184;
  v11[1] = v9;
  id v11[2] = sub_19F070194;
  v11[3] = v7;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v12);
  v12[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF53B38((uint64_t)v11);
  sub_19EEBD664((uint64_t)v11, &qword_1E946FC00);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19F06F668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F06F7E4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_19F06F680);
}

uint64_t sub_19F06F680(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = &type metadata for SyncTaskScheduler;
  uint64_t v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946C7B8);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 0;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
  unint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  void v7[3] = a2;
  v7[4] = v4;
  sub_19EEBB420(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19F0700E0;
  v9[1] = v7;
  _OWORD v9[2] = sub_19F0700F8;
  v9[3] = v4;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF56720((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1E9473830);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19F06F7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = (*(uint64_t (**)(void))(**(void **)a1 + 88))();
  uint64_t v8 = a4(a2, a3, v7);
  swift_release();
  return v8;
}

uint64_t sub_19F06F864(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = &type metadata for SyncTaskScheduler;
  uint64_t v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946EFF0);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 0;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  void v7[3] = a2;
  v7[4] = v4;
  sub_19EEBB420(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19F070104;
  v9[1] = v7;
  _OWORD v9[2] = sub_19F070114;
  v9[3] = v4;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF56448((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1E9476570);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

id sub_19F06F9C8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE68]), sel_initWithBag_, *a2);
  objc_msgSend(v10, sel_setIncludeClientVersions_, 0);
  objc_msgSend(v10, sel_setAnisetteType_, 0);
  objc_msgSend(v10, sel_setMescalType_, 0);
  objc_msgSend(v10, sel_setAccount_, 0);
  objc_msgSend(v10, sel_setRequestEncoding_, 1);
  objc_msgSend(v10, sel_setDialogOptions_, 1);
  objc_msgSend(v10, sel_setClientInfo_, a3);
  objc_msgSend(v10, sel_setDisableResponseDecoding_, 1);
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  uint64_t v11 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v12 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v12);
  sub_19EEC4E5C(v11, &v18);
  os_unfair_lock_unlock(v12);
  int v13 = v18;
  swift_release();
  if (v13 == 2) {
    int has_internal_content = os_variant_has_internal_content();
  }
  else {
    int has_internal_content = v13 & 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (has_internal_content)
  {
    char v15 = sub_19F1DB1CC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v15) {
      objc_msgSend(v10, sel_setUrlKnownToBeTrusted_, 1);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v10;
}

void *sub_19F06FC68(uint64_t a1)
{
  return sub_19F15E3C4(a1);
}

uint64_t sub_19F06FC70()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F06FCA8(uint64_t a1)
{
  return sub_19F06F7E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_19F06F484);
}

unint64_t sub_19F06FCD8()
{
  unint64_t result = qword_1EB392868;
  if (!qword_1EB392868)
  {
    sub_19F1DB34C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB392868);
  }
  return result;
}

void *sub_19F06FD34(uint64_t *a1)
{
  return sub_19F0DC8CC(*a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_19F06FD48(uint64_t *a1)
{
  return sub_19F06FF3C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_19F0D91C4);
}

uint64_t sub_19F06FD60(uint64_t a1)
{
  return sub_19F06E6C4(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_19F06FD68(uint64_t a1)
{
  return sub_19F06F7E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_19F06F864);
}

uint64_t sub_19F06FD9C(uint64_t *a1)
{
  return sub_19F0DC4B0(*a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_19F06FDAC()
{
  uint64_t v1 = sub_19F1DBDEC();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19F06FE3C(long long *a1)
{
  uint64_t v3 = *(void *)(sub_19F1DBDEC() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_19F0A88E4(a1, v4);
}

uint64_t sub_19F06FEAC(uint64_t a1)
{
  return sub_19F06F7E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_19F06F680);
}

uint64_t sub_19F06FEE0(void *a1)
{
  return sub_19EF96228(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_19F06FEE8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F06FF24(uint64_t *a1)
{
  return sub_19F06FF3C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_19F0D8F5C);
}

uint64_t sub_19F06FF3C(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void **)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v6 = *a1;
  uint64_t v7 = v4 + 16;
  objc_msgSend(v5, sel_lock);
  uint64_t v8 = a2(v7, v6);
  objc_msgSend(v5, sel_unlock);
  return v8;
}

uint64_t destroy for IndexJSLoader()
{
  swift_release();
  return swift_release();
}

void *_s9JetEngine13IndexJSLoaderVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for IndexJSLoader(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for IndexJSLoader(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for IndexJSLoader()
{
  return &type metadata for IndexJSLoader;
}

uint64_t sub_19F0700E0(uint64_t *a1)
{
  return sub_19F15F654(*a1, a1[1], *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

void sub_19F0700F8(void *a1)
{
}

uint64_t sub_19F070104(uint64_t a1)
{
  return sub_19F15F714(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

uint64_t sub_19F070114(uint64_t a1)
{
  return sub_19F161EA0(a1, v1);
}

uint64_t sub_19F07011C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSPackageIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F070184(uint64_t a1)
{
  return sub_19F15F59C(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

void sub_19F070194(void *a1)
{
}

BOOL static DependencyDictionary.MergeStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DependencyDictionary.MergeStrategy.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t DependencyDictionary.MergeStrategy.hashValue.getter()
{
  return sub_19F1DD78C();
}

JetEngine::DependencyDictionary __swiftcall DependencyDictionary.init(_:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = v1;
  sub_19EE6D228();
  uint64_t v5 = sub_19F1DBB7C();
  sub_19EE6C294((uint64_t)a1._rawValue);
  result.contents._rawValue = (void *)swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  return result;
}

uint64_t DependencyDictionary.add<A>(distinctDependenciesFrom:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  double v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v30 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, a1, a2, v10);
  sub_19F1DC01C();
  swift_getAssociatedConformanceWitness();
  sub_19F1DCB2C();
  if (!(void)v37) {
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, AssociatedTypeWitness);
  }
  while (1)
  {
    v35[0] = v37;
    v35[1] = v38;
    uint64_t v36 = v39;
    uint64_t v13 = v37;
    sub_19EEBDBA4((uint64_t)v35 + 8, (uint64_t)v32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v31 = (void *)*v3;
    char v15 = v31;
    *uint64_t v3 = 0x8000000000000000;
    unint64_t v17 = sub_19EEAB4C0(v13);
    uint64_t v18 = v15[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      break;
    }
    char v21 = v16;
    if (v15[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v24 = v31;
        if (v16) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_19EEAA4B8();
        uint64_t v24 = v31;
        if (v21) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_19EEAB99C(v20, isUniquelyReferenced_nonNull_native);
      unint64_t v22 = sub_19EEAB4C0(v13);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_20;
      }
      unint64_t v17 = v22;
      uint64_t v24 = v31;
      if (v21)
      {
LABEL_11:
        sub_19EEBDC00((_OWORD *)(v24[7] + 32 * v17), &v33);
        sub_19EEBDC00(v32, (_OWORD *)(v24[7] + 32 * v17));
        goto LABEL_15;
      }
    }
    v24[(v17 >> 6) + 8] |= 1 << v17;
    *(void *)(v24[6] + 8 * v17) = v13;
    sub_19EEBDC00(v32, (_OWORD *)(v24[7] + 32 * v17));
    uint64_t v25 = v24[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_19;
    }
    v24[2] = v27;
    long long v33 = 0u;
    long long v34 = 0u;
LABEL_15:
    *uint64_t v3 = v24;
    swift_bridgeObjectRelease();
    uint64_t v28 = *((void *)&v34 + 1);
    sub_19EEBCB4C((uint64_t)&v33);
    if (v28) {
      sub_19F196BA4((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 289);
    }
    sub_19EEABFA4((uint64_t)v35);
    sub_19F1DCB2C();
    if (!(void)v37) {
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, AssociatedTypeWitness);
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t DependencyDictionary.count.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

void *DependencyDictionary.types.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_19EF9EB98(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_19F070694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *v3;
  if (!*(void *)(v10 + 16) || (unint64_t v11 = sub_19EEAB4C0(v7), (v12 & 1) == 0))
  {
    memset(v17, 0, sizeof(v17));
    goto LABEL_9;
  }
  sub_19EEBDBA4(*(void *)(v10 + 56) + 32 * v11, (uint64_t)v17);
  sub_19EEBCD00((uint64_t)v17, (uint64_t)v16);
  type metadata accessor for DependencyCell();
  if ((swift_dynamicCast() & 1) == 0)
  {
    type metadata accessor for ThrowingDependencyCell();
    if (!swift_dynamicCast())
    {
      type metadata accessor for DependencyPromise();
      if (swift_dynamicCast())
      {
        swift_release();
        char v13 = 2;
        goto LABEL_6;
      }
      if (swift_dynamicCast())
      {
        *a3 = 0;
        (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, a2);
        goto LABEL_7;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
LABEL_9:
      *a3 = 3;
      return sub_19EEBCB4C((uint64_t)v17);
    }
  }
  swift_release();
  char v13 = 1;
LABEL_6:
  *a3 = v13;
LABEL_7:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  return sub_19EEBCB4C((uint64_t)v17);
}

void *DependencyDictionary.types<A>(compatibleWith:)(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  uint64_t v8 = *(void *)(*v2 + 64);
  uint64_t v37 = *v2 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  unint64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v40 = (uint64_t)v41 + 8;
  uint64_t v36 = (void (**)(char *, uint64_t))(v4 + 8);
  unint64_t v33 = v12 - 1;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  unint64_t v14 = 0;
  int64_t v39 = v12;
  uint64_t v34 = v7 + 104;
  unint64_t v35 = v12 - 5;
  long long v38 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_8;
    }
    int64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v19 >= v39)
    {
      unint64_t v21 = v14;
    }
    else
    {
      unint64_t v20 = *(void *)(v37 + 8 * v19);
      if (v20) {
        goto LABEL_12;
      }
      unint64_t v21 = v14 + 1;
      if ((uint64_t)(v14 + 2) < v39)
      {
        unint64_t v20 = *(void *)(v37 + 8 * (v14 + 2));
        if (v20)
        {
          int64_t v19 = v14 + 2;
          goto LABEL_12;
        }
        unint64_t v21 = v14 + 2;
        if ((uint64_t)(v14 + 3) < v39)
        {
          unint64_t v20 = *(void *)(v37 + 8 * (v14 + 3));
          if (v20)
          {
            int64_t v19 = v14 + 3;
LABEL_12:
            unint64_t v11 = (v20 - 1) & v20;
            unint64_t v17 = __clz(__rbit64(v20)) + (v19 << 6);
            unint64_t v14 = v19;
LABEL_8:
            uint64_t v18 = *(void *)(v7 + 56);
            *(void *)&v41[0] = *(void *)(*(void *)(v7 + 48) + 8 * v17);
            sub_19EEBDBA4(v18 + 32 * v17, v40);
            goto LABEL_15;
          }
          int64_t v19 = v14 + 4;
          unint64_t v21 = v14 + 3;
          if ((uint64_t)(v14 + 4) < v39)
          {
            unint64_t v20 = *(void *)(v37 + 8 * v19);
            if (v20) {
              goto LABEL_12;
            }
            while (v35 != v14)
            {
              unint64_t v20 = *(void *)(v34 + 8 * v14++);
              if (v20)
              {
                int64_t v19 = v14 + 4;
                goto LABEL_12;
              }
            }
            unint64_t v21 = v33;
          }
        }
      }
    }
    unint64_t v11 = 0;
    uint64_t v42 = 0;
    unint64_t v14 = v21;
    memset(v41, 0, sizeof(v41));
LABEL_15:
    sub_19EEBDC4C((uint64_t)v41, (uint64_t)&v43, &qword_1EB390808);
    uint64_t v22 = v43;
    if (!v43)
    {
      swift_release();
      return v38;
    }
    sub_19EEBDC00(&v44, v41);
    if (swift_dynamicCast())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v38 = sub_19F09D3C8(0, v38[2] + 1, 1, v38);
      }
      unint64_t v28 = v38[2];
      unint64_t v27 = v38[3];
      unint64_t v29 = v28 + 1;
      if (v28 >= v27 >> 1)
      {
        unint64_t v32 = v28 + 1;
        long long v31 = sub_19F09D3C8((void *)(v27 > 1), v28 + 1, 1, v38);
        unint64_t v29 = v32;
        long long v38 = v31;
      }
      uint64_t v30 = v38;
      v38[2] = v29;
      v30[v28 + 4] = v22;
      (*v36)(v6, a2);
    }
    else
    {
      type metadata accessor for DependencyCell();
      if (swift_dynamicCast()
        || (type metadata accessor for ThrowingDependencyCell(), swift_dynamicCast())
        || (type metadata accessor for DependencyPromise(), swift_dynamicCast()))
      {
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v38 = sub_19F09D3C8(0, v38[2] + 1, 1, v38);
        }
        unint64_t v24 = v38[2];
        unint64_t v23 = v38[3];
        unint64_t v25 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          unint64_t v32 = v24 + 1;
          BOOL v26 = sub_19F09D3C8((void *)(v23 > 1), v24 + 1, 1, v38);
          unint64_t v25 = v32;
          long long v38 = v26;
        }
        char v15 = v38;
        v38[2] = v25;
        v15[v24 + 4] = v22;
      }
    }
    uint64_t result = (void *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
  }
  __break(1u);
  return result;
}

uint64_t sub_19F070CD8()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473728);
  sub_19EEA5E10(&qword_1E9473730, &qword_1E9473728);
  uint64_t v0 = sub_19F1DC03C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19F070D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEBDBA4(a1, (uint64_t)&v7);
  int v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_19F070E2C()
{
  return 0;
}

uint64_t sub_19F070F28()
{
  return 0;
}

uint64_t sub_19F071028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  if (*(void *)(v11 + 16) && (unint64_t v12 = sub_19EEAB4C0(a1), (v13 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v12, (uint64_t)v22);
    sub_19EEBDC00(v22, v23);
    sub_19EEBDBA4((uint64_t)v23, (uint64_t)v22);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v10, a2);
LABEL_10:
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a3, 0, 1, a2);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    }
    type metadata accessor for DependencyCell();
    if (swift_dynamicCast())
    {
      sub_19EEAC360();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
      goto LABEL_10;
    }
    type metadata accessor for ThrowingDependencyCell();
    if (swift_dynamicCast())
    {
      sub_19F1BFD28();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
      swift_release();
      if (v4) {
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
      }
      goto LABEL_10;
    }
    type metadata accessor for DependencyPromise();
    uint64_t v17 = swift_dynamicCast();
    if (v17)
    {
      uint64_t v18 = v21[0];
      MEMORY[0x1F4188790](v17);
      uint64_t v19 = v18;
      uint64_t v20 = a1;
      requirementFailure(_:file:line:)(sub_19F073A68, (uint64_t)&v21[-4], (uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 229);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3, 1, 1, a2);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    }
    v21[0] = 0;
    v21[1] = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DCF4C();
    sub_19F1DBEFC();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v14 = sub_19EEAB5C8(a1, a2);
    if (v14) {
      return sub_19F07141C(v11, v14, v15, a3);
    }
    else {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3, 1, 1, a2);
    }
  }
  return result;
}

uint64_t sub_19F07141C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v24 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_19F1DCAAC();
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v25 = a1;
  if (sub_19EE6E464(AssociatedTypeWitness, AssociatedTypeWitness))
  {
    uint64_t v22 = a2;
    uint64_t v15 = v23;
    uint64_t v25 = a1;
    DependencyDictionary.subscript.getter(AssociatedTypeWitness, AssociatedTypeWitness, (uint64_t)v10);
    int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness);
    uint64_t v17 = v24;
    if (v16 == 1)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v8);
      uint64_t v18 = swift_getAssociatedTypeWitness();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t, uint64_t))(a3 + 24))(v14, v22, a3);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, AssociatedTypeWitness);
      uint64_t v21 = swift_getAssociatedTypeWitness();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 0, 1, v21);
    }
  }
  else
  {
    uint64_t v20 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v24, 1, 1, v20);
  }
}

uint64_t sub_19F07175C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F071874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  void v6[3] = a1;
  v6[4] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[7] = AssociatedTypeWitness;
  uint64_t v8 = sub_19F1DCAAC();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = *(void *)(AssociatedTypeWitness - 8);
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F0719B8, 0, 0);
}

uint64_t sub_19F0719B8()
{
  if (sub_19EE6E464(v0[7], v0[7]))
  {
    v0[2] = v0[4];
    uint64_t v1 = (void *)swift_task_alloc();
    v0[13] = v1;
    void *v1 = v0;
    v1[1] = sub_19F071B1C;
    uint64_t v2 = v0[10];
    uint64_t v3 = v0[7];
    return sub_19EE301FC(v2, v3, v3);
  }
  else
  {
    uint64_t v5 = v0[3];
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v5, 1, 1, AssociatedTypeWitness);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_19F071B1C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F071E18;
  }
  else {
    uint64_t v2 = sub_19F071C30;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F071C30()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[3];
    (*(void (**)(uint64_t, void))(v0[9] + 8))(v1, v0[8]);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v4, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v6 = v0[12];
    uint64_t v8 = v0[5];
    uint64_t v7 = v0[6];
    uint64_t v9 = v0[3];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v6, v8, v7);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v3);
    uint64_t v10 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_19F071E18()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void DependencyDictionary.add(distinctDependency:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  sub_19EEBDBA4((uint64_t)(a1 + 1), (uint64_t)v6);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  sub_19EEAA370(v6, v2, isUniquelyReferenced_nonNull_native, &v7);
  uint64_t *v1 = v5;
  swift_bridgeObjectRelease();
  uint64_t v4 = v8;
  sub_19EEBCB4C((uint64_t)&v7);
  if (v4) {
    sub_19F196BA4((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 289);
  }
}

BOOL DependencyDictionary.replace(dependency:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  sub_19EEBDBA4((uint64_t)(a1 + 1), (uint64_t)v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  sub_19EEAA370(v7, v2, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t *v1 = v6;
  swift_bridgeObjectRelease();
  BOOL v4 = v9 != 0;
  sub_19EEBCB4C((uint64_t)&v8);
  return v4;
}

Swift::Void __swiftcall DependencyDictionary.merge(with:preferring:)(JetEngine::DependencyDictionary with, JetEngine::DependencyDictionary::MergeStrategy preferring)
{
  uint64_t v3 = *(void *)with.contents._rawValue;
  char v4 = *(unsigned char *)preferring;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (v4) {
    sub_19EEAA77C(v3, (uint64_t)sub_19EEAAC7C, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v6);
  }
  else {
    sub_19F0735A4(v3, (uint64_t)sub_19EEAAC7C, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v6);
  }
  *uint64_t v2 = v6;
  swift_bridgeObjectRelease();
}

uint64_t DependencyDictionary.remove<A>(dependenciesFor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  double v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v21 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, a1, a2, v11);
  sub_19F1DC01C();
  swift_getAssociatedConformanceWitness();
  sub_19F1DCB2C();
  for (uint64_t i = *(void *)&v23[0]; *(void *)&v23[0]; uint64_t i = *(void *)&v23[0])
  {
    unint64_t v15 = sub_19EEAB4C0(i);
    if (v16)
    {
      unint64_t v17 = v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = *v3;
      uint64_t v22 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_19EEAA4B8();
        uint64_t v19 = v22;
      }
      sub_19EEBDC00((_OWORD *)(*(void *)(v19 + 56) + 32 * v17), v23);
      sub_19EE5DB3C(v17, v19);
      *uint64_t v3 = v19;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v23, 0, sizeof(v23));
    }
    sub_19EEBCB4C((uint64_t)v23);
    sub_19F1DCB2C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, AssociatedTypeWitness);
}

uint64_t sub_19F072300()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F072364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  v5[7] = a1;
  v5[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CFD8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F072400, 0, 0);
}

uint64_t sub_19F072400()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = (char *)v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[7];
  sub_19EEC4154(v0[9], (uint64_t)(v0 + 2));
  *(void *)(swift_task_alloc() + 16) = v0 + 2;
  sub_19EE992BC((void (*)(timespec *__return_ptr, uint64_t))sub_19EE99A40, v1);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  *(void *)uint64_t v4 = v3;
  sub_19EEBDC00(v1, (_OWORD *)(v4 + 8));
  uint64_t v5 = &v1[*(int *)(v2 + 28)];
  uint64_t v6 = v4 + *(int *)(type metadata accessor for _ResolvedDependency() + 24);
  uint64_t v7 = sub_19F1DAE7C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v6, v5, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D060);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  long long v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_19F072558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  v5[7] = a1;
  v5[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CFD8);
  v5[11] = swift_task_alloc();
  v5[12] = type metadata accessor for _ResolvedDependency();
  v5[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F072624, 0, 0);
}

uint64_t sub_19F072624()
{
  uint64_t v1 = (char *)v0[11];
  sub_19EEC4154(v0[9], (uint64_t)(v0 + 2));
  *(void *)(swift_task_alloc() + 16) = v0 + 2;
  sub_19EE992BC((void (*)(timespec *__return_ptr, uint64_t))sub_19F073A84, v1);
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v4 = (_OWORD *)v0[11];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[8];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  swift_task_dealloc();
  *(void *)uint64_t v2 = v7;
  sub_19EEBDC00(v4, (_OWORD *)(v2 + 8));
  long long v8 = (char *)v4 + *(int *)(v5 + 28);
  uint64_t v9 = v2 + *(int *)(v3 + 24);
  uint64_t v10 = sub_19F1DAE7C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  sub_19EEA80F4(v2, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D060);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  double v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_19F0727D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a1;
  v6[7] = a4;
  uint64_t v7 = sub_19F1DAE7C();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  uint64_t v8 = sub_19F1DB57C();
  v6[13] = v8;
  v6[14] = *(void *)(v8 - 8);
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  v6[19] = type metadata accessor for MonotonicTimeReference();
  v6[20] = swift_task_alloc();
  v6[21] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CFD8);
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  v6[24] = type metadata accessor for _ResolvedDependency();
  v6[25] = swift_task_alloc();
  v6[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D060);
  v6[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F0729F4, 0, 0);
}

uint64_t sub_19F0729F4()
{
  uint64_t v17 = v0;
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 72);
  swift_unknownObjectRetain();
  sub_19F1DB56C();
  static MonotonicTime.now.getter(&v16);
  uint64_t v7 = *(int *)(v2 + 20);
  *(_DWORD *)(v0 + 256) = v7;
  *(timespec *)(v1 + v7) = v16;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(void *)(v0 + 224) = v8;
  *(void *)(v0 + 232) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v3, v1, v4);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(int **)(v6 + 24);
  *(void *)(v0 + 40) = swift_getAssociatedTypeWitness();
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 16));
  unint64_t v15 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_19F072BAC;
  uint64_t v13 = *(void *)(v0 + 72);
  return v15(boxed_opaque_existential_2Tm, ObjectType, v13);
}

uint64_t sub_19F072BAC()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F072FD8;
  }
  else {
    uint64_t v2 = sub_19F072CC0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F072CC0()
{
  uint64_t v28 = v0;
  uint64_t v1 = (void *)(*(void *)(v0 + 160) + *(int *)(v0 + 256));
  sub_19EEBDC00((_OWORD *)(v0 + 16), *(_OWORD **)(v0 + 176));
  static MonotonicTime.now.getter(&v27);
  uint64_t v2 = v1[1];
  v26[0] = *v1;
  v26[1] = v2;
  sub_19EE99904(v26, &v27);
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  uint64_t v25 = *(void *)(v0 + 216);
  uint64_t v22 = *(void *)(v0 + 200);
  uint64_t v23 = *(void *)(v0 + 192);
  uint64_t v21 = *(_OWORD **)(v0 + 184);
  uint64_t v18 = *(void *)(v0 + 168);
  uint64_t v19 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v10 = *(void *)(v0 + 88);
  uint64_t v11 = *(void *)(v0 + 96);
  uint64_t v17 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 56);
  uint64_t v24 = *(void *)(v0 + 48);
  sub_19F1DB4FC();
  v3(v7, v4, v8);
  v3(v6, v5, v8);
  sub_19F1DAE5C();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v12(v5, v8);
  v12(v4, v8);
  sub_19EE9985C(v16);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v13(v19 + *(int *)(v18 + 28), v11, v17);
  sub_19EEBDC4C(v19, (uint64_t)v21, &qword_1E946CFD8);
  swift_unknownObjectRelease();
  *(void *)uint64_t v22 = v20;
  sub_19EEBDC00(v21, (_OWORD *)(v22 + 8));
  v13(v22 + *(int *)(v23 + 24), (uint64_t)v21 + *(int *)(v18 + 28), v17);
  sub_19EEA80F4(v22, v25);
  swift_storeEnumTagMultiPayload();
  sub_19EEBDC4C(v25, v24, &qword_1E946D060);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_19F072FD8()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[14];
  uint64_t v6 = (void *)v0[6];
  __swift_deallocate_boxed_opaque_existential_2((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_19EE9985C(v2);
  swift_unknownObjectRelease();
  *uint64_t v6 = v1;
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_19F07311C()
{
  uint64_t v4 = v0;
  if (*(unsigned char *)(v0 + 64) && *(unsigned char *)(v0 + 64) != 2)
  {
    if (!*(void *)(v0 + 40)) {
      goto LABEL_7;
    }
    uint64_t v3 = 0;
    StartUpPerformanceEvent.record(checkpoint:)(&v3);
  }
  swift_release();
LABEL_7:
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t DependencyDictionary.description.getter()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CF10);
  sub_19EEA5E10(&qword_1E946CF08, &qword_1E946CF10);
  sub_19EEC4910();
  uint64_t v0 = sub_19F1DC0AC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19F073270@<X0>(void *a1@<X8>)
{
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  uint64_t result = sub_19F1DCF4C();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

unint64_t DependencyDictionary.debugDescription.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_19F07342C()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CF10);
  sub_19EEA5E10(&qword_1E946CF08, &qword_1E946CF10);
  sub_19EEC4910();
  uint64_t v0 = sub_19F1DC0AC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19F0734F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
  a2[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_2Tm(a2);
  uint64_t result = v6(v4, v5);
  if (v2) {
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)a2);
  }
  return result;
}

uint64_t sub_19F0735A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v47 = a1;
  uint64_t v48 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v49 = v8;
  uint64_t v50 = 0;
  uint64_t v51 = v11 & v9;
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19EEAAAA0((uint64_t)&v45);
  uint64_t v12 = v45;
  if (!v45) {
    goto LABEL_26;
  }
  sub_19EEBDC00(v46, v44);
  uint64_t v13 = *(void **)a5;
  unint64_t v15 = sub_19EEAB4C0(v12);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      if (v14) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_19EEAA4B8();
      if (v19) {
        goto LABEL_12;
      }
    }
LABEL_14:
    uint64_t v23 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(void *)(v23[6] + 8 * v15) = v12;
    sub_19EEBDC00(v44, (_OWORD *)(v23[7] + 32 * v15));
    uint64_t v24 = v23[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    _OWORD v23[2] = v26;
LABEL_16:
    sub_19EEAAAA0((uint64_t)&v45);
    for (uint64_t i = v45; v45; uint64_t i = v45)
    {
      sub_19EEBDC00(v46, v44);
      uint64_t v30 = *(void **)a5;
      unint64_t v31 = sub_19EEAB4C0(i);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v25 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v25) {
        goto LABEL_27;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_19EEAB99C(v35, 1);
        unint64_t v31 = sub_19EEAB4C0(i);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_29;
        }
      }
      if (v36)
      {
        uint64_t v28 = 32 * v31;
        sub_19EEBDBA4(*(void *)(*(void *)a5 + 56) + 32 * v31, (uint64_t)v42);
        sub_19EEBDBA4((uint64_t)v42, (uint64_t)v43);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
        uint64_t v29 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + v28);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
        sub_19EEBDC00(v43, v29);
      }
      else
      {
        long long v38 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(void *)(v38[6] + 8 * v31) = i;
        sub_19EEBDC00(v44, (_OWORD *)(v38[7] + 32 * v31));
        uint64_t v39 = v38[2];
        BOOL v25 = __OFADD__(v39, 1);
        uint64_t v40 = v39 + 1;
        if (v25) {
          goto LABEL_28;
        }
        v38[2] = v40;
      }
      sub_19EEAAAA0((uint64_t)&v45);
    }
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    return swift_release();
  }
  sub_19EEAB99C(v18, a4 & 1);
  unint64_t v20 = sub_19EEAB4C0(v12);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_19EEBDBA4(*(void *)(*(void *)a5 + 56) + 32 * v15, (uint64_t)v42);
    sub_19EEBDBA4((uint64_t)v42, (uint64_t)v43);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
    uint64_t v22 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    sub_19EEBDC00(v43, v22);
    goto LABEL_16;
  }
LABEL_29:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F073904()
{
  return sub_19F070E2C();
}

unint64_t sub_19F073910()
{
  unint64_t result = qword_1E94736F8;
  if (!qword_1E94736F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E94736F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DependencyDictionary.MergeStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F073A30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DependencyDictionary.MergeStrategy()
{
  return &type metadata for DependencyDictionary.MergeStrategy;
}

uint64_t sub_19F073A68()
{
  return sub_19F070F28();
}

uint64_t sub_19F073A84@<X0>(uint64_t *a1@<X8>)
{
  return sub_19F0734F4(*(void **)(v1 + 16), a1);
}

uint64_t sub_19F073AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F070D90(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_19F073ABC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = *a3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19EEB8A6C;
  return sub_19F12C434(a1, a2, v8, a4);
}

uint64_t sub_19F073B74(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(uint64_t **)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_19EEB8A6C;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_1E9473748 + dword_1E9473748);
  return v9(a1, a2, v7, v6);
}

uint64_t *sub_19F073C3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a2[4];
    a1[4] = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_19F1DAE7C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

void *sub_19F073D48(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_0(a1 + 1, a2 + 1);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DAE7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_19F073DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_19F1DAE7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_19F073E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_19F1DAE7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_19F073EF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_19F1DAE7C();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

void *sub_19F073FA4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    void *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_19F1DAE7C();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t static PipelinePhase<>.urlForResource(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v3;
  void v7[3] = v4;
  v7[4] = v5;
  uint64_t v7[5] = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_19F074494;
  *(void *)(v8 + 24) = v7;
  *a2 = sub_19F074564;
  a2[1] = v8;
  return sub_19F07456C(v3, v4);
}

uint64_t sub_19F074104@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v30 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *a1;
  if (qword_1EB392AA8 != -1) {
    swift_once();
  }
  char v14 = (void *)qword_1EB392860;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_19F24EAD0;
  id v16 = v14;
  uint64_t v40 = sub_19EEC3F3C(0, 18, 0, MEMORY[0x1E4FBC860]);
  v17._object = (void *)0x800000019F26F3B0;
  v17._countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  v39[3] = &type metadata for JetpackBundle.Resource;
  uint64_t v18 = (void *)swift_allocObject();
  v39[0] = v18;
  _OWORD v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a5;
  sub_19EEBCD00((uint64_t)v39, (uint64_t)v35);
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v32 = a4;
  sub_19F07456C(a2, a3);
  sub_19EEC3E70((uint64_t)v35, (uint64_t)&v33);
  char v38 = 0;
  long long v36 = v33;
  long long v37 = v34;
  char v19 = v40;
  uint64_t v20 = a5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
  }
  unint64_t v22 = v19[2];
  unint64_t v21 = v19[3];
  if (v22 >= v21 >> 1) {
    char v19 = sub_19EEC3F3C((void *)(v21 > 1), v22 + 1, 1, v19);
  }
  long long v19[2] = v22 + 1;
  uint64_t v23 = &v19[5 * v22];
  long long v24 = v36;
  long long v25 = v37;
  *((unsigned char *)v23 + 64) = v38;
  *((_OWORD *)v23 + 2) = v24;
  *((_OWORD *)v23 + 3) = v25;
  uint64_t v40 = v19;
  sub_19EEBD664((uint64_t)v39, &qword_1EB393260);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  *(void *)(v15 + 32) = v40;
  *(void *)&long long v36 = v16;
  LOBYTE(v33) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)&v33);

  swift_bridgeObjectRelease();
  *(void *)&long long v33 = v31;
  *(void *)&long long v36 = a2;
  *((void *)&v36 + 1) = a3;
  *(void *)&long long v37 = v32;
  *((void *)&v37 + 1) = v20;
  JetpackBundle.url(forOptionalResource:)((uint64_t)&v36, (uint64_t)v13);
  uint64_t v27 = sub_19F1DB34C();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v13, 1, v27) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v13, v27);
  }
  sub_19EEBD664((uint64_t)v13, (uint64_t *)&unk_1EB392E50);
  sub_19F0748E8();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_19F074494@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F074104(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void *sub_19F0744B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(**(void **)a1 + 88))();
  uint64_t v5 = sub_19F0746D4(a2, a3);
  swift_release();
  return v5;
}

uint64_t sub_19F07452C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_19F074564(uint64_t a1)
{
  return sub_19F0744B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19F07456C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19F0745B4(uint64_t *a1, void (*a2)(uint64_t *, double))
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  a2(&v11, v6);
  sub_19F1B068C((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void *sub_19F0746D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v4);
  double v6 = (void *)((char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = &type metadata for SyncTaskScheduler;
  id v16 = &protocol witness table for SyncTaskScheduler;
  *double v6 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921F8);
  uint64_t v7 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  _OWORD v7[2] = v8;
  sub_19EF89380((uint64_t)v6, (uint64_t)v7 + *(void *)(*v7 + 96));
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a1;
  v9[3] = a2;
  void v9[4] = v7;
  v12[0] = sub_19F0748D8;
  v12[1] = v9;
  v12[2] = sub_19EFF8C5C;
  v12[3] = v7;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF56944((uint64_t)v12);
  sub_19EEBD664((uint64_t)v12, &qword_1E946E3E0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19F074898()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0748D8(uint64_t *a1)
{
  return sub_19F0745B4(a1, *(void (**)(uint64_t *, double))(v1 + 16));
}

unint64_t sub_19F0748E8()
{
  unint64_t result = qword_1E946CAF8;
  if (!qword_1E946CAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CAF8);
  }
  return result;
}

uint64_t JSResponse.requestRoute.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JSResponse.requestDuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JSResponse() + 20);
  uint64_t v4 = sub_19F1DAE7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t JSResponse.incidents.getter()
{
  type metadata accessor for JSResponse();
  return swift_bridgeObjectRetain();
}

uint64_t JSResponse.networkPerformance.getter()
{
  type metadata accessor for JSResponse();
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for JSResponse(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_19F1DAE7C();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)v4 + v14;
    id v16 = (char *)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
    if (v17)
    {
      uint64_t v18 = *((void *)v16 + 4);
      *((void *)v15 + 3) = v17;
      *((void *)v15 + 4) = v18;
      (**(void (***)(char *, char *))(v17 - 8))(v15, v16);
    }
    else
    {
      long long v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((void *)v15 + 4) = *((void *)v16 + 4);
    }
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
    v13(&v15[*(int *)(v21 + 28)], &v16[*(int *)(v21 + 28)], v12);
    uint64_t v22 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *assignWithCopy for JSResponse(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DAE7C();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (uint64_t)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11 + 24);
  if (!*(void *)((char *)a1 + v11 + 24))
  {
    if (v14)
    {
      *(void *)(v12 + 24) = v14;
      *(void *)(v12 + 32) = *((void *)v13 + 4);
      (**(void (***)(uint64_t, char *))(v14 - 8))(v12, v13);
      goto LABEL_8;
    }
LABEL_7:
    long long v15 = *(_OWORD *)v13;
    long long v16 = *((_OWORD *)v13 + 1);
    *(void *)(v12 + 32) = *((void *)v13 + 4);
    *(_OWORD *)uint64_t v12 = v15;
    *(_OWORD *)(v12 + 16) = v16;
    goto LABEL_8;
  }
  if (!v14)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v12);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v12, (uint64_t *)v13);
LABEL_8:
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  v10((char *)(v12 + *(int *)(v17 + 28)), &v13[*(int *)(v17 + 28)], v9);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for JSResponse(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_19F1DAE7C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *(_OWORD *)((char *)a2 + v12 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)((char *)a2 + v12);
  *((_OWORD *)v13 + 1) = v15;
  *((void *)v13 + 4) = *(void *)((char *)a2 + v12 + 32);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  v11(&v13[*(int *)(v16 + 28)], &v14[*(int *)(v16 + 28)], v10);
  uint64_t v17 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  return a1;
}

void *assignWithTake for JSResponse(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_19F1DAE7C();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  if (*(void *)((char *)a1 + v13 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1 + v13);
  }
  long long v15 = (char *)a2 + v13;
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((void *)v14 + 4) = *((void *)v15 + 4);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  v12(&v14[*(int *)(v17 + 28)], &v15[*(int *)(v17 + 28)], v11);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19F074FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_19F1DAE7C();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_19F075110(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_19F1DAE7C();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_19F075240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E190);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x1F4188790](v4);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v5 + 16))(&v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v5 + 32))(v9 + v8, &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v4);
  unint64_t v10 = sub_19EEA5F34();
  swift_retain();
  uint64_t v11 = sub_19F1DC87C();
  v19[3] = v10;
  v19[4] = &protocol witness table for OS_dispatch_queue;
  v19[0] = v11;
  sub_19EEC4154((uint64_t)v19, (uint64_t)v16);
  uint64_t v17 = sub_19F07613C;
  uint64_t v18 = v9;
  swift_retain();
  sub_19F075838((uint64_t)v16, &v20);
  sub_19EEBD664((uint64_t)v16, &qword_1E946E178);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  uint64_t v12 = v20;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = v12;
  return sub_19F1DC39C();
}

uint64_t MetricsEmitter.Event.fieldName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsEmitter.Event.operationId.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 MetricsEmitter.Event.eventTime.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[2];
  *a1 = result;
  return result;
}

uint64_t static MetricsEmitter.emitterConfig.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB390578 != -1) {
    swift_once();
  }
  uint64_t v2 = off_1EB390568;
  *a1 = off_1EB390568;
  return sub_19F0754F8((uint64_t)v2);
}

uint64_t sub_19F0754F8(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19F075508()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E150);
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_19EE992B8(v0);
  qword_1E946E158 = result;
  return result;
}

uint64_t static MetricsEmitter.eventStream.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E188);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E946E160 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBD028], v0);
  return sub_19F1DC41C();
}

uint64_t sub_19F075688(uint64_t a1)
{
  return sub_19F075240(a1, v1);
}

ValueMetadata *type metadata accessor for MetricsEmitter()
{
  return &type metadata for MetricsEmitter;
}

ValueMetadata *type metadata accessor for MetricsEmitter.Configuration()
{
  return &type metadata for MetricsEmitter.Configuration;
}

void *assignWithCopy for MetricsEmitter.Event(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

ValueMetadata *type metadata accessor for MetricsEmitter.Event()
{
  return &type metadata for MetricsEmitter.Event;
}

uint64_t dispatch thunk of _PageRenderMetricsVisualization.init(_pageRenderMetrics:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _PageRenderMetricsVisualization.visualize(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

double sub_19F075768()
{
  uint64_t v0 = (NSString *)sub_19F1DBD4C();
  Class v1 = NSClassFromString(v0);

  if (!v1) {
    goto LABEL_9;
  }
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t v3 = swift_conformsToProtocol2();
  uint64_t v4 = v3 ? v3 : 0;
  if (!v3) {
    uint64_t ObjCClassMetadata = 0;
  }
  if (ObjCClassMetadata)
  {
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    qword_1E9473770 = ObjCClassMetadata;
    qword_1E9473778 = v4;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&xmmword_1E9473758);
    v5(ObjCClassMetadata, v4);
  }
  else
  {
LABEL_9:
    qword_1E9473778 = 0;
    double result = 0.0;
    xmmword_1E9473758 = 0u;
    *(_OWORD *)algn_1E9473768 = 0u;
  }
  return result;
}

uint64_t sub_19F075838@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v20 = a2;
  uint64_t v19 = sub_19F1DBA3C();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  double v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DB9FC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEC3ED8(a1, (uint64_t)&aBlock, &qword_1E946E178);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E180);
  uint64_t v12 = swift_allocObject();
  long long v13 = v22;
  *(_OWORD *)(v12 + 16) = aBlock;
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = v23;
  *(void *)(v12 + 64) = v24;
  uint64_t v18 = *(void *)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391088);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19F24EAD0;
  sub_19F1DB9EC();
  *(void *)&long long aBlock = v14;
  sub_19EEC8D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  sub_19F1DCC1C();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v3;
  *(void *)(v15 + 24) = v12;
  *(void *)&long long v23 = sub_19F076210;
  *((void *)&v23 + 1) = v15;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v22 = sub_19EEA4A68;
  *((void *)&v22 + 1) = &block_descriptor_12_0;
  uint64_t v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  sub_19F1DBA1C();
  MEMORY[0x19F3C6B90](0, v7, v11, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t result = swift_release();
  *uint64_t v20 = v12;
  return result;
}

uint64_t sub_19F075B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v5 = *(void **)(a1 + 24);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 24) = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_19F09E970(0, v5[2] + 1, 1, v5);
    *uint64_t v4 = v5;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    uint64_t v5 = sub_19F09E970((void *)(v7 > 1), v8 + 1, 1, v5);
    *uint64_t v4 = v5;
  }
  v5[2] = v8 + 1;
  v5[v8 + 4] = a2;
  return swift_endAccess();
}

uint64_t sub_19F075C2C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v16 = sub_19F1DBA3C();
  uint64_t v4 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB9FC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391088);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
  sub_19F1DB9EC();
  aBlock[0] = v11;
  sub_19EEC8D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  sub_19F1DCC1C();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_19F076204;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  void aBlock[3] = &block_descriptor_18;
  long long v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_19F1DBA1C();
  MEMORY[0x19F3C6B90](0, v6, v10, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_19F075EEC(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = 0;
    uint64_t v8 = v5 + 32;
    while (*(void *)(v8 + 8 * v7) != a2)
    {
      if (v6 == ++v7) {
        return result;
      }
    }
    swift_beginAccess();
    sub_19F168780(v7, &v9);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_19F075F98(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473780);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  v10[0] = *(void *)a1;
  v10[1] = v6;
  v10[2] = v7;
  void v10[3] = v8;
  long long v11 = *(_OWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E190);
  sub_19F1DC3BC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_19F0760A8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E190);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19F07613C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E190);
  return sub_19F075F98(a1);
}

uint64_t sub_19F0761B4()
{
  uint64_t v0 = swift_retain();
  sub_19F075C2C(v0);
  return swift_release();
}

uint64_t sub_19F076204()
{
  return sub_19F075EEC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_19F076210()
{
  return sub_19F075B50(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t NetResponse.init(status:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for NetResponse();
  uint64_t v5 = a2 + v4[9];
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  uint64_t v8 = (void *)(a2 + v4[10]);
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(unsigned char *)a2 = (unint64_t)(a1 - 200) < 0x64;
  *(void *)(a2 + 8) = a1;
  id v9 = objc_msgSend(self, sel_localizedStringForStatusCode_, a1);
  uint64_t v10 = sub_19F1DBD7C();
  uint64_t v12 = v11;

  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v12;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 32) = sub_19EE8F204(MEMORY[0x1E4FBC860]);
  *(unsigned char *)(a2 + 40) = 0;
  sub_19EE6293C(v5);
  v7(v5, 1, 1, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(void *)(a2 + v4[11]) = v13;
  return result;
}

uint64_t NetResponse.headers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t NetResponse.redirected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t NetResponse.url.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NetResponse() + 36);
  return sub_19EE62024(a1, v3);
}

uint64_t NetResponse.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for NetResponse() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t NetResponse.metrics.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for NetResponse() + 44);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t NetResponse.ok.getter()
{
  return *v0;
}

uint64_t NetResponse.ok.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*NetResponse.ok.modify())()
{
  return nullsub_1;
}

uint64_t NetResponse.status.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t NetResponse.status.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*NetResponse.status.modify())()
{
  return nullsub_1;
}

uint64_t NetResponse.statusText.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetResponse.statusText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*NetResponse.statusText.modify())()
{
  return nullsub_1;
}

uint64_t NetResponse.headers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t (*NetResponse.headers.modify())()
{
  return nullsub_1;
}

uint64_t NetResponse.redirected.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t (*NetResponse.redirected.modify())()
{
  return nullsub_1;
}

uint64_t NetResponse.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NetResponse() + 36);
  return sub_19EE628D4(v3, a1);
}

uint64_t (*NetResponse.url.modify())(void)
{
  return nullsub_1;
}

uint64_t NetResponse.body.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for NetResponse() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*NetResponse.body.modify())(void)
{
  return nullsub_1;
}

uint64_t NetResponse.metrics.getter()
{
  type metadata accessor for NetResponse();
  return swift_bridgeObjectRetain();
}

uint64_t (*NetResponse.metrics.modify())(void)
{
  return nullsub_1;
}

void *initializeBufferWithCopyOfBuffer for NetResponse(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a3[9];
    __dst = (void *)(a1 + v8);
    id v9 = (char *)a2 + v8;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v10 = sub_19F1DB34C();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v15 = a3[10];
    uint64_t v16 = a3[11];
    uint64_t v17 = (void *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    *(void *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t assignWithCopy for NetResponse(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NetResponse(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for NetResponse(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F076E70);
}

uint64_t sub_19F076E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NetResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F076F38);
}

uint64_t sub_19F076F38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void static Unstable.runLoopInstallAutoreleasePools(for:)()
{
  if (!_CFRunLoopSetPerCalloutAutoreleasepoolEnabled())
  {
    sub_19F19E9C0((unint64_t)"JetEngine/RunLoopAutoreleasePools.swift", 0x27uLL, 2, 0x11uLL);
  }
}

uint64_t dispatch thunk of _IntentReplayStorage.memoryOnlyCaching.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _IntentReplayStorage.append(file:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 16)
                                                                                     + **(int **)(a6 + 16));
  int v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *int v13 = v6;
  v13[1] = sub_19EEB8A6C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of _IntentReplayStorage.get(content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19F034938;
  return v11(a1, a2, a3, a4);
}

ValueMetadata *type metadata accessor for MetricsEventLinterEmptyImpressionsRule()
{
  return &type metadata for MetricsEventLinterEmptyImpressionsRule;
}

uint64_t sub_19F077284(uint64_t a1)
{
  unint64_t v2 = sub_19F07785C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F0772C0(uint64_t a1)
{
  unint64_t v2 = sub_19F07785C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F0772FC(unint64_t *a1)
{
  return sub_19F077424(a1);
}

uint64_t sub_19F077314(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94737A0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F07785C();
  sub_19F1DD8FC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_19F077424(unint64_t *a1)
{
  uint64_t v2 = a1[3];
  unint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, unint64_t))(v3 + 24))(v2, v3);
  if (!*(void *)(v4 + 16) || (unint64_t v5 = sub_19EEBD400(0x707954746E657665, 0xE900000000000065), (v6 & 1) == 0))
  {
    long long v31 = 0u;
    long long v32 = 0u;
    swift_bridgeObjectRelease();
    return sub_19EEBCB4C((uint64_t)&v31);
  }
  sub_19EEBDBA4(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1)) {
    return sub_19EEBCB4C((uint64_t)&v31);
  }
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  if (v28 == __PAIR128__(0xEB00000000736E6FLL, 0x6973736572706D69))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_19F1DD44C();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return result;
    }
  }
  uint64_t v10 = a1[3];
  unint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, unint64_t))(v11 + 24))(v10, v11);
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_19EEBD400(0x6973736572706D69, 0xEB00000000736E6FLL), (v14 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v12 + 56) + 32 * v13, (uint64_t)&v31);
  }
  else
  {
    long long v31 = 0u;
    long long v32 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v32 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
    if (swift_dynamicCast())
    {
      uint64_t v15 = *(void *)(v28 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      if (!v15)
      {
        unint64_t v16 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
        a1[3] = (unint64_t)&type metadata for StandardMetricsFieldsBuilder;
        a1[4] = (unint64_t)&protocol witness table for StandardMetricsFieldsBuilder;
        *a1 = v16;
      }
      return result;
    }
  }
  else
  {
    sub_19EEBCB4C((uint64_t)&v31);
  }
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_19F24EAD0;
  id v19 = v17;
  uint64_t v35 = sub_19EEC3F3C(0, 39, 0, MEMORY[0x1E4FBC860]);
  v20._object = (void *)0x800000019F26F470;
  v20._countAndFlagsBits = 0xD00000000000001ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  v34[3] = v7;
  v34[0] = 0x6973736572706D69;
  v34[1] = 0xEB00000000736E6FLL;
  sub_19EEBCD00((uint64_t)v34, (uint64_t)v30);
  long long v28 = 0u;
  long long v29 = 0u;
  sub_19EEC3E70((uint64_t)v30, (uint64_t)&v28);
  char v33 = 0;
  long long v31 = v28;
  long long v32 = v29;
  uint64_t v21 = v35;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v21 = sub_19EEC3F3C(0, v21[2] + 1, 1, v21);
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1) {
    uint64_t v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
  }
  void v21[2] = v23 + 1;
  uint64_t v24 = &v21[5 * v23];
  long long v25 = v31;
  long long v26 = v32;
  *((unsigned char *)v24 + 64) = v33;
  *((_OWORD *)v24 + 2) = v25;
  *((_OWORD *)v24 + 3) = v26;
  uint64_t v35 = v21;
  sub_19EEBCB4C((uint64_t)v34);
  v27._countAndFlagsBits = 0x73646C6569662022;
  v27._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  *(void *)(v18 + 32) = v35;
  *(void *)&long long v31 = v19;
  LOBYTE(v28) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v28);

  return swift_bridgeObjectRelease();
}

unint64_t sub_19F07785C()
{
  unint64_t result = qword_1E94737A8;
  if (!qword_1E94737A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94737A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEventLinterEmptyImpressionsRule.CodingKeys()
{
  return &type metadata for MetricsEventLinterEmptyImpressionsRule.CodingKeys;
}

unint64_t sub_19F0778C4()
{
  unint64_t result = qword_1E94737B0;
  if (!qword_1E94737B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94737B0);
  }
  return result;
}

unint64_t sub_19F07791C()
{
  unint64_t result = qword_1E94737B8;
  if (!qword_1E94737B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94737B8);
  }
  return result;
}

void ConditionallyExpressibleByJSValue<>.init(_:)(void *a1, uint64_t a2)
{
  sub_19EE7C060();
  if (v2)
  {
  }
  else
  {
    unint64_t v5 = sub_19F07910C(MEMORY[0x1E4FBC860]);
    JSONObject.decode<A>(_:withUserInfo:)(a2, v5);

    swift_bridgeObjectRelease();
    sub_19EEC3418((uint64_t)v6);
  }
}

void _NonFinalClassConditionallyExpressibleByJSValue.init(_:)(void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t static JSValue._make(from:)(void *a1)
{
  uint64_t v2 = swift_dynamicCastUnknownClass();
  if (v2)
  {
    id v3 = a1;
  }
  else
  {
    swift_getMetatypeMetadata();
    id v4 = a1;
    sub_19F1DD98C();
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(v4, v5);
    swift_willThrow();
  }
  return v2;
}

void sub_19F077B3C(void *a1, uint64_t a2)
{
}

id sub_19F077B5C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = swift_dynamicCastUnknownClass();
  if (v4)
  {
    *a2 = v4;
    return a1;
  }
  else
  {
    swift_getMetatypeMetadata();
    id v6 = a1;
    sub_19F1DD98C();
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(v6, v7);
    return (id)swift_willThrow();
  }
}

void Array<A>.init(_:)(id a1)
{
  uint64_t v2 = (void *)sub_19F1DBD4C();
  id v3 = objc_msgSend(a1, sel_valueForProperty_, v2);

  if (v3)
  {
    if (objc_msgSend(v3, sel_isNumber))
    {
      signed int v4 = objc_msgSend(v3, sel_toInt32);

      MEMORY[0x1F4188790](v4);
      sub_19F1DC1EC();
    }
    else
    {

      sub_19EF600C0();
      swift_allocError();
      uint64_t v6 = v5;
      a1 = a1;
      JSError.init(badValue:expected:)(a1, v6);
      swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_19F077D84(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v21 = a4;
  Swift::String v20 = a1;
  uint64_t v10 = *(void *)(a5 - 8);
  double v12 = MEMORY[0x1F4188790](a1);
  char v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    v19[0] = v11;
    if (!a3)
    {
LABEL_8:
      *(void *)v19[0] = a3;
      return;
    }
    uint64_t v16 = 0;
    v19[1] = v10 + 40;
    long long v19[2] = a6 + 8;
    while (a3 != v16)
    {
      uint64_t v17 = *v20;
      id v18 = objc_msgSend(v21, sel_valueAtIndex_, v16, v12);
      if (!v18) {
        goto LABEL_12;
      }
      (*(void (**)(id, uint64_t, uint64_t))(a6 + 8))(v18, a5, a6);
      if (v6) {
        return;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v17 + *(void *)(v10 + 72) * v16++, v14, a5);
      if (a3 == v16) {
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_19F077F10(void *a1@<X0>, void *a2@<X8>)
{
  Array<A>.init(_:)(a1);
  if (!v2) {
    *a2 = v4;
  }
}

void Dictionary<>.init(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v6 = sub_19F1DCAAC();
  double v7 = MEMORY[0x1F4188790](v6 - 8);
  char v9 = (char *)&v22 - v8;
  if (objc_msgSend(a1, sel_isObject, v7) && (objc_msgSend(a1, sel_isNull) & 1) == 0)
  {
    uint64_t v30 = sub_19F1DBAEC();
    JSValue.propertyNames.getter();
    uint64_t v14 = v13;
    uint64_t v25 = sub_19F1DBC0C();
    sub_19F1DBB8C();
    uint64_t v15 = v14;
    uint64_t v16 = *(void *)(v14 + 16);
    if (v16)
    {
      id v26 = a1;
      uint64_t v23 = a2 - 8;
      uint64_t v24 = v27 + 8;
      uint64_t v22 = v15;
      uint64_t v17 = (uint64_t *)(v15 + 40);
      while (1)
      {
        uint64_t v18 = *(v17 - 1);
        uint64_t v19 = *v17;
        swift_bridgeObjectRetain();
        Swift::String v20 = (void *)sub_19F1DBD4C();
        id v21 = objc_msgSend(v26, sel_valueForProperty_, v20, v22, v23, v24);

        if (!v21) {
          break;
        }
        (*(void (**)(id, uint64_t))(v27 + 8))(v21, a2);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        v17 += 2;
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v9, 0, 1, a2);
        uint64_t v28 = v18;
        uint64_t v29 = v19;
        sub_19F1DBC6C();
        if (!--v16)
        {
          swift_bridgeObjectRelease();

          return;
        }
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v11 = v10;
    id v12 = a1;
    JSError.init(badValue:expected:)(v12, v11);
    swift_willThrow();
  }
}

void sub_19F0781F8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  Dictionary<>.init(_:)(a1, *(void *)(a2 + 24), *(void *)(a3 - 8));
  if (!v4) {
    *a4 = v6;
  }
}

uint64_t Optional<A>.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_19F1DCAAC();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v15 - v12;
  if ((objc_msgSend(a1, sel_isUndefined, v11) & 1) != 0
    || (objc_msgSend(a1, sel_isNull) & 1) != 0)
  {

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a4, 1, 1, a2);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t))(a3 + 8))(a1, a2, a3);
    if (!v4)
    {
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v13, 0, 1, a2);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a4, v13, v9);
    }
  }
  return result;
}

uint64_t sub_19F0783DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Optional<A>.init(_:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.init(_:)(JSValue a1)
{
  Class isa = a1.super.isa;
  if ([(objc_class *)a1.super.isa isBoolean])
  {
    LOBYTE(v2) = [(objc_class *)isa toBool];
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v2 = v3;
    Class isa = isa;
    JSError.init(badValue:expected:)(isa, v2);
    swift_willThrow();
  }

  return v2 & 1;
}

void sub_19F0784B0(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  if (objc_msgSend(a1, sel_isBoolean))
  {
    unsigned __int8 v4 = objc_msgSend(a1, sel_toBool);

    *a2 = v4;
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v6 = v5;
    id v7 = a1;
    JSError.init(badValue:expected:)(v7, v6);
    swift_willThrow();
  }
}

void Date.init(_:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_19F1DB57C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  double v9 = MEMORY[0x1F4188790](v8 - 8);
  double v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isDate, v9))
  {
    id v12 = objc_msgSend(a1, sel_toDate);
    if (v12)
    {
      uint64_t v13 = v12;
      sub_19F1DB54C();

      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v14(v11, v7, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
      {

        v14(a2, v11, v4);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
    }
    __break(1u);
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v16 = v15;
    id v17 = a1;
    JSError.init(badValue:expected:)(v17, v16);
    swift_willThrow();
  }
}

void sub_19F0787B0(void *a1@<X0>, char *a2@<X8>)
{
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.init(_:)(JSValue a1)
{
  if ([(objc_class *)a1.super.isa isNumber])
  {
    [(objc_class *)a1.super.isa toDouble];
    double v3 = v2;

    return v3;
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v6 = v5;
    id v7 = a1.super.isa;
    JSError.init(badValue:expected:)(v7, v6);
    swift_willThrow();
  }
  return result;
}

void sub_19F078880(void *a1@<X0>, void *a2@<X8>)
{
  if (objc_msgSend(a1, sel_isNumber))
  {
    objc_msgSend(a1, sel_toDouble);
    uint64_t v5 = v4;

    *a2 = v5;
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v7 = v6;
    id v8 = a1;
    JSError.init(badValue:expected:)(v8, v7);
    swift_willThrow();
  }
}

Swift::Int32 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int32.init(_:)(JSValue a1)
{
  sub_19F078F88(a1.super.isa, (SEL *)&selRef_toInt32);
  return result;
}

void sub_19F07895C(void *a1@<X0>, unsigned int *a2@<X8>)
{
}

id static NSNull._make(from:)(void *a1)
{
  if (objc_msgSend(a1, sel_isNull)) {
    return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  }
  sub_19EF600C0();
  swift_allocError();
  JSError.init(badValue:expected:)(a1, v3);
  return (id)swift_willThrow();
}

void sub_19F078A1C(void *a1, uint64_t a2)
{
}

id sub_19F078A3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  if (objc_msgSend(a1, sel_isNull))
  {
    id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    *a2 = result;
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(a1, v5);
    return (id)swift_willThrow();
  }
  return result;
}

CGPoint __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CGPoint.init(_:)(JSValue a1)
{
  [(objc_class *)a1.super.isa toPoint];
  double v3 = v2;
  double v5 = v4;

  double v6 = v3;
  double v7 = v5;
  result.y = v7;
  result.x = v6;
  return result;
}

void sub_19F078B34(void *a1@<X0>, void *a2@<X8>)
{
  objc_msgSend(a1, sel_toPoint);
  uint64_t v5 = v4;
  uint64_t v7 = v6;

  *a2 = v5;
  a2[1] = v7;
}

__C::_NSRange __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _NSRange.init(_:)(JSValue a1)
{
  id v2 = [(objc_class *)a1.super.isa toRange];
  Swift::Int v4 = v3;

  Swift::Int v5 = (Swift::Int)v2;
  Swift::Int v6 = v4;
  result.length = v6;
  result.location = v5;
  return result;
}

void sub_19F078BDC(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_toRange);
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

CGSize __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CGSize.init(_:)(JSValue a1)
{
  [(objc_class *)a1.super.isa toSize];
  double v3 = v2;
  double v5 = v4;

  double v6 = v3;
  double v7 = v5;
  result.height = v7;
  result.width = v6;
  return result;
}

void sub_19F078C84(void *a1@<X0>, void *a2@<X8>)
{
  objc_msgSend(a1, sel_toSize);
  uint64_t v5 = v4;
  uint64_t v7 = v6;

  *a2 = v5;
  a2[1] = v7;
}

__C::CGRect __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CGRect.init(_:)(JSValue a1)
{
  [(objc_class *)a1.super.isa toRect];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;

  double v10 = v3;
  double v11 = v5;
  double v12 = v7;
  double v13 = v9;
  result.size.height = v13;
  result.size.width = v12;
  result.origin.y = v11;
  result.origin.x = v10;
  return result;
}

void sub_19F078D44(void *a1@<X0>, void *a2@<X8>)
{
  objc_msgSend(a1, sel_toRect);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;

  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.init(_:)(JSValue a1)
{
  if ([(objc_class *)a1.super.isa isString])
  {
    id v2 = [(objc_class *)a1.super.isa toString];
    if (v2)
    {
      uint64_t v4 = v2;
      uint64_t v5 = sub_19F1DBD7C();
      uint64_t v7 = v6;

      id v2 = (id)v5;
      double v3 = v7;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v9 = v8;
    uint64_t v10 = a1.super.isa;
    JSError.init(badValue:expected:)(v10, v9);
    swift_willThrow();
  }
  result._object = v3;
  result._countAndFlagsBits = (uint64_t)v2;
  return result;
}

void sub_19F078E8C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (objc_msgSend(a1, sel_isString))
  {
    id v4 = objc_msgSend(a1, sel_toString);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = sub_19F1DBD7C();
      uint64_t v8 = v7;

      *a2 = v6;
      a2[1] = v8;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v10 = v9;
    id v11 = a1;
    JSError.init(badValue:expected:)(v11, v10);
    swift_willThrow();
  }
}

Swift::UInt32 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt32.init(_:)(JSValue a1)
{
  sub_19F078F88(a1.super.isa, (SEL *)&selRef_toUInt32);
  return result;
}

void sub_19F078F88(void *a1, SEL *a2)
{
  id v3 = a1;
  if (objc_msgSend(a1, sel_isNumber))
  {
    [v3 *a2];
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v5 = v4;
    id v3 = v3;
    JSError.init(badValue:expected:)(v3, v5);
    swift_willThrow();
  }
}

void sub_19F079038(void *a1@<X0>, unsigned int *a2@<X8>)
{
}

void sub_19F079058(void *a1@<X0>, SEL *a2@<X3>, unsigned int *a3@<X8>)
{
  if (objc_msgSend(a1, sel_isNumber))
  {
    unsigned int v6 = [a1 *a2];

    *a3 = v6;
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v8 = v7;
    id v9 = a1;
    JSError.init(badValue:expected:)(v9, v8);
    swift_willThrow();
  }
}

unint64_t sub_19F07910C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472170);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F30);
  uint64_t v6 = sub_19F1DD06C();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  id v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_19F0793E8(v12, (uint64_t)v5);
    unint64_t result = sub_19F079384((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_19F1DCF8C();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = (unint64_t)sub_19EEBDC00(v9, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_19F079300(uint64_t *a1, uint64_t a2)
{
  sub_19F077D84(a1, a2, *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t dispatch thunk of ConditionallyExpressibleByJSValue.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of static _NonFinalClassConditionallyExpressibleByJSValue._make(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ExpressibleByJSValue.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

unint64_t sub_19F079384(uint64_t a1)
{
  sub_19F1DCF8C();
  uint64_t v2 = sub_19F1DBC8C();
  return sub_19F079450(a1, v2);
}

uint64_t sub_19F0793E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_19F079450(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v4 = sub_19F1DCF8C();
  v6.n128_f64[0] = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v21 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v13 = v14;
    uint64_t v15 = *(void *)(v12 + 56);
    unint64_t v16 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      uint64_t v17 = v12;
      v13(v8, *(void *)(v23 + 48) + v15 * v10, v4, v6);
      char v18 = sub_19F1DBD3C();
      (*v16)(v8, v4);
      if (v18) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      uint64_t v12 = v17;
    }
    while (((*(void *)(v21 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t destroy for RemoteFetcher(id *a1)
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for RemoteFetcher(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v5 = v3;
  id v6 = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RemoteFetcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  long long v10 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v10;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RemoteFetcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for RemoteFetcher()
{
  return &type metadata for RemoteFetcher;
}

void sub_19F0797B8(void *a1, id a2)
{
  if (a1)
  {
    id v5 = a1;
    sub_19EE534F4(v5);
    id v2 = v5;
LABEL_4:

    return;
  }
  if (a2)
  {
    id v4 = a2;
    sub_19F07E534(a2);
    id v2 = a2;
    goto LABEL_4;
  }
  sub_19F1DCFCC();
  __break(1u);
}

uint64_t sub_19F07988C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_19F1DBA0C();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  MEMORY[0x1F4188790](v4);
  char v38 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_19F1DACDC();
  uint64_t v6 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = v7;
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392210);
  uint64_t v9 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)(v9 + 16) = v10;
  *(void *)(v9 + 24) = v11;
  *(unsigned char *)(v9 + 32) = 0;
  uint64_t v12 = *v1;
  uint64_t v13 = (void *)sub_19F1DAC5C();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_19F07A724;
  *(void *)(v14 + 24) = v9;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_19F07A768;
  *(void *)(v15 + 24) = v14;
  v45[0] = sub_19F07A7A0;
  v45[1] = v15;
  long long aBlock = (uint64_t (*)(id *))MEMORY[0x1E4F143A8];
  uint64_t v42 = 1107296256;
  uint64_t v43 = sub_19F079D5C;
  long long v44 = &block_descriptor_19;
  unint64_t v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v35 = v12;
  id v17 = objc_msgSend(v12, sel_dataTaskWithRequest_completionHandler_, v13, v16);
  _Block_release(v16);

  if (v2[2])
  {
    swift_retain_n();
    id v18 = v17;
    sub_19F1DC7FC();
    swift_release();
  }
  objc_msgSend(v17, sel_resume);
  id v34 = v17;
  uint64_t v19 = v2[1];
  uint64_t v20 = swift_allocObject();
  long long v21 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v20 + 32) = v21;
  *(_OWORD *)(v20 + 48) = *((_OWORD *)v2 + 2);
  *(void *)(v20 + 64) = v2[6];
  uint64_t v22 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v37);
  unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v24 + v23, v8, v22);
  unint64_t v25 = sub_19EEA5F34();
  id v26 = v38;
  uint64_t v27 = v39;
  uint64_t v28 = v40;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, *MEMORY[0x1E4FBCB48], v40);
  swift_retain();
  id v29 = v35;
  id v30 = v19;
  swift_retain();
  uint64_t v31 = sub_19F1DC8BC();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v28);
  void v47[3] = v25;
  v47[4] = &protocol witness table for OS_dispatch_queue;
  v47[0] = v31;
  long long aBlock = sub_19F07A818;
  uint64_t v42 = v20;
  uint64_t v43 = sub_19F07A8B0;
  long long v44 = (void *)v24;
  sub_19EEC4154((uint64_t)v47, (uint64_t)v45);
  char v46 = 0;
  swift_retain();
  swift_retain();
  sub_19EE24580((uint64_t)&aBlock);
  sub_19EEBD664((uint64_t)&aBlock, (uint64_t *)&unk_1EB3918A0);

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
  return v9;
}

uint64_t sub_19F079D30()
{
  return sub_19F1DAC8C();
}

void sub_19F079D5C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, v6);
  swift_release();
}

uint64_t sub_19F079DE0(id *a1)
{
  id v1 = *a1;
  uint64_t v2 = sub_19EE60278(v1);

  sub_19EFCC9A4(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F079E40(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a1;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C780);
  MEMORY[0x1F4188790](v41);
  uint64_t v40 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v38 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v38 - v11;
  if (qword_1EB392AA8 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_1EB392860;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19F251B70;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  long long v44 = xmmword_19F24EAD0;
  *(_OWORD *)(v15 + 16) = xmmword_19F24EAD0;
  *((void *)&v51 + 1) = v16;
  *(void *)&long long v50 = 0xD000000000000019;
  *((void *)&v50 + 1) = 0x800000019F26F4C0;
  long long v48 = 0u;
  long long v49 = 0u;
  id v17 = v13;
  sub_19EEC3E70((uint64_t)&v50, (uint64_t)&v48);
  *(unsigned char *)(v15 + 64) = 0;
  long long v18 = v49;
  *(_OWORD *)(v15 + 32) = v48;
  *(_OWORD *)(v15 + 48) = v18;
  *(void *)(v14 + 32) = v15;
  uint64_t v43 = a2;
  sub_19F1DACAC();
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v20 = v19(v12, 1, v4);
  uint64_t v39 = v5;
  if (v20 == 1)
  {
    sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1EB392E50);
    long long v50 = 0u;
    long long v51 = 0u;
  }
  else
  {
    *((void *)&v51 + 1) = v4;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v50);
    (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 32))(boxed_opaque_existential_2Tm, v12, v4);
  }
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v44;
  sub_19EEBCD00((uint64_t)&v50, (uint64_t)v47);
  long long v48 = 0u;
  long long v49 = 0u;
  sub_19EEC3E70((uint64_t)v47, (uint64_t)&v48);
  *(unsigned char *)(v22 + 64) = 2;
  long long v23 = v49;
  *(_OWORD *)(v22 + 32) = v48;
  *(_OWORD *)(v22 + 48) = v23;
  *(void *)(v14 + 40) = v22;
  sub_19EEBD664((uint64_t)&v50, &qword_1EB393260);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v44;
  *((void *)&v51 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v50 = 0x3A64656C696166;
  *((void *)&v50 + 1) = 0xE700000000000000;
  long long v48 = 0u;
  long long v49 = 0u;
  sub_19EEC3E70((uint64_t)&v50, (uint64_t)&v48);
  *(unsigned char *)(v24 + 64) = 0;
  long long v25 = v49;
  *(_OWORD *)(v24 + 32) = v48;
  *(_OWORD *)(v24 + 48) = v25;
  *(void *)(v14 + 48) = v24;
  swift_getErrorValue();
  uint64_t v27 = v45;
  uint64_t v26 = v46;
  *((void *)&v51 + 1) = v46;
  uint64_t v28 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v50);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v28, v27, v26);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v44;
  sub_19EEBCD00((uint64_t)&v50, (uint64_t)v47);
  long long v48 = 0u;
  long long v49 = 0u;
  sub_19EEC3E70((uint64_t)v47, (uint64_t)&v48);
  *(unsigned char *)(v29 + 64) = 2;
  long long v30 = v49;
  *(_OWORD *)(v29 + 32) = v48;
  *(_OWORD *)(v29 + 48) = v30;
  *(void *)(v14 + 56) = v29;
  sub_19EEBD664((uint64_t)&v50, &qword_1EB393260);
  *(void *)&long long v48 = v17;
  LOBYTE(v50) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v50);

  swift_bridgeObjectRelease();
  sub_19F1DACAC();
  if (v19(v9, 1, v4) == 1) {
    return sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1EB392E50);
  }
  uint64_t v32 = v39;
  uint64_t v33 = v38;
  uint64_t v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v39 + 32))(v38, v9, v4);
  if (qword_1E946DB58 != -1) {
    uint64_t v34 = swift_once();
  }
  id v35 = *(os_unfair_lock_s **)(qword_1E9498948 + 16);
  MEMORY[0x1F4188790](v34);
  *(&v38 - 2) = v33;
  swift_retain();
  os_unfair_lock_lock(v35 + 6);
  uint64_t v36 = v40;
  sub_19EF8A558(v40);
  os_unfair_lock_unlock(v35 + 6);
  swift_release();
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t))(v32 + 8);
  v37(&v36[*(int *)(v41 + 48)], v4);
  return v37(v33, v4);
}

uint64_t sub_19F07A440(uint64_t *a1, void (*a2)(uint64_t *, double))
{
  uint64_t v4 = sub_19F1DACDC();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  a2(&v11, v6);
  sub_19F1AE444((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void *sub_19F07A560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE40);
  MEMORY[0x1F4188790](v4);
  double v6 = (void *)((char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = &type metadata for SyncTaskScheduler;
  uint64_t v16 = &protocol witness table for SyncTaskScheduler;
  *double v6 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE48);
  uint64_t v7 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  _OWORD v7[2] = v8;
  sub_19F07ADE0((uint64_t)v6, (uint64_t)v7 + *(void *)(*v7 + 96));
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a1;
  v9[3] = a2;
  void v9[4] = v7;
  v12[0] = sub_19F07AE88;
  v12[1] = v9;
  v12[2] = sub_19F07AE94;
  v12[3] = v7;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EE480F0((uint64_t)v12);
  sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1EB3918B0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

void sub_19F07A724(void **a1, void *a2)
{
}

uint64_t sub_19F07A730()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F07A768(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_19F07A7A0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_19F07A7C8()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19F07A818(id *a1)
{
  return sub_19F079DE0(a1);
}

uint64_t sub_19F07A820()
{
  uint64_t v1 = sub_19F1DACDC();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19F07A8B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DACDC() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_19F079E40(a1, v4);
}

void *sub_19F07A920(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v34 = a4;
  id v35 = a2;
  uint64_t v7 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DACDC();
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v10, a1, v7, v13);
  uint64_t v16 = sub_19F1DAC9C();
  if (qword_1E946DB58 != -1) {
    uint64_t v16 = swift_once();
  }
  uint64_t v17 = *(void *)(qword_1E9498948 + 16);
  MEMORY[0x1F4188790](v16);
  *(&v34 - 2) = a1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v17 + 24));
  sub_19F07ADA0((uint64_t *)(v17 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 24));
  char v18 = v39;
  swift_release();
  if (a5)
  {
    if (qword_1EB392AA8 != -1) {
      swift_once();
    }
    uint64_t v19 = (void *)qword_1EB392860;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_19F24EAD0;
    id v21 = v19;
    long long v44 = sub_19EEC3F3C(0, 40, 0, MEMORY[0x1E4FBC860]);
    v22._object = (void *)0x800000019F26F540;
    v22._countAndFlagsBits = 0xD000000000000027;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v43 = MEMORY[0x1E4FBB390];
    v42[0] = v18;
    sub_19EEBCD00((uint64_t)v42, (uint64_t)v38);
    long long v36 = 0u;
    long long v37 = 0u;
    sub_19EEC3E70((uint64_t)v38, (uint64_t)&v36);
    char v41 = 0;
    long long v39 = v36;
    long long v40 = v37;
    long long v23 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v23 = sub_19EEC3F3C(0, v23[2] + 1, 1, v23);
    }
    unint64_t v25 = v23[2];
    unint64_t v24 = v23[3];
    if (v25 >= v24 >> 1) {
      long long v23 = sub_19EEC3F3C((void *)(v24 > 1), v25 + 1, 1, v23);
    }
    _OWORD v23[2] = v25 + 1;
    uint64_t v26 = &v23[5 * v25];
    long long v27 = v39;
    long long v28 = v40;
    *((unsigned char *)v26 + 64) = v41;
    *((_OWORD *)v26 + 2) = v27;
    *((_OWORD *)v26 + 3) = v28;
    long long v44 = v23;
    sub_19EEBD664((uint64_t)v42, &qword_1EB393260);
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    *(void *)(v20 + 32) = v44;
    *(void *)&long long v39 = v21;
    LOBYTE(v36) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v20, (JetEngine::LogMessageLevel)&v36);

    swift_bridgeObjectRelease();
  }
  sub_19F1DAC3C();
  long long v30 = (void *)sub_19F1DAC5C();
  id v31 = objc_msgSend(v35, sel_requestByEncodingRequest_parameters_, v30, 0, v34);

  sub_19EE47F50(v31);
  uint64_t v32 = sub_19F07A560((uint64_t)sub_19F079D30, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v32;
}

uint64_t sub_19F07ADA0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_19EF57510(*(void *)(v2 + 16), *a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_19F07ADE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F07AE48()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F07AE88(uint64_t *a1)
{
  return sub_19F07A440(a1, *(void (**)(uint64_t *, double))(v1 + 16));
}

uint64_t sub_19F07AE94(uint64_t a1)
{
  return sub_19F12C408(a1, v1);
}

ValueMetadata *type metadata accessor for RemoteFetcher.CachingPolicy()
{
  return &type metadata for RemoteFetcher.CachingPolicy;
}

void *assignWithCopy for IsSignedInFieldProvider(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t assignWithTake for IsSignedInFieldProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for IsSignedInFieldProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IsSignedInFieldProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IsSignedInFieldProvider()
{
  return &type metadata for IsSignedInFieldProvider;
}

uint64_t sub_19F07B004(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return MEMORY[0x1F4188298](sub_19EE3DEA0, 0, 0);
}

uint64_t sub_19F07B024()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F07B05C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F07B09C()
{
  uint64_t v2 = sub_19F09B4B4(2);
  if (!v1)
  {
    unint64_t v4 = v3;
    unint64_t v5 = v3 >> 62;
    uint64_t v0 = v2;
    switch(v3 >> 62)
    {
      case 1uLL:
        LODWORD(v6) = HIDWORD(v2) - v2;
        if (__OFSUB__(HIDWORD(v2), v2))
        {
          __break(1u);
LABEL_21:
          __break(1u);
        }
        else
        {
          uint64_t v6 = (int)v6;
LABEL_7:
          if (v6 != 2)
          {
LABEL_14:
            sub_19EF87378();
            swift_allocError();
            *uint64_t v15 = 1;
            swift_willThrow();
            sub_19EEA072C(v0, v4);
            return v0;
          }
          if (!v5)
          {
            sub_19EEA072C(v2, v3);
            return v0;
          }
          if (v5 != 1)
          {
            uint64_t v17 = *(void *)(v2 + 16);
            swift_retain();
            swift_retain();
            uint64_t v18 = sub_19F1DB04C();
            if (!v18)
            {
LABEL_26:
              sub_19F1DB06C();
              __break(1u);
              JUMPOUT(0x19F07B274);
            }
            uint64_t v19 = v18;
            uint64_t v20 = sub_19F1DB07C();
            BOOL v9 = __OFSUB__(v17, v20);
            uint64_t v21 = v17 - v20;
            if (!v9)
            {
              sub_19F1DB06C();
              uint64_t v22 = *(unsigned __int16 *)(v19 + v21);
              swift_release();
              swift_release();
              sub_19EEA072C(v0, v4);
              return v22;
            }
            goto LABEL_23;
          }
          if ((int)v2 <= v2 >> 32)
          {
            sub_19EEA0784(v2, v3);
            uint64_t v10 = sub_19F1DB04C();
            if (!v10)
            {
LABEL_25:
              sub_19F1DB06C();
              __break(1u);
              goto LABEL_26;
            }
            uint64_t v11 = v10;
            uint64_t v12 = sub_19F1DB07C();
            uint64_t v13 = (int)v0 - v12;
            if (!__OFSUB__((int)v0, v12))
            {
              sub_19F1DB06C();
              uint64_t v14 = *(unsigned __int16 *)(v11 + v13);
              sub_19EEA072C(v0, v4);
              sub_19EEA072C(v0, v4);
              return v14;
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      case 2uLL:
        uint64_t v8 = *(void *)(v2 + 16);
        uint64_t v7 = *(void *)(v2 + 24);
        BOOL v9 = __OFSUB__(v7, v8);
        uint64_t v6 = v7 - v8;
        if (!v9) {
          goto LABEL_7;
        }
        goto LABEL_21;
      case 3uLL:
        goto LABEL_14;
      default:
        uint64_t v6 = BYTE6(v3);
        goto LABEL_7;
    }
  }
  return v0;
}

BOOL static JetPackageFormatError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetPackageFormatError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JetPackageFormatError.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F07B310()
{
  unint64_t result = qword_1E94737D0;
  if (!qword_1E94737D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94737D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JetPackageFormatError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F07B430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageFormatError()
{
  return &type metadata for JetPackageFormatError;
}

uint64_t sub_19F07B468()
{
  if (*(unsigned char *)(v0 + 56))
  {
    sub_19F07C0E8();
    swift_allocError();
    *int v3 = 0;
    swift_willThrow();
    return v2;
  }
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(8, v4, v5);
  if (v1) {
    return v2;
  }
  uint64_t v8 = v6;
  unint64_t v9 = v7;
  if (qword_1E946FCC0 != -1) {
    swift_once();
  }
  if ((sub_19EE7C7FC(v8, v9, qword_1EB394F50, *(unint64_t *)algn_1EB394F58) & 1) == 0)
  {
    sub_19F07C0E8();
    swift_allocError();
    *uint64_t v16 = 1;
    swift_willThrow();
    sub_19EEA072C(v8, v9);
    return v2;
  }
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(1, v10, v11);
  unint64_t v14 = v13;
  uint64_t v15 = v12;
  uint64_t v2 = 0;
  switch(v13 >> 62)
  {
    case 1uLL:
      if ((int)v12 > v12 >> 32)
      {
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      sub_19EEA0784(v12, v13);
      uint64_t v18 = sub_19F1DB04C();
      if (!v18)
      {
LABEL_22:
        sub_19F1DB06C();
        __break(1u);
LABEL_23:
        sub_19F1DB06C();
        __break(1u);
        JUMPOUT(0x19F07B70CLL);
      }
      uint64_t v19 = v18;
      uint64_t v20 = sub_19F1DB07C();
      uint64_t v21 = (int)v15 - v20;
      if (__OFSUB__((int)v15, v20))
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      sub_19F1DB06C();
      uint64_t v2 = *(unsigned __int8 *)(v19 + v21);
      sub_19EEA072C(v15, v14);
LABEL_18:
      sub_19EEA072C(v15, v14);
      sub_19EEA072C(v8, v9);
      *(unsigned char *)(v0 + 56) = 1;
      return v2;
    case 2uLL:
      uint64_t v22 = *(void *)(v12 + 16);
      swift_retain();
      swift_retain();
      uint64_t v23 = sub_19F1DB04C();
      if (!v23) {
        goto LABEL_23;
      }
      uint64_t v24 = v23;
      uint64_t v25 = sub_19F1DB07C();
      BOOL v26 = __OFSUB__(v22, v25);
      uint64_t v27 = v22 - v25;
      if (v26) {
        goto LABEL_20;
      }
      sub_19F1DB06C();
      uint64_t v2 = *(unsigned __int8 *)(v24 + v27);
      swift_release();
      swift_release();
      goto LABEL_18;
    case 3uLL:
      goto LABEL_18;
    default:
      uint64_t v2 = v12;
      goto LABEL_18;
  }
}

uint64_t sub_19F07B71C@<X0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 56) == 1)
  {
    uint64_t v4 = v1;
    uint64_t v5 = (void *)(v1 + 16);
    uint64_t v6 = *(void *)(v1 + 40);
    uint64_t v7 = *(void *)(v4 + 48);
    __swift_project_boxed_opaque_existential_1(v5, v6);
    uint64_t result = sub_19EF872C4(v6, v7);
    if (!v2)
    {
      unsigned int v9 = result;
      uint64_t v10 = *(void *)(v4 + 40);
      uint64_t v11 = *(void *)(v4 + 48);
      __swift_project_boxed_opaque_existential_1(v5, v10);
      uint64_t v12 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v11 + 24))(v9, v10, v11);
      unint64_t v14 = v13;
      uint64_t v15 = v12;
      switch(v13 >> 62)
      {
        case 1uLL:
          LODWORD(v16) = HIDWORD(v12) - v12;
          if (__OFSUB__(HIDWORD(v12), v12))
          {
            __break(1u);
LABEL_15:
            __break(1u);
            JUMPOUT(0x19F07B950);
          }
          uint64_t v16 = (int)v16;
LABEL_10:
          if (v16 == v9)
          {
LABEL_11:
            sub_19F07B960(v12, v13, (uint64_t)v31);
            uint64_t result = sub_19EEA072C(v15, v14);
            char v21 = v31[0];
            char v22 = v31[1];
            char v23 = v31[2];
            char v24 = v31[3];
            char v25 = v31[4];
            __int16 v26 = v33;
            uint64_t v27 = v35;
            long long v28 = v32;
            long long v29 = v34;
            *(unsigned char *)(v4 + 56) = 2;
            *(unsigned char *)a1 = v21;
            *(unsigned char *)(a1 + 1) = v22;
            *(unsigned char *)(a1 + 2) = v23;
            *(unsigned char *)(a1 + 3) = v24;
            *(unsigned char *)(a1 + 4) = v25;
            *(_OWORD *)(a1 + 8) = v28;
            *(_WORD *)(a1 + 24) = v26;
            *(_OWORD *)(a1 + 32) = v29;
            *(void *)(a1 + 48) = v27;
          }
          else
          {
LABEL_13:
            sub_19F07C0E8();
            swift_allocError();
            *long long v30 = 2;
            swift_willThrow();
            uint64_t result = sub_19EEA072C(v15, v14);
          }
          break;
        case 2uLL:
          uint64_t v19 = *(void *)(v12 + 16);
          uint64_t v18 = *(void *)(v12 + 24);
          BOOL v20 = __OFSUB__(v18, v19);
          uint64_t v16 = v18 - v19;
          if (!v20) {
            goto LABEL_10;
          }
          goto LABEL_15;
        case 3uLL:
          if (v9) {
            goto LABEL_13;
          }
          goto LABEL_11;
        default:
          uint64_t v16 = BYTE6(v13);
          goto LABEL_10;
      }
    }
  }
  else
  {
    sub_19F07C0E8();
    swift_allocError();
    *uint64_t v17 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_19F07B960@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v9 = type metadata accessor for DataInputStream();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = (void *)v10;
  unint64_t v12 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        uint64_t v32 = v11[2];
        unint64_t v33 = v11[3];
        unint64_t v34 = v33 >> 62;
      }
      else
      {
        unint64_t v12 = HIDWORD(a1) - (int)a1;
LABEL_6:
        sub_19EEA0784(a1, a2);
LABEL_7:
        void v11[4] = v12;
        uint64_t v15 = sub_19F09B4B4(2);
        if (v3) {
          return swift_release();
        }
        uint64_t v18 = v15;
        unint64_t v19 = v16;
        sub_19F07BE28(v15, v16, v57);
        uint64_t v56 = a3;
        sub_19EEA072C(v18, v19);
        char v20 = v57[0];
        int v21 = BYTE1(v57[0]);
        uint64_t v22 = sub_19F09B4B4(2);
        unint64_t v24 = v23;
        char v55 = v20;
        int v60 = v21;
        sub_19F07BE28(v22, v23, v57);
        sub_19EEA072C(v22, v24);
        LOBYTE(a3) = v57[0];
        char v4 = BYTE1(v57[0]);
        uint64_t v25 = sub_19F09B4B4(2);
        unint64_t v27 = v26;
        sub_19F07BE28(v25, v26, v57);
        uint64_t v5 = 0;
        sub_19EEA072C(v25, v27);
        if ((v57[0] & 0x100) != 0)
        {
          sub_19F07C0E8();
          swift_allocError();
          *long long v28 = 2;
          swift_willThrow();
          return swift_release();
        }
        char v29 = v57[0];
        unint64_t v12 = (unint64_t)&off_1EF13D898;
        uint64_t v58 = v9;
        uint64_t v59 = &off_1EF13D898;
        v57[0] = v11;
        swift_retain();
        long long v30 = sub_19F07C13C(v57);
        a1 = v31;
        uint64_t v53 = v30;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
        uint64_t v32 = v11[2];
        unint64_t v33 = v11[3];
        unint64_t v34 = v33 >> 62;
        LOWORD(v10) = 0;
        char v54 = v29;
        switch(v33 >> 62)
        {
          case 1uLL:
            LODWORD(v35) = HIDWORD(v32) - v32;
            if (__OFSUB__(HIDWORD(v32), v32))
            {
              __break(1u);
LABEL_40:
              __break(1u);
LABEL_41:
              __break(1u);
LABEL_42:
              __break(1u);
              JUMPOUT(0x19F07BDF8);
            }
            uint64_t v35 = (int)v35;
LABEL_16:
            if (v35)
            {
              LOWORD(v10) = sub_19F07B09C();
              goto LABEL_21;
            }
            LOWORD(v10) = 0;
            break;
          case 2uLL:
            uint64_t v37 = *(void *)(v32 + 16);
            uint64_t v36 = *(void *)(v32 + 24);
            BOOL v38 = __OFSUB__(v36, v37);
            uint64_t v35 = v36 - v37;
            if (!v38) {
              goto LABEL_16;
            }
            goto LABEL_40;
          case 3uLL:
            goto LABEL_22;
          default:
            uint64_t v35 = BYTE6(v33);
            goto LABEL_16;
        }
      }
      break;
    case 2uLL:
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      unint64_t v12 = v13 - v14;
      if (!__OFSUB__(v13, v14)) {
        goto LABEL_6;
      }
      goto LABEL_20;
    case 3uLL:
      goto LABEL_7;
    default:
      unint64_t v12 = BYTE6(a2);
      goto LABEL_7;
  }
LABEL_22:
  __int16 v52 = v10;
  switch(v34)
  {
    case 0uLL:
      uint64_t v39 = BYTE6(v33);
      goto LABEL_27;
    case 1uLL:
      LODWORD(v39) = HIDWORD(v32) - v32;
      if (__OFSUB__(HIDWORD(v32), v32)) {
        goto LABEL_41;
      }
      uint64_t v39 = (int)v39;
LABEL_27:
      if (!v39)
      {
LABEL_31:
        uint64_t result = swift_release();
        uint64_t v47 = 0;
        uint64_t v48 = 0;
        unint64_t v49 = 0xF000000000000000;
        goto LABEL_32;
      }
      uint64_t v58 = v9;
      uint64_t v59 = (_UNKNOWN **)v12;
      v57[0] = v11;
      swift_retain();
      uint64_t v43 = sub_19F09B4B4(2);
      if (v5)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
      }
      uint64_t v45 = v43;
      unint64_t v46 = v44;
      sub_19F07BE28(v43, v44, v61);
      sub_19EEA072C(v45, v46);
      if (v61[1])
      {
        swift_release();
LABEL_35:
        uint64_t v47 = 0;
        uint64_t v48 = 0;
        unint64_t v49 = 0xF000000000000000;
        goto LABEL_36;
      }
      uint64_t v47 = v61[0];
      uint64_t v48 = sub_19F07C370(v57);
      unint64_t v49 = v51;
      swift_release();
      if (v49 >> 60 == 15) {
        goto LABEL_35;
      }
LABEL_36:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
LABEL_32:
      char v50 = v60;
      *(unsigned char *)uint64_t v56 = v55;
      *(unsigned char *)(v56 + 1) = v50;
      *(unsigned char *)(v56 + 2) = a3;
      *(unsigned char *)(v56 + 3) = v4;
      *(unsigned char *)(v56 + 4) = v54;
      *(void *)(v56 + 8) = v53;
      *(void *)(v56 + 16) = a1;
      *(_WORD *)(v56 + 24) = v52;
      *(void *)(v56 + 32) = v47;
      *(void *)(v56 + 40) = v48;
      *(void *)(v56 + 48) = v49;
      return result;
    case 2uLL:
      uint64_t v42 = v32 + 16;
      uint64_t v41 = *(void *)(v32 + 16);
      uint64_t v40 = *(void *)(v42 + 8);
      BOOL v38 = __OFSUB__(v40, v41);
      uint64_t v39 = v40 - v41;
      if (!v38) {
        goto LABEL_27;
      }
      goto LABEL_42;
    case 3uLL:
      goto LABEL_31;
    default:
      JUMPOUT(0);
  }
}

uint64_t sub_19F07BE28@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x19F07BF58);
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 == 2)
      {
        uint64_t result = sub_19F1DB47C();
        if (result == 1 && (uint64_t result = sub_19F1DB47C(), (_BYTE)result))
        {
          *a3 = result - 1;
          a3[1] = 0;
        }
        else
        {
          *(_WORD *)a3 = 256;
        }
      }
      else
      {
LABEL_10:
        sub_19F0E88E4(0xD000000000000029, 0x800000019F26F5F0);
        sub_19F07C0E8();
        swift_allocError();
        *uint64_t v9 = 2;
        return swift_willThrow();
      }
      return result;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_10;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t type metadata accessor for JetPackageFormatParser()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for JetPackageFormatParser.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F07C058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageFormatParser.State()
{
  return &type metadata for JetPackageFormatParser.State;
}

unint64_t sub_19F07C094()
{
  unint64_t result = qword_1E94737D8;
  if (!qword_1E94737D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94737D8);
  }
  return result;
}

unint64_t sub_19F07C0E8()
{
  unint64_t result = qword_1E946C8F8[0];
  if (!qword_1E946C8F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E946C8F8);
  }
  return result;
}

char *sub_19F07C13C(void *a1)
{
  uint64_t v3 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  unsigned __int16 v8 = sub_19EF87264(v6, v7);
  if (!v1)
  {
    unsigned __int16 v10 = v8;
    if (v8)
    {
      uint64_t v11 = a1[3];
      uint64_t v12 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v11);
      uint64_t v13 = v10;
      uint64_t v14 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v12 + 24))(v10, v11, v12);
      unint64_t v16 = v15;
      uint64_t v17 = v14;
      switch(v15 >> 62)
      {
        case 1uLL:
          LODWORD(v18) = HIDWORD(v14) - v14;
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_15:
            __break(1u);
            JUMPOUT(0x19F07C360);
          }
          uint64_t v18 = (int)v18;
LABEL_11:
          if (v18 == v13)
          {
            v23[0] = v14;
            v23[1] = v15;
            sub_19F1DBDCC();
            sub_19F07C50C();
            uint64_t v5 = (char *)sub_19F1DBDAC();
            sub_19EEA072C(v17, v16);
          }
          else
          {
LABEL_13:
            sub_19F0E88E4(0xD000000000000033, 0x800000019F26F620);
            sub_19F07C0E8();
            swift_allocError();
            *uint64_t v22 = 2;
            swift_willThrow();
            sub_19EEA072C(v17, v16);
          }
          break;
        case 2uLL:
          uint64_t v20 = *(void *)(v14 + 16);
          uint64_t v19 = *(void *)(v14 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          uint64_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_11;
          }
          goto LABEL_15;
        case 3uLL:
          goto LABEL_13;
        default:
          uint64_t v18 = BYTE6(v15);
          goto LABEL_11;
      }
    }
    else
    {
      return 0;
    }
  }
  return v5;
}

uint64_t sub_19F07C370(void *a1)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v6 = v3;
  uint64_t v7 = (uint64_t)v5;
  unsigned __int16 v8 = sub_19EF87264(v6, v4);
  if (!v1)
  {
    unsigned __int16 v10 = v8;
    if (v8)
    {
      uint64_t v11 = a1[3];
      uint64_t v12 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v11);
      uint64_t v13 = v10;
      uint64_t v14 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v12 + 24))(v10, v11, v12);
      unint64_t v16 = v15;
      uint64_t v7 = v14;
      switch(v15 >> 62)
      {
        case 1uLL:
          LODWORD(v17) = HIDWORD(v14) - v14;
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_14:
            __break(1u);
            JUMPOUT(0x19F07C4FCLL);
          }
          uint64_t v17 = (int)v17;
LABEL_11:
          if (v17 != v13)
          {
LABEL_12:
            sub_19F0E88E4(0xD000000000000031, 0x800000019F26F5B0);
            sub_19F07C0E8();
            swift_allocError();
            *BOOL v21 = 2;
            swift_willThrow();
            sub_19EEA072C(v7, v16);
          }
          break;
        case 2uLL:
          uint64_t v19 = *(void *)(v14 + 16);
          uint64_t v18 = *(void *)(v14 + 24);
          BOOL v20 = __OFSUB__(v18, v19);
          uint64_t v17 = v18 - v19;
          if (!v20) {
            goto LABEL_11;
          }
          goto LABEL_14;
        case 3uLL:
          goto LABEL_12;
        default:
          uint64_t v17 = BYTE6(v15);
          goto LABEL_11;
      }
    }
    else
    {
      return 0;
    }
  }
  return v7;
}

unint64_t sub_19F07C50C()
{
  unint64_t result = qword_1E946FD38;
  if (!qword_1E946FD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946FD38);
  }
  return result;
}

uint64_t Optional<A>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v10 = sub_19F1DCAAC();
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = *a2;
  sub_19EEBF040(a1, (uint64_t)v24);
  uint64_t v14 = v25;
  if (!v25)
  {
    sub_19EEBF108((uint64_t)v24);
    goto LABEL_6;
  }
  uint64_t v21 = v10;
  uint64_t v15 = a5;
  uint64_t v16 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 104);
  uint64_t v18 = v16;
  a5 = v15;
  char v19 = v17(v14, v18);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  if (v19)
  {
LABEL_6:
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a5, 1, 1, a3);
  }
  sub_19EEC355C(a1, (uint64_t)v24);
  uint64_t v27 = v13;
  (*(void (**)(void *, uint64_t *, uint64_t))(v23 + 8))(v24, &v27, a3);
  uint64_t result = sub_19EEC3418(a1);
  if (!v5)
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(v12, 0, 1, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v15, v12, v21);
  }
  return result;
}

uint64_t sub_19F07C79C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return Optional<A>.init(deserializing:using:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8), a5);
}

uint64_t assignWithTake for LocalizedStringsJSONObject(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_19F07C7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(v13, a1, a2, v5, v6);
  sub_19EEBF040((uint64_t)v13, (uint64_t)v10);
  uint64_t v7 = v11;
  if (v11)
  {
    uint64_t v8 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  else
  {
    sub_19EEBD664((uint64_t)v10, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418((uint64_t)v13);
  return v7;
}

uint64_t sub_19F07C8F0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t sub_19F07C944()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

id sub_19F07C97C()
{
  id result = objc_msgSend(v0, sel_context);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

    long long v4 = JSValueToStringCopy(v3, (JSValueRef)objc_msgSend(v0, sel_JSValueRef), 0);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = sub_19EF4D574(v4);
      JSStringRelease(v5);
    }
    else
    {
      sub_19EF600C0();
      uint64_t v7 = (void *)swift_allocError();
      uint64_t v9 = v8;
      id v10 = v0;
      JSError.init(badValue:expected:)(v10, v9);
      swift_willThrow();
      id v11 = objc_msgSend(v10, sel_toString);
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v6 = sub_19F1DBD7C();
      }
      else
      {

        return 0;
      }
    }
    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19F07CAC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventSubscription();
  uint64_t v3 = swift_bridgeObjectRetain();
  if (MEMORY[0x19F3C6550](v3, v2))
  {
    swift_beginAccess();
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v5 = i - 4;
      char v6 = sub_19F1DC1FC();
      sub_19F1DC19C();
      if (v6)
      {
        swift_retain();
        uint64_t v7 = i - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        sub_19F1DCD5C();
        uint64_t v7 = i - 3;
        if (__OFADD__(v5, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      sub_19F1DC27C();
      swift_getWitnessTable();
      swift_getWitnessTable();
      sub_19F1DC6DC();
      if (v9 != 1)
      {
        swift_beginAccess();
        sub_19F1DC24C();
        swift_endAccess();
        swift_release();
      }
      swift_release();
      if (v7 == MEMORY[0x19F3C6550](a1, v2)) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F07CCDC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t AsyncEvent.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19F07CDCC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F07CE0C()
{
  return objectdestroy_8Tm_1(MEMORY[0x1E4FBC8D0]);
}

uint64_t method lookup function for AsyncEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsyncEvent);
}

uint64_t dispatch thunk of AsyncEvent.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_19F07CE50()
{
  return objectdestroy_8Tm_1(MEMORY[0x1E4FBC898]);
}

uint64_t sub_19F07CE68()
{
  return sub_19F07CAC0(*(void *)(v0 + 16));
}

void *assignWithCopy for StandaloneObjectGraphBuilder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for StandaloneObjectGraphBuilder(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StandaloneObjectGraphBuilder()
{
  return &type metadata for StandaloneObjectGraphBuilder;
}

void sub_19F07CF20(void *a1)
{
}

void sub_19F07CF48(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 2;
    sub_19EEDA6F8(v3, 0, MEMORY[0x1E4FBC8A8]);
    id v4 = a1;
    sub_19EEA7628(v3, 0, MEMORY[0x1E4FBC898]);
    os_unfair_lock_unlock(v2);
    uint64_t v5 = v3[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v3 + 4);
      uint64_t v18 = v3;
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v26, &qword_1E946D620);
        sub_19EEC3ED8((uint64_t)v26, (uint64_t)v23, &qword_1E946D620);
        if (v25)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v7 = a1;
          id v8 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v9 = v23[2];
          uint64_t v10 = v23[3];
          sub_19EEBB420(&v24, (uint64_t)v20);
          uint64_t v11 = v21;
          uint64_t v12 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          uint64_t v13 = (void *)swift_allocObject();
          long long v13[2] = v9;
          void v13[3] = v10;
          v13[4] = a1;
          uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 8);
          id v15 = a1;
          swift_retain();
          v14(sub_19F0844A4, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19EEBD664((uint64_t)v26, &qword_1E946D620);
        v6 += 80;
        --v5;
      }
      while (v5);
      uint64_t v16 = (void (*)(id))MEMORY[0x1E4FBC898];
      uint64_t v17 = v18;
    }
    else
    {
      uint64_t v16 = (void (*)(id))MEMORY[0x1E4FBC898];
      uint64_t v17 = v3;
    }
    sub_19EEA7628(v17, 0, v16);
  }
}

void sub_19F07D20C(void *a1)
{
}

void sub_19F07D23C(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 2;
    sub_19EEA76B0(v3, 0);
    id v4 = a1;
    sub_19EEA7628(v3, 0, MEMORY[0x1E4FBC8D0]);
    os_unfair_lock_unlock(v2);
    uint64_t v5 = v3[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v3 + 4);
      uint64_t v18 = v3;
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v26, &qword_1EB392370);
        sub_19EEC3ED8((uint64_t)v26, (uint64_t)v23, &qword_1EB392370);
        if (v25)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v7 = a1;
          id v8 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v9 = v23[2];
          uint64_t v10 = v23[3];
          sub_19EEBB420(&v24, (uint64_t)v20);
          uint64_t v11 = v21;
          uint64_t v12 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          uint64_t v13 = (void *)swift_allocObject();
          long long v13[2] = v9;
          void v13[3] = v10;
          v13[4] = a1;
          uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 8);
          id v15 = a1;
          swift_retain();
          v14(sub_19EEA4ADC, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19EEBD664((uint64_t)v26, &qword_1EB392370);
        v6 += 80;
        --v5;
      }
      while (v5);
      uint64_t v16 = (void (*)(id))MEMORY[0x1E4FBC8D0];
      uint64_t v17 = v18;
    }
    else
    {
      uint64_t v16 = (void (*)(id))MEMORY[0x1E4FBC8D0];
      uint64_t v17 = v3;
    }
    sub_19EEA7628(v17, 0, v16);
  }
}

void sub_19F07D4EC(void *a1)
{
}

void sub_19F07D51C(void *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  id v8 = (os_unfair_lock_s *)(*(void *)(v5 + 16) + 16);
  os_unfair_lock_lock(v8);
  swift_beginAccess();
  sub_19EEC3ED8(v5 + 24, (uint64_t)v33, a2);
  if (v34 == 3)
  {

    os_unfair_lock_unlock(v8);
  }
  else if (v34)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v9 = v33[0];
    v31[0] = a1;
    char v32 = 2;
    swift_beginAccess();
    id v10 = a1;
    sub_19EE6EEAC((uint64_t)v31, v5 + 24, a2);
    swift_endAccess();
    os_unfair_lock_unlock(v8);
    uint64_t v11 = v9;
    uint64_t v12 = v9[2];
    if (v12)
    {
      uint64_t v13 = (uint64_t)(v11 + 4);
      do
      {
        sub_19EEC3ED8(v13, (uint64_t)v31, a3);
        sub_19EEC3ED8((uint64_t)v31, (uint64_t)v28, a3);
        if (v30)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v14 = a1;
          id v15 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v17 = v28[2];
          uint64_t v16 = v28[3];
          sub_19EEBB420(&v29, (uint64_t)v25);
          uint64_t v18 = v26;
          uint64_t v19 = v27;
          __swift_project_boxed_opaque_existential_1(v25, v26);
          BOOL v20 = (void *)swift_allocObject();
          v20[2] = v17;
          void v20[3] = v16;
          v20[4] = a1;
          uint64_t v21 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v19 + 8);
          id v22 = a1;
          swift_retain();
          v21(a5, v20, v18, v19);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
        }
        sub_19EEBD664((uint64_t)v31, a3);
        v13 += 80;
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F07D7A8(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 2;
    sub_19EEDA6F8(v3, 0, MEMORY[0x1E4FBC900]);
    id v4 = a1;
    sub_19EEA7628(v3, 0, MEMORY[0x1E4FBC8F8]);
    os_unfair_lock_unlock(v2);
    uint64_t v5 = v3[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v3 + 4);
      uint64_t v18 = v3;
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v26, (uint64_t *)&unk_1EB3909D0);
        sub_19EEC3ED8((uint64_t)v26, (uint64_t)v23, (uint64_t *)&unk_1EB3909D0);
        if (v25)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v7 = a1;
          id v8 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v9 = v23[2];
          uint64_t v10 = v23[3];
          sub_19EEBB420(&v24, (uint64_t)v20);
          uint64_t v11 = v21;
          uint64_t v12 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          uint64_t v13 = (void *)swift_allocObject();
          long long v13[2] = v9;
          void v13[3] = v10;
          v13[4] = a1;
          uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 8);
          id v15 = a1;
          swift_retain();
          v14(sub_19F0844A4, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19EEBD664((uint64_t)v26, (uint64_t *)&unk_1EB3909D0);
        v6 += 80;
        --v5;
      }
      while (v5);
      uint64_t v16 = (void (*)(id))MEMORY[0x1E4FBC8F8];
      uint64_t v17 = v18;
    }
    else
    {
      uint64_t v16 = (void (*)(id))MEMORY[0x1E4FBC8F8];
      uint64_t v17 = v3;
    }
    sub_19EEA7628(v17, 0, v16);
  }
}

void sub_19F07DA6C(void *a1)
{
}

void sub_19F07DA94(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v4 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v6);
  }
  else if (*(unsigned char *)(v4 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void **)(v4 + 24);
    *(void *)(v4 + 24) = a1;
    *(unsigned char *)(v4 + 32) = 2;
    sub_19EE907EC(v7, 0);
    id v8 = a1;
    sub_19EE9076C(v7, 0);
    os_unfair_lock_unlock(v6);
    uint64_t v9 = v7;
    uint64_t v10 = v7[2];
    if (v10)
    {
      uint64_t v11 = (uint64_t)v9 + 32;
      uint64_t v21 = v9;
      do
      {
        sub_19EEC3ED8(v11, (uint64_t)v30, a2);
        sub_19EEC3ED8((uint64_t)v30, (uint64_t)v27, a2);
        if (v29)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v12 = a1;
          id v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v15 = v27[2];
          uint64_t v14 = v27[3];
          sub_19EEBB420(&v28, (uint64_t)v24);
          uint64_t v16 = v25;
          uint64_t v17 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          uint64_t v18 = (void *)swift_allocObject();
          void v18[2] = v15;
          v18[3] = v14;
          v18[4] = a1;
          uint64_t v19 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v17 + 8);
          id v20 = a1;
          swift_retain();
          v19(a4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
        }
        sub_19EEBD664((uint64_t)v30, a2);
        v11 += 80;
        --v10;
      }
      while (v10);
      uint64_t v9 = v21;
    }
    sub_19EE9076C(v9, 0);
  }
}

void sub_19F07DCF0(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  if (*(unsigned char *)(v1 + 56) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 56))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void **)(v1 + 24);
    uint64_t v5 = *(void *)(v1 + 40);
    uint64_t v6 = *(void *)(v1 + 48);
    *(void *)(v1 + 24) = a1;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 56) = 2;
    sub_19F08439C(v4, v3, v5, v6, 0);
    id v7 = a1;
    sub_19EF58E88(v4, v3, v5, v6, 0);
    os_unfair_lock_unlock(v2);
    uint64_t v8 = v4[2];
    if (v8)
    {
      uint64_t v23 = v6;
      uint64_t v24 = v5;
      uint64_t v25 = v4;
      unint64_t v26 = v3;
      uint64_t v9 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v9, (uint64_t)v34, &qword_1E9471080);
        sub_19EEC3ED8((uint64_t)v34, (uint64_t)v31, &qword_1E9471080);
        if (v33)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v10 = a1;
          id v11 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v13 = v31[2];
          uint64_t v12 = v31[3];
          sub_19EEBB420(&v32, (uint64_t)v28);
          uint64_t v14 = v29;
          uint64_t v15 = v30;
          __swift_project_boxed_opaque_existential_1(v28, v29);
          uint64_t v16 = (void *)swift_allocObject();
          long long v16[2] = v13;
          void v16[3] = v12;
          v16[4] = a1;
          uint64_t v17 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v15 + 8);
          id v18 = a1;
          swift_retain();
          v17(sub_19F0844A4, v16, v14, v15);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
        }
        sub_19EEBD664((uint64_t)v34, &qword_1E9471080);
        v9 += 80;
        --v8;
      }
      while (v8);
      uint64_t v19 = v25;
      unint64_t v20 = v26;
      uint64_t v22 = v23;
      uint64_t v21 = v24;
    }
    else
    {
      uint64_t v19 = v4;
      unint64_t v20 = v3;
      uint64_t v21 = v5;
      uint64_t v22 = v6;
    }
    sub_19EF58E88(v19, v20, v21, v22, 0);
  }
}

void sub_19F07DFA8(void *a1)
{
}

void sub_19F07DFD0(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 40) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 40))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void **)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    *(void *)(v1 + 24) = a1;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 2;
    sub_19EEA9148(v3, v4, 0);
    id v5 = a1;
    sub_19EEA90BC(v3, v4, 0);
    os_unfair_lock_unlock(v2);
    uint64_t v6 = v3[2];
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v3 + 4);
      uint64_t v19 = v3;
      do
      {
        sub_19EEC3ED8(v7, (uint64_t)v27, (uint64_t *)&unk_1EB3912D0);
        sub_19EEC3ED8((uint64_t)v27, (uint64_t)v24, (uint64_t *)&unk_1EB3912D0);
        if (v26)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v8 = a1;
          id v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v10 = v4;
          uint64_t v12 = v24[2];
          uint64_t v11 = v24[3];
          sub_19EEBB420(&v25, (uint64_t)v21);
          uint64_t v13 = v22;
          uint64_t v14 = v23;
          __swift_project_boxed_opaque_existential_1(v21, v22);
          uint64_t v15 = (void *)swift_allocObject();
          long long v15[2] = v12;
          v15[3] = v11;
          v15[4] = a1;
          uint64_t v16 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v14 + 8);
          id v17 = a1;
          swift_retain();
          v16(sub_19F0844A4, v15, v13, v14);
          swift_release();
          uint64_t v4 = v10;
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
        }
        sub_19EEBD664((uint64_t)v27, (uint64_t *)&unk_1EB3912D0);
        v7 += 80;
        --v6;
      }
      while (v6);
      id v18 = v19;
    }
    else
    {
      id v18 = v3;
    }
    sub_19EEA90BC(v18, v4, 0);
  }
}

void sub_19F07E260(void *a1)
{
}

void sub_19F07E288(void *a1)
{
}

void sub_19F07E2B0(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v4 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v6);
  }
  else if (*(unsigned char *)(v4 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void **)(v4 + 24);
    *(void *)(v4 + 24) = a1;
    *(unsigned char *)(v4 + 32) = 2;
    sub_19F08415C(v7, 0);
    id v8 = a1;
    sub_19EE7F054(v7, 0);
    os_unfair_lock_unlock(v6);
    id v9 = v7;
    uint64_t v10 = v7[2];
    if (v10)
    {
      uint64_t v11 = (uint64_t)v9 + 32;
      uint64_t v21 = v9;
      do
      {
        sub_19EEC3ED8(v11, (uint64_t)v30, a2);
        sub_19EEC3ED8((uint64_t)v30, (uint64_t)v27, a2);
        if (v29)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v12 = a1;
          id v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v15 = v27[2];
          uint64_t v14 = v27[3];
          sub_19EEBB420(&v28, (uint64_t)v24);
          uint64_t v16 = v25;
          uint64_t v17 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          id v18 = (void *)swift_allocObject();
          void v18[2] = v15;
          v18[3] = v14;
          v18[4] = a1;
          uint64_t v19 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v17 + 8);
          id v20 = a1;
          swift_retain();
          v19(a4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
        }
        sub_19EEBD664((uint64_t)v30, a2);
        v11 += 80;
        --v10;
      }
      while (v10);
      id v9 = v21;
    }
    sub_19EE7F054(v9, 0);
  }
}

void sub_19F07E50C(void *a1)
{
}

void sub_19F07E534(void *a1)
{
}

void sub_19F07E55C(void *a1)
{
}

void sub_19F07E584(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v4 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v6);
  }
  else if (*(unsigned char *)(v4 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void **)(v4 + 24);
    *(void *)(v4 + 24) = a1;
    *(unsigned char *)(v4 + 32) = 2;
    sub_19EE907EC(v7, 0);
    id v8 = a1;
    sub_19EE9076C(v7, 0);
    os_unfair_lock_unlock(v6);
    id v9 = v7;
    uint64_t v10 = v7[2];
    if (v10)
    {
      uint64_t v11 = (uint64_t)(v9 + 4);
      do
      {
        sub_19EEC3ED8(v11, (uint64_t)v29, a2);
        sub_19EEC3ED8((uint64_t)v29, (uint64_t)v26, a2);
        if (v28)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v12 = a1;
          id v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v15 = v26[2];
          uint64_t v14 = v26[3];
          sub_19EEBB420(&v27, (uint64_t)v23);
          uint64_t v16 = v24;
          uint64_t v17 = v25;
          __swift_project_boxed_opaque_existential_1(v23, v24);
          id v18 = (void *)swift_allocObject();
          void v18[2] = v15;
          v18[3] = v14;
          v18[4] = a1;
          uint64_t v19 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v17 + 8);
          id v20 = a1;
          swift_retain();
          v19(a4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
        }
        sub_19EEBD664((uint64_t)v29, a2);
        v11 += 80;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F07E7DC(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 2;
    sub_19EEDA6F8(v3, 0, MEMORY[0x1E4FBC8A8]);
    id v4 = a1;
    sub_19EEA7628(v3, 0, MEMORY[0x1E4FBC898]);
    os_unfair_lock_unlock(v2);
    uint64_t v5 = v3[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v23, (uint64_t *)&unk_1E946D610);
        sub_19EEC3ED8((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_1E946D610);
        if (v22)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v7 = a1;
          id v8 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v9 = v20[2];
          uint64_t v10 = v20[3];
          sub_19EEBB420(&v21, (uint64_t)v17);
          uint64_t v11 = v18;
          uint64_t v12 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          id v13 = (void *)swift_allocObject();
          long long v13[2] = v9;
          void v13[3] = v10;
          v13[4] = a1;
          uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 8);
          id v15 = a1;
          swift_retain();
          v14(sub_19F0844A4, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19EEBD664((uint64_t)v23, (uint64_t *)&unk_1E946D610);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F07EA74(void *a1)
{
}

void sub_19F07EAA4(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 40) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 40))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void **)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    *(void *)(v1 + 24) = a1;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 2;
    sub_19F083468(v3, v4, 0);
    id v5 = a1;
    sub_19EF58938(v3, v4, 0);
    os_unfair_lock_unlock(v2);
    uint64_t v6 = v3[2];
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v7, (uint64_t)v24, &qword_1E9470FA0);
        sub_19EEC3ED8((uint64_t)v24, (uint64_t)v21, &qword_1E9470FA0);
        if (v23)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *id v8 = a1;
          id v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v10 = v21[2];
          uint64_t v11 = v21[3];
          sub_19EEBB420(&v22, (uint64_t)v18);
          uint64_t v12 = v19;
          uint64_t v13 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          uint64_t v14 = (void *)swift_allocObject();
          long long v14[2] = v10;
          uint64_t v14[3] = v11;
          v14[4] = a1;
          id v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v13 + 8);
          id v16 = a1;
          swift_retain();
          v15(sub_19F0844A4, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19EEBD664((uint64_t)v24, &qword_1E9470FA0);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F07ED1C(void *a1)
{
}

void sub_19F07ED4C(void *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a5;
  uint64_t v36 = a4;
  BOOL v38 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void **)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (id *)((char *)&v34 - v12);
  uint64_t v14 = (os_unfair_lock_s *)(v5[2] + 16);
  os_unfair_lock_lock(v14);
  uint64_t v15 = (uint64_t)v5 + *(void *)(*v5 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v15, (uint64_t)v13, a2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v14);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v17 = *v13;
    uint64_t v18 = v38;
    *uint64_t v11 = v38;
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    id v19 = v18;
    sub_19EE6EEAC((uint64_t)v11, v15, a2);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
    uint64_t v20 = v17;
    uint64_t v21 = v17[2];
    if (v21)
    {
      char v34 = v20;
      uint64_t v22 = (uint64_t)(v20 + 4);
      uint64_t v35 = (long long *)v45;
      do
      {
        sub_19EEC3ED8(v22, (uint64_t)v46, a3);
        sub_19EEC3ED8((uint64_t)v46, (uint64_t)v42, a3);
        if (v45[40])
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          char v23 = v38;
          *uint64_t v24 = v38;
          id v25 = v23;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v27 = v43;
          uint64_t v26 = v44;
          sub_19EEBB420(v35, (uint64_t)v39);
          uint64_t v28 = v40;
          uint64_t v29 = v41;
          __swift_project_boxed_opaque_existential_1(v39, v40);
          uint64_t v30 = (void *)swift_allocObject();
          _OWORD v30[2] = v27;
          v30[3] = v26;
          uint64_t v31 = v38;
          v30[4] = v38;
          long long v32 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v29 + 8);
          id v33 = v31;
          swift_retain();
          v32(v37, v30, v28, v29);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
        }
        sub_19EEBD664((uint64_t)v46, a3);
        v22 += 80;
        --v21;
      }
      while (v21);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F07F0BC(void *a1)
{
}

void sub_19F07F0E4(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 40) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 40))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void **)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    *(void *)(v1 + 24) = a1;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 2;
    sub_19F083B34(v3, v4, 0, (uint64_t (*)(id))sub_19EEA0784);
    id v5 = a1;
    sub_19F083B88(v3, v4, 0, (void (*)(id))sub_19EEA072C);
    os_unfair_lock_unlock(v2);
    uint64_t v6 = v3[2];
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v7, (uint64_t)v24, &qword_1E9473830);
        sub_19EEC3ED8((uint64_t)v24, (uint64_t)v21, &qword_1E9473830);
        if (v23)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v8 = a1;
          id v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v10 = v21[2];
          uint64_t v11 = v21[3];
          sub_19EEBB420(&v22, (uint64_t)v18);
          uint64_t v12 = v19;
          uint64_t v13 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          uint64_t v14 = (void *)swift_allocObject();
          long long v14[2] = v10;
          uint64_t v14[3] = v11;
          v14[4] = a1;
          uint64_t v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v13 + 8);
          id v16 = a1;
          swift_retain();
          v15(sub_19F0844A4, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19EEBD664((uint64_t)v24, &qword_1E9473830);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F07F384(void *a1)
{
}

void sub_19F07F3AC(void *a1)
{
}

void sub_19F07F3DC(void *a1)
{
}

void sub_19F07F40C(void *a1)
{
}

void sub_19F07F434(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v4 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v6);
  }
  else if (*(unsigned char *)(v4 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void **)(v4 + 24);
    *(void *)(v4 + 24) = a1;
    *(unsigned char *)(v4 + 32) = 2;
    sub_19EEA76B0(v7, 0);
    id v8 = a1;
    sub_19EEA7628(v7, 0, MEMORY[0x1E4FBC8D0]);
    os_unfair_lock_unlock(v6);
    id v9 = v7;
    uint64_t v10 = v7[2];
    if (v10)
    {
      uint64_t v11 = (uint64_t)(v9 + 4);
      do
      {
        sub_19EEC3ED8(v11, (uint64_t)v29, a2);
        sub_19EEC3ED8((uint64_t)v29, (uint64_t)v26, a2);
        if (v28)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v12 = a1;
          id v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v15 = v26[2];
          uint64_t v14 = v26[3];
          sub_19EEBB420(&v27, (uint64_t)v23);
          uint64_t v16 = v24;
          uint64_t v17 = v25;
          __swift_project_boxed_opaque_existential_1(v23, v24);
          uint64_t v18 = (void *)swift_allocObject();
          void v18[2] = v15;
          void v18[3] = v14;
          v18[4] = a1;
          uint64_t v19 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v17 + 8);
          id v20 = a1;
          swift_retain();
          v19(a4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
        }
        sub_19EEBD664((uint64_t)v29, a2);
        v11 += 80;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F07F6A0(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 48) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 48))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    unint64_t v4 = *(void *)(v1 + 32);
    unint64_t v3 = *(void **)(v1 + 40);
    id v5 = *(void **)(v1 + 24);
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 48) = 2;
    sub_19F08421C(v5, v4, v3, 0);
    id v6 = a1;
    sub_19EF58CA0(v5, v4, v3, 0);
    os_unfair_lock_unlock(v2);
    uint64_t v7 = v5[2];
    if (v7)
    {
      uint64_t v8 = (uint64_t)(v5 + 4);
      do
      {
        sub_19EEC3ED8(v8, (uint64_t)v25, &qword_1EB390C20);
        sub_19EEC3ED8((uint64_t)v25, (uint64_t)v22, &qword_1EB390C20);
        if (v24)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *id v9 = a1;
          id v10 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v11 = v22[2];
          uint64_t v12 = v22[3];
          sub_19EEBB420(&v23, (uint64_t)v19);
          uint64_t v13 = v20;
          uint64_t v14 = v21;
          __swift_project_boxed_opaque_existential_1(v19, v20);
          uint64_t v15 = (void *)swift_allocObject();
          long long v15[2] = v11;
          v15[3] = v12;
          v15[4] = a1;
          uint64_t v16 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v14 + 8);
          id v17 = a1;
          swift_retain();
          v16(sub_19F0844A4, v15, v13, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        }
        sub_19EEBD664((uint64_t)v25, &qword_1EB390C20);
        v8 += 80;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F07F928(void *a1)
{
}

void sub_19F07F958(void *a1)
{
}

void sub_19F07F988(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 33) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 33))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    uint64_t v4 = *(unsigned __int8 *)(v1 + 32);
    *(_WORD *)(v1 + 32) = 512;
    sub_19F083F88(v3, v4, 0);
    id v5 = a1;
    sub_19EE6F32C(v3, v4, 0);
    os_unfair_lock_unlock(v2);
    uint64_t v6 = v3[2];
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v7, (uint64_t)v24, &qword_1E9471040);
        sub_19EEC3ED8((uint64_t)v24, (uint64_t)v21, &qword_1E9471040);
        if (v23)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v8 = a1;
          id v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v10 = v21[2];
          uint64_t v11 = v21[3];
          sub_19EEBB420(&v22, (uint64_t)v18);
          uint64_t v12 = v19;
          uint64_t v13 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          uint64_t v14 = (void *)swift_allocObject();
          long long v14[2] = v10;
          uint64_t v14[3] = v11;
          v14[4] = a1;
          uint64_t v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v13 + 8);
          id v16 = a1;
          swift_retain();
          v15(sub_19F0844A4, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19EEBD664((uint64_t)v24, &qword_1E9471040);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F07FC04(void *a1)
{
}

void sub_19F07FC34(void *a1)
{
}

void sub_19F07FC5C(void *a1)
{
}

void sub_19F07FC84(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v4 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v6);
  }
  else if (*(unsigned char *)(v4 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void **)(v4 + 24);
    *(void *)(v4 + 24) = a1;
    *(unsigned char *)(v4 + 32) = 2;
    sub_19F08415C(v7, 0);
    id v8 = a1;
    sub_19EE7F054(v7, 0);
    os_unfair_lock_unlock(v6);
    id v9 = v7;
    uint64_t v10 = v7[2];
    if (v10)
    {
      uint64_t v11 = (uint64_t)(v9 + 4);
      do
      {
        sub_19EEC3ED8(v11, (uint64_t)v29, a2);
        sub_19EEC3ED8((uint64_t)v29, (uint64_t)v26, a2);
        if (v28)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v12 = a1;
          id v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v15 = v26[2];
          uint64_t v14 = v26[3];
          sub_19EEBB420(&v27, (uint64_t)v23);
          uint64_t v16 = v24;
          uint64_t v17 = v25;
          __swift_project_boxed_opaque_existential_1(v23, v24);
          uint64_t v18 = (void *)swift_allocObject();
          void v18[2] = v15;
          void v18[3] = v14;
          v18[4] = a1;
          uint64_t v19 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v17 + 8);
          id v20 = a1;
          swift_retain();
          v19(a4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
        }
        sub_19EEBD664((uint64_t)v29, a2);
        v11 += 80;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F07FEDC(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 72) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 72))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 56);
    uint64_t v3 = *(void *)(v1 + 64);
    uint64_t v6 = *(void *)(v1 + 40);
    uint64_t v5 = *(void *)(v1 + 48);
    uint64_t v7 = *(void **)(v1 + 24);
    uint64_t v8 = *(void *)(v1 + 32);
    *(void *)(v1 + 24) = a1;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(void *)(v1 + 64) = 0;
    *(unsigned char *)(v1 + 72) = 2;
    sub_19EE4E714(v7, v8, v6, v5, v4, v3, 0);
    id v9 = a1;
    sub_19EE4E7A4(v7, v8, v6, v5, v4, v3, 0);
    os_unfair_lock_unlock(v2);
    uint64_t v10 = v7[2];
    if (v10)
    {
      uint64_t v11 = (uint64_t)(v7 + 4);
      do
      {
        sub_19EEC3ED8(v11, (uint64_t)v28, (uint64_t *)&unk_1EB3904F0);
        sub_19EEC3ED8((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_1EB3904F0);
        if (v27)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v12 = a1;
          id v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v14 = v25[2];
          uint64_t v15 = v25[3];
          sub_19EEBB420(&v26, (uint64_t)v22);
          uint64_t v16 = v23;
          uint64_t v17 = v24;
          __swift_project_boxed_opaque_existential_1(v22, v23);
          uint64_t v18 = (void *)swift_allocObject();
          void v18[2] = v14;
          void v18[3] = v15;
          v18[4] = a1;
          uint64_t v19 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v17 + 8);
          id v20 = a1;
          swift_retain();
          v19(sub_19F0844A4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
        }
        sub_19EEBD664((uint64_t)v28, (uint64_t *)&unk_1EB3904F0);
        v11 += 80;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F080188(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 120) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 120))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 104);
    uint64_t v3 = *(void *)(v1 + 112);
    uint64_t v6 = *(void *)(v1 + 88);
    uint64_t v5 = *(void *)(v1 + 96);
    uint64_t v7 = *(void *)(v1 + 80);
    uint64_t v9 = *(void *)(v1 + 56);
    uint64_t v8 = *(void *)(v1 + 64);
    uint64_t v10 = *(void *)(v1 + 48);
    uint64_t v28 = v10;
    uint64_t v29 = *(void *)(v1 + 72);
    uint64_t v12 = *(void **)(v1 + 24);
    uint64_t v11 = *(void *)(v1 + 32);
    uint64_t v26 = v11;
    uint64_t v27 = *(void *)(v1 + 40);
    *(void *)(v1 + 24) = a1;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 64) = 0u;
    *(_OWORD *)(v1 + 80) = 0u;
    *(_OWORD *)(v1 + 96) = 0u;
    *(void *)(v1 + 112) = 0;
    *(unsigned char *)(v1 + 120) = 2;
    uint64_t v13 = v7;
    sub_19F084038(v12, v11, v27, v10, v9, v8, v29, v7, v6, v5, v4, v3, 0);
    id v14 = a1;
    sub_19EF58BA4(v12, v26, v27, v28, v9, v8, v29, v13, v6, v5, v4, v3, 0);
    os_unfair_lock_unlock(v2);
    uint64_t v15 = v12[2];
    if (v15)
    {
      uint64_t v16 = (uint64_t)(v12 + 4);
      do
      {
        sub_19EEC3ED8(v16, (uint64_t)v37, &qword_1EB3906F0);
        sub_19EEC3ED8((uint64_t)v37, (uint64_t)v34, &qword_1EB3906F0);
        if (v36)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v17 = a1;
          id v18 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v20 = v34[2];
          uint64_t v19 = v34[3];
          sub_19EEBB420(&v35, (uint64_t)v31);
          uint64_t v22 = v32;
          uint64_t v21 = v33;
          __swift_project_boxed_opaque_existential_1(v31, v32);
          uint64_t v23 = (void *)swift_allocObject();
          void v23[2] = v20;
          void v23[3] = v19;
          void v23[4] = a1;
          uint64_t v24 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v21 + 8);
          id v25 = a1;
          swift_retain();
          v24(sub_19F0844A4, v23, v22, v21);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
        }
        sub_19EEBD664((uint64_t)v37, &qword_1EB3906F0);
        v16 += 80;
        --v15;
      }
      while (v15);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F08045C(void *a1)
{
}

void sub_19F08048C(void *a1)
{
}

void sub_19F0804B4(void *a1)
{
}

void sub_19F0804E4(void *a1)
{
}

void sub_19F080514(void *a1)
{
}

void sub_19F08053C(void *a1)
{
}

void sub_19F08056C(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 2;
    sub_19EEDA6F8(v3, 0, MEMORY[0x1E4FBC8A8]);
    id v4 = a1;
    sub_19EEA7628(v3, 0, MEMORY[0x1E4FBC898]);
    os_unfair_lock_unlock(v2);
    uint64_t v5 = v3[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v23, &qword_1E946FB90);
        sub_19EEC3ED8((uint64_t)v23, (uint64_t)v20, &qword_1E946FB90);
        if (v22)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v7 = a1;
          id v8 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v9 = v20[2];
          uint64_t v10 = v20[3];
          sub_19EEBB420(&v21, (uint64_t)v17);
          uint64_t v11 = v18;
          uint64_t v12 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          uint64_t v13 = (void *)swift_allocObject();
          long long v13[2] = v9;
          void v13[3] = v10;
          v13[4] = a1;
          id v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 8);
          id v15 = a1;
          swift_retain();
          v14(sub_19F0844A4, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19EEBD664((uint64_t)v23, &qword_1E946FB90);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F080804(void *a1)
{
}

void sub_19F080834(void *a1)
{
}

void sub_19F08085C(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v25, (uint64_t *)&unk_1E9471000);
  if (v26 == 3)
  {

    os_unfair_lock_unlock(v2);
  }
  else if (v26)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = v25[0];
    v23[0] = a1;
    char v24 = 2;
    swift_beginAccess();
    id v4 = a1;
    sub_19EE6EEAC((uint64_t)v23, v1 + 24, (uint64_t *)&unk_1E9471000);
    swift_endAccess();
    os_unfair_lock_unlock(v2);
    uint64_t v5 = v3[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v23, (uint64_t *)&unk_1E9473870);
        sub_19EEC3ED8((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_1E9473870);
        if (v22)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v7 = a1;
          id v8 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v9 = v20[2];
          uint64_t v10 = v20[3];
          sub_19EEBB420(&v21, (uint64_t)v17);
          uint64_t v11 = v18;
          uint64_t v12 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          uint64_t v13 = (void *)swift_allocObject();
          long long v13[2] = v9;
          void v13[3] = v10;
          v13[4] = a1;
          id v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 8);
          id v15 = a1;
          swift_retain();
          v14(sub_19F0844A4, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19EEBD664((uint64_t)v23, (uint64_t *)&unk_1E9473870);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F080B04(void *a1)
{
}

void sub_19F080B34(void *a1)
{
}

void sub_19F080B5C(void *a1)
{
}

void sub_19F080B84(void *a1)
{
}

void sub_19F080BB4(void *a1)
{
}

void sub_19F080BE4(void *a1)
{
}

void sub_19F080C14(void *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  id v8 = (os_unfair_lock_s *)(*(void *)(v5 + 16) + 16);
  os_unfair_lock_lock(v8);
  swift_beginAccess();
  sub_19EEC3ED8(v5 + 24, (uint64_t)v33, a2);
  if (v34 == 3)
  {

    os_unfair_lock_unlock(v8);
  }
  else if (v34)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v9 = v33[0];
    v31[0] = a1;
    char v32 = 2;
    swift_beginAccess();
    id v10 = a1;
    sub_19EE6EEAC((uint64_t)v31, v5 + 24, a2);
    swift_endAccess();
    os_unfair_lock_unlock(v8);
    uint64_t v11 = v9;
    uint64_t v12 = v9[2];
    if (v12)
    {
      uint64_t v13 = (uint64_t)(v11 + 4);
      do
      {
        sub_19EEC3ED8(v13, (uint64_t)v31, a3);
        sub_19EEC3ED8((uint64_t)v31, (uint64_t)v28, a3);
        if (v30)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *id v14 = a1;
          id v15 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v17 = v28[2];
          uint64_t v16 = v28[3];
          sub_19EEBB420(&v29, (uint64_t)v25);
          uint64_t v18 = v26;
          uint64_t v19 = v27;
          __swift_project_boxed_opaque_existential_1(v25, v26);
          uint64_t v20 = (void *)swift_allocObject();
          v20[2] = v17;
          void v20[3] = v16;
          void v20[4] = a1;
          long long v21 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v19 + 8);
          id v22 = a1;
          swift_retain();
          v21(a5, v20, v18, v19);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
        }
        sub_19EEBD664((uint64_t)v31, a3);
        v13 += 80;
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F080EA0(void *a1)
{
}

void sub_19F080ED0(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 48) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 48))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 32);
    uint64_t v3 = *(void *)(v1 + 40);
    uint64_t v5 = *(void **)(v1 + 24);
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 48) = 2;
    sub_19F083A7C(v5, v4, v3, 0);
    id v6 = a1;
    sub_19EF5898C(v5, v4, v3, 0);
    os_unfair_lock_unlock(v2);
    uint64_t v7 = v5[2];
    if (v7)
    {
      uint64_t v8 = (uint64_t)(v5 + 4);
      do
      {
        sub_19EEC3ED8(v8, (uint64_t)v25, &qword_1E946CDA0);
        sub_19EEC3ED8((uint64_t)v25, (uint64_t)v22, &qword_1E946CDA0);
        if (v24)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v9 = a1;
          id v10 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v11 = v22[2];
          uint64_t v12 = v22[3];
          sub_19EEBB420(&v23, (uint64_t)v19);
          uint64_t v13 = v20;
          uint64_t v14 = v21;
          __swift_project_boxed_opaque_existential_1(v19, v20);
          id v15 = (void *)swift_allocObject();
          long long v15[2] = v11;
          v15[3] = v12;
          v15[4] = a1;
          uint64_t v16 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v14 + 8);
          id v17 = a1;
          swift_retain();
          v16(sub_19F0844A4, v15, v13, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        }
        sub_19EEBD664((uint64_t)v25, &qword_1E946CDA0);
        v8 += 80;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F081158(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 40) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 40))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    *(void *)(v1 + 24) = a1;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 2;
    sub_19F083B34(v3, v4, 0, (uint64_t (*)(id))sub_19EF58A68);
    id v5 = a1;
    sub_19F083B88(v3, v4, 0, (void (*)(id))sub_19EF58A28);
    os_unfair_lock_unlock(v2);
    uint64_t v6 = v3[2];
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v7, (uint64_t)v24, &qword_1E946CB98);
        sub_19EEC3ED8((uint64_t)v24, (uint64_t)v21, &qword_1E946CB98);
        if (v23)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v8 = a1;
          id v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v10 = v21[2];
          uint64_t v11 = v21[3];
          sub_19EEBB420(&v22, (uint64_t)v18);
          uint64_t v12 = v19;
          uint64_t v13 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          uint64_t v14 = (void *)swift_allocObject();
          long long v14[2] = v10;
          uint64_t v14[3] = v11;
          v14[4] = a1;
          id v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v13 + 8);
          id v16 = a1;
          swift_retain();
          v15(sub_19F0844A4, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19EEBD664((uint64_t)v24, &qword_1E946CB98);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F0813F8(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 2;
    sub_19EEDA6F8(v3, 0, MEMORY[0x1E4FBC8A8]);
    id v4 = a1;
    sub_19EEA7628(v3, 0, MEMORY[0x1E4FBC898]);
    os_unfair_lock_unlock(v2);
    uint64_t v5 = v3[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v23, &qword_1E946CBA0);
        sub_19EEC3ED8((uint64_t)v23, (uint64_t)v20, &qword_1E946CBA0);
        if (v22)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v7 = a1;
          id v8 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v9 = v20[2];
          uint64_t v10 = v20[3];
          sub_19EEBB420(&v21, (uint64_t)v17);
          uint64_t v11 = v18;
          uint64_t v12 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          uint64_t v13 = (void *)swift_allocObject();
          long long v13[2] = v9;
          void v13[3] = v10;
          v13[4] = a1;
          uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 8);
          id v15 = a1;
          swift_retain();
          v14(sub_19F0844A4, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19EEBD664((uint64_t)v23, &qword_1E946CBA0);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F081690(void *a1)
{
}

void sub_19F0816B8(void *a1)
{
}

void sub_19F0816E8(void *a1)
{
}

void sub_19F081710(void *a1)
{
}

void sub_19F081740(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 2;
    sub_19EEDA6F8(v3, 0, MEMORY[0x1E4FBC8A8]);
    id v4 = a1;
    sub_19EEA7628(v3, 0, MEMORY[0x1E4FBC898]);
    os_unfair_lock_unlock(v2);
    uint64_t v5 = v3[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v23, (uint64_t *)&unk_1E9473808);
        sub_19EEC3ED8((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_1E9473808);
        if (v22)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v7 = a1;
          id v8 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v9 = v20[2];
          uint64_t v10 = v20[3];
          sub_19EEBB420(&v21, (uint64_t)v17);
          uint64_t v11 = v18;
          uint64_t v12 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          uint64_t v13 = (void *)swift_allocObject();
          long long v13[2] = v9;
          void v13[3] = v10;
          v13[4] = a1;
          uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 8);
          id v15 = a1;
          swift_retain();
          v14(sub_19F0844A4, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19EEBD664((uint64_t)v23, (uint64_t *)&unk_1E9473808);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F0819D8(void *a1)
{
}

void sub_19F081A08(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 48) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 48))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 32);
    uint64_t v3 = *(void *)(v1 + 40);
    uint64_t v5 = *(void **)(v1 + 24);
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 48) = 2;
    sub_19F083350(v5, v4, v3, 0);
    id v6 = a1;
    sub_19EF58890(v5, v4, v3, 0);
    os_unfair_lock_unlock(v2);
    uint64_t v7 = v5[2];
    if (v7)
    {
      uint64_t v8 = (uint64_t)(v5 + 4);
      do
      {
        sub_19EEC3ED8(v8, (uint64_t)v25, (uint64_t *)&unk_1E9470F70);
        sub_19EEC3ED8((uint64_t)v25, (uint64_t)v22, (uint64_t *)&unk_1E9470F70);
        if (v24)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v9 = a1;
          id v10 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v11 = v22[2];
          uint64_t v12 = v22[3];
          sub_19EEBB420(&v23, (uint64_t)v19);
          uint64_t v13 = v20;
          uint64_t v14 = v21;
          __swift_project_boxed_opaque_existential_1(v19, v20);
          id v15 = (void *)swift_allocObject();
          long long v15[2] = v11;
          v15[3] = v12;
          v15[4] = a1;
          id v16 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v14 + 8);
          id v17 = a1;
          swift_retain();
          v16(sub_19F0844A4, v15, v13, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        }
        sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E9470F70);
        v8 += 80;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F081C90(void *a1)
{
}

void sub_19F081CB8(void *a1)
{
}

void sub_19F081CE8(void *a1)
{
}

void sub_19F081D18(void *a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 2;
    sub_19EEDA6F8(v3, 0, MEMORY[0x1E4FBC900]);
    id v4 = a1;
    sub_19EEA7628(v3, 0, MEMORY[0x1E4FBC8F8]);
    os_unfair_lock_unlock(v2);
    uint64_t v5 = v3[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v23, &qword_1E946D6A0);
        sub_19EEC3ED8((uint64_t)v23, (uint64_t)v20, &qword_1E946D6A0);
        if (v22)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
          swift_allocError();
          *uint64_t v7 = a1;
          id v8 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          uint64_t v9 = v20[2];
          uint64_t v10 = v20[3];
          sub_19EEBB420(&v21, (uint64_t)v17);
          uint64_t v11 = v18;
          uint64_t v12 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          uint64_t v13 = (void *)swift_allocObject();
          long long v13[2] = v9;
          void v13[3] = v10;
          v13[4] = a1;
          uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 8);
          id v15 = a1;
          swift_retain();
          v14(sub_19F0844A4, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19EEBD664((uint64_t)v23, &qword_1E946D6A0);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_19F081FB0(void *a1)
{
  return sub_19F082000(a1, &qword_1EB3903F0, (uint64_t)&unk_1EF153EB8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F081FD8(void *a1)
{
  return sub_19F082000(a1, &qword_1E946D620, (uint64_t)&unk_1EF153E68, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082000(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_19EEC3ED8(v4, (uint64_t)v20, a2);
  if (v22)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    swift_allocError();
    *uint64_t v7 = a1;
    id v8 = a1;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    swift_release();
    uint64_t v11 = v20[2];
    uint64_t v10 = v20[3];
    sub_19EEBB420(&v21, (uint64_t)v17);
    uint64_t v12 = v18;
    uint64_t v13 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v14 = (void *)swift_allocObject();
    long long v14[2] = v11;
    uint64_t v14[3] = v10;
    v14[4] = a1;
    id v15 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v13 + 8);
    swift_retain();
    id v16 = a1;
    v15(a4, v14, v12, v13);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
}

uint64_t sub_19F082144(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1EB3912D0, (uint64_t)&unk_1EF1545C0, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08216C(void *a1)
{
  return sub_19F082000(a1, &qword_1EB392850, (uint64_t)&unk_1EF153A80, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082194(void *a1)
{
  return sub_19F082000(a1, &qword_1EB392370, (uint64_t)&unk_1EF153A58, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0821BC(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1EB3909D0, (uint64_t)&unk_1EF154098, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0821E4(void *a1)
{
  return sub_19F082000(a1, &qword_1E9471080, (uint64_t)&unk_1EF154E30, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08220C(void *a1)
{
  return sub_19F082000(a1, &qword_1E94738A0, (uint64_t)&unk_1EF154E80, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082234(void *a1)
{
  return sub_19F082000(a1, &qword_1E946FB90, (uint64_t)&unk_1EF153BE8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08225C(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E946F910, (uint64_t)&unk_1EF154EF8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082284(void *a1)
{
  return sub_19F082000(a1, &qword_1EB3908A0, (uint64_t)&unk_1EF154CF0, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0822AC(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E946DDB0, (uint64_t)&unk_1EF154A48, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0822D4(void *a1)
{
  return sub_19F082000(a1, &qword_1E946FBE0, (uint64_t)&unk_1EF153C38, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0822FC(void *a1)
{
  return sub_19F082000(a1, &qword_1EB390E20, (uint64_t)&unk_1EF154200, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082324(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1EB3909E8, (uint64_t)&unk_1EF154430, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08234C(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1EB3918A0, (uint64_t)&unk_1EF154778, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082374(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E946D610, (uint64_t)&unk_1EF153C60, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08239C(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E946D600, (uint64_t)&unk_1EF153CB0, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0823C4(void *a1)
{
  return sub_19F082000(a1, &qword_1E9470FA0, (uint64_t)&unk_1EF153E18, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0823EC(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1EB3918B0, (uint64_t)&unk_1EF154250, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082414(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E946F9D0, (uint64_t)&unk_1EF154728, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08243C(void *a1)
{
  return sub_19F082000(a1, &qword_1E9473830, (uint64_t)&unk_1EF154318, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082464(void *a1)
{
  return sub_19F082000(a1, qword_1EB3918C0, (uint64_t)&unk_1EF1543E0, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08248C(void *a1)
{
  return sub_19F082000(a1, &qword_1E946FC00, (uint64_t)&unk_1EF1542C8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0824B4(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9470F80, (uint64_t)&unk_1EF153DA0, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0824DC(void *a1)
{
  return sub_19F082000(a1, &qword_1E9470FA8, (uint64_t)&unk_1EF154340, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082504(void *a1)
{
  return sub_19F082000(a1, &qword_1EB390C20, (uint64_t)&unk_1EF154D18, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08252C(void *a1)
{
  return sub_19F082000(a1, &qword_1E9471060, (uint64_t)&unk_1EF154D68, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082554(void *a1)
{
  return sub_19F082000(a1, &qword_1EB3912C0, (uint64_t)&unk_1EF153F58, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08257C(void *a1)
{
  return sub_19F082000(a1, &qword_1EB3912C8, (uint64_t)&unk_1EF154A98, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0825A4(void *a1)
{
  return sub_19F082000(a1, &qword_1EB3912E0, (uint64_t)&unk_1EF1544A8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0825CC(void *a1)
{
  return sub_19F082000(a1, &qword_1E9471038, (uint64_t)&unk_1EF154AE8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0825F4(void *a1)
{
  return sub_19F082000(a1, &qword_1E9471040, (uint64_t)&unk_1EF154B38, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08261C(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9471050, (uint64_t)&unk_1EF154B88, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082644(void *a1)
{
  return sub_19F082000(a1, &qword_1E946D1C0, (uint64_t)&unk_1EF1544F8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08266C(void *a1)
{
  return sub_19F082000(a1, &qword_1E946EB20, (uint64_t)&unk_1EF154C00, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082694(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1EB3904F0, (uint64_t)&unk_1EF154C50, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0826BC(void *a1)
{
  return sub_19F082000(a1, &qword_1E946EC70, (uint64_t)&unk_1EF154CA0, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0826E4(void *a1)
{
  return sub_19F082000(a1, &qword_1EB3906F0, (uint64_t)&unk_1EF154BD8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08270C(void *a1)
{
  return sub_19F082000(a1, &qword_1E946DDC0, (uint64_t)&unk_1EF154660, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082734(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9473890, (uint64_t)&unk_1EF1549F8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08275C(void *a1)
{
  return sub_19F082000(a1, &qword_1EB390F10, (uint64_t)&unk_1EF153FA8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082784(void *a1)
{
  return sub_19F082000(a1, &qword_1EB390A30, (uint64_t)&unk_1EF153FD0, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0827AC(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9473870, (uint64_t)&unk_1EF154958, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0827D4(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9473880, (uint64_t)&unk_1EF1549A8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0827FC(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9470FF0, (uint64_t)&unk_1EF1548B8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082824(void *a1)
{
  return sub_19F082000(a1, qword_1E9476580, (uint64_t)&unk_1EF154908, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08284C(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E946E640, (uint64_t)&unk_1EF1541B0, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082874(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9473840, (uint64_t)&unk_1EF1547C8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08289C(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9473860, (uint64_t)&unk_1EF154868, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0828C4(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1EB3909C0, (uint64_t)&unk_1EF154070, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0828EC(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9473850, (uint64_t)&unk_1EF154818, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082914(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9476570, (uint64_t)&unk_1EF1546D8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08293C(void *a1)
{
  return sub_19F082000(a1, &qword_1E946E3E0, (uint64_t)&unk_1EF154390, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082964(void *a1)
{
  return sub_19F082000(a1, &qword_1E946CBA0, (uint64_t)&unk_1EF154548, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F08298C(void *a1)
{
  return sub_19F082000(a1, &qword_1E946CDA0, (uint64_t)&unk_1EF154570, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0829B4(void *a1)
{
  return sub_19F082000(a1, &qword_1E946CB98, (uint64_t)&unk_1EF1545E8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F0829DC(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9470F90, (uint64_t)&unk_1EF153F08, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082A04(void *a1)
{
  return sub_19F082000(a1, (uint64_t *)&unk_1E9470F70, (uint64_t)&unk_1EF153D28, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082A2C(void *a1)
{
  return sub_19F082000(a1, &qword_1EB3909E0, (uint64_t)&unk_1EF154138, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082A54(void *a1)
{
  return sub_19F082000(a1, &qword_1E946D6A0, (uint64_t)&unk_1EF1540C0, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082A7C(void *a1)
{
  return sub_19F082000(a1, &qword_1E946F650, (uint64_t)&unk_1EF153CD8, (uint64_t)sub_19F0844A4);
}

uint64_t sub_19F082AA4()
{
  uint64_t v0 = sub_19F1DC86C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DC83C();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_19F1DBA3C();
  MEMORY[0x1F4188790](v5 - 8);
  sub_19EEA5F34();
  sub_19F1DBA2C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392F28);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  sub_19F1DC82C();
  v8[1] = v6;
  sub_19EE6A384((unint64_t *)&qword_1EB393078, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393060);
  sub_19EEA5E54((unint64_t *)&qword_1EB393068, &qword_1EB393060);
  sub_19F1DCC1C();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC68], v0);
  uint64_t result = sub_19F1DC8AC();
  qword_1EB394F68 = result;
  return result;
}

uint64_t sub_19F082D58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_19F1DB97C();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4F38910], v3);
    sub_19F1DB9BC();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_19F082E48@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*a1);
  *a3 = result;
  return result;
}

void sub_19F082E7C(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = (void *)(a2 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void **)(a2 + 16);
  id v8 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_19F09E398(0, v7[2] + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v11 = v7[2];
  unint64_t v10 = v7[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v7 = sub_19F09E398((void *)(v10 > 1), v11 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  _OWORD v7[2] = v11 + 1;
  v7[v11 + 4] = a1;
  swift_endAccess();
  dispatch_group_leave(a3);
}

uint64_t sub_19F082F64()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F082F9C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_19F083004(void *a1)
{
  sub_19F082E7C(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_19F08300C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_19F08306C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F0830B4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_19F0830EC()
{
  unint64_t result = qword_1E946D6B0;
  if (!qword_1E946D6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946D6B0);
  }
  return result;
}

uint64_t sub_19F083140()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08315C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083178()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08319C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F0831D4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8D0], 48);
}

uint64_t sub_19F0831F0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F083228()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F083238()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083254()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083270()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08328C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0832A8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0832C4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0832E0()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0832FC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083318()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083334()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

id sub_19F083350(id result, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      goto LABEL_7;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_7:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
    case 3:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F0833F8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083414()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083430()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08344C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

id sub_19F083468(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
    case 3:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F0834BC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0834D8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0834F4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083510()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08352C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083548()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083564()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083580()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08359C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0835B8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0835D4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0835F0()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08360C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083628()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083644()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083660()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08367C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083698()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0836B4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0836D0()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0836EC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083708()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083724()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083740()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08375C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083778()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083794()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0837B0()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0837CC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0837E8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083804()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083820()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08383C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083858()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083874()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083890()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0838AC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0838C8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0838E4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083900()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08391C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083938()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083954()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083970()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08398C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0839A8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0839C4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0839E0()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0839FC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083A28()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083A44()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083A60()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

id sub_19F083A7C(id result, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      goto LABEL_7;
    case 1:
      sub_19EF58A68((uint64_t)result);
LABEL_7:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
    case 3:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F083B18()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

id sub_19F083B34(id result, uint64_t a2, char a3, uint64_t (*a4)(id))
{
  switch(a3)
  {
    case 0:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
      unint64_t result = (id)a4(result);
      break;
    case 2:
    case 3:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_19F083B88(id a1, uint64_t a2, char a3, void (*a4)(id))
{
  switch(a3)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
      a4(a1);
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19F083BDC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083BF8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083C24()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083C40()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083C5C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083C78()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083C94()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083CB0()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083CCC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083CE8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083D04()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083D20()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083D3C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083D58()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083D74()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083D90()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083DAC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083DC8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083DE4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083E00()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083E1C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083E38()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083E54()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083E70()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083E8C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083EA8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083EC4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083EE0()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083EFC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083F18()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083F34()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083F50()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083F6C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

id sub_19F083F88(id result, uint64_t a2, char a3)
{
  if (a3 == 3 || a3 == 2) {
    return result;
  }
  if (!a3) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19F083FAC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083FC8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F083FE4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F084000()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08401C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

id sub_19F084038(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  switch(a13)
  {
    case 0:
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_6:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
    case 3:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F084124()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F084140()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

id sub_19F08415C(id result, char a2)
{
  if (a2 == 3 || a2 == 2) {
    return result;
  }
  if (!a2) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19F084180()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08419C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0841C8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0841E4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F084200()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

id sub_19F08421C(id result, unint64_t a2, void *a3, char a4)
{
  switch(a4)
  {
    case 0:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
      sub_19EEA0784((uint64_t)result, a2);
      unint64_t result = a3;
      goto LABEL_4;
    case 2:
    case 3:
LABEL_4:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F0842B8()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F0842D4()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F084310()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08432C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F084348()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F084364()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F084380()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

id sub_19F08439C(id result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
      unint64_t result = (id)sub_19EF3C628((uint64_t)result, a2);
      break;
    case 2:
    case 3:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F0843EC()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F084408()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F084444()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F084460()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

uint64_t sub_19F08447C()
{
  return objectdestroy_29Tm(MEMORY[0x1E4FBC8B8], 40);
}

ValueMetadata *type metadata accessor for DsIdFieldProvider()
{
  return &type metadata for DsIdFieldProvider;
}

uint64_t sub_19F0844BC(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = v1;
  return MEMORY[0x1F4188298](sub_19EE2AB08, 0, 0);
}

uint64_t join<A, B>(_:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v66 = a6;
  uint64_t v67 = a7;
  uint64_t v65 = a5;
  uint64_t v52 = a3;
  uint64_t v50 = a2;
  uint64_t v63 = a1;
  uint64_t v8 = sub_19F1DB9FC();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  MEMORY[0x1F4188790](v8);
  char v55 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = *(void *)(a4 - 8);
  long long v62 = *(uint64_t **)(v61 + 64);
  MEMORY[0x1F4188790](v10);
  int v60 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DC83C();
  MEMORY[0x1F4188790](v12);
  uint64_t v54 = sub_19F1DBA3C();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_19F1DC86C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEA5F34();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FBCC68], v15);
  sub_19F1DBA1C();
  uint64_t aBlock = MEMORY[0x1E4FBC860];
  sub_19EE6A33C((unint64_t *)&qword_1EB393078, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393060);
  sub_19EEA5E54((unint64_t *)&qword_1EB393068, &qword_1EB393060);
  sub_19F1DCC1C();
  unint64_t v51 = v14;
  uint64_t v59 = sub_19F1DC8AC();
  dispatch_group_t v58 = dispatch_group_create();
  uint64_t v19 = swift_allocObject();
  uint64_t v64 = v19;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  *(void *)(v19 + 16) = sub_19F1DBAFC();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = MEMORY[0x1E4FBC860];
  long long v21 = v60;
  uint64_t v22 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v63, a4);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = ((unint64_t)v62 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (char *)swift_allocObject();
  uint64_t v28 = v65;
  *((void *)v27 + 2) = a4;
  *((void *)v27 + 3) = v28;
  uint64_t v29 = v67;
  *((void *)v27 + 4) = v66;
  *((void *)v27 + 5) = v29;
  char v30 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  uint64_t v63 = a4;
  v30(&v27[v23], v21, a4);
  dispatch_group_t v32 = v58;
  uint64_t v31 = (void *)v59;
  *(void *)&v27[v24] = v58;
  *(void *)&v27[v25] = v64;
  *(void *)&v27[v26] = v20;
  *(void *)&v27[(v26 + 15) & 0xFFFFFFFFFFFFFFF8] = v31;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_19F085154;
  *(void *)(v33 + 24) = v27;
  long long v73 = sub_19EEB2224;
  uint64_t v74 = (void *)v33;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v70 = 1107296256;
  uint64_t v71 = sub_19EEB20C0;
  uint64_t v72 = &block_descriptor_22;
  char v34 = _Block_copy(&aBlock);
  long long v35 = v32;
  swift_retain();
  uint64_t v36 = v20;
  swift_retain();
  uint64_t v37 = v31;
  swift_retain();
  swift_release();
  dispatch_sync(v37, v34);
  _Block_release(v34);
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v31)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Promise();
    uint64_t v65 = v35;
    uint64_t v39 = Promise.__allocating_init()();
    uint64_t v40 = (void *)swift_allocObject();
    uint64_t v41 = v64;
    uint64_t v42 = v66;
    id v40[2] = v63;
    v40[3] = v42;
    v40[4] = v67;
    v40[5] = v39;
    long long v62 = v39;
    uint64_t v43 = v52;
    v40[6] = v50;
    v40[7] = v43;
    v40[8] = v41;
    v40[9] = v36;
    long long v73 = sub_19F08553C;
    uint64_t v74 = v40;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v70 = 1107296256;
    uint64_t v71 = sub_19EEA4A68;
    uint64_t v72 = &block_descriptor_15_0;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v45 = v37;
    unint64_t v46 = v51;
    sub_19F1DBA1C();
    uint64_t v68 = MEMORY[0x1E4FBC860];
    sub_19EE6A33C(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
    sub_19EEA5E54((unint64_t *)&qword_1EB393050, &qword_1EB393048);
    uint64_t v47 = v55;
    uint64_t v48 = v57;
    sub_19F1DCC1C();
    unint64_t v49 = v65;
    sub_19F1DC81C();
    _Block_release(v44);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v54);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return (uint64_t)v62;
  }
  return result;
}

uint64_t sub_19F084CE8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F084D20(void (*a1)(void (*)(uint64_t a1), void *, void (*)(void *a1), uint64_t, void *, uint64_t, uint64_t), NSObject *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = a6;
  uint64_t v43 = a3;
  uint64_t v44 = a1;
  uint64_t v15 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  double v19 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  long long v21 = (char *)&v34 - v20;
  (*(void (**)(char *, void (*)(void (*)(uint64_t), void *, void (*)(void *), uint64_t, void *, uint64_t, uint64_t), uint64_t, double))(v15 + 16))(v17, v44, v11, v19);
  uint64_t v22 = a8;
  sub_19F1DC01C();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_19F1DCB2C();
  if (v45[0])
  {
    uint64_t v37 = a9;
    uint64_t v38 = v11;
    uint64_t v36 = a9 + 16;
    uint64_t v41 = AssociatedTypeWitness;
    uint64_t v42 = a7;
    uint64_t v39 = AssociatedConformanceWitness;
    uint64_t v40 = v21;
    do
    {
      dispatch_group_enter(a2);
      unint64_t v24 = a2;
      unint64_t v25 = (void *)swift_allocObject();
      void v25[2] = v11;
      void v25[3] = a7;
      uint64_t v26 = v37;
      void v25[4] = v22;
      v25[5] = v26;
      v25[6] = v43;
      v25[7] = v24;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = a4;
      *(void *)(v27 + 24) = v24;
      v45[3] = sub_19EEA5F34();
      v45[4] = &protocol witness table for OS_dispatch_queue;
      uint64_t v44 = *(void (**)(void (*)(uint64_t), void *, void (*)(void *), uint64_t, void *, uint64_t, uint64_t))(v26 + 16);
      v45[0] = a5;
      uint64_t v28 = v22;
      uint64_t v29 = swift_getAssociatedTypeWitness();
      char v30 = v24;
      uint64_t AssociatedTypeWitness = v41;
      swift_retain();
      swift_retain();
      id v31 = a5;
      uint64_t v32 = v29;
      uint64_t v22 = v28;
      uint64_t v11 = v38;
      v44(sub_19F085590, v25, sub_19F083004, v27, v45, v32, v26);
      a7 = v42;
      swift_unknownObjectRelease();
      a2 = v24;
      swift_release();
      long long v21 = v40;
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
      sub_19F1DCB2C();
    }
    while (v45[0]);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v21, AssociatedTypeWitness);
}

uint64_t sub_19F085078()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, v6 + 8, v4);
}

uint64_t sub_19F085154()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(v0[2] - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_19F084D20((void (*)(void (*)(uint64_t), void *, void (*)(void *), uint64_t, void *, uint64_t, uint64_t))((char *)v0 + v1), *(NSObject **)((char *)v0 + v2), *(uint64_t *)((char *)v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t *)((char *)v0 + ((((v2 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)((char *)v0+ ((((((v2 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), v0[2], v0[3], v0[4], v0[5]);
}

void sub_19F085204(uint64_t a1, uint64_t a2, NSObject *a3)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v9 - v7, a1, AssociatedTypeWitness, v6);
  swift_beginAccess();
  sub_19F1DC27C();
  sub_19F1DC23C();
  swift_endAccess();
  dispatch_group_leave(a3);
}

uint64_t sub_19F085358()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F085368(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(*(void *)a1 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v15 - v10;
  swift_beginAccess();
  uint64_t v12 = *(void *)(a4 + 16);
  swift_beginAccess();
  uint64_t v13 = *(void *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Promise.resolve(_:)((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_19F0854EC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19F08553C()
{
  return sub_19F085368(*(void *)(v0 + 40), *(void (**)(uint64_t, uint64_t))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_19F085550()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_19F085590(uint64_t a1)
{
  sub_19F085204(a1, *(void *)(v1 + 48), *(NSObject **)(v1 + 56));
}

uint64_t sub_19F0855A0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0855E4(uint64_t a1)
{
  return sub_19EE215F8(a1, &qword_1E946DC18, &qword_1E946DC20, &qword_1E9498948);
}

uint64_t static JitterPipelineBackoff.forJavaScriptLoading.getter()
{
  uint64_t v0 = swift_allocObject();
  type metadata accessor for ExponentialPipelineBackoff();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 40) = 0;
  *(_OWORD *)(v1 + 16) = xmmword_19F251920;
  *(void *)(v1 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(void *)(v1 + 40) = 0;
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t JitterPipelineBackoff.__allocating_init(baseWaitInterval:maxWaitInterval:)(double a1, double a2)
{
  uint64_t v4 = swift_allocObject();
  type metadata accessor for ExponentialPipelineBackoff();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 40) = 0;
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(void *)(v5 + 40) = 0;
  *(void *)(v4 + 16) = v5;
  return v4;
}

uint64_t JitterPipelineBackoff.init(baseWaitInterval:maxWaitInterval:)(double a1, double a2)
{
  type metadata accessor for ExponentialPipelineBackoff();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 40) = 0;
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(void *)(v5 + 40) = 0;
  *(void *)(v2 + 16) = v5;
  return v2;
}

double JitterPipelineBackoff.baseWaitInterval.getter()
{
  return *(double *)(*(void *)(v0 + 16) + 16);
}

double JitterPipelineBackoff.maxWaitInterval.getter()
{
  return *(double *)(*(void *)(v0 + 16) + 24);
}

Swift::Double __swiftcall JitterPipelineBackoff.nextWaitInterval()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + 32);
  objc_msgSend(v2, sel_lock);
  sub_19F10B884(v1, &v6);
  objc_msgSend(v2, sel_unlock);
  double v4 = v6;
  if (v6 < 0.0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  unint64_t v5 = sub_19F085950(0x20000000000001uLL);
  Swift::Double result = v4 * ((double)v5 * 1.11022302e-16) + 0.0;
  if (v5 == 0x20000000000000) {
    return v4;
  }
  return result;
}

Swift::Void __swiftcall JitterPipelineBackoff.reset()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + 32);
  objc_msgSend(v2, sel_lock);
  *(void *)(v1 + 40) = 0;
  objc_msgSend(v2, sel_unlock);
}

uint64_t JitterPipelineBackoff.deinit()
{
  swift_release();
  return v0;
}

uint64_t JitterPipelineBackoff.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

id sub_19F0858FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + 32);
  objc_msgSend(v2, sel_lock);
  *(void *)(v1 + 40) = 0;
  return objc_msgSend(v2, sel_unlock);
}

unint64_t sub_19F085950(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x19F3C9490](&v3, 8);
    Swift::Double result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x19F3C9490](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for JitterPipelineBackoff()
{
  return self;
}

uint64_t method lookup function for JitterPipelineBackoff(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for JitterPipelineBackoff);
}

uint64_t dispatch thunk of JitterPipelineBackoff.__allocating_init(baseWaitInterval:maxWaitInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_19F085A2C()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F085A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v37 = a3;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v32 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v34 = (char *)&v31 - v10;
  uint64_t v12 = *(void *)(v11 + 24);
  uint64_t v13 = sub_19F1DCAAC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = *(void *)(v12 - 8);
  double v19 = MEMORY[0x1F4188790](v18);
  long long v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v4;
  uint64_t v22 = *(void *)(v4 + 8);
  uint64_t v23 = *(void *)(a2 + 32);
  uint64_t v36 = a1;
  MEMORY[0x19F3C5F50](a1, v22, v7, v12, v23, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v24 = 1;
    unint64_t v25 = v37;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v25, v24, 1, v12);
  }
  uint64_t v26 = v21;
  id v31 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v31(v21, v16, v12);
  uint64_t v40 = *(void *)(v33 + 16);
  sub_19F1DC27C();
  swift_getWitnessTable();
  uint64_t v27 = v36;
  sub_19F1DC6DC();
  if ((v39 & 1) == 0)
  {
    uint64_t v28 = v34;
    sub_19F1DC24C();
    uint64_t v29 = v35;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v27, v7);
    sub_19F1DC23C();
    unint64_t v25 = v37;
    v31(v37, v26, v12);
    uint64_t v24 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v25, v24, 1, v12);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v32, v27, v7);
  uint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DD40C();
  sub_19F1DBEFC();
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19F085E90(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = sub_19F1DCAAC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = *(void *)(v6 - 8);
  double v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = *(void (**)(char *, char *, uint64_t, double))(v8 + 16);
  uint64_t v24 = a1;
  v19(v13, a1, v7, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v6) == 1)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
    v20(v13, v7);
    sub_19F086178(a2, a3, v10);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8))(a2);
    v20(v24, v7);
    return ((uint64_t (*)(char *, uint64_t))v20)(v10, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v13, v6);
    sub_19F086ACC((uint64_t)v18, a2, a3, (uint64_t)v10);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8))(a2);
    uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    v22(v24, v7);
    v22(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, v6);
  }
}

uint64_t sub_19F086178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = a3;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v26 = (char *)&v24 - v7;
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = sub_19F1DCAAC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v4;
  uint64_t v18 = v28;
  sub_19F1DBC0C();
  sub_19F1DBB5C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v19 = 1;
    uint64_t v20 = v29;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v20, v19, 1, v9);
  }
  long long v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v21(v17, v13, v9);
  uint64_t v33 = *(void *)(v3 + 16);
  sub_19F1DC27C();
  swift_getWitnessTable();
  sub_19F1DC6DC();
  if ((v32 & 1) == 0)
  {
    uint64_t v22 = v26;
    sub_19F1DC24C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v30);
    uint64_t v20 = v29;
    v21(v29, v17, v9);
    uint64_t v19 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v20, v19, 1, v9);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, v18, v30);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DD40C();
  sub_19F1DBEFC();
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19F08657C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = sub_19F1DCAAC();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v38 = (char *)&v34 - v7;
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v39 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[2];
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(char **)(v11 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = (char *)&v34 - ((unint64_t)(v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = MEMORY[0x1F4188790](v15);
  uint64_t v41 = (char *)&v34 - v17;
  uint64_t v19 = v2[1];
  uint64_t v18 = v2[2];
  if (v18 != MEMORY[0x19F3C6550](v19, v10, v16))
  {
    uint64_t v35 = a2;
    char v23 = sub_19F1DC1FC();
    sub_19F1DC19C();
    if (v23)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v14, v19+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v18, v10);
      uint64_t v24 = v18 + 1;
      if (!__OFADD__(v18, 1)) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v33 = sub_19F1DCD5C();
      if (v12 != (char *)8)
      {
LABEL_13:
        __break(1u);
LABEL_14:
        (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
        v42[0] = 0;
        v42[1] = 0xE000000000000000;
        sub_19F1DCCEC();
        sub_19F1DBEFC();
        sub_19F1DD40C();
        sub_19F1DBEFC();
        uint64_t result = sub_19F1DCFCC();
        __break(1u);
        return result;
      }
      v42[0] = v33;
      (*(void (**)(char *, void *, uint64_t))(v11 + 16))(v14, v42, v10);
      swift_unknownObjectRelease();
      uint64_t v24 = v18 + 1;
      if (!__OFADD__(v18, 1))
      {
LABEL_7:
        v2[2] = v24;
        unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
        uint64_t v26 = v41;
        v25(v41, v14, v10);
        uint64_t v12 = v38;
        MEMORY[0x19F3C5F50](v26, *v2, v10, v5, a1[4]);
        uint64_t v27 = v40;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v12, 1, v5) != 1)
        {
          uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
          uint64_t v29 = v39;
          v28(v39, v12, v5);
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          uint64_t v31 = v35;
          unint64_t v32 = &v35[*(int *)(TupleTypeMetadata2 + 48)];
          v25(v35, v41, v10);
          v28(v32, v29, v5);
          return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v31, 0, 1, TupleTypeMetadata2);
        }
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v20 = swift_getTupleTypeMetadata2();
  long long v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  return v21((uint64_t)a2, 1, 1, v20);
}

uint64_t sub_19F086A70(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    sub_19F1DBAEC();
    sub_19F1DBAFC();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19F086ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v50 = a4;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v41 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v48 = (char *)&v40 - v10;
  uint64_t v12 = *(void *)(v11 + 24);
  uint64_t v44 = (void *)sub_19F1DCAAC();
  uint64_t v13 = *(v44 - 1);
  MEMORY[0x1F4188790](v44);
  uint64_t v42 = (uint64_t)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v19);
  long long v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v47 = (char *)&v40 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v21, a1, v12, v23);
  uint64_t v45 = v4;
  uint64_t v43 = a3;
  uint64_t v25 = v7;
  sub_19F1DBC0C();
  uint64_t v26 = v46;
  sub_19F1DBB6C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v12) == 1)
  {
    uint64_t v27 = v26;
    uint64_t v28 = *(void (**)(char *, void *))(v13 + 8);
    uint64_t v29 = v17;
    uint64_t v30 = v44;
    v28(v29, v44);
    uint64_t v31 = v45;
    uint64_t v32 = sub_19F1DBBCC();
    uint64_t v33 = v25;
    if (v32 >= 1 && *v31 < (unint64_t)v32)
    {
      uint64_t v34 = v42;
      sub_19F08701C(v43, v42);
      v28((char *)v34, v30);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v27, v33);
    sub_19F1DC27C();
    sub_19F1DC23C();
    uint64_t v35 = 1;
    uint64_t v36 = v50;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v36, v35, 1, v12);
  }
  uint64_t v44 = *(void **)(v18 + 32);
  ((void (*)(char *, char *, uint64_t))v44)(v47, v17, v12);
  uint64_t v53 = v45[2];
  sub_19F1DC27C();
  swift_getWitnessTable();
  sub_19F1DC6DC();
  if ((v52 & 1) == 0)
  {
    uint64_t v37 = v48;
    sub_19F1DC24C();
    uint64_t v38 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v26, v7);
    sub_19F1DC23C();
    uint64_t v36 = v50;
    ((void (*)(uint64_t, char *, uint64_t))v44)(v50, v47, v12);
    uint64_t v35 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v36, v35, 1, v12);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v41, v26, v7);
  uint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DD40C();
  sub_19F1DBEFC();
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19F08701C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *(void *)(v2 + 16);
  sub_19F1DC27C();
  swift_getWitnessTable();
  if (sub_19F1DC6AC()) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 56))(a2, 1, 1);
  }
  swift_getWitnessTable();
  sub_19F1DC70C();
  sub_19F1DBC0C();
  sub_19F1DBB5C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_19F0871D0()
{
  return sub_19F1DC26C();
}

uint64_t sub_19F08723C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19F08727C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_19F08723C(a1, *(void *)(v2 + 8));
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v8;
  return result;
}

uint64_t sub_19F0872E0()
{
  return 0;
}

uint64_t sub_19F0872E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_19F1179A0(v2, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_19F087334(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_19F087374(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_19F0873DC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t type metadata accessor for _LRUCache.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_19F08743C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_19F1DD03C())
  {
    unint64_t v3 = v1 & 0xC000000000000001;
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v5 = 4;
    uint64_t v6 = &off_1E59B6000;
    unint64_t v22 = v1;
    unint64_t v21 = v1 & 0xC000000000000001;
    while (1)
    {
      id v7 = v3 ? (id)MEMORY[0x19F3C7060](v5 - 4, v1) : *(id *)(v1 + 8 * v5);
      uint64_t v8 = v7;
      uint64_t v9 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      if ([v7 (SEL)v6[424]]
        && (uint64_t v10 = v6, (v11 = objc_msgSend(v8, sel_toString)) != 0))
      {
        uint64_t v12 = v11;
        uint64_t v13 = v2;
        uint64_t v14 = sub_19F1DBD7C();
        uint64_t v16 = v15;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_19EE91FA0(0, v4[2] + 1, 1, v4);
        }
        unint64_t v18 = v4[2];
        unint64_t v17 = v4[3];
        if (v18 >= v17 >> 1) {
          uint64_t v4 = sub_19EE91FA0((void *)(v17 > 1), v18 + 1, 1, v4);
        }
        _OWORD v4[2] = v18 + 1;
        uint64_t v19 = &v4[2 * v18];
        v19[4] = v14;
        void v19[5] = v16;
        uint64_t v2 = v13;
        unint64_t v3 = v21;
        unint64_t v1 = v22;
        uint64_t v6 = v10;
      }
      else
      {
      }
      ++v5;
      if (v9 == v2) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_21:
  swift_bridgeObjectRelease();
  return v4;
}

void sub_19F087614(void *a1)
{
  id v2 = objc_msgSend(a1, sel_globalObject);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_context);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v4;
  id v6 = v3;
  sub_19EEB2BCC(v5, v6);
  uint64_t v8 = v7;

  if (v1) {
    return;
  }
  uint64_t v9 = (void *)sub_19F1DBD4C();
  id v10 = objc_msgSend(v8, sel_valueForProperty_, v9);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  unsigned int v11 = objc_msgSend(v10, sel_toUInt32);

  id v12 = sub_19F18EBF8(0, v11, v8);
  sub_19F08743C((unint64_t)v12);
  swift_bridgeObjectRelease();
}

void sub_19F087778(void *a1)
{
  id v2 = objc_msgSend(a1, sel_globalObject);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_context);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v4;
  id v6 = v3;
  sub_19EEB2BCC(v5, v6);
  uint64_t v8 = v7;

  if (v1) {
    return;
  }
  uint64_t v9 = (void *)sub_19F1DBD4C();
  id v10 = objc_msgSend(v8, sel_valueForProperty_, v9);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  unsigned int v11 = objc_msgSend(v10, sel_toUInt32);

  id v12 = sub_19F18EBF8(0, v11, v8);
  sub_19F08743C((unint64_t)v12);
  swift_bridgeObjectRelease();
}

id sub_19F0878D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, id a5)
{
  id result = objc_msgSend(a5, sel_globalObject);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  unsigned int v11 = result;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19F24DBC0;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  *(void *)(v12 + 88) = v13;
  *(void *)(v12 + 56) = v13;
  *(void *)(v12 + 64) = a3;
  *(void *)(v12 + 72) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_19EE8F204((uint64_t)&unk_1EF1483C8);
  *(void *)(v12 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
  *(void *)(v12 + 96) = v14;
  id result = objc_msgSend(v11, sel_context);
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v15 = result;
  id v16 = v11;
  swift_bridgeObjectRetain();
  sub_19EEB2BCC(v15, v16);
  unint64_t v18 = v17;

  swift_bridgeObjectRelease_n();
  if (!v5)
  {
    if ((objc_msgSend(v18, sel_isString) & 1) != 0
      && (id v19 = objc_msgSend(v18, sel_toString)) != 0)
    {
      uint64_t v20 = v19;
      uint64_t v12 = sub_19F1DBD7C();
    }
    else
    {

      return 0;
    }
  }
  return (id)v12;
}

void sub_19F087A90()
{
  sub_19F087614(*v0);
}

void sub_19F087AAC()
{
  sub_19F087778(*v0);
}

id sub_19F087AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19F0878D0(a1, a2, a3, a4, *v4);
}

id sub_19F087AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for JSSource();
  MEMORY[0x1F4188790](v8);
  id v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v26 - v12;
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30940]), sel_init);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v15 = result;
  uint64_t v27 = a2;
  uint64_t v28 = v2;
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30920]), sel_initWithVirtualMachine_, result);
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  id v16 = result;
  unint64_t v17 = (void *)sub_19F1DBD4C();
  objc_msgSend(v16, sel_setName_, v17);

  uint64_t v18 = (uint64_t)v10 + *(int *)(v8 + 20);
  uint64_t v19 = sub_19F1DB34C();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  uint64_t v21 = v27;
  *id v10 = a1;
  v10[1] = v21;
  id v22 = v16;
  sub_19F1DB23C();
  v20((uint64_t)v7, 0, 1, v19);
  sub_19EE62024((uint64_t)v7, v18);
  sub_19EF968BC((uint64_t)v10, (uint64_t)v13);
  v29.value.super.Class isa = 0;
  v29.is_nil = (char)v22;
  v24.super.Class isa = JSSource.evaluate(against:in:)(v29, v23).super.isa;
  if (v25)
  {
    sub_19F087D78((uint64_t)v13);
  }
  else
  {

    sub_19F087D78((uint64_t)v13);
  }
  return v22;
}

uint64_t sub_19F087D78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JSSource();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for LocalizedStringsContainerJSCode()
{
  return &type metadata for LocalizedStringsContainerJSCode;
}

uint64_t ClassicDataVaultUtilities.ClassicDataVaultCreationError.description.getter()
{
  unint64_t v1 = *(void *)(v0 + 16);
  switch(v1 >> 61)
  {
    case 1uLL:
    case 2uLL:
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      goto LABEL_6;
    case 3uLL:
      id v15 = (id)(v1 & 0x1FFFFFFFFFFFFFFFLL);
      id v7 = (id)(v1 & 0x1FFFFFFFFFFFFFFFLL);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
      unint64_t v8 = sub_19F088144();
      if ((swift_dynamicCast() & 1) == 0)
      {
        sub_19F1DD43C();
        __break(1u);
        JUMPOUT(0x19F088130);
      }
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393160);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_19F24EB80;
      *(void *)(v9 + 56) = v8;
      *(void *)(v9 + 64) = sub_19F088184();
      *(void *)(v9 + 32) = v14;
      id v10 = v14;
      id v11 = objc_msgSend(v10, sel_code);
      uint64_t v12 = MEMORY[0x1E4FBB5C8];
      *(void *)(v9 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v9 + 104) = v12;
      *(void *)(v9 + 72) = v11;
      uint64_t v13 = sub_19F1DBDBC();

      swift_bridgeObjectRelease();
      return v13;
    case 4uLL:
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      goto LABEL_5;
    default:
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
LABEL_5:
      sub_19F1DBEFC();
LABEL_6:
      sub_19F1DBEFC();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393160);
      uint64_t v2 = swift_allocObject();
      uint64_t v3 = MEMORY[0x1E4FBC150];
      *(_OWORD *)(v2 + 16) = xmmword_19F24EAD0;
      uint64_t v4 = MEMORY[0x1E4FBC1C0];
      *(void *)(v2 + 56) = v3;
      *(void *)(v2 + 64) = v4;
      *(_DWORD *)(v2 + 32) = v1;
      uint64_t v5 = sub_19F1DBDBC();
      swift_bridgeObjectRelease();
      return v5;
  }
}

unint64_t sub_19F088144()
{
  unint64_t result = qword_1E946E668;
  if (!qword_1E946E668)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946E668);
  }
  return result;
}

unint64_t sub_19F088184()
{
  unint64_t result = qword_1E9473938;
  if (!qword_1E9473938)
  {
    sub_19F088144();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473938);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassicDataVaultUtilities()
{
  return &type metadata for ClassicDataVaultUtilities;
}

uint64_t sub_19F0881F4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3 >> 61;
  if ((a3 >> 61) <= 4)
  {
    if (v3 > 4) {
      unint64_t v3 = 0;
    }
    return ((uint64_t (__cdecl *)())((char *)&loc_19F088214 + (int)funcs_19F08821C[v3]))();
  }
  return result;
}

uint64_t sub_19F088220()
{
  return swift_bridgeObjectRetain();
}

id sub_19F088238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = (void *)(a3 & 0x1FFFFFFFFFFFFFFFLL);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t destroy for ClassicDataVaultUtilities.ClassicDataVaultCreationError(uint64_t a1)
{
  return sub_19F088298(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t sub_19F088298(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3 >> 61;
  if ((a3 >> 61) <= 4)
  {
    if (v3 > 4) {
      unint64_t v3 = 0;
    }
    return ((uint64_t (__cdecl *)())((char *)&loc_19F0882B8 + (int)funcs_19F0882C0[v3]))();
  }
  return result;
}

uint64_t sub_19F0882C4()
{
  return swift_bridgeObjectRelease();
}

void sub_19F0882DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = (void *)(a3 & 0x1FFFFFFFFFFFFFFFLL);
  swift_bridgeObjectRelease();
}

uint64_t *_s9JetEngine25ClassicDataVaultUtilitiesO29ClassicDataVaultCreationErrorOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_19F0881F4(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for ClassicDataVaultUtilities.ClassicDataVaultCreationError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_19F0881F4(*a2, v4, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  unint64_t v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_19F088298(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for ClassicDataVaultUtilities.ClassicDataVaultCreationError(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_19F088298(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassicDataVaultUtilities.ClassicDataVaultCreationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 12);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 60) >> 1) & 0xFFFFFFF7 | (8
                                                                        * ((*(void *)(a1 + 16) & 0x1000000000000000) != 0))) ^ 0xF;
  if (v3 >= 0xB) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ClassicDataVaultUtilities.ClassicDataVaultCreationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 12;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 3) & 1) - 2 * a2) << 60;
    }
  }
  return result;
}

uint64_t sub_19F0884BC(uint64_t a1)
{
  return *(void *)(a1 + 16) >> 61;
}

uint64_t sub_19F0884C8(uint64_t result)
{
  *(void *)(result + 16) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_19F0884D8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = *(void *)(result + 16) & 0xFFFFFFFFFFFFFFFLL | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for ClassicDataVaultUtilities.ClassicDataVaultCreationError()
{
  return &type metadata for ClassicDataVaultUtilities.ClassicDataVaultCreationError;
}

ValueMetadata *type metadata accessor for ClassicDataVaultUtilities._DefaultDataVaultAccessor()
{
  return &type metadata for ClassicDataVaultUtilities._DefaultDataVaultAccessor;
}

unint64_t sub_19F08850C()
{
  unint64_t result = qword_1E9473940;
  if (!qword_1E9473940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473940);
  }
  return result;
}

uint64_t Preferences.subscript.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_19F089130(a1, a2, a3, a4, a5);
  uint64_t v6 = sub_19F1DCAAC();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(a1, v6);
}

uint64_t sub_19F0885D8@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(uint64_t *)((char *)a1 + a2 - 24);
  uint64_t v4 = *(uint64_t *)((char *)a1 + a2 - 16);
  uint64_t v6 = *(uint64_t *)((char *)a1 + a2 - 8);
  uint64_t v7 = a1[1];
  v9[0] = *a1;
  v9[1] = v7;
  swift_bridgeObjectRetain();
  Preferences.subscript.getter(v9, v5, v4, v6, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F08865C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = *(uint64_t *)((char *)a3 + a4 - 24);
  uint64_t v5 = *(uint64_t *)((char *)a3 + a4 - 16);
  uint64_t v7 = *(uint64_t *)((char *)a3 + a4 - 8);
  uint64_t v8 = a3[1];
  v10[0] = *a3;
  v10[1] = v8;
  swift_bridgeObjectRetain();
  return sub_19F089130(a1, v10, v6, v5, v7);
}

void (*Preferences.subscript.modify(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  id v11 = malloc(0x50uLL);
  *a1 = v11;
  long long v11[2] = a5;
  v11[3] = v5;
  *id v11 = a3;
  v11[1] = a4;
  uint64_t v12 = sub_19F1DCAAC();
  void v11[4] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  void v11[5] = v13;
  size_t v14 = *(void *)(v13 + 64);
  v11[6] = malloc(v14);
  id v15 = malloc(v14);
  uint64_t v17 = *a2;
  uint64_t v16 = a2[1];
  v11[7] = v15;
  v11[8] = v17;
  void v11[9] = v16;
  v19[0] = v17;
  v19[1] = v16;
  swift_bridgeObjectRetain();
  Preferences.subscript.getter(v19, a3, a4, a5, (uint64_t)v15);
  return sub_19F0887E0;
}

void sub_19F0887E0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[8];
  uint64_t v4 = (*a1)[9];
  uint64_t v5 = (void *)(*a1)[6];
  uint64_t v6 = (void *)(*a1)[7];
  uint64_t v7 = (*a1)[4];
  uint64_t v8 = (*a1)[5];
  uint64_t v9 = (*a1)[2];
  uint64_t v11 = **a1;
  uint64_t v10 = (*a1)[1];
  if (a2)
  {
    uint64_t v12 = (*a1)[2];
    (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
    uint64_t v14 = v3;
    uint64_t v15 = v4;
    sub_19F089130((uint64_t)v5, &v14, v11, v10, v12);
    uint64_t v13 = *(void (**)(void *, uint64_t))(v8 + 8);
    v13(v5, v7);
    v13(v6, v7);
  }
  else
  {
    uint64_t v14 = (*a1)[8];
    uint64_t v15 = v4;
    sub_19F089130((uint64_t)v6, &v14, v11, v10, v9);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  free(v6);
  free(v5);
  free(v2);
}

uint64_t sub_19F08890C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + a3 - 24);
  uint64_t v20 = *(void *)(a4 + a3 - 32);
  uint64_t v7 = *(void *)(a4 + a3 - 16);
  uint64_t v8 = *(void *)(a4 + a3 - 8);
  swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_19F1DCAAC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - v11;
  double v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v19 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))((char *)&v19 - v15, a3, v6, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  return Preferences.subscript.setter((uint64_t)v12, (uint64_t)v16, v20, v6, v7, v8);
}

uint64_t Preferences.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a5;
  uint64_t v29 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_19F1DCAAC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  double v14 = (char *)&v29 - v13;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  double v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  uint64_t v31 = a1;
  v20(v14, a1, v11, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
    v21(v14, v11);
    uint64_t v22 = *(void *)(a6 + 8);
    uint64_t v34 = a4;
    uint64_t v35 = v22;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v33);
    uint64_t v24 = *(void *)(a4 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v24 + 16))(boxed_opaque_existential_2Tm, a2, a4);
    memset(v32, 0, sizeof(v32));
    (*(void (**)(_OWORD *, uint64_t *, uint64_t))(v30 + 16))(v32, v33, v29);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a2, a4);
    return ((uint64_t (*)(uint64_t, uint64_t))v21)(v31, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v14, AssociatedTypeWitness);
    uint64_t v26 = *(void *)(a6 + 8);
    uint64_t v34 = a4;
    uint64_t v35 = v26;
    uint64_t v27 = __swift_allocate_boxed_opaque_existential_2Tm(v33);
    uint64_t v28 = *(void *)(a4 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v28 + 16))(v27, a2, a4);
    (*(void (**)(_OWORD *__return_ptr, char *, uint64_t, uint64_t))(a6 + 24))(v32, v19, a4, a6);
    (*(void (**)(_OWORD *, uint64_t *, uint64_t))(v30 + 16))(v32, v33, v29);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a2, a4);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v31, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v19, AssociatedTypeWitness);
  }
}

void (*Preferences.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(uint64_t **a1, char a2)
{
  uint64_t v13 = malloc(0x60uLL);
  *a1 = v13;
  void v13[3] = a6;
  v13[4] = v6;
  v13[1] = a4;
  long long v13[2] = a5;
  *uint64_t v13 = a3;
  swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_19F1DCAAC();
  void v13[5] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v13[6] = v15;
  size_t v16 = *(void *)(v15 + 64);
  v13[7] = malloc(v16);
  double v17 = malloc(v16);
  uint64_t v18 = *(void *)(a4 - 8);
  uint64_t v19 = v18;
  _OWORD v13[8] = v17;
  v13[9] = v18;
  size_t v20 = *(void *)(v18 + 64);
  v13[10] = malloc(v20);
  v13[11] = malloc(v20);
  (*(void (**)(void))(v19 + 16))();
  Preferences.subscript.getter(a2, a3, a4, a5, a6, (uint64_t)v17);
  return sub_19F088FFC;
}

void sub_19F088FFC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[10];
  uint64_t v4 = (void *)(*a1)[11];
  if (a2)
  {
    uint64_t v6 = (void *)v2[8];
    uint64_t v5 = v2[9];
    uint64_t v8 = v2[6];
    uint64_t v7 = (void *)v2[7];
    uint64_t v9 = v2[5];
    uint64_t v13 = v2[3];
    uint64_t v10 = v2[1];
    uint64_t v12 = v2[2];
    uint64_t v11 = *v2;
    (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v7, v6, v9);
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v3, v4, v10);
    Preferences.subscript.setter((uint64_t)v7, (uint64_t)v3, v11, v10, v12, v13);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v9);
  }
  else
  {
    uint64_t v7 = (void *)v2[7];
    uint64_t v6 = (void *)v2[8];
    Preferences.subscript.setter((uint64_t)v6, (uint64_t)v4, *v2, v2[1], v2[2], v2[3]);
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);
  free(v2);
}

uint64_t sub_19F089130(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_19F1DCAAC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v15 = *a2;
  uint64_t v14 = a2[1];
  void v21[3] = type metadata accessor for PreferenceKey();
  void v21[4] = &protocol witness table for PreferenceKey<A>;
  v21[0] = v15;
  v21[1] = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  uint64_t v16 = *(void *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    long long v19 = 0u;
    long long v20 = 0u;
  }
  else
  {
    *((void *)&v20 + 1) = a4;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v19);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_2Tm, v13, a4);
  }
  return (*(uint64_t (**)(long long *, void *, uint64_t, uint64_t))(a5 + 16))(&v19, v21, a3, a5);
}

uint64_t sub_19F089308()
{
  return 24;
}

__n128 sub_19F089314(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_19F089328@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return Preferences.subscript.getter(a1, *(void *)(a2 + a1 - 32), *(void *)(a2 + a1 - 24), *(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8), a3);
}

uint64_t sub_19F089364()
{
  return 32;
}

__n128 sub_19F089370(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of Preferences.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of Preferences.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of Preferences.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of Preferences.removeValue(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Preferences.synchronize()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

double static AutomationSemantics.page(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3
    && *(void *)(v3 + 16)
    && (unint64_t v4 = sub_19EEBD400(0x6570795465676170, 0xE800000000000000), (v5 & 1) != 0)
    && (sub_19EEBDBA4(*(void *)(v3 + 56) + 32 * v4, (uint64_t)v15), swift_dynamicCast()))
  {
    uint64_t v7 = v13;
    unint64_t v6 = v14;
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
    uint64_t v7 = 1701273968;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19F24EAD0;
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 40) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  if (v3 && *(void *)(v3 + 16) && (unint64_t v10 = sub_19EEBD400(0x644965676170, 0xE600000000000000), (v11 & 1) != 0)) {
    sub_19EEBDBA4(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v15);
  }
  else {
    memset(v15, 0, sizeof(v15));
  }
  sub_19EE90F48(0, (uint64_t)v15, (uint64_t *)(inited + 32));
  *(void *)&v15[0] = v8;
  *((void *)&v15[0] + 1) = MEMORY[0x1E4FBC860];
  sub_19EE9104C(inited);
  double result = *(double *)v15;
  *a2 = v15[0];
  return result;
}

double static AutomationSemantics.page<A>(_:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  long long v19 = a3;
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  double v7 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v18 - v8;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, double))(*(void *)(a2 + 8) + 8))(&v20, a1, v7);
  unint64_t v10 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v10)
  {
    long long v22 = 0u;
    long long v23 = 0u;
    goto LABEL_9;
  }
  if (!*(void *)(v10 + 16) || (unint64_t v11 = sub_19EEBD400(0x6570795465676170, 0xE800000000000000), (v12 & 1) == 0))
  {
    long long v22 = 0u;
    long long v23 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19EEBDBA4(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1))
  {
LABEL_9:
    sub_19EEBCB4C((uint64_t)&v22);
    goto LABEL_10;
  }
  if (!swift_dynamicCast())
  {
LABEL_10:
    unint64_t v13 = 0xE400000000000000;
    uint64_t v14 = 1701273968;
    goto LABEL_11;
  }
  uint64_t v14 = v20;
  unint64_t v13 = v21;
LABEL_11:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v15 = swift_allocObject();
  long long v18 = xmmword_19F24EAD0;
  *(_OWORD *)(v15 + 16) = xmmword_19F24EAD0;
  *(void *)(v15 + 32) = v14;
  *(void *)(v15 + 40) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v18;
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  sub_19F1DCD0C();
  sub_19F1DD40C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, AssociatedTypeWitness);
  *((void *)&v23 + 1) = MEMORY[0x1E4FBB1A0];
  sub_19EE90F48(0, (uint64_t)&v22, (uint64_t *)(inited + 32));
  *(void *)&long long v22 = v15;
  *((void *)&v22 + 1) = MEMORY[0x1E4FBC860];
  sub_19EE9104C(inited);
  double result = *(double *)&v22;
  *long long v19 = v22;
  return result;
}

double static AutomationSemantics.article(itemKind:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return sub_19F089884(0x656C6369747261, 0xE700000000000000, a1, a2, a3, a4, a5);
}

double sub_19F089884@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19F24EAD0;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_19F24EAD0;
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = a4;
  *(void *)&v19[0] = v14;
  *((void *)&v19[0] + 1) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EE913A4(v15, (uint64_t)sub_19EE91750, 0);
  long long v18 = v19[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  sub_19EEBCD00(a5, (uint64_t)v19);
  sub_19EE90F48(0, (uint64_t)v19, (uint64_t *)(inited + 32));
  sub_19EEBCD00(a6, (uint64_t)v19);
  sub_19EE90F48(1, (uint64_t)v19, (uint64_t *)(inited + 64));
  sub_19EE9104C(inited);
  double result = *(double *)&v18;
  *a7 = v18;
  return result;
}

double static AutomationSemantics.productPage(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return sub_19F089884(0x50746375646F7270, 0xEB00000000656761, a1, a2, a3, a4, a5);
}

double static AutomationSemantics.onboarding(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return sub_19F089884(0x696472616F626E6FLL, 0xEA0000000000676ELL, a1, a2, a3, a4, a5);
}

double static AutomationSemantics.account(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return sub_19F089884(0x746E756F636361, 0xE700000000000000, a1, a2, a3, a4, a5);
}

double static AutomationSemantics.settings(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return sub_19F089884(0x73676E6974746573, 0xE800000000000000, a1, a2, a3, a4, a5);
}

double static AutomationSemantics.pill(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  *(void *)&v14[0] = &unk_1EF1413F8;
  *((void *)&v14[0] + 1) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_19EE913A4(v10, (uint64_t)sub_19EE91750, 0);
  long long v13 = v14[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  sub_19EEBCD00(a3, (uint64_t)v14);
  sub_19EE90F48(0, (uint64_t)v14, (uint64_t *)(inited + 32));
  sub_19EEBCD00(a4, (uint64_t)v14);
  sub_19EE90F48(1, (uint64_t)v14, (uint64_t *)(inited + 64));
  sub_19EE9104C(inited);
  double result = *(double *)&v13;
  *a5 = v13;
  return result;
}

double static AutomationSemantics.pillButton(id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  sub_19EEBCD00(a1, (uint64_t)v8);
  sub_19EE90F48(0, (uint64_t)v8, (uint64_t *)(inited + 32));
  sub_19EEBCD00(a2, (uint64_t)v8);
  sub_19EE90F48(1, (uint64_t)v8, (uint64_t *)(inited + 64));
  *(void *)&v8[0] = &unk_1EF1408A0;
  *(void *)&v8[1] = MEMORY[0x1E4FBC860];
  sub_19EE9104C(inited);
  double result = v8[0];
  *a3 = *(_OWORD *)v8;
  return result;
}

uint64_t sub_19F089DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_19EEC355C(a1, (uint64_t)v9);
  uint64_t v10 = a2;
  double v7 = *(uint64_t (**)(unsigned char *, uint64_t *, uint64_t, uint64_t))(a4 + 8);
  swift_bridgeObjectRetain();
  return v7(v9, &v10, a3, a4);
}

uint64_t sub_19F089E68(uint64_t a1)
{
  return sub_19F089DD8(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_19F089E88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = Array<A>.init(tryDeserializing:using:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
  *a5 = result;
  return result;
}

double static AutomationSemantics.nowPlaying(name:id:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19F24EAD0;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  *(void *)&v12[0] = &unk_1EF140870;
  *((void *)&v12[0] + 1) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_19EE913A4(v8, (uint64_t)sub_19EE91750, 0);
  long long v11 = v12[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  sub_19EEBCD00(a3, (uint64_t)v12);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v12, (void *)(inited + 32));
  sub_19EE9104C(inited);
  double result = *(double *)&v11;
  *a4 = v11;
  return result;
}

uint64_t static AutomationSemantics.nowPlaying(_:id:)@<X0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v4 = AutomationSemantics.NowPlayingElement.rawValue.getter();
  static AutomationSemantics.nowPlaying(name:id:)(v4, v5, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t AutomationSemantics.NowPlayingElement.rawValue.getter()
{
  uint64_t result = 0x427373696D736964;
  switch(*v0)
  {
    case 1:
      return 0x6B726F77747261;
    case 2:
      return 0x6F65646976;
    case 3:
      return 0x776F7262657965;
    case 4:
      return 0x656C746974;
    case 5:
      return 0x747369747261;
    case 6:
      return 0x72656469766F7270;
    case 7:
      return 0x656C746974627573;
    case 8:
      unsigned int v2 = 1701998445;
      goto LABEL_33;
    case 9:
      return 0x7375615079616C70;
    case 0xA:
      unsigned int v2 = 1954047342;
      goto LABEL_33;
    case 0xB:
      return 0x73756F6976657270;
    case 0xC:
      return 0xD000000000000011;
    case 0xD:
      uint64_t v3 = 0x646E69776572;
      goto LABEL_24;
    case 0xE:
      return 0xD000000000000012;
    case 0xF:
      return 0x6C53656D756C6F76;
    case 0x10:
      uint64_t v3 = 0x73636972796CLL;
      goto LABEL_24;
    case 0x11:
      uint64_t v3 = 0x7478654E7075;
      goto LABEL_24;
    case 0x12:
      return 0xD000000000000019;
    case 0x13:
      return 0xD000000000000013;
    case 0x14:
      uint64_t v3 = 0x657A6F6F6E73;
      goto LABEL_24;
    case 0x15:
    case 0x24:
    case 0x25:
    case 0x27:
      return 0xD000000000000010;
    case 0x16:
      return 0x42656C6666756873;
    case 0x17:
      uint64_t v3 = 0x746165706572;
LABEL_24:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7542000000000000;
      break;
    case 0x18:
      uint64_t result = 0x79616C506F747561;
      break;
    case 0x19:
      uint64_t result = 0x7475427365746F6ELL;
      break;
    case 0x1A:
      uint64_t result = 0xD000000000000012;
      break;
    case 0x1B:
      uint64_t result = 0x73636972796CLL;
      break;
    case 0x1C:
      uint64_t result = 0x794C6465636E7973;
      break;
    case 0x1D:
      uint64_t result = 0x62614C6F69647561;
      break;
    case 0x1E:
      unsigned int v2 = 1868983913;
LABEL_33:
      uint64_t result = v2 | 0x7474754200000000;
      break;
    case 0x1F:
    case 0x23:
      uint64_t result = 0x776569566F666E69;
      break;
    case 0x20:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 0x21:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 0x22:
      uint64_t result = 0xD000000000000014;
      break;
    case 0x26:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static AutomationSemantics.nowPlaying(_:)@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v7 = a1[7];
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  if (*(void *)(v7 + 16)
    && (unint64_t v9 = sub_19EEBD400(0x6973736572706D69, 0xEE00657079546E6FLL), (v10 & 1) != 0)
    && (sub_19EEBDBA4(*(void *)(v7 + 56) + 32 * v9, (uint64_t)&v18), swift_dynamicCast()))
  {
    uint64_t v11 = *((void *)&v17[0] + 1);
    uint64_t v12 = *(void *)&v17[0];
  }
  else
  {
    uint64_t v11 = 0xE700000000000000;
    uint64_t v12 = 0x636972656E6567;
  }
  *((void *)&v19 + 1) = v8;
  *(void *)&long long v18 = v6;
  *((void *)&v18 + 1) = v5;
  swift_bridgeObjectRetain();
  static AutomationSemantics.nowPlaying(name:id:)(v12, v11, (uint64_t)&v18, &v16);
  swift_bridgeObjectRelease();
  sub_19EEBCB4C((uint64_t)&v18);
  long long v13 = v16;
  if (v3)
  {
    *((void *)&v19 + 1) = v8;
    *(void *)&long long v18 = v4;
    *((void *)&v18 + 1) = v3;
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  sub_19EEBCD00((uint64_t)&v18, (uint64_t)v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AutomationAttribute.init(key:value:)(0x6449746E65726170, 0xE800000000000000, (uint64_t)v17, (void *)(inited + 32));
  v17[0] = v13;
  sub_19EE9104C(inited);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v17[0];
  return sub_19EEBCB4C((uint64_t)&v18);
}

double static AutomationSemantics.miniPlayer(name:id:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19F24EAD0;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  *(void *)&v12[0] = &unk_1EF140840;
  *((void *)&v12[0] + 1) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_19EE913A4(v8, (uint64_t)sub_19EE91750, 0);
  long long v11 = v12[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  sub_19EEBCD00(a3, (uint64_t)v12);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v12, (void *)(inited + 32));
  sub_19EE9104C(inited);
  double result = *(double *)&v11;
  *a4 = v11;
  return result;
}

uint64_t static AutomationSemantics.miniPlayer(_:id:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x6B726F77747261;
  switch(v3)
  {
    case 1:
      uint64_t v4 = 0xE500000000000000;
      uint64_t v5 = 0x6F65646976;
      break;
    case 2:
      uint64_t v4 = 0xE500000000000000;
      uint64_t v5 = 0x656C746974;
      break;
    case 3:
      uint64_t v4 = 0xE800000000000000;
      uint64_t v5 = 0x656C746974627573;
      break;
    case 4:
      uint64_t v4 = 0xE900000000000065;
      uint64_t v5 = 0x7375615079616C70;
      break;
    case 5:
      uint64_t v4 = 0xEA00000000006E6FLL;
      uint64_t v5 = 0x747475427478656ELL;
      break;
    case 6:
      uint64_t v4 = 0xEB00000000647261;
      uint64_t v5 = 0x77726F4674736166;
      break;
    default:
      break;
  }
  static AutomationSemantics.miniPlayer(name:id:)(v5, v4, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t AutomationSemantics.MiniPlayerElement.rawValue.getter()
{
  uint64_t result = 0x6B726F77747261;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F65646976;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x656C746974627573;
      break;
    case 4:
      uint64_t result = 0x7375615079616C70;
      break;
    case 5:
      uint64_t result = 0x747475427478656ELL;
      break;
    case 6:
      uint64_t result = 0x77726F4674736166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t AutomationSemantics.NowPlayingElement.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD60C();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 0;
  char v5 = 22;
  switch(v2)
  {
    case 0:
      goto LABEL_24;
    case 1:
      char v4 = 1;
      goto LABEL_24;
    case 2:
      char v4 = 2;
      goto LABEL_24;
    case 3:
      char v4 = 3;
      goto LABEL_24;
    case 4:
      char v4 = 4;
      goto LABEL_24;
    case 5:
      char v4 = 5;
      goto LABEL_24;
    case 6:
      char v4 = 6;
      goto LABEL_24;
    case 7:
      char v4 = 7;
      goto LABEL_24;
    case 8:
      char v4 = 8;
      goto LABEL_24;
    case 9:
      char v4 = 9;
      goto LABEL_24;
    case 10:
      char v4 = 10;
      goto LABEL_24;
    case 11:
      char v4 = 11;
      goto LABEL_24;
    case 12:
      char v4 = 12;
      goto LABEL_24;
    case 13:
      char v4 = 13;
      goto LABEL_24;
    case 14:
      char v4 = 14;
      goto LABEL_24;
    case 15:
      char v4 = 15;
      goto LABEL_24;
    case 16:
      char v4 = 16;
      goto LABEL_24;
    case 17:
      char v4 = 17;
      goto LABEL_24;
    case 18:
      char v4 = 18;
      goto LABEL_24;
    case 19:
      char v4 = 19;
      goto LABEL_24;
    case 20:
      char v4 = 20;
      goto LABEL_24;
    case 21:
      char v4 = 21;
LABEL_24:
      char v5 = v4;
      break;
    case 22:
      break;
    case 23:
      char v5 = 23;
      break;
    case 24:
      char v5 = 24;
      break;
    case 25:
      char v5 = 25;
      break;
    case 26:
      char v5 = 26;
      break;
    case 27:
      char v5 = 27;
      break;
    case 28:
      char v5 = 28;
      break;
    case 29:
      char v5 = 29;
      break;
    case 30:
      char v5 = 30;
      break;
    case 31:
      char v5 = 31;
      break;
    case 32:
      char v5 = 32;
      break;
    case 33:
      char v5 = 33;
      break;
    case 34:
      char v5 = 34;
      break;
    case 35:
      char v5 = 35;
      break;
    case 36:
      char v5 = 36;
      break;
    case 37:
      char v5 = 37;
      break;
    case 38:
      char v5 = 38;
      break;
    case 39:
      char v5 = 39;
      break;
    default:
      char v5 = 40;
      break;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_19F08ACB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19F03A860(*a1, *a2);
}

uint64_t sub_19F08ACC0()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F08AD28()
{
  AutomationSemantics.NowPlayingElement.rawValue.getter();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F08AD8C()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F08ADF0@<X0>(char *a1@<X8>)
{
  return AutomationSemantics.NowPlayingElement.init(rawValue:)(a1);
}

uint64_t sub_19F08ADFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AutomationSemantics.NowPlayingElement.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t AutomationSemantics.MiniPlayerElement.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 7;
  if (v2 < 7) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_19F08AE80(unsigned __int8 *a1, char *a2)
{
  return sub_19F03A878(*a1, *a2);
}

uint64_t sub_19F08AE8C()
{
  return sub_19EFB632C();
}

uint64_t sub_19F08AE98()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F08AFB8()
{
  return sub_19EFB632C();
}

uint64_t sub_19F08AFC0@<X0>(char *a1@<X8>)
{
  return AutomationSemantics.MiniPlayerElement.init(rawValue:)(a1);
}

void sub_19F08AFCC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6B726F77747261;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6F65646976;
      goto LABEL_3;
    case 2:
      *a1 = 0x656C746974;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x656C746974627573;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x7375615079616C70;
      a1[1] = 0xE900000000000065;
      break;
    case 5:
      *a1 = 0x747475427478656ELL;
      a1[1] = 0xEA00000000006E6FLL;
      break;
    case 6:
      *a1 = 0x77726F4674736166;
      a1[1] = 0xEB00000000647261;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_19F08B0D4()
{
  unint64_t result = qword_1E9473948;
  if (!qword_1E9473948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473948);
  }
  return result;
}

unint64_t sub_19F08B12C()
{
  unint64_t result = qword_1E9473950;
  if (!qword_1E9473950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473950);
  }
  return result;
}

uint64_t _s17NowPlayingElementOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD9) {
    goto LABEL_17;
  }
  if (a2 + 39 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 39) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 39;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 39;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 39;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x28;
  int v8 = v6 - 40;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s17NowPlayingElementOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 39 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 39) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD8)
  {
    unsigned int v6 = ((a2 - 217) >> 8) + 1;
    void *result = a2 + 39;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F08B2DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 39;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomationSemantics.NowPlayingElement()
{
  return &type metadata for AutomationSemantics.NowPlayingElement;
}

unsigned char *_s17MiniPlayerElementOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    void *result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F08B3E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomationSemantics.MiniPlayerElement()
{
  return &type metadata for AutomationSemantics.MiniPlayerElement;
}

BOOL static ImpressionsTracking.DynamicKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ImpressionsTracking.DynamicKind.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t ImpressionsTracking.DynamicKind.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t *ImpressionsTracking.DynamicChange.deinit()
{
  sub_19F08B4EC(v0[3], v0[4], v0[5], v0[6]);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19F08B4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ImpressionsTracking.DynamicChange.__deallocating_deinit()
{
  sub_19F08B4EC(v0[3], v0[4], v0[5], v0[6]);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_19F08B5D4()
{
  unint64_t result = qword_1E9473958;
  if (!qword_1E9473958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473958);
  }
  return result;
}

unsigned char *_s11DynamicKindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F08B6F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsTracking.DynamicKind()
{
  return &type metadata for ImpressionsTracking.DynamicKind;
}

uint64_t type metadata accessor for ImpressionsTracking.DynamicChange()
{
  return self;
}

uint64_t method lookup function for ImpressionsTracking.DynamicChange(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ImpressionsTracking.DynamicChange);
}

id MescalBagContract.__allocating_init(_:)(void *a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MescalBagContract.init(_:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = *a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MescalBagContract.mescalCertificateURL.getter()
{
  return sub_19F08BA6C(0xD000000000000013, 0x800000019F26FA10, (SEL *)&selRef_URLForKey_);
}

id MescalBagContract.mescalSetupURL.getter()
{
  return sub_19F08BA6C(0x7061732D6E676973, 0xEE0070757465732DLL, (SEL *)&selRef_URLForKey_);
}

id MescalBagContract.mescalPrimingURL.getter()
{
  return sub_19F08BA6C(0x6C7255656D697270, 0xE800000000000000, (SEL *)&selRef_URLForKey_);
}

id MescalBagContract.mescalSignedActions.getter()
{
  return sub_19F08BA6C(0x612D64656E676973, 0xEE00736E6F697463, (SEL *)&selRef_dictionaryForKey_);
}

id MescalBagContract.mescalSignSapRequests.getter()
{
  return sub_19F08BA6C(0xD000000000000010, 0x800000019F26FA30, (SEL *)&selRef_dictionaryForKey_);
}

id sub_19F08B9B4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  unsigned int v6 = *(void **)&a1[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing];
  BOOL v7 = a1;
  int v8 = (void *)sub_19F1DBD4C();
  id v9 = objc_msgSend(v6, *a5, v8);

  return v9;
}

id MescalBagContract.mescalSignSapResponses.getter()
{
  return sub_19F08BA6C(0xD000000000000011, 0x800000019F26FA50, (SEL *)&selRef_dictionaryForKey_);
}

id sub_19F08BA6C(uint64_t a1, uint64_t a2, SEL *a3)
{
  objc_super v5 = *(void **)(v3 + OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing);
  unsigned int v6 = (void *)sub_19F1DBD4C();
  id v7 = objc_msgSend(v5, *a3, v6);

  return v7;
}

id MescalBagContract.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MescalBagContract.init()()
{
}

id MescalBagContract.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MescalBagContract()
{
  return self;
}

uint64_t method lookup function for MescalBagContract(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MescalBagContract);
}

uint64_t dispatch thunk of MescalBagContract.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void *Preferences.subscript.getter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  type metadata accessor for NestedPreferences();
  id v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  void v7[3] = v5;
  v7[4] = v3;
  uint64_t v7[5] = a3;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return v7;
}

uint64_t sub_19F08BC6C(char a1, void (*a2)(uint64_t *))
{
  uint64_t v5 = v2[5];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v12 = v8;
  uint64_t v13 = v7;
  swift_bridgeObjectRetain();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  Preferences.subscript.getter(&v12, ObjectType, v9, v5, (uint64_t)&v14);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = v14;
  if (!v14)
  {
    if ((a1 & 1) == 0) {
      return result;
    }
    uint64_t v11 = MEMORY[0x1E4FBC868];
  }
  uint64_t v15 = v11;
  a2(&v15);
  uint64_t v13 = v7;
  uint64_t v14 = v15;
  uint64_t v12 = v8;
  swift_bridgeObjectRetain();
  return Preferences.subscript.setter((uint64_t)&v14, &v12, ObjectType, v9, v5);
}

uint64_t sub_19F08BD68(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v8 = v7;
  sub_19EEBCD00(a3, (uint64_t)v10);
  return sub_19EE7D94C((uint64_t)v10, v6, v8);
}

uint64_t sub_19F08BDFC(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v3 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  sub_19EF6B168(v4, v5, v7);
  swift_bridgeObjectRelease();
  return sub_19EEBCB4C((uint64_t)v7);
}

uint64_t sub_19F08BE7C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19F08BEBC(uint64_t a1, uint64_t a2)
{
  return sub_19EEBCB4C(a1);
}

void (*sub_19F08BF24(void *a1, void *a2))(long long **a1, char a2)
{
  uint64_t v5 = (char *)malloc(0x98uLL);
  *a1 = v5;
  uint64_t v6 = v5 + 80;
  *((void *)v5 + 18) = v2;
  sub_19EEC4154((uint64_t)a2, (uint64_t)v5);
  sub_19EEBC2E0(a2, v6);
  return sub_19F08BF98;
}

void sub_19F08BF98(long long **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)(*a1 + 5);
  if (a2)
  {
    sub_19EEBCD00((uint64_t)(*a1 + 5), (uint64_t)(v2 + 7));
    uint64_t v4 = sub_19EEBB420(v2, (uint64_t)v2 + 40);
    MEMORY[0x1F4188790](v4);
    sub_19F08BC6C(1, (void (*)(uint64_t *))sub_19F08C200);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2 + 40);
    sub_19EEBCB4C((uint64_t)(v2 + 7));
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    sub_19F08BC6C(1, (void (*)(uint64_t *))sub_19F08C208);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  sub_19EEBCB4C(v3);
  free(v2);
}

uint64_t sub_19F08C0B8()
{
  return sub_19F08BC6C(0, (void (*)(uint64_t *))sub_19F08C1F8);
}

uint64_t sub_19F08C0F8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1);
}

void *sub_19F08C144@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v4 = *(uint64_t *)((char *)a1 + a2 - 8);
  uint64_t v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  uint64_t result = Preferences.subscript.getter(v7, (uint64_t)a1, v4);
  *a3 = result;
  a3[1] = &off_1EF13FCF0;
  return result;
}

void sub_19F08C194()
{
}

uint64_t sub_19F08C1E0()
{
  return 16;
}

__n128 sub_19F08C1EC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_19F08C1F8(uint64_t a1)
{
  return sub_19F08BDFC(a1, *(void **)(v1 + 16));
}

uint64_t sub_19F08C200(uint64_t a1)
{
  return sub_19F08BD68(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

id sub_19F08C20C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5 == 1)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    *(void *)a3 = v6;
    *(unsigned char *)(a3 + 8) = 1;
    return v6;
  }
  else
  {
    if (v5)
    {
      sub_19EFA6878();
      uint64_t v8 = swift_allocError();
      *uint64_t v9 = a1;
      *(void *)a3 = v8;
      *(unsigned char *)(a3 + 8) = 1;
    }
    else
    {
      *(void *)a3 = *a2;
      *(unsigned char *)(a3 + 8) = 0;
    }
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_19F08C2B8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v6 = *a1;
  uint64_t result = BasicImpressionsTracker.snapshotOnScreenImpressions(in:on:)(&v6, a2);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t ImpressionsTracker.snapshotOnScreenImpressionsAndDynamicEvents(in:on:)@<X0>(char *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  char v6 = *a1;
  uint64_t result = (*(uint64_t (**)(char *))(a2 + 40))(&v6);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_19F08C350@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_19F08C358(*a1, a2, a3);
}

uint64_t sub_19F08C358@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v29[11] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  char v10 = v3 + 2;
  swift_beginAccess();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_19EF9E858(v11);
  swift_bridgeObjectRelease();
  double v13 = *((double *)v3 + 3);
  LOBYTE(v29[0]) = a1;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v15 = _s9JetEngine19ImpressionsTrackingO09serializeC02on4from6within2inAE9excludingSayypGSS_SayAC17AppearanceJournalCGSdAA0C13TrackerFormatO10Foundation4DateVSayAA17ImpressionMetricsV2IDVGtFZ_0(v8, v9, (unint64_t)v12, (unsigned __int8 *)v29, a2, MEMORY[0x1E4FBC860], v13);
  swift_release();
  if (_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0())
  {
    long long v16 = self;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472178);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    *(void *)(inited + 32) = 0x6973736572706D69;
    *(void *)(inited + 40) = 0xEB00000000736E6FLL;
    *(void *)(inited + 48) = v15;
    swift_bridgeObjectRetain();
    sub_19EFB4930(inited);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
    long long v18 = (void *)sub_19F1DBB1C();
    swift_bridgeObjectRelease();
    v29[0] = 0;
    id v19 = objc_msgSend(v16, sel_dataWithJSONObject_options_error_, v18, 3, v29);

    id v20 = v29[0];
    if (v19)
    {
      uint64_t v21 = sub_19F1DB40C();
      unint64_t v23 = v22;

      sub_19F1DBDCC();
      uint64_t v24 = sub_19F1DBD9C();
      if (v25)
      {
        sub_19EFCBF0C(v24, v25, 0);
        sub_19EEA072C(v21, v23);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19EEA072C(v21, v23);
      }
    }
    else
    {
      uint64_t v26 = v20;
      uint64_t v27 = (void *)sub_19F1DB19C();

      swift_willThrow();
    }
  }
  *char v10 = MEMORY[0x1E4FBC868];
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v15;
  a3[1] = v14;
  return result;
}

uint64_t ImpressionsTracker.consumeImpressionsAndDynamicEvents(in:on:)@<X0>(char *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  char v6 = *a1;
  uint64_t result = (*(uint64_t (**)(char *))(a2 + 48))(&v6);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *a3 = result;
  a3[1] = v5;
  return result;
}

BOOL static ImpressionsTrackerFormat.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ImpressionsTrackerFormat.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t ImpressionsTrackerFormat.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t ImpressionsData.impressions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsData.dynamicEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsTracker.elementDidEnterView(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  v5[2] = 0;
  char v6 = 1;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  return (*(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t))(a4 + 16))(a1, a2, v5, a3);
}

uint64_t ImpressionsTracker.elementDidEnterView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8))(a1, a2, a4, a5);
}

uint64_t ImpressionsTracker.elementDidLeaveView(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  v5[2] = 0;
  char v6 = 1;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  return (*(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t))(a4 + 32))(a1, a2, v5, a3);
}

uint64_t ImpressionsTracker.elementDidLeaveView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, a2, a4, a5);
}

unint64_t sub_19F08C7FC()
{
  unint64_t result = qword_1E9473968[0];
  if (!qword_1E9473968[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9473968);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ImpressionsTrackerFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F08C91CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsTrackerFormat()
{
  return &type metadata for ImpressionsTrackerFormat;
}

ValueMetadata *type metadata accessor for ImpressionsData()
{
  return &type metadata for ImpressionsData;
}

uint64_t dispatch thunk of ImpressionsTracker.elementDidEnterView(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ImpressionsTracker.elementDidEnterView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ImpressionsTracker.elementDidLeaveView(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ImpressionsTracker.elementDidLeaveView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ImpressionsTracker.snapshotOnScreenImpressions(in:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ImpressionsTracker.consumeImpressions(in:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ImpressionsTracker.snapshotOnScreenImpressionsAndDynamicEvents(in:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ImpressionsTracker.consumeImpressionsAndDynamicEvents(in:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of ImpressionsTracker.removeAllImpressions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t MetricsEventLinterConfigurationProvider.additionalRules(forTopic:)()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t dispatch thunk of MetricsEventLinterConfigurationProvider.baseFields(forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of MetricsEventLinterConfigurationProvider.compoundSeparator(forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of MetricsEventLinterConfigurationProvider.deResolutionRules(forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of MetricsEventLinterConfigurationProvider.additionalRules(forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

JetEngine::StandardMetricsFieldsBuilder __swiftcall StandardMetricsFieldsBuilder.init(baseFields:)(JetEngine::StandardMetricsFieldsBuilder baseFields)
{
  v1->allMetricsFields._rawValue = baseFields.allMetricsFields._rawValue;
  return baseFields;
}

uint64_t MetricsFieldsBuilder.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a4, a6);
  if (!*(void *)(v8 + 16))
  {
    long long v13 = 0u;
    long long v14 = 0u;
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_19EE77E90(a1, a2);
  if ((v10 & 1) == 0)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19EEBDBA4(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1))
  {
LABEL_10:
    sub_19EEBD664((uint64_t)&v13, &qword_1EB393260);
    return 0;
  }
  sub_19F1DC27C();
  if (swift_dynamicCast()) {
    return v12;
  }
  else {
    return 0;
  }
}

uint64_t MetricsFieldsBuilder.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  MetricsFieldsBuilder.subscript.getter(a1, a2, a3, a4);
  if (v6)
  {
    sub_19F1DB2FC();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = sub_19F1DB34C();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a5, 1, 1, v8);
  }
}

{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  char v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = sub_19F1DB34C();
  long long v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  long long v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MetricsFieldsBuilder.subscript.getter(a1, a2, a3, a4, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1EB392E50);
    double v17 = sub_19F1DB01C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a5, 1, 1, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_19F1DAF5C();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t MetricsFieldsBuilder.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = MetricsFieldsBuilder.subscript.getter(a1, a2, a3, a4);
  if (v7)
  {
    sub_19EEC4910();
    uint64_t v8 = sub_19F1DCB5C();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  *a5 = v8;
  a5[1] = 0;
  return result;
}

uint64_t StandardMetricsFieldsBuilder.allMetricsFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StandardMetricsFieldsBuilder.addValue(_:forField:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_19EEBDBA4(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  return sub_19EE7D94C((uint64_t)v6, a2, a3);
}

Swift::Void __swiftcall StandardMetricsFieldsBuilder.removeValue(forField:)(Swift::String forField)
{
  uint64_t v2 = v1;
  uint64_t object = (uint64_t)forField._object;
  uint64_t countAndFlagsBits = forField._countAndFlagsBits;
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_19EEBD400(countAndFlagsBits, object);
  LOBYTE(object) = v6;
  swift_bridgeObjectRelease();
  if (object)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *(void *)&v10[0] = *v2;
    *uint64_t v2 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19EE7DBE0();
      uint64_t v8 = *(void *)&v10[0];
    }
    swift_bridgeObjectRelease();
    sub_19EEBDC00((_OWORD *)(*(void *)(v8 + 56) + 32 * v5), v9);
    sub_19EF6BF40(v5, v8);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    sub_19EEBDC00(v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_19EEBD664((uint64_t)v10, &qword_1EB393260);
}

uint64_t StandardMetricsFieldsBuilder.merge(_:uniquingKeysWith:)(uint64_t a1, void (*a2)(_OWORD *__return_ptr, id *, _OWORD *), uint64_t a3)
{
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  *int v3 = 0x8000000000000000;
  sub_19EF6DD24(a1, (uint64_t)sub_19EEBD6C0, 0, isUniquelyReferenced_nonNull_native, a2, a3);
  *int v3 = v9;
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of MetricsFieldsBuilder.init(baseFields:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MetricsFieldsBuilder.allMetricsFields.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for StandardMetricsFieldsBuilder()
{
  return &type metadata for StandardMetricsFieldsBuilder;
}

uint64_t sub_19F08D310()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    int v3 = *(os_unfair_lock_s **)(Strong + 16);
    uint64_t v4 = swift_task_alloc();
    long long v5 = *(_OWORD *)(v0 + 72);
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = sub_19F08DD9C;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19F08DE0C();
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(void *)(v0 + 104))
  {
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v9 = *(void *)(v0 + 136);
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, *MEMORY[0x1E4F38910], v9);
    sub_19F1DB9BC();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  char v10 = *(void **)(v0 + 280);
  Promise.reject(_:)(v10);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

void sub_19F08D510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_retain();
  sub_19EEAC6BC(v22, v10);
  uint64_t v11 = v22[0];
  uint64_t v12 = v22[1];
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v13 = sub_19EEAC6C0(v11, v12, v22[0]);
  swift_bridgeObjectRelease();
  if (v13)
  {
    sub_19F1DD95C();
    uint64_t v14 = sub_19EF26A38(v22[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v15 = (void *)swift_allocError();
    *long long v16 = v14;
    swift_willThrow();
    uint64_t v17 = a5[3];
    uint64_t v18 = a5[4];
    __swift_project_boxed_opaque_existential_1(a5, v17);
    id v19 = (void *)swift_allocObject();
    _OWORD v19[2] = a3;
    void v19[3] = a4;
    v19[4] = v15;
    id v20 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v18 + 8);
    swift_retain();
    id v21 = v15;
    v20(sub_19EEA4AAC, v19, v17, v18);
    swift_release();
  }
  else
  {
    sub_19EEAE19C();
    Promise.then(perform:orCatchError:on:)(a1, a2, a3, a4, (uint64_t)a5);
    swift_release();
  }
}

uint64_t sub_19F08D6F4(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x1F4188298](sub_19EEAC198, 0, 0);
}

uint64_t sub_19F08D714()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F08D778()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  uint64_t v3 = type metadata accessor for Result();
  uint64_t v4 = sub_19F1DCAAC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - v6;
  uint64_t v8 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v15 - v10;
  if (os_unfair_lock_trylock((os_unfair_lock_t)(*(void *)(v0 + 16) + 16)))
  {
    if (*(unsigned char *)(v0 + 40) == 1)
    {
      v15[1] = *(void *)(v0 + 32);
      swift_retain();
      sub_19EE8CC00();
      uint64_t v12 = *(void *)(v3 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v3) == 1)
      {
        uint64_t v3 = v4;
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v7, v2);
          uint64_t v16 = 0;
          unint64_t v17 = 0xE000000000000000;
          sub_19F1DD40C();
          sub_19EEAE6F8();
          uint64_t v13 = v16;
          (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v2);
          goto LABEL_10;
        }
        uint64_t v5 = v12;
      }
      sub_19EEAE6F8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    }
    uint64_t v16 = 60;
    unint64_t v17 = 0xE100000000000000;
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    uint64_t v13 = v16;
LABEL_10:
    os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v1 + 16) + 16));
    return v13;
  }
  uint64_t v16 = 60;
  unint64_t v17 = 0xE100000000000000;
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return v16;
}

uint64_t sub_19F08DA98()
{
  swift_release();
  sub_19EEAE6F8();
  return swift_deallocClassInstance();
}

uint64_t sub_19F08DAE0()
{
  return sub_19EEAE6F8();
}

uint64_t sub_19F08DAF0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_19EEAF010();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_19F08DB3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_19EEAF010();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_19EEAE6F8();
  return a1;
}

uint64_t sub_19F08DB94(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_19EEAE6F8();
  return a1;
}

uint64_t type metadata accessor for DependencyPromise.ObjectState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F08DBF8()
{
  return sub_19F08D778();
}

uint64_t sub_19F08DC1C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F08DC54()
{
  uint64_t v1 = sub_19F1DB85C();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v7 = v3 | 7;
  unint64_t v5 = (((((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v5 + 8, v7);
}

uint64_t sub_19F08DD9C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v3;
  *(unsigned char *)(v1 + 40) = 0;
  sub_19EEAE6F8();
  return swift_retain();
}

uint64_t sub_19F08DDE4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_19F08DE0C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_19F08DE34()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F08DE74(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_19F091880(a1, (uint64_t)sub_19EEBD6C0, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

BOOL static JetPackageReaderError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetPackageReaderError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JetPackageReaderError.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t JetPackageReaderError.errorDescription.getter()
{
  unint64_t result = 0xD000000000000023;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000041;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      unint64_t result = 0xD000000000000021;
      break;
  }
  return result;
}

uint64_t JetPackageReader.init(keyURLs:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  a2[1] = 0;
  a2[2] = 0;
  *a2 = result;
  return result;
}

uint64_t JetPackageReader.init(keyURLs:verifySignature:)@<X0>(uint64_t result@<X0>, char a2@<W1>, void *a3@<X8>)
{
  if (a2) {
    uint64_t v3 = sub_19F08E304;
  }
  else {
    uint64_t v3 = 0;
  }
  *a3 = result;
  a3[1] = v3;
  a3[2] = 0;
  return result;
}

uint64_t JetPackageReader.init(keyURL:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE628D4(a1, (uint64_t)v10);
  unint64_t v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473A10);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F18);
    unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19F24EAD0;
    uint64_t v15 = (void *)(v14 + v13);
    uint64_t v16 = (char *)v15 + *(int *)(v12 + 48);
    *uint64_t v15 = 0;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v16, v7, v4);
    unint64_t v11 = sub_19EFC1420(v14);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t result = sub_19EE6293C(a1);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = v11;
  return result;
}

uint64_t sub_19F08E304(char *a1, void *a2)
{
  char v3 = *a1;
  long long v4 = *(_OWORD *)(a1 + 8);
  if (qword_1E946F0B0 != -1)
  {
    long long v9 = *(_OWORD *)(a1 + 8);
    swift_once();
    long long v4 = v9;
  }
  uint64_t v5 = qword_1E946F878;
  unint64_t v6 = qword_1E946F880;
  v10[0] = v3;
  long long v11 = v4;
  sub_19EEA0784(qword_1E946F878, qword_1E946F880);
  char v7 = sub_19F1A75D4((uint64_t)v10, a2, 0x20000);
  sub_19EEA072C(v5, v6);
  return v7 & 1;
}

uint64_t JetPackageReader.init(keyURL:verifySignature:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t *a3@<X8>)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE628D4(a1, (uint64_t)v12);
  unint64_t v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473A10);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F18);
    unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
    unint64_t v17 = (void *)(v16 + v15);
    uint64_t v18 = (char *)v17 + *(int *)(v14 + 48);
    *unint64_t v17 = 0;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v18, v9, v6);
    unint64_t v13 = sub_19EFC1420(v16);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t result = sub_19EE6293C(a1);
  if (a2) {
    id v20 = sub_19F08E304;
  }
  else {
    id v20 = 0;
  }
  *a3 = v13;
  a3[1] = (unint64_t)v20;
  a3[2] = 0;
  return result;
}

void sub_19F08E66C()
{
  qword_1E946FD40 = MEMORY[0x1E4FBC870];
}

id sub_19F08E680()
{
  id result = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  qword_1E946FD48 = (uint64_t)result;
  return result;
}

uint64_t JetPackageReader.metadata(forPackageAt:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  sub_19F1DB2DC();
  uint64_t v7 = type metadata accessor for FileInputStream();
  swift_allocObject();
  uint64_t result = sub_19F04BB08();
  if (!v2)
  {
    v9[5] = v4;
    v9[6] = v5;
    v9[7] = v6;
    v9[3] = v7;
    void v9[4] = &off_1EF13D8C8;
    v9[0] = result;
    sub_19F08E784((uint64_t)v9, a1);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  }
  return result;
}

uint64_t sub_19F08E784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  sub_19EEC4154(a1, (uint64_t)v41);
  type metadata accessor for JetPackageFormatParser();
  uint64_t inited = swift_initStackObject();
  sub_19EEBB420(v41, inited + 16);
  *(unsigned char *)(inited + 56) = 0;
  char v9 = sub_19F07B468();
  if (!v3)
  {
    if (v9)
    {
      sub_19F091B40();
      swift_allocError();
      *uint64_t v10 = 2;
      swift_willThrow();
    }
    else
    {
      sub_19F07B71C((uint64_t)&v34);
      char v11 = v34;
      char v12 = BYTE1(v34);
      char v13 = BYTE2(v34);
      char v14 = BYTE3(v34);
      char v15 = BYTE4(v34);
      uint64_t v16 = v35;
      uint64_t v42 = v36;
      unint64_t v17 = v40;
      uint64_t v34 = v5;
      uint64_t v35 = v6;
      uint64_t v18 = v38;
      uint64_t v36 = v7;
      uint64_t v19 = v39;
      uint64_t v31 = v38;
      uint64_t v32 = v39;
      unint64_t v33 = v40;
      if (*(unsigned char *)(inited + 56) == 2)
      {
        char v24 = v15;
        char v25 = v14;
        char v26 = v13;
        char v27 = v12;
        char v28 = v11;
        uint64_t v29 = v16;
        uint64_t v30 = v37;
        sub_19EF63FE0(v38, v39, v40);
        unint64_t v20 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
        sub_19F08ED04(&v31, inited + 16, v20);
        swift_release();
        swift_bridgeObjectRelease();
        sub_19F033400(v18, v19, v17);
        sub_19EF63FE0(v18, v19, v17);
        uint64_t result = sub_19F033400(v18, v19, v17);
        *(void *)a2 = 0;
        *(unsigned char *)(a2 + 8) = v28;
        *(unsigned char *)(a2 + 9) = v27;
        *(unsigned char *)(a2 + 10) = v26;
        *(unsigned char *)(a2 + 11) = v25;
        *(unsigned char *)(a2 + 12) = v24;
        *(void *)(a2 + 16) = v18;
        *(void *)(a2 + 24) = v19;
        *(void *)(a2 + 32) = v17;
        *(void *)(a2 + 40) = v29;
        *(void *)(a2 + 48) = v42;
        *(void *)(a2 + 56) = v30;
        return result;
      }
      sub_19F07C0E8();
      uint64_t v21 = swift_allocError();
      *unint64_t v22 = 0;
      sub_19EF63FE0(v18, v19, v17);
      swift_willThrow();
      sub_19F033400(v31, v32, v33);
      uint64_t v34 = 0;
      uint64_t v35 = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      uint64_t v31 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
      sub_19F1DCF4C();
      sub_19F0E88E4(v34, v35);
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_19F033400(v18, v19, v17);
    }
  }
  return swift_release();
}

uint64_t JetPackageReader.unpack(packageURL:to:artifactStoreURL:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  sub_19F1DB2DC();
  uint64_t v8 = type metadata accessor for FileInputStream();
  swift_allocObject();
  uint64_t result = sub_19F04BB08();
  if (!v3)
  {
    v10[5] = v5;
    v10[6] = v6;
    v10[7] = v7;
    void v10[3] = v8;
    void v10[4] = &off_1EF13D8C8;
    v10[0] = result;
    sub_19F08EB80(v10, a2);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  return result;
}

id sub_19F08EB80(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  LOBYTE(v4) = v5;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    sub_19F1DD2EC();
  }
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F0E88EC(0xD000000000000018, 0x800000019F26FD70);
  uint64_t v6 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v6);
  return sub_19F091458(a2, (void (*)(id))sub_19F091F44);
}

void sub_19F08ED04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  uint64_t v7 = sub_19F1DB85C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[1];
  unint64_t v12 = a1[2];
  uint64_t v48 = *a1;
  uint64_t v49 = v11;
  uint64_t v13 = *(void *)(v3 + 8);
  uint64_t v50 = *(void *)(v3 + 16);
  sub_19EE7E420();
  char v14 = (void *)sub_19F1DCA8C();
  sub_19F1DC98C();
  sub_19F1DB84C();
  sub_19F1DB80C();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v8 + 8);
  v54(v10, v7);
  if (!v13) {
    goto LABEL_10;
  }
  uint64_t v45 = v7;
  uint64_t v46 = (uint64_t (*)(uint64_t *, uint64_t))v13;
  if (v12 >> 60 != 15)
  {
    uint64_t v44 = v14;
    uint64_t v17 = v48;
    uint64_t v18 = v49;
    LOBYTE(v51) = v48;
    uint64_t v52 = v49;
    unint64_t v53 = v12;
    uint64_t v19 = v46;
    sub_19EE47F40((uint64_t)v46);
    sub_19EF63FE0(v17, v18, v12);
    char v20 = v19(&v51, a2);
    if (v4)
    {
      sub_19EE83660((uint64_t)v19);
      sub_19F033400(v17, v18, v12);
      char v14 = v44;
      goto LABEL_7;
    }
    unint64_t v25 = v22;
    if (v20)
    {
      sub_19EED5BFC(v21, v22);
      sub_19F033400(v48, v49, v12);
      sub_19EE83660((uint64_t)v46);
      char v14 = v44;
      uint64_t v7 = v45;
LABEL_10:
      sub_19F1DC97C();
      sub_19F1DB84C();
      sub_19F1DB80C();
      unint64_t v23 = v10;
      uint64_t v24 = v7;
      goto LABEL_11;
    }
    uint64_t v26 = v21;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    uint64_t v28 = inited;
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    *(void *)(inited + 32) = 0x747365676964;
    *(void *)(inited + 40) = 0xE600000000000000;
    unint64_t v43 = v12;
    char v14 = v44;
    unint64_t v42 = v25;
    if (v25 >> 60 == 15)
    {
      uint64_t v29 = (uint64_t *)(inited + 48);
      *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
      uint64_t v30 = v48;
    }
    else
    {
      sub_19EEE0560(v26, v25);
      uint64_t v31 = sub_19F1DB3FC();
      unint64_t v32 = v25;
      unint64_t v34 = v33;
      sub_19EED5BFC(v26, v32);
      uint64_t v29 = (uint64_t *)(v28 + 48);
      *(void *)(v28 + 72) = MEMORY[0x1E4FBB1A0];
      uint64_t v30 = v48;
      if (v34)
      {
        *uint64_t v29 = v31;
LABEL_17:
        *(void *)(v28 + 56) = v34;
        unint64_t v35 = sub_19EEBF898(v28);
        uint64_t v36 = v47;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_19F08DE74(v35, v36);
        uint64_t v51 = 0;
        uint64_t v52 = 0xE000000000000000;
        sub_19F1DCCEC();
        sub_19F1DBEFC();
        sub_19F1DBB4C();
        sub_19F1DBEFC();
        swift_bridgeObjectRelease();
        sub_19F0E88E4(v51, v52);
        swift_bridgeObjectRelease();
        id v38 = objc_msgSend(self, sel_defaultCenter);
        if (qword_1E946D928 != -1) {
          swift_once();
        }
        uint64_t v48 = qword_1E946D6B8;
        sub_19EF4C6D8(v37);
        swift_bridgeObjectRelease();
        uint64_t v39 = (void *)sub_19F1DBB1C();
        swift_bridgeObjectRelease();
        objc_msgSend(v38, sel_postNotificationName_object_userInfo_, v48, 0, v39);

        sub_19F091B40();
        swift_allocError();
        *unint64_t v40 = 6;
        swift_willThrow();
        sub_19EED5BFC(v26, v42);
        sub_19F033400(v30, v49, v43);
        uint64_t v16 = (uint64_t)v46;
        goto LABEL_4;
      }
    }
    *uint64_t v29 = 0x6E776F6E6B6E75;
    unint64_t v34 = 0xE700000000000000;
    goto LABEL_17;
  }
  uint64_t v51 = 0;
  uint64_t v52 = 0xE000000000000000;
  swift_retain();
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  uint64_t v51 = 0xD000000000000024;
  uint64_t v52 = 0x800000019F270010;
  sub_19F1DBB4C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F0E88E4(v51, v52);
  swift_bridgeObjectRelease();
  sub_19F091B40();
  swift_allocError();
  *char v15 = 6;
  swift_willThrow();
  uint64_t v16 = (uint64_t)v46;
LABEL_4:
  sub_19EE83660(v16);
LABEL_7:
  sub_19F1DC97C();
  sub_19F1DB84C();
  sub_19F1DB80C();
  unint64_t v23 = v10;
  uint64_t v24 = v45;
LABEL_11:
  v54(v23, v24);
}

uint64_t sub_19F08F354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v214 = a3;
  int v202 = a8;
  uint64_t v203 = a7;
  uint64_t v204 = a4;
  uint64_t v200 = a5;
  uint64_t v201 = a6;
  uint64_t v218 = a2;
  uint64_t v238 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v8 - 8);
  v198 = (char *)&v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  v199 = (char *)&v175 - v11;
  uint64_t v12 = type metadata accessor for FileArtifact();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v197 = (uint64_t)&v175 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v194 = (uint64_t)&v175 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v212 = (uint64_t)&v175 - v17;
  uint64_t v18 = sub_19F1DB85C();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v216 = v18;
  uint64_t v217 = v19;
  MEMORY[0x1F4188790](v18);
  v219 = (char *)&v175 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_19F1DB5AC();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v175 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = sub_19F1DB34C();
  uint64_t v25 = *(void *)(v220 - 8);
  MEMORY[0x1F4188790](v220);
  v195 = (char *)&v175 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  v193 = (char *)&v175 - v28;
  MEMORY[0x1F4188790](v29);
  v196 = (char *)&v175 - v30;
  MEMORY[0x1F4188790](v31);
  v205 = (ValueMetadata *)((char *)&v175 - v32);
  MEMORY[0x1F4188790](v33);
  v208 = (char *)&v175 - v34;
  MEMORY[0x1F4188790](v35);
  v207 = (char *)&v175 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)&v175 - v38;
  sub_19F1DB59C();
  sub_19F1DB58C();
  unint64_t v40 = *(void (**)(char *, uint64_t))(v22 + 8);
  v209 = v24;
  uint64_t v210 = v22 + 8;
  uint64_t v211 = v21;
  v206 = v40;
  v40(v24, v21);
  sub_19F1DB26C();
  swift_bridgeObjectRelease();
  uint64_t v41 = self;
  id v42 = objc_msgSend(v41, sel_defaultManager);
  unint64_t v43 = (void *)sub_19F1DB25C();
  *(void *)&long long v227 = 0;
  unsigned int v44 = objc_msgSend(v42, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v43, 0, 0, &v227);

  if (!v44)
  {
    id v68 = (id)v227;
    sub_19F1DB19C();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v39, v220);
  }
  v213 = (void *)v25;
  char v221 = 0;
  id v45 = (id)v227;
  id v192 = v41;
  id v46 = objc_msgSend(v41, sel_defaultManager);
  sub_19F1DB2DC();
  uint64_t v47 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  unsigned int v48 = objc_msgSend(v46, sel_fileExistsAtPath_isDirectory_, v47, &v221);

  uint64_t v49 = v219;
  if (v48)
  {
    id v50 = objc_msgSend(v192, sel_defaultManager);
    sub_19F1DB2DC();
    uint64_t v51 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    *(void *)&long long v227 = 0;
    id v52 = objc_msgSend(v50, sel_contentsOfDirectoryAtPath_error_, v51, &v227);

    unint64_t v53 = (void *)v227;
    if (v52)
    {
      uint64_t v54 = sub_19F1DC16C();
      id v55 = v53;

      uint64_t v56 = *(void *)(v54 + 16);
      swift_bridgeObjectRelease();
      if (v221 == 1 && !v56) {
        goto LABEL_6;
      }
    }
    else
    {
      id v73 = (id)v227;
      uint64_t v74 = (void *)sub_19F1DB19C();

      swift_willThrow();
    }
    sub_19F091B40();
    swift_allocError();
    *uint64_t v75 = 4;
    swift_willThrow();
    sub_19F091270();
    uint64_t v66 = (uint64_t (*)(char *, uint64_t))v213[1];
    uint64_t v67 = v39;
    return v66(v67, v220);
  }
LABEL_6:
  v191 = v39;
  sub_19EE7E420();
  uint64_t v57 = (void *)sub_19F1DCA8C();
  sub_19F1DC98C();
  sub_19F1DB84C();
  sub_19F1DB80C();
  uint64_t v58 = v216;
  uint64_t v59 = v217 + 8;
  int v60 = *(void (**)(char *, uint64_t))(v217 + 8);
  v60(v49, v216);
  sub_19EEC4154(v214, (uint64_t)v237);
  type metadata accessor for JetPackageFormatParser();
  uint64_t v61 = swift_allocObject();
  uint64_t v62 = v61 + 16;
  sub_19EEBB420(v237, v61 + 16);
  *(unsigned char *)(v61 + 56) = 0;
  uint64_t v63 = v215;
  char v64 = sub_19F07B468();
  if (v63)
  {
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1Tm(v62);
    swift_deallocClassInstance();

    uint64_t v65 = v191;
    sub_19F091270();
    uint64_t v66 = (uint64_t (*)(char *, uint64_t))v213[1];
    uint64_t v67 = v65;
    return v66(v67, v220);
  }
  uint64_t v217 = v59;
  uint64_t v215 = v61;
  uint64_t v70 = v220;
  if (v64)
  {
    sub_19F091B40();
    swift_allocError();
    *uint64_t v71 = 2;
    swift_willThrow();
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1Tm(v62);
    swift_deallocClassInstance();

    uint64_t v72 = v191;
    sub_19F091270();
    return ((uint64_t (*)(char *, uint64_t))v213[1])(v72, v70);
  }
  sub_19F07B71C((uint64_t)&v227);
  uint64_t v185 = 0;
  int v180 = BYTE1(v227);
  int v182 = BYTE3(v227);
  uint64_t v76 = v228;
  uint64_t v179 = (unsigned __int16)v229;
  id v189 = (id)*((void *)&v227 + 1);
  v190 = v230;
  uint64_t v214 = v231[0];
  unint64_t v188 = v231[1];
  sub_19F1DC97C();
  Swift::String v77 = v219;
  sub_19F1DB84C();
  sub_19F1DB80C();
  v60(v77, v58);
  *(void *)&long long v227 = 0;
  *((void *)&v227 + 1) = 0xE000000000000000;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  *(void *)&long long v227 = 0xD00000000000001CLL;
  *((void *)&v227 + 1) = 0x800000019F26FDF0;
  uint64_t v186 = v76;
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F0E88EC(v227, *((uint64_t *)&v227 + 1));
  swift_bridgeObjectRelease();
  uint64_t v78 = v207;
  v183 = (void (*)(char *, char *, uint64_t))v213[2];
  v184 = v213 + 2;
  v183(v207, v191, v220);
  id v79 = v209;
  sub_19F1DB59C();
  sub_19F1DB58C();
  v206(v79, v211);
  uint64_t v80 = v208;
  sub_19F1DB26C();
  uint64_t v81 = v220;
  swift_bridgeObjectRelease();
  id v189 = v57;
  uint64_t v82 = v213 + 1;
  v187 = (void (*)(char *, uint64_t))v213[1];
  v187(v78, v81);
  uint64_t v83 = v212;
  uint64_t v84 = v213 + 4;
  v181 = (void (*)(uint64_t, char *, uint64_t))v213[4];
  v181(v212, v80, v81);
  if (*(unsigned char *)(v215 + 56) != 2)
  {
    sub_19F07C0E8();
    swift_allocError();
    *uint64_t v93 = 0;
    swift_willThrow();
    sub_19F091FC8(v83);
    swift_bridgeObjectRelease();

    swift_release();
    sub_19F033400((uint64_t)v190, v214, v188);
    uint64_t v94 = v191;
    sub_19F091270();
    return ((uint64_t (*)(char *, uint64_t))v187)(v94, v81);
  }
  v175 = v84;
  v176 = v60;
  v178 = v82;
  sub_19EEC4154(v62, (uint64_t)v236);
  sub_19EEC4154((uint64_t)v236, (uint64_t)&v227);
  uint64_t v85 = (uint64_t)v229;
  uint64_t v86 = (uint64_t)v230;
  uint64_t v87 = v81;
  v177 = (ValueMetadata *)__swift_project_boxed_opaque_existential_1(&v227, (uint64_t)v229);
  uint64_t v88 = (uint64_t)v205;
  v183((char *)v205, (char *)v83, v81);
  long long v89 = (ValueMetadata *)type metadata accessor for FileOutputStream();
  swift_allocObject();
  uint64_t v90 = v185;
  id v91 = sub_19F04B378(v88);
  if (v90)
  {
    swift_bridgeObjectRelease();

    swift_release();
    sub_19F033400((uint64_t)v190, v214, v188);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v236);
    sub_19F091FC8(v83);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v227);
    uint64_t v92 = v191;
    sub_19F091270();
    return ((uint64_t (*)(char *, uint64_t))v187)(v92, v87);
  }
  v234 = v89;
  v235 = &off_1EF13E820;
  *(void *)&long long v232 = v91;
  uint64_t v95 = sub_19EF873CC(&v232, 0x20000, v85, v86);
  uint64_t v96 = v89;
  uint64_t v97 = v214;
  uint64_t v98 = v95;
  v177 = v96;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v232);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v227);
  *(void *)&long long v227 = 0;
  *((void *)&v227 + 1) = 0xE000000000000000;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  *(void *)&long long v227 = 0xD000000000000017;
  *((void *)&v227 + 1) = 0x800000019F26FE10;
  *(void *)&long long v232 = v98;
  sub_19F1DD2EC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F0E88EC(v227, *((uint64_t *)&v227 + 1));
  swift_bridgeObjectRelease();
  sub_19F1DB2DC();
  v205 = (ValueMetadata *)type metadata accessor for FileInputStream();
  swift_allocObject();
  uint64_t v99 = sub_19F04BB08();
  v229 = v205;
  v230 = &off_1EF13D8C8;
  *(void *)&long long v227 = v99;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v236);
  sub_19EEBB420(&v227, (uint64_t)v236);
  *(void *)&long long v232 = v204;
  *((void *)&v232 + 1) = v200;
  uint64_t v233 = v201;
  uint64_t v100 = (uint64_t)v190;
  *(void *)&long long v223 = v190;
  *((void *)&v223 + 1) = v97;
  uint64_t v101 = v97;
  unint64_t v102 = v188;
  unint64_t v224 = v188;
  sub_19EEC4154((uint64_t)v236, (uint64_t)&v227);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t v103 = swift_allocObject();
  uint64_t v104 = v103;
  *(_OWORD *)(v103 + 16) = xmmword_19F24EB80;
  strcpy((char *)(v103 + 32), "packageLength");
  *(_WORD *)(v103 + 46) = -4864;
  uint64_t v105 = v203;
  if (v202) {
    uint64_t v105 = -1;
  }
  *(void *)(v103 + 48) = v105;
  uint64_t v106 = MEMORY[0x1E4FBB550];
  *(void *)(v103 + 72) = MEMORY[0x1E4FBB550];
  *(void *)(v103 + 80) = 0xD000000000000011;
  *(void *)(v103 + 120) = v106;
  *(void *)(v103 + 88) = 0x800000019F26FE30;
  *(void *)(v103 + 96) = v98;
  sub_19EF63FE0(v100, v101, v102);
  unint64_t v107 = sub_19EEBF898(v104);
  sub_19F08ED04((uint64_t *)&v223, (uint64_t)&v227, v107);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v227);
  sub_19F033400((uint64_t)v190, v214, v102);
  sub_19F1DB2DC();
  swift_allocObject();
  uint64_t v108 = sub_19F04BB08();
  LODWORD(v203) = v48;
  uint64_t v185 = 0;
  v229 = v205;
  v230 = &off_1EF13D8C8;
  *(void *)&long long v227 = v108;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v236);
  sub_19EEBB420(&v227, (uint64_t)v236);
  if ((v182 & 1) == 0)
  {
    sub_19F0E88EC(0xD00000000000001DLL, 0x800000019F26FF40);
    sub_19F1DC98C();
    id v115 = v219;
    sub_19F1DB84C();
    sub_19F1DB80C();
    v176(v115, v216);
    if (v204)
    {
      if (*(void *)(v204 + 16) && (unint64_t v116 = sub_19EFB6D98(v179), (v117 & 1) != 0))
      {
        uint64_t v118 = v213;
        uint64_t v119 = (uint64_t)v198;
        uint64_t v120 = v220;
        v183(v198, (char *)(*(void *)(v204 + 56) + v213[9] * v116), v220);
        v121 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v118[7];
        v121(v119, 0, 1, v120);
        int v122 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v118[6];
        if (v122(v119, 1, v120) != 1)
        {
          uint64_t v123 = (uint64_t)v199;
          uint64_t v124 = v220;
          v181((uint64_t)v199, v198, v220);
          v121(v123, 0, 1, v124);
          goto LABEL_42;
        }
      }
      else
      {
        v121 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v213[7];
        v121((uint64_t)v198, 1, 1, v220);
      }
      if (*(void *)(v204 + 16) && (unint64_t v125 = sub_19EFB6D98(0), (v126 & 1) != 0))
      {
        uint64_t v127 = (uint64_t)v199;
        uint64_t v128 = v220;
        v183(v199, (char *)(*(void *)(v204 + 56) + v213[9] * v125), v220);
        uint64_t v129 = v127;
        uint64_t v130 = 0;
        uint64_t v131 = v128;
      }
      else
      {
        uint64_t v129 = (uint64_t)v199;
        uint64_t v130 = 1;
        uint64_t v131 = v220;
      }
      v121(v129, v130, 1, v131);
    }
    else
    {
      uint64_t v132 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v213[7];
      uint64_t v133 = v220;
      v132((uint64_t)v198, 1, 1, v220);
      v132((uint64_t)v199, 1, 1, v133);
    }
    sub_19EE6293C((uint64_t)v198);
    int v122 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v213[6];
LABEL_42:
    if (v122((uint64_t)v199, 1, v220) == 1)
    {
      sub_19EE6293C((uint64_t)v199);
      *(void *)&long long v227 = 0;
      *((void *)&v227 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      *(void *)&long long v227 = 0xD00000000000002DLL;
      *((void *)&v227 + 1) = 0x800000019F26FF70;
      LOWORD(v232) = v179;
      sub_19F1DD2EC();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F0E88EC(v227, *((uint64_t *)&v227 + 1));
      swift_bridgeObjectRelease();
      sub_19F091B40();
      swift_allocError();
      unsigned char *v134 = 3;
      swift_willThrow();
      swift_bridgeObjectRelease();

      swift_release();
      sub_19F033400((uint64_t)v190, v214, v188);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v236);
      sub_19F091FC8(v212);
      v135 = v191;
      sub_19F091270();
      v136 = v135;
      return ((uint64_t (*)(char *, uint64_t))v187)(v136, v220);
    }
    v181((uint64_t)v196, v199, v220);
    sub_19F0E88EC(0xD00000000000001ALL, 0x800000019F26FFA0);
    uint64_t v137 = v185;
    uint64_t v138 = sub_19F1DB36C();
    uint64_t v185 = v137;
    if (v137)
    {
      swift_bridgeObjectRelease();

      swift_release();
      sub_19F033400((uint64_t)v190, v214, v188);
      uint64_t v140 = v220;
      v141 = (uint64_t (*)(char *, uint64_t))v187;
      v187(v196, v220);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v236);
      sub_19F091FC8(v212);
      v142 = v191;
      sub_19F091270();
      return v141(v142, v140);
    }
    v234 = &type metadata for CommonCryptoPackageEncryption;
    v235 = &off_1EF147BE8;
    *(void *)&long long v232 = v138;
    *((void *)&v232 + 1) = v139;
    uint64_t v233 = 0x20000;
    sub_19EEBB420(&v232, (uint64_t)&v227);
    v143 = v207;
    uint64_t v144 = v220;
    v145 = (void (*)(char *, uint64_t, uint64_t))v183;
    v183(v207, v191, v220);
    v146 = v209;
    sub_19F1DB59C();
    sub_19F1DB58C();
    v206(v146, v211);
    v147 = v208;
    sub_19F1DB26C();
    swift_bridgeObjectRelease();
    v187(v143, v144);
    uint64_t v148 = v194;
    v181(v194, v147, v144);
    sub_19EEC4154((uint64_t)&v227, (uint64_t)&v232);
    __swift_project_boxed_opaque_existential_1(&v232, (uint64_t)v234);
    sub_19EEC4154((uint64_t)v236, (uint64_t)&v223);
    uint64_t v149 = (uint64_t)v193;
    v145(v193, v148, v144);
    swift_allocObject();
    uint64_t v150 = v185;
    v151 = sub_19F04B378(v149);
    uint64_t v185 = v150;
    if (v150)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v223);
      sub_19F091FC8(v194);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v232);
    }
    else
    {
      v222[3] = v177;
      v222[4] = &off_1EF13E820;
      v222[0] = v151;
      sub_19F17128C((uint64_t)&v223, (uint64_t)v222);
      uint64_t v185 = 0;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v222);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v223);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v232);
      sub_19F1DB2DC();
      swift_allocObject();
      uint64_t v159 = v185;
      uint64_t v160 = sub_19F04BB08();
      uint64_t v185 = v159;
      if (!v159)
      {
        v234 = v205;
        v235 = &off_1EF13D8C8;
        *(void *)&long long v232 = v160;
        sub_19F091FC8(v194);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v236);
        sub_19EEBB420(&v232, (uint64_t)v236);
        sub_19F1DC97C();
        v161 = v219;
        sub_19F1DB84C();
        sub_19F1DB80C();
        v176(v161, v216);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v227);
        v187(v196, v220);
        if (v180) {
          goto LABEL_24;
        }
        goto LABEL_56;
      }
      sub_19F091FC8(v194);
    }
    *(void *)&long long v232 = 0;
    *((void *)&v232 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    *(void *)&long long v223 = v185;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    sub_19F1DCF4C();
    sub_19F0E88E4(v232, *((uint64_t *)&v232 + 1));
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_release();
    sub_19F033400((uint64_t)v190, v214, v188);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v227);
    uint64_t v152 = v220;
    v153 = (uint64_t (*)(char *, uint64_t))v187;
    v187(v196, v220);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v236);
    sub_19F091FC8(v212);
    v154 = v191;
    sub_19F091270();
    return v153(v154, v152);
  }
  if (v180)
  {
LABEL_24:
    sub_19F0E88EC(0xD000000000000021, 0x800000019F26FE80);
    sub_19F1DC98C();
    v109 = v219;
    sub_19F1DB84C();
    sub_19F1DB80C();
    v176(v109, v216);
    if (v203)
    {
LABEL_27:
      uint64_t v114 = v185;
      sub_19F0A9DF4((uint64_t)v236, v218, 102400);
      if (v114)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19F1DC97C();
        v155 = v219;
        sub_19F1DB84C();
        id v156 = v189;
        sub_19F1DB80C();
        v176(v155, v216);
        sub_19F0E88EC(0xD00000000000001ALL, 0x800000019F26FED0);
        swift_bridgeObjectRelease();
      }
      swift_release();
      sub_19F033400((uint64_t)v190, v214, v188);
      goto LABEL_58;
    }
    id v110 = objc_msgSend(v192, sel_defaultManager);
    uint64_t v111 = (void *)sub_19F1DB25C();
    *(void *)&long long v227 = 0;
    unsigned int v112 = objc_msgSend(v110, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v111, 0, 0, &v227);

    if (v112)
    {
      id v113 = (id)v227;
      goto LABEL_27;
    }
    id v157 = (id)v227;
    sub_19F1DB19C();

    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_release();
    sub_19F033400((uint64_t)v190, v214, v188);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v236);
    sub_19F091FC8(v212);
    v158 = v191;
    sub_19F091270();
    v136 = v158;
    return ((uint64_t (*)(char *, uint64_t))v187)(v136, v220);
  }
LABEL_56:
  sub_19F0E88EC(0xD000000000000020, 0x800000019F26FEF0);
  sub_19F1DC98C();
  v162 = v219;
  sub_19F1DB84C();
  sub_19F1DB80C();
  v176(v162, v216);
  v163 = v207;
  uint64_t v164 = v220;
  v165 = (void (*)(char *, uint64_t, uint64_t))v183;
  v183(v207, v191, v220);
  v166 = v209;
  sub_19F1DB59C();
  sub_19F1DB58C();
  v206(v166, v211);
  v167 = v208;
  sub_19F1DB26C();
  swift_bridgeObjectRelease();
  v187(v163, v164);
  uint64_t v168 = v197;
  v181(v197, v167, v164);
  sub_19EEC4154((uint64_t)v236, (uint64_t)&v232);
  uint64_t v169 = (uint64_t)v195;
  v165(v195, v168, v164);
  swift_allocObject();
  uint64_t v170 = v185;
  v171 = sub_19F04B378(v169);
  if (!v170)
  {
    v225 = v177;
    v226 = &off_1EF13E820;
    *(void *)&long long v223 = v171;
    sub_19EEBB420(&v232, (uint64_t)&v227);
    sub_19EEBB420(&v223, (uint64_t)v231);
    sub_19EFC61C0();
    sub_19F092024((uint64_t)&v227);
    sub_19F1DB2DC();
    swift_allocObject();
    uint64_t v173 = sub_19F04BB08();
    uint64_t v185 = 0;
    v229 = v205;
    v230 = &off_1EF13D8C8;
    *(void *)&long long v227 = v173;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v236);
    sub_19EEBB420(&v227, (uint64_t)v236);
    sub_19F1DC97C();
    v174 = v219;
    sub_19F1DB84C();
    sub_19F1DB80C();
    v176(v174, v216);
    sub_19F091FC8(v197);
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();

  swift_release();
  sub_19F033400((uint64_t)v190, v214, v188);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v232);
  sub_19F091FC8(v197);
LABEL_58:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v236);
  sub_19F091FC8(v212);
  v172 = v191;
  sub_19F091270();
  return ((uint64_t (*)(char *, uint64_t))v187)(v172, v220);
}

void sub_19F091270()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_19F1DB25C();
  id v7 = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, &v7);

  id v3 = v7;
  if (v2)
  {
    id v4 = v3;
  }
  else
  {
    id v5 = v7;
    uint64_t v6 = (void *)sub_19F1DB19C();

    swift_willThrow();
    id v7 = 0;
    uint64_t v8 = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DB34C();
    sub_19F091F70();
    sub_19F1DD2EC();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    swift_getErrorValue();
    sub_19F1DD6AC();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F0E88E4((uint64_t)v7, v8);
    swift_bridgeObjectRelease();
  }
}

id sub_19F091458(uint64_t a1, void (*a2)(id))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E946FCB0 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1E946FD48;
  objc_msgSend((id)qword_1E946FD48, sel_lock);
  sub_19F091690(a1);
  if (v2) {
    return objc_msgSend(v8, sel_unlock);
  }
  a2(objc_msgSend(v8, sel_unlock));
  uint64_t v12 = 0;
  uint64_t v13 = 0xE000000000000000;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  uint64_t v12 = 0xD00000000000001ELL;
  uint64_t v13 = 0x800000019F26FD90;
  sub_19F1DB34C();
  sub_19F091F70();
  sub_19F1DD2EC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F0E88EC(v12, v13);
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)qword_1E946FD48;
  objc_msgSend((id)qword_1E946FD48, sel_lock);
  if (qword_1E946FCA8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_19EF577FC(a1, (uint64_t)v7);
  swift_endAccess();
  objc_msgSend(v10, sel_unlock);
  return (id)sub_19EE6293C((uint64_t)v7);
}

uint64_t sub_19F091690(uint64_t a1)
{
  uint64_t v2 = sub_19F1DB34C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v13[-v7];
  if (qword_1E946FCA8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v9 = qword_1E946FD40;
  swift_bridgeObjectRetain();
  char v10 = sub_19EF57510(a1, v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    sub_19F091B40();
    swift_allocError();
    *uint64_t v11 = 5;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    swift_beginAccess();
    sub_19F042CA8((uint64_t)v8, v5);
    swift_endAccess();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

uint64_t sub_19F091880(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v38 = v8;
  uint64_t v39 = 0;
  uint64_t v40 = v11 & v9;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19EEBD478(&v34);
  uint64_t v12 = *((void *)&v34 + 1);
  if (!*((void *)&v34 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    return swift_release();
  }
  while (1)
  {
    uint64_t v15 = v34;
    sub_19EEBDC00(&v35, v33);
    uint64_t v16 = *a5;
    unint64_t v18 = sub_19EEBD400(v15, v12);
    uint64_t v19 = *(void *)(v16 + 16);
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      break;
    }
    char v22 = v17;
    if (*(void *)(v16 + 24) >= v21)
    {
      if (a4)
      {
        if (v17) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_19EE7DBE0();
        if (v22) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_19EEBD714(v21, a4 & 1);
      unint64_t v23 = sub_19EEBD400(v15, v12);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_22;
      }
      unint64_t v18 = v23;
      if (v22)
      {
LABEL_6:
        uint64_t v13 = 32 * v18;
        sub_19EEBDBA4(*(void *)(*a5 + 56) + v13, (uint64_t)v31);
        sub_19EEBDBA4((uint64_t)v31, (uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
        swift_bridgeObjectRelease();
        uint64_t v14 = (_OWORD *)(*(void *)(*a5 + 56) + v13);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
        sub_19EEBDC00(v32, v14);
        goto LABEL_7;
      }
    }
    uint64_t v25 = (void *)*a5;
    *(void *)(*a5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    uint64_t v26 = (uint64_t *)(v25[6] + 16 * v18);
    *uint64_t v26 = v15;
    v26[1] = v12;
    sub_19EEBDC00(v33, (_OWORD *)(v25[7] + 32 * v18));
    uint64_t v27 = v25[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_21;
    }
    void v25[2] = v29;
LABEL_7:
    sub_19EEBD478(&v34);
    uint64_t v12 = *((void *)&v34 + 1);
    a4 = 1;
    if (!*((void *)&v34 + 1)) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

unint64_t sub_19F091AE8()
{
  unint64_t result = qword_1E9473A18;
  if (!qword_1E9473A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473A18);
  }
  return result;
}

unint64_t sub_19F091B40()
{
  unint64_t result = qword_1E9473A20;
  if (!qword_1E9473A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473A20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JetPackageReaderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    void *result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F091C60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageReaderError()
{
  return &type metadata for JetPackageReaderError;
}

uint64_t destroy for JetPackageReader(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 8))
  {
    return swift_release();
  }
  return result;
}

void *_s9JetEngine16JetPackageReaderVwCP_0(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v5 = a2 + 1;
  uint64_t v4 = a2[1];
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

void *assignWithCopy for JetPackageReader(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for JetPackageReader(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackageReader(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JetPackageReader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageReader()
{
  return &type metadata for JetPackageReader;
}

uint64_t sub_19F091F44()
{
  return sub_19F08F354(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned __int8 *)(v0 + 72));
}

unint64_t sub_19F091F70()
{
  unint64_t result = qword_1EB392878;
  if (!qword_1EB392878)
  {
    sub_19F1DB34C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB392878);
  }
  return result;
}

uint64_t sub_19F091FC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FileArtifact();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19F092024(uint64_t a1)
{
  return a1;
}

void destroy for OperationCheckpoint(uint64_t a1)
{
  long long v8 = *(_OWORD *)(a1 + 352);
  long long v9 = *(_OWORD *)(a1 + 368);
  long long v6 = *(_OWORD *)(a1 + 320);
  long long v7 = *(_OWORD *)(a1 + 336);
  long long v4 = *(_OWORD *)(a1 + 288);
  long long v5 = *(_OWORD *)(a1 + 304);
  long long v2 = *(_OWORD *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 272);
  long long v1 = *(_OWORD *)(a1 + 224);
  sub_19EECA688(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void **)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v1,
    *((uint64_t *)&v1 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v2,
    *((uint64_t *)&v2 + 1),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((unint64_t *)&v9 + 1));
}

uint64_t *initializeWithCopy for OperationCheckpoint(uint64_t *a1, uint64_t *a2)
{
  uint64_t v52 = a2[9];
  uint64_t v53 = a2[8];
  uint64_t v50 = a2[11];
  uint64_t v51 = a2[10];
  uint64_t v48 = a2[13];
  uint64_t v49 = a2[12];
  uint64_t v46 = a2[15];
  uint64_t v47 = a2[14];
  uint64_t v44 = a2[17];
  uint64_t v45 = a2[16];
  uint64_t v42 = a2[19];
  uint64_t v43 = a2[18];
  uint64_t v40 = a2[21];
  uint64_t v41 = a2[20];
  uint64_t v13 = a2[22];
  uint64_t v14 = a2[23];
  uint64_t v15 = a2[24];
  uint64_t v16 = a2[25];
  uint64_t v17 = a2[26];
  uint64_t v18 = a2[27];
  uint64_t v19 = a2[28];
  uint64_t v20 = a2[29];
  uint64_t v3 = a2[31];
  uint64_t v21 = a2[30];
  uint64_t v22 = a2[32];
  uint64_t v23 = a2[33];
  uint64_t v24 = a2[34];
  uint64_t v25 = a2[35];
  uint64_t v26 = a2[36];
  uint64_t v27 = a2[37];
  uint64_t v28 = a2[38];
  uint64_t v29 = a2[39];
  uint64_t v30 = a2[40];
  uint64_t v31 = a2[41];
  uint64_t v32 = a2[42];
  uint64_t v33 = a2[43];
  uint64_t v34 = a2[44];
  uint64_t v35 = a2[45];
  uint64_t v36 = a2[46];
  unint64_t v37 = a2[47];
  uint64_t v38 = a2[48];
  uint64_t v39 = a2[49];
  uint64_t v5 = a2[1];
  uint64_t v4 = *a2;
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = (void *)a2[7];
  sub_19EE83BD4(*a2, v5, v6, v7, v8, v9, v10, v11, v53, v52, v51, v50, v49, v48, v47, v46, v45, v44, v43,
    v42,
    v41,
    v40,
    v13,
    v14,
    v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v3,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = (uint64_t)v11;
  a1[8] = v53;
  a1[9] = v52;
  a1[10] = v51;
  a1[11] = v50;
  a1[12] = v49;
  a1[13] = v48;
  a1[14] = v47;
  a1[15] = v46;
  a1[16] = v45;
  a1[17] = v44;
  a1[18] = v43;
  a1[19] = v42;
  a1[20] = v41;
  a1[21] = v40;
  a1[22] = v13;
  a1[23] = v14;
  a1[24] = v15;
  a1[25] = v16;
  a1[26] = v17;
  a1[27] = v18;
  a1[28] = v19;
  a1[29] = v20;
  a1[30] = v21;
  a1[31] = v3;
  a1[32] = v22;
  a1[33] = v23;
  a1[34] = v24;
  a1[35] = v25;
  a1[36] = v26;
  a1[37] = v27;
  a1[38] = v28;
  a1[39] = v29;
  a1[40] = v30;
  a1[41] = v31;
  a1[42] = v32;
  a1[43] = v33;
  a1[44] = v34;
  a1[45] = v35;
  a1[46] = v36;
  a1[47] = v37;
  a1[48] = v38;
  a1[49] = v39;
  return a1;
}

uint64_t assignWithCopy for OperationCheckpoint(uint64_t a1, uint64_t *a2)
{
  uint64_t v80 = *a2;
  uint64_t v81 = a2[1];
  uint64_t v78 = a2[3];
  uint64_t v79 = a2[2];
  uint64_t v76 = a2[5];
  uint64_t v77 = a2[4];
  uint64_t v74 = (void *)a2[7];
  uint64_t v75 = a2[6];
  uint64_t v72 = a2[9];
  uint64_t v73 = a2[8];
  uint64_t v70 = a2[11];
  uint64_t v71 = a2[10];
  uint64_t v68 = a2[13];
  uint64_t v69 = a2[12];
  uint64_t v66 = a2[15];
  uint64_t v67 = a2[14];
  uint64_t v64 = a2[17];
  uint64_t v65 = a2[16];
  uint64_t v62 = a2[19];
  uint64_t v63 = a2[18];
  uint64_t v61 = a2[20];
  uint64_t v3 = a2[22];
  uint64_t v60 = a2[21];
  uint64_t v4 = a2[23];
  uint64_t v5 = a2[24];
  uint64_t v6 = a2[25];
  uint64_t v8 = a2[27];
  uint64_t v7 = a2[28];
  uint64_t v10 = a2[29];
  uint64_t v9 = a2[30];
  uint64_t v11 = a2[31];
  uint64_t v41 = a2[26];
  uint64_t v42 = a2[32];
  uint64_t v43 = a2[33];
  uint64_t v44 = a2[34];
  uint64_t v45 = a2[35];
  uint64_t v46 = a2[36];
  uint64_t v47 = a2[37];
  uint64_t v48 = a2[38];
  uint64_t v49 = a2[39];
  uint64_t v50 = a2[40];
  uint64_t v51 = a2[41];
  uint64_t v52 = a2[42];
  uint64_t v53 = a2[43];
  uint64_t v54 = a2[44];
  uint64_t v55 = a2[45];
  uint64_t v56 = a2[46];
  unint64_t v57 = a2[47];
  uint64_t v58 = a2[48];
  uint64_t v59 = a2[49];
  sub_19EE83BD4(*a2, v81, v79, v78, v77, v76, v75, v74, v73, v72, v71, v70, v69, v68, v67, v66, v65, v64, v63,
    v62,
    v61,
    v60,
    v3,
    v4,
    v5,
    v6,
    v41,
    v8,
    v7,
    v10,
    v9,
    v11,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v80;
  *(void *)(a1 + 8) = v81;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v79;
  *(void *)(a1 + 24) = v78;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v77;
  *(void *)(a1 + 40) = v76;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void **)(a1 + 56);
  *(void *)(a1 + 48) = v75;
  *(void *)(a1 + 56) = v74;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v73;
  *(void *)(a1 + 72) = v72;
  *(void *)(a1 + 80) = v71;
  *(void *)(a1 + 88) = v70;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v69;
  *(void *)(a1 + 104) = v68;
  *(void *)(a1 + 112) = v67;
  *(void *)(a1 + 120) = v66;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v65;
  *(void *)(a1 + 136) = v64;
  *(void *)(a1 + 144) = v63;
  *(void *)(a1 + 152) = v62;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 160) = v61;
  *(void *)(a1 + 168) = v60;
  *(void *)(a1 + 176) = v3;
  long long v28 = *(_OWORD *)(a1 + 192);
  long long v29 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 184) = v4;
  *(void *)(a1 + 192) = v5;
  *(void *)(a1 + 200) = v6;
  *(void *)(a1 + 208) = v41;
  long long v30 = *(_OWORD *)(a1 + 224);
  long long v31 = *(_OWORD *)(a1 + 240);
  *(void *)(a1 + 216) = v8;
  *(void *)(a1 + 224) = v7;
  *(void *)(a1 + 232) = v10;
  *(void *)(a1 + 240) = v9;
  long long v32 = *(_OWORD *)(a1 + 256);
  long long v33 = *(_OWORD *)(a1 + 272);
  *(void *)(a1 + 248) = v11;
  *(void *)(a1 + 256) = v42;
  *(void *)(a1 + 264) = v43;
  *(void *)(a1 + 272) = v44;
  *(void *)(a1 + 280) = v45;
  long long v34 = *(_OWORD *)(a1 + 288);
  long long v35 = *(_OWORD *)(a1 + 304);
  *(void *)(a1 + 288) = v46;
  *(void *)(a1 + 296) = v47;
  *(void *)(a1 + 304) = v48;
  *(void *)(a1 + 312) = v49;
  long long v36 = *(_OWORD *)(a1 + 320);
  long long v37 = *(_OWORD *)(a1 + 336);
  *(void *)(a1 + 320) = v50;
  *(void *)(a1 + 328) = v51;
  *(void *)(a1 + 336) = v52;
  *(void *)(a1 + 344) = v53;
  long long v38 = *(_OWORD *)(a1 + 352);
  long long v39 = *(_OWORD *)(a1 + 368);
  *(void *)(a1 + 352) = v54;
  *(void *)(a1 + 360) = v55;
  *(void *)(a1 + 368) = v56;
  *(void *)(a1 + 376) = v57;
  *(void *)(a1 + 384) = v58;
  *(void *)(a1 + 392) = v59;
  sub_19EECA688(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((unint64_t *)&v39 + 1));
  return a1;
}

uint64_t assignWithTake for OperationCheckpoint(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void **)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v17 = *(_OWORD *)(a1 + 144);
  long long v18 = *(_OWORD *)(a1 + 160);
  long long v19 = *(_OWORD *)(a1 + 176);
  long long v20 = *(_OWORD *)(a1 + 192);
  long long v21 = *(_OWORD *)(a1 + 208);
  long long v22 = *(_OWORD *)(a1 + 224);
  long long v23 = *(_OWORD *)(a1 + 240);
  long long v24 = *(_OWORD *)(a1 + 256);
  long long v25 = *(_OWORD *)(a1 + 272);
  long long v26 = *(_OWORD *)(a1 + 288);
  long long v27 = *(_OWORD *)(a1 + 304);
  long long v28 = *(_OWORD *)(a1 + 320);
  long long v29 = *(_OWORD *)(a1 + 336);
  long long v30 = *(_OWORD *)(a1 + 352);
  long long v31 = *(_OWORD *)(a1 + 368);
  long long v32 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v32;
  long long v33 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v33;
  long long v34 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v34;
  long long v35 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v35;
  long long v36 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v36;
  long long v37 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v37;
  long long v38 = a2[13];
  *(_OWORD *)(a1 + 192) = a2[12];
  *(_OWORD *)(a1 + 208) = v38;
  long long v39 = a2[15];
  long long v40 = a2[16];
  long long v41 = a2[17];
  long long v42 = a2[18];
  long long v43 = a2[19];
  long long v44 = a2[20];
  long long v45 = a2[21];
  long long v46 = a2[22];
  long long v47 = a2[23];
  long long v48 = a2[24];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v39;
  *(_OWORD *)(a1 + 256) = v40;
  *(_OWORD *)(a1 + 272) = v41;
  *(_OWORD *)(a1 + 288) = v42;
  *(_OWORD *)(a1 + 304) = v43;
  *(_OWORD *)(a1 + 320) = v44;
  *(_OWORD *)(a1 + 336) = v45;
  *(_OWORD *)(a1 + 352) = v46;
  *(_OWORD *)(a1 + 368) = v47;
  *(_OWORD *)(a1 + 384) = v48;
  sub_19EECA688(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((unint64_t *)&v31 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for OperationCheckpoint(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 400)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 48) >> 9;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for OperationCheckpoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 400) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)unint64_t result = 0u;
      *(void *)(result + 48) = (unint64_t)-a2 << 9;
      *(_OWORD *)(result + 72) = 0u;
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(_OWORD *)(result + 136) = 0u;
      *(_OWORD *)(result + 152) = 0u;
      *(_OWORD *)(result + 168) = 0u;
      *(_OWORD *)(result + 184) = 0u;
      *(_OWORD *)(result + 200) = 0u;
      *(_OWORD *)(result + 216) = 0u;
      *(_OWORD *)(result + 232) = 0u;
      *(_OWORD *)(result + 248) = 0u;
      *(void *)(result + 392) = 0;
      *(_OWORD *)(result + 56) = 0u;
      result += 56;
      *(_OWORD *)(result + 208) = 0u;
      *(_OWORD *)(result + 224) = 0u;
      *(_OWORD *)(result + 240) = 0u;
      *(_OWORD *)(result + 256) = 0u;
      *(_OWORD *)(result + 272) = 0u;
      *(_OWORD *)(result + 288) = 0u;
      *(_OWORD *)(result + 304) = 0u;
      *(_OWORD *)(result + 320) = 0u;
      return result;
    }
    *(unsigned char *)(result + 400) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_19F092ABC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 96) & 1;
  uint64_t v3 = *(void *)(result + 112) & 1;
  uint64_t v4 = *(void *)(result + 128) & 0xFF01;
  uint64_t v5 = *(void *)(result + 144) & 1;
  uint64_t v6 = *(void *)(result + 160) & 1;
  uint64_t v7 = *(void *)(result + 176) & 1;
  uint64_t v8 = *(void *)(result + 192) & 1;
  uint64_t v9 = *(void *)(result + 208) & 1;
  uint64_t v10 = *(void *)(result + 224) & 1;
  uint64_t v11 = *(void *)(result + 240) & 1;
  uint64_t v12 = *(void *)(result + 256) & 1;
  uint64_t v13 = *(void *)(result + 272) & 1;
  uint64_t v14 = *(void *)(result + 288) & 0xFF01;
  uint64_t v15 = *(void *)(result + 304) & 1;
  uint64_t v16 = *(void *)(result + 320) & 1;
  unint64_t v17 = *(unsigned __int8 *)(result + 376) | (unint64_t)(a2 << 61);
  *(void *)(result + 48) &= 0x1FFuLL;
  *(void *)(result + 96) = v2;
  *(void *)(result + 112) = v3;
  *(void *)(result + 128) = v4;
  *(void *)(result + 144) = v5;
  *(void *)(result + 160) = v6;
  *(void *)(result + 176) = v7;
  *(void *)(result + 192) = v8;
  *(void *)(result + 208) = v9;
  *(void *)(result + 224) = v10;
  *(void *)(result + 240) = v11;
  *(void *)(result + 256) = v12;
  *(void *)(result + 272) = v13;
  *(void *)(result + 288) = v14;
  *(void *)(result + 304) = v15;
  *(void *)(result + 320) = v16;
  *(void *)(result + 376) = v17;
  return result;
}

BOOL sub_19F092B98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *a3;
  uint64_t v8 = a3[1];
  uint64_t v10 = a3[2];
  uint64_t v9 = a3[3];
  sub_19EE83A30(v4, (uint64_t)v23);
  sub_19EE83A30((uint64_t)v23, (uint64_t)v24);
  if (sub_19EFC1D7C((uint64_t)v24) == 6)
  {
    unint64_t v17 = (void *)sub_19EFC1D88((uint64_t)v24);
    BOOL v18 = *v17 == a1 && v17[1] == a2;
    if (!v18 && (sub_19F1DD44C() & 1) == 0) {
      return 0;
    }
    uint64_t v20 = v17[2];
    uint64_t v19 = v17[3];
    BOOL v21 = v20 == v7;
    if (v19 >= v8) {
      BOOL v21 = 0;
    }
    if (v20 < v7 || v21) {
      return 0;
    }
    BOOL v16 = v10 < v20;
    if (v10 == v20) {
      BOOL v16 = v9 < v19;
    }
    return !v16;
  }
  uint64_t v11 = (void *)sub_19EFC1D88((uint64_t)v24);
  uint64_t v13 = v11[2];
  uint64_t v12 = v11[3];
  BOOL v14 = *v11 == a1 && v11[1] == a2;
  if (!v14 && (sub_19F1DD44C() & 1) == 0) {
    return 0;
  }
  BOOL v15 = v13 == v7;
  if (v12 >= v8) {
    BOOL v15 = 0;
  }
  if (v13 < v7 || v15) {
    return 0;
  }
  BOOL v16 = v10 < v13;
  if (v10 != v13) {
    return !v16;
  }
  return v9 >= v12;
}

uint64_t sub_19F092D20(void *a1, uint64_t a2)
{
  uint64_t v76 = a1;
  uint64_t v5 = sub_19F1DB57C();
  double v6 = *(double *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v69 - v10;
  sub_19EE83A30(v2, (uint64_t)v78);
  sub_19EE83A30((uint64_t)v78, (uint64_t)v79);
  switch(sub_19EFC1D7C((uint64_t)v79))
  {
    case 1u:
      double v72 = *(double *)&a2;
      double v73 = v6;
      uint64_t v75 = v3;
      uint64_t v19 = sub_19EFC1D88((uint64_t)v79);
      uint64_t v20 = *(void *)(v19 + 16);
      double v71 = *(double *)(v19 + 24);
      uint64_t v21 = *(void *)(v19 + 40);
      uint64_t v22 = sub_19F1DCD2C();
      char v24 = sub_19F04282C(v77, v22, v23);
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        uint64_t v61 = sub_19F1DCD2C();
        uint64_t v63 = v62;
        sub_19EF58098();
        swift_allocError();
        char v65 = 0;
        *(void *)uint64_t v64 = v61;
        goto LABEL_20;
      }
      v77[0] = sub_19F1DCD2C();
      v77[1] = v25;
      sub_19F1DBEFC();
      uint64_t v74 = v77[0];
      type metadata accessor for MonotonicTimeReference();
      if (qword_1EB392DA0 != -1)
      {
        double v70 = (double)*(uint64_t *)&v71;
        double v71 = (double)v20;
        swift_once();
      }
      goto LABEL_11;
    case 2u:
      double v72 = *(double *)&a2;
      double v73 = v6;
      uint64_t v75 = v3;
      uint64_t v26 = sub_19EFC1D88((uint64_t)v79);
      double v27 = *(double *)(v26 + 16);
      uint64_t v21 = *(void *)(v26 + 32);
      double v70 = *(double *)(v26 + 24);
      double v71 = v27;
      uint64_t v28 = sub_19F1DCD2C();
      sub_19EEB3E98(v28, v29);
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v31)
      {
        v77[0] = sub_19F1DCD2C();
        v77[1] = v32;
        sub_19F1DBEFC();
        uint64_t v74 = v77[0];
        type metadata accessor for MonotonicTimeReference();
        if (qword_1EB392DA0 != -1)
        {
          double v70 = (double)*(uint64_t *)&v70;
          double v71 = (double)*(uint64_t *)&v71;
          swift_once();
        }
LABEL_11:
        sub_19F1DB4FC();
        sub_19F1DB4CC();
        long long v33 = *(void (**)(char *, uint64_t))(*(void *)&v73 + 8);
        v33(v8, v5);
        long long v34 = self;
        long long v35 = (void *)sub_19F1DB4DC();
        id v18 = objc_msgSend(v34, sel_serverTimeFromDate_, v35);

        v33(v11, v5);
LABEL_12:
        unint64_t v36 = sub_19EE85BDC();
        long long v37 = v76;
        v76[3] = v36;
        *long long v37 = v18;
        return v74;
      }
      else
      {
        uint64_t v66 = sub_19F1DCD2C();
        uint64_t v63 = v67;
        sub_19EF58098();
        swift_allocError();
        *(void *)uint64_t v64 = v66;
        char v65 = 1;
LABEL_20:
        *(void *)(v64 + 8) = v63;
        *(unsigned char *)(v64 + 16) = v65;
        swift_willThrow();
      }
      return v21;
    case 3u:
      char v38 = *(unsigned char *)(sub_19EFC1D88((uint64_t)v79) + 49);
      uint64_t v21 = sub_19F1DCD2C();
      long long v39 = v76;
      v76[3] = MEMORY[0x1E4FBB390];
      *long long v39 = v38;
      return v21;
    case 4u:
      uint64_t v40 = *(void *)(sub_19EFC1D88((uint64_t)v79) + 56);
      uint64_t v21 = sub_19F1DCD2C();
      long long v41 = v76;
      v76[3] = MEMORY[0x1E4FBB3D0];
      *long long v41 = v40;
      return v21;
    case 5u:
      uint64_t v42 = sub_19EFC1D88((uint64_t)v79);
      uint64_t v44 = *(void *)(v42 + 56);
      uint64_t v43 = *(void *)(v42 + 64);
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_19F1DCD2C();
      long long v45 = v76;
      v76[3] = MEMORY[0x1E4FBB1A0];
      *long long v45 = v44;
      v45[1] = v43;
      return v21;
    case 6u:
      long long v46 = (const void *)(sub_19EFC1D88((uint64_t)v79) + 56);
      sub_19EEB1F44((uint64_t)v46);
      uint64_t v21 = sub_19F1DCD2C();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3907E0);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_19F24EAD0;
      memcpy(v77, v46, sizeof(v77));
      uint64_t v48 = sub_19F123878();
      sub_19EEB1ECC((uint64_t)v46);
      *(void *)(v47 + 32) = v48;
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946E818);
      uint64_t v50 = v76;
      v76[3] = v49;
      *uint64_t v50 = v47;
      return v21;
    case 7u:
      uint64_t v51 = *(void **)(sub_19EFC1D88((uint64_t)v79) + 56);
      id v52 = v51;
      uint64_t v21 = sub_19F1DCD2C();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_19F24EAD0;
      uint64_t v54 = (void *)sub_19F1DB18C();
      id v55 = (id)AMSLogableError();

      uint64_t v56 = sub_19F1DBD7C();
      uint64_t v58 = v57;

      *(void *)(v53 + 32) = v56;
      *(void *)(v53 + 40) = v58;
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
      uint64_t v60 = v76;
      v76[3] = v59;
      *uint64_t v60 = v53;

      return v21;
    default:
      uint64_t v75 = v3;
      uint64_t v12 = sub_19EFC1D88((uint64_t)v79);
      uint64_t v13 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(v12 + 24);
      uint64_t v74 = sub_19F1DCD2C();
      type metadata accessor for MonotonicTimeReference();
      if (qword_1EB392DA0 != -1)
      {
        double v72 = (double)v14;
        double v73 = (double)v13;
        swift_once();
      }
      sub_19F1DB4FC();
      sub_19F1DB4CC();
      BOOL v15 = *(void (**)(char *, uint64_t))(*(void *)&v6 + 8);
      v15(v8, v5);
      BOOL v16 = self;
      unint64_t v17 = (void *)sub_19F1DB4DC();
      id v18 = objc_msgSend(v16, sel_serverTimeFromDate_, v17);

      v15(v11, v5);
      goto LABEL_12;
  }
}

uint64_t dispatch thunk of JetPackAssetCache._cache(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19EE17780;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of JetPackAssetCache._asset(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_19EEB8A6C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of JetPackAssetCache._evict(asset:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_19EE17780;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of JetPackAssetCache._empty()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_19EE17780;
  return v7(a1, a2);
}

uint64_t dispatch thunk of JetPackAssetCache._allCachedAssets.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_19F01B558;
  return v7(a1, a2);
}

uint64_t dispatch thunk of JetPackAssetCache._beginTransaction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of JetPackAssetCache._endTransaction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t static OSLogger.networkReachability.getter()
{
  return sub_19F0942C4(&qword_1E9470180);
}

uint64_t static OSLogger._metrics.getter()
{
  return sub_19F0942C4(&qword_1E946FC40);
}

uint64_t static OSLogger._localization.getter()
{
  return sub_19F0942C4(&qword_1E946E730);
}

uint64_t LogMessageLevel.osLogType.getter()
{
  if (*v0 - 1 < 2) {
    return sub_19F1DC7EC();
  }
  if (*v0) {
    return sub_19F1DC7BC();
  }
  return sub_19F1DC7CC();
}

uint64_t sub_19F093B94()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F093C0C()
{
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  return sub_19F1DBE9C();
}

uint64_t sub_19F093C80()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F093CF4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void static OSLogger.Subsystem.jetEngine.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000019F2697A0;
}

uint64_t OSLogger.Subsystem.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id static OSLogger.bugs.getter@<X0>(void **a1@<X8>)
{
  return sub_19F0943D4(&qword_1E946F668, (void **)&qword_1E946F658, a1);
}

uint64_t sub_19F093DA8()
{
  v1[5] = (uint64_t)&type metadata for OSLogger;
  v1[6] = (uint64_t)&protocol witness table for OSLogger;
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  v1[2] = (uint64_t)sub_19EE7DF10(v1, 1936160066, 0xE400000000000000);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FBA0);
  swift_allocObject();
  uint64_t result = sub_19F1DD94C();
  qword_1E94988E8 = result;
  return result;
}

id static OSLogger.metrics.getter@<X0>(void **a1@<X8>)
{
  return sub_19F0943D4(&qword_1EB393168, (void **)&qword_1EB393080, a1);
}

uint64_t static OSLogger.$_metrics.getter()
{
  return sub_19F094728(&qword_1E946FC40);
}

id static OSLogger.jsLoading.getter@<X0>(void **a1@<X8>)
{
  return sub_19F0943D4(&qword_1EB392AA8, (void **)&qword_1EB392860, a1);
}

id sub_19F093EE4()
{
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  id result = sub_19EE7DF10(v1, 0x67616B636150534ALL, 0xEB00000000676E69);
  qword_1EB3919C0 = (uint64_t)result;
  return result;
}

id static OSLogger.jsPackaging.getter@<X0>(void **a1@<X8>)
{
  return sub_19F0943D4(&qword_1E946FCD0, (void **)&qword_1EB3919C0, a1);
}

id static OSLogger.jetPackAssets.getter@<X0>(void **a1@<X8>)
{
  return sub_19F0943D4(&qword_1EB390E38, (void **)&qword_1EB390E30, a1);
}

id sub_19F093FD0()
{
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  id result = sub_19EE7DF10(v1, 0x6574696C7173, 0xE600000000000000);
  qword_1E9473A50 = (uint64_t)result;
  return result;
}

id static OSLogger.sqlite.getter@<X0>(void **a1@<X8>)
{
  return sub_19F0943D4(&qword_1E9470160, (void **)&qword_1E9473A50, a1);
}

id static OSLogger.localization.getter@<X0>(void **a1@<X8>)
{
  return sub_19F0943D4(&qword_1EB390408, (void **)&qword_1EB390400, a1);
}

uint64_t static OSLogger.$_localization.getter()
{
  return sub_19F094728(&qword_1E946E730);
}

id sub_19F0940D4()
{
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  id result = sub_19EE7DF10(v1, 0x746E6F43776F6C46, 0xEB000000006C6F72);
  qword_1E9473A58 = (uint64_t)result;
  return result;
}

id static OSLogger.flowControl.getter@<X0>(void **a1@<X8>)
{
  return sub_19F0943D4(&qword_1E9470168, (void **)&qword_1E9473A58, a1);
}

uint64_t sub_19F09419C()
{
  v1[5] = (uint64_t)&type metadata for OSLogger;
  v1[6] = (uint64_t)&protocol witness table for OSLogger;
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  uint64_t v1[2] = (uint64_t)sub_19EE7DF10(v1, 0x746E6F43776F6C46, 0xEB000000006C6F72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FBA0);
  swift_allocObject();
  uint64_t result = sub_19F1DD94C();
  qword_1E9473A60 = result;
  return result;
}

uint64_t static OSLogger.$_flowControl.getter()
{
  return sub_19F094728(&qword_1E9470170);
}

uint64_t static OSLogger._flowControl.getter()
{
  return sub_19F0942C4(&qword_1E9470170);
}

uint64_t sub_19F0942C4(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return sub_19F1DD95C();
}

id sub_19F09430C()
{
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  id result = sub_19EE7DF10(v1, 0x6E65726566657250, 0xEB00000000736563);
  qword_1E9473A68 = (uint64_t)result;
  return result;
}

id static OSLogger.preferences.getter@<X0>(void **a1@<X8>)
{
  return sub_19F0943D4(&qword_1E9470178, (void **)&qword_1E9473A68, a1);
}

id sub_19F0943D4@<X0>(void *a1@<X0>, void **a2@<X1>, void **a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = *a2;
  *a3 = *a2;
  return v5;
}

uint64_t sub_19F094428()
{
  v1[5] = (uint64_t)&type metadata for OSLogger;
  v1[6] = (uint64_t)&protocol witness table for OSLogger;
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  uint64_t v1[2] = (uint64_t)sub_19EE7DF10(v1, 0xD000000000000013, 0x800000019F270140);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FBA0);
  swift_allocObject();
  uint64_t result = sub_19F1DD94C();
  qword_1E9473A70 = result;
  return result;
}

uint64_t static OSLogger.$networkReachability.getter()
{
  return sub_19F094728(&qword_1E9470180);
}

uint64_t sub_19F094528()
{
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  v1[0] = (uint64_t)sub_19EE7DF10(v1, 0xD000000000000012, 0x800000019F270120);
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946D518);
  swift_allocObject();
  uint64_t result = sub_19F1DD94C();
  qword_1E946D510 = result;
  return result;
}

uint64_t static OSLogger.$contentUnavailable.getter()
{
  return sub_19F094728(&qword_1E946D508);
}

uint64_t static OSLogger.contentUnavailable.getter()
{
  return sub_19F0942C4(&qword_1E946D508);
}

uint64_t sub_19F09463C()
{
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  v1[0] = (uint64_t)sub_19EE7DF10(v1, 0x696B726F7774654ELL, 0xEA0000000000676ELL);
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946D518);
  swift_allocObject();
  uint64_t result = sub_19F1DD94C();
  qword_1E9473A78 = result;
  return result;
}

uint64_t static OSLogger.$networking.getter()
{
  return sub_19F094728(&qword_1E9470190);
}

uint64_t sub_19F094728(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t static OSLogger.networking.getter()
{
  return sub_19F0942C4(&qword_1E9470190);
}

id OSLogger._osLog.getter()
{
  return *v0;
}

uint64_t sub_19F0947A0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

unint64_t sub_19F0947B4()
{
  unint64_t result = qword_1E9473A80;
  if (!qword_1E9473A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473A80);
  }
  return result;
}

uint64_t sub_19F094808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EE527CC(a1, a2, a3, MEMORY[0x1E4FBCF70]);
}

uint64_t sub_19F094820(uint64_t a1)
{
  return MEMORY[0x1F4187E18](a1, *v1);
}

void sub_19F09484C()
{
}

uint64_t sub_19F094878(uint64_t a1)
{
  return MEMORY[0x1F4187C28](a1, *v1);
}

uint64_t sub_19F0948A4()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t ReplayLogger.Record.messages.getter()
{
  return swift_bridgeObjectRetain();
}

void ReplayLogger.Record.level.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t ReplayLogger.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  id v1 = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t ReplayLogger.snapshot(limitedTo:)(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  objc_msgSend(v3, sel_lock);
  uint64_t v4 = (uint64_t *)(v1 + 24);
  if (a1 < 1)
  {
    swift_beginAccess();
    uint64_t v10 = *v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_beginAccess();
    uint64_t v5 = *v4;
    unint64_t v6 = *(void *)(v5 + 16);
    if (v6 >= a1) {
      uint64_t v7 = v6 - a1;
    }
    else {
      uint64_t v7 = 0;
    }
    sub_19F1DD53C();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_dynamicCastClass();
    if (!v8)
    {
      swift_unknownObjectRelease();
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    uint64_t v9 = *(void *)(v8 + 16);
    swift_release();
    if (v9 == v6 - v7)
    {
      uint64_t v10 = swift_dynamicCastClass();
      if (!v10)
      {
        swift_unknownObjectRelease();
        uint64_t v10 = MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v10 = sub_19EF9F268(v5, v5 + 32, v7, (2 * v6) | 1);
    }
    swift_unknownObjectRelease();
  }
  objc_msgSend(v3, sel_unlock);
  return v10;
}

Swift::Bool __swiftcall ReplayLogger.hasEmitted(messageMatching:withLevel:)(Swift::String messageMatching, JetEngine::LogMessageLevel withLevel)
{
  uint64_t object = messageMatching._object;
  uint64_t countAndFlagsBits = messageMatching._countAndFlagsBits;
  int v5 = *(unsigned __int8 *)withLevel;
  unint64_t v6 = *(void **)(v2 + 16);
  objc_msgSend(v6, sel_lock);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  objc_msgSend(v6, sel_unlock);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = (unsigned __int8 *)(v7 + 40); ; i += 16)
    {
      if (*i == v5)
      {
        uint64_t v11 = *((void *)i - 1);
        uint64_t v12 = qword_1EB391C98;
        swift_bridgeObjectRetain();
        if (v12 != -1) {
          swift_once();
        }
        uint64_t v13 = (unsigned char *)(qword_1EB391C90 + 16);
        uint64_t v14 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
        swift_retain();
        os_unfair_lock_lock(v14);
        sub_19EEC4E5C(v13, v23);
        os_unfair_lock_unlock(v14);
        int v15 = LOBYTE(v23[0]);
        swift_release();
        if (v15 == 2) {
          char has_internal_content = os_variant_has_internal_content();
        }
        else {
          char has_internal_content = v15 & 1;
        }
        char v17 = has_internal_content ^ 1;
        uint64_t v18 = swift_allocObject();
        *(unsigned char *)(v18 + 16) = v17;
        v23[0] = v11;
        v23[1] = sub_19EE175B0;
        void v23[2] = v18;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393220);
        sub_19EEC6824();
        uint64_t v19 = sub_19F1DBCCC();
        uint64_t v21 = v20;
        swift_release();
        swift_bridgeObjectRelease();
        if (v19 == countAndFlagsBits && v21 == object)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 1;
        }
        char v10 = sub_19F1DD44C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v10) {
          break;
        }
      }
      if (!--v8)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

Swift::Void __swiftcall ReplayLogger.reset()()
{
  uint64_t v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_lock);
  swift_beginAccess();
  *(void *)(v0 + 24) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_unlock);
}

Swift::Void __swiftcall ReplayLogger.log(contentsOf:withLevel:)(Swift::OpaquePointer contentsOf, JetEngine::LogMessageLevel withLevel)
{
  char v4 = *(unsigned char *)withLevel;
  int v5 = *(void **)(v2 + 16);
  objc_msgSend(v5, sel_lock);
  unint64_t v6 = (void *)(v2 + 24);
  swift_beginAccess();
  uint64_t v7 = *(void **)(v2 + 24);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 24) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_19F09CB90(0, v7[2] + 1, 1, v7);
    *unint64_t v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_19F09CB90((void *)(v9 > 1), v10 + 1, 1, v7);
    *unint64_t v6 = v7;
  }
  uint64_t v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  void v11[4] = contentsOf._rawValue;
  *((unsigned char *)v11 + 40) = v4;
  swift_endAccess();
  objc_msgSend(v5, sel_unlock);
}

uint64_t ReplayLogger.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

void sub_19F094E9C(Swift::OpaquePointer a1, JetEngine::LogMessageLevel a2)
{
}

uint64_t sub_19F094EC0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t method lookup function for ReplayLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ReplayLogger);
}

uint64_t dispatch thunk of ReplayLogger.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t initializeBufferWithCopyOfBuffer for ReplayLogger.Record(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReplayLogger.Record(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for ReplayLogger.Record(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for ReplayLogger.Record()
{
  return &type metadata for ReplayLogger.Record;
}

uint64_t dispatch thunk of StateCenterTransaction.changeState<A>(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of StateCenterTransaction.removeState(at:recursively:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of StateCenterTransaction.removeAllState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of StateCenter.currentState<A>(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of StateCenter.beginTransaction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of StateCenter.commit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t SentryConfiguration.eventRecorder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC4154(v1, a1);
}

uint64_t SentryConfiguration.projectName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SentryConfiguration.topic.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SentryConfiguration.javascriptVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SentryConfiguration.environment.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*SentryConfiguration.environment.modify())()
{
  return nullsub_1;
}

uint64_t SentryConfiguration.tags.getter()
{
  return swift_bridgeObjectRetain();
}

id sub_19F095148(void *a1)
{
  objc_msgSend(a1, sel_setAnonymous_, 1);
  return a1;
}

uint64_t *assignWithCopy for SentryConfiguration(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SentryConfiguration(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

void destroy for AppleServicesLocalizationLiveUpdateService(uint64_t a1)
{
  swift_unknownObjectRelease();

  swift_release();
  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for AppleServicesLocalizationLiveUpdateService(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(void **)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  swift_unknownObjectRetain();
  id v6 = v4;
  swift_retain();
  id v7 = v5;
  return a1;
}

void *assignWithCopy for AppleServicesLocalizationLiveUpdateService(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  uint64_t v5 = (void *)a2[2];
  id v6 = (void *)a1[2];
  a1[2] = v5;
  id v7 = v5;

  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v8 = (void *)a2[4];
  unint64_t v9 = (void *)a1[4];
  a1[4] = v8;
  id v10 = v8;

  return a1;
}

uint64_t assignWithTake for AppleServicesLocalizationLiveUpdateService(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for Dependency(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AppleServicesLocalizationLiveUpdateService()
{
  return &type metadata for AppleServicesLocalizationLiveUpdateService;
}

uint64_t sub_19F0954D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19F039EC4(*a1, *a2);
}

uint64_t sub_19F0954DC()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F095578()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F095600()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F095698@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F099490();
  *a1 = result;
  return result;
}

void sub_19F0956C8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x646E616D65446E6FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x74726174536E6FLL;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701736302;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unsigned char *sub_19F095720@<X0>(unsigned char *result@<X0>, uint64_t *a2@<X8>)
{
  int v2 = *result;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x646E616D65446E6FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x74726174536E6FLL;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*result) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701736302;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  a2[3] = MEMORY[0x1E4FBB1A0];
  *a2 = v7;
  a2[1] = v3;
  return result;
}

uint64_t sub_19F095784@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_19EEBDBA4(a1, (uint64_t)v4);
  if (swift_dynamicCast()) {
    uint64_t result = sub_19F099490();
  }
  else {
    uint64_t result = 3;
  }
  *a2 = result;
  return result;
}

id sub_19F0957F0()
{
  if (qword_1EB390408 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB390400;
  qword_1E9473A88 = qword_1EB390400;
  return v0;
}

uint64_t sub_19F095854@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v4 - 8);
  BOOL v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&long long v42 = 0xD000000000000014;
  *((void *)&v42 + 1) = 0x800000019F270340;
  Preferences.subscript.getter((uint64_t *)&v42, ObjectType, MEMORY[0x1E4FBB1A0], v7, (uint64_t)&v45);
  if (*((void *)&v45 + 1)) {
    unint64_t v9 = v45;
  }
  else {
    unint64_t v9 = 0xD00000000000004CLL;
  }
  if (*((void *)&v45 + 1)) {
    unint64_t v10 = *((void *)&v45 + 1);
  }
  else {
    unint64_t v10 = 0x800000019F270360;
  }
  sub_19F1DB2FC();
  uint64_t v11 = sub_19F1DB34C();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    uint64_t v41 = a1;
    sub_19EEBD664((uint64_t)v6, (uint64_t *)&unk_1EB392E50);
    if (qword_1E9470198 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)qword_1E9473A88;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19F24EB80;
    id v40 = v13;
    uint64_t v50 = sub_19EEC3F3C(0, 1, 0, MEMORY[0x1E4FBC860]);
    v15._uint64_t countAndFlagsBits = 0;
    v15._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    BOOL v16 = *(void **)(v2 + 16);
    char v17 = *(void **)(v2 + 32);
    uint64_t v49 = &type metadata for AppleServicesLocalizationLiveUpdateService;
    uint64_t v18 = swift_allocObject();
    v48[0] = v18;
    long long v19 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v18 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v18 + 32) = v19;
    *(void *)(v18 + 48) = *(void *)(v2 + 32);
    sub_19EEBCD00((uint64_t)v48, (uint64_t)v44);
    long long v42 = 0u;
    long long v43 = 0u;
    swift_unknownObjectRetain();
    id v20 = v16;
    swift_retain();
    id v21 = v17;
    sub_19EEC3E70((uint64_t)v44, (uint64_t)&v42);
    char v47 = 2;
    long long v45 = v42;
    long long v46 = v43;
    uint64_t v22 = v50;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v22 = sub_19EEC3F3C(0, v22[2] + 1, 1, v22);
    }
    unint64_t v24 = v22[2];
    unint64_t v23 = v22[3];
    a1 = v41;
    if (v24 >= v23 >> 1) {
      uint64_t v22 = sub_19EEC3F3C((void *)(v23 > 1), v24 + 1, 1, v22);
    }
    uint64_t v22[2] = v24 + 1;
    uint64_t v25 = &v22[5 * v24];
    long long v26 = v45;
    long long v27 = v46;
    *((unsigned char *)v25 + 64) = v47;
    *((_OWORD *)v25 + 2) = v26;
    *((_OWORD *)v25 + 3) = v27;
    uint64_t v50 = v22;
    sub_19EEBD664((uint64_t)v48, &qword_1EB393260);
    v28._uint64_t countAndFlagsBits = 0;
    v28._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    *(void *)(v14 + 32) = v50;
    uint64_t v50 = sub_19EEC3F3C(0, 34, 0, MEMORY[0x1E4FBC860]);
    v29._uint64_t countAndFlagsBits = 0xD000000000000021;
    v29._uint64_t object = (void *)0x800000019F2703B0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    uint64_t v49 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
    v48[0] = v9;
    v48[1] = v10;
    sub_19EEBCD00((uint64_t)v48, (uint64_t)v44);
    long long v42 = 0u;
    long long v43 = 0u;
    sub_19EEC3E70((uint64_t)v44, (uint64_t)&v42);
    char v47 = 2;
    long long v45 = v42;
    long long v46 = v43;
    uint64_t v30 = v50;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v30 = sub_19EEC3F3C(0, v30[2] + 1, 1, v30);
    }
    unint64_t v32 = v30[2];
    unint64_t v31 = v30[3];
    if (v32 >= v31 >> 1) {
      uint64_t v30 = sub_19EEC3F3C((void *)(v31 > 1), v32 + 1, 1, v30);
    }
    _OWORD v30[2] = v32 + 1;
    long long v33 = &v30[5 * v32];
    long long v34 = v45;
    long long v35 = v46;
    *((unsigned char *)v33 + 64) = v47;
    *((_OWORD *)v33 + 2) = v34;
    *((_OWORD *)v33 + 3) = v35;
    uint64_t v50 = v30;
    sub_19EEBD664((uint64_t)v48, &qword_1EB393260);
    v36._uint64_t countAndFlagsBits = 0;
    v36._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    *(void *)(v14 + 40) = v50;
    long long v37 = v40;
    *(void *)&long long v45 = v40;
    LOBYTE(v42) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v42);

    swift_bridgeObjectRelease();
    uint64_t v38 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v6, v11);
    uint64_t v38 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a1, v38, 1, v11);
}

uint64_t sub_19F095D48()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&long long v33 = 0xD00000000000001ELL;
  *((void *)&v33 + 1) = 0x800000019F2703E0;
  Preferences.subscript.getter((uint64_t)&v33, ObjectType, (uint64_t)&type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicyPreferenceKey, v2, (uint64_t)&off_1EC30FE70, (uint64_t)&v30);
  uint64_t result = v30;
  if (v30 == 3)
  {
    if (qword_1E9470198 != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)qword_1E9473A88;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_19F24EB80;
    id v7 = v5;
    uint64_t v38 = sub_19EEC3F3C(0, 1, 0, MEMORY[0x1E4FBC860]);
    v8._uint64_t countAndFlagsBits = 0;
    v8._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    unint64_t v9 = *(void **)(v1 + 16);
    unint64_t v10 = *(void **)(v1 + 32);
    long long v37 = &type metadata for AppleServicesLocalizationLiveUpdateService;
    uint64_t v11 = swift_allocObject();
    v36[0] = v11;
    long long v12 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v11 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v11 + 32) = v12;
    *(void *)(v11 + 48) = *(void *)(v1 + 32);
    sub_19EEBCD00((uint64_t)v36, (uint64_t)v32);
    long long v30 = 0u;
    long long v31 = 0u;
    swift_unknownObjectRetain();
    id v13 = v9;
    swift_retain();
    id v14 = v10;
    sub_19EEC3E70((uint64_t)v32, (uint64_t)&v30);
    char v35 = 2;
    long long v33 = v30;
    long long v34 = v31;
    Swift::String v15 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v15 = sub_19EEC3F3C(0, v15[2] + 1, 1, v15);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      Swift::String v15 = sub_19EEC3F3C((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    void v15[2] = v17 + 1;
    uint64_t v18 = &v15[5 * v17];
    long long v19 = v33;
    long long v20 = v34;
    *((unsigned char *)v18 + 64) = v35;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    uint64_t v38 = v15;
    sub_19EEBD664((uint64_t)v36, &qword_1EB393260);
    v21._uint64_t countAndFlagsBits = 0;
    v21._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(void *)(v6 + 32) = v38;
    uint64_t v38 = sub_19EEC3F3C(0, 56, 0, MEMORY[0x1E4FBC860]);
    v22._uint64_t countAndFlagsBits = 0xD000000000000030;
    v22._uint64_t object = (void *)0x800000019F270400;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    long long v37 = &type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicy;
    LOBYTE(v36[0]) = 2;
    sub_19EEBCD00((uint64_t)v36, (uint64_t)v32);
    long long v30 = 0u;
    long long v31 = 0u;
    sub_19EEC3E70((uint64_t)v32, (uint64_t)&v30);
    char v35 = 2;
    long long v33 = v30;
    long long v34 = v31;
    unint64_t v23 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v23 = sub_19EEC3F3C(0, v23[2] + 1, 1, v23);
    }
    unint64_t v25 = v23[2];
    unint64_t v24 = v23[3];
    if (v25 >= v24 >> 1) {
      unint64_t v23 = sub_19EEC3F3C((void *)(v24 > 1), v25 + 1, 1, v23);
    }
    void v23[2] = v25 + 1;
    long long v26 = &v23[5 * v25];
    long long v27 = v33;
    long long v28 = v34;
    *((unsigned char *)v26 + 64) = v35;
    *((_OWORD *)v26 + 2) = v27;
    *((_OWORD *)v26 + 3) = v28;
    uint64_t v38 = v23;
    sub_19EEBD664((uint64_t)v36, &qword_1EB393260);
    v29._uint64_t countAndFlagsBits = 0x7963696C6F7020;
    v29._uint64_t object = (void *)0xE700000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    *(void *)(v6 + 40) = v38;
    *(void *)&long long v33 = v7;
    LOBYTE(v30) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v30);

    swift_bridgeObjectRelease();
    return 2;
  }
  return result;
}

uint64_t sub_19F0960F4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (sub_19F095D48() == 2)
  {
    sub_19EEC4154((uint64_t)a1, (uint64_t)&v67);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473A98);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473AA0);
    if (swift_dynamicCast())
    {
      sub_19EEBB420(&v64, (uint64_t)&v69);
      uint64_t v8 = *((void *)&v70 + 1);
      uint64_t v9 = v71;
      __swift_project_boxed_opaque_existential_1(&v69, *((uint64_t *)&v70 + 1));
      uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      sub_19F096884(v10, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
    }
    uint64_t v66 = 0;
    long long v64 = 0u;
    long long v65 = 0u;
    sub_19EEBD664((uint64_t)&v64, &qword_1E9473AA8);
    if (qword_1E9470198 != -1) {
      swift_once();
    }
    uint64_t v38 = (void *)qword_1E9473A88;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EB80;
    id v14 = v38;
    double v73 = sub_19EEC3F3C(0, 1, 0, MEMORY[0x1E4FBC860]);
    v39._uint64_t countAndFlagsBits = 0;
    v39._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    id v40 = *(void **)(v4 + 16);
    uint64_t v41 = *(void **)(v4 + 32);
    *((void *)&v65 + 1) = &type metadata for AppleServicesLocalizationLiveUpdateService;
    uint64_t v42 = swift_allocObject();
    *(void *)&long long v64 = v42;
    long long v43 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v42 + 16) = *(_OWORD *)v4;
    *(_OWORD *)(v42 + 32) = v43;
    *(void *)(v42 + 48) = *(void *)(v4 + 32);
    sub_19EEBCD00((uint64_t)&v64, (uint64_t)v72);
    long long v67 = 0u;
    long long v68 = 0u;
    swift_unknownObjectRetain();
    id v44 = v40;
    swift_retain();
    id v45 = v41;
    sub_19EEC3E70((uint64_t)v72, (uint64_t)&v67);
    LOBYTE(v71) = 2;
    long long v69 = v67;
    long long v70 = v68;
    long long v46 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v46 = sub_19EEC3F3C(0, v46[2] + 1, 1, v46);
    }
    unint64_t v48 = v46[2];
    unint64_t v47 = v46[3];
    if (v48 >= v47 >> 1) {
      long long v46 = sub_19EEC3F3C((void *)(v47 > 1), v48 + 1, 1, v46);
    }
    _OWORD v46[2] = v48 + 1;
    uint64_t v49 = &v46[5 * v48];
    long long v50 = v69;
    long long v51 = v70;
    *((unsigned char *)v49 + 64) = v71;
    *((_OWORD *)v49 + 2) = v50;
    *((_OWORD *)v49 + 3) = v51;
    double v73 = v46;
    sub_19EEBD664((uint64_t)&v64, &qword_1EB393260);
    v52._uint64_t countAndFlagsBits = 0;
    v52._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v52);
    *(void *)(v13 + 32) = v73;
    double v73 = sub_19EEC3F3C(0, 74, 0, MEMORY[0x1E4FBC860]);
    v53._uint64_t countAndFlagsBits = 543516756;
    v53._uint64_t object = (void *)0xE400000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    uint64_t v54 = a1[3];
    id v55 = __swift_project_boxed_opaque_existential_1(a1, v54);
    *((void *)&v65 + 1) = v54;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v64);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(boxed_opaque_existential_2Tm, v55, v54);
    sub_19EEBCD00((uint64_t)&v64, (uint64_t)v72);
    long long v67 = 0u;
    long long v68 = 0u;
    sub_19EEC3E70((uint64_t)v72, (uint64_t)&v67);
    LOBYTE(v71) = 2;
    long long v69 = v67;
    long long v70 = v68;
    uint64_t v57 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v57 = sub_19EEC3F3C(0, v57[2] + 1, 1, v57);
    }
    unint64_t v59 = v57[2];
    unint64_t v58 = v57[3];
    if (v59 >= v58 >> 1) {
      uint64_t v57 = sub_19EEC3F3C((void *)(v58 > 1), v59 + 1, 1, v57);
    }
    v57[2] = v59 + 1;
    uint64_t v60 = &v57[5 * v59];
    long long v61 = v69;
    long long v62 = v70;
    *((unsigned char *)v60 + 64) = v71;
    *((_OWORD *)v60 + 2) = v61;
    *((_OWORD *)v60 + 3) = v62;
    double v73 = v57;
    sub_19EEBD664((uint64_t)&v64, &qword_1EB393260);
    v63._uint64_t countAndFlagsBits = 0xD000000000000045;
    v63._uint64_t object = (void *)0x800000019F2704B0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v63);
    *(void *)(v13 + 40) = v73;
    *(void *)&long long v69 = v14;
    LOBYTE(v67) = 0;
  }
  else
  {
    if (qword_1E9470198 != -1) {
      swift_once();
    }
    long long v12 = (void *)qword_1E9473A88;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EB80;
    id v14 = v12;
    double v73 = sub_19EEC3F3C(0, 1, 0, MEMORY[0x1E4FBC860]);
    v15._uint64_t countAndFlagsBits = 0;
    v15._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    unint64_t v16 = *(void **)(v4 + 16);
    unint64_t v17 = *(void **)(v4 + 32);
    *((void *)&v65 + 1) = &type metadata for AppleServicesLocalizationLiveUpdateService;
    uint64_t v18 = swift_allocObject();
    *(void *)&long long v64 = v18;
    long long v19 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v18 + 16) = *(_OWORD *)v4;
    *(_OWORD *)(v18 + 32) = v19;
    *(void *)(v18 + 48) = *(void *)(v4 + 32);
    sub_19EEBCD00((uint64_t)&v64, (uint64_t)v72);
    long long v67 = 0u;
    long long v68 = 0u;
    swift_unknownObjectRetain();
    id v20 = v16;
    swift_retain();
    id v21 = v17;
    sub_19EEC3E70((uint64_t)v72, (uint64_t)&v67);
    LOBYTE(v71) = 2;
    long long v69 = v67;
    long long v70 = v68;
    Swift::String v22 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v22 = sub_19EEC3F3C(0, v22[2] + 1, 1, v22);
    }
    unint64_t v24 = v22[2];
    unint64_t v23 = v22[3];
    if (v24 >= v23 >> 1) {
      Swift::String v22 = sub_19EEC3F3C((void *)(v23 > 1), v24 + 1, 1, v22);
    }
    uint64_t v22[2] = v24 + 1;
    unint64_t v25 = &v22[5 * v24];
    long long v26 = v69;
    long long v27 = v70;
    *((unsigned char *)v25 + 64) = v71;
    *((_OWORD *)v25 + 2) = v26;
    *((_OWORD *)v25 + 3) = v27;
    double v73 = v22;
    sub_19EEBD664((uint64_t)&v64, &qword_1EB393260);
    v28._uint64_t countAndFlagsBits = 0;
    v28._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    *(void *)(v13 + 32) = v73;
    double v73 = sub_19EEC3F3C(0, 48, 0, MEMORY[0x1E4FBC860]);
    v29._uint64_t object = (void *)0x800000019F270480;
    v29._uint64_t countAndFlagsBits = 0xD000000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    char v30 = sub_19F095D48();
    *((void *)&v65 + 1) = &type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicy;
    LOBYTE(v64) = v30;
    sub_19EEBCD00((uint64_t)&v64, (uint64_t)v72);
    long long v67 = 0u;
    long long v68 = 0u;
    sub_19EEC3E70((uint64_t)v72, (uint64_t)&v67);
    LOBYTE(v71) = 2;
    long long v69 = v67;
    long long v70 = v68;
    long long v31 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v31 = sub_19EEC3F3C(0, v31[2] + 1, 1, v31);
    }
    unint64_t v33 = v31[2];
    unint64_t v32 = v31[3];
    if (v33 >= v32 >> 1) {
      long long v31 = sub_19EEC3F3C((void *)(v32 > 1), v33 + 1, 1, v31);
    }
    v31[2] = v33 + 1;
    long long v34 = &v31[5 * v33];
    long long v35 = v69;
    long long v36 = v70;
    *((unsigned char *)v34 + 64) = v71;
    *((_OWORD *)v34 + 2) = v35;
    *((_OWORD *)v34 + 3) = v36;
    double v73 = v31;
    sub_19EEBD664((uint64_t)&v64, &qword_1EB393260);
    v37._uint64_t countAndFlagsBits = 0x676E696863616320;
    v37._uint64_t object = (void *)0xEF7963696C6F7020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    *(void *)(v13 + 40) = v73;
    *(void *)&long long v69 = v14;
    LOBYTE(v67) = 2;
  }
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v67);

  return swift_bridgeObjectRelease();
}

unint64_t sub_19F096884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v190 = a2;
  uint64_t v189 = a1;
  uint64_t v205 = *MEMORY[0x1E4F143B8];
  p_Class isa = (void *)sub_19F1DB9FC();
  uint64_t v6 = *(p_isa - 1);
  MEMORY[0x1F4188790](p_isa);
  int v182 = (char *)v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DBA3C();
  uint64_t v181 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int v180 = (char *)v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v10 - 8);
  long long v12 = (char *)v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_19F1DB34C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v179 = (unint64_t)v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v170 - v17;
  sub_19F095854((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1EB392E50);
    return sub_19EE8F204(MEMORY[0x1E4FBC860]);
  }
  else
  {
    uint64_t v171 = v8;
    uint64_t v172 = v6;
    uint64_t v187 = a3;
    uint64_t v185 = v14;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
    if (qword_1E9470198 != -1) {
      swift_once();
    }
    id v20 = (void *)qword_1E9473A88;
    uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v21 = swift_allocObject();
    long long v177 = xmmword_19F24EB80;
    *(_OWORD *)(v21 + 16) = xmmword_19F24EB80;
    id v174 = v20;
    uint64_t v194 = sub_19EEC3F3C(0, 1, 0, MEMORY[0x1E4FBC860]);
    v22._uint64_t countAndFlagsBits = 0;
    v22._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v23 = *v4;
    id v173 = (id)v4[1];
    unint64_t v24 = (void *)v4[2];
    uint64_t v25 = v4[3];
    long long v26 = (void *)v4[4];
    uint64_t v204 = &type metadata for AppleServicesLocalizationLiveUpdateService;
    uint64_t v27 = swift_allocObject();
    uint64_t v202 = v27;
    long long v28 = *((_OWORD *)v4 + 1);
    *(_OWORD *)(v27 + 16) = *(_OWORD *)v4;
    *(_OWORD *)(v27 + 32) = v28;
    *(void *)(v27 + 48) = v4[4];
    sub_19EEBCD00((uint64_t)&v202, (uint64_t)v201);
    long long v199 = 0u;
    long long v200 = 0u;
    uint64_t v29 = v23;
    swift_unknownObjectRetain();
    id v175 = v24;
    uint64_t v184 = v25;
    swift_retain();
    id v176 = v26;
    sub_19EEC3E70((uint64_t)v201, (uint64_t)&v199);
    LOBYTE(v197) = 2;
    long long aBlock = v199;
    long long v196 = v200;
    char v30 = v194;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      char v30 = sub_19EEC3F3C(0, v30[2] + 1, 1, v30);
    }
    unint64_t v33 = v30[2];
    unint64_t v32 = v30[3];
    if (v33 >= v32 >> 1) {
      char v30 = sub_19EEC3F3C((void *)(v32 > 1), v33 + 1, 1, v30);
    }
    _OWORD v30[2] = v33 + 1;
    long long v34 = &v30[5 * v33];
    long long v35 = aBlock;
    long long v36 = v196;
    *((unsigned char *)v34 + 64) = (_BYTE)v197;
    *((_OWORD *)v34 + 2) = v35;
    *((_OWORD *)v34 + 3) = v36;
    uint64_t v194 = v30;
    sub_19EEBD664((uint64_t)&v202, &qword_1EB393260);
    v37._uint64_t countAndFlagsBits = 0;
    v37._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    *(void *)(v21 + 32) = v194;
    uint64_t v194 = sub_19EEC3F3C(0, 68, 0, MEMORY[0x1E4FBC860]);
    v38._uint64_t countAndFlagsBits = 0xD000000000000014;
    v38._uint64_t object = (void *)0x800000019F270200;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    uint64_t v39 = *(void *)(v189 + 16);
    uint64_t v40 = MEMORY[0x1E4FBB550];
    uint64_t v204 = (ValueMetadata *)MEMORY[0x1E4FBB550];
    uint64_t v202 = v39;
    sub_19EEBCD00((uint64_t)&v202, (uint64_t)v201);
    long long v199 = 0u;
    long long v200 = 0u;
    sub_19EEC3E70((uint64_t)v201, (uint64_t)&v199);
    LOBYTE(v197) = 0;
    long long aBlock = v199;
    long long v196 = v200;
    uint64_t v41 = v194;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v41 = sub_19EEC3F3C(0, v41[2] + 1, 1, v41);
    }
    unint64_t v43 = v41[2];
    unint64_t v42 = v41[3];
    if (v43 >= v42 >> 1) {
      uint64_t v41 = sub_19EEC3F3C((void *)(v42 > 1), v43 + 1, 1, v41);
    }
    _OWORD v41[2] = v43 + 1;
    id v44 = &v41[5 * v43];
    long long v45 = aBlock;
    long long v46 = v196;
    *((unsigned char *)v44 + 64) = (_BYTE)v197;
    *((_OWORD *)v44 + 2) = v45;
    *((_OWORD *)v44 + 3) = v46;
    uint64_t v194 = v41;
    sub_19EEBD664((uint64_t)&v202, &qword_1EB393260);
    v47._uint64_t countAndFlagsBits = 0x6E69207379656B20;
    v47._uint64_t object = (void *)0xE900000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    uint64_t v48 = MEMORY[0x1E4FBB1A0];
    uint64_t v204 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
    uint64_t v202 = v190;
    unint64_t v203 = v187;
    sub_19EEBCD00((uint64_t)&v202, (uint64_t)v201);
    long long v199 = 0u;
    long long v200 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v201, (uint64_t)&v199);
    LOBYTE(v197) = 0;
    long long aBlock = v199;
    long long v196 = v200;
    uint64_t v49 = v194;
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v186 = v13;
    if ((v50 & 1) == 0) {
      uint64_t v49 = sub_19EEC3F3C(0, v49[2] + 1, 1, v49);
    }
    unint64_t v52 = v49[2];
    unint64_t v51 = v49[3];
    if (v52 >= v51 >> 1) {
      uint64_t v49 = sub_19EEC3F3C((void *)(v51 > 1), v52 + 1, 1, v49);
    }
    v49[2] = v52 + 1;
    Swift::String v53 = &v49[5 * v52];
    long long v54 = aBlock;
    long long v55 = v196;
    *((unsigned char *)v53 + 64) = (_BYTE)v197;
    *((_OWORD *)v53 + 2) = v54;
    *((_OWORD *)v53 + 3) = v55;
    uint64_t v194 = v49;
    sub_19EEBD664((uint64_t)&v202, &qword_1EB393260);
    v56._uint64_t countAndFlagsBits = 0xD000000000000011;
    v56._uint64_t object = (void *)0x800000019F270220;
    LogMessage.StringInterpolation.appendLiteral(_:)(v56);
    uint64_t ObjectType = swift_getObjectType();
    *(void *)&long long v199 = 0xD000000000000020;
    *((void *)&v199 + 1) = 0x800000019F2701D0;
    Preferences.subscript.getter((uint64_t *)&v199, ObjectType, v48, (uint64_t)v173, (uint64_t)&aBlock);
    unint64_t v59 = *((void *)&aBlock + 1);
    uint64_t v58 = aBlock;
    if (!*((void *)&aBlock + 1))
    {
      uint64_t v58 = 0;
      unint64_t v59 = 0xE000000000000000;
    }
    uint64_t v204 = (ValueMetadata *)v48;
    uint64_t v202 = v58;
    unint64_t v203 = v59;
    sub_19EEBCD00((uint64_t)&v202, (uint64_t)v201);
    long long v199 = 0u;
    long long v200 = 0u;
    sub_19EEC3E70((uint64_t)v201, (uint64_t)&v199);
    LOBYTE(v197) = 0;
    long long aBlock = v199;
    long long v196 = v200;
    uint64_t v60 = v194;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v60 = sub_19EEC3F3C(0, v60[2] + 1, 1, v60);
    }
    unint64_t v62 = v60[2];
    unint64_t v61 = v60[3];
    if (v62 >= v61 >> 1) {
      uint64_t v60 = sub_19EEC3F3C((void *)(v61 > 1), v62 + 1, 1, v60);
    }
    v60[2] = v62 + 1;
    Swift::String v63 = &v60[5 * v62];
    long long v64 = aBlock;
    long long v65 = v196;
    *((unsigned char *)v63 + 64) = (_BYTE)v197;
    *((_OWORD *)v63 + 2) = v64;
    *((_OWORD *)v63 + 3) = v65;
    uint64_t v194 = v60;
    sub_19EEBD664((uint64_t)&v202, &qword_1EB393260);
    v66._uint64_t countAndFlagsBits = 0xD000000000000012;
    v66._uint64_t object = (void *)0x800000019F270240;
    LogMessage.StringInterpolation.appendLiteral(_:)(v66);
    uint64_t v67 = sub_19F1DB21C();
    uint64_t v204 = (ValueMetadata *)v48;
    uint64_t v202 = v67;
    unint64_t v203 = v68;
    sub_19EEBCD00((uint64_t)&v202, (uint64_t)v201);
    long long v199 = 0u;
    long long v200 = 0u;
    sub_19EEC3E70((uint64_t)v201, (uint64_t)&v199);
    LOBYTE(v197) = 2;
    long long aBlock = v199;
    long long v196 = v200;
    long long v69 = v194;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v69 = sub_19EEC3F3C(0, v69[2] + 1, 1, v69);
    }
    unint64_t v71 = v69[2];
    unint64_t v70 = v69[3];
    if (v71 >= v70 >> 1) {
      long long v69 = sub_19EEC3F3C((void *)(v70 > 1), v71 + 1, 1, v69);
    }
    v69[2] = v71 + 1;
    double v72 = &v69[5 * v71];
    long long v73 = aBlock;
    long long v74 = v196;
    *((unsigned char *)v72 + 64) = (_BYTE)v197;
    *((_OWORD *)v72 + 2) = v73;
    *((_OWORD *)v72 + 3) = v74;
    uint64_t v194 = v69;
    sub_19EEBD664((uint64_t)&v202, &qword_1EB393260);
    v75._uint64_t countAndFlagsBits = 0;
    v75._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v75);
    *(void *)(v21 + 40) = v194;
    uint64_t v76 = v174;
    *(void *)&long long aBlock = v174;
    LOBYTE(v199) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v21, (JetEngine::LogMessageLevel)&v199);

    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 32) = 0x6D726F6674616C70;
    *(void *)(v77 + 40) = 0xE800000000000000;
    *(_OWORD *)(v77 + 16) = xmmword_19F251B70;
    *(void *)(v77 + 48) = 0;
    *(void *)(v77 + 56) = 0xE000000000000000;
    *(void *)(v77 + 72) = v48;
    strcpy((char *)(v77 + 80), "languageCode");
    *(unsigned char *)(v77 + 93) = 0;
    *(_WORD *)(v77 + 94) = -5120;
    *(void *)(v77 + 96) = v190;
    uint64_t v78 = v187;
    *(void *)(v77 + 104) = v187;
    *(void *)(v77 + 120) = v48;
    *(void *)(v77 + 128) = 0xD000000000000018;
    *(void *)(v77 + 136) = 0x800000019F270260;
    *(void *)(v77 + 144) = 2;
    *(void *)(v77 + 168) = v40;
    strcpy((char *)(v77 + 176), "keysWithParams");
    *(unsigned char *)(v77 + 191) = -18;
    MEMORY[0x1F4188790](v78);
    v170[-2] = v4;
    swift_bridgeObjectRetain();
    uint64_t v79 = *(void *)(sub_19F0994DC(v189, sub_19F099488) + 16);
    uint64_t v80 = MEMORY[0x1E4FBC868];
    if (v79)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392F20);
      uint64_t v80 = sub_19F1DD06C();
    }
    *(void *)&long long aBlock = v80;
    uint64_t v81 = swift_bridgeObjectRetain();
    sub_19F050144(v81, 1, &aBlock);
    swift_bridgeObjectRelease();
    uint64_t v82 = aBlock;
    *(void *)(v77 + 216) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    *(void *)(v77 + 192) = v82;
    sub_19EEBF898(v77);
    uint64_t v83 = self;
    uint64_t v84 = (void *)sub_19F1DBB1C();
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = 0;
    id v85 = objc_msgSend(v83, sel_dataWithJSONObject_options_error_, v84, 4, &aBlock);

    id v86 = (id)aBlock;
    if (v85)
    {
      uint64_t v87 = sub_19F1DB40C();
      v170[1] = v29;
      unint64_t v88 = v179;
      unint64_t v90 = v89;

      sub_19EEA0784(v87, v90);
      id v91 = dispatch_group_create();
      dispatch_group_enter(v91);
      sub_19F1DACDC();
      uint64_t v92 = (void *)swift_allocBox();
      (*(void (**)(unint64_t, char *, uint64_t))(v185 + 16))(v88, v188, v186);
      sub_19F1DAC9C();
      sub_19F1DAC2C();
      sub_19F1DACCC();
      sub_19F1DACCC();
      uint64_t v189 = v87;
      unint64_t v179 = v90;
      sub_19F1DACBC();
      uint64_t v93 = (void *)swift_allocObject();
      v93[2] = MEMORY[0x1E4FBC868];
      id v174 = v93 + 2;
      uint64_t v94 = swift_allocObject();
      long long v95 = *((_OWORD *)v4 + 1);
      *(_OWORD *)(v94 + 16) = *(_OWORD *)v4;
      *(_OWORD *)(v94 + 32) = v95;
      *(void *)(v94 + 48) = v4[4];
      *(void *)(v94 + 56) = v92;
      *(void *)(v94 + 64) = v91;
      *(void *)(v94 + 72) = v93;
      uint64_t v197 = sub_19F0996C0;
      uint64_t v198 = v94;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v196 = sub_19EEA4A68;
      *((void *)&v196 + 1) = &block_descriptor_24;
      uint64_t v96 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      id v173 = v175;
      uint64_t v97 = p_isa;
      swift_retain();
      id v98 = v176;
      id v176 = v92;
      swift_retain();
      uint64_t v99 = v4;
      uint64_t v100 = v91;
      id v175 = v93;
      swift_retain();
      uint64_t v101 = v180;
      sub_19F1DBA1C();
      unint64_t v102 = (void *)MEMORY[0x1E4FBC860];
      *(void *)&long long v199 = MEMORY[0x1E4FBC860];
      sub_19EEC8D28();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
      sub_19EEC8CCC();
      uint64_t v103 = v182;
      sub_19F1DCC1C();
      MEMORY[0x19F3C6B90](0, v101, v103, v96);
      _Block_release(v96);
      (*(void (**)(char *, void *))(v172 + 8))(v103, v97);
      (*(void (**)(char *, uint64_t))(v181 + 8))(v101, v171);
      swift_release();
      p_Class isa = &v100->isa;
      sub_19F1DC80C();
      uint64_t v104 = (void *)qword_1E9473A88;
      uint64_t v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = v177;
      id v106 = v104;
      uint64_t v194 = sub_19EEC3F3C(0, 1, 0, v102);
      v107._uint64_t countAndFlagsBits = 0;
      v107._uint64_t object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v107);
      uint64_t v204 = &type metadata for AppleServicesLocalizationLiveUpdateService;
      uint64_t v108 = swift_allocObject();
      uint64_t v202 = v108;
      long long v109 = *((_OWORD *)v99 + 1);
      *(_OWORD *)(v108 + 16) = *(_OWORD *)v99;
      *(_OWORD *)(v108 + 32) = v109;
      *(void *)(v108 + 48) = v99[4];
      sub_19EEBCD00((uint64_t)&v202, (uint64_t)v201);
      long long v199 = 0u;
      long long v200 = 0u;
      swift_unknownObjectRetain();
      id v110 = v173;
      swift_retain();
      id v111 = v98;
      sub_19EEC3E70((uint64_t)v201, (uint64_t)&v199);
      LOBYTE(v197) = 2;
      long long aBlock = v199;
      long long v196 = v200;
      unsigned int v112 = v194;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned int v112 = sub_19EEC3F3C(0, v112[2] + 1, 1, v112);
      }
      unint64_t v114 = v112[2];
      unint64_t v113 = v112[3];
      uint64_t v115 = v186;
      if (v114 >= v113 >> 1) {
        unsigned int v112 = sub_19EEC3F3C((void *)(v113 > 1), v114 + 1, 1, v112);
      }
      v112[2] = v114 + 1;
      unint64_t v116 = &v112[5 * v114];
      long long v117 = aBlock;
      long long v118 = v196;
      *((unsigned char *)v116 + 64) = (_BYTE)v197;
      *((_OWORD *)v116 + 2) = v117;
      *((_OWORD *)v116 + 3) = v118;
      uint64_t v194 = v112;
      sub_19EEBD664((uint64_t)&v202, &qword_1EB393260);
      v119._uint64_t countAndFlagsBits = 0;
      v119._uint64_t object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v119);
      *(void *)(v105 + 32) = v194;
      v191 = sub_19EEC3F3C(0, 35, 0, MEMORY[0x1E4FBC860]);
      v120._uint64_t countAndFlagsBits = 0xD000000000000014;
      v120._uint64_t object = (void *)0x800000019F2702D0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v120);
      id v121 = v174;
      swift_beginAccess();
      uint64_t v122 = *(void *)(*(void *)v121 + 16);
      uint64_t v204 = (ValueMetadata *)MEMORY[0x1E4FBB550];
      uint64_t v202 = v122;
      sub_19EEBCD00((uint64_t)&v202, (uint64_t)v201);
      long long v199 = 0u;
      long long v200 = 0u;
      sub_19EEC3E70((uint64_t)v201, (uint64_t)&v199);
      LOBYTE(v197) = 0;
      long long aBlock = v199;
      long long v196 = v200;
      uint64_t v123 = v191;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v123 = sub_19EEC3F3C(0, v123[2] + 1, 1, v123);
      }
      uint64_t v124 = v187;
      unint64_t v126 = v123[2];
      unint64_t v125 = v123[3];
      if (v126 >= v125 >> 1) {
        uint64_t v123 = sub_19EEC3F3C((void *)(v125 > 1), v126 + 1, 1, v123);
      }
      v123[2] = v126 + 1;
      uint64_t v127 = &v123[5 * v126];
      long long v128 = aBlock;
      long long v129 = v196;
      *((unsigned char *)v127 + 64) = (_BYTE)v197;
      *((_OWORD *)v127 + 2) = v128;
      *((_OWORD *)v127 + 3) = v129;
      v191 = v123;
      sub_19EEBD664((uint64_t)&v202, &qword_1EB393260);
      v130._uint64_t countAndFlagsBits = 0x73676E6972747320;
      v130._uint64_t object = (void *)0xED000020726F6620;
      LogMessage.StringInterpolation.appendLiteral(_:)(v130);
      uint64_t v204 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
      uint64_t v202 = v190;
      unint64_t v203 = v124;
      sub_19EEBCD00((uint64_t)&v202, (uint64_t)v201);
      long long v199 = 0u;
      long long v200 = 0u;
      swift_bridgeObjectRetain();
      sub_19EEC3E70((uint64_t)v201, (uint64_t)&v199);
      LOBYTE(v197) = 0;
      long long aBlock = v199;
      long long v196 = v200;
      uint64_t v131 = v191;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v131 = sub_19EEC3F3C(0, v131[2] + 1, 1, v131);
      }
      unint64_t v133 = v131[2];
      unint64_t v132 = v131[3];
      if (v133 >= v132 >> 1) {
        uint64_t v131 = sub_19EEC3F3C((void *)(v132 > 1), v133 + 1, 1, v131);
      }
      v131[2] = v133 + 1;
      v134 = &v131[5 * v133];
      long long v135 = aBlock;
      long long v136 = v196;
      *((unsigned char *)v134 + 64) = (_BYTE)v197;
      *((_OWORD *)v134 + 2) = v135;
      *((_OWORD *)v134 + 3) = v136;
      v191 = v131;
      sub_19EEBD664((uint64_t)&v202, &qword_1EB393260);
      v137._uint64_t countAndFlagsBits = 0;
      v137._uint64_t object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v137);
      *(void *)(v105 + 40) = v191;
      *(void *)&long long aBlock = v106;
      LOBYTE(v199) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v105, (JetEngine::LogMessageLevel)&v199);

      swift_bridgeObjectRelease();
      uint64_t v138 = v175;
      uint64_t v139 = swift_bridgeObjectRetain();
      sub_19F099128(v139, v190, v124);

      swift_bridgeObjectRelease();
      sub_19EEA072C(v189, v179);
      (*(void (**)(char *, uint64_t))(v185 + 8))(v188, v115);
      unint64_t v19 = v138[2];
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v140 = v86;
      v141 = (void *)sub_19F1DB19C();

      swift_willThrow();
      v142 = (void *)qword_1E9473A88;
      uint64_t v143 = swift_allocObject();
      *(_OWORD *)(v143 + 16) = v177;
      id v144 = v142;
      uint64_t v194 = sub_19EEC3F3C(0, 1, 0, MEMORY[0x1E4FBC860]);
      v145._uint64_t countAndFlagsBits = 0;
      v145._uint64_t object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v145);
      uint64_t v204 = &type metadata for AppleServicesLocalizationLiveUpdateService;
      uint64_t v146 = swift_allocObject();
      uint64_t v202 = v146;
      long long v147 = *((_OWORD *)v4 + 1);
      *(_OWORD *)(v146 + 16) = *(_OWORD *)v4;
      *(_OWORD *)(v146 + 32) = v147;
      *(void *)(v146 + 48) = v4[4];
      sub_19EEBCD00((uint64_t)&v202, (uint64_t)v201);
      long long v199 = 0u;
      long long v200 = 0u;
      swift_unknownObjectRetain();
      id v148 = v175;
      swift_retain();
      id v149 = v176;
      sub_19EEC3E70((uint64_t)v201, (uint64_t)&v199);
      LOBYTE(v197) = 2;
      long long aBlock = v199;
      long long v196 = v200;
      uint64_t v150 = v194;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v150 = sub_19EEC3F3C(0, v150[2] + 1, 1, v150);
      }
      uint64_t v151 = v186;
      unint64_t v153 = v150[2];
      unint64_t v152 = v150[3];
      if (v153 >= v152 >> 1) {
        uint64_t v150 = sub_19EEC3F3C((void *)(v152 > 1), v153 + 1, 1, v150);
      }
      v150[2] = v153 + 1;
      v154 = &v150[5 * v153];
      long long v155 = aBlock;
      long long v156 = v196;
      *((unsigned char *)v154 + 64) = (_BYTE)v197;
      *((_OWORD *)v154 + 2) = v155;
      *((_OWORD *)v154 + 3) = v156;
      uint64_t v194 = v150;
      sub_19EEBD664((uint64_t)&v202, &qword_1EB393260);
      v157._uint64_t countAndFlagsBits = 0;
      v157._uint64_t object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v157);
      *(void *)(v143 + 32) = v194;
      uint64_t v194 = sub_19EEC3F3C(0, 40, 0, MEMORY[0x1E4FBC860]);
      v158._uint64_t countAndFlagsBits = 0xD000000000000027;
      v158._uint64_t object = (void *)0x800000019F270280;
      LogMessage.StringInterpolation.appendLiteral(_:)(v158);
      swift_getErrorValue();
      uint64_t v159 = v192;
      uint64_t v160 = v193;
      uint64_t v204 = v193;
      v161 = __swift_allocate_boxed_opaque_existential_2Tm(&v202);
      (*((void (**)(uint64_t *, uint64_t, ValueMetadata *))v160[-1].Description + 2))(v161, v159, v160);
      sub_19EEBCD00((uint64_t)&v202, (uint64_t)v201);
      long long v199 = 0u;
      long long v200 = 0u;
      sub_19EEC3E70((uint64_t)v201, (uint64_t)&v199);
      LOBYTE(v197) = 0;
      long long aBlock = v199;
      long long v196 = v200;
      v162 = v194;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v162 = sub_19EEC3F3C(0, v162[2] + 1, 1, v162);
      }
      unint64_t v164 = v162[2];
      unint64_t v163 = v162[3];
      if (v164 >= v163 >> 1) {
        v162 = sub_19EEC3F3C((void *)(v163 > 1), v164 + 1, 1, v162);
      }
      v162[2] = v164 + 1;
      v165 = &v162[5 * v164];
      long long v166 = aBlock;
      long long v167 = v196;
      *((unsigned char *)v165 + 64) = (_BYTE)v197;
      *((_OWORD *)v165 + 2) = v166;
      *((_OWORD *)v165 + 3) = v167;
      uint64_t v194 = v162;
      sub_19EEBD664((uint64_t)&v202, &qword_1EB393260);
      v168._uint64_t countAndFlagsBits = 0;
      v168._uint64_t object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v168);
      *(void *)(v143 + 40) = v194;
      *(void *)&long long aBlock = v144;
      LOBYTE(v199) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v143, (JetEngine::LogMessageLevel)&v199);

      swift_bridgeObjectRelease();
      unint64_t v19 = sub_19EE8F204(MEMORY[0x1E4FBC860]);

      (*(void (**)(char *, uint64_t))(v185 + 8))(v188, v151);
    }
  }
  return v19;
}

uint64_t sub_19F098050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!sub_19F095D48())
  {
    swift_bridgeObjectRelease();
    return sub_19F09826C(a1, a2, a3, a4);
  }
  char v9 = sub_19F1DD44C();
  swift_bridgeObjectRelease();
  if (v9) {
    return sub_19F09826C(a1, a2, a3, a4);
  }
  uint64_t v10 = *(void *)(v4 + 8);
  uint64_t ObjectType = swift_getObjectType();
  v27[0] = 0xD000000000000020;
  v27[1] = 0x800000019F2701D0;
  Preferences.subscript.getter(v27, ObjectType, MEMORY[0x1E4FBB1A0], v10, (uint64_t)&v28);
  uint64_t v12 = v28;
  if (v29)
  {
    unint64_t v13 = v29;
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
  }
  uint64_t v14 = *(void *)(v4 + 24);
  uint64_t v28 = v12;
  unint64_t v29 = v13;
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  uint64_t v16 = v28;
  unint64_t v15 = v29;
  uint64_t v17 = *(void **)(v14 + 16);
  uint64_t v18 = (objc_class *)type metadata accessor for LocalizedStringsCache.Key();
  unint64_t v19 = (char *)objc_allocWithZone(v18);
  id v20 = &v19[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_key];
  *(void *)id v20 = v16;
  *((void *)v20 + 1) = v15;
  uint64_t v21 = (uint64_t *)&v19[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_domain];
  *uint64_t v21 = a3;
  v21[1] = a4;
  v26.receiver = v19;
  v26.super_class = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v22 = objc_msgSendSuper2(&v26, sel_init);
  uint64_t v23 = objc_msgSend(v17, sel_objectForKey_, v22, v26.receiver, v26.super_class);
  swift_bridgeObjectRelease();

  if (!v23) {
    return sub_19F09826C(a1, a2, a3, a4);
  }
  uint64_t v24 = v23[2];
  swift_bridgeObjectRetain();
  swift_release();
  return v24;
}

uint64_t sub_19F09826C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_19F096884(inited, a3, a4);
  swift_setDeallocating();
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  swift_arrayDestroy();
  uint64_t v12 = *(void *)(v4 + 8);
  uint64_t ObjectType = swift_getObjectType();
  v20[0] = 0xD000000000000020;
  v20[1] = 0x800000019F2701D0;
  Preferences.subscript.getter(v20, ObjectType, v11, v12, (uint64_t)&v21);
  uint64_t v14 = v21;
  if (v22)
  {
    unint64_t v15 = v22;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  uint64_t v21 = v14;
  unint64_t v22 = v15;
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  if (*(void *)(v10 + 16) && (unint64_t v16 = sub_19EEBD400(v21, v22), (v17 & 1) != 0))
  {
    uint64_t v18 = *(void *)(*(void *)(v10 + 56) + 16 * v16);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v18 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_19F0983F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  v9[0] = 0xD000000000000020;
  v9[1] = 0x800000019F2701D0;
  Preferences.subscript.getter(v9, ObjectType, MEMORY[0x1E4FBB1A0], v3, (uint64_t)&v10);
  uint64_t v5 = v10;
  if (v11)
  {
    unint64_t v6 = v11;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v10 = v5;
  unint64_t v11 = v6;
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  uint64_t v7 = v10;
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
  return v7;
}

void sub_19F0984D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_19F1DACDC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_projectBox();
  uint64_t v12 = *(void **)(a1 + 16);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  unint64_t v13 = (void *)sub_19F1DAC5C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v14 = swift_allocObject();
  long long v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)a1;
  *(void *)(v14 + 16) = a3;
  *(_OWORD *)(v14 + 40) = v15;
  *(void *)(v14 + 56) = *(void *)(a1 + 32);
  *(void *)(v14 + 64) = a4;
  aBlock[4] = sub_19F099730;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EFA316C;
  void aBlock[3] = &block_descriptor_15_1;
  unint64_t v16 = _Block_copy(aBlock);
  char v17 = *(void **)(a1 + 32);
  id v18 = a3;
  swift_unknownObjectRetain();
  id v19 = v12;
  swift_retain();
  id v20 = v17;
  swift_retain();
  swift_release();
  id v21 = objc_msgSend(v19, sel_dataTaskWithRequest_completionHandler_, v13, v16);
  _Block_release(v16);

  objc_msgSend(v21, sel_resume);
}

void sub_19F098710(uint64_t a1, unint64_t a2, int a3, id a4, NSObject *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v91 = *MEMORY[0x1E4F143B8];
  if (!a4)
  {
    unint64_t v39 = a2 >> 60;
    if (a2 >> 60 == 15) {
      goto LABEL_30;
    }
    sub_19EEE0560(a1, a2);
    sub_19EEE0560(a1, a2);
    if (qword_1E946FBB8 != -1) {
      swift_once();
    }
    if (sub_19EE7C7FC(qword_1E9498B08, unk_1E9498B10, a1, a2))
    {
      id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9E8]), sel_init);
      unint64_t v42 = &qword_1EB392CF0;
    }
    else
    {
      if (qword_1E946FBD0 != -1) {
        swift_once();
      }
      if ((sub_19EE7C7FC(qword_1E9498B18, unk_1E9498B20, a1, a2) & 1) == 0)
      {
        long long v46 = self;
        Swift::String v47 = (void *)sub_19F1DB3EC();
        uint64_t v80 = 0;
        id v48 = objc_msgSend(v46, sel_JSONObjectWithData_options_error_, v47, 4, &v80);

        uint64_t v49 = v80;
        if (!v48)
        {
          char v50 = v49;
          unint64_t v51 = (void *)sub_19F1DB19C();

          swift_willThrow();
          sub_19EED5BFC(a1, a2);

          sub_19EED5BFC(a1, a2);
          goto LABEL_30;
        }
        sub_19F1DCBEC();
        swift_unknownObjectRelease();
        goto LABEL_23;
      }
      id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C978]), sel_init);
      unint64_t v42 = (unint64_t *)&qword_1EB391C00;
    }
    uint64_t v88 = sub_19EEBDC10(0, v42);
    *(void *)&long long v87 = v41;
LABEL_23:
    sub_19EEBDC00(&v87, &v89);
    *((void *)&v82 + 1) = &type metadata for FoundationValue;
    uint64_t v83 = &off_1EF13D8F8;
    *(void *)&long long v81 = swift_allocObject();
    sub_19EEBDBA4((uint64_t)&v89, v81 + 16);
    sub_19EED5BFC(a1, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v89);
    JSONObject.dictionary.getter((uint64_t)&v84);
    sub_19EEC3418((uint64_t)&v81);
    uint64_t v43 = *((void *)&v85 + 1);
    if (*((void *)&v85 + 1))
    {
      uint64_t v44 = v86;
      __swift_project_boxed_opaque_existential_1(&v84, *((uint64_t *)&v85 + 1));
      uint64_t v45 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v44 + 32))(MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], v43, v44);
      sub_19EED5BFC(a1, a2);
      sub_19EEC05FC((uint64_t)&v84);
      if (v45)
      {
        swift_beginAccess();
        *(void *)(a7 + 16) = v45;
LABEL_44:
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
    }
    else
    {
      sub_19EED5BFC(a1, a2);
      sub_19EEBD664((uint64_t)&v84, &qword_1E946F740);
    }
LABEL_30:
    unint64_t v78 = v39;
    unint64_t v52 = a5;
    if (qword_1E9470198 != -1) {
      swift_once();
    }
    Swift::String v53 = (void *)qword_1E9473A88;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_19F24EB80;
    id v55 = v53;
    uint64_t v80 = sub_19EEC3F3C(0, 1, 0, MEMORY[0x1E4FBC860]);
    v56._uint64_t countAndFlagsBits = 0;
    v56._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v56);
    uint64_t v57 = *(void **)(a6 + 16);
    uint64_t v58 = *(void **)(a6 + 32);
    *((void *)&v90 + 1) = &type metadata for AppleServicesLocalizationLiveUpdateService;
    uint64_t v59 = swift_allocObject();
    *(void *)&long long v89 = v59;
    long long v60 = *(_OWORD *)(a6 + 16);
    *(_OWORD *)(v59 + 16) = *(_OWORD *)a6;
    *(_OWORD *)(v59 + 32) = v60;
    *(void *)(v59 + 48) = *(void *)(a6 + 32);
    sub_19EEBCD00((uint64_t)&v89, (uint64_t)&v87);
    long long v81 = 0u;
    long long v82 = 0u;
    swift_unknownObjectRetain();
    id v61 = v57;
    swift_retain();
    id v62 = v58;
    sub_19EEC3E70((uint64_t)&v87, (uint64_t)&v81);
    LOBYTE(v86) = 2;
    long long v84 = v81;
    long long v85 = v82;
    Swift::String v63 = v80;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v63 = sub_19EEC3F3C(0, v63[2] + 1, 1, v63);
    }
    unint64_t v65 = v63[2];
    unint64_t v64 = v63[3];
    a5 = v52;
    if (v65 >= v64 >> 1) {
      Swift::String v63 = sub_19EEC3F3C((void *)(v64 > 1), v65 + 1, 1, v63);
    }
    v63[2] = v65 + 1;
    Swift::String v66 = &v63[5 * v65];
    long long v67 = v84;
    long long v68 = v85;
    *((unsigned char *)v66 + 64) = v86;
    *((_OWORD *)v66 + 2) = v67;
    *((_OWORD *)v66 + 3) = v68;
    uint64_t v80 = v63;
    sub_19EEBD664((uint64_t)&v89, &qword_1EB393260);
    v69._uint64_t countAndFlagsBits = 0;
    v69._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v69);
    *(void *)(v54 + 32) = v80;
    uint64_t v80 = sub_19EEC3F3C(0, 47, 0, MEMORY[0x1E4FBC860]);
    v70._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    v70._uint64_t object = (void *)0x800000019F2702F0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v70);
    if (v78 < 0xF)
    {
      *((void *)&v90 + 1) = MEMORY[0x1E4F277C0];
      *(void *)&long long v89 = a1;
      *((void *)&v89 + 1) = a2;
    }
    else
    {
      long long v89 = 0u;
      long long v90 = 0u;
    }
    sub_19EEBCD00((uint64_t)&v89, (uint64_t)&v87);
    long long v81 = 0u;
    long long v82 = 0u;
    sub_19EEE0560(a1, a2);
    sub_19EEC3E70((uint64_t)&v87, (uint64_t)&v81);
    LOBYTE(v86) = 2;
    long long v84 = v81;
    long long v85 = v82;
    unint64_t v71 = v80;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v71 = sub_19EEC3F3C(0, v71[2] + 1, 1, v71);
    }
    unint64_t v73 = v71[2];
    unint64_t v72 = v71[3];
    if (v73 >= v72 >> 1) {
      unint64_t v71 = sub_19EEC3F3C((void *)(v72 > 1), v73 + 1, 1, v71);
    }
    v71[2] = v73 + 1;
    long long v74 = &v71[5 * v73];
    long long v75 = v84;
    long long v76 = v85;
    *((unsigned char *)v74 + 64) = v86;
    *((_OWORD *)v74 + 2) = v75;
    *((_OWORD *)v74 + 3) = v76;
    uint64_t v80 = v71;
    sub_19EEBD664((uint64_t)&v89, &qword_1EB393260);
    v77._uint64_t countAndFlagsBits = 0;
    v77._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v77);
    *(void *)(v54 + 40) = v80;
    *(void *)&long long v84 = v55;
    LOBYTE(v81) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v54, (JetEngine::LogMessageLevel)&v81);

    goto LABEL_44;
  }
  id v10 = a4;
  if (qword_1E9470198 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_1E9473A88;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19F24EB80;
  id v13 = v11;
  uint64_t v80 = sub_19EEC3F3C(0, 1, 0, MEMORY[0x1E4FBC860]);
  v14._uint64_t countAndFlagsBits = 0;
  v14._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  long long v15 = *(void **)(a6 + 16);
  unint64_t v16 = *(void **)(a6 + 32);
  *((void *)&v90 + 1) = &type metadata for AppleServicesLocalizationLiveUpdateService;
  uint64_t v17 = swift_allocObject();
  *(void *)&long long v89 = v17;
  long long v18 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a6;
  *(_OWORD *)(v17 + 32) = v18;
  *(void *)(v17 + 48) = *(void *)(a6 + 32);
  sub_19EEBCD00((uint64_t)&v89, (uint64_t)&v87);
  long long v81 = 0u;
  long long v82 = 0u;
  swift_unknownObjectRetain();
  id v19 = v15;
  swift_retain();
  id v20 = v16;
  sub_19EEC3E70((uint64_t)&v87, (uint64_t)&v81);
  LOBYTE(v86) = 2;
  long long v84 = v81;
  long long v85 = v82;
  id v21 = v80;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v21 = sub_19EEC3F3C(0, v80[2] + 1, 1, v80);
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1) {
    id v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
  }
  void v21[2] = v23 + 1;
  uint64_t v24 = &v21[5 * v23];
  long long v25 = v84;
  long long v26 = v85;
  *((unsigned char *)v24 + 64) = v86;
  *((_OWORD *)v24 + 2) = v25;
  *((_OWORD *)v24 + 3) = v26;
  sub_19EEBD664((uint64_t)&v89, &qword_1EB393260);
  v27._uint64_t countAndFlagsBits = 0;
  v27._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  *(void *)(v12 + 32) = v21;
  uint64_t v80 = sub_19EEC3F3C(0, 30, 0, MEMORY[0x1E4FBC860]);
  v28._uint64_t object = (void *)0x800000019F270320;
  v28._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  swift_getErrorValue();
  *((void *)&v90 + 1) = v79;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v89);
  (*(void (**)(uint64_t *))(*(void *)(v79 - 8) + 16))(boxed_opaque_existential_2Tm);
  sub_19EEBCD00((uint64_t)&v89, (uint64_t)&v87);
  long long v81 = 0u;
  long long v82 = 0u;
  sub_19EEC3E70((uint64_t)&v87, (uint64_t)&v81);
  LOBYTE(v86) = 0;
  long long v84 = v81;
  long long v85 = v82;
  char v30 = v80;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v30 = sub_19EEC3F3C(0, v80[2] + 1, 1, v80);
  }
  unint64_t v32 = v30[2];
  unint64_t v31 = v30[3];
  if (v32 >= v31 >> 1) {
    char v30 = sub_19EEC3F3C((void *)(v31 > 1), v32 + 1, 1, v30);
  }
  _OWORD v30[2] = v32 + 1;
  unint64_t v33 = &v30[5 * v32];
  long long v34 = v84;
  long long v35 = v85;
  *((unsigned char *)v33 + 64) = v86;
  *((_OWORD *)v33 + 2) = v34;
  *((_OWORD *)v33 + 3) = v35;
  uint64_t v80 = v30;
  sub_19EEBD664((uint64_t)&v89, &qword_1EB393260);
  v36._uint64_t countAndFlagsBits = 0;
  v36._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v36);
  *(void *)(v12 + 40) = v30;
  *(void *)&long long v84 = v13;
  LOBYTE(v81) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v81);
  swift_bridgeObjectRelease();

LABEL_45:
  dispatch_group_leave(a5);
}

void sub_19F099128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_19F095D48())
  {
    swift_bridgeObjectRelease();
    return;
  }
  char v5 = sub_19F1DD44C();
  swift_bridgeObjectRelease();
  if (v5) {
    return;
  }
  uint64_t v29 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v26 >= v30) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v29 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v30) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v29 + 8 * v9);
      if (!v27)
      {
        int64_t v9 = v26 + 2;
        if (v26 + 2 >= v30) {
          goto LABEL_26;
        }
        unint64_t v27 = *(void *)(v29 + 8 * v9);
        if (!v27) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v27 - 1) & v27;
    unint64_t v11 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_7:
    uint64_t v12 = 16 * v11;
    id v13 = (uint64_t *)(*(void *)(a1 + 48) + v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    unint64_t v16 = (uint64_t *)(*(void *)(a1 + 56) + v12);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    id v19 = *(void **)(*(void *)(v3 + 24) + 16);
    type metadata accessor for LocalizedStringsCache.Value();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v18;
    *(void *)(v20 + 24) = v17;
    id v21 = (objc_class *)type metadata accessor for LocalizedStringsCache.Key();
    unint64_t v22 = (char *)objc_allocWithZone(v21);
    unint64_t v23 = &v22[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_key];
    *(void *)unint64_t v23 = v14;
    *((void *)v23 + 1) = v15;
    uint64_t v24 = &v22[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_domain];
    *(void *)uint64_t v24 = a2;
    *((void *)v24 + 1) = a3;
    v33.receiver = v22;
    v33.super_class = v21;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    id v25 = objc_msgSendSuper2(&v33, sel_init);
    objc_msgSend(v19, sel_setObject_forKey_, v20, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v30)
  {
LABEL_26:
    swift_release();
    return;
  }
  unint64_t v27 = *(void *)(v29 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v30) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v29 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_29:
  __break(1u);
}

unint64_t sub_19F09941C()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_19F099438()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F099488(uint64_t a1, uint64_t a2)
{
  return sub_19F0983F8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_19F099490()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_19F0994DC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_19EFF6560(0, v2, 0);
    uint64_t v3 = v20;
    char v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      swift_bridgeObjectRetain();
      uint64_t v8 = a2(v6, v7);
      uint64_t v10 = v9;
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB392CF8);
      unint64_t v15 = *(void *)(v20 + 16);
      unint64_t v14 = *(void *)(v20 + 24);
      if (v15 >= v14 >> 1) {
        sub_19EFF6560(v14 > 1, v15 + 1, 1);
      }
      v5 += 2;
      *(void *)(v20 + 16) = v15 + 1;
      uint64_t v16 = v20 + 48 * v15;
      *(void *)(v16 + 32) = v8;
      *(void *)(v16 + 40) = v10;
      *(void *)(v16 + 48) = v12;
      *(_OWORD *)(v16 + 56) = v19;
      *(void *)(v16 + 72) = v13;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_19F099620()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F099658()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_19F0996C0()
{
  sub_19F0984D0(v0 + 16, *(void *)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_19F0996D0()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_19F099730(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  sub_19F098710(a1, a2, a3, a4, *(NSObject **)(v4 + 16), v4 + 24, *(void *)(v4 + 64));
}

uint64_t sub_19F099740()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F099778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_19F1DC86C();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  sub_19F1DC83C();
  v3[8] = swift_task_alloc();
  sub_19F1DBA3C();
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F099894, 0, 0);
}

uint64_t sub_19F099894()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v6 = (void *)v0[2];
  uint64_t v5 = v0[3];
  sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
  sub_19F1DBA2C();
  sub_19F1DC82C();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCC68], v3);
  uint64_t v7 = sub_19F1DC8AC();
  uint64_t v8 = self;
  swift_unknownObjectRetain();
  id v9 = objc_msgSend(v8, sel_defaultSessionConfiguration);
  id v10 = objc_msgSend(self, sel_sessionWithConfiguration_, v9);

  type metadata accessor for LocalizedStringsCache();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C998]), sel_init);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *uint64_t v6 = v5;
  v6[1] = v4;
  _OWORD v6[2] = v10;
  void v6[3] = v11;
  v6[4] = v7;
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

unsigned char *storeEnumTagSinglePayload for AppleServicesLocalizationLiveUpdateService.CachingPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F099B28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleServicesLocalizationLiveUpdateService.CachingPolicy()
{
  return &type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicy;
}

ValueMetadata *type metadata accessor for AppleServicesLocalizationLiveUpdateService.CachingPolicyPreferenceKey()
{
  return &type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicyPreferenceKey;
}

unint64_t sub_19F099B74()
{
  unint64_t result = qword_1E9473AB0;
  if (!qword_1E9473AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473AB0);
  }
  return result;
}

uint64_t LintedMetricsEvent.Issue.init(deserializing:using:)(uint64_t a1)
{
  return sub_19EEC3418(a1);
}

uint64_t sub_19F099C00(uint64_t a1)
{
  unint64_t v2 = sub_19F099D88();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F099C3C(uint64_t a1)
{
  unint64_t v2 = sub_19F099D88();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LintedMetricsEvent.Issue.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473AB8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F099D88();
  sub_19F1DD8FC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_19F099D88()
{
  unint64_t result = qword_1E9473AC0;
  if (!qword_1E9473AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473AC0);
  }
  return result;
}

uint64_t LintedMetricsEvent.Issue.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_19F099E04(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473AB8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F099D88();
  sub_19F1DD8FC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_19F099F14(uint64_t a1)
{
  return sub_19EEC3418(a1);
}

unint64_t static LintedMetricsEvent.empty.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_19F099F80()
{
  if (*v0) {
    return 0x736575737369;
  }
  else {
    return 0x73646C656966;
  }
}

uint64_t sub_19F099FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F09AB84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F099FD4(uint64_t a1)
{
  unint64_t v2 = sub_19F09A450();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F09A010(uint64_t a1)
{
  unint64_t v2 = sub_19F09A450();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LintedMetricsEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v23 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473AC8);
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v7 = sub_19F09A450();
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  id v21 = v6;
  uint64_t v22 = v4;
  sub_19EEC4154((uint64_t)a1, (uint64_t)v25);
  JSONObject.init(from:)(v25, v28);
  JSONObject.subscript.getter(0x73646C656966, 0xE600000000000000, (uint64_t)v24);
  JSONObject.dictionary.getter((uint64_t)v25);
  sub_19EEC3418((uint64_t)v24);
  uint64_t v8 = v26;
  if (!v26)
  {
    sub_19EF8BCF4((uint64_t)v25);
    goto LABEL_6;
  }
  uint64_t v9 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v10 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v9 + 32))(MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB1B0], v8, v9);
  sub_19EEC05FC((uint64_t)v25);
  if (!v10)
  {
LABEL_6:
    uint64_t v13 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v15 = v14;
    unint64_t v23 = (uint64_t *)(v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EB0) + 48));
    *(void *)(v15 + 24) = &type metadata for LintedMetricsEvent.CodingKeys;
    *(void *)(v15 + 32) = v7;
    *(unsigned char *)uint64_t v15 = 0;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD86C();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, *MEMORY[0x1E4FBBA68], v13);
    swift_willThrow();
    sub_19EEC3418((uint64_t)v28);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v22);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473AD8);
  v24[0] = 1;
  sub_19F09A4E0(&qword_1E9473AE0, &qword_1E9473AD8, (void (*)(void))sub_19F09A4A4);
  swift_bridgeObjectRetain();
  uint64_t v11 = v21;
  uint64_t v12 = v22;
  sub_19F1DD17C();
  uint64_t v17 = (uint64_t)a1;
  if (v25[0]) {
    uint64_t v18 = v25[0];
  }
  else {
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = v29;
  sub_19EEC3418((uint64_t)v28);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v12);
  uint64_t v20 = v23;
  *unint64_t v23 = v10;
  v20[1] = v18;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(v17);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_19F09A450()
{
  unint64_t result = qword_1E9473AD0;
  if (!qword_1E9473AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473AD0);
  }
  return result;
}

uint64_t sub_19F09A4A4()
{
  return sub_19F09A4E0(&qword_1E9473AE8, &qword_1E9473AF0, (void (*)(void))sub_19F09A54C);
}

uint64_t sub_19F09A4E0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19F09A54C()
{
  unint64_t result = qword_1E9473AF8;
  if (!qword_1E9473AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473AF8);
  }
  return result;
}

uint64_t LintedMetricsEvent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473B00);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v12[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F09A450();
  sub_19F1DD8FC();
  v12[3] = &type metadata for FoundationValue;
  void v12[4] = &off_1EF13D8F8;
  uint64_t v9 = swift_allocObject();
  v12[0] = v9;
  *(void *)(v9 + 40) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  *(void *)(v9 + 16) = v8;
  char v13 = 0;
  sub_19EFAA85C();
  swift_bridgeObjectRetain();
  sub_19F1DD2AC();
  sub_19EEC3418((uint64_t)v12);
  if (!v2)
  {
    v12[0] = v11;
    char v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473AF0);
    sub_19F09A4E0(&qword_1E9473B08, &qword_1E9473AF0, (void (*)(void))sub_19F09A808);
    sub_19F1DD2AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19F09A7D0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_19F09A808()
{
  unint64_t result = qword_1E9473B10;
  if (!qword_1E9473B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B10);
  }
  return result;
}

uint64_t LintedMetricsEvent.issues.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL LintedMetricsEvent.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

uint64_t sub_19F09A878@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LintedMetricsEvent.init(from:)(a1, a2);
}

uint64_t sub_19F09A890(void *a1)
{
  return LintedMetricsEvent.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for LintedMetricsEvent.Issue()
{
  return &type metadata for LintedMetricsEvent.Issue;
}

unsigned char *storeEnumTagSinglePayload for LintedMetricsEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F09A984);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LintedMetricsEvent.CodingKeys()
{
  return &type metadata for LintedMetricsEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for LintedMetricsEvent.Issue.CodingKeys()
{
  return &type metadata for LintedMetricsEvent.Issue.CodingKeys;
}

unint64_t sub_19F09A9D0()
{
  unint64_t result = qword_1E9473B18;
  if (!qword_1E9473B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B18);
  }
  return result;
}

unint64_t sub_19F09AA28()
{
  unint64_t result = qword_1E9473B20;
  if (!qword_1E9473B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B20);
  }
  return result;
}

unint64_t sub_19F09AA80()
{
  unint64_t result = qword_1E9473B28;
  if (!qword_1E9473B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B28);
  }
  return result;
}

unint64_t sub_19F09AAD8()
{
  unint64_t result = qword_1E9473B30;
  if (!qword_1E9473B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B30);
  }
  return result;
}

unint64_t sub_19F09AB30()
{
  unint64_t result = qword_1E9473B38;
  if (!qword_1E9473B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B38);
  }
  return result;
}

uint64_t sub_19F09AB84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73646C656966 && a2 == 0xE600000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736575737369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void ScreenMetricsFieldsProvider.init()(uint64_t a1@<X8>)
{
  double MainScreenSize = JEGestaltGetMainScreenSize();
  uint64_t v4 = v3;
  double MainScreenScale = JEGestaltGetMainScreenScale();
  *(void *)a1 = 0;
  *(double *)(a1 + 8) = MainScreenSize;
  *(void *)(a1 + 16) = v4;
  *(double *)(a1 + 24) = MainScreenScale;
}

void ScreenMetricsFieldsProvider.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19F09ACB8(void *a1)
{
  return ScreenMetricsFieldsProvider.addMetricsFields(into:using:)(a1);
}

uint64_t initializeWithCopy for ScreenMetricsFieldsProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ScreenMetricsFieldsProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for ScreenMetricsFieldsProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenMetricsFieldsProvider(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenMetricsFieldsProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenMetricsFieldsProvider()
{
  return &type metadata for ScreenMetricsFieldsProvider;
}

unint64_t ModelMergingError.errorDescription.getter()
{
  sub_19F09AFE0(v0, (uint64_t)&v5);
  if (!v6) {
    return 0xD000000000000047;
  }
  if (v6 == 1) {
    return 0xD00000000000004DLL;
  }
  sub_19EEBDC00(&v5, v4);
  sub_19EEBDC00(&v7, v3);
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  uint64_t v1 = 0;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return v1;
}

uint64_t sub_19F09AFE0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_19F09B01C()
{
  unint64_t result = qword_1E9473B40;
  if (!qword_1E9473B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B40);
  }
  return result;
}

uint64_t dispatch thunk of MergeableModel.mergingWith(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for ModelMergingError(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    uint64_t v1 = result;
    __swift_destroy_boxed_opaque_existential_1Tm(result);
    return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 32);
  }
  return result;
}

uint64_t initializeWithCopy for ModelMergingError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    *(void *)(a1 + 24) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    uint64_t v5 = *(void *)(a2 + 56);
    *(void *)(a1 + 56) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for ModelMergingError(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      uint64_t v5 = *((void *)a2 + 7);
      *(void *)(a1 + 56) = v5;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, (uint64_t)(a2 + 2));
      return a1;
    }
LABEL_7:
    long long v6 = *a2;
    long long v7 = a2[1];
    long long v8 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 32), (uint64_t *)a2 + 4);
  return a1;
}

uint64_t assignWithTake for ModelMergingError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_6;
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
LABEL_6:
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelMergingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ModelMergingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_19F09B414(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_19F09B42C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelMergingError()
{
  return &type metadata for ModelMergingError;
}

JetEngine::DeResolutionNumericTreatmentFilter::Definition __swiftcall DeResolutionNumericTreatmentFilter.Definition.init(eventType:rules:)(JetEngine::MetricsEventType eventType, Swift::OpaquePointer rules)
{
  uint64_t v3 = *(void *)(eventType.rawValue._countAndFlagsBits + 8);
  *BOOL v2 = *(void *)eventType.rawValue._countAndFlagsBits;
  v2[1] = v3;
  v2[2] = eventType.rawValue._object;
  result.eventType = eventType;
  result.rules = rules;
  return result;
}

JetEngine::DeResolutionNumericTreatmentFilter __swiftcall DeResolutionNumericTreatmentFilter.init(_:)(JetEngine::DeResolutionNumericTreatmentFilter result)
{
  *(void *)uint64_t v1 = *(void *)result.definition.eventType.rawValue._countAndFlagsBits;
  *(_OWORD *)(v1 + 8) = *(_OWORD *)(result.definition.eventType.rawValue._countAndFlagsBits + 8);
  return result;
}

ValueMetadata *type metadata accessor for DeResolutionNumericTreatmentFilter()
{
  return &type metadata for DeResolutionNumericTreatmentFilter;
}

ValueMetadata *type metadata accessor for DeResolutionNumericTreatmentFilter.Definition()
{
  return &type metadata for DeResolutionNumericTreatmentFilter.Definition;
}

uint64_t sub_19F09B4B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  switch(v3 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(v2) - v2;
      if (__OFSUB__(HIDWORD(v2), v2))
      {
        __break(1u);
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 <= a1)
      {
LABEL_10:
        *(_OWORD *)(v1 + 16) = xmmword_19F256D40;
        sub_19EEA0784(v2, v3);
        sub_19EEA072C(v2, v3);
        return v2;
      }
      if (a1 < 0)
      {
LABEL_14:
        __break(1u);
        JUMPOUT(0x19F09B60CLL);
      }
      sub_19EEA0784(*(void *)(v1 + 16), *(void *)(v1 + 24));
      uint64_t v8 = sub_19F1DB43C();
      sub_19EEA072C(v2, v3);
      uint64_t v9 = *(void *)(v1 + 16);
      unint64_t v10 = *(void *)(v1 + 24);
      sub_19EEA0784(v9, v10);
      uint64_t v11 = sub_19F1DB45C();
      uint64_t v13 = v12;
      sub_19EEA072C(v9, v10);
      uint64_t v14 = *(void *)(v1 + 16);
      unint64_t v15 = *(void *)(v1 + 24);
      *(void *)(v1 + 16) = v11;
      *(void *)(v1 + 24) = v13;
      sub_19EEA072C(v14, v15);
      return v8;
    case 2uLL:
      uint64_t v6 = *(void *)(v2 + 16);
      uint64_t v5 = *(void *)(v2 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      if ((a1 & 0x8000000000000000) == 0) {
        goto LABEL_10;
      }
      goto LABEL_14;
    default:
      uint64_t v4 = BYTE6(v3);
      goto LABEL_6;
  }
}

BOOL sub_19F09B61C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
      LODWORD(v3) = HIDWORD(v1) - v1;
      if (__OFSUB__(HIDWORD(v1), v1))
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x19F09B684);
      }
      uint64_t v3 = (int)v3;
      return v3 != 0;
    case 2uLL:
      uint64_t v6 = v1 + 16;
      uint64_t v5 = *(void *)(v1 + 16);
      uint64_t v4 = *(void *)(v6 + 8);
      BOOL v7 = __OFSUB__(v4, v5);
      uint64_t v3 = v4 - v5;
      if (!v7) {
        return v3 != 0;
      }
      goto LABEL_8;
    case 3uLL:
      return v3 != 0;
    default:
      uint64_t v3 = BYTE6(v2);
      return v3 != 0;
  }
}

uint64_t sub_19F09B694()
{
  return sub_19F09B958();
}

uint64_t type metadata accessor for DataOutputStream()
{
  return self;
}

uint64_t sub_19F09B6C0()
{
  return swift_endAccess();
}

uint64_t sub_19F09B72C(unsigned char *a1, uint64_t a2)
{
  uint64_t v2 = sub_19EE684CC(a1, a2);
  unint64_t v4 = v3;
  swift_beginAccess();
  sub_19F1DB42C();
  swift_endAccess();
  return sub_19EEA072C(v2, v4);
}

uint64_t sub_19F09B7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  unint64_t v4 = *(void *)(v2 + 24);
  switch(v4 >> 62)
  {
    case 1uLL:
      LODWORD(v5) = HIDWORD(v3) - v3;
      if (__OFSUB__(HIDWORD(v3), v3))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F09B930);
      }
      uint64_t v5 = (int)v5;
LABEL_6:
      if (v5 >= a2) {
        uint64_t v9 = a2;
      }
      else {
        uint64_t v9 = v5;
      }
LABEL_10:
      sub_19EEA0784(*(void *)(v2 + 16), *(void *)(v2 + 24));
      sub_19F1DB46C();
      sub_19EEA072C(v3, v4);
      uint64_t v10 = *(void *)(v2 + 16);
      unint64_t v11 = *(void *)(v2 + 24);
      switch(v11 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(v10) - v10;
          if (__OFSUB__(HIDWORD(v10), v10)) {
            goto LABEL_22;
          }
          uint64_t v12 = (int)v12;
LABEL_15:
          if (v9 == v12)
          {
LABEL_16:
            *(_OWORD *)(v2 + 16) = xmmword_19F256D40;
            uint64_t v15 = v10;
            unint64_t v16 = v11;
          }
          else
          {
LABEL_18:
            sub_19EEA0784(*(void *)(v2 + 16), *(void *)(v2 + 24));
            uint64_t v17 = sub_19F1DB45C();
            uint64_t v19 = v18;
            sub_19EEA072C(v10, v11);
            uint64_t v15 = *(void *)(v2 + 16);
            unint64_t v16 = *(void *)(v2 + 24);
            *(void *)(v2 + 16) = v17;
            *(void *)(v2 + 24) = v19;
          }
          sub_19EEA072C(v15, v16);
          return v9;
        case 2uLL:
          uint64_t v14 = *(void *)(v10 + 16);
          uint64_t v13 = *(void *)(v10 + 24);
          BOOL v8 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v8) {
            goto LABEL_15;
          }
          goto LABEL_23;
        case 3uLL:
          if (v9) {
            goto LABEL_18;
          }
          goto LABEL_16;
        default:
          uint64_t v12 = BYTE6(v11);
          goto LABEL_15;
      }
    case 2uLL:
      uint64_t v7 = *(void *)(v3 + 16);
      uint64_t v6 = *(void *)(v3 + 24);
      BOOL v8 = __OFSUB__(v6, v7);
      uint64_t v5 = v6 - v7;
      if (!v8) {
        goto LABEL_6;
      }
      goto LABEL_21;
    case 3uLL:
      uint64_t v9 = a2 & (a2 >> 63);
      goto LABEL_10;
    default:
      uint64_t v5 = BYTE6(v4);
      goto LABEL_6;
  }
}

uint64_t sub_19F09B950()
{
  return sub_19F09B958();
}

uint64_t sub_19F09B958()
{
  sub_19EEA072C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataInputStream()
{
  return self;
}

BOOL sub_19F09B9C0()
{
  return sub_19F09B61C();
}

uint64_t sub_19F09B9E8()
{
  return *(void *)(*(void *)v0 + 32);
}

uint64_t sub_19F09B9F8(uint64_t a1)
{
  return sub_19F09B4B4(a1);
}

uint64_t sub_19F09BA1C(uint64_t a1, uint64_t a2)
{
  return sub_19F09B7A8(a1, a2);
}

uint64_t sub_19F09BA40(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  int v5 = a3 & 1;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000)) {
    return sub_19F1DCCDC();
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    *(void *)__s = a1;
    uint64_t v16 = a2 & 0xFFFFFFFFFFFFFFLL;
    if (a3) {
      uint64_t v10 = (uint64_t (*)(char *, size_t, uint64_t))MEMORY[0x1E4F14038];
    }
    else {
      uint64_t v10 = (uint64_t (*)(char *, size_t, uint64_t))MEMORY[0x1E4F14028];
    }
    size_t v11 = strlen(__s);
    if ((v11 & 0x8000000000000000) == 0)
    {
      size_t v12 = v11;
      if (!HIDWORD(v11))
      {
        uint64_t v13 = __s;
        return v10(v13, v12, a4);
      }
    }
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
    {
      uint64_t v6 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      goto LABEL_6;
    }
    uint64_t v6 = (const char *)sub_19F1DCE2C();
    if (v6)
    {
LABEL_6:
      if (v5) {
        uint64_t v7 = (uint64_t (*)(const char *, size_t, uint64_t))MEMORY[0x1E4F14038];
      }
      else {
        uint64_t v7 = (uint64_t (*)(const char *, size_t, uint64_t))MEMORY[0x1E4F14028];
      }
      size_t v8 = strlen(v6);
      if ((v8 & 0x8000000000000000) == 0 && !HIDWORD(v8)) {
        return v7(v6, v8, a4);
      }
      goto LABEL_27;
    }
    if (v5) {
      uint64_t v10 = (uint64_t (*)(char *, size_t, uint64_t))MEMORY[0x1E4F14038];
    }
    else {
      uint64_t v10 = (uint64_t (*)(char *, size_t, uint64_t))MEMORY[0x1E4F14028];
    }
    size_t v14 = strlen(0);
    if ((v14 & 0x8000000000000000) == 0)
    {
      size_t v12 = v14;
      if (!HIDWORD(v14))
      {
        uint64_t v13 = 0;
        return v10(v13, v12, a4);
      }
    }
  }
LABEL_27:
  uint64_t result = sub_19F1DCFBC();
  __break(1u);
  return result;
}

__n128 LogMessage.StringInterpolation.appendInterpolation(identity:)()
{
  swift_unknownObjectRetain();
  sub_19EED7A90((uint64_t)v7);
  uint64_t v1 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_19EEC3F3C(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_19EEC3F3C((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  uint64_t v1[2] = v3 + 1;
  unint64_t v4 = (__n128 *)&v1[5 * v3];
  __n128 result = (__n128)v7[0];
  __n128 v6 = (__n128)v7[1];
  v4[4].n128_u8[0] = v8;
  _OWORD v4[2] = result;
  v4[3] = v6;
  unsigned char *v0 = v1;
  return result;
}

__n128 LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(uint64_t a1)
{
  sub_19EEBCD00(a1, (uint64_t)v10);
  __n128 v8 = 0u;
  __n128 v9 = 0u;
  sub_19EEC3E70((uint64_t)v10, (uint64_t)&v8);
  char v13 = 2;
  __n128 v11 = v8;
  __n128 v12 = v9;
  unint64_t v2 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_19EEC3F3C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_19EEC3F3C((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  int v5 = (__n128 *)&v2[5 * v4];
  __n128 result = v11;
  __n128 v7 = v12;
  v5[4].n128_u8[0] = v13;
  v5[2] = result;
  void v5[3] = v7;
  void *v1 = v2;
  return result;
}

double static LogMessage.traceableSensitive(_:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  sub_19EEBCD00(a1, (uint64_t)v9);
  long long v7 = 0u;
  long long v8 = 0u;
  sub_19EEC3E70((uint64_t)v9, (uint64_t)&v7);
  *(unsigned char *)(v4 + 64) = 2;
  double result = *(double *)&v7;
  long long v6 = v8;
  *(_OWORD *)(v4 + 32) = v7;
  *(_OWORD *)(v4 + 48) = v6;
  *a2 = v4;
  return result;
}

BOOL static LogMessage.ValueTreatment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LogMessage.ValueTreatment.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t LogMessage.ValueTreatment.hashValue.getter()
{
  return sub_19F1DD78C();
}

JetEngine::LogMessage __swiftcall LogMessage.init(_:)(JetEngine::LogMessage result)
{
  void *v1 = *(void *)result.components._rawValue;
  return result;
}

void *static LogMessage.values(of:withRedaction:)(uint64_t a1, int a2)
{
  int v54 = a2;
  uint64_t v71 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_19F1DB34C();
  MEMORY[0x1F4188790](v3);
  uint64_t v49 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = *(void *)(a1 + 16);
  if (!v46) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  Swift::String v53 = (char *)v44 - v7;
  uint64_t v45 = a1 + 32;
  long long v8 = (long long *)((char *)&v65 + 8);
  id v48 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  Swift::String v47 = (void (**)(char *, uint64_t))(v6 + 8);
  v44[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v58 = 0;
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v52 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v11 = MEMORY[0x1E4FBC358];
  uint64_t v12 = MEMORY[0x1E4FBC3B0];
  char v13 = v54;
  uint64_t v55 = v3;
  Swift::String v56 = (char *)&v65 + 8;
  long long v61 = xmmword_19F24EAD0;
  do
  {
    uint64_t v14 = *(void *)(v45 + 8 * v9);
    uint64_t v60 = *(void *)(v14 + 16);
    if (v60)
    {
      uint64_t v51 = v9;
      uint64_t v59 = v14 + 32;
      uint64_t v50 = v14;
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      while (1)
      {
        sub_19F09CB18(v59 + 40 * v15, (uint64_t)v69);
        sub_19EEBCD00((uint64_t)v69, (uint64_t)&v65);
        if (v66)
        {
          sub_19EEBDC00(&v65, &v68);
          sub_19F09CB18((uint64_t)v69, (uint64_t)&v65);
          if ((v13 & 1) == 0)
          {
            sub_19F09DE04((uint64_t)&v65);
LABEL_19:
            sub_19EEBDBA4((uint64_t)&v68, (uint64_t)&v65);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v10 = sub_19EEB2F60(0, v10[2] + 1, 1, v10);
            }
            unint64_t v21 = v10[2];
            unint64_t v20 = v10[3];
            if (v21 >= v20 >> 1) {
              uint64_t v10 = sub_19EEB2F60((void *)(v20 > 1), v21 + 1, 1, v10);
            }
            _OWORD v10[2] = v21 + 1;
            sub_19EEBDC00(&v65, &v10[4 * v21 + 4]);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
            goto LABEL_8;
          }
          int v16 = v67;
          sub_19F09DE04((uint64_t)&v65);
          if (!v16) {
            goto LABEL_19;
          }
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
        }
        else
        {
          sub_19EEBD664((uint64_t)&v65, &qword_1EB393260);
        }
        sub_19EEBCD00((uint64_t)v69, (uint64_t)&v65);
        if (v66)
        {
          sub_19EEBDC00(&v65, &v68);
          int v17 = v70;
          LOBYTE(v65) = 1;
          BYTE1(v65) = v70;
          sub_19EEBDBA4((uint64_t)&v68, (uint64_t)v8);
          if (v17)
          {
            if (v17 == 1)
            {
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
              unint64_t v18 = 0xE90000000000005DLL;
              uint64_t v19 = 0x657461766972705BLL;
            }
            else
            {
              sub_19EEBDC00(v8, v64);
              sub_19EEBDBA4((uint64_t)v64, (uint64_t)&v62);
              uint64_t v28 = sub_19F1DBE0C();
              uint64_t v57 = v44;
              MEMORY[0x1F4188790](v28);
              uint64_t v29 = v58;
              sub_19F09BA40(v30, v31, 1, (uint64_t)&v44[-8]);
              uint64_t v58 = v29;
              uint64_t v62 = 0;
              unint64_t v63 = 0xE000000000000000;
              MEMORY[0x19F3C6160](128);
              uint64_t v32 = 0;
              do
              {
                uint64_t v33 = v32 + 1;
                char v34 = *((unsigned char *)&v44[-8] + v32);
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393160);
                uint64_t v35 = swift_allocObject();
                *(_OWORD *)(v35 + 16) = v61;
                *(void *)(v35 + 56) = v11;
                *(void *)(v35 + 64) = v12;
                *(unsigned char *)(v35 + 32) = v34;
                sub_19F1DBDBC();
                sub_19F1DBEFC();
                swift_bridgeObjectRelease();
                uint64_t v32 = v33;
              }
              while (v33 != 64);
              uint64_t v19 = v62;
              unint64_t v18 = v63;
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v64);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
              char v13 = v54;
              uint64_t v3 = v55;
              long long v8 = v56;
            }
            goto LABEL_34;
          }
          uint64_t v22 = v53;
          if (swift_dynamicCast())
          {
            unint64_t v23 = v49;
            (*v48)(v49, v22, v3);
            uint64_t v24 = (void *)sub_19F1DB25C();
            id v25 = (id)AMSLogableURL();

            uint64_t v19 = sub_19F1DBD7C();
            unint64_t v18 = v26;

            uint64_t v27 = v23;
            long long v8 = v56;
            (*v47)(v27, v3);
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
            if ((swift_dynamicCast() & 1) == 0)
            {
              sub_19EEBDBA4((uint64_t)&v68, (uint64_t)v64);
              uint64_t v19 = sub_19F1DBE0C();
              unint64_t v18 = v40;
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
              sub_19EEBD664((uint64_t)&v65, &qword_1EB3931F0);
              goto LABEL_34;
            }
            Swift::String v36 = *(void **)&v64[0];
            Swift::String v37 = (void *)sub_19F1DB18C();
            id v38 = (id)AMSLogableError();

            uint64_t v19 = sub_19F1DBD7C();
            unint64_t v18 = v39;

            long long v8 = v56;
            uint64_t v3 = v55;
          }
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
        }
        else
        {
          sub_19EEBD664((uint64_t)&v65, &qword_1EB393260);
          unint64_t v18 = 0xE600000000000000;
          uint64_t v19 = 0x296C6C756E28;
        }
LABEL_34:
        uint64_t v66 = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v65 = v19;
        *((void *)&v65 + 1) = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_19EEB2F60(0, v10[2] + 1, 1, v10);
        }
        unint64_t v42 = v10[2];
        unint64_t v41 = v10[3];
        if (v42 >= v41 >> 1) {
          uint64_t v10 = sub_19EEB2F60((void *)(v41 > 1), v42 + 1, 1, v10);
        }
        _OWORD v10[2] = v42 + 1;
        sub_19EEBDC00(&v65, &v10[4 * v42 + 4]);
LABEL_8:
        sub_19F09DE04((uint64_t)v69);
        if (++v15 == v60)
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = v51;
          break;
        }
      }
    }
    ++v9;
  }
  while (v9 != v46);
  swift_bridgeObjectRelease();
  return v10;
}

void LogMessage.StringInterpolation.appendInterpolation(_:)()
{
}

void *sub_19F09C6E0@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (__OFADD__(result, a2))
  {
    __break(1u);
  }
  else
  {
    double result = sub_19EEC3F3C(0, ((unint64_t)result + a2) & ~(((uint64_t)result + a2) >> 63), 0, MEMORY[0x1E4FBC860]);
    *a3 = result;
  }
  return result;
}

void sub_19F09C728(Swift::String *a1)
{
}

uint64_t LogMessage.description.getter()
{
  uint64_t v1 = *v0;
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  unint64_t v2 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_19EEC4E5C(v2, v10);
  os_unfair_lock_unlock(v3);
  int v4 = LOBYTE(v10[0]);
  swift_release();
  if (v4 == 2) {
    char has_internal_content = os_variant_has_internal_content();
  }
  else {
    char has_internal_content = v4 & 1;
  }
  char v6 = has_internal_content ^ 1;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v6;
  v10[0] = v1;
  v10[1] = sub_19EE17248;
  _OWORD v10[2] = v7;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393208);
  sub_19EE90A64(&qword_1EB393200, &qword_1EB393208, &qword_1EB3931B8, &qword_1EB3931B0);
  uint64_t v8 = sub_19F1DBCCC();
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

double sub_19F09C8B4@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
  void v10[3] = MEMORY[0x1E4FBB1A0];
  v10[0] = v3;
  v10[1] = v4;
  long long v8 = 0u;
  long long v9 = 0u;
  sub_19EEC3E70((uint64_t)v10, (uint64_t)&v8);
  *(unsigned char *)(v5 + 64) = 0;
  double result = *(double *)&v8;
  long long v7 = v9;
  *(_OWORD *)(v5 + 32) = v8;
  *(_OWORD *)(v5 + 48) = v7;
  *a2 = v5;
  return result;
}

void static LogMessage.nilValueSubstitute.getter(void *a1@<X8>)
{
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = 0x296C6C756E28;
  a1[1] = 0xE600000000000000;
}

_OWORD *LogMessage.rawValue.getter@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(*(void *)v1 + 16))
  {
    sub_19EEBCD00(*(void *)v1 + 32, (uint64_t)&v4);
    if (*((void *)&v5 + 1))
    {
      sub_19EEBDC00(&v4, v6);
      return sub_19EEBDC00(v6, (_OWORD *)a1);
    }
  }
  else
  {
    long long v4 = 0u;
    long long v5 = 0u;
  }
  double result = (_OWORD *)sub_19EEBD664((uint64_t)&v4, &qword_1EB393260);
  *(void *)(a1 + 24) = MEMORY[0x1E4FBB1A0];
  *(void *)a1 = 0x296C6C756E28;
  *(void *)(a1 + 8) = 0xE600000000000000;
  return result;
}

void LogMessage.valueTreatment.getter(unsigned char *a1@<X8>)
{
  if (*(void *)(*(void *)v1 + 16)) {
    *a1 = *(unsigned char *)(*(void *)v1 + 64);
  }
  else {
    *a1 = 0;
  }
}

Swift::String __swiftcall LogMessage.describe(withRedaction:)(Swift::Bool withRedaction)
{
  *(unsigned char *)(swift_allocObject() + 16) = withRedaction;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393208);
  sub_19EE90A64(&qword_1EB393200, &qword_1EB393208, &qword_1EB3931B8, &qword_1EB3931B0);
  uint64_t v1 = sub_19F1DBCCC();
  uint64_t v3 = v2;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = v1;
  long long v5 = v3;
  result._uint64_t object = v5;
  result._uint64_t countAndFlagsBits = v4;
  return result;
}

uint64_t sub_19F09CB08()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19F09CB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  if (v4)
  {
    *(void *)(a2 + 24) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  }
  else
  {
    long long v5 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = v5;
  }
  *(unsigned char *)(a2 + 32) = *(unsigned char *)(a1 + 32);
  return a2;
}

void *sub_19F09CB90(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C788);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      char v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F09F110(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09CCA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9473B70);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_19F09F310(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09CDC8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D4B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_19F09F620(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09CEF4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EED8134(a1, a2, a3, a4, &qword_1E9473DD0, &qword_1E9473DD8);
}

void *sub_19F09CF08(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D1E0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 6);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      char v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F09F718(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09D018(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E946DC80, &qword_1EB3903F0);
}

void *sub_19F09D02C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E946D680, &qword_1E946D620);
}

void *sub_19F09D040(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3907E0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      char v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F09F514(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09D150(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EED8134(a1, a2, a3, a4, &qword_1E9473D70, &qword_1E9473D78);
}

void *sub_19F09D164(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19F09D170(a1, a2, a3, a4, &qword_1EB3907F0);
}

void *sub_19F09D170(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      long long v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F09F024(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_19F09D27C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F4F0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F09F408(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09D38C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EED8134(a1, a2, a3, a4, &qword_1E9473BD8, &qword_1E9473BE0);
}

void *sub_19F09D3A0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE7341C(a1, a2, a3, a4, (uint64_t *)&unk_1E946E118, &qword_1E9473BC0);
}

void *sub_19F09D3B4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E946DD48, (uint64_t *)&unk_1EB3909D0);
}

void *sub_19F09D3C8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471CD8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F09F024(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09D4D8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473DA8, &qword_1E9471080);
}

void *sub_19F09D4EC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473DB8, &qword_1E94738A0);
}

void *sub_19F09D500(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9B8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19EEAE970(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_19F09D610(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_19F09D6E8(a1, a2, a3, a4, &qword_1E9473DA0, MEMORY[0x1E4F26EA0], MEMORY[0x1E4F26EA0]);
}

void *sub_19F09D644(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EED8134(a1, a2, a3, a4, &qword_1E9473D80, &qword_1E9473D88);
}

void *sub_19F09D658(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E946DDE8, (uint64_t *)&unk_1E946DDB0);
}

void *sub_19F09D66C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1EB390A20, (uint64_t *)&unk_1EB3909E8);
}

void *sub_19F09D680(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1EB390860, &qword_1EB390E20);
}

void *sub_19F09D694(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19F09D170(a1, a2, a3, a4, &qword_1EB3910A0);
}

void *sub_19F09D6A0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E946D668, (uint64_t *)&unk_1E946D600);
}

uint64_t sub_19F09D6B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_19F09D6E8(a1, a2, a3, a4, &qword_1E946D658, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
}

uint64_t sub_19F09D6E8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_19F1DCFBC();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  void v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_19F0A02FC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_19F09D968(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E946F9E0, (uint64_t *)&unk_1E946F9D0);
}

void *sub_19F09D97C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1E946DEF0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 400);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[50 * v8 + 4]) {
          memmove(v12, a4 + 4, 400 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_19F09FCF8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09DAAC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E946ECC0, qword_1EB3918C0);
}

void *sub_19F09DAC0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E946E650, &qword_1E946FC00);
}

void *sub_19F09DAD4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F8B8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_19F09F904(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09DBFC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E9473BB8, (uint64_t *)&unk_1E9470F80);
}

void *sub_19F09DC10(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E9473C18, &qword_1E9470FA0);
}

void *sub_19F09DC24(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473C30, &qword_1E9470FA8);
}

void *sub_19F09DC38(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1EB390C50, &qword_1EB390C20);
}

void *sub_19F09DC4C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473D90, &qword_1E9471060);
}

void *sub_19F09DC60(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F8C0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_19F09F9FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09DD8C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473CF0, &qword_1E9471038);
}

void *sub_19F09DDA0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473D00, &qword_1E9471040);
}

void *sub_19F09DDB4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473D10, (uint64_t *)&unk_1E9471050);
}

void *sub_19F09DDC8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19F09E4BC(a1, a2, a3, a4, &qword_1E946EA58);
}

void *sub_19F09DDDC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, qword_1E946D1F0, &qword_1E946D1C0);
}

void *sub_19F09DDF0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1EB3907C0, &qword_1EB3906F0);
}

uint64_t sub_19F09DE04(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  return a1;
}

uint64_t sub_19F09DE38()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19F09DE48()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

unint64_t sub_19F09DE5C()
{
  unint64_t result = qword_1E9473B48;
  if (!qword_1E9473B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B48);
  }
  return result;
}

uint64_t sub_19F09DEB0()
{
  return MEMORY[0x1E4FBB220];
}

unint64_t sub_19F09DEC0()
{
  unint64_t result = qword_1E9473B50;
  if (!qword_1E9473B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B50);
  }
  return result;
}

unint64_t sub_19F09DF18()
{
  unint64_t result = qword_1E9473B58;
  if (!qword_1E9473B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B58);
  }
  return result;
}

unint64_t sub_19F09DF70()
{
  unint64_t result = qword_1E9473B60;
  if (!qword_1E9473B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B60);
  }
  return result;
}

unint64_t sub_19F09DFC8()
{
  unint64_t result = qword_1E9473B68;
  if (!qword_1E9473B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473B68);
  }
  return result;
}

uint64_t sub_19F09E01C()
{
  return MEMORY[0x1E4FBB230];
}

uint64_t sub_19F09E028()
{
  return MEMORY[0x1E4FBB228];
}

unsigned char *storeEnumTagSinglePayload for LogMessage.ValueTreatment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    _OWORD *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F09E100);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t assignWithCopy for LogMessage.Component(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for LogMessage.Component(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

void *sub_19F09E208(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473D50, &qword_1E946EB20);
}

void *sub_19F09E21C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473D60, (uint64_t *)&unk_1EB3904F0);
}

void *sub_19F09E230(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EED8134(a1, a2, a3, a4, &qword_1E9473D30, &qword_1E9473D38);
}

void *sub_19F09E244(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F718);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_19F09FF10(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09E370(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EED8134(a1, a2, a3, a4, &qword_1E9473D40, &qword_1E9473D48);
}

void *sub_19F09E384(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE7341C(a1, a2, a3, a4, &qword_1E9473D20, &qword_1E9473D28);
}

void *sub_19F09E398(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D900);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F0A0008(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09E4A8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19F09E4BC(a1, a2, a3, a4, &qword_1E946CAF0);
}

void *sub_19F09E4BC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 + 31;
      }
      long long v11[2] = v9;
      v11[3] = 2 * (v13 >> 6);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[8 * v9 + 4]) {
          memmove(v14, a4 + 4, v9 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F0A0114(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_19F09E5D8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473DC8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_19F0A0204(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09E6FC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E946DDF0, &qword_1E946DDC0);
}

void *sub_19F09E710(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473CE0, (uint64_t *)&unk_1E9473890);
}

void *sub_19F09E724(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_19F09FBE8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09E84C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E946D678, (uint64_t *)&unk_1E946D610);
}

uint64_t sub_19F09E860(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_19F09D6E8(a1, a2, a3, a4, (uint64_t *)&unk_1E946D690, type metadata accessor for JetPackAsset, type metadata accessor for JetPackAsset);
}

void *sub_19F09E894(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473CC0, (uint64_t *)&unk_1E9473870);
}

void *sub_19F09E8A8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473CD0, (uint64_t *)&unk_1E9473880);
}

void *sub_19F09E8BC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473CA0, (uint64_t *)&unk_1E9470FF0);
}

void *sub_19F09E8D0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473CB0, qword_1E9476580);
}

void *sub_19F09E8E4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473C70, (uint64_t *)&unk_1E9473840);
}

void *sub_19F09E8F8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473C90, (uint64_t *)&unk_1E9473860);
}

void *sub_19F09E90C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E946ECB0, (uint64_t *)&unk_1EB3909C0);
}

void *sub_19F09E920(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473C80, (uint64_t *)&unk_1E9473850);
}

void *sub_19F09E934(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473C50, (uint64_t *)&unk_1E9476570);
}

void *sub_19F09E948(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473C20, &qword_1E9473830);
}

void *sub_19F09E95C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E946E670, &qword_1E946E3E0);
}

void *sub_19F09E970(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EED8134(a1, a2, a3, a4, &qword_1E946E198, &qword_1E946E170);
}

void *sub_19F09E984(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EED8134(a1, a2, a3, a4, &qword_1E9473C60, &qword_1E9473C68);
}

void *sub_19F09E998(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473C40, &qword_1E946CBA0);
}

void *sub_19F09E9AC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E946CDC0, &qword_1E946CDA0);
}

void *sub_19F09E9C0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, qword_1E946CBD0, &qword_1E946CB98);
}

uint64_t sub_19F09E9D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_19F09D6E8(a1, a2, a3, a4, &qword_1E9472670, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
}

void *sub_19F09EA08(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473C10);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_19F0A0458(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09EB30(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE7341C(a1, a2, a3, a4, &qword_1E9473C08, (uint64_t *)&unk_1EB391AF0);
}

void *sub_19F09EB44(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EED8134(a1, a2, a3, a4, &qword_1E946F380, qword_1E946F1E8);
}

void *sub_19F09EB58(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE7341C(a1, a2, a3, a4, &qword_1E9473C00, &qword_1E946EFE8);
}

void *sub_19F09EB6C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473BE8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F09F204(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09EC7C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473BA8, (uint64_t *)&unk_1E94737F0);
}

void *sub_19F09EC90(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473B98, (uint64_t *)&unk_1E9470F70);
}

void *sub_19F09ECA4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, &qword_1E946D6A8, &qword_1E946D6A0);
}

void *sub_19F09ECB8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EE6F0F4(a1, a2, a3, a4, (uint64_t *)&unk_1E9473BC8, (uint64_t *)&unk_1E9470F90);
}

void *sub_19F09ECCC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473B90);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_19F09F80C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09EDF0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E110);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F09FAF4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_19F09EF00(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_19EED8134(a1, a2, a3, a4, &qword_1E9473B80, &qword_1E9473B88);
}

void *sub_19F09EF14(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB390420);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19F09FE04(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_19F09F024(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09F110(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09F204(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9473BF0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09F310(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09F408(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1E946F430);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09F514(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09F620(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09F718(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09F80C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09F904(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09F9FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09FAF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09FBE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CE0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09FCF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 400 * a1 + 32;
    unint64_t v6 = a3 + 400 * v4;
    if (v5 >= v6 || v5 + 400 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3906A0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09FE04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392310);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F09FF10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F0A0008(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F0A0114(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F0A0204(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F0A02FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F0A0458(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F0A0550(const char *a1)
{
  return sub_19EF84BA8(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19F0A0570()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t DiskJetPackResourceBundle.automaticallyCleanUp.getter()
{
  return *(unsigned __int8 *)(*(void *)(v0 + 8)
                            + OBJC_IVAR____TtC9JetEngine33JetPackResourceBundleDiskLocation_automaticallyCleanUp);
}

uint64_t DiskJetPackResourceBundle.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8) + OBJC_IVAR____TtC9JetEngine33JetPackResourceBundleDiskLocation_url;
  uint64_t v4 = sub_19F1DB34C();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiskJetPackResourceBundle.data(withName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EEBD400(a1, a2);
  if (v7)
  {
    uint64_t v8 = *(void *)(v3 + 56) + 16 * v6;
    uint64_t v9 = *(void *)v8;
    sub_19EEA0784(*(void *)v8, *(void *)(v8 + 8));
  }
  else
  {
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9;
}

id DiskJetPackResourceBundle.contentsOfDirectory(atPath:)(void **a1)
{
  v16[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  id v9 = objc_msgSend(self, sel_defaultManager);
  v16[0] = v8;
  DiskJetPackResourceBundle.fileURL(atPath:)((uint64_t *)v16, (uint64_t)v7);
  if (v2)
  {
  }
  else
  {
    sub_19F1DB2DC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v10 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    v16[0] = 0;
    id v1 = objc_msgSend(v9, sel_contentsOfDirectoryAtPath_error_, v10, v16);

    id v11 = v16[0];
    if (v1)
    {
      uint64_t v12 = sub_19F1DC16C();

      swift_bridgeObjectRetain();
      id v1 = (id)sub_19F0A1090(v12, (uint64_t)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = v11;
      sub_19F1DB19C();

      swift_willThrow();
    }
  }
  return v1;
}

uint64_t DiskJetPackResourceBundle.inMemorySource(fromPath:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned __int8 v70 = a2;
  uint64_t v66 = type metadata accessor for JSSource();
  MEMORY[0x1F4188790](v66);
  uint64_t v71 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for DiskJetPackResourceBundle();
  MEMORY[0x1F4188790](v67);
  Swift::String v69 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v68 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v53 - v9;
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v53 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v18 = sub_19F1DB34C();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  uint64_t v73 = v22;
  uint64_t v23 = v72;
  uint64_t result = DiskJetPackResourceBundle.fileURL(atPath:)(&v73, (uint64_t)v21);
  if (!v23)
  {
    uint64_t v61 = v22;
    uint64_t v62 = v10;
    unint64_t v63 = v13;
    unint64_t v64 = v16;
    uint64_t v72 = v19;
    uint64_t v65 = v18;
    uint64_t v25 = sub_19F1DB36C();
    unint64_t v27 = v26;
    uint64_t v60 = 0;
    uint64_t v28 = v72;
    uint64_t v29 = v72 + 8;
    uint64_t v30 = *(void (**)(char *, uint64_t))(v72 + 8);
    uint64_t v31 = v65;
    v30(v21, v65);
    sub_19F1DBDCC();
    uint64_t v32 = sub_19F1DBD9C();
    if (v33)
    {
      int v54 = (void (*)(uint64_t, uint64_t))v30;
      uint64_t v55 = v29;
      uint64_t v56 = v33;
      uint64_t v57 = v32;
      unint64_t v59 = v27;
      uint64_t v34 = v2;
      uint64_t v35 = v2 + *(int *)(v67 + 24);
      uint64_t v36 = (uint64_t)v63;
      sub_19EE628D4(v35, (uint64_t)v63);
      Swift::String v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
      int v38 = v37(v36, 1, v31);
      uint64_t v58 = v25;
      if (v38 == 1)
      {
        sub_19EE6293C(v36);
        unint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
        uint64_t v40 = (uint64_t)v64;
        v39(v64, 1, 1, v31);
      }
      else
      {
        uint64_t v40 = (uint64_t)v64;
        if (*(void *)(v61 + 16))
        {
          uint64_t v73 = v61;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
          sub_19EE868D4();
          sub_19F1DBCCC();
          swift_bridgeObjectRelease();
        }
        uint64_t v41 = (uint64_t)v63;
        sub_19F1DB26C();
        swift_bridgeObjectRelease();
        uint64_t v31 = v65;
        v54(v41, v65);
        unint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
        v39((char *)v40, 0, 1, v31);
      }
      unint64_t v42 = (uint64_t *)v71;
      uint64_t v43 = v40;
      uint64_t v45 = v68;
      uint64_t v44 = (uint64_t)v69;
      sub_19EE628D4(v43, v68);
      sub_19EE629FC(v34, v44, (uint64_t (*)(void))type metadata accessor for DiskJetPackResourceBundle);
      int v46 = v37(v45, 1, v31);
      Swift::String v47 = v70;
      uint64_t v48 = v66;
      if (v46 == 1)
      {
        uint64_t v49 = (uint64_t)v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v62, *(void *)(v44 + 8) + OBJC_IVAR____TtC9JetEngine33JetPackResourceBundleDiskLocation_url, v31);
        sub_19EE6299C(v44, (uint64_t (*)(void))type metadata accessor for DiskJetPackResourceBundle);
        sub_19EE6293C(v45);
      }
      else
      {
        sub_19EE6299C(v44, (uint64_t (*)(void))type metadata accessor for DiskJetPackResourceBundle);
        uint64_t v49 = (uint64_t)v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v62, v45, v31);
      }
      v39((char *)v49, 0, 1, v31);
      void v47[3] = v48;
      v47[4] = (uint64_t)&protocol witness table for JSSource;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v47);
      uint64_t v51 = (uint64_t)v42 + *(int *)(v48 + 20);
      v39((char *)v51, 1, 1, v31);
      uint64_t v52 = v56;
      *unint64_t v42 = v57;
      v42[1] = v52;
      sub_19EE62024(v49, v51);
      sub_19EF968BC((uint64_t)v42, (uint64_t)boxed_opaque_existential_2Tm);
      sub_19EEA072C(v58, v59);
      return sub_19EE6293C((uint64_t)v64);
    }
    else
    {
      sub_19F0A11F0();
      swift_allocError();
      swift_willThrow();
      return sub_19EEA072C(v25, v27);
    }
  }
  return result;
}

uint64_t sub_19F0A0ED8(uint64_t a1, uint64_t a2)
{
  return DiskJetPackResourceBundle.data(withName:)(a1, a2);
}

uint64_t sub_19F0A0EF0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  DiskJetPackResourceBundle.fileURL(atPath:)(&v10, (uint64_t)v7);
  if (!v1)
  {
    uint64_t v2 = sub_19F1DB36C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v2;
}

id sub_19F0A1024(void **a1)
{
  return DiskJetPackResourceBundle.contentsOfDirectory(atPath:)(a1);
}

unint64_t sub_19F0A103C()
{
  unint64_t result = qword_1E9473DE0;
  if (!qword_1E9473DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473DE0);
  }
  return result;
}

uint64_t sub_19F0A1090(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_19EE86C48(0, v2, 0);
    uint64_t v3 = v14;
    uint64_t v6 = (void **)(a1 + 40);
    do
    {
      uint64_t v7 = (uint64_t)*(v6 - 1);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain_n();
      v9._uint64_t countAndFlagsBits = v7;
      v9._uint64_t object = v8;
      JetPackPath.init(_:)(v9);
      swift_bridgeObjectRetain();
      sub_19EF5D6DC(v13);
      swift_bridgeObjectRelease();
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_19EE86C48(v10 > 1, v11 + 1, 1);
      }
      v6 += 2;
      *(void *)(v14 + 16) = v11 + 1;
      *(void *)(v14 + 8 * v11 + 32) = a2;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_19F0A11B0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  return MEMORY[0x1F4186498](v0, 88, 7);
}

unint64_t sub_19F0A11F0()
{
  unint64_t result = qword_1E9473DE8[0];
  if (!qword_1E9473DE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9473DE8);
  }
  return result;
}

void *assignWithCopy for DiskJetPackResourceBundle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

void *initializeWithTake for DiskJetPackResourceBundle(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_19F1DB34C();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithTake for DiskJetPackResourceBundle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiskJetPackResourceBundle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F0A16AC);
}

uint64_t sub_19F0A16AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DiskJetPackResourceBundle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F0A1774);
}

void *sub_19F0A1774(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    char *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_19F0A1820()
{
  sub_19EE23F8C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_19F0A18C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *v4;
  double v9 = MEMORY[0x1F4188790](a1);
  unint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, double))(v12 + 16))(v11, v9);
  uint64_t v13 = *(void *)(v8 + 80);
  EventSubscription.init<A>(_:)((uint64_t)v11, &v22);
  uint64_t v14 = v22;
  uint64_t v15 = v4[2];
  uint64_t v18 = v13;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = v22;
  type metadata accessor for EventSubscription();
  sub_19F1DCECC();
  swift_retain();
  sub_19EEAC6FC((void (*)(uint64_t))sub_19F0A2138, (uint64_t)v17, v15);
  uint64_t result = swift_release();
  *a4 = v14;
  return result;
}

uint64_t sub_19F0A1A34()
{
  return sub_19F1DCE9C();
}

uint64_t sub_19F0A1AA0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = v1[2];
  v5[2] = *(void *)(*v1 + 80);
  void v5[3] = v2;
  type metadata accessor for EventSubscription();
  sub_19F1DCECC();
  swift_retain();
  sub_19EEAC6FC((void (*)(uint64_t))sub_19F0A211C, (uint64_t)v5, v3);
  return swift_release();
}

uint64_t sub_19F0A1B48()
{
  type metadata accessor for EventSubscription();
  sub_19F1DCECC();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t result = sub_19F1DC6DC();
  if (v1 != 1)
  {
    sub_19F1DCEAC();
    return swift_release();
  }
  return result;
}

uint64_t sub_19F0A1C30()
{
  char v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = v0[2];
  uint64_t v16 = *(void *)(v2 + 80);
  uint64_t v14 = v16;
  type metadata accessor for EventSubscription();
  sub_19F1DCECC();
  swift_retain();
  sub_19EEAC6FC((void (*)(uint64_t))sub_19F0A20C4, (uint64_t)v15, v3);
  swift_release();
  uint64_t v4 = v19;
  swift_getWitnessTable();
  uint64_t result = sub_19F1DBB0C();
  uint64_t v19 = result;
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    v13[4] = 0;
    unint64_t v7 = 0;
    while (v7 < *(void *)(v4 + 16))
    {
      uint64_t v8 = *(void *)(v4 + 8 * v7 + 32);
      uint64_t v18 = v8;
      swift_retain();
      if ((EventSubscription.isValid.getter() & 1) == 0
        || (uint64_t v18 = v8, EventSubscription.notify(_:)(), uint64_t v18 = v8, (EventSubscription.isValid.getter() & 1) == 0))
      {
        uint64_t v17 = v8;
        sub_19F1DC60C();
        sub_19F1DC5DC();
      }
      uint64_t result = swift_release();
      if (v6 == ++v7)
      {
        swift_release();
        uint64_t v9 = v19;
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v9 = result;
    swift_release();
LABEL_11:
    swift_bridgeObjectRetain();
    char v10 = sub_19F1DC5EC();
    uint64_t v11 = swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      uint64_t v12 = v1[2];
      MEMORY[0x1F4188790](v11);
      long long v13[2] = v14;
      void v13[3] = v9;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_19EEAC6FC((void (*)(uint64_t))sub_19F0A20E0, (uint64_t)v13, v12);
      swift_release();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19F0A1EB8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EventSubscription();
  sub_19F1DCECC();
  swift_retain();
  swift_getWitnessTable();
  uint64_t result = sub_19F1DC2CC();
  *a1 = result;
  return result;
}

uint64_t sub_19F0A1F50()
{
  return sub_19F1DC72C();
}

uint64_t sub_19F0A200C()
{
  return sub_19F1DC5FC() & 1;
}

uint64_t type metadata accessor for _DebugEvent()
{
  return __swift_instantiateGenericMetadata();
}

void sub_19F0A20A0(uint64_t a1@<X8>)
{
}

uint64_t sub_19F0A20C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_19F0A1EB8(a1);
}

uint64_t sub_19F0A20E0()
{
  return sub_19F0A1F50();
}

uint64_t sub_19F0A20FC()
{
  return sub_19F0A200C() & 1;
}

uint64_t sub_19F0A211C()
{
  return sub_19F0A1B48();
}

uint64_t sub_19F0A2138()
{
  return sub_19F0A1A34();
}

uint64_t sub_19F0A2158(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EB80;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  *((void *)&v19 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v18 = 0xD00000000000002DLL;
  *((void *)&v18 + 1) = 0x800000019F26ECD0;
  long long v24 = 0u;
  long long v25 = 0u;
  id v5 = v2;
  sub_19EEC3E70((uint64_t)&v18, (uint64_t)&v24);
  *(unsigned char *)(v4 + 64) = 0;
  long long v6 = v25;
  *(_OWORD *)(v4 + 32) = v24;
  *(_OWORD *)(v4 + 48) = v6;
  *(void *)(v3 + 32) = v4;
  uint64_t v23 = sub_19EEC3F3C(0, 20, 0, MEMORY[0x1E4FBC860]);
  v7._uint64_t object = (void *)0x800000019F26ED00;
  v7._uint64_t countAndFlagsBits = 0xD000000000000013;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  if (v1)
  {
    swift_getErrorValue();
    *((void *)&v22 + 1) = v17;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v21);
    (*(void (**)(uint64_t *))(*(void *)(v17 - 8) + 16))(boxed_opaque_existential_2Tm);
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }
  sub_19EEBCD00((uint64_t)&v21, (uint64_t)v20);
  long long v18 = 0u;
  long long v19 = 0u;
  sub_19EEC3E70((uint64_t)v20, (uint64_t)&v18);
  char v26 = 0;
  long long v24 = v18;
  long long v25 = v19;
  uint64_t v9 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = sub_19EEC3F3C(0, v9[2] + 1, 1, v9);
  }
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  uint64_t v9[2] = v11 + 1;
  uint64_t v12 = &v9[5 * v11];
  long long v13 = v24;
  long long v14 = v25;
  *((unsigned char *)v12 + 64) = v26;
  *((_OWORD *)v12 + 2) = v13;
  *((_OWORD *)v12 + 3) = v14;
  uint64_t v23 = v9;
  sub_19EEBCB4C((uint64_t)&v21);
  v15._uint64_t countAndFlagsBits = 0;
  v15._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  *(void *)(v3 + 40) = v23;
  *(void *)&long long v24 = v5;
  LOBYTE(v18) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v18);

  return swift_bridgeObjectRelease();
}

uint64_t Unstable.Accounts.__allocating_init(_:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  Unstable.Accounts.init(_:)(a1);
  return v2;
}

id *Unstable.Accounts.deinit()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  return v0;
}

uint64_t Unstable.Accounts.__deallocating_deinit()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  return swift_deallocClassInstance();
}

id Unstable.Accounts.localiTunesAccount.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*(id *)(v1 + 16), sel_ams_localiTunesAccount);
  *a1 = result;
  return result;
}

void sub_19F0A26A0()
{
  uint64_t v1 = *(void **)(v0 + 24);
  objc_msgSend(v1, sel_lock);
  id v2 = objc_msgSend(*(id *)(v0 + 16), sel_ams_activeiTunesAccount);
  uint64_t v3 = *(void **)(v0 + 32);
  *(void *)(v0 + 32) = v2;

  objc_msgSend(v1, sel_unlock);
  id v4 = objc_msgSend(self, sel_defaultCenter);
  id v5 = v4;
  if (qword_1EB392AA0 != -1)
  {
    swift_once();
    id v4 = v5;
  }
  objc_msgSend(v4, sel_postNotificationName_object_, qword_1EB3929D8, v0);
}

id sub_19F0A2880@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  id v4 = *(void **)(*v1 + 24);
  objc_msgSend(v4, sel_lock);
  id v5 = *(void **)(v3 + 32);
  *a1 = v5;
  id v6 = v5;
  return objc_msgSend(v4, sel_unlock);
}

ValueMetadata *type metadata accessor for UnstableAlias()
{
  return &type metadata for UnstableAlias;
}

uint64_t method lookup function for Unstable.Accounts(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Unstable.Accounts);
}

uint64_t dispatch thunk of Unstable.Accounts.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *_s31_AccountsForAccountProviderRuleOMa()
{
  return &_s31_AccountsForAccountProviderRuleON;
}

ValueMetadata *_s31_AccountProviderForAccountsRuleOMa()
{
  return &_s31_AccountProviderForAccountsRuleON;
}

uint64_t sub_19F0A2944(void *a1)
{
  return 0;
}

uint64_t sub_19F0A2A08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_19F0A2A30(a1);
  *a2 = result;
  return result;
}

uint64_t sub_19F0A2A30(uint64_t a1)
{
  sub_19EEC4154(a1, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392340);
  sub_19EE6E5F8();
  if (swift_dynamicCast())
  {
    type metadata accessor for Unstable.Accounts();
    uint64_t v2 = swift_allocObject();
    Unstable.Accounts.init(_:)(v6);
  }
  else
  {
    type metadata accessor for Unstable.Accounts();
    uint64_t v3 = swift_dynamicCast();
    if (v3)
    {
      uint64_t v2 = (uint64_t)v6;
    }
    else
    {
      MEMORY[0x1F4188790](v3);
      v5[2] = a1;
      requirementFailure(_:file:line:)(sub_19F0A2B84, (uint64_t)v5, (uint64_t)"JetEngine/Accounts.swift", 24, 2, 139);
      if (qword_1E946FCE0 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_1E946FC88;
      swift_retain();
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  return v2;
}

uint64_t sub_19F0A2B84()
{
  return sub_19F0A2944(*(void **)(v0 + 16));
}

uint64_t AsyncActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v32 = a4;
  uint64_t v33 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v34 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  long long v14 = (char *)&v31 - v13;
  uint64_t v15 = *(void *)(a3 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  double v18 = MEMORY[0x1F4188790](v17);
  long long v19 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v19, v5, a3, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, AssociatedTypeWitness);
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v21 = (v16 + v20 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v32;
  *(void *)(v22 + 16) = a3;
  *(void *)(v22 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v22 + v20, v19, a3);
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v22 + v21, v14, AssociatedTypeWitness);
  *(void *)(v22 + ((v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DBF8);
  uint64_t v24 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v25 = swift_allocObject();
  *(_DWORD *)(v25 + 16) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v24 + 16) = v25;
  *(void *)(v24 + 24) = v26;
  *(unsigned char *)(v24 + 32) = 0;
  uint64_t v27 = sub_19F1DC37C();
  uint64_t v28 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v34, 1, 1, v27);
  uint64_t v29 = (void *)swift_allocObject();
  uint64_t v29[2] = 0;
  v29[3] = 0;
  void v29[4] = &unk_1E9473E78;
  v29[5] = v22;
  v29[6] = v24;
  swift_retain();
  swift_retain();
  sub_19EE9A0F8(v28, (uint64_t)&unk_1E9473E80, (uint64_t)v29);
  swift_release();
  return v24;
}

uint64_t sub_19F0A2EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 16) + **(int **)(a6 + 16));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_19EEB8A6C;
  return v14(a1, a3, a4, a5, a6);
}

uint64_t sub_19F0A3018()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, AssociatedTypeWitness);
  swift_release();
  return MEMORY[0x1F4186498](v0, v11 + 8, v10);
}

uint64_t sub_19F0A318C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  unint64_t v8 = v7 + *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v1 + v7;
  uint64_t v12 = v1 + v10;
  uint64_t v13 = *(void *)(v1 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  long long v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *long long v14 = v3;
  v14[1] = sub_19EE17780;
  return sub_19F0A2EF0(a1, v11, v12, v13, v6, v5);
}

uint64_t sub_19F0A3324()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F0A336C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EEB8A6C;
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E9475708
                                                                                   + dword_1E9475708);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t dispatch thunk of AsyncActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_19EEB8A6C;
  return v13(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for Models()
{
  return &type metadata for Models;
}

uint64_t _noAsync<A>(_:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t _unsafeSend<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a3, v7, a2);
}

uint64_t _UnsafeUncheckedSendableBox.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t _unsafeReceive<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t _UnsafeUncheckedSendableBox.wrapped.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_19F0A371C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_19F0A3878(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19F0A3A90);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for _UnsafeUncheckedSendableBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of Lens.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_19F0A3AE4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unsigned char *sub_19F0A3B44@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_19F0A3BB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t LazyPromise<A>.init(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_19F1DBA0C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = sub_19EEA5F34();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCB48], v4);
  uint64_t v9 = sub_19F1DC8BC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  unint64_t v14 = v8;
  int v15 = &protocol witness table for OS_dispatch_queue;
  *(void *)&long long v13 = v9;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = *(void *)(v2 + 80);
  *(void *)(v10 + 24) = a1;
  return LazyPromise.__allocating_init(on:perform:)(&v13, (uint64_t)sub_19F0A3F14, v10);
}

void sub_19F0A3D5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1), void *a4, void *a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a6;
  v12[3] = a1;
  void v12[4] = a2;
  long long v19 = sub_19F0A3F54;
  unint64_t v20 = v12;
  uint64_t v15 = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_19EE530EC;
  double v18 = &block_descriptor_25;
  long long v13 = _Block_copy(&v15);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_addSuccessBlock_, v13);
  _Block_release(v13);
  long long v19 = a3;
  unint64_t v20 = a4;
  uint64_t v15 = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_19EEA60B4;
  double v18 = &block_descriptor_6_4;
  unint64_t v14 = _Block_copy(&v15);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_addErrorBlock_, v14);
  _Block_release(v14);
}

uint64_t sub_19F0A3EDC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_19F0A3F14(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1), void *a4)
{
  sub_19F0A3D5C(a1, a2, a3, a4, *(void **)(v4 + 24), *(void *)(v4 + 16));
}

uint64_t sub_19F0A3F1C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0A3F54(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 24);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t static AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.defaultValue.getter()
{
  return 0;
}

uint64_t sub_19F0A3FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F0A4CD0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19F0A3FCC(uint64_t a1)
{
  unint64_t v2 = sub_19EE72898();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F0A4008(uint64_t a1)
{
  unint64_t v2 = sub_19EE72898();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.value(from:)(void *a1)
{
  return sub_19EE7262C(a1, &qword_1E946F7A0, (void (*)(void))sub_19EE72898) & 1;
}

uint64_t static AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.encode(_:to:)(uint64_t a1, void *a2)
{
  return sub_19F0A45F4(a1, a2, &qword_1E9473F10, (void (*)(void))sub_19EE72898);
}

uint64_t sub_19F0A40C0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_19EE7262C(a1, &qword_1E946F7A0, (void (*)(void))sub_19EE72898);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_19F0A4114(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_19F0A47C0(a1, a2, a3, a4, &qword_1E9473F10, (void (*)(void))sub_19EE72898);
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.defaultValue.getter()
{
  return 0;
}

uint64_t sub_19F0A415C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F0A4C48(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19F0A4188(uint64_t a1)
{
  unint64_t v2 = sub_19EE728EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F0A41C4(uint64_t a1)
{
  unint64_t v2 = sub_19EE728EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.value(from:)(void *a1)
{
  return sub_19EE7262C(a1, &qword_1E946F798, (void (*)(void))sub_19EE728EC) & 1;
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.encode(_:to:)(uint64_t a1, void *a2)
{
  return sub_19F0A45F4(a1, a2, &qword_1E9473F18, (void (*)(void))sub_19EE728EC);
}

uint64_t sub_19F0A427C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_19EE7262C(a1, &qword_1E946F798, (void (*)(void))sub_19EE728EC);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_19F0A42D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_19F0A47C0(a1, a2, a3, a4, &qword_1E9473F18, (void (*)(void))sub_19EE728EC);
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.defaultValue.getter()
{
  return 0;
}

uint64_t sub_19F0A4318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F0A4D58(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19F0A4344(uint64_t a1)
{
  unint64_t v2 = sub_19EE72844();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F0A4380(uint64_t a1)
{
  unint64_t v2 = sub_19EE72844();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.value(from:)(void *a1)
{
  return sub_19EE7262C(a1, &qword_1E946F7A8, (void (*)(void))sub_19EE72844) & 1;
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.encode(_:to:)(uint64_t a1, void *a2)
{
  return sub_19F0A45F4(a1, a2, &qword_1E9473F20, (void (*)(void))sub_19EE72844);
}

uint64_t sub_19F0A4438@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_19EE7262C(a1, &qword_1E946F7A8, (void (*)(void))sub_19EE72844);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_19F0A448C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_19F0A47C0(a1, a2, a3, a4, &qword_1E9473F20, (void (*)(void))sub_19EE72844);
}

uint64_t static AppleServicesPropertyScope.IsAnonymityEnabledProperty.defaultValue.getter()
{
  return 0;
}

uint64_t sub_19F0A44D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F0A4BC0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19F0A4500(uint64_t a1)
{
  unint64_t v2 = sub_19EE7295C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F0A453C(uint64_t a1)
{
  unint64_t v2 = sub_19EE7295C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static AppleServicesPropertyScope.IsAnonymityEnabledProperty.value(from:)(void *a1)
{
  return sub_19EE7262C(a1, &qword_1E946F6C8, (void (*)(void))sub_19EE7295C) & 1;
}

uint64_t static AppleServicesPropertyScope.IsAnonymityEnabledProperty.encode(_:to:)(uint64_t a1, void *a2)
{
  return sub_19F0A45F4(a1, a2, &qword_1E9473F28, (void (*)(void))sub_19EE7295C);
}

uint64_t sub_19F0A45F4(uint64_t a1, void *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  a4();
  sub_19F1DD8FC();
  sub_19F1DD27C();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_19F0A4730@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_19EE7262C(a1, &qword_1E946F6C8, (void (*)(void))sub_19EE7295C);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_19F0A4784(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_19F0A47C0(a1, a2, a3, a4, &qword_1E9473F28, (void (*)(void))sub_19EE7295C);
}

uint64_t sub_19F0A47C0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(void))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  a6();
  sub_19F1DD8FC();
  sub_19F1DD27C();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static AppleServicesPropertyScope.SigningStyleProperty.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_19F0A490C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x53676E696E676973 && a2 == 0xEC000000656C7974)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_19F1DD44C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19F0A49BC(uint64_t a1)
{
  unint64_t v2 = sub_19EE78874();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F0A49F8(uint64_t a1)
{
  unint64_t v2 = sub_19EE78874();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static AppleServicesPropertyScope.SigningStyleProperty.encode(_:to:)(char *a1, void *a2)
{
  return sub_19F0A4E68(a1, a2);
}

uint64_t sub_19F0A4A4C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return static AppleServicesPropertyScope.SigningStyleProperty.value(from:)(a1, a2);
}

uint64_t sub_19F0A4A64(char *a1, void *a2)
{
  return sub_19F0A4E68(a1, a2);
}

uint64_t sub_19F0A4A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F0A4DE0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19F0A4AAC(uint64_t a1)
{
  unint64_t v2 = sub_19EE785B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F0A4AE8(uint64_t a1)
{
  unint64_t v2 = sub_19EE785B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_19F0A4B24(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_19F0A4B2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_19EE783C8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_19F0A4B58(uint64_t *a1, void *a2)
{
  return sub_19F0A51CC(*a1, a1[1], a2);
}

void NetRequestPropertyLookup.subscript.getter()
{
}

{
  sub_19F1DCFCC();
  __break(1u);
}

uint64_t sub_19F0A4BC0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000019F2709E0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_19F0A4C48(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x800000019F270990)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_19F0A4CD0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000022 && a2 == 0x800000019F270960)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_19F0A4D58(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000002ALL && a2 == 0x800000019F2709B0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_19F0A4DE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000019F270A00)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_19F0A4E68(char *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473F60);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_19EE78874();
  sub_19F1DD8FC();
  v10[15] = v8;
  sub_19F0A5354();
  sub_19F1DD2AC();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty()
{
  return &type metadata for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty()
{
  return &type metadata for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty()
{
  return &type metadata for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.IsAnonymityEnabledProperty()
{
  return &type metadata for AppleServicesPropertyScope.IsAnonymityEnabledProperty;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.SigningStyleProperty()
{
  return &type metadata for AppleServicesPropertyScope.SigningStyleProperty;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.AMSGrandSlamTokenID()
{
  return &type metadata for AppleServicesPropertyScope.AMSGrandSlamTokenID;
}

unint64_t sub_19F0A5018()
{
  unint64_t result = qword_1E9473F30;
  if (!qword_1E9473F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473F30);
  }
  return result;
}

unint64_t sub_19F0A5070()
{
  unint64_t result = qword_1E9473F38;
  if (!qword_1E9473F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473F38);
  }
  return result;
}

unint64_t sub_19F0A50C8()
{
  unint64_t result = qword_1E9473F40;
  if (!qword_1E9473F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473F40);
  }
  return result;
}

unint64_t sub_19F0A5120()
{
  unint64_t result = qword_1E9473F48;
  if (!qword_1E9473F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473F48);
  }
  return result;
}

unint64_t sub_19F0A5178()
{
  unint64_t result = qword_1E9473F50;
  if (!qword_1E9473F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473F50);
  }
  return result;
}

uint64_t sub_19F0A51CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473F58);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_19EE785B8();
  sub_19F1DD8FC();
  v11[0] = a1;
  v11[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392310);
  sub_19EE78558((unint64_t *)&qword_1E94722F8, &qword_1EB392310);
  sub_19F1DD2AC();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_19F0A5354()
{
  unint64_t result = qword_1E9473F68;
  if (!qword_1E9473F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473F68);
  }
  return result;
}

unsigned char *_s9JetEngine26AppleServicesPropertyScopeV20SigningStylePropertyO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F0A5444);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_19F0A5470()
{
  unint64_t result = qword_1E9473F70;
  if (!qword_1E9473F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473F70);
  }
  return result;
}

uint64_t LocalizedStringsTableCollection.fetchLanguages()()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x1F4188298](sub_19F0A54EC, 0, 0);
}

uint64_t sub_19F0A54EC()
{
  unint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_19F0A5574(v1);
  swift_bridgeObjectRelease();
  int v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_19F0A5574(unint64_t a1)
{
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_19F1DD03C())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x19F3C7060](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v5 = v4;
      uint64_t v6 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_localizations);
      uint64_t v8 = sub_19F1DC16C();

      sub_19EF5D6DC(v8);
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v10;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t LocalizedStringsTableCollection.fetchStrings(withLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *v3;
  v4[5] = a3;
  v4[6] = v5;
  return MEMORY[0x1F4188298](sub_19EE5730C, 0, 0);
}

uint64_t sub_19F0A56E8()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x1F4188298](sub_19F0A54EC, 0, 0);
}

uint64_t sub_19F0A570C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *v3;
  v4[5] = a3;
  v4[6] = v5;
  return MEMORY[0x1F4188298](sub_19EE5730C, 0, 0);
}

ValueMetadata *type metadata accessor for LocalizedStringsTableCollection.Container()
{
  return &type metadata for LocalizedStringsTableCollection.Container;
}

uint64_t static Models.DeepLinkIntent.kind.getter()
{
  return 0x6E694C7065654424;
}

uint64_t Models.DeepLinkIntent.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  sub_19F0A585C(a1);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
}

uint64_t sub_19F0A585C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DeepLink();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Models.DeepLinkIntent.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t Models.DeepLinkIntent.url.setter(uint64_t a1)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*Models.DeepLinkIntent.url.modify())()
{
  return nullsub_1;
}

unint64_t Models.DeepLinkIntent.jsRepresentation(in:)@<X0>(unint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CD80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = 7107189;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(void *)(inited + 48) = sub_19F1DB21C();
  *(void *)(inited + 56) = v3;
  unint64_t v4 = sub_19EE8F204(inited);
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
  unint64_t result = sub_19F0A5A44();
  a1[4] = result;
  *a1 = v4;
  return result;
}

unint64_t sub_19F0A5A44()
{
  unint64_t result = qword_1E9473F98;
  if (!qword_1E9473F98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473F98);
  }
  return result;
}

_UNKNOWN **sub_19F0A5AB0()
{
  return &protocol witness table for Models.DeepLinkDestination;
}

uint64_t sub_19F0A5ABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB34C();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void sub_19F0A5B24(void *a1@<X8>)
{
  *a1 = 0x6E694C7065654424;
  a1[1] = 0xEF746E65746E496BLL;
}

unint64_t sub_19F0A5B4C@<X0>(unint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CD80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = 7107189;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(void *)(inited + 48) = sub_19F1DB21C();
  *(void *)(inited + 56) = v3;
  unint64_t v4 = sub_19EE8F204(inited);
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
  unint64_t result = sub_19F0A5A44();
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t _s14DeepLinkIntentVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t _s14DeepLinkIntentVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s14DeepLinkIntentVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s14DeepLinkIntentVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s14DeepLinkIntentVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s14DeepLinkIntentVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F0A5DF8);
}

uint64_t sub_19F0A5DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s14DeepLinkIntentVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F0A5E78);
}

uint64_t sub_19F0A5E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for Models.DeepLinkIntent()
{
  uint64_t result = qword_1E9473FA0;
  if (!qword_1E9473FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_19F0A5F34()
{
  uint64_t result = sub_19F1DB34C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t JSONObject.init(deserializing:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_19F1DABEC();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v30 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_19F1DABFC();
  uint64_t v31 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_19F1DBDEC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DBDCC();
  uint64_t v10 = sub_19F1DBD8C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  if (v12 >> 60 == 15)
  {
    sub_19F1DABDC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    *(void *)(inited + 32) = sub_19F1DBD7C();
    *(void *)(inited + 40) = v15;
    sub_19F1DBDCC();
    uint64_t v16 = sub_19F1DBDDC();
    v13(v9, v6);
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedInteger_, v16);
    *(void *)(inited + 72) = sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
    *(void *)(inited + 48) = v17;
    sub_19EEBF898(inited);
    sub_19F0A671C();
    sub_19F1DB17C();
    sub_19F1DAB9C();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v3);
    return swift_willThrow();
  }
  if (qword_1E946FBB8 != -1) {
    swift_once();
  }
  if (sub_19EE7C7FC(qword_1E9498B08, unk_1E9498B10, v10, v12))
  {
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9E8]), sel_init);
    unint64_t v20 = &qword_1EB392CF0;
LABEL_11:
    uint64_t v34 = sub_19EEBDC10(0, v20);
    *(void *)&long long v33 = v19;
LABEL_12:
    sub_19EEBDC00(&v33, v35);
    unint64_t v21 = v29;
    v29[3] = (uint64_t)&type metadata for FoundationValue;
    void v21[4] = (uint64_t)&off_1EF13D8F8;
    uint64_t v22 = swift_allocObject();
    *unint64_t v21 = v22;
    sub_19EEBDBA4((uint64_t)v35, v22 + 16);
    sub_19EED5BFC(v10, v12);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
  }
  if (qword_1E946FBD0 != -1) {
    swift_once();
  }
  if (sub_19EE7C7FC(qword_1E9498B18, unk_1E9498B20, v10, v12))
  {
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C978]), sel_init);
    unint64_t v20 = (unint64_t *)&qword_1EB391C00;
    goto LABEL_11;
  }
  uint64_t v23 = self;
  uint64_t v24 = (void *)sub_19F1DB3EC();
  id v32 = 0;
  id v25 = objc_msgSend(v23, sel_JSONObjectWithData_options_error_, v24, 4, &v32);

  id v26 = v32;
  if (v25)
  {
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  uint64_t v27 = v26;
  sub_19F1DB19C();

  swift_willThrow();
  return sub_19EED5BFC(v10, v12);
}

uint64_t JSONObject.uint.getter()
{
  sub_19EEBF040(v0, (uint64_t)v4);
  uint64_t v1 = v5;
  if (v5)
  {
    uint64_t v2 = v6;
    __swift_project_boxed_opaque_existential_1(v4, v5);
    uint64_t v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    sub_19EEBD664((uint64_t)v4, (uint64_t *)&unk_1E946FD20);
  }
  return v1;
}

uint64_t JSONObject.uint64.getter()
{
  sub_19EEBF040(v0, (uint64_t)v4);
  uint64_t v1 = v5;
  if (v5)
  {
    uint64_t v2 = v6;
    __swift_project_boxed_opaque_existential_1(v4, v5);
    uint64_t v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    sub_19EEBD664((uint64_t)v4, (uint64_t *)&unk_1E946FD20);
  }
  return v1;
}

unint64_t JSONObject.float.getter()
{
  sub_19EEBF040(v0, (uint64_t)v8);
  uint64_t v1 = v9;
  if (v9)
  {
    uint64_t v2 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    unint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72))(v1, v2);
    unsigned int v4 = v3;
    uint64_t v5 = HIDWORD(v3) & 1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
    uint64_t v6 = v4;
  }
  else
  {
    sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1E946FD20);
    uint64_t v6 = 0;
    LOBYTE(v5) = 1;
  }
  return v6 | ((unint64_t)v5 << 32);
}

uint64_t sub_19F0A66E4()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_19F0A671C()
{
  unint64_t result = qword_1E9472FE0;
  if (!qword_1E9472FE0)
  {
    sub_19F1DABFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9472FE0);
  }
  return result;
}

uint64_t sub_19F0A6774()
{
  return 0x7375506B63617473;
}

uint64_t FlowActionModel.presentation.getter()
{
  return 0x7375506B63617473;
}

uint64_t FlowActionPresentation.rawValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t static FlowActionPresentation.sheetPopover.getter()
{
  return 0x706F507465656873;
}

uint64_t static FlowActionPresentation.tabReplaceAll.getter()
{
  return 0x616C706552626174;
}

uint64_t static FlowActionPresentation.tabSelect.getter()
{
  return 0x63656C6553626174;
}

unint64_t static FlowActionPresentation.tabSelectReplaceAll.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_19F0A6860()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F0A68C0()
{
  return sub_19F1DC0EC();
}

uint64_t FlowActionStackDestinationNavigation<>.shouldStackPush<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v12 = *(void (**)(uint64_t, uint64_t, double))(a6 + 24);
  v12(a3, a6, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E620);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    void v18[3] = a2;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v18);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, v6, a2);
    void v17[3] = AssociatedTypeWitness;
    __swift_allocate_boxed_opaque_existential_2Tm(v17);
    ((void (*)(uint64_t, uint64_t))v12)(a3, a6);
    unsigned __int8 v14 = _isStructurallyEqual(_:to:with:at:)(v18, v17, 3uLL, 0);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    char v15 = v14 ^ 1;
  }
  else
  {
    char v15 = 1;
  }
  return v15 & 1;
}

unint64_t sub_19F0A6AAC()
{
  unint64_t result = qword_1E9473FB0;
  if (!qword_1E9473FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473FB0);
  }
  return result;
}

uint64_t dispatch thunk of FlowActionModel.destination.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FlowActionModel.presentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

ValueMetadata *type metadata accessor for FlowActionPresentation()
{
  return &type metadata for FlowActionPresentation;
}

uint64_t dispatch thunk of FlowActionStackDestinationNavigation.shouldStackPush<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

unint64_t sub_19F0A6B4C()
{
  unint64_t result = qword_1E9473FB8;
  if (!qword_1E9473FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473FB8);
  }
  return result;
}

uint64_t SilverBulletJetPackAssetFetcher.init(bag:urlSessionConfiguration:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  swift_unknownObjectRetain_n();
  id v7 = a2;
  uint64_t v8 = (void *)sub_19F1DBD4C();
  id v9 = objc_msgSend(v6, sel_initWithContainerID_bag_, v8, a1);

  uint64_t result = swift_unknownObjectRelease();
  *a3 = a1;
  a3[1] = (uint64_t)v7;
  a3[2] = a1;
  a3[3] = (uint64_t)v9;
  return result;
}

uint64_t sub_19F0A6C50()
{
  uint64_t result = sub_19F1DBD4C();
  qword_1E9498B78 = result;
  return result;
}

uint64_t sub_19F0A6C88()
{
  uint64_t result = sub_19F1DBD4C();
  qword_1E9498B80 = result;
  return result;
}

__n128 SilverBulletJetPackAssetFetcher.init(bag:urlAssetFetcher:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3 = a2[1].n128_u64[0];
  *(void *)a3 = a1;
  __n128 result = *a2;
  *(__n128 *)(a3 + 8) = *a2;
  *(void *)(a3 + 24) = v3;
  return result;
}

uint64_t SilverBulletJetPackAssetFetcher._fetch(_:candidate:)(uint64_t a1, long long *a2, uint64_t a3)
{
  *(void *)(v4 + 112) = a1;
  *(void *)(v4 + 120) = a3;
  *(void *)(v4 + 128) = type metadata accessor for URLJetPackAssetRequest();
  *(void *)(v4 + 136) = swift_task_alloc();
  uint64_t v6 = sub_19F1DB34C();
  *(void *)(v4 + 144) = v6;
  *(void *)(v4 + 152) = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  long long v8 = *a2;
  uint64_t v9 = *((void *)a2 + 2);
  uint64_t v10 = *((void *)a2 + 3);
  char v11 = *((unsigned char *)a2 + 32);
  *(unsigned char *)(v4 + 49) = v11;
  uint64_t v12 = *v3;
  uint64_t v13 = v3[1];
  *(void *)(v4 + 160) = v7;
  *(void *)(v4 + 168) = v13;
  uint64_t v14 = v3[2];
  uint64_t v15 = v3[3];
  *(void *)(v4 + 56) = v12;
  *(void *)(v4 + 176) = v14;
  *(void *)(v4 + 184) = v15;
  *(void *)(v4 + 64) = v13;
  *(void *)(v4 + 72) = v14;
  *(_OWORD *)(v4 + 16) = v8;
  *(void *)(v4 + 80) = v15;
  *(void *)(v4 + 32) = v9;
  *(void *)(v4 + 40) = v10;
  *(unsigned char *)(v4 + 48) = v11;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v4 + 192) = v16;
  *uint64_t v16 = v4;
  v16[1] = sub_19F0A6E4C;
  return sub_19F0A7304(v7, (uint64_t *)(v4 + 16));
}

uint64_t sub_19F0A6E4C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F0A71F0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 184);
    char v4 = *(unsigned char *)(v2 + 49);
    uint64_t v5 = *(void *)(v2 + 136);
    uint64_t v6 = *(void *)(v2 + 128);
    long long v12 = *(_OWORD *)(v2 + 168);
    (*(void (**)(uint64_t, void, void))(*(void *)(v2 + 152) + 16))(v5, *(void *)(v2 + 160), *(void *)(v2 + 144));
    *(unsigned char *)(v5 + *(int *)(v6 + 20)) = v4;
    *(_OWORD *)(v2 + 88) = v12;
    *(void *)(v2 + 104) = v3;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v2 + 208) = v7;
    *uint64_t v7 = v2;
    v7[1] = sub_19F0A7024;
    uint64_t v8 = *(void *)(v2 + 136);
    uint64_t v9 = *(void *)(v2 + 112);
    uint64_t v10 = *(void *)(v2 + 120);
    return URLJetPackAssetFetcher._fetch(_:candidate:)(v9, v8, v10);
  }
}

uint64_t sub_19F0A7024(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_19F0A7264;
  }
  else
  {
    *(unsigned char *)(v4 + 50) = a1 & 1;
    uint64_t v5 = sub_19F0A7150;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_19F0A7150()
{
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  sub_19EE7A4C4(*(void *)(v0 + 136));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 50);
  return v4(v5);
}

uint64_t sub_19F0A71F0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_19F0A7264()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  sub_19EE7A4C4(v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_19F0A7304(uint64_t a1, uint64_t *a2)
{
  *(void *)(v3 + 248) = a1;
  uint64_t v5 = sub_19F1DB20C();
  *(void *)(v3 + 256) = v5;
  *(void *)(v3 + 264) = *(void *)(v5 - 8);
  *(void *)(v3 + 272) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  *(void *)(v3 + 280) = swift_task_alloc();
  *(void *)(v3 + 288) = swift_task_alloc();
  uint64_t v6 = sub_19F1DB34C();
  *(void *)(v3 + 296) = v6;
  *(void *)(v3 + 304) = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a2;
  *(void *)(v3 + 312) = v7;
  *(void *)(v3 + 320) = v8;
  *(_OWORD *)(v3 + 328) = *(_OWORD *)(a2 + 1);
  *(void *)(v3 + 344) = a2[3];
  long long v9 = v2[1];
  *(_OWORD *)(v3 + 352) = *v2;
  *(_OWORD *)(v3 + 368) = v9;
  return MEMORY[0x1F4188298](sub_19F0A748C, 0, 0);
}

uint64_t sub_19F0A748C()
{
  uint64_t v1 = *(void **)(v0 + 352);
  uint64_t v2 = qword_1E94701B0;
  swift_unknownObjectRetain();
  if (v2 != -1)
  {
    swift_once();
    uint64_t v1 = *(void **)(v0 + 352);
  }
  id v3 = objc_msgSend(v1, sel_URLForKey_, qword_1E9498B80);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391750);
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v3;
  inited[3] = sub_19EEA3BF0;
  inited[4] = 0;
  *(void *)(v0 + 384) = sub_19EE4FC04();

  return MEMORY[0x1F4188298](sub_19F0A75A0, 0, 0);
}

uint64_t sub_19F0A75A0()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[35];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_19F0A7664;
  v0[10] = swift_continuation_init();
  uint64_t v3 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v3 + 72) = 1;
  sub_19EE3F9A8(v3);
  sub_19EEBD664(v3, &qword_1EB390F10);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0A7664()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 392) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F0A7964;
  }
  else
  {
    sub_19F0A8578(*(void *)(v1 + 280), *(void *)(v1 + 288));
    swift_release();
    uint64_t v3 = sub_19F0A7794;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F0A7794()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 288);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_19EEBD664(v3, (uint64_t *)&unk_1EB392E50);
    sub_19F0A85E0();
    swift_allocError();
    *uint64_t v4 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 320);
    uint64_t v7 = *(void *)(v0 + 328);
    long long v10 = *(_OWORD *)(v0 + 368);
    long long v11 = *(_OWORD *)(v0 + 352);
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 312), v3, v1);
    *(_OWORD *)(v0 + 200) = v11;
    *(_OWORD *)(v0 + 216) = v10;
    *(void *)(v0 + 232) = v8;
    *(void *)(v0 + 240) = v7;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 400) = v9;
    *(void *)uint64_t v9 = v0;
    *(void *)(v9 + 8) = sub_19F0A79F8;
    *(_OWORD *)(v9 + 304) = *(_OWORD *)(v0 + 232);
    *(void *)(v9 + 320) = *(void *)(v0 + 200);
    return MEMORY[0x1F4188298](sub_19F0A7DDC, 0, 0);
  }
}

uint64_t sub_19F0A7964()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0A79F8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 408) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_19F0A7CB4;
  }
  else
  {
    *(void *)(v6 + 416) = a2;
    *(void *)(v6 + 424) = a1;
    uint64_t v7 = sub_19F0A7B2C;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_19F0A7B2C()
{
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[42];
  uint64_t v3 = v0[43];
  uint64_t v5 = v0[38];
  uint64_t v4 = v0[39];
  uint64_t v13 = v0[37];
  uint64_t v6 = v0[34];
  uint64_t v8 = v0[32];
  uint64_t v7 = v0[33];
  uint64_t v12 = v0[53];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19F24EB80;
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v1;
  *(void *)(v9 + 48) = v2;
  *(void *)(v9 + 56) = v3;
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, *MEMORY[0x1E4F276C0], v8);
  sub_19EEC4910();
  swift_bridgeObjectRetain();
  sub_19F1DB31C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_19F0A7CB4()
{
  (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_19F0A7D5C()
{
  unint64_t result = qword_1E9473FD0;
  if (!qword_1E9473FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473FD0);
  }
  return result;
}

uint64_t sub_19F0A7DB0(void *a1)
{
  uint64_t v3 = a1[1];
  v2[38] = *a1;
  v2[39] = v3;
  v2[40] = *v1;
  return MEMORY[0x1F4188298](sub_19F0A7DDC, 0, 0);
}

uint64_t sub_19F0A7DDC()
{
  uint64_t v1 = *(void **)(v0 + 320);
  uint64_t v2 = qword_1E94701A8;
  swift_unknownObjectRetain();
  if (v2 != -1)
  {
    swift_once();
    uint64_t v1 = *(void **)(v0 + 320);
  }
  id v3 = objc_msgSend(v1, sel_dictionaryForKey_, qword_1E9498B78);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391D10);
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v3;
  inited[3] = sub_19EEA4604;
  inited[4] = 0;
  *(void *)(v0 + 328) = sub_19F151D44();

  return MEMORY[0x1F4188298](sub_19F0A7EF0, 0, 0);
}

uint64_t sub_19F0A7EF0()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 36;
  v0[3] = sub_19F0A7FB4;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EE8DBF0(v2);
  sub_19EEBD664(v2, &qword_1E946FB90);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0A7FB4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 336) = v2;
  if (v2)
  {
    swift_willThrow();
    id v3 = sub_19F0A82D8;
  }
  else
  {
    *(void *)(v1 + 344) = *(void *)(v1 + 288);
    swift_release();
    id v3 = sub_19F0A80E0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F0A80E0()
{
  uint64_t v1 = (_OWORD *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 344);
  if (!v2)
  {
    _OWORD *v1 = 0u;
    *(_OWORD *)(v0 + 256) = 0u;
LABEL_14:
    sub_19EEBD664(v0 + 240, &qword_1EB393260);
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)(v0 + 312);
  *(void *)(v0 + 272) = *(void *)(v0 + 304);
  *(void *)(v0 + 280) = v3;
  swift_bridgeObjectRetain();
  sub_19F1DCC8C();
  if (*(void *)(v2 + 16) && (unint64_t v4 = sub_19EE77500(v0 + 200), (v5 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v2 + 56) + 32 * v4, v0 + 240);
  }
  else
  {
    _OWORD *v1 = 0u;
    *(_OWORD *)(v0 + 256) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_19EE7760C(v0 + 200);
  if (!*(void *)(v0 + 264)) {
    goto LABEL_14;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
  if (swift_dynamicCast())
  {
    uint64_t v6 = *(void *)(v0 + 296);
    if (*(void *)(v6 + 16))
    {
      unint64_t v7 = sub_19EEBD400(0x65756C6176, 0xE500000000000000);
      if (v8)
      {
        uint64_t v9 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v7);
        uint64_t v10 = *v9;
        uint64_t v11 = v9[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
        return v12(v10, v11);
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_15:
  sub_19F0A85E0();
  swift_allocError();
  *uint64_t v14 = 1;
  swift_willThrow();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_19F0A82D8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0A833C(uint64_t a1, long long *a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_19EFA4054;
  return SilverBulletJetPackAssetFetcher._fetch(_:candidate:)(a1, a2, a3);
}

void destroy for SilverBulletJetPackAssetFetcher(uint64_t a1)
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for SilverBulletJetPackAssetFetcher(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_unknownObjectRetain();
  id v5 = v3;
  swift_unknownObjectRetain();
  id v6 = v4;
  return a1;
}

void *assignWithCopy for SilverBulletJetPackAssetFetcher(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  unint64_t v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  unint64_t v7 = (void *)a2[3];
  char v8 = (void *)a1[3];
  a1[3] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for SilverBulletJetPackAssetFetcher(uint64_t a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  unint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  swift_unknownObjectRelease();
  id v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for SilverBulletJetPackAssetFetcher()
{
  return &type metadata for SilverBulletJetPackAssetFetcher;
}

uint64_t sub_19F0A8578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_19F0A85E0()
{
  unint64_t result = qword_1E9473FE0;
  if (!qword_1E9473FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9473FE0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SilverBulletJetPackAssetFetcherError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F0A8700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SilverBulletJetPackAssetFetcherError()
{
  return &type metadata for SilverBulletJetPackAssetFetcherError;
}

unint64_t sub_19F0A873C()
{
  unint64_t result = qword_1E9473FF0;
  if (!qword_1E9473FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473FF0);
  }
  return result;
}

uint64_t static PipelinePhase<>.decodeString(with:)@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v4 = sub_19F1DBDEC();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_19F06FE3C;
  *(void *)(result + 24) = v9;
  *a2 = sub_19F0A8E54;
  a2[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t sub_19F0A88E4(long long *a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v4);
  long long v15 = *a1;
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  sub_19F07C50C();
  uint64_t v7 = sub_19F1DBDAC();
  uint64_t v9 = v8;
  if (v8)
  {
    uint64_t v10 = v7;
    char v11 = 1;
  }
  else
  {
    sub_19F0A92E0();
    uint64_t v10 = swift_allocError();
    char v11 = 2;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946C7B8);
  uint64_t v12 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  *(void *)(v12 + 16) = v13;
  *(void *)(v12 + 24) = v10;
  *(void *)(v12 + 32) = v9;
  *(unsigned char *)(v12 + 40) = v11;
  return v12;
}

uint64_t sub_19F0A8A4C()
{
  uint64_t v1 = sub_19F1DBDEC();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t static PipelinePhase<>.convertToJSONObject()@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_19F0A8B38;
  *(void *)(result + 24) = 0;
  *a1 = sub_19F0A8ED4;
  a1[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t sub_19F0A8B38@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  sub_19EEA0784(*a1, v4);
  if (qword_1E946FBB8 != -1) {
    swift_once();
  }
  if (sub_19EE7C7FC(qword_1E9498B08, unk_1E9498B10, v3, v4))
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9E8]), sel_init);
    uint64_t v6 = &qword_1EB392CF0;
LABEL_9:
    uint64_t v16 = sub_19EEBDC10(0, v6);
    *(void *)&long long v15 = v5;
LABEL_10:
    sub_19EEBDC00(&v15, v17);
    a2[3] = (uint64_t)&type metadata for FoundationValue;
    a2[4] = (uint64_t)&off_1EF13D8F8;
    uint64_t v7 = swift_allocObject();
    *a2 = v7;
    sub_19EEBDBA4((uint64_t)v17, v7 + 16);
    sub_19EEA072C(v3, v4);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
  if (qword_1E946FBD0 != -1) {
    swift_once();
  }
  if (sub_19EE7C7FC(qword_1E9498B18, unk_1E9498B20, v3, v4))
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C978]), sel_init);
    uint64_t v6 = (unint64_t *)&qword_1EB391C00;
    goto LABEL_9;
  }
  uint64_t v9 = self;
  uint64_t v10 = (void *)sub_19F1DB3EC();
  id v14 = 0;
  id v11 = objc_msgSend(v9, sel_JSONObjectWithData_options_error_, v10, 4, &v14);

  id v12 = v14;
  if (v11)
  {
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  uint64_t v13 = v12;
  sub_19F1DB19C();

  swift_willThrow();
  return sub_19EEA072C(v3, v4);
}

uint64_t static DataDecodingError.== infix(_:_:)()
{
  return 1;
}

uint64_t DataDecodingError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t DataDecodingError.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F0A8E1C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0A8E54(uint64_t a1)
{
  return sub_19F06F668(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19F0A8E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(**(void **)a1 + 88))();
  uint64_t v5 = sub_19F0A90A4(a2, a3);
  swift_release();
  return v5;
}

uint64_t sub_19F0A8ED4(uint64_t a1)
{
  return sub_19F0A8E5C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_19F0A8EE0()
{
  unint64_t result = qword_1E9473FF8;
  if (!qword_1E9473FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9473FF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DataDecodingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F0A8FD0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataDecodingError()
{
  return &type metadata for DataDecodingError;
}

uint64_t sub_19F0A9008(long long *a1, void (*a2)(void *__return_ptr, long long *))
{
  long long v4 = *a1;
  a2(v3, &v4);
  sub_19F1AD1AC((uint64_t)v3);
  return sub_19EEC3418((uint64_t)v3);
}

uint64_t sub_19F0A90A4(uint64_t a1, uint64_t a2)
{
  id v11 = &type metadata for SyncTaskScheduler;
  id v12 = &protocol witness table for SyncTaskScheduler;
  v8[0] = MEMORY[0x1E4FBC860];
  void v9[8] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472C08);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(void *)(v4 + 16) = v5;
  sub_19F02C988((uint64_t)v8, v4 + 24);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a1;
  void v6[3] = a2;
  v6[4] = v4;
  v8[0] = sub_19F0A9234;
  v8[1] = v6;
  void v8[2] = sub_19F0A9240;
  void v8[3] = v4;
  sub_19EEC4154((uint64_t)v10, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF56720((uint64_t)v8);
  sub_19F0A9248((uint64_t)v8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v4;
}

uint64_t sub_19F0A91F4()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0A9234(long long *a1)
{
  return sub_19F0A9008(a1, *(void (**)(void *__return_ptr, long long *))(v1 + 16));
}

void sub_19F0A9240(void *a1)
{
}

uint64_t sub_19F0A9248(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473830);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19F0A92A8()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_19F0A92E0()
{
  unint64_t result = qword_1E9474000;
  if (!qword_1E9474000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474000);
  }
  return result;
}

uint64_t CookieProvider.jsRepresentation(in:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_19EEC4154(v2, (uint64_t)v9);
  uint64_t v4 = (objc_class *)type metadata accessor for JSCookieProviderObject();
  id v5 = objc_allocWithZone(v4);
  sub_19EEC4154((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider);
  v8.receiver = v5;
  v8.super_class = v4;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  a1[3] = v4;
  a1[4] = &off_1EF143208;
  *a1 = v6;
  return result;
}

uint64_t sub_19F0A93D0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_19EEC4154(v2, (uint64_t)v9);
  uint64_t v4 = (objc_class *)type metadata accessor for JSCookieProviderObject();
  id v5 = objc_allocWithZone(v4);
  sub_19EEC4154((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider);
  v8.receiver = v5;
  v8.super_class = v4;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  a1[3] = v4;
  a1[4] = &off_1EF143208;
  *a1 = v6;
  return result;
}

char *sub_19F0A9468(void *a1, void *a2, id a3, uint64_t a4)
{
  uint64_t v45 = a4;
  uint64_t v49 = a1;
  uint64_t v7 = type metadata accessor for JSCookie();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v44 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DB34C();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a2, sel_isString, v14)) {
    goto LABEL_5;
  }
  id v17 = objc_msgSend(a2, sel_toString);
  if (!v17) {
    goto LABEL_5;
  }
  uint64_t v18 = v17;
  unint64_t v42 = v16;
  sub_19F1DBD7C();
  uint64_t v43 = v13;

  uint64_t v19 = v43;
  sub_19F1DB2FC();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v12) == 1)
  {
    sub_19EE6293C((uint64_t)v11);
LABEL_5:
    sub_19EF600C0();
    swift_allocError();
    a3 = (id)v20;
    JSError.init(badValue:expected:)(a2, v20);
    swift_willThrow();
    return (char *)a3;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v42, v11, v12);
  if (!objc_msgSend(a3, sel_isString)
    || (id v22 = objc_msgSend(a3, sel_toString)) == 0)
  {
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(a3, v39);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v42, v12);
    return (char *)a3;
  }
  uint64_t v23 = v22;
  uint64_t v24 = sub_19F1DBD7C();
  uint64_t v26 = v25;

  uint64_t v27 = *(void *)(v45 + OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider + 24);
  uint64_t v28 = *(void *)(v45 + OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v45 + OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider), v27);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v46, v27, v28);
  uint64_t v29 = (void *)v46[0];
  if (v46[0])
  {
    uint64_t v30 = (void *)sub_19F1DB25C();
    id v31 = objc_msgSend(v29, sel_ams_cookiesForURL_, v30);

    sub_19F0A9C88();
    unint64_t v32 = sub_19F1DC16C();

    swift_bridgeObjectRetain();
    long long v33 = sub_19F0A9AE0(v32, v24, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v33)
    {
      id v34 = v33;
      uint64_t v35 = v44;
      sub_19F0BAD94(v34, v44);
      uint64_t v36 = v49;
      a3 = v35;
      sub_19F0BAFB8(v49, v46);
      if (v4)
      {

        sub_19F0A9CC8((uint64_t)v35);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v12);
        return (char *)a3;
      }
      uint64_t v37 = v47;
      uint64_t v38 = v48;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      a3 = (id)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v38 + 16))(v36, v37, v38);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);

      sub_19F0A9CC8((uint64_t)v35);
      uint64_t result = v42;
      uint64_t v40 = v43;
LABEL_17:
      (*(void (**)(char *, uint64_t))(v40 + 8))(result, v12);
      return (char *)a3;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  a3 = objc_msgSend(self, sel_valueWithNullInContext_, v49);
  uint64_t result = v42;
  uint64_t v40 = v43;
  if (a3) {
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void *sub_19F0A9AE0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_19F1DD03C();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v23 = v7;
      unint64_t v24 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v24)
        {
          id v10 = (id)MEMORY[0x19F3C7060](v4 - 4, v7);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v10 = *(id *)(v7 + 8 * v4);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        uint64_t v13 = v10;
        uint64_t v14 = a3;
        id v15 = objc_msgSend(v10, sel_name, v22);
        uint64_t v16 = sub_19F1DBD7C();
        uint64_t v18 = v17;

        a3 = v14;
        BOOL v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v20 = sub_19F1DD44C();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }

        ++v4;
        uint64_t v8 = v12;
        BOOL v19 = v11 == v12;
        unint64_t v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_19F0A9C88()
{
  unint64_t result = qword_1E946E570;
  if (!qword_1E946E570)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946E570);
  }
  return result;
}

uint64_t sub_19F0A9CC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JSCookie();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19F0A9D24(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000)) {
    return sub_19F1DCCDC();
  }
  if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
    sub_19F1DCE2C();
  }
  return archive_entry_set_pathname();
}

uint64_t sub_19F0A9DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a2;
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (archive_read_new())
  {
    if (archive_write_disk_new())
    {
      archive_write_disk_set_options();
      archive_read_support_format_all();
      uint64_t v10 = swift_slowAlloc();
      sub_19EEC4154(a1, (uint64_t)v25);
      uint64_t v26 = a3;
      uint64_t v27 = v10;
      uint64_t v22 = v10;
      archive_read_open();
      uint64_t v24 = 0;
      uint64_t next_header = archive_read_next_header();
      int v12 = next_header;
      if (sub_19F029E8C(next_header, (uint64_t)&unk_1EF142658))
      {
        if (v12 != 1)
        {
          unint64_t v21 = (void (**)(char *, uint64_t))(v7 + 8);
          while (1)
          {
            if (!v24 || !archive_entry_pathname())
            {
              sub_19F0E88F4(0xD000000000000030, 0x800000019F270D10);
              goto LABEL_16;
            }
            sub_19F1DBF1C();
            sub_19F1DB26C();
            swift_bridgeObjectRelease();
            char v15 = sub_19EE86290();
            if (v3) {
              break;
            }
            if ((v15 & 1) == 0)
            {
              sub_19F0AA328();
              swift_allocError();
              *char v20 = xmmword_19F25B650;
              swift_willThrow();
              break;
            }
            uint64_t v16 = sub_19F1DB2DC();
            sub_19F0A9D24(v16, v17);
            swift_bridgeObjectRelease();
            if (dword_1EF142650 != archive_write_header())
            {
              sub_19F0AAC20();
              break;
            }
            sub_19F0AAD28();
            (*v21)(v9, v6);
            int v18 = archive_read_next_header();
            if (dword_1EF150138 != v18 && dword_1EF15013C != v18) {
              goto LABEL_15;
            }
            if (v18 == 1) {
              goto LABEL_16;
            }
          }
          (*v21)(v9, v6);
        }
      }
      else
      {
LABEL_15:
        sub_19F0AAC20();
        swift_bridgeObjectRelease();
      }
LABEL_16:
      sub_19EF77F68((uint64_t)v25);
      MEMORY[0x19F3C9470](v22, -1, -1);
      archive_write_close();
      archive_write_free();
    }
    else
    {
      sub_19F0AA328();
      swift_allocError();
      *BOOL v19 = 0;
      v19[1] = 0;
      swift_willThrow();
    }
    archive_read_close();
    return archive_read_free();
  }
  else
  {
    sub_19F0AA328();
    swift_allocError();
    *uint64_t v13 = 0;
    v13[1] = 0;
    return swift_willThrow();
  }
}

unint64_t PackageSerializationError.errorDescription.getter()
{
  unint64_t result = 0xD000000000000019;
  switch(*(void *)(v0 + 8))
  {
    case 0:
      unint64_t result = 0x206E776F6E6B6E55;
      break;
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 3:
      unint64_t result = 0xD00000000000003CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      unint64_t result = 0xD000000000000010;
      break;
  }
  return result;
}

unint64_t sub_19F0AA328()
{
  unint64_t result = qword_1E9474010;
  if (!qword_1E9474010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474010);
  }
  return result;
}

unint64_t destroy for PackageSerializationError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if ((v2 + 1) <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9JetEngine25PackageSerializationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for PackageSerializationError(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  unsigned int v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  unsigned int v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PackageSerializationError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if ((v5 + 1) > 1) {
    goto LABEL_9;
  }
  unint64_t v6 = *(void *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PackageSerializationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 5) {
    return (v3 - 4);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PackageSerializationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_19F0AA5E0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_19F0AA600(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    char *result = 0;
    result[1] = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PackageSerializationError()
{
  return &type metadata for PackageSerializationError;
}

uint64_t sub_19F0AA640(uint64_t a1, uint64_t a2, size_t a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (archive_write_new())
  {
    archive_write_add_filter_none();
    archive_write_set_format_ustar();
    sub_19EEC4154(a2, (uint64_t)v12);
    archive_write_open();
    if (archive_read_disk_new())
    {
      unint64_t v6 = getcwd(0, 0);
      if (v6)
      {
        uint64_t v7 = v6;
        sub_19F1DB2AC();
        if (!v3)
        {
          if (v11)
          {
            sub_19F0AAE94();
          }
          else
          {
            sub_19F0AA880(a3);
            if (chdir(v7)) {
              sub_19F0E88E4(0xD000000000000029, 0x800000019F270C40);
            }
          }
        }
        free(v7);
      }
      else
      {
        sub_19F0AAE94();
      }
      archive_read_close();
      archive_read_free();
    }
    else
    {
      sub_19F0AA328();
      swift_allocError();
      *uint64_t v10 = 0;
      v10[1] = 0;
      swift_willThrow();
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    archive_write_close();
    return archive_write_free();
  }
  else
  {
    sub_19F0AA328();
    swift_allocError();
    *uint64_t v8 = 0;
    v8[1] = 0;
    return swift_willThrow();
  }
}

uint64_t sub_19F0AA860()
{
  return 0;
}

uint64_t sub_19F0AA868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19F0AAFD8(a2, a3, a4);
}

uint64_t sub_19F0AA878()
{
  return 0;
}

uint64_t sub_19F0AA880(size_t a1)
{
  uint64_t disk_open = archive_read_disk_open();
  if ((sub_19F029E8C(disk_open, (uint64_t)&unk_1EF142750) & 1) == 0) {
    return sub_19F0AAC20();
  }
  uint64_t v3 = 0;
  unint64_t v4 = &unk_1EF1426D0;
  while (1)
  {
    int next_header = archive_read_next_header();
    if (next_header) {
      break;
    }
    swift_bridgeObjectRelease();
    if (v3 > 2) {
      goto LABEL_35;
    }
LABEL_9:
    int v8 = archive_write_header();
    if (v8 == -20 || v8 == 0)
    {
LABEL_14:
      if (!archive_entry_sourcepath())
      {
        sub_19F0AA328();
        swift_allocError();
        long long v18 = xmmword_19F25B660;
        goto LABEL_37;
      }
      int v10 = sub_19F1DB91C();
      if (v10 == -1) {
        return sub_19F0AAE94();
      }
      int v11 = v10;
      int v12 = (void *)swift_slowAlloc();
      ssize_t v13 = read(v11, v12, a1);
      if (v13 == -1)
      {
        if (MEMORY[0x19F3C5C20](-1, v14) != 21)
        {
LABEL_34:
          sub_19F0AAE94();
          MEMORY[0x19F3C9470](v12, -1, -1);
          return close(v11);
        }
      }
      else if (v13 >= 1)
      {
        archive_write_data();
        ssize_t v15 = read(v11, v12, a1);
        if (v15 == -1) {
          goto LABEL_34;
        }
        ssize_t v16 = v15;
        while (v16 >= 1)
        {
          archive_write_data();
          ssize_t v16 = read(v11, v12, a1);
          if (v16 == -1) {
            goto LABEL_34;
          }
        }
      }
      MEMORY[0x19F3C9470](v12, -1, -1);
      close(v11);
LABEL_30:
      uint64_t v3 = 0;
      unint64_t v4 = &unk_1EF142728;
      if (archive_read_disk_descend()) {
        return sub_19F0AAC20();
      }
    }
    else
    {
      if (dword_1EF142720 != v8) {
        return sub_19F0AAC20();
      }
      if (v8 != -10)
      {
        if (v8 == -30) {
          return sub_19F0AAC20();
        }
        if (v8 < -24) {
          goto LABEL_30;
        }
        goto LABEL_14;
      }
      ++v3;
      unint64_t v4 = &unk_1EF142728;
    }
  }
  int v6 = next_header;
  if (v4[9] == next_header)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (v6 == 1) {
      return result;
    }
    if (v3 > 2)
    {
LABEL_35:
      sub_19F0AA328();
      swift_allocError();
      long long v18 = xmmword_19F24DBD0;
LABEL_37:
      *uint64_t v17 = v18;
      return swift_willThrow();
    }
    goto LABEL_9;
  }
  sub_19F0AAC20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0AAB98()
{
  return 0;
}

uint64_t sub_19F0AABA0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_19F0AB174(a2, a3);
}

uint64_t sub_19F0AABAC()
{
  return 0;
}

uint64_t sub_19F0AABB4@<X0>(const char *a1@<X0>, _DWORD *a2@<X8>)
{
  if (a1)
  {
    uint64_t result = chdir(a1);
    *a2 = result;
  }
  else
  {
    sub_19F0AA328();
    swift_allocError();
    *unint64_t v4 = xmmword_19F25B660;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_19F0AAC20()
{
  if (archive_error_string())
  {
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    sub_19F1DBF1C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F0E88E4(0xD00000000000001BLL, 0x800000019F270C70);
    swift_bridgeObjectRelease();
    uint64_t v0 = sub_19F1DBF1C();
    uint64_t v2 = v1;
    sub_19F0AA328();
    swift_allocError();
    *uint64_t v3 = v0;
    v3[1] = v2;
  }
  else
  {
    sub_19F0AA328();
    swift_allocError();
    *unint64_t v4 = 0;
    v4[1] = 0;
  }
  return swift_willThrow();
}

uint64_t sub_19F0AAD28()
{
  int data_block = archive_read_data_block();
  if (!data_block)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    while ((archive_write_data_block() & 0x8000000000000000) == 0)
    {
      int v3 = archive_read_data_block();
      if (v3)
      {
        int v4 = v3;
        if (dword_1EF1426A4 != v3) {
          goto LABEL_14;
        }
        uint64_t result = swift_bridgeObjectRelease();
        if (v4 == 1) {
          return result;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    return sub_19F0AAC20();
  }
  int v1 = data_block;
  if (dword_1EF1426CC != data_block)
  {
LABEL_14:
    sub_19F0AAC20();
    return swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v1 != 1) {
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_19F0AAE94()
{
  uint64_t v0 = sub_19F1DAC1C();
  uint64_t v1 = *(void *)(v0 - 8);
  double v2 = MEMORY[0x1F4188790](v0);
  int v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x19F3C5C20](v2);
  uint64_t v5 = sub_19F1DB90C();
  if ((v5 & 0x100000000) != 0)
  {
    sub_19EF87378();
    swift_allocError();
    *int v6 = 1;
  }
  else
  {
    void v8[3] = v5;
    sub_19EFAA108(MEMORY[0x1E4FBC860]);
    sub_19F04BF14();
    sub_19F1DB17C();
    sub_19F1DAC0C();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
  return swift_willThrow();
}

uint64_t sub_19F0AAFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_5;
  }
  sub_19EEC4154(a1, (uint64_t)v8);
  sub_19EEBB420(v8, (uint64_t)v9);
  if (!a2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
LABEL_5:
    sub_19F0E88E4(0xD000000000000038, 0x800000019F270C90);
    return -1;
  }
  uint64_t v5 = v10;
  uint64_t v6 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, a3, v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  return a3;
}

uint64_t sub_19F0AB144()
{
  return archive_entry_set_pathname();
}

uint64_t sub_19F0AB174(uint64_t a1, void *a2)
{
  if (a1)
  {
    sub_19F0AB2D0(a1, (uint64_t)v8);
    uint64_t v3 = v9;
    uint64_t v4 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v5 = v12;
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 32))(v12, v11, v3, v4);
    if (a2) {
      *a2 = v5;
    }
    sub_19EF77F68((uint64_t)v8);
  }
  else
  {
    sub_19F0E88E4(0xD000000000000038, 0x800000019F270C90);
    return -1;
  }
  return v6;
}

uint64_t sub_19F0AB2D0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  return a2;
}

uint64_t initializeWithCopy for PackageSerialization.DeserializationClientData(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for PackageSerialization.DeserializationClientData(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

ValueMetadata *type metadata accessor for PackageSerialization.DeserializationClientData()
{
  return &type metadata for PackageSerialization.DeserializationClientData;
}

uint64_t sub_19F0AB434()
{
  uint64_t v1 = v0 + OBJC_IVAR___JEMediaActivity_type;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_19F0AB4C8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___JEMediaActivity_type);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_19F0AB514())()
{
  return j_j__swift_endAccess_0;
}

uint64_t sub_19F0AB5CC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_19F0AB680(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___JEMediaActivity_playlistItem);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_19F0AB6D4(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___JEMediaActivity_playlistItem);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_19F0AB740())()
{
  return j__swift_endAccess_0;
}

uint64_t sub_19F0AB7B4()
{
  return *(unsigned __int8 *)(*(void *)(v0 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 216);
}

id MediaActivity.__allocating_init(type:playlistItem:pipeline:topic:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (char *)objc_allocWithZone(v5);
  swift_getObjectType();
  return sub_19F0AD554(a1, a2, a3, a4, a5, v11);
}

id MediaActivity.init(type:playlistItem:pipeline:topic:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  swift_getObjectType();
  return sub_19F0AD554(a1, a2, a3, a4, a5, v5);
}

char *sub_19F0AB954(unint64_t a1)
{
  uint64_t v3 = (id *)(v1 + OBJC_IVAR___JEMediaActivity_playlistItem);
  swift_beginAccess();
  id v4 = *v3;
  id v5 = 0;
  if (objc_msgSend(*v3, sel_respondsToSelector_, sel_startOverallPosition)) {
    id v5 = objc_msgSend(v4, sel_startOverallPosition);
  }
  id v6 = *v3;
  if (objc_msgSend(v6, sel_respondsToSelector_, sel_startPosition))
  {
    uint64_t result = (char *)objc_msgSend(v6, sel_startPosition);
    if ((unint64_t)v5 <= a1)
    {
LABEL_19:
      unint64_t v27 = a1 - (void)v5;
      if (a1 < (unint64_t)v5)
      {
        __break(1u);
      }
      else
      {
        BOOL v28 = __CFADD__(v27, result);
        result += v27;
        if (!v28) {
          return result;
        }
      }
      __break(1u);
      return result;
    }
  }
  else if ((unint64_t)v5 <= a1)
  {
    uint64_t result = 0;
    goto LABEL_19;
  }
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  int v8 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
  id v10 = v8;
  uint64_t v37 = sub_19EEC3F3C(0, 98, 0, MEMORY[0x1E4FBC860]);
  v11._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
  v11._uint64_t object = (void *)0x800000019F270D90;
  LogMessage.StringInterpolation.appendLiteral(_:)(v11);
  uint64_t v12 = MEMORY[0x1E4FBC538];
  uint64_t v36 = MEMORY[0x1E4FBC538];
  v35[0] = a1;
  sub_19EEBCD00((uint64_t)v35, (uint64_t)v31);
  long long v29 = 0u;
  long long v30 = 0u;
  sub_19EEC3E70((uint64_t)v31, (uint64_t)&v29);
  char v34 = 1;
  long long v32 = v29;
  long long v33 = v30;
  ssize_t v13 = v37;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    ssize_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    ssize_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  long long v13[2] = v15 + 1;
  ssize_t v16 = &v13[5 * v15];
  long long v17 = v32;
  long long v18 = v33;
  *((unsigned char *)v16 + 64) = v34;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  uint64_t v37 = v13;
  sub_19EEBD664((uint64_t)v35, &qword_1EB393260);
  v19._uint64_t object = (void *)0x800000019F270DD0;
  v19._uint64_t countAndFlagsBits = 0xD000000000000025;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  uint64_t v36 = v12;
  v35[0] = v5;
  sub_19EEBCD00((uint64_t)v35, (uint64_t)v31);
  long long v29 = 0u;
  long long v30 = 0u;
  sub_19EEC3E70((uint64_t)v31, (uint64_t)&v29);
  char v34 = 1;
  long long v32 = v29;
  long long v33 = v30;
  char v20 = v37;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v20 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
  }
  unint64_t v22 = v20[2];
  unint64_t v21 = v20[3];
  if (v22 >= v21 >> 1) {
    char v20 = sub_19EEC3F3C((void *)(v21 > 1), v22 + 1, 1, v20);
  }
  uint64_t v20[2] = v22 + 1;
  uint64_t v23 = &v20[5 * v22];
  long long v24 = v32;
  long long v25 = v33;
  *((unsigned char *)v23 + 64) = v34;
  *((_OWORD *)v23 + 2) = v24;
  *((_OWORD *)v23 + 3) = v25;
  uint64_t v37 = v20;
  sub_19EEBD664((uint64_t)v35, &qword_1EB393260);
  v26._uint64_t countAndFlagsBits = 0;
  v26._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  *(void *)(v9 + 32) = v37;
  *(void *)&long long v32 = v10;
  LOBYTE(v29) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v29);

  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_19F0ABD20(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  return sub_19F0ABDD8(a1, a2, a3, a4, a5, a6, a7, (uint64_t)JEMediaActivityFieldNameStartType, (uint64_t)JEMediaActivityFieldNameStartReason, (uint64_t)JEMediaActivityFieldValueActionTypeStart, (void (*)(uint64_t, uint64_t, unint64_t))sub_19F0BCE1C);
}

uint64_t sub_19F0ABD88(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  return sub_19F0ABDD8(a1, a2, a3, a4, a5, a6, a7, (uint64_t)JEMediaActivityFieldNameStopType, (uint64_t)JEMediaActivityFieldNameStopReason, (uint64_t)JEMediaActivityFieldValueActionTypeStop, (void (*)(uint64_t, uint64_t, unint64_t))sub_19F0BD04C);
}

uint64_t sub_19F0ABDD8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t, uint64_t, unint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F251B70;
  *(void *)(inited + 32) = sub_19F1DBD7C();
  *(void *)(inited + 40) = v18;
  Swift::String v19 = sub_19F0AB954(a1);
  uint64_t v20 = MEMORY[0x1E4FBC538];
  *(void *)(inited + 72) = MEMORY[0x1E4FBC538];
  *(void *)(inited + 48) = v19;
  *(void *)(inited + 80) = sub_19F1DBD7C();
  *(void *)(inited + 88) = v21;
  *(void *)(inited + 120) = v20;
  *(void *)(inited + 96) = a1;
  *(void *)(inited + 128) = sub_19F1DBD7C();
  *(void *)(inited + 136) = v22;
  *(void *)(inited + 168) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 144) = a2;
  *(void *)(inited + 152) = a3;
  *(void *)(inited + 176) = sub_19F1DBD7C();
  *(void *)(inited + 184) = v23;
  *(void *)(inited + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392310);
  *(void *)(inited + 192) = a4;
  *(void *)(inited + 200) = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_19EEBF898(inited);
  if (a6) {
    long long v25 = a6;
  }
  else {
    long long v25 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v25 = sub_19F09D040(0, v25[2] + 1, 1, v25);
  }
  unint64_t v27 = v25[2];
  unint64_t v26 = v25[3];
  if (v27 >= v26 >> 1) {
    long long v25 = sub_19F09D040((void *)(v26 > 1), v27 + 1, 1, v25);
  }
  void v25[2] = v27 + 1;
  v25[v27 + 4] = v24;
  BOOL v28 = (unint64_t *)(v11 + OBJC_IVAR___JEMediaActivity_type);
  swift_beginAccess();
  unint64_t v29 = sub_19F0AC0B8(*v28);
  unint64_t v31 = v25[2];
  unint64_t v30 = v25[3];
  if (v31 >= v30 >> 1) {
    long long v25 = sub_19F09D040((void *)(v30 > 1), v31 + 1, 1, v25);
  }
  void v25[2] = v31 + 1;
  v25[v31 + 4] = v29;
  uint64_t v40 = v25;
  sub_19F0AD7EC((uint64_t *)&v40);
  uint64_t v32 = sub_19F0BE314((uint64_t)v40);
  swift_bridgeObjectRelease();
  sub_19EEBCD00(a7, (uint64_t)v38);
  if (v39)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CBB8);
    if (swift_dynamicCast()) {
      uint64_t v33 = v37;
    }
    else {
      uint64_t v33 = 0;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v38, &qword_1EB393260);
    uint64_t v33 = 0;
  }
  a11(v32, v33, *v28);
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_19F0AC0B8(unint64_t a1)
{
  if (a1 > 1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    return sub_19EEBF898(v12);
  }
  else
  {
    uint64_t v1 = sub_19F1DBD7C();
    uint64_t v3 = v2;
    uint64_t v4 = sub_19F1DBD7C();
    uint64_t v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
    *(void *)(inited + 32) = sub_19F1DBD7C();
    *(void *)(inited + 40) = v8;
    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v1;
    *(void *)(inited + 56) = v3;
    *(void *)(inited + 80) = sub_19F1DBD7C();
    *(void *)(inited + 88) = v10;
    *(void *)(inited + 120) = v9;
    *(void *)(inited + 96) = v4;
    *(void *)(inited + 104) = v6;
    return sub_19EEBF898(inited);
  }
}

uint64_t sub_19F0AC220(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *))
{
  uint64_t v14 = sub_19F1DBD7C();
  uint64_t v16 = v15;
  if (a5)
  {
    uint64_t v17 = sub_19F1DBD7C();
    a5 = v18;
    if (!a6) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v17 = 0;
  if (a6)
  {
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    a6 = sub_19F1DC16C();
  }
LABEL_4:
  if (a7)
  {
    id v19 = a1;
    swift_unknownObjectRetain();
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v22, 0, sizeof(v22));
    id v20 = a1;
  }
  a8(a3, v14, v16, v17, a5, a6, v22);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_19EEBD664((uint64_t)v22, &qword_1EB393260);
}

double sub_19F0AC34C@<D0>(uint64_t a1@<X8>)
{
  if (*(void *)(*(void *)(v1 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 224))
  {
    swift_retain();
    uint64_t v3 = sub_19F0AD40C((uint64_t)sub_19F0AC3DC, 0);
    *(void *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CBB8);
    swift_release();
    *(void *)a1 = v3;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_19F0AC3DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_19F0ACC48(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_19F0AC5BC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F0AC644()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F0AC6CC(void (*a1)(uint64_t), uint64_t a2)
{
  if (*(void *)(*(void *)(v2 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 224))
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = a2;
    uint64_t v7 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
    swift_retain_n();
    swift_retain();
    v12[3] = v7;
    void v12[4] = &protocol witness table for OS_dispatch_queue;
    v12[0] = sub_19F1DC87C();
    v10[0] = sub_19F0AE9C0;
    v10[1] = v5;
    _OWORD v10[2] = sub_19F0ADB0C;
    void v10[3] = v6;
    sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
    v11[40] = 0;
    swift_retain();
    swift_retain();
    sub_19EEA8C4C((uint64_t)v10);
    sub_19EEBD664((uint64_t)v10, (uint64_t *)&unk_1EB3912D0);
    swift_release();
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    a1(v9);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19F0AC87C(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  void v5[3] = a1;
  void v5[4] = a2;
  if (*(void *)(*(void *)&v2[OBJC_IVAR___JEMediaActivity_pipelineHandler] + 224))
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_19F0ADB14;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_19F0ADB14;
    *(void *)(v7 + 24) = v5;
    uint64_t v8 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
    swift_retain_n();
    uint64_t v9 = v2;
    swift_retain();
    swift_retain();
    v15[3] = v8;
    v15[4] = &protocol witness table for OS_dispatch_queue;
    v15[0] = sub_19F1DC87C();
    v13[0] = sub_19F0AE9C0;
    v13[1] = v6;
    long long v13[2] = sub_19F0ADB0C;
    void v13[3] = v7;
    sub_19EEC4154((uint64_t)v15, (uint64_t)v14);
    v14[40] = 0;
    swift_retain();
    swift_retain();
    sub_19EEA8C4C((uint64_t)v13);
    sub_19EEBD664((uint64_t)v13, (uint64_t *)&unk_1EB3912D0);
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    return swift_release();
  }
  else
  {
    uint64_t v11 = v2;
    swift_retain_n();
    uint64_t v12 = v11;
    swift_bridgeObjectRetain();
    sub_19F0AE1CC((uint64_t)v12, a1, a2);
    swift_release();

    swift_release();
    return swift_bridgeObjectRelease();
  }
}

void sub_19F0ACAB8(void *a1, int a2, void *aBlock, void (*a4)(void))
{
  uint64_t v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  id v7 = a1;
  a4();
  _Block_release(v6);
  _Block_release(v6);
}

id MediaActivity.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MediaActivity.init()()
{
}

id MediaActivity.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaActivity();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19F0ACC48(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_19F0ACDA0((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    id v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_19F0ACDA0((uint64_t)v7, v4, v2);
    MEMORY[0x19F3C9470](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_19F0ACDA0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v26 = (unint64_t *)result;
  uint64_t v27 = 0;
  int64_t v3 = 0;
  uint64_t v33 = a3;
  uint64_t v6 = *(void *)(a3 + 64);
  uint64_t v4 = a3 + 64;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v4 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v5;
  uint64_t v28 = v4;
  int64_t v29 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    while (1)
    {
      if (v9)
      {
        unint64_t v10 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v11 = v10 | (v3 << 6);
      }
      else
      {
        int64_t v12 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_42;
        }
        if (v12 >= v29) {
          return sub_19F0AD09C(v26, a2, v27, v33);
        }
        unint64_t v13 = *(void *)(v28 + 8 * v12);
        ++v3;
        if (!v13)
        {
          int64_t v3 = v12 + 1;
          if (v12 + 1 >= v29) {
            return sub_19F0AD09C(v26, a2, v27, v33);
          }
          unint64_t v13 = *(void *)(v28 + 8 * v3);
          if (!v13)
          {
            int64_t v3 = v12 + 2;
            if (v12 + 2 >= v29) {
              return sub_19F0AD09C(v26, a2, v27, v33);
            }
            unint64_t v13 = *(void *)(v28 + 8 * v3);
            if (!v13)
            {
              int64_t v14 = v12 + 3;
              if (v14 >= v29) {
                return sub_19F0AD09C(v26, a2, v27, v33);
              }
              unint64_t v13 = *(void *)(v28 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  int64_t v3 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_43;
                  }
                  if (v3 >= v29) {
                    return sub_19F0AD09C(v26, a2, v27, v33);
                  }
                  unint64_t v13 = *(void *)(v28 + 8 * v3);
                  ++v14;
                  if (v13) {
                    goto LABEL_20;
                  }
                }
              }
              int64_t v3 = v14;
            }
          }
        }
LABEL_20:
        unint64_t v9 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v3 << 6);
      }
      uint64_t v15 = (uint64_t *)(*(void *)(v33 + 48) + 16 * v11);
      uint64_t v17 = *v15;
      uint64_t v16 = v15[1];
      sub_19EEBDBA4(*(void *)(v33 + 56) + 32 * v11, (uint64_t)v32);
      v30[0] = v17;
      v30[1] = v16;
      sub_19EEBDBA4((uint64_t)v32, (uint64_t)&v31);
      uint64_t v18 = qword_1EF13C3D0;
      if (qword_1EF13C3D0) {
        break;
      }
LABEL_4:
      swift_bridgeObjectRetain_n();
      swift_arrayDestroy();
      sub_19EEBD664((uint64_t)v30, &qword_1E946F4C0);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
      uint64_t result = swift_bridgeObjectRelease();
    }
    if (*(void *)aDsid_0 != v17 || unk_1EF13C3E8 != v16)
    {
      uint64_t result = sub_19F1DD44C();
      if ((result & 1) == 0) {
        break;
      }
    }
LABEL_37:
    swift_bridgeObjectRetain_n();
    swift_arrayDestroy();
    sub_19EEBD664((uint64_t)v30, &qword_1E946F4C0);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
    uint64_t result = swift_bridgeObjectRelease();
    *(unint64_t *)((char *)v26 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    if (__OFADD__(v27++, 1))
    {
      __break(1u);
      return sub_19F0AD09C(v26, a2, v27, v33);
    }
  }
  if (v18 == 1) {
    goto LABEL_4;
  }
  id v20 = &unk_1EF13C3F8;
  uint64_t v21 = 1;
  while (1)
  {
    uint64_t v22 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (*(v20 - 1) == v17 && *v20 == v16) {
      goto LABEL_37;
    }
    uint64_t result = sub_19F1DD44C();
    if (result) {
      goto LABEL_37;
    }
    v20 += 2;
    ++v21;
    if (v22 == v18) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_19F0AD09C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392F20);
  uint64_t result = sub_19F1DD06C();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v30) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v30) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v30) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v30) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v30) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_19EEBDBA4(*(void *)(v4 + 56) + 32 * v13, (uint64_t)v33);
    sub_19EEBDC00(v33, v32);
    sub_19F1DD72C();
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v19;
    v28[1] = v18;
    uint64_t result = (uint64_t)sub_19EEBDC00(v32, (_OWORD *)(*(void *)(v8 + 56) + 32 * v23));
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_19F0AD360(long long *a1, void (*a2)(uint64_t *__return_ptr, long long *))
{
  long long v4 = *a1;
  a2(&v3, &v4);
  sub_19F1B30A4(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0AD40C(uint64_t a1, uint64_t a2)
{
  unint64_t v12 = &type metadata for SyncTaskScheduler;
  unint64_t v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CBB8);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = 0;
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  void v7[3] = a2;
  v7[4] = v4;
  v9[0] = sub_19F0AE974;
  v9[1] = v7;
  void v9[2] = sub_19F0AE980;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EEA8C4C((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1EB3912D0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

id sub_19F0AD554(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  type metadata accessor for WrappedMetricsPipeline();
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    *(void *)&a6[OBJC_IVAR___JEMediaActivity_type] = a1;
    *(void *)&a6[OBJC_IVAR___JEMediaActivity_playlistItem] = a2;
    sub_19EE99F44(v12 + OBJC_IVAR___JEWrappedMetricsPipeline_pipeline, (uint64_t)&v30);
    type metadata accessor for MediaActivityPipelineHandler();
    uint64_t v13 = swift_allocObject();
    *(unsigned char *)(v13 + 216) = 0;
    *(void *)(v13 + 224) = 0;
    *(void *)(v13 + 232) = 0;
    uint64_t v14 = a6;
    swift_unknownObjectRetain();
    uint64_t v15 = MEMORY[0x1E4FBC860];
    *(void *)(v13 + 240) = sub_19EEBF898(MEMORY[0x1E4FBC860]);
    *(void *)(v13 + 248) = sub_19EEBF898(v15);
    long long v16 = v39;
    *(_OWORD *)(v13 + 144) = v38;
    *(_OWORD *)(v13 + 160) = v16;
    *(_OWORD *)(v13 + 176) = v40;
    *(unsigned char *)(v13 + 192) = v41;
    long long v17 = v35;
    *(_OWORD *)(v13 + 80) = v34;
    *(_OWORD *)(v13 + 96) = v17;
    long long v18 = v37;
    *(_OWORD *)(v13 + 112) = v36;
    *(_OWORD *)(v13 + 128) = v18;
    long long v19 = v31;
    *(_OWORD *)(v13 + 16) = v30;
    *(_OWORD *)(v13 + 32) = v19;
    long long v20 = v33;
    *(_OWORD *)(v13 + 48) = v32;
    *(_OWORD *)(v13 + 64) = v20;
    *(void *)(v13 + 200) = a4;
    *(void *)(v13 + 208) = a5;
    *(void *)&v14[OBJC_IVAR___JEMediaActivity_pipelineHandler] = v13;

    v29.receiver = v14;
    v29.super_class = (Class)type metadata accessor for MediaActivity();
    id v21 = objc_msgSendSuper2(&v29, sel_init);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    unint64_t v22 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v24 + 16) = xmmword_19F24EAD0;
    void v42[3] = v25;
    v42[0] = 0xD00000000000006ALL;
    v42[1] = 0x800000019F270F00;
    long long v30 = 0u;
    long long v31 = 0u;
    id v26 = v22;
    sub_19EEC3E70((uint64_t)v42, (uint64_t)&v30);
    *(unsigned char *)(v24 + 64) = 0;
    long long v27 = v31;
    *(_OWORD *)(v24 + 32) = v30;
    *(_OWORD *)(v24 + 48) = v27;
    *(void *)(v23 + 32) = v24;
    *(void *)&long long v30 = v26;
    LOBYTE(v42[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v23, (JetEngine::LogMessageLevel)v42);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for MediaActivity();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v21;
}

uint64_t sub_19F0AD7EC(uint64_t *a1)
{
  uint64_t v2 = sub_19F1DB57C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_19F1DBD7C();
  uint64_t v8 = v7;
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 16);
  if (v10)
  {
    uint64_t v25 = a1;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v10; ++i)
    {
      uint64_t v12 = *(void *)(v9 + 8 * i + 32);
      if (*(void *)(v12 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v13 = sub_19EEBD400(v6, v8);
        if (v14)
        {
          sub_19EEBDBA4(*(void *)(v12 + 56) + 32 * v13, (uint64_t)&v26);
        }
        else
        {
          long long v26 = 0u;
          long long v27 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v27 + 1))
        {
          sub_19EEBD664((uint64_t)&v26, &qword_1EB393260);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        long long v26 = 0u;
        long long v27 = 0u;
        swift_bridgeObjectRetain();
      }
      sub_19EEBD664((uint64_t)&v26, &qword_1EB393260);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    a1 = v25;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  long long v17 = self;
  sub_19F1DB56C();
  long long v18 = (void *)sub_19F1DB4DC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v19 = objc_msgSend(v17, sel_serverTimeFromDate_, v18);

  *(void *)(inited + 72) = sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
  *(void *)(inited + 48) = v19;
  unint64_t v20 = sub_19EEBF898(inited);
  id v21 = (void *)*a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_19F09D040(0, v21[2] + 1, 1, v21);
    id v21 = (void *)result;
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1)
  {
    uint64_t result = (uint64_t)sub_19F09D040((void *)(v22 > 1), v23 + 1, 1, v21);
    id v21 = (void *)result;
  }
  void v21[2] = v23 + 1;
  v21[v23 + 4] = v20;
  *a1 = (uint64_t)v21;
  return result;
}

uint64_t sub_19F0ADAD4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0ADB14()
{
  return sub_19F0AE1CC(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

void sub_19F0ADB20(uint64_t a1, void (**a2)(void, void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  if (*(void *)(*(void *)(a1 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 224))
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_19F0AE7F8;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_19F0AE7F8;
    *(void *)(v6 + 24) = v4;
    uint64_t v7 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
    swift_retain_n();
    _Block_copy(a2);
    swift_retain();
    v11[3] = v7;
    void v11[4] = &protocol witness table for OS_dispatch_queue;
    v11[0] = sub_19F1DC87C();
    v9[0] = sub_19F0AE9C0;
    v9[1] = v5;
    void v9[2] = sub_19F0ADB0C;
    void v9[3] = v6;
    sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
    unsigned char v10[40] = 0;
    swift_retain();
    swift_retain();
    sub_19EEA8C4C((uint64_t)v9);
    sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1EB3912D0);
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    swift_release();
  }
  else
  {
    _Block_copy(a2);
    swift_bridgeObjectRetain();
    id v8 = (id)sub_19F1DBB1C();
    ((void (**)(void, id))a2)[2](a2, v8);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_19F0ADD40(uint64_t a1, void (**a2)(void, void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  if (*(void *)(*(void *)(a1 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 232))
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_19F0AE7F8;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_19F0AE7F8;
    *(void *)(v6 + 24) = v4;
    uint64_t v7 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
    swift_retain_n();
    _Block_copy(a2);
    swift_retain();
    v11[3] = v7;
    void v11[4] = &protocol witness table for OS_dispatch_queue;
    v11[0] = sub_19F1DC87C();
    v9[0] = sub_19F0AE840;
    v9[1] = v5;
    void v9[2] = sub_19F0ADB0C;
    void v9[3] = v6;
    sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
    unsigned char v10[40] = 0;
    swift_retain();
    swift_retain();
    sub_19EEA8C4C((uint64_t)v9);
    sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1EB3912D0);
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    swift_release();
  }
  else
  {
    _Block_copy(a2);
    swift_bridgeObjectRetain();
    id v8 = (id)sub_19F1DBB1C();
    ((void (**)(void, id))a2)[2](a2, v8);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_19F0ADF60(char *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a1;
  void v5[3] = sub_19F0AE7F8;
  void v5[4] = v4;
  if (*(void *)(*(void *)&a1[OBJC_IVAR___JEMediaActivity_pipelineHandler] + 224))
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_19F0AE988;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_19F0AE988;
    *(void *)(v7 + 24) = v5;
    uint64_t v8 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
    swift_retain_n();
    _Block_copy(a2);
    uint64_t v9 = a1;
    swift_retain();
    swift_retain();
    v15[3] = v8;
    v15[4] = &protocol witness table for OS_dispatch_queue;
    v15[0] = sub_19F1DC87C();
    v13[0] = sub_19F0AE9C0;
    v13[1] = v6;
    long long v13[2] = sub_19F0ADB0C;
    void v13[3] = v7;
    sub_19EEC4154((uint64_t)v15, (uint64_t)v14);
    v14[40] = 0;
    swift_retain();
    swift_retain();
    sub_19EEA8C4C((uint64_t)v13);
    sub_19EEBD664((uint64_t)v13, (uint64_t *)&unk_1EB3912D0);
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v11 = a1;
    swift_retain();
    _Block_copy(a2);
    uint64_t v12 = v11;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_19F0ADD40((uint64_t)v12, (void (**)(void, void))a2);
    swift_release_n();

    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19F0AE1CC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  if (*(void *)(*(void *)(a1 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 232))
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a2;
    *(void *)(v5 + 24) = a3;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a2;
    *(void *)(v6 + 24) = a3;
    uint64_t v7 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
    swift_retain_n();
    swift_retain();
    v12[3] = v7;
    void v12[4] = &protocol witness table for OS_dispatch_queue;
    v12[0] = sub_19F1DC87C();
    v10[0] = sub_19F0AE9C0;
    v10[1] = v5;
    _OWORD v10[2] = sub_19F0ADB0C;
    void v10[3] = v6;
    sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
    v11[40] = 0;
    swift_retain();
    swift_retain();
    sub_19EEA8C4C((uint64_t)v10);
    sub_19EEBD664((uint64_t)v10, (uint64_t *)&unk_1EB3912D0);
    swift_release();
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    a2(v9);
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for MediaActivity()
{
  return self;
}

uint64_t sub_19F0AE388@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___JEMediaActivity_type);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_19F0AE3DC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___JEMediaActivity_type);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_19F0AE42C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___JEMediaActivity_playlistItem);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t method lookup function for MediaActivity(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MediaActivity);
}

uint64_t dispatch thunk of MediaActivity.type.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MediaActivity.type.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MediaActivity.type.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MediaActivity.playlistItem.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MediaActivity.playlistItem.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MediaActivity.playlistItem.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MediaActivity.isStopped.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MediaActivity.__allocating_init(type:playlistItem:pipeline:topic:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of MediaActivity.position(overallPosition:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MediaActivity.startedAt(overallPosition:type:reason:eventData:transitioningEventData:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MediaActivity.stoppedAt(overallPosition:type:reason:eventData:transitioningEventData:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of MediaActivity.eventDataForTransitioningEvents()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MediaActivity.startMetricsFields()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MediaActivity.stopMetricsFields()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of MediaActivity.postProcessedStartMetricsFields(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MediaActivity.postProcessedStopMetricsFields(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t sub_19F0AE7C0()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0AE840(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_19F0AE86C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_19F1DBB1C();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_19F0AE8E0()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  sub_19EEBF898(MEMORY[0x1E4FBC860]);
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0AE934()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0AE974(long long *a1)
{
  return sub_19F0AD360(a1, *(void (**)(uint64_t *__return_ptr, long long *))(v1 + 16));
}

void sub_19F0AE980(void *a1)
{
}

double static AutomationSemantics.menuItem(_:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  *(void *)&v14[0] = &unk_1EF1414B8;
  *((void *)&v14[0] + 1) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_19EE913A4(v10, (uint64_t)sub_19EE91750, 0);
  long long v13 = v14[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  sub_19EEBCD00(a3, (uint64_t)v14);
  sub_19EE90F48(0, (uint64_t)v14, (uint64_t *)(inited + 32));
  sub_19EEBCD00(a4, (uint64_t)v14);
  sub_19EE90F48(1, (uint64_t)v14, (uint64_t *)(inited + 64));
  sub_19EE9104C(inited);
  double result = *(double *)&v13;
  *a5 = v13;
  return result;
}

uint64_t sub_19F0AEB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, unint64_t *a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *a3;
  unint64_t v11 = *a4;
  int64_t v10 = a4[1];
  uint64_t v12 = type metadata accessor for PageRenderEvent();
  long long v13 = *(void **)((char *)v5 + *(int *)(v12 + 20));
  if (v13)
  {
    id v14 = v13;
    return swift_willThrow();
  }
  LODWORD(v135) = v9;
  uint64_t v126 = v12;
  long long v16 = (void *)((char *)v5 + *(int *)(type metadata accessor for MonotonicTimeReference() + 20));
  int64_t v18 = *v16;
  int64_t v17 = v16[1];
  uint64_t v133 = v17;
  if (v11 == v18 && v10 < v17)
  {
    __break(1u);
    goto LABEL_133;
  }
  if ((uint64_t)v11 < v18)
  {
LABEL_130:
    __break(1u);
  }
  else
  {
    uint64_t v9 = v136;
    int64_t v131 = v18;
    int64_t v132 = v10;
    uint64_t v127 = a1;
    long long v128 = a5;
    uint64_t v129 = a2;
    if (qword_1EB390588 == -1) {
      goto LABEL_9;
    }
  }
  swift_once();
LABEL_9:
  uint64_t v20 = qword_1EB394D28;
  id v21 = *(void **)(qword_1EB394D28 + 32);
  objc_msgSend(v21, sel_lock);
  swift_beginAccess();
  unint64_t v22 = *(void *)(v20 + 24);
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_19F0BA538(v23, v22);
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v21, sel_unlock);
  MEMORY[0x1F4188790](v25);
  v124[2] = v5;
  v124[3] = v131;
  v124[4] = v133;
  v124[5] = v11;
  unint64_t v125 = v11;
  v124[6] = v132;
  uint64_t v26 = sub_19F0AFC64((uint64_t)sub_19F0B0444, (uint64_t)v124, v24);
  uint64_t v27 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_19F24EB80;
  *(void *)(v28 + 32) = 0x707954746E657665;
  *(void *)(v28 + 40) = 0xE900000000000065;
  uint64_t v29 = MEMORY[0x1E4FBB1A0];
  *(void *)(v28 + 48) = 0x646E655265676170;
  *(void *)(v28 + 56) = 0xEA00000000007265;
  *(void *)(v28 + 72) = v29;
  strcpy((char *)(v28 + 80), "eventVersion");
  *(void *)(v28 + 120) = MEMORY[0x1E4FBB550];
  *(unsigned char *)(v28 + 93) = 0;
  *(_WORD *)(v28 + 94) = -5120;
  *(void *)(v28 + 96) = 3;
  unint64_t v11 = sub_19EEBF898(v28);
  uint64_t v146 = MEMORY[0x1E4FBC870];
  uint64_t v30 = *(void *)(v26 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease();
LABEL_62:
    if (qword_1EB3904D8 == -1)
    {
LABEL_63:
      uint64_t v67 = sub_19F1DCD2C();
      if (*(void *)(v11 + 16) && (unint64_t v69 = sub_19EEBD400(v67, v68), (v70 & 1) != 0))
      {
        sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v69, (uint64_t)&v144);
      }
      else
      {
        long long v144 = 0u;
        long long v145 = 0u;
      }
      swift_bridgeObjectRelease();
      uint64_t v71 = *((void *)&v145 + 1);
      sub_19EEBCB4C((uint64_t)&v144);
      if (v71)
      {
        uint64_t v72 = v146;
        if (*(void *)(v146 + 16))
        {
          sub_19EF58098();
          swift_allocError();
          *(void *)uint64_t v73 = v72;
          *(void *)(v73 + 8) = 0;
          *(unsigned char *)(v73 + 16) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_107;
        }
      }
      v143[0] = MEMORY[0x1E4FBC870];
      if (qword_1EB3905D8 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_19F1DCD2C();
      if (*(void *)(v11 + 16) && (unint64_t v76 = sub_19EEBD400(v74, v75), (v77 & 1) != 0))
      {
        sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v76, (uint64_t)&v144);
      }
      else
      {
        long long v144 = 0u;
        long long v145 = 0u;
      }
      swift_bridgeObjectRelease();
      uint64_t v78 = *((void *)&v145 + 1);
      sub_19EEBCB4C((uint64_t)&v144);
      if (!v78)
      {
        uint64_t v79 = sub_19F1DCD2C();
        sub_19F04282C((uint64_t *)&v144, v79, v80);
        swift_bridgeObjectRelease();
      }
      if (qword_1EB390600 != -1) {
        swift_once();
      }
      uint64_t v81 = sub_19F1DCD2C();
      if (*(void *)(v11 + 16) && (unint64_t v83 = sub_19EEBD400(v81, v82), (v84 & 1) != 0))
      {
        sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v83, (uint64_t)&v144);
      }
      else
      {
        long long v144 = 0u;
        long long v145 = 0u;
      }
      swift_bridgeObjectRelease();
      uint64_t v85 = *((void *)&v145 + 1);
      sub_19EEBCB4C((uint64_t)&v144);
      if (!v85)
      {
        uint64_t v86 = sub_19F1DCD2C();
        if (*(void *)(v11 + 16) && (unint64_t v88 = sub_19EEBD400(v86, v87), (v89 & 1) != 0))
        {
          sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v88, (uint64_t)&v144);
        }
        else
        {
          long long v144 = 0u;
          long long v145 = 0u;
        }
        swift_bridgeObjectRelease();
        uint64_t v90 = *((void *)&v145 + 1);
        sub_19EEBCB4C((uint64_t)&v144);
        if (v90)
        {
          uint64_t v91 = sub_19F1DCD2C();
          sub_19F04282C((uint64_t *)&v144, v91, v92);
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v93 = sub_19F1DCD2C();
      if (*(void *)(v11 + 16) && (unint64_t v95 = sub_19EEBD400(v93, v94), (v96 & 1) != 0))
      {
        sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v95, (uint64_t)&v144);
      }
      else
      {
        long long v144 = 0u;
        long long v145 = 0u;
      }
      swift_bridgeObjectRelease();
      uint64_t v97 = *((void *)&v145 + 1);
      sub_19EEBCB4C((uint64_t)&v144);
      if (!v97)
      {
        if (qword_1EB3905F0 != -1) {
          swift_once();
        }
        uint64_t v98 = sub_19F1DCD2C();
        if (*(void *)(v11 + 16) && (unint64_t v100 = sub_19EEBD400(v98, v99), (v101 & 1) != 0))
        {
          sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v100, (uint64_t)&v144);
        }
        else
        {
          long long v144 = 0u;
          long long v145 = 0u;
        }
        swift_bridgeObjectRelease();
        uint64_t v102 = *((void *)&v145 + 1);
        sub_19EEBCB4C((uint64_t)&v144);
        if (!v102)
        {
          uint64_t v103 = sub_19F1DCD2C();
          sub_19F04282C((uint64_t *)&v144, v103, v104);
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v105 = v143[0];
      if (*(void *)(v143[0] + 16))
      {
        sub_19EF58098();
        swift_allocError();
        *(void *)uint64_t v106 = v105;
        *(void *)(v106 + 8) = 0;
        char v107 = 3;
LABEL_106:
        *(unsigned char *)(v106 + 16) = v107;
LABEL_107:
        swift_willThrow();
LABEL_108:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v108 = sub_19F1DCD2C();
      if (*(void *)(v11 + 16) && (unint64_t v110 = sub_19EEBD400(v108, v109), (v111 & 1) != 0))
      {
        sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v110, (uint64_t)&v144);
      }
      else
      {
        long long v144 = 0u;
        long long v145 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v145 + 1))
      {
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_124;
        }
        double v112 = *(double *)v139;
        uint64_t v113 = sub_19F1DCD2C();
        if (*(void *)(v11 + 16) && (unint64_t v115 = sub_19EEBD400(v113, v114), (v116 & 1) != 0))
        {
          sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v115, (uint64_t)&v144);
        }
        else
        {
          long long v144 = 0u;
          long long v145 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v145 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0 && *(double *)v139 - v112 >= 300000.0)
          {
            sub_19EF58098();
            swift_allocError();
            *(_OWORD *)uint64_t v106 = xmmword_19F250380;
            char v107 = 5;
            goto LABEL_106;
          }
LABEL_124:
          swift_bridgeObjectRetain();
          uint64_t v117 = sub_19EFF1EB4((uint64_t)&unk_1EF13E1E0);
          swift_arrayDestroy();
          swift_bridgeObjectRelease();
          long long v118 = v128;
          uint64_t v119 = v129;
          *long long v128 = v127;
          v118[1] = v119;
          *((unsigned char *)v118 + 16) = 0;
          v118[3] = v11;
          v118[4] = v117;
          v118[5] = MEMORY[0x1E4FBC870];
          swift_bridgeObjectRetain();
          return swift_bridgeObjectRelease();
        }
      }
      sub_19EEBCB4C((uint64_t)&v144);
      goto LABEL_124;
    }
LABEL_133:
    swift_once();
    goto LABEL_63;
  }
  sub_19EE83A30(v26 + 32, (uint64_t)&v144);
  LOBYTE(v139[0]) = (_BYTE)v135;
  sub_19EE83A30((uint64_t)&v144, (uint64_t)v143);
  sub_19EE83B30((uint64_t)&v144, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EE83BD4);
  sub_19EFC16E4((uint64_t)v143);
  sub_19EE83A30(v26 + 32, (uint64_t)v143);
  sub_19EE83A30((uint64_t)v143, (uint64_t)v139);
  sub_19EE83B30((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EE83BD4);
  uint64_t v31 = sub_19F092D20(&v140, (uint64_t)v5);
  uint64_t v33 = v26;
  uint64_t v130 = v26;
  if (v9)
  {
    sub_19EE83B30((uint64_t)&v144, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EE83B30((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = v31;
  uint64_t v34 = v32;
  long long v135 = v5;
  uint64_t v136 = v33 + 432;
  uint64_t v134 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    uint64_t v35 = v27;
    sub_19EEBDC00(&v140, v142);
    sub_19EEBDBA4((uint64_t)v142, (uint64_t)v138);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::String v137 = (void *)v11;
    uint64_t v5 = (void *)v11;
    unint64_t v37 = sub_19EEBD400(v9, v34);
    unint64_t v39 = v11;
    unint64_t v11 = v37;
    uint64_t v40 = *(void *)(v39 + 16);
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41))
    {
      __break(1u);
LABEL_127:
      swift_bridgeObjectRelease();
LABEL_128:
      swift_bridgeObjectRelease();
      Swift::String v120 = (void *)((char *)v135 + *(int *)(v126 + 24));
      uint64_t v121 = *v120;
      uint64_t v122 = v120[1];
      *(void *)&long long v140 = v131;
      *((void *)&v140 + 1) = v133;
      *(void *)&long long v141 = v125;
      *((void *)&v141 + 1) = v132;
      sub_19EF8650C(v121, v122, (uint64_t *)&v140);
      sub_19EF58098();
      swift_allocError();
      *(void *)uint64_t v123 = v9;
      *(void *)(v123 + 8) = v34;
      *(unsigned char *)(v123 + 16) = 0;
      swift_willThrow();
      sub_19EE83B30((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
      sub_19EE83B30((uint64_t)&v144, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v139);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v142);
      goto LABEL_108;
    }
    char v43 = v38;
    if (*(void *)(v39 + 24) < v42) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      int v46 = v137;
      if ((v38 & 1) == 0) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v5 = &v137;
      sub_19EE7DBE0();
      int v46 = v137;
      if ((v43 & 1) == 0)
      {
LABEL_18:
        v46[(v11 >> 6) + 8] |= 1 << v11;
        uint64_t v47 = (uint64_t *)(v46[6] + 16 * v11);
        *uint64_t v47 = v9;
        v47[1] = v34;
        sub_19EEBDC00(v138, (_OWORD *)(v46[7] + 32 * v11));
        uint64_t v48 = v46[2];
        BOOL v49 = __OFADD__(v48, 1);
        uint64_t v50 = v48 + 1;
        if (v49)
        {
          __break(1u);
          goto LABEL_130;
        }
        unint64_t v11 = (unint64_t)v46;
        _OWORD v46[2] = v50;
        long long v140 = 0u;
        long long v141 = 0u;
        swift_bridgeObjectRetain();
        goto LABEL_23;
      }
    }
LABEL_22:
    sub_19EEBDC00((_OWORD *)(v46[7] + 32 * v11), &v140);
    sub_19EEBDC00(v138, (_OWORD *)(v46[7] + 32 * v11));
    unint64_t v11 = (unint64_t)v46;
LABEL_23:
    swift_bridgeObjectRelease();
    if (!*((void *)&v141 + 1))
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v142);
      sub_19EE83B30((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
      swift_bridgeObjectRelease();
      sub_19EEBCB4C((uint64_t)&v140);
      uint64_t v27 = v35;
      goto LABEL_36;
    }
    sub_19EEBDC00(&v140, v139);
    sub_19EEBDBA4((uint64_t)v139, (uint64_t)&v140);
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
    if (swift_dynamicCast())
    {
      uint64_t v52 = *(void *)&v138[0];
      sub_19EEBDBA4((uint64_t)v142, (uint64_t)&v140);
      if (swift_dynamicCast())
      {
        *(void *)&long long v140 = v52;
        sub_19EEB2E08(*(uint64_t *)&v138[0]);
        *((void *)&v141 + 1) = v51;
        sub_19EEBDC00(&v140, v138);
        char v53 = swift_isUniquelyReferenced_nonNull_native();
        Swift::String v137 = (void *)v11;
        sub_19EE7DA20(v138, v9, v34, v53);
        unint64_t v11 = (unint64_t)v137;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_19EE83B30((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v139);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v142);
        uint64_t v27 = v35;
        goto LABEL_36;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = v35;
    if (qword_1EB3904E8 != -1) {
      swift_once();
    }
    *(void *)&long long v140 = sub_19F1DCD2C();
    *((void *)&v140 + 1) = v54;
    sub_19F1DBEFC();
    if (v140 == __PAIR128__(v34, v9)) {
      goto LABEL_32;
    }
    char v55 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v55) {
      goto LABEL_34;
    }
    if (qword_1EB3905E8 != -1) {
      swift_once();
    }
    if (sub_19F1DCD2C() == v9 && v59 == v34) {
      goto LABEL_32;
    }
    char v60 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v60) {
      goto LABEL_34;
    }
    if (qword_1EB3905F0 != -1) {
      swift_once();
    }
    if (sub_19F1DCD2C() == v9 && v61 == v34)
    {
LABEL_32:
      swift_bridgeObjectRelease();
    }
    else
    {
      char v62 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      if ((v62 & 1) == 0)
      {
        if (qword_1EB3905D8 != -1) {
          swift_once();
        }
        if (sub_19F1DCD2C() == v9 && v63 == v34) {
          goto LABEL_127;
        }
        char v64 = sub_19F1DD44C();
        swift_bridgeObjectRelease();
        if (v64) {
          goto LABEL_128;
        }
        if (qword_1EB3904D8 != -1) {
          swift_once();
        }
        if (sub_19F1DCD2C() == v9 && v65 == v34) {
          goto LABEL_127;
        }
        char v66 = sub_19F1DD44C();
        swift_bridgeObjectRelease();
        if (v66) {
          goto LABEL_128;
        }
        sub_19EE83B30((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
    }
LABEL_34:
    sub_19EEBDBA4((uint64_t)v139, (uint64_t)&v140);
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v138[0] = v11;
    sub_19EE7DA20(&v140, v9, v34, v56);
    unint64_t v11 = *(void *)&v138[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EE83B30((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
LABEL_35:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v139);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v142);
LABEL_36:
    if (!--v30)
    {
      swift_bridgeObjectRelease();
      sub_19EE83B30((uint64_t)&v144, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
      goto LABEL_62;
    }
    uint64_t v57 = v136 + 400;
    sub_19EE83A30(v136, (uint64_t)v143);
    sub_19EE83A30((uint64_t)v143, (uint64_t)v139);
    sub_19EE83B30((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EE83BD4);
    uint64_t v9 = sub_19F092D20(&v140, (uint64_t)v135);
    uint64_t v34 = v58;
    uint64_t v136 = v57;
  }
  sub_19EEBD714(v42, isUniquelyReferenced_nonNull_native);
  uint64_t v5 = v137;
  unint64_t v44 = sub_19EEBD400(v9, v34);
  if ((v43 & 1) == (v45 & 1))
  {
    unint64_t v11 = v44;
    int v46 = v137;
    if ((v43 & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_22;
  }
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F0AFC64(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t (*)(unsigned char *))result;
    unint64_t v7 = 0;
    uint64_t v8 = a3 + 32;
    uint64_t v9 = MEMORY[0x1E4FBC860];
    id v14 = (uint64_t (*)(unsigned char *))result;
    while (v7 < *(void *)(a3 + 16))
    {
      sub_19EE83A30(v8, (uint64_t)v15);
      sub_19EE83A30((uint64_t)v15, (uint64_t)v16);
      sub_19EE83B30((uint64_t)v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EE83BD4);
      char v10 = v6(v16);
      if (v3)
      {
        sub_19EE83B30((uint64_t)v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
        swift_release();
        goto LABEL_15;
      }
      if (v10)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v17 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19EFF6540(0, *(void *)(v9 + 16) + 1, 1);
          uint64_t v9 = v17;
        }
        unint64_t v13 = *(void *)(v9 + 16);
        unint64_t v12 = *(void *)(v9 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_19EFF6540(v12 > 1, v13 + 1, 1);
          uint64_t v9 = v17;
        }
        *(void *)(v9 + 16) = v13 + 1;
        uint64_t result = sub_19EE83A30((uint64_t)v15, v9 + 400 * v13 + 32);
        uint64_t v6 = v14;
      }
      else
      {
        uint64_t result = sub_19EE83B30((uint64_t)v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EECA688);
      }
      ++v7;
      v8 += 400;
      if (v5 == v7) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_15:
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

id sub_19F0AFE20()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1E9474038);
  uint64_t v0 = swift_allocObject();
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = result;
  *(void *)(v0 + 24) = v2;
  qword_1E9498B88 = v0;
  return result;
}

uint64_t PageRenderEvent.id.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PageRenderEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_19F1DB57C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    uint64_t v9 = *(int *)(a3 + 20);
    char v10 = *(void **)((char *)a2 + v9);
    id v11 = v10;
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v10;
    uint64_t v12 = *(int *)(a3 + 24);
    unint64_t v13 = (uint64_t *)((char *)a1 + v12);
    id v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PageRenderEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for MonotonicTimeReference() + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  uint64_t v10 = *(int *)(a3 + 20);
  id v11 = *(void **)(a1 + v10);
  uint64_t v12 = *(void **)(a2 + v10);
  id v13 = v12;
  *(void *)(a1 + v10) = v12;

  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PageRenderEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for MonotonicTimeReference();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for PageRenderEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for MonotonicTimeReference();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);

  uint64_t v10 = *(int *)(a3 + 24);
  id v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *id v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F0B0214);
}

uint64_t sub_19F0B0214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MonotonicTimeReference();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PageRenderEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F0B02EC);
}

uint64_t sub_19F0B02EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for MonotonicTimeReference();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

BOOL sub_19F0B03AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_19EE83A30(a1, (uint64_t)v17);
  sub_19EE83A30((uint64_t)v17, (uint64_t)v16);
  id v11 = (uint64_t *)(a2 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  v15[0] = a3;
  v15[1] = a4;
  void v15[2] = a5;
  v15[3] = a6;
  return sub_19F092B98(v12, v13, v15);
}

BOOL sub_19F0B0444(uint64_t a1)
{
  return sub_19F0B03AC(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t JSIntentRequest.init(intent:timeoutInterval:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = a5 + *(int *)(type metadata accessor for JSIntentRequest() + 36);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  *(void *)uint64_t v10 = a2;
  *(unsigned char *)(v10 + 8) = a3 & 1;
  return result;
}

uint64_t type metadata accessor for JSIntentRequest()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t JSIntentRequest.intent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t JSIntentRequest.intent.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*JSIntentRequest.intent.modify())()
{
  return nullsub_1;
}

uint64_t JSIntentRequest.timeoutInterval.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 36));
}

uint64_t JSIntentRequest.timeoutInterval.setter(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v4 = v3 + *(int *)(a3 + 36);
  *(void *)uint64_t v4 = result;
  *(unsigned char *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*JSIntentRequest.timeoutInterval.modify())()
{
  return nullsub_1;
}

uint64_t sub_19F0B05F8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19F0B0690(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    char v11 = *(unsigned char *)(v10 + 8);
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v12 = *(void *)v10;
    *(unsigned char *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_19F0B0790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_19F0B0814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_19F0B0898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_19F0B091C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_19F0B09A0(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v7 = (a2 - v5 + 255) >> (8 * v6);
    if (v6 < 4) {
      unsigned int v8 = v7 + 1;
    }
    else {
      unsigned int v8 = 2;
    }
    if (v8 >= 0x10000) {
      unsigned int v9 = 4;
    }
    else {
      unsigned int v9 = 2;
    }
    if (v8 < 0x100) {
      unsigned int v9 = 1;
    }
    if (v8 >= 2) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    switch(v10)
    {
      case 1:
        int v11 = a1[v6];
        if (!a1[v6]) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v11 = *(unsigned __int16 *)&a1[v6];
        if (*(_WORD *)&a1[v6]) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x19F0B0AD0);
      case 4:
        int v11 = *(_DWORD *)&a1[v6];
        if (!v11) {
          break;
        }
LABEL_18:
        int v12 = (v11 - 1) << (8 * v6);
        if (v6 >= 4) {
          int v12 = 0;
        }
        if (((*(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v13 = *a1;
        }
        else {
          int v13 = *(_DWORD *)a1;
        }
        return v5 + (v13 | v12) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_19F0B0AE4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v9 = 8 * v8;
  if (v7 >= a3)
  {
    int v13 = 0;
    if (v7 >= a2)
    {
LABEL_14:
      switch(v13)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_31;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_31;
        case 3:
          goto LABEL_38;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_30;
        default:
LABEL_30:
          if (a2)
          {
LABEL_31:
            uint64_t v17 = *(void (**)(void))(v6 + 56);
            v17();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v10 = (a3 - v7 + 255) >> v9;
    if (v8 <= 3) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    if (v7 >= a2) {
      goto LABEL_14;
    }
  }
  unsigned int v14 = (~v7 + a2) >> v9;
  if (v8 < 4) {
    int v15 = v14 + 1;
  }
  else {
    int v15 = 1;
  }
  if (v8 >= 4) {
    unsigned int v16 = ~v7 + a2;
  }
  else {
    unsigned int v16 = (~(_BYTE)v7 + a2);
  }
  bzero(a1, v8);
  if (v8 == 1) {
    *a1 = v16;
  }
  else {
    *(_DWORD *)a1 = v16;
  }
  switch(v13)
  {
    case 1:
      a1[v8] = v15;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v15;
      break;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x19F0B0CB8);
    case 4:
      *(_DWORD *)&a1[v8] = v15;
      break;
    default:
      return;
  }
}

ValueMetadata *type metadata accessor for StoreFrontHeaderFieldProvider()
{
  return &type metadata for StoreFrontHeaderFieldProvider;
}

uint64_t sub_19F0B0CF0(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x1F4188298](sub_19EE45018, 0, 0);
}

JetEngine::ViewWillDisappearReason __swiftcall ViewWillDisappearReason.init(rawValue:)(JetEngine::ViewWillDisappearReason rawValue)
{
  JetEngine::ViewWillDisappearReason *v1 = rawValue;
  return rawValue;
}

uint64_t ViewWillDisappearReason.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static ViewWillDisappearReason.unspecified.getter(void *a1@<X8>)
{
  *a1 = 0x6669636570736E75;
  a1[1] = 0xEB00000000646569;
}

void static ViewWillDisappearReason.poppedFromNavigationStack.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x800000019F26C0F0;
}

void static ViewWillDisappearReason.sheetDismissed.getter(char *a1@<X8>)
{
  a1[15] = -18;
}

void static ViewWillDisappearReason.background.getter(void *a1@<X8>)
{
  *a1 = 0x756F72676B636162;
  a1[1] = 0xEA0000000000646ELL;
}

uint64_t dispatch thunk of ViewControllerPresenter.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ViewControllerPresenter.viewWillAppear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ViewControllerPresenter.viewDidAppear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ViewControllerPresenter.viewDidDisappear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ViewControllerPresenter.viewDidReceiveMemoryWarning()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

void JSConditionalReference.__allocating_init(value:ownedBy:)(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  sub_19EEBDBA4((uint64_t)a2, (uint64_t)v9);
  sub_19EE8FF40();
  if (swift_dynamicCast())
  {

    sub_19F19C844((unint64_t)"JetEngine/JSConditionalReference.swift", 0x26uLL, 2, 0x1AuLL);
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  id v5 = a1;
  uint64_t v6 = sub_19F1DD42C();
  id v7 = objc_msgSend(self, sel_managedValueWithValue_andOwner_, v5, v6);
  swift_unknownObjectRelease();

  if (v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);

    *(void *)(v4 + 16) = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t JSConditionalReference.init(value:ownedBy:)(void *a1, void *a2)
{
  sub_19F0B1010(a1, a2);
  uint64_t v4 = v3;

  return v4;
}

id JSConditionalReference.referent.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_value);
  return v1;
}

uint64_t JSConditionalReference.deinit()
{
  return v0;
}

void sub_19F0B1010(void *a1, void *a2)
{
  sub_19EEBDBA4((uint64_t)a2, (uint64_t)v9);
  sub_19EE8FF40();
  if (swift_dynamicCast())
  {

    sub_19F19C844((unint64_t)"JetEngine/JSConditionalReference.swift", 0x26uLL, 2, 0x1AuLL);
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  id v5 = a1;
  uint64_t v6 = sub_19F1DD42C();
  id v7 = objc_msgSend(self, sel_managedValueWithValue_andOwner_, v5, v6);
  swift_unknownObjectRelease();

  if (v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);
    *(void *)(v2 + 16) = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t method lookup function for JSConditionalReference(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for JSConditionalReference);
}

uint64_t dispatch thunk of JSConditionalReference.__allocating_init(value:ownedBy:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PipelineBackoff.nextWaitInterval()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PipelineBackoff.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of JSReference.referent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_19F0B118C()
{
  if (qword_1EB3927C8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB3925C0;
  uint64_t v0 = *(void *)algn_1EB3925C8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F24EB80;
  *(void *)(v2 + 32) = v1;
  *(void *)(v2 + 40) = v0;
  *(void *)(v2 + 48) = 0xD00000000000001FLL;
  *(void *)(v2 + 56) = 0x800000019F271010;
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19EE58DE8();
  uint64_t v3 = sub_19F1DBCCC();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1E946F4C8 = v3;
  unk_1E946F4D0 = v5;
  return result;
}

uint64_t _s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0()
{
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  uint64_t v0 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v1 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_19EEC4E5C(v0, &v7);
  os_unfair_lock_unlock(v1);
  int v2 = v7;
  swift_release();
  if (v2 == 2)
  {
    if ((os_variant_has_internal_content() & 1) == 0) {
      return 0;
    }
  }
  else if ((v2 & 1) == 0)
  {
    return 0;
  }
  if (qword_1EB392A90 != -1) {
    swift_once();
  }
  if (qword_1E946F428 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1E946F4C8;
  uint64_t v4 = unk_1E946F4D0;
  swift_bridgeObjectRetain();
  char v5 = sub_19EE56B20(v3, v4);
  swift_bridgeObjectRelease();
  if (v5 == 2) {
    return 0;
  }
  return v5 & 1;
}

ValueMetadata *type metadata accessor for ImpressionsTracking()
{
  return &type metadata for ImpressionsTracking;
}

uint64_t ClosureActionImplementation.init(scheduler:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EEBB420(a1, a2);
}

uint64_t ClosureActionImplementation.scheduler.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC4154(v1, a1);
}

uint64_t ClosureActionImplementation.scheduler.setter(long long *a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return sub_19EEBB420(a1, v1);
}

uint64_t (*ClosureActionImplementation.scheduler.modify())()
{
  return nullsub_1;
}

uint64_t ClosureActionImplementation.perform(_:asPartOf:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *a1;
  uint64_t v9 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DBF8);
  uint64_t v10 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  *(void *)(v10 + 16) = v11;
  *(void *)(v10 + 24) = v12;
  *(unsigned char *)(v10 + 32) = 0;
  sub_19EEC4154(v4, (uint64_t)v18);
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = *(void *)(a3 + 16);
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = v8;
  *(_OWORD *)(v15 + 40) = *(_OWORD *)(a1 + 1);
  *(void *)(v15 + 56) = v9;
  *(void *)(v15 + 64) = v10;
  unsigned int v16 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v14 + 8);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v16(sub_19F0B1718, v15, v13, v14);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  return v10;
}

void sub_19F0B1614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  void v5[3] = a5;
  (*(void (**)(uint64_t (*)(), void *, uint64_t))(*(void *)a1 + 104))(sub_19EED8BF8, v5, MEMORY[0x1E4FBC848] + 8);
  sub_19F1B0014(0);
}

uint64_t sub_19F0B16C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_19F0B1718()
{
  sub_19F0B1614(v0[3], v0[4], v0[5], v0[6], v0[7]);
}

_UNKNOWN **sub_19F0B172C()
{
  return &protocol witness table for ClosureAction;
}

uint64_t type metadata accessor for ClosureActionImplementation()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_19F0B1754(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_24:
    swift_retain();
    return v3;
  }
  unsigned int v9 = a2[v5];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v11 = v5;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_19;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_19:
        int v13 = (v12 | (v10 << (8 * v5))) + 2;
        unsigned int v9 = v12 + 2;
        if (v5 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 != 1)
  {
    uint64_t v14 = *((void *)a2 + 1);
    *uint64_t v3 = *(void *)a2;
    v3[1] = v14;
    *((unsigned char *)v3 + v5) = 0;
    goto LABEL_24;
  }
  (*(void (**)(void *))(v4 + 16))(a1);
  *((unsigned char *)v3 + v5) = 1;
  return v3;
}

unsigned __int8 *sub_19F0B18F4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 1;
    }
    else
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_19F0B1B10(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_19F0B1C48(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_19F0B1E60(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_19F0B1F94(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x19F0B215CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_19F0B2184(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_19F0B223C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t Result.init(trying:)@<X0>(void (*a1)(double)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Result();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  unsigned int v8 = (char *)&v10 - v7;
  a1(v6);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
}

uint64_t Result.init(trying:)(uint64_t a1, int *a2)
{
  v2[2] = a1;
  uint64_t v4 = type metadata accessor for Result();
  v2[3] = v4;
  v2[4] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  v2[5] = v5;
  unsigned int v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  double v6 = (void *)swift_task_alloc();
  v2[6] = v6;
  *double v6 = v2;
  v6[1] = sub_19F0B2574;
  return v8(v5);
}

uint64_t sub_19F0B2574()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0B2724;
  }
  else {
    uint64_t v2 = sub_19F0B2688;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0B2688()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_19F0B2724()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Result.unwrap()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = MEMORY[0x1F4188790](a1);
  double v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v6, v4);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return swift_willThrow();
  }
  else {
    return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a2, v6);
  }
}

uint64_t Result.map<A>(_:)@<X0>(void (*a1)(unsigned char *)@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  unsigned int v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v10 = MEMORY[0x1F4188790](v9);
  int v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(void *, uint64_t, double))(v13 + 16))(v12, v14, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a3 = *v12;
  }
  else
  {
    (*(void (**)(unsigned char *, void *, uint64_t))(v6 + 32))(v8, v12, v5);
    a1(v8);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
  type metadata accessor for Result();
  return swift_storeEnumTagMultiPayload();
}

char *sub_19F0B2AC8(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    unsigned int v8 = *(char **)a2;
    *(void *)uint64_t v3 = *(void *)a2;
    uint64_t v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)uint64_t v3 = v14;
      v3[v5] = 1;
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(a1);
      v3[v5] = 0;
    }
  }
  return v3;
}

unsigned __int8 *sub_19F0B2C78(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      char v18 = *(void **)a2;
      id v19 = v18;
      *(void *)a1 = v18;
      char v20 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v20 = 0;
    }
    a1[v7] = v20;
  }
  return a1;
}

void *sub_19F0B2E98(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(void *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_19F0B2FD0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_19F0B31E8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_19F0B331C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x19F0B34E4);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_19F0B350C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_19F0B35C4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

ValueMetadata *type metadata accessor for XpSendMethodFieldProvider()
{
  return &type metadata for XpSendMethodFieldProvider;
}

uint64_t sub_19F0B36AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a3;
  return MEMORY[0x1F4188298](sub_19EE3B988, 0, 0);
}

unint64_t CompoundActionImplementation.PerformError.localizedDescription.getter(uint64_t a1)
{
  (*(void (**)(long long *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(&v5, v1, a1);
  if (!v6) {
    return 0xD00000000000003ALL;
  }
  sub_19EEBB420(&v5, (uint64_t)v4);
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E488);
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  uint64_t v2 = 0;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return v2;
}

uint64_t CompoundActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F0B3B10(a1, a2, *(void *)(a3 + 16));
}

void sub_19F0B3800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_beginAccess();
  uint64_t v16 = *(void *)(a1 + 16);
  unint64_t v17 = *(void *)(a1 + 24);
  unint64_t v18 = *(void *)(v16 + 16);
  if (v17 == v18)
  {
    v24[0] = 0;
    long long v22 = 0u;
    long long v23 = 0u;
  }
  else
  {
    if (v17 >= v18)
    {
      __break(1u);
      return;
    }
    sub_19EEC4154(v16 + 40 * v17 + 32, (uint64_t)&v22);
    *(void *)(a1 + 24) = v17 + 1;
    if (*((void *)&v23 + 1))
    {
      sub_19EEBB420(&v22, (uint64_t)v27);
      *(void *)&long long v22 = a3;
      *((void *)&v22 + 1) = a4;
      *(void *)&long long v23 = a5;
      *(void *)&v26[0] = 0;
      uint64_t v19 = type metadata accessor for ActionDispatcher();
      ActionDispatcher.perform(_:withMetrics:asPartOf:)(v27, (__darwin_time_t *)v26, a6, v19);
      sub_19EEC4154(a7, (uint64_t)&v22);
      sub_19EEC4154((uint64_t)v27, (uint64_t)v26);
      char v20 = (void *)swift_allocObject();
      uint64_t v20[2] = a8;
      void v20[3] = a1;
      void v20[4] = a2;
      v20[5] = a3;
      v20[6] = a4;
      v20[7] = a5;
      v20[8] = a6;
      sub_19EEBB420(&v22, (uint64_t)(v20 + 9));
      sub_19EEBB420(v26, (uint64_t)(v20 + 14));
      *(void *)&long long v22 = sub_19F0B41D0;
      *((void *)&v22 + 1) = v20;
      *(void *)&long long v23 = sub_19F0B420C;
      *((void *)&v23 + 1) = a2;
      sub_19EEC4154(a7, (uint64_t)v24);
      char v25 = 0;
      id v21 = a5;
      swift_retain();
      swift_retain();
      swift_retain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_19EF54C24((uint64_t)&v22);
      sub_19EEBD664((uint64_t)&v22, &qword_1E946D1C0);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
      return;
    }
  }
  sub_19EEBD664((uint64_t)&v22, qword_1E946D0B8);
  sub_19F1B0014(0);
}

void sub_19F0B3A28(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (*a1)
  {
    type metadata accessor for CompoundActionImplementation.PerformError();
    swift_getWitnessTable();
    unsigned int v10 = (void *)swift_allocError();
    sub_19EEC4154(a9, v11);
    sub_19F07FC34(v10);
  }
  else
  {
    sub_19F0B3800(a2, a3, a4, a5, a6, a7, a8, a10);
  }
}

uint64_t sub_19F0B3B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F0B3B10(a1, a2, *(void *)(a3 + 16));
}

uint64_t sub_19F0B3B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  type metadata accessor for ActionDispatcher();
  BaseObjectGraph._injectIfAvailable<A>(_:)();
  if (v27[0])
  {
    uint64_t v6 = v27[0];
    uint64_t v21 = v27[1];
    uint64_t v22 = a2;
    int v7 = v28;
    if (v28)
    {
      unint64_t v25 = sub_19EEA5F34();
      uint64_t v26 = &protocol witness table for OS_dispatch_queue;
      *(void *)&long long v24 = v28;
      sub_19EEBB420(&v24, (uint64_t)v27);
      unsigned int v8 = v29;
      long long v23 = v30;
      char v20 = v7;
    }
    else
    {
      char v20 = 0;
      unsigned int v8 = &type metadata for SyncTaskScheduler;
      uint64_t v29 = &type metadata for SyncTaskScheduler;
      uint64_t v30 = &protocol witness table for SyncTaskScheduler;
      long long v23 = &protocol witness table for SyncTaskScheduler;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DBF8);
    uint64_t v11 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v13 = swift_allocObject();
    *(_DWORD *)(v13 + 16) = 0;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    *(void *)(v11 + 16) = v13;
    *(void *)(v11 + 24) = v14;
    *(unsigned char *)(v11 + 32) = 0;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v5;
    *(void *)(v15 + 24) = 0;
    __swift_project_boxed_opaque_existential_1(v27, (uint64_t)v8);
    sub_19EEC4154((uint64_t)v27, (uint64_t)&v24);
    uint64_t v16 = (void *)swift_allocObject();
    id v16[2] = a3;
    void v16[3] = v15;
    v16[4] = v11;
    uint64_t v16[5] = v6;
    v16[6] = v21;
    v16[7] = v7;
    v16[8] = v22;
    sub_19EEBB420(&v24, (uint64_t)(v16 + 9));
    unint64_t v17 = (void (*)(void, void, void, void))v23[1];
    id v18 = v20;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_19EE6D340(v6, v21, v7);
    swift_retain();
    v17(sub_19F0B4148, v16, v8, v23);
    sub_19EFD13E4(v6, v21, v7);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  }
  else
  {
    type metadata accessor for CompoundActionImplementation.PerformError();
    swift_getWitnessTable();
    uint64_t v9 = swift_allocError();
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v10 + 16) = 0u;
    *(void *)(v10 + 32) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DBF8);
    uint64_t v11 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v12 = swift_allocObject();
    *(_DWORD *)(v12 + 16) = 0;
    *(void *)(v11 + 16) = v12;
    *(void *)(v11 + 24) = v9;
    *(unsigned char *)(v11 + 32) = 2;
  }
  return v11;
}

uint64_t sub_19F0B3DDC()
{
  return swift_getWitnessTable();
}

_UNKNOWN **sub_19F0B3DF8()
{
  return &protocol witness table for CompoundAction;
}

uint64_t type metadata accessor for CompoundActionImplementation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0B3E1C(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    return __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  return a1;
}

uint64_t sub_19F0B3E34(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t sub_19F0B3EB0(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t sub_19F0B3F68(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_19F0B3FB8(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_19F0B4008(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

double sub_19F0B4064(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CompoundActionImplementation.PerformError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0B40A8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0B40E0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  return MEMORY[0x1F4186498](v0, 112, 7);
}

void sub_19F0B4148()
{
  sub_19F0B3800(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), v0 + 72, *(void *)(v0 + 16));
}

uint64_t sub_19F0B4160()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 112);
  return MEMORY[0x1F4186498](v0, 152, 7);
}

void sub_19F0B41D0(unsigned char *a1)
{
  sub_19F0B3A28(a1, v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], (uint64_t)(v1 + 9), (uint64_t)(v1 + 14), v1[2]);
}

uint64_t ShelfModel.layoutReferenceItem.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(a1 + 40))();
  if (*(void *)(v3 + 16))
  {
    sub_19EEC4154(v3 + 32, a2);
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t ShelfModel.isHomogenousForLayout.getter(uint64_t a1, uint64_t a2)
{
  long long v4 = *(uint64_t (**)(void))(a2 + 40);
  uint64_t v5 = v4();
  if (!*(void *)(v5 + 16))
  {
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_19EEC4154(v5 + 32, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1))
  {
LABEL_10:
    sub_19F0B4400((uint64_t)&v13);
    return 1;
  }
  sub_19EEBB420(&v13, (uint64_t)v16);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  unint64_t v8 = *(void *)(result + 16);
  unint64_t v9 = v8 != 0;
  if (v8 == v9)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v12 = 1;
LABEL_12:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    return v12;
  }
  uint64_t v10 = result + 40 * (v8 != 0) + 32;
  while (v9 < v8)
  {
    sub_19EEC4154(v10, (uint64_t)&v13);
    __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
    uint64_t v11 = swift_getDynamicType();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
    if (v11 != DynamicType)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = 0;
      goto LABEL_12;
    }
    ++v9;
    v10 += 40;
    if (v8 == v9) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_19F0B4400(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474168);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of ShelfModel.presentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ShelfModel.items.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MultiCache.withValues<A>(forKey:perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of MultiCache.removeAll(keepingCapacity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of MultiCacheValueCollection.insert(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MultiCacheValueCollection.removeAll(where:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of MultiCacheValueCollection.removeAll(keepingCapacity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t JSONDateFormat.date(from:)@<X0>(uint64_t a1@<X8>)
{
  id v2 = sub_19EE87268();
  uint64_t v3 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setDateFormat_, v3);

  long long v4 = (void *)sub_19F1DBD4C();
  id v5 = objc_msgSend(v2, sel_dateFromString_, v4);

  if (v5)
  {
    sub_19F1DB54C();

    uint64_t v6 = sub_19F1DB57C();
    int v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a1;
    uint64_t v10 = 0;
  }
  else
  {

    uint64_t v11 = sub_19F1DB57C();
    int v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a1;
    uint64_t v10 = 1;
  }
  return v7(v9, v10, 1, v8);
}

uint64_t static JSONDateFormat.allValues.getter()
{
  if (qword_1E946F0A0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

unint64_t JSONDateFormat.rawValue.getter()
{
  if (*v0) {
    return 0xD00000000000001FLL;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

uint64_t JSONDateFormat.string(from:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v2 - 8);
  long long v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_19F1DB57C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EF87BFC(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_19EEBD664((uint64_t)v4, qword_1EB3923B0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    id v10 = sub_19EE87268();
    uint64_t v11 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setDateFormat_, v11);

    uint64_t v12 = (void *)sub_19F1DB4DC();
    id v13 = objc_msgSend(v10, sel_stringFromDate_, v12);

    uint64_t v9 = sub_19F1DBD7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

JetEngine::JSONDateFormat_optional __swiftcall JSONDateFormat.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_19F1DD0FC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_19F0B49DC(char *a1, char *a2)
{
  return sub_19F03B488(*a1, *a2);
}

uint64_t sub_19F0B49E8()
{
  return sub_19F187440();
}

uint64_t sub_19F0B49F0()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0B4A68()
{
  return sub_19EFB677C();
}

JetEngine::JSONDateFormat_optional sub_19F0B4A70(Swift::String *a1)
{
  return JSONDateFormat.init(rawValue:)(*a1);
}

void sub_19F0B4A7C(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD00000000000001FLL;
  }
  else {
    unint64_t v2 = 0xD00000000000001ALL;
  }
  unint64_t v3 = 0x800000019F2682A0;
  if (*v1) {
    unint64_t v3 = 0x800000019F2682C0;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_19F0B4AC8()
{
  unint64_t result = qword_1E9474170;
  if (!qword_1E9474170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474170);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JSONDateFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F0B4BE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONDateFormat()
{
  return &type metadata for JSONDateFormat;
}

NSURLRequestCachePolicy __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSURLRequestCachePolicy.init(_:)(JSValue a1)
{
  id v2 = sub_19F0B52F4(a1.super.isa);

  return (NSURLRequestCachePolicy)v2;
}

unint64_t NSURLRequestCachePolicy.init(deserializing:using:)(uint64_t a1)
{
  return sub_19F0B4F8C(a1);
}

void sub_19F0B4C78(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = sub_19F0B52F4(a1);

  if (!v2) {
    *a2 = v5;
  }
}

unint64_t sub_19F0B4CC0@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_19F0B4F8C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void *NSURLRequestCachePolicy.init(from:)(void *a1)
{
  return sub_19F0B50EC(a1);
}

uint64_t NSURLRequestCachePolicy.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392310);
  sub_19F0B53D0();
  sub_19F1DD51C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

void *sub_19F0B4DF0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_19F0B50EC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_19F0B4E1C(void *a1)
{
  return NSURLRequestCachePolicy.encode(to:)(a1);
}

uint64_t sub_19F0B4E38(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x746C7561666564 && a2 == 0xE700000000000000) {
    return 0;
  }
  if (sub_19F1DD44C()) {
    return 0;
  }
  if (a1 == 0x61632D6563726F66 && a2 == 0xEB00000000656863 || (sub_19F1DD44C() & 1) != 0) {
    return 2;
  }
  if (a1 == 0x65686361632D6F6ELL && a2 == 0xE800000000000000) {
    return 1;
  }
  return sub_19F1DD44C() & 1;
}

unint64_t sub_19F0B4F8C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_19EEBF040(a1, (uint64_t)v14);
  uint64_t v2 = v15;
  if (!v15)
  {
    sub_19EEBF108((uint64_t)v14);
    goto LABEL_6;
  }
  uint64_t v3 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  uint64_t v6 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  if (!v6)
  {
LABEL_6:
    sub_19EF5B580();
    swift_allocError();
    *id v10 = 0;
    unint64_t v9 = 0x40000001EF139FF0uLL;
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t v6 = 0xE000000000000000;
LABEL_8:
    v10[1] = v6;
    _OWORD v10[2] = v9;
    void v10[3] = v11;
    swift_willThrow();
    sub_19EEC3418(a1);
    return v9;
  }
  uint64_t v7 = sub_19F0B4E38(v4, v6);
  if (v8)
  {
    type metadata accessor for CachePolicy(0);
    unint64_t v9 = v12 | 0x8000000000000000;
    sub_19EF5B580();
    swift_allocError();
    uint64_t v11 = 0;
    *id v10 = v4;
    goto LABEL_8;
  }
  unint64_t v9 = v7;
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_19F0B50EC(void *a1)
{
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (v1) {
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  uint64_t v4 = sub_19F1DD45C();
  uint64_t v6 = sub_19F0B4E38(v4, v5);
  if (v7)
  {
    uint64_t v8 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v10 = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD86C();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v12, "Unknown case ");
    v12[7] = -4864;
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    uint64_t v3 = v12;
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, *MEMORY[0x1E4FBBA78], v8);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return v3;
  }
  uint64_t v3 = (void *)v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

id sub_19F0B52F4(void *a1)
{
  id result = objc_msgSend(a1, sel_toString);
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = sub_19F1DBD7C();
    uint64_t v6 = v5;

    uint64_t v7 = sub_19F0B4E38(v4, v6);
    LOBYTE(v4) = v8;
    swift_bridgeObjectRelease();
    if (v4)
    {
      sub_19EF600C0();
      swift_allocError();
      JSError.init(badValue:expected:)(a1, v9);
      swift_willThrow();
    }
    return (id)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_19F0B53D0()
{
  unint64_t result = qword_1E94722F8;
  if (!qword_1E94722F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB392310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94722F8);
  }
  return result;
}

void sub_19F0B543C()
{
}

void sub_19F0B5488()
{
}

uint64_t sub_19F0B54D8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  sub_19F1DCD0C();
  swift_getAssociatedConformanceWitness();
  return sub_19F1DCC8C();
}

uint64_t sub_19F0B5608()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_19F0B5664@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC4154(v1 + 16, a1);
}

uint64_t sub_19F0B5670()
{
  return __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
}

uint64_t sub_19F0B5678()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_19F0B56B0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 112) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 128), a1);
  return v2;
}

uint64_t sub_19F0B5744()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 120) + 16))(*(void *)(*(void *)v0 + 112));
}

uint64_t sub_19F0B57BC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 112) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 128));
}

uint64_t sub_19F0B5818()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 112) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 128));
}

uint64_t sub_19F0B5870()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 112) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 128));
  return swift_deallocClassInstance();
}

uint64_t DiffableLens.value.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

uint64_t DiffableLens.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(**(void **)v2 + 96))(v5);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t DiffableLens.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(**(void **)v3 + 96))(v8);
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v12[0] = v12[1];
  return ReadOnlyLens.init(_:)((uint64_t)v12, *(void *)(*MEMORY[0x1E4FBC5F0] + v5 + 8), a3);
}

uint64_t DiffableLens.id.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 88))();
}

uint64_t DiffableLens.hash(into:)()
{
  (*(void (**)(void *__return_ptr))(**(void **)v0 + 88))(v2);
  _s9JetEngine15CodeAnyHashableV4hash4intoys6HasherVz_tF_0();
  return sub_19EE7760C((uint64_t)v2);
}

uint64_t static DiffableLens.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = (*(void *(**)(void *__return_ptr))(**(void **)a1 + 88))(v6);
  (*(void (**)(void *__return_ptr, void *))(*(void *)v2 + 88))(v5, v3);
  LOBYTE(v2) = MEMORY[0x19F3C6F50](v6, v5);
  sub_19EE7760C((uint64_t)v5);
  sub_19EE7760C((uint64_t)v6);
  return v2 & 1;
}

uint64_t DiffableLens.description.getter(uint64_t a1)
{
  double v2 = MEMORY[0x1F4188790](a1);
  (*(void (**)(double))(**(void **)v1 + 96))(v2);
  return sub_19F1DBE0C();
}

uint64_t DiffableLens.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F0B5E04()
{
  return sub_19F1DD78C();
}

uint64_t DiffableLens<A>.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19F0B5F58(a1, (void (*)(void))type metadata accessor for IdentifiableValueBox, sub_19F0B54D4, a2);
}

{
  return sub_19F0B5F58(a1, (void (*)(void))type metadata accessor for ComponentModelValueBox, sub_19F0B54D4, a2);
}

uint64_t type metadata accessor for IdentifiableValueBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t DiffableLens<A>.init(_:)@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for AnyComponentModelValueBox();
  uint64_t v4 = swift_allocObject();
  uint64_t result = sub_19EEBB420(a1, v4 + 16);
  *a2 = v4;
  return result;
}

uint64_t type metadata accessor for AnyComponentModelValueBox()
{
  uint64_t result = qword_1E946EEE0;
  if (!qword_1E946EEE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_19F0B5F58@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  a2(0);
  uint64_t result = a3(a1);
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for ComponentModelValueBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0B5FC4()
{
  return MEMORY[0x1E4FBB968];
}

uint64_t sub_19F0B5FD0()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for AnyValueBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0B6008()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19F0B604C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DiffableLens()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0B60F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (void *)sub_19F1DBD4C();
  uint64_t v7 = (void *)sub_19F1DBD4C();
  if (a4) {
    a4 = (void *)sub_19F1DBD4C();
  }
  double v8 = (void *)sub_19F1DBD4C();
  id v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_localization_, v6, v7, a4, v8);

  uint64_t v10 = sub_19F1DBD7C();
  uint64_t v12 = v11;

  if (!v10 && v12 == 0xE100000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

JetEngine::EmptyAction __swiftcall EmptyAction.init(actionMetrics:)(JetEngine::EmptyAction actionMetrics)
{
  _OWORD *v1 = *(_OWORD *)actionMetrics.actionMetrics.data._rawValue;
  return actionMetrics;
}

double EmptyAction.init(deserializing:using:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v8);
  uint64_t v10 = v6;
  ActionMetrics.init(deserializing:using:)((uint64_t)v8, &v10, (uint64_t *)&v9);
  sub_19EEC3418(a1);
  if (!v3)
  {
    double result = *(double *)&v9;
    *a3 = v9;
  }
  return result;
}

uint64_t EmptyAction.actionMetrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 EmptyAction.actionMetrics.setter(__n128 *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *a1;
  __n128 *v1 = *a1;
  return result;
}

uint64_t (*EmptyAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t sub_19F0B6360()
{
  return 0x654D6E6F69746361;
}

uint64_t sub_19F0B6384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_19F1DD44C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19F0B6440(uint64_t a1)
{
  unint64_t v2 = sub_19F0B6600();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F0B647C(uint64_t a1)
{
  unint64_t v2 = sub_19F0B6600();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EmptyAction.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474178);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F0B6600();
  sub_19F1DD8FC();
  long long v9 = *v2;
  sub_19F046118();
  sub_19F1DD2AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_19F0B6600()
{
  unint64_t result = qword_1E9474180;
  if (!qword_1E9474180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474180);
  }
  return result;
}

uint64_t EmptyAction.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474188);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F0B6600();
  sub_19F1DD8AC();
  if (!v2)
  {
    sub_19F046530();
    sub_19F1DD1BC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19F0B67C0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return EmptyAction.init(from:)(a1, a2);
}

uint64_t sub_19F0B67D8(void *a1)
{
  return EmptyAction.encode(to:)(a1);
}

double sub_19F0B67F0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v8);
  uint64_t v10 = v6;
  ActionMetrics.init(deserializing:using:)((uint64_t)v8, &v10, (uint64_t *)&v9);
  sub_19EEC3418(a1);
  if (!v3)
  {
    double result = *(double *)&v9;
    *a3 = v9;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyAction()
{
  return &type metadata for EmptyAction;
}

unsigned char *storeEnumTagSinglePayload for EmptyAction.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F0B6940);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyAction.CodingKeys()
{
  return &type metadata for EmptyAction.CodingKeys;
}

unint64_t sub_19F0B697C()
{
  unint64_t result = qword_1E9474190;
  if (!qword_1E9474190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474190);
  }
  return result;
}

unint64_t sub_19F0B69D4()
{
  unint64_t result = qword_1E9474198;
  if (!qword_1E9474198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474198);
  }
  return result;
}

unint64_t sub_19F0B6A2C()
{
  unint64_t result = qword_1E94741A0;
  if (!qword_1E94741A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94741A0);
  }
  return result;
}

id sub_19F0B6A80()
{
  id result = objc_msgSend(objc_allocWithZone((Class)_JEAtomicFlag), sel_initWithInitialValue_, 0);
  qword_1E94741A8 = (uint64_t)result;
  return result;
}

Swift::Void __swiftcall JSPromiseLogExecutorError()()
{
  if (qword_1E94701C8 != -1) {
    swift_once();
  }
  if (objc_msgSend((id)qword_1E94741A8, sel_compareWithValue_andExchangeWithValue_, 0, 1))
  {
    if (qword_1E94701D0 != -1) {
      swift_once();
    }
    uint64_t v0 = (void *)qword_1E9498B90;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_19F24DBC0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v2 + 16) = xmmword_19F24EAD0;
    uint64_t v14 = v3;
    unint64_t v12 = 0xD000000000000048;
    unint64_t v13 = 0x800000019F271240;
    long long v10 = 0u;
    long long v11 = 0u;
    id v4 = v0;
    sub_19EEC3E70((uint64_t)&v12, (uint64_t)&v10);
    *(unsigned char *)(v2 + 64) = 0;
    long long v5 = v11;
    *(_OWORD *)(v2 + 32) = v10;
    *(_OWORD *)(v2 + 48) = v5;
    *(void *)(v1 + 32) = v2;
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
    uint64_t v14 = v3;
    unint64_t v12 = 0xD00000000000004ALL;
    unint64_t v13 = 0x800000019F271290;
    long long v10 = 0u;
    long long v11 = 0u;
    sub_19EEC3E70((uint64_t)&v12, (uint64_t)&v10);
    *(unsigned char *)(v6 + 64) = 0;
    long long v7 = v11;
    *(_OWORD *)(v6 + 32) = v10;
    *(_OWORD *)(v6 + 48) = v7;
    *(void *)(v1 + 40) = v6;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_19F24EAD0;
    uint64_t v14 = v3;
    unint64_t v12 = 0xD000000000000052;
    unint64_t v13 = 0x800000019F2712E0;
    long long v10 = 0u;
    long long v11 = 0u;
    sub_19EEC3E70((uint64_t)&v12, (uint64_t)&v10);
    *(unsigned char *)(v8 + 64) = 0;
    long long v9 = v11;
    *(_OWORD *)(v8 + 32) = v10;
    *(_OWORD *)(v8 + 48) = v9;
    *(void *)(v1 + 48) = v8;
    *(void *)&long long v10 = v4;
    LOBYTE(v12) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v1, (JetEngine::LogMessageLevel)&v12);

    swift_bridgeObjectRelease();
  }
}

id sub_19F0B6D00()
{
  if (qword_1EB393240 != -1) {
    swift_once();
  }
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019F2697A0;
  id result = sub_19EE7DF10(v1, 0x73696D6F7250534ALL, 0xE900000000000065);
  qword_1E9498B90 = (uint64_t)result;
  return result;
}

uint64_t sub_19F0B6DA0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_19F0B6DD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)sub_19F1DD03C();
    long long v9 = (void *)(a4 + 16);
    if (result)
    {
LABEL_3:
      if ((a3 & 0xC000000000000001) != 0)
      {
        id v10 = (id)MEMORY[0x19F3C7060](0, a3);
      }
      else
      {
        if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
        id v10 = *(id *)(a3 + 32);
      }
      long long v11 = v10;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (*v9)
      {
        sub_19EF600C0();
        unint64_t v12 = (void *)swift_allocError();
        uint64_t v14 = v13;
        swift_retain();
        JSError.init(_:)(v11, v14);
        sub_19F08048C(v12);

        swift_release();
      }
      swift_beginAccess();
      *long long v9 = 0;
      swift_release();
      id result = objc_msgSend(self, sel_valueWithUndefinedInContext_, a1);
      if (result)
      {
        id v15 = result;

        return v15;
      }
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    long long v9 = (void *)(a4 + 16);
    if (v7) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*v9)
  {
LABEL_14:
    swift_beginAccess();
    *long long v9 = 0;
    swift_release();
    id result = objc_msgSend(self, sel_valueWithUndefinedInContext_, a1);
    id v15 = result;
    if (result) {
      return v15;
    }
    goto LABEL_19;
  }
  uint64_t v16 = self;
  swift_retain();
  id result = objc_msgSend(v16, sel_valueWithUndefinedInContext_, a1);
  if (result)
  {
    unint64_t v17 = result;
    sub_19EE9086C(result);

    swift_release();
    goto LABEL_14;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t JSPromise.promise.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392220);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 32) = 0;
  sub_19EEB32E0(v0);
  return v0;
}

uint64_t sub_19F0B70BC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_19F0B70F4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_19F0B6DD8(a1, a2, a3, v3);
}

uint64_t JSONObject.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v19, v20);
    uint64_t v16 = a2;
    if (sub_19F1DD4AC())
    {
      id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 40) = sub_19EEBDC10(0, (unint64_t *)&qword_1EB392CF8);
      *(void *)(v6 + 16) = v5;
      uint64_t v7 = &off_1EF13D8F8;
      uint64_t v8 = &type metadata for FoundationValue;
LABEL_4:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      *uint64_t v16 = v6;
      v16[1] = 0;
      id v16[2] = 0;
      void v16[3] = (uint64_t)v8;
      v16[4] = (uint64_t)v7;
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    }
    __swift_project_boxed_opaque_existential_1(v19, v20);
    char v10 = sub_19F1DD46C();
    long long v11 = (void **)MEMORY[0x1E4F1CFC8];
    if (v10) {
      long long v11 = (void **)MEMORY[0x1E4F1CFD0];
    }
    unint64_t v12 = *v11;
    if (*v11)
    {
      type metadata accessor for CFBoolean(0);
      *((void *)&v18 + 1) = v13;
      *(void *)&long long v17 = v12;
      if (v13)
      {
        uint64_t v6 = swift_allocObject();
        sub_19EEBDC00(&v17, (_OWORD *)(v6 + 16));
        id v14 = v12;
        uint64_t v8 = &type metadata for FoundationValue;
        uint64_t v7 = &off_1EF13D8F8;
        goto LABEL_4;
      }
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    id v15 = v12;
    sub_19EEBD664((uint64_t)&v17, &qword_1EB393260);
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    goto LABEL_4;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_19F0B7AA4()
{
  unint64_t result = qword_1E946D460;
  if (!qword_1E946D460)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946D458);
    sub_19EFAA6E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946D460);
  }
  return result;
}

unint64_t sub_19F0B7B20()
{
  unint64_t result = qword_1E94741C0[0];
  if (!qword_1E94741C0[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E94741B8);
    sub_19EFAA6E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E94741C0);
  }
  return result;
}

uint64_t sub_19F0B7B94()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t JSONObject.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_19F1DCDEC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v51 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  BOOL v49 = (char *)&v47 - v9;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CEA8);
  uint64_t v50 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  char v55 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DB1BC();
  uint64_t v53 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v3;
  sub_19EEC3ED8(v3, (uint64_t)&v68, (uint64_t *)&unk_1E946FD20);
  uint64_t v14 = v69;
  if (!v69)
  {
    sub_19EEBD664((uint64_t)&v68, (uint64_t *)&unk_1E946FD20);
    long long v73 = 0u;
    long long v74 = 0u;
    goto LABEL_10;
  }
  uint64_t v47 = v6;
  uint64_t v48 = v5;
  uint64_t v15 = v70;
  __swift_project_boxed_opaque_existential_1(&v68, v69);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 96))(&v73, v14, v15);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
  if (!*((void *)&v74 + 1))
  {
LABEL_10:
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8DC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v68, v69);
    sub_19F1DD52C();
    long long v17 = &v68;
    goto LABEL_20;
  }
  sub_19EEC3ED8((uint64_t)&v73, (uint64_t)v72, &qword_1EB393260);
  sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
  if (swift_dynamicCast())
  {
    uint64_t v16 = (void *)v65;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8DC();
    if (*MEMORY[0x1E4F1CFD0] && v16 == (void *)*MEMORY[0x1E4F1CFD0]
      || *MEMORY[0x1E4F1CFC8] && v16 == (void *)*MEMORY[0x1E4F1CFC8])
    {
      objc_msgSend(v16, sel_BOOLValue);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v68, v69);
      sub_19F1DD4EC();
    }
    else
    {
      objc_msgSend(v16, sel_doubleValue);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v68, v69);
      sub_19F1DD4FC();
    }

    goto LABEL_17;
  }
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8DC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v68, v69);
    sub_19F1DD4EC();
LABEL_17:
    long long v18 = &v68;
    goto LABEL_18;
  }
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8DC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v68, v69);
    sub_19F1DD4FC();
    goto LABEL_17;
  }
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8DC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v68, v69);
    sub_19F1DD4DC();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_19EEBDC10(0, (unint64_t *)&qword_1EB391C00);
  if (swift_dynamicCast())
  {
    uint64_t v20 = *(char **)&v62[0];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8CC();
    char v55 = v20;
    sub_19F1DC9EC();
    sub_19F1DB1AC();
    if (v64)
    {
      while (1)
      {
        *((void *)&v66 + 1) = &type metadata for FoundationValue;
        uint64_t v67 = &off_1EF13D8F8;
        *(void *)&long long v65 = swift_allocObject();
        sub_19EEBDC00(&v63, (_OWORD *)(v65 + 16));
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v68, v69);
        sub_19EFAA85C();
        sub_19F1DD3EC();
        if (v2) {
          break;
        }
        sub_19EEC3418((uint64_t)&v65);
        sub_19F1DB1AC();
        if (!v64) {
          goto LABEL_28;
        }
      }

      sub_19EEC3418((uint64_t)&v65);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v11);
    }
    else
    {
LABEL_28:
      (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v11);
    }
    goto LABEL_17;
  }
  sub_19EEBDC10(0, &qword_1EB392CF0);
  if (!swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8BC();
    *(void *)&long long v68 = 0;
    *((void *)&v68 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    v72[0] = 0xD000000000000024;
    v72[1] = 0x800000019F271370;
    uint64_t v26 = v52;
    sub_19EEC3ED8(v52, (uint64_t)&v68, (uint64_t *)&unk_1E946FD20);
    uint64_t v27 = v69;
    if (v69)
    {
      uint64_t v28 = v70;
      __swift_project_boxed_opaque_existential_1(&v68, v69);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v28 + 96))(&v65, v27, v28);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v68, (uint64_t *)&unk_1E946FD20);
      long long v65 = 0u;
      long long v66 = 0u;
    }
    uint64_t v29 = v47;
    sub_19EEBD664((uint64_t)&v65, &qword_1EB393260);
    sub_19F1DBEFC();
    uint64_t v30 = v51;
    sub_19F1DCDAC();
    uint64_t v31 = sub_19F1DCDFC();
    swift_allocError();
    uint64_t v33 = v32;
    uint64_t v34 = (char *)v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568) + 48);
    uint64_t v33[3] = (uint64_t)&type metadata for JSONObject;
    uint64_t v35 = swift_allocObject();
    *uint64_t v33 = v35;
    sub_19EEC355C(v26, v35 + 16);
    long long v36 = v34;
    uint64_t v37 = v48;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v36, v30, v48);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x1E4FBBAA0], v31);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v37);
    return sub_19EEBD664((uint64_t)&v73, &qword_1EB393260);
  }
  uint64_t v21 = v71;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF6EA7C();
  sub_19F1DD8FC();
  uint64_t v51 = v21;
  uint64_t v22 = sub_19F1DC77C();
  swift_retain();
  sub_19F1DC78C();
  sub_19EEBDC4C((uint64_t)&v65, (uint64_t)&v68, &qword_1E946FC90);
  if (!v69)
  {
LABEL_42:
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v54);
    goto LABEL_19;
  }
  uint64_t v53 = v22;
  while (1)
  {
    sub_19EEBDC00(&v68, &v63);
    sub_19EEBDC00(&v70, v62);
    sub_19EEBDBA4((uint64_t)&v63, (uint64_t)v61);
    if (!swift_dynamicCast()) {
      break;
    }
    uint64_t v23 = v59;
    uint64_t v24 = v60;
    *((void *)&v66 + 1) = &type metadata for FoundationValue;
    uint64_t v67 = &off_1EF13D8F8;
    *(void *)&long long v65 = swift_allocObject();
    sub_19EEBDBA4((uint64_t)v62, v65 + 16);
    uint64_t v56 = v23;
    uint64_t v57 = v24;
    char v58 = 1;
    sub_19EFAA85C();
    sub_19F1DD2AC();
    if (v2)
    {
      swift_bridgeObjectRelease();

      goto LABEL_48;
    }
    swift_bridgeObjectRelease();
    sub_19EEC3418((uint64_t)&v65);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v62);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v63);
LABEL_34:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v61);
    sub_19F1DC78C();
    sub_19EEBDC4C((uint64_t)&v65, (uint64_t)&v68, &qword_1E946FC90);
    if (!v69) {
      goto LABEL_42;
    }
  }
  if (!swift_dynamicCast())
  {
    swift_release();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8BC();
    *(void *)&long long v65 = 0;
    *((void *)&v65 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    *(void *)&long long v65 = 0xD000000000000022;
    *((void *)&v65 + 1) = 0x800000019F2713A0;
    __swift_project_boxed_opaque_existential_1(&v63, v64);
    swift_getDynamicType();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    char v38 = v49;
    sub_19F1DCDAC();
    uint64_t v39 = sub_19F1DCDFC();
    swift_allocError();
    BOOL v41 = v40;
    uint64_t v42 = (char *)v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568) + 48);
    long long v41[3] = (uint64_t)&type metadata for JSONObject;
    uint64_t v43 = swift_allocObject();
    *BOOL v41 = v43;
    sub_19EEC355C(v52, v43 + 16);
    uint64_t v44 = v47;
    char v45 = v42;
    uint64_t v46 = v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v45, v38, v48);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, *MEMORY[0x1E4FBBAA0], v39);
    swift_willThrow();

    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v46);
    goto LABEL_49;
  }
  uint64_t v25 = v59;
  *((void *)&v66 + 1) = &type metadata for FoundationValue;
  uint64_t v67 = &off_1EF13D8F8;
  *(void *)&long long v65 = swift_allocObject();
  sub_19EEBDBA4((uint64_t)v62, v65 + 16);
  uint64_t v56 = v25;
  uint64_t v57 = 0;
  char v58 = 0;
  sub_19EFAA85C();
  sub_19F1DD2AC();
  if (!v2)
  {
    sub_19EEC3418((uint64_t)&v65);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v62);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v63);
    goto LABEL_34;
  }

LABEL_48:
  swift_release_n();
  sub_19EEC3418((uint64_t)&v65);
LABEL_49:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v62);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v63);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v54);
  long long v18 = (long long *)v61;
LABEL_18:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
LABEL_19:
  long long v17 = (long long *)v72;
LABEL_20:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return sub_19EEBD664((uint64_t)&v73, &qword_1EB393260);
}

uint64_t sub_19F0B89DC()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F0B8A1C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return JSONObject.init(from:)(a1, a2);
}

uint64_t sub_19F0B8A34(void *a1)
{
  return JSONObject.encode(to:)(a1);
}

uint64_t Lockable.locked<A>(perform:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 8);
  objc_msgSend((id)v8(a3, a5), sel_lock);
  uint64_t v9 = swift_unknownObjectRelease();
  a1(v9);
  objc_msgSend((id)v8(a3, a5), sel_unlock);
  return swift_unknownObjectRelease();
}

uint64_t dispatch thunk of Lockable.lock.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t StatePath<A>.starts(with:)()
{
  return sub_19F1DC09C() & 1;
}

uint64_t StatePath.init<A>(components:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  double v7 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  uint64_t v9 = sub_19F1DC2CC();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v9;
  return result;
}

uint64_t StatePath.init(component:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_19F0B9C5C(a2, a2);
  uint64_t v6 = *(void *)(a2 - 8);
  swift_allocObject();
  uint64_t v7 = sub_19F1DC18C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v8, a1, a2);
  uint64_t result = sub_19EFF4808(v7);
  *a3 = result;
  return result;
}

uint64_t StatePath.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_19F1DC1CC();
  *a1 = result;
  return result;
}

uint64_t StatePath.appending(component:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  double v6 = MEMORY[0x1F4188790](a1);
  uint64_t v13 = *v3;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v5, v6);
  uint64_t v10 = sub_19F1DC27C();
  swift_bridgeObjectRetain();
  sub_19F1DC23C();
  uint64_t v12 = v13;
  swift_getWitnessTable();
  return StatePath.init<A>(components:)((uint64_t)&v12, v10, a3);
}

uint64_t StatePath.appending<A>(components:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double v4 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = *v2;
  (*(void (**)(char *, double))(v6 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v7 = sub_19F1DC27C();
  swift_bridgeObjectRetain();
  sub_19F1DC22C();
  uint64_t v9 = v10;
  swift_getWitnessTable();
  return StatePath.init<A>(components:)((uint64_t)&v9, v7, a2);
}

uint64_t StatePath.appending(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v6 = *v1;
  uint64_t v3 = sub_19F1DC27C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_19F1DC22C();
  uint64_t v5 = v6;
  return StatePath.init<A>(components:)((uint64_t)&v5, v3, a1);
}

uint64_t StatePath.description.getter(uint64_t a1)
{
  *(void *)&long long v10 = *v1;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = sub_19F1DC27C();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x19F3C6370](&v7, v3, WitnessTable);
  uint64_t v9 = v7;
  *(void *)(swift_allocObject() + 16) = v2;
  sub_19F1DCD1C();
  swift_getWitnessTable();
  sub_19F1DD0CC();
  swift_release();
  swift_bridgeObjectRelease();
  long long v7 = v10;
  uint64_t v8 = v11;
  sub_19F1DCF2C();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v5 = sub_19F1DBCCC();
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_19F0B92DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double v3 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, double))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t result = sub_19F1DBE0C();
  *a2 = result;
  a2[1] = v7;
  return result;
}

uint64_t sub_19F0B93A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_19F0B9438()
{
  return 0x6E656E6F706D6F63;
}

uint64_t sub_19F0B9454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F0B93A4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19F0B9484(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_19F0B94D8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t StatePath<A>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[1] = *(void *)(a2 + 16);
  uint64_t v12 = a4;
  type metadata accessor for StatePath.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_19F1DD2BC();
  uint64_t v13 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8FC();
  uint64_t v15 = v9;
  sub_19F1DC27C();
  uint64_t v14 = v12;
  swift_getWitnessTable();
  sub_19F1DD2AC();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v6);
}

uint64_t StatePath<A>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v12 = a3;
  uint64_t v13 = a2;
  type metadata accessor for StatePath.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_19F1DD1EC();
  uint64_t v11 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8AC();
  if (!v3)
  {
    uint64_t v9 = v11;
    uint64_t v8 = v12;
    sub_19F1DC27C();
    uint64_t v14 = v13;
    swift_getWitnessTable();
    sub_19F1DD1BC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v5);
    *uint64_t v8 = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19F0B98C4@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  return StatePath<A>.init(from:)(a1, *(void *)(a2 - 8), a3);
}

uint64_t sub_19F0B98E4(void *a1, uint64_t a2, uint64_t a3)
{
  return StatePath<A>.encode(to:)(a1, a2, a3, *(void *)(a3 - 16));
}

uint64_t static StatePath<A>.== infix(_:_:)()
{
  return sub_19F1DC2AC();
}

uint64_t sub_19F0B990C()
{
  return static StatePath<A>.== infix(_:_:)();
}

uint64_t StatePath<A>.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DCD0C();
  StatePath.init(component:)((uint64_t)v9, a2, &v12);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  *a4 = v12;
  return result;
}

uint64_t StatePath<A>.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_19F1DC29C();
  return swift_bridgeObjectRelease();
}

uint64_t StatePath<A>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F0B9ABC()
{
  return StatePath<A>.hashValue.getter();
}

uint64_t sub_19F0B9AC4()
{
  return StatePath<A>.hash(into:)();
}

uint64_t sub_19F0B9ACC()
{
  return sub_19F1DD78C();
}

uint64_t StatePath<A>.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_19F1DB7AC();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v6);
  sub_19F0B9CFC();
  uint64_t v8 = sub_19F1DC02C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  *a2 = v8;
  return result;
}

void StatePath<A>.indexPath.getter()
{
  swift_bridgeObjectRetain();
  JUMPOUT(0x19F3C5A90);
}

uint64_t sub_19F0B9C5C(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  }
  else
  {
    return sub_19F1DD30C();
  }
}

uint64_t sub_19F0B9CCC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F0B9CDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19F0B92DC(a1, a2);
}

uint64_t type metadata accessor for StatePath.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_19F0B9CFC()
{
  unint64_t result = qword_1E946D6C0[0];
  if (!qword_1E946D6C0[0])
  {
    sub_19F1DB7AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E946D6C0);
  }
  return result;
}

unsigned char *sub_19F0B9D54(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F0B9DF0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F0B9E18()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0B9E34()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0B9E50()
{
  return swift_getWitnessTable();
}

double static NetRequestPropertyCollectionBuilder.buildExpression<A, B>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9B8);
  uint64_t v5 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
  *(void *)(v5 + 32) = *(void *)(*MEMORY[0x1E4FBC5F0] + v4 + 8);
  *(void *)(v5 + 40) = a3;
  return result;
}

uint64_t static NetRequestPropertyCollectionBuilder.buildBlock(_:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_19EE5B9A4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NetRequestProperty.value(byDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a2;
  sub_19EEC355C(a1, (uint64_t)v9);
  v8[0] = v6;
  swift_bridgeObjectRetain();
  uint64_t v10 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v8);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  void v8[3] = (uint64_t)&type metadata for _JSONObjectDecoder;
  _DWORD v8[4] = sub_19EE70560();
  v8[0] = swift_allocObject();
  sub_19EE70470((uint64_t)v9, v8[0] + 16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a4 + 32))(v8, a3, a4);
  sub_19EE703B4((uint64_t)v9);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
}

uint64_t sub_19F0BA05C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return static NetRequestProperty.value(byDeserializing:using:)(a1, a2, a3, a4);
}

uint64_t sub_19F0BA074(void *a1, uint64_t a2, uint64_t a3)
{
  return static NetRequestProperty.value(from:)(a1, a2, a3);
}

uint64_t static NetRequestProperty.value(from:)(void *a1, uint64_t a2, uint64_t a3)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_19F1DD88C();
  if (!v3)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    sub_19EFAA6E8();
    sub_19F1DD49C();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v8 = sub_19F1DD89C();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v8);
    v9[0] = v9[1];
    (*(void (**)(unsigned char *, void *, uint64_t, uint64_t))(a3 + 24))(v10, v9, a2, a3);
    swift_bridgeObjectRelease();
    sub_19EEC3418((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  }
  return result;
}

void static JSONContext.Property<A>.requestProperties.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x800000019F2699A0;
}

uint64_t sub_19F0BA1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_19F1DCAAC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v23[-v10];
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v23[-v14];
  sub_19EEBDBA4(a1, (uint64_t)v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474248);
  int v16 = swift_dynamicCast();
  long long v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v16)
  {
    v17(v11, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 40))(v15, v22, a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, AssociatedTypeWitness);
  }
  else
  {
    v17(v11, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v19 = sub_19F1DCDFC();
    swift_allocError();
    uint64_t v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568);
    void v21[3] = swift_getMetatypeMetadata();
    *uint64_t v21 = AssociatedTypeWitness;
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBAA0], v19);
    return swift_willThrow();
  }
}

double static NetRequestPropertyCollectionBuilder.buildExpression(_:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9B8);
  uint64_t v4 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  return result;
}

uint64_t sub_19F0BA538(uint64_t result, unint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v5 = result;
    double result = swift_bridgeObjectRetain();
    if (v2 <= a2)
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = v5 + 32;
    uint64_t v9 = (uint64_t)(v3 + 4);
    while (1)
    {
      while (1)
      {
        sub_19EE28C88(v8 + 400 * a2, (uint64_t)v24);
        sub_19EE28C88((uint64_t)v24, (uint64_t)v25);
        double result = sub_19EF8675C((uint64_t)v25);
        if ((uint64_t)(a2 + 1) < (uint64_t)v2) {
          ++a2;
        }
        else {
          a2 = 0;
        }
        uint64_t v10 = v6 + 1;
        BOOL v11 = __OFADD__(v6, 1);
        if (result != 1) {
          break;
        }
        if (v11) {
          goto LABEL_43;
        }
        if (v10 == v2)
        {
          double result = swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        ++v6;
        if (a2 >= v2) {
          goto LABEL_42;
        }
      }
      if (v11) {
        goto LABEL_44;
      }
      uint64_t v22 = v5;
      if (v7)
      {
        sub_19EE28C88((uint64_t)v24, (uint64_t)v23);
        sub_19F0BAAF0((uint64_t)v23);
        uint64_t v12 = v3;
      }
      else
      {
        unint64_t v13 = v3[3];
        if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_47;
        }
        int64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
        if (v14 <= 1) {
          uint64_t v15 = 1;
        }
        else {
          uint64_t v15 = v14;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3907B0);
        uint64_t v12 = (void *)swift_allocObject();
        uint64_t v16 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 400;
        void v12[2] = v15;
        v12[3] = 2 * v16;
        uint64_t v17 = v3[3] >> 1;
        uint64_t v9 = (uint64_t)&v12[50 * v17 + 4];
        uint64_t v7 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (v3[2])
        {
          if (v12 >= v3 && v12 + 4 < &v3[50 * v17 + 4] && v12 == v3)
          {
            sub_19EE28C88((uint64_t)v24, (uint64_t)v23);
            sub_19F0BAAF0((uint64_t)v23);
          }
          else
          {
            sub_19EE28C88((uint64_t)v24, (uint64_t)v23);
            sub_19F0BAAF0((uint64_t)v23);
            memmove(v12 + 4, v3 + 4, 400 * v17);
          }
          _OWORD v3[2] = 0;
        }
        else
        {
          sub_19EE28C88((uint64_t)v24, (uint64_t)v23);
          sub_19F0BAAF0((uint64_t)v23);
        }
        swift_release();
      }
      double result = sub_19EE28C88((uint64_t)v24, (uint64_t)v23);
      BOOL v18 = __OFSUB__(v7--, 1);
      if (v18) {
        goto LABEL_45;
      }
      double result = sub_19EE83A30((uint64_t)v23, v9);
      if (v10 == v2) {
        break;
      }
      v9 += 400;
      uint64_t v6 = v10;
      uint64_t v3 = v12;
      uint64_t v5 = v22;
      if (a2 >= v2) {
        goto LABEL_42;
      }
    }
    double result = swift_bridgeObjectRelease();
    uint64_t v3 = v12;
  }
  else
  {
    uint64_t v7 = 0;
  }
LABEL_37:
  unint64_t v19 = v3[3];
  if (v19 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v20 = v19 >> 1;
  BOOL v18 = __OFSUB__(v20, v7);
  uint64_t v21 = v20 - v7;
  if (!v18)
  {
    _OWORD v3[2] = v21;
    return (uint64_t)v3;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_19F0BA7E0(uint64_t result, unint64_t a2)
{
  int64_t v2 = *(void *)(result + 16);
  uint64_t v3 = (char *)MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v5 = result + 32;
    double result = swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = v3 + 32;
    while (a2 < v2)
    {
      uint64_t v9 = (uint64_t *)(v5 + 16 * a2);
      uint64_t v10 = v9[1];
      if (v10)
      {
        if ((uint64_t)(a2 + 1) < v2) {
          ++a2;
        }
        else {
          a2 = 0;
        }
        BOOL v12 = __OFADD__(v7++, 1);
        if (v12) {
          goto LABEL_42;
        }
        uint64_t v27 = *v9;
        if (v6)
        {
          double result = swift_bridgeObjectRetain();
          BOOL v12 = __OFSUB__(v6--, 1);
          if (v12) {
            goto LABEL_43;
          }
        }
        else
        {
          unint64_t v13 = *((void *)v3 + 3);
          if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_45;
          }
          int64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
          if (v14 <= 1) {
            uint64_t v15 = 1;
          }
          else {
            uint64_t v15 = v14;
          }
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
          uint64_t v16 = (char *)swift_allocObject();
          int64_t v17 = _swift_stdlib_malloc_size(v16);
          uint64_t v18 = v17 - 32;
          if (v17 < 32) {
            uint64_t v18 = v17 - 17;
          }
          uint64_t v19 = v18 >> 4;
          *((void *)v16 + 2) = v15;
          *((void *)v16 + 3) = 2 * (v18 >> 4);
          unint64_t v20 = v16 + 32;
          uint64_t v21 = *((void *)v3 + 3) >> 1;
          uint64_t v8 = &v16[16 * v21 + 32];
          uint64_t v22 = (v19 & 0x7FFFFFFFFFFFFFFFLL) - v21;
          if (*((void *)v3 + 2))
          {
            uint64_t v23 = v3 + 32;
            if (v16 < v3 || v20 >= &v23[16 * v21] || v16 != v3) {
              memmove(v20, v23, 16 * v21);
            }
            swift_bridgeObjectRetain();
            *((void *)v3 + 2) = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          double result = swift_release();
          uint64_t v3 = v16;
          BOOL v12 = __OFSUB__(v22, 1);
          uint64_t v6 = v22 - 1;
          if (v12) {
            goto LABEL_43;
          }
        }
        *(void *)uint64_t v8 = v27;
        *((void *)v8 + 1) = v10;
        v8 += 16;
        if (v7 == v2) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v11 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_41;
        }
        if ((uint64_t)(a2 + 1) < v2) {
          ++a2;
        }
        else {
          a2 = 0;
        }
        ++v7;
        if (v11 == v2)
        {
LABEL_34:
          double result = swift_bridgeObjectRelease();
          goto LABEL_36;
        }
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v6 = 0;
LABEL_36:
  unint64_t v24 = *((void *)v3 + 3);
  if (v24 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v25 = v24 >> 1;
  BOOL v12 = __OFSUB__(v25, v6);
  uint64_t v26 = v25 - v6;
  if (!v12)
  {
    *((void *)v3 + 2) = v26;
    return (uint64_t)v3;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_19F0BA9E0()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t dispatch thunk of static NetRequestProperty.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static NetRequestProperty.value(byDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of static NetRequestProperty.value(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of static NetRequestProperty.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of static NetRequestPropertyScope.allProperties.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for NetRequestPropertyCollectionBuilder()
{
  return &type metadata for NetRequestPropertyCollectionBuilder;
}

ValueMetadata *type metadata accessor for NetRequestPropertyLookup()
{
  return &type metadata for NetRequestPropertyLookup;
}

uint64_t sub_19F0BAAF0(uint64_t a1)
{
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  sub_19EE83BD4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void **)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((unint64_t *)&v11 + 1));
  return a1;
}

uint64_t dispatch thunk of JetPackResourceBundle.data(withName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of JetPackResourceBundle.fileData(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of JetPackResourceBundle.contentsOfDirectory(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

id JSValue.isFunction.getter()
{
  return sub_19F0BAC34(MEMORY[0x1E4F308F8]);
}

id JSValue.isConstructor.getter()
{
  return sub_19F0BAC34(MEMORY[0x1E4F308F0]);
}

id sub_19F0BAC34(uint64_t (*a1)(const OpaqueJSContext *, const OpaqueJSValue *))
{
  id result = objc_msgSend(v1, sel_context);
  if (result)
  {
    long long v4 = result;
    long long v5 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

    long long v6 = (const OpaqueJSValue *)objc_msgSend(v1, sel_JSValueRef);
    if (JSValueGetType(v5, v6) == kJSTypeObject) {
      return (id)a1(v5, v6);
    }
    else {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

JSObjectRef JSValue.isJSONObject.getter()
{
  JSObjectRef result = (JSObjectRef)objc_msgSend(v0, sel_context);
  if (result)
  {
    int64_t v2 = result;
    long long v3 = (const OpaqueJSContext *)[(OpaqueJSValue *)result JSGlobalContextRef];

    long long v4 = (const OpaqueJSValue *)objc_msgSend(v0, sel_JSValueRef);
    JSObjectRef result = (JSObjectRef)JSValueIsObject(v3, v4);
    if (result)
    {
      JSObjectRef result = JSValueToObject(v3, v4, 0);
      if (result)
      {
        long long v5 = result;
        if (JSObjectIsFunction(v3, result)) {
          return 0;
        }
        else {
          return (JSObjectRef)!JSObjectIsConstructor(v3, v5);
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19F0BAD94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  double v5 = MEMORY[0x1F4188790](v4 - 8);
  long long v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_name, v5);
  uint64_t v9 = sub_19F1DBD7C();
  uint64_t v32 = v10;
  uint64_t v33 = v9;

  id v11 = objc_msgSend(a1, sel_value);
  uint64_t v12 = sub_19F1DBD7C();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(a1, sel_expiresDate);
  if (v15)
  {
    uint64_t v16 = v15;
    sub_19F1DB54C();

    uint64_t v17 = sub_19F1DB57C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 0, 1, v17);
  }
  else
  {
    uint64_t v18 = sub_19F1DB57C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v7, 1, 1, v18);
  }
  id v19 = objc_msgSend(a1, sel_domain);
  uint64_t v20 = sub_19F1DBD7C();
  uint64_t v22 = v21;

  id v23 = objc_msgSend(a1, sel_path);
  uint64_t v24 = sub_19F1DBD7C();
  uint64_t v26 = v25;

  uint64_t v27 = v32;
  *a2 = v33;
  a2[1] = v27;
  a2[2] = v12;
  a2[3] = v14;
  uint64_t v28 = (int *)type metadata accessor for JSCookie();
  uint64_t result = sub_19EF5F380((uint64_t)v7, (uint64_t)a2 + v28[6]);
  uint64_t v30 = (uint64_t *)((char *)a2 + v28[7]);
  *uint64_t v30 = v20;
  v30[1] = v22;
  uint64_t v31 = (uint64_t *)((char *)a2 + v28[8]);
  *uint64_t v31 = v24;
  v31[1] = v26;
  return result;
}

void sub_19F0BAFB8(void *a1@<X0>, void *a2@<X8>)
{
  BOOL v49 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_19F1DB57C();
  uint64_t v53 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v47 = (char *)&v45 - v10;
  id v11 = self;
  id v12 = objc_msgSend(v11, sel_valueWithNewObjectInContext_, a1);
  if (!v12)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v13 = v12;
  uint64_t v14 = v2[1];
  uint64_t v51 = *v2;
  uint64_t v52 = v14;
  swift_bridgeObjectRetain();
  id v15 = a1;
  id v16 = objc_msgSend(v11, sel_valueWithObject_inContext_, sub_19F1DD62C(), v15);
  swift_unknownObjectRelease();

  if (!v16)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v48 = v3;
  id v17 = v16;
  uint64_t v18 = (void *)sub_19F1DBD4C();
  objc_msgSend(v13, sel_setValue_forProperty_, v17, v18);

  uint64_t v19 = v2[3];
  uint64_t v51 = v2[2];
  uint64_t v52 = v19;
  id v20 = v15;
  swift_bridgeObjectRetain();
  id v21 = objc_msgSend(v11, sel_valueWithObject_inContext_, sub_19F1DD62C(), v20);
  swift_unknownObjectRelease();

  if (!v21)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v22 = v21;
  id v23 = (void *)sub_19F1DBD4C();
  objc_msgSend(v13, sel_setValue_forProperty_, v22, v23);

  uint64_t v24 = (int *)type metadata accessor for JSCookie();
  uint64_t v25 = (uint64_t *)((char *)v2 + v24[7]);
  uint64_t v26 = v25[1];
  uint64_t v51 = *v25;
  uint64_t v52 = v26;
  id v27 = v20;
  swift_bridgeObjectRetain();
  id v28 = objc_msgSend(v11, sel_valueWithObject_inContext_, sub_19F1DD62C(), v27);
  swift_unknownObjectRelease();

  if (!v28)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v29 = v28;
  uint64_t v30 = (void *)sub_19F1DBD4C();
  objc_msgSend(v13, sel_setValue_forProperty_, v29, v30);

  uint64_t v31 = (uint64_t *)((char *)v2 + v24[8]);
  uint64_t v32 = v31[1];
  uint64_t v51 = *v31;
  uint64_t v52 = v32;
  id v33 = v27;
  swift_bridgeObjectRetain();
  id v34 = objc_msgSend(v11, sel_valueWithObject_inContext_, sub_19F1DD62C(), v33);
  swift_unknownObjectRelease();

  if (!v34)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v35 = v34;
  long long v36 = (void *)sub_19F1DBD4C();
  objc_msgSend(v13, sel_setValue_forProperty_, v35, v36);

  sub_19EF87BFC((uint64_t)v2 + v24[6], (uint64_t)v7);
  uint64_t v37 = v53;
  uint64_t v38 = v50;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v7, 1, v50) == 1)
  {
    sub_19EF87C64((uint64_t)v7);
LABEL_10:
    uint64_t v44 = v49;
    v44[3] = sub_19EE8FF40();
    v44[4] = &protocol witness table for JSValue;
    *uint64_t v44 = v13;
    return;
  }
  uint64_t v39 = v47;
  (*(void (**)(void))(v37 + 32))();
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v46, v39, v38);
  id v40 = v33;
  id v41 = objc_msgSend(v11, sel_valueWithObject_inContext_, sub_19F1DD62C(), v40);
  swift_unknownObjectRelease();

  if (v41)
  {
    id v42 = v41;
    uint64_t v43 = (void *)sub_19F1DBD4C();
    objc_msgSend(v13, sel_setValue_forProperty_, v42, v43);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
}

void sub_19F0BB540(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t type metadata accessor for JSCookie()
{
  uint64_t result = qword_1E946E3E8;
  if (!qword_1E946E3E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_19F0BB5A4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_19F1DB57C();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    id v21 = (uint64_t *)((char *)v4 + v17);
    id v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *id v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_19F0BB778(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_19F1DB57C();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_19F0BB864(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_19F1DB57C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_19F0BB9E8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB57C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_19F0BBC00(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_19F1DB57C();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

void *sub_19F0BBD38(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_19F1DB57C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19F0BBF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F0BBF24);
}

uint64_t sub_19F0BBF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_19F0BBFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F0BBFEC);
}

uint64_t sub_19F0BBFEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_19F0BC098()
{
  sub_19F0BC134();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_19F0BC134()
{
  if (!qword_1E946E480)
  {
    sub_19F1DB57C();
    unint64_t v0 = sub_19F1DCAAC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E946E480);
    }
  }
}

uint64_t sub_19F0BC190(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  if (!*(void *)(v2[2] + 16))
  {
LABEL_4:
    if (!v5) {
      return 0;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  sub_19EEBD400(a1, a2);
  if (v7)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471728);
    swift_getExtendedExistentialTypeMetadata();
    if (swift_dynamicCast()) {
      return v10;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  if (!v5) {
    return 0;
  }
LABEL_7:
  if (!*(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) + 16))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_19EEBD400(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470D70);
  swift_getExtendedExistentialTypeMetadata();
  if (swift_dynamicCast()) {
    return v10;
  }
  return 0;
}

void static JSONContext.Property<A>.intentTypes.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x800000019F26A560;
}

unint64_t AnyIntentTypes.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t result = sub_19EFB51F8(MEMORY[0x1E4FBC860]);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

unint64_t AnyIntentTypes.init()@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_19EFB51F8(MEMORY[0x1E4FBC860]);
  *a1 = 0;
  a1[1] = 0;
  a1[2] = result;
  return result;
}

uint64_t AnyIntentTypes.register<A>(_:forKind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *(void *)(v6 + 16);
  *(void *)(v6 + 16) = 0x8000000000000000;
  sub_19EFBC8D8(a1, a5, a6, a2, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 16) = v14;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t AnyIntentTypes.registering<A>(_:forKind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = *(void *)(v6 + 16);
  *(_OWORD *)a6 = *(_OWORD *)v6;
  *(void *)(a6 + 16) = v12;
  swift_bridgeObjectRetain();
  return AnyIntentTypes.register<A>(_:forKind:)(a1, a2, a3, v13, a4, a5);
}

uint64_t AnyIntentTypes.register<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 24))(v13, a2, a4);
  uint64_t v8 = v13[0];
  uint64_t v9 = v13[1];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(v4 + 16);
  *(void *)(v4 + 16) = 0x8000000000000000;
  sub_19EFBC8D8(a1, a3, a4, v8, v9, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 16) = v12;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t AnyIntentTypes.registering<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(v5 + 16);
  *(_OWORD *)a5 = *(_OWORD *)v5;
  *(void *)(a5 + 16) = v10;
  swift_bridgeObjectRetain();
  return AnyIntentTypes.register<A>(_:)(a1, a2, a3, a4);
}

uint64_t assignWithCopy for AnyIntentTypes(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnyIntentTypes(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AnyIntentTypes()
{
  return &type metadata for AnyIntentTypes;
}

uint64_t type metadata accessor for IDSyncPerfMeasurement()
{
  return self;
}

uint64_t sub_19F0BC71C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0BC754()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t Unstable.AccountHandle.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id Unstable.AccountHandle.forReading.getter()
{
  return *v0;
}

uint64_t Unstable.AccountHandle.forWriting.getter()
{
  objc_msgSend(*v0, sel_copy);
  sub_19F1DCBEC();
  swift_unknownObjectRelease();
  sub_19F0BC810();
  swift_dynamicCast();
  return v2;
}

unint64_t sub_19F0BC810()
{
  unint64_t result = qword_1E946CD00;
  if (!qword_1E946CD00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946CD00);
  }
  return result;
}

uint64_t sub_19F0BC850(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CDA8);
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(_DWORD *)(v3 + 16) = 0;
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 48) = 0;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v2;
  uint64_t v10 = &type metadata for SyncTaskScheduler;
  uint64_t v11 = &protocol witness table for SyncTaskScheduler;
  v7[0] = sub_19F0BE6A8;
  v7[1] = v5;
  _OWORD v7[2] = sub_19F0BE6B8;
  void v7[3] = v2;
  sub_19EEC4154((uint64_t)v9, (uint64_t)v8);
  unsigned char v8[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF56BD8((uint64_t)v7);
  sub_19EEBD664((uint64_t)v7, &qword_1E946CB98);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  return v2;
}

uint64_t sub_19F0BC988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a4;
  sub_19F0BE708((uint64_t)v13, v6 + 24);
  uint64_t v11 = &type metadata for SyncTaskScheduler;
  uint64_t v12 = &protocol witness table for SyncTaskScheduler;
  v8[0] = sub_19F0BE770;
  v8[1] = v6;
  long long v8[2] = sub_19F0BE810;
  void v8[3] = a4;
  sub_19EEC4154((uint64_t)v10, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EF58A68(a1);
  swift_retain();
  swift_retain();
  sub_19EF5698C((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, &qword_1E946CBA0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  swift_release();
  return swift_release();
}

uint64_t sub_19F0BCAA0(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v38 = MEMORY[0x1E4FBC868];
  uint64_t v30 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(63 - v3) >> 6;
  uint64_t v39 = v37;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v29) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v11);
    int64_t v13 = v7 + 1;
    if (!v12)
    {
      int64_t v13 = v7 + 2;
      if (v7 + 2 >= v29) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v30 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v7 + 3;
        if (v7 + 3 >= v29) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v30 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v7 + 4;
          if (v7 + 4 >= v29) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v30 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v7 = v13;
LABEL_25:
    int v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v10, (uint64_t)v39);
    *(void *)&long long v36 = v16;
    *((void *)&v36 + 1) = v17;
    long long v34 = v36;
    v35[0] = v37[0];
    v35[1] = v37[1];
    sub_19EEBDBA4((uint64_t)v35, (uint64_t)v33);
    long long v18 = v34;
    v31[2] = v34;
    sub_19EEBDC00(v35, v32);
    sub_19EEBDC00(v33, v31);
    unint64_t v19 = *(void *)(v2 + 16);
    if (*(void *)(v2 + 24) <= v19)
    {
      uint64_t v20 = v19 + 1;
      swift_bridgeObjectRetain();
      sub_19EEBD714(v20, 1);
      uint64_t v2 = v38;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_19F1DD72C();
    sub_19F1DBE9C();
    uint64_t result = sub_19F1DD78C();
    uint64_t v21 = v2 + 64;
    uint64_t v22 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v2 + 64 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v23) & ~*(void *)(v2 + 64 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v21 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v8 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v21 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_OWORD *)(*(void *)(v2 + 48) + 16 * v8) = v18;
    sub_19EEBDC00(v31, (_OWORD *)(*(void *)(v2 + 56) + 32 * v8));
    ++*(void *)(v2 + 16);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  }
  int64_t v14 = v7 + 5;
  if (v7 + 5 >= v29)
  {
LABEL_37:
    sub_19EEBDCB0();
    return v2;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v7 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v29) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_19F0BCE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  v3[30] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CBB8);
    uint64_t v8 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v9 = swift_allocObject();
    *(_DWORD *)(v9 + 16) = 0;
    uint64_t v10 = MEMORY[0x1E4FBC868];
    *(void *)(v8 + 16) = v9;
    *(void *)(v8 + 24) = v10;
    *(unsigned char *)(v8 + 32) = 1;
  }
  int64_t v11 = (void *)swift_allocObject();
  void v11[2] = v3;
  v11[3] = a1;
  void v11[4] = a3;
  void v11[5] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v12 = sub_19F0BDDD8((uint64_t)sub_19F0BE7EC, (uint64_t)v11);
  swift_release();
  swift_release();
  v3[28] = v12;
  return swift_release();
}

uint64_t sub_19F0BCF74(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3907E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_19F0BE314(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  swift_arrayDestroy();
  uint64_t v9 = sub_19F0BD3A4(v8, a4);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_19F0BD04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v4;
  v4[31] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v9 = a2;
    if (v4[28])
    {
LABEL_3:
      swift_retain();
      swift_retain();
      sub_19F0BE064((uint64_t)sub_19F0BD288, 0);
      swift_release();
      goto LABEL_6;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CBB8);
    uint64_t v9 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v10 = swift_allocObject();
    *(_DWORD *)(v10 + 16) = 0;
    uint64_t v11 = MEMORY[0x1E4FBC868];
    *(void *)(v9 + 16) = v10;
    *(void *)(v9 + 24) = v11;
    *(unsigned char *)(v9 + 32) = 1;
    if (v4[28]) {
      goto LABEL_3;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946CBA8);
  uint64_t v12 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 16) = v13;
  *(unsigned char *)(v12 + 40) = 1;
  swift_retain();
LABEL_6:
  sub_19F0BC850(v9);
  int64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = v4;
  void v14[3] = a1;
  v14[4] = a3;
  v14[5] = v8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_19F0BE5FC;
  *(void *)(v15 + 24) = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v16 = sub_19F0BE1B0((uint64_t)sub_19F0BE640, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4[29] = v16;
  return swift_release();
}

uint64_t sub_19F0BD288@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F0BD2BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3907E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  *(void *)(inited + 32) = a4;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_19F0BE314(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  swift_arrayDestroy();
  v14[0] = v8;
  v14[1] = v9;
  uint64_t v12 = sub_19F0BD4EC(v11, a5, v14);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_19F0BD3A4(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391BD0);
    uint64_t v4 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v5 = swift_allocObject();
    *(_DWORD *)(v5 + 16) = 0;
    *(void *)(v4 + 16) = v5;
    *(void *)(v4 + 24) = a1;
    *(void *)(v4 + 32) = MEMORY[0x1E4FBC860];
    *(unsigned char *)(v4 + 40) = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 200);
    uint64_t v6 = *(void *)(v2 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_19EFF1EB4((uint64_t)&unk_1EF1477F0);
    swift_arrayDestroy();
    v11[0] = v7;
    v11[1] = v6;
    char v12 = 0;
    uint64_t v13 = a1;
    uint64_t v14 = v8;
    uint64_t v15 = sub_19F0BE404(a1);
    unint64_t v10 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
    uint64_t v4 = MetricsPipeline.process(_:using:)((uint64_t)v11, (uint64_t *)&v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_19F0BD4EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *a3;
  if (!*a3)
  {
    uint64_t v19 = *(void *)(v3 + 200);
    uint64_t v18 = *(void *)(v3 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_19EFF1EB4((uint64_t)&unk_1EF147820);
    swift_arrayDestroy();
    *(void *)&long long v87 = v19;
    *((void *)&v87 + 1) = v18;
    char v88 = 0;
    uint64_t v89 = a1;
    uint64_t v90 = v20;
    uint64_t v91 = sub_19F0BE404(a1);
    goto LABEL_63;
  }
  uint64_t v86 = MEMORY[0x1E4FBC870];
  uint64_t v8 = sub_19F1DBD7C();
  uint64_t v10 = v9;
  if (!*(void *)(v6 + 16))
  {
    long long v84 = 0u;
    long long v85 = 0u;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v11 = v8;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_19EEBD400(v11, v10);
  if ((v13 & 1) == 0)
  {
    long long v84 = 0u;
    long long v85 = 0u;
    goto LABEL_9;
  }
  sub_19EEBDBA4(*(void *)(v6 + 56) + 32 * v12, (uint64_t)&v84);
  swift_bridgeObjectRelease();
  if (*((void *)&v85 + 1))
  {
    sub_19EEBDC00(&v84, &v87);
    uint64_t v14 = sub_19F1DBD7C();
    uint64_t v16 = v15;
    sub_19EEBDBA4((uint64_t)&v87, (uint64_t)&v84);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(&v84, v14, v16, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
    goto LABEL_11;
  }
LABEL_10:
  sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
LABEL_11:
  uint64_t v21 = sub_19F1DBD7C();
  if (*(void *)(v6 + 16) && (unint64_t v23 = sub_19EEBD400(v21, v22), (v24 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v6 + 56) + 32 * v23, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v85 + 1))
  {
    sub_19EEBDC00(&v84, &v87);
    uint64_t v25 = sub_19F1DBD7C();
    uint64_t v27 = v26;
    sub_19EEBDBA4((uint64_t)&v87, (uint64_t)&v84);
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(&v84, v25, v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  }
  uint64_t v29 = sub_19F1DBD7C();
  if (*(void *)(v6 + 16) && (unint64_t v31 = sub_19EEBD400(v29, v30), (v32 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v6 + 56) + 32 * v31, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v85 + 1))
  {
    sub_19EEBDC00(&v84, &v87);
    uint64_t v33 = sub_19F1DBD7C();
    uint64_t v35 = v34;
    sub_19EEBDBA4((uint64_t)&v87, (uint64_t)&v84);
    char v36 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(&v84, v33, v35, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  }
  uint64_t v37 = sub_19F1DBD7C();
  if (*(void *)(v6 + 16) && (unint64_t v39 = sub_19EEBD400(v37, v38), (v40 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v6 + 56) + 32 * v39, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v85 + 1))
  {
    sub_19EEBDC00(&v84, &v87);
    uint64_t v41 = sub_19F1DBD7C();
    uint64_t v43 = v42;
    sub_19EEBDBA4((uint64_t)&v87, (uint64_t)&v84);
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(&v84, v41, v43, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  }
  uint64_t v45 = sub_19F1DBD7C();
  if (*(void *)(v6 + 16) && (unint64_t v47 = sub_19EEBD400(v45, v46), (v48 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v6 + 56) + 32 * v47, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v85 + 1))
  {
    sub_19EEBDC00(&v84, &v87);
    uint64_t v49 = sub_19F1DBD7C();
    uint64_t v51 = v50;
    sub_19EEBDBA4((uint64_t)&v87, (uint64_t)&v84);
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(&v84, v49, v51, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  }
  uint64_t v53 = sub_19F1DBD7C();
  if (*(void *)(v6 + 16) && (unint64_t v55 = sub_19EEBD400(v53, v54), (v56 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v6 + 56) + 32 * v55, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v85 + 1))
  {
    sub_19EEBDC00(&v84, &v87);
    uint64_t v57 = sub_19F1DBD7C();
    uint64_t v59 = v58;
    sub_19EEBDBA4((uint64_t)&v87, (uint64_t)&v84);
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(&v84, v57, v59, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  }
  uint64_t v61 = sub_19F1DBD7C();
  if (*(void *)(v6 + 16) && (unint64_t v63 = sub_19EEBD400(v61, v62), (v64 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v6 + 56) + 32 * v63, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v85 + 1))
  {
    sub_19EEBDC00(&v84, &v87);
    if (a2 == 1)
    {
      uint64_t v65 = sub_19F1DBD7C();
      uint64_t v67 = v66;
      sub_19EEBDBA4((uint64_t)&v87, (uint64_t)&v84);
      char v68 = swift_isUniquelyReferenced_nonNull_native();
      sub_19EE7DA20(&v84, v65, v67, v68);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
  }
  uint64_t v69 = sub_19F1DBD7C();
  if (*(void *)(v6 + 16) && (unint64_t v71 = sub_19EEBD400(v69, v70), (v72 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v6 + 56) + 32 * v71, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v85 + 1))
  {
    sub_19EEBDC00(&v84, &v87);
    uint64_t v73 = sub_19F1DBD7C();
    uint64_t v75 = v74;
    sub_19EEBDBA4((uint64_t)&v87, (uint64_t)&v84);
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(&v84, v73, v75, v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v84, &qword_1EB393260);
    sub_19EEC0294((uint64_t *)&v87, 1682535268, 0xE400000000000000);
    swift_bridgeObjectRelease();
  }
  uint64_t v78 = *(void *)(v4 + 200);
  uint64_t v77 = *(void *)(v4 + 208);
  uint64_t v79 = v86;
  swift_bridgeObjectRetain();
  uint64_t v80 = swift_bridgeObjectRetain();
  uint64_t v81 = sub_19F0BE404(v80);
  swift_bridgeObjectRelease();
  *(void *)&long long v87 = v78;
  *((void *)&v87 + 1) = v77;
  char v88 = 0;
  uint64_t v89 = a1;
  uint64_t v90 = v79;
  uint64_t v91 = v81;
LABEL_63:
  *(void *)&long long v84 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  uint64_t v82 = MetricsPipeline.process(_:using:)((uint64_t)&v87, (uint64_t *)&v84);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v82;
}

uint64_t sub_19F0BDD54()
{
  sub_19EE98E9C(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MediaActivityPipelineHandler()
{
  return self;
}

uint64_t sub_19F0BDDD8(uint64_t a1, uint64_t a2)
{
  char v13 = &type metadata for SyncTaskScheduler;
  uint64_t v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391BD0);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 0;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  void v7[3] = a2;
  void v7[4] = v4;
  sub_19EEBB420(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19F0BE7FC;
  v9[1] = v7;
  void v9[2] = sub_19EFD97AC;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF5698C((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1E946CBA0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19F0BDF3C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a3;
  uint64_t v5 = a3[1];
  sub_19EF58A68(*a3);
  swift_bridgeObjectRetain();
  sub_19F1B2B18(v4, v5, v3);
  sub_19EF58A28(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0BDFB0(long long *a1, void (*a2)(uint64_t *__return_ptr, long long *))
{
  long long v5 = *a1;
  a2(v4, &v5);
  uint64_t v2 = v4[0];
  sub_19F1B2DD4(v4[0], v4[1]);
  return sub_19EF58A28(v2);
}

uint64_t sub_19F0BE064(uint64_t a1, uint64_t a2)
{
  unint64_t v12 = &type metadata for SyncTaskScheduler;
  char v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946CBA8);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 0;
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  void v7[3] = a2;
  void v7[4] = v4;
  v9[0] = sub_19F0BE7BC;
  v9[1] = v7;
  void v9[2] = sub_19F0BE7C8;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EEA8C4C((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1EB3912D0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19F0BE1B0(uint64_t a1, uint64_t a2)
{
  char v13 = &type metadata for SyncTaskScheduler;
  uint64_t v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391BD0);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 0;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  void v7[3] = a2;
  void v7[4] = v4;
  sub_19EEBB420(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19F0BE670;
  v9[1] = v7;
  void v9[2] = sub_19EF58E80;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF569D4((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1E946CDA0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19F0BE314(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  uint64_t v3 = MEMORY[0x1E4FBC868];
  do
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_19F0BCAA0(v4);
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = v3;
    sub_19EEBCFC4(v5, (uint64_t)sub_19EEBD6C0, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
    ++v2;
    uint64_t v3 = v8;
    swift_bridgeObjectRelease();
  }
  while (v1 != v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_19F0BE404(uint64_t a1)
{
  uint64_t v14 = MEMORY[0x1E4FBC870];
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_19EEBD400(0x6D6954746E657665, 0xE900000000000065), (v3 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v11);
    sub_19EEBD664((uint64_t)&v11, &qword_1EB393260);
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v4 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
    void v13[3] = v7;
    v13[0] = 0xD00000000000006FLL;
    v13[1] = 0x800000019F2714E0;
    long long v11 = 0u;
    long long v12 = 0u;
    id v8 = v4;
    sub_19EEC3E70((uint64_t)v13, (uint64_t)&v11);
    *(unsigned char *)(v6 + 64) = 0;
    long long v9 = v12;
    *(_OWORD *)(v6 + 32) = v11;
    *(_OWORD *)(v6 + 48) = v9;
    *(void *)(v5 + 32) = v6;
    *(void *)&long long v11 = v8;
    LOBYTE(v13[0]) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)v13);

    swift_bridgeObjectRelease();
    sub_19EECCE6C((uint64_t *)&v11, 0x6D6954746E657665, 0xE900000000000065);
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
    sub_19EEBD664((uint64_t)&v11, &qword_1EB393260);
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_19F0BE5E0()
{
  return objectdestroyTm_2(MEMORY[0x1E4FBC898], 48);
}

uint64_t sub_19F0BE5FC(uint64_t *a1, uint64_t a2)
{
  return sub_19F0BD2BC(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_19F0BE608()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0BE640(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 16))(a1, *(void *)(a1 + 16));
}

uint64_t sub_19F0BE670(uint64_t *a1)
{
  return sub_19F15F88C(*a1, a1[1], a1[2], *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

uint64_t sub_19F0BE68C()
{
  return objectdestroyTm_2(MEMORY[0x1E4FBC8D0], 32);
}

uint64_t sub_19F0BE6A8(uint64_t *a1)
{
  return sub_19F0BC988(*a1, a1[1], *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19F0BE6BC()
{
  swift_release();
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0BE708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946CD90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F0BE770(uint64_t *a1)
{
  return sub_19F0BDF3C(a1, *(void *)(v1 + 16), (uint64_t *)(v1 + 24));
}

uint64_t sub_19F0BE77C()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0BE7BC(long long *a1)
{
  return sub_19F0BDFB0(a1, *(void (**)(uint64_t *__return_ptr, long long *))(v1 + 16));
}

void sub_19F0BE7C8(void *a1)
{
}

uint64_t sub_19F0BE7D0()
{
  return objectdestroyTm_2(MEMORY[0x1E4FBC898], 48);
}

uint64_t sub_19F0BE7EC(uint64_t *a1)
{
  return sub_19F0BCF74(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_19F0BE7FC(uint64_t *a1)
{
  return sub_19F15F7CC(*a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

unint64_t IntentDispatcherError.errorDescription.getter()
{
  unint64_t v1 = 0xD0000000000000A5;
  if (*v0 == 1) {
    unint64_t v1 = 0xD0000000000000C2;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD0000000000000B5;
  }
}

BOOL static IntentDispatcherError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t IntentDispatcherError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t IntentDispatcherError.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F0BE900()
{
  unint64_t result = qword_1E9474250;
  if (!qword_1E9474250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474250);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IntentDispatcherError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F0BEA28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentDispatcherError()
{
  return &type metadata for IntentDispatcherError;
}

uint64_t sub_19F0BEA60(void *a1)
{
  if (!objc_msgSend(a1, sel_isString)
    || (id v2 = objc_msgSend(a1, sel_toString)) == 0)
  {

    return 0;
  }
  int v3 = v2;
  uint64_t v4 = sub_19F1DBD7C();
  uint64_t v6 = v5;

  BOOL v7 = v4 == 0x676E69727473 && v6 == 0xE600000000000000;
  if (v7 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 4;
  }
  BOOL v9 = v4 == 0x7961727261 && v6 == 0xE500000000000000;
  if (v9 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  if (v4 == 0x6E61656C6F6F62 && v6 == 0xE700000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 1;
  }
  if (v4 == 0x616E6F6974636964 && v6 == 0xEA00000000007972 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 6;
  }
  if (v4 == 0x7265626D756ELL && v6 == 0xE600000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 2;
  }
  if (v4 != 7107189 || v6 != 0xE300000000000000)
  {
    char v10 = sub_19F1DD44C();
    swift_bridgeObjectRelease();

    if (v10) {
      return 5;
    }
    return 0;
  }
  swift_bridgeObjectRelease();

  return 5;
}

uint64_t sub_19F0BED4C()
{
  id v2 = sub_19EE86600();
  if (!v1)
  {
    if (v2[2])
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(v0 + 72);
      MEMORY[0x1F4188790](v4);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
      sub_19F0BEEFC((void *)(v5 + 16), (uint64_t)v8);
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v6 = v9;
      uint64_t v7 = v10;
      __swift_project_boxed_opaque_existential_1(v8, v9);
      uint64_t v0 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 56))(v6, v7);
      sub_19EEC5710((uint64_t)v8);
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
  }
  return v0;
}

uint64_t sub_19F0BEE90()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19F0BEED8()
{
  return sub_19F0BED4C();
}

double sub_19F0BEEFC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EEC5384(a1, a2);
}

uint64_t sub_19F0BEF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v6, a1, a4);
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_19F0BEFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *id v8 = v4;
  void v8[4] = a3;
  uint64_t v8[5] = v3;
  long long v8[2] = a1;
  void v8[3] = a2;
  v8[1] = sub_19EEB8A6C;
  return MEMORY[0x1F4188298](sub_19F0BF08C, 0, 0);
}

uint64_t Future.then()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  uint64_t v4[2] = a1;
  void v4[3] = a2;
  return MEMORY[0x1F4188298](sub_19F0BF08C, 0, 0);
}

uint64_t sub_19F0BF08C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9471498 + dword_1E9471498);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  swift_getAssociatedTypeWitness();
  *uint64_t v4 = v0;
  v4[1] = sub_19EE39290;
  uint64_t v5 = *(void *)(v0 + 16);
  return v7(v5, 0, 0, (uint64_t)sub_19F0BF300, v2);
}

uint64_t sub_19F0BF1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a3;
  void v7[3] = a4;
  void v7[4] = a1;
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = a3;
  void v8[3] = a4;
  void v8[4] = sub_19F0BF5F8;
  uint64_t v8[5] = v7;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  void v9[3] = a4;
  void v9[4] = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_19F0BF5DC;
  *(void *)(v10 + 24) = v9;
  char v13 = &type metadata for SyncTaskScheduler;
  uint64_t v14 = &protocol witness table for SyncTaskScheduler;
  (*(void (**)(uint64_t (*)(uint64_t), void *, uint64_t (*)(void *), uint64_t, unsigned char *, uint64_t, uint64_t))(a4 + 16))(sub_19F0BF4D4, v8, sub_19F0BF590, v10, v12, a3, a4);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
}

uint64_t sub_19F0BF300(uint64_t a1)
{
  return sub_19F0BF1A4(a1, v1[4], v1[2], v1[3]);
}

uint64_t dispatch thunk of Future.then(perform:orCatchError:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t sub_19F0BF320(uint64_t a1, uint64_t a2)
{
  sub_19F0BF604(a1, a2);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v4(a1, AssociatedTypeWitness);
}

uint64_t sub_19F0BF3B0(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, double))(v8 + 16))((char *)&v10 - v6, a1, v5);
  return a2(v7);
}

uint64_t sub_19F0BF49C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F0BF4D4(uint64_t a1)
{
  return sub_19F0BF3B0(a1, *(uint64_t (**)(char *))(v1 + 32));
}

uint64_t sub_19F0BF4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  return sub_19F0BEF14((uint64_t)&v6, a2, AssociatedTypeWitness, v4);
}

uint64_t sub_19F0BF558()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0BF590(void *a1)
{
  long long v3 = *(uint64_t (**)(void *))(v1 + 16);
  id v4 = a1;
  return v3(a1);
}

uint64_t sub_19F0BF5CC()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0BF5DC(uint64_t a1)
{
  return sub_19F0BF4E0(a1, *(void *)(v1 + 32));
}

uint64_t sub_19F0BF5E8()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0BF5F8(uint64_t a1)
{
  return sub_19F0BF320(a1, *(void *)(v1 + 32));
}

uint64_t sub_19F0BF604(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  double v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v10 - v7, a1, AssociatedTypeWitness, v6);
  (*(void (**)(void, char *, uint64_t))(v5 + 32))(*(void *)(*(void *)(a2 + 64) + 40), v8, AssociatedTypeWitness);
  return swift_continuation_throwingResume();
}

uint64_t AppleServicesLocalizerFactory.__allocating_init(localizer:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_19EEBB420(a1, v2 + 16);
  return v2;
}

uint64_t AppleServicesLocalizerFactory.init(localizer:)(long long *a1)
{
  sub_19EEBB420(a1, v1 + 16);
  return v1;
}

id AppleServicesLocalizerFactory.jsExport.getter()
{
  void v6[3] = *v0;
  v6[4] = &protocol witness table for AppleServicesLocalizerFactory;
  v6[0] = v0;
  uint64_t v1 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  id v2 = objc_allocWithZone(v1);
  sub_19EEC4154((uint64_t)v6, (uint64_t)v2 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v5.receiver = v2;
  v5.super_class = v1;
  swift_retain();
  id v3 = objc_msgSendSuper2(&v5, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v3;
}

uint64_t AppleServicesLocalizerFactory.localizer(forLanguage:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_19F0BF85C, 0, 0);
}

uint64_t sub_19F0BF85C()
{
  sub_19EEC4154(v0[3] + 16, v0[2]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t AppleServicesLocalizerFactory.jsRepresentation(in:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  void v9[4] = &protocol witness table for AppleServicesLocalizerFactory;
  void v9[3] = v3;
  v9[0] = v1;
  id v4 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  id v5 = objc_allocWithZone(v4);
  sub_19EEC4154((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v8.receiver = v5;
  v8.super_class = v4;
  swift_retain();
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  a1[3] = v4;
  a1[4] = &off_1EF1449E0;
  *a1 = v6;
  return result;
}

uint64_t AppleServicesLocalizerFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t AppleServicesLocalizerFactory.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

id sub_19F0BF9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  void v9[3] = a1;
  void v9[4] = a2;
  v9[0] = v3;
  id v4 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  id v5 = objc_allocWithZone(v4);
  sub_19EEC4154((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v8.receiver = v5;
  v8.super_class = v4;
  swift_retain();
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  return v6;
}

uint64_t sub_19F0BFA84(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_19F0BF85C, 0, 0);
}

uint64_t sub_19F0BFAA8@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  void v10[4] = &protocol witness table for AppleServicesLocalizerFactory;
  void v10[3] = a1;
  v10[0] = v4;
  id v5 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  id v6 = objc_allocWithZone(v5);
  sub_19EEC4154((uint64_t)v10, (uint64_t)v6 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v9.receiver = v6;
  v9.super_class = v5;
  swift_retain();
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  a2[3] = v5;
  a2[4] = &off_1EF1449E0;
  *a2 = v7;
  return result;
}

uint64_t type metadata accessor for AppleServicesLocalizerFactory()
{
  return self;
}

uint64_t method lookup function for AppleServicesLocalizerFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppleServicesLocalizerFactory);
}

uint64_t dispatch thunk of AppleServicesLocalizerFactory.__allocating_init(localizer:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void *AMSMetricsEventRecorder.__allocating_init(metrics:defaultTopic:)(void *a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  id v6 = sub_19F0C084C(a1, a2, a3);

  return v6;
}

void *AMSMetricsEventRecorder.init(metrics:defaultTopic:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_19F0C084C(a1, a2, a3);

  return v4;
}

void *AMSMetricsEventRecorder.__allocating_init(metrics:defaultTopic:anonymousTopics:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  objc_super v8 = sub_19F0C0930(a1, a2, a3, a4);

  return v8;
}

void *AMSMetricsEventRecorder.init(metrics:defaultTopic:anonymousTopics:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = sub_19F0C0930(a1, a2, a3, a4);

  return v5;
}

id AMSMetricsEventRecorder.monitorsLifecycleEvents.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_monitorsLifecycleEvents);
}

id AMSMetricsEventRecorder.monitorsLifecycleEvents.setter(char a1)
{
  return objc_msgSend(*(id *)(v1 + 16), sel_setMonitorsLifecycleEvents_, a1 & 1);
}

id (*AMSMetricsEventRecorder.monitorsLifecycleEvents.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v3, sel_monitorsLifecycleEvents);
  return sub_19F0BFD74;
}

id sub_19F0BFD74(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setMonitorsLifecycleEvents_, *(unsigned __int8 *)(a1 + 8));
}

Swift::Void __swiftcall AMSMetricsEventRecorder.record(_:on:)(JetEngine::LintedMetricsEvent _, Swift::String_optional on)
{
  long long v6 = *(_OWORD *)_.fields._rawValue;
  id v3 = sub_19EE7F218((uint64_t)&v6, (uint64_t)_.issues._rawValue, on.value._countAndFlagsBits);
  if (v3)
  {
    id v5 = v3;
    if (v4) {

    }
    else {
      objc_msgSend(*(id *)(v2 + 16), sel_enqueueEvent_, v3);
    }
  }
}

uint64_t sub_19F0BFE14()
{
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_19F24EAD0;
  id v2 = v0;
  uint64_t v22 = sub_19EEC3F3C(0, 43, 0, MEMORY[0x1E4FBC860]);
  v3._uint64_t object = (void *)0x800000019F2718C0;
  v3._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v3);
  swift_getErrorValue();
  void v21[3] = v20;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(boxed_opaque_existential_2Tm, v19, v20);
  sub_19EEBCD00((uint64_t)v21, (uint64_t)v15);
  long long v13 = 0u;
  long long v14 = 0u;
  sub_19EEC3E70((uint64_t)v15, (uint64_t)&v13);
  char v18 = 0;
  long long v16 = v13;
  long long v17 = v14;
  id v5 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v5 = sub_19EEC3F3C(0, v5[2] + 1, 1, v5);
  }
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  if (v7 >= v6 >> 1) {
    id v5 = sub_19EEC3F3C((void *)(v6 > 1), v7 + 1, 1, v5);
  }
  v5[2] = v7 + 1;
  objc_super v8 = &v5[5 * v7];
  long long v9 = v16;
  long long v10 = v17;
  *((unsigned char *)v8 + 64) = v18;
  *((_OWORD *)v8 + 2) = v9;
  *((_OWORD *)v8 + 3) = v10;
  uint64_t v22 = v5;
  sub_19EEBD664((uint64_t)v21, &qword_1EB393260);
  v11._uint64_t countAndFlagsBits = 0;
  v11._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v11);
  *(void *)(v1 + 32) = v22;
  *(void *)&long long v16 = v2;
  LOBYTE(v13) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v1, (JetEngine::LogMessageLevel)&v13);

  return swift_bridgeObjectRelease();
}

uint64_t AMSMetricsEventRecorder.flush()()
{
  sub_19F020170(objc_msgSend(*(id *)(v0 + 16), sel_flush));
  void v5[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
  void v5[4] = &protocol witness table for OS_dispatch_queue;
  v5[0] = sub_19F1DC87C();
  v3[0] = sub_19F0C013C;
  v3[1] = 0;
  _OWORD v3[2] = sub_19F0C034C;
  v3[3] = 0;
  sub_19EEC4154((uint64_t)v5, (uint64_t)v4);
  unsigned char v4[40] = 0;
  sub_19EF53344((uint64_t)v3);
  sub_19EEBD664((uint64_t)v3, (uint64_t *)&unk_1EB3909E8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  uint64_t v1 = sub_19F0C0704((uint64_t)sub_19F0C0570, 0);
  swift_release();
  return v1;
}

uint64_t sub_19F0C013C(void **a1)
{
  uint64_t v1 = *a1;
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
  id v4 = v2;
  uint64_t v22 = sub_19EEC3F3C(0, 24, 0, MEMORY[0x1E4FBC860]);
  v5._uint64_t countAndFlagsBits = 0x2064656873756C46;
  v5._uint64_t object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  void v21[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
  v21[0] = v1;
  sub_19EEBCD00((uint64_t)v21, (uint64_t)v17);
  long long v15 = 0u;
  long long v16 = 0u;
  id v6 = v1;
  sub_19EEC3E70((uint64_t)v17, (uint64_t)&v15);
  char v20 = 0;
  long long v18 = v15;
  long long v19 = v16;
  unint64_t v7 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v7 = sub_19EEC3F3C(0, v7[2] + 1, 1, v7);
  }
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_19EEC3F3C((void *)(v8 > 1), v9 + 1, 1, v7);
  }
  _OWORD v7[2] = v9 + 1;
  long long v10 = &v7[5 * v9];
  long long v11 = v18;
  long long v12 = v19;
  *((unsigned char *)v10 + 64) = v20;
  *((_OWORD *)v10 + 2) = v11;
  *((_OWORD *)v10 + 3) = v12;
  uint64_t v22 = v7;
  sub_19EEBD664((uint64_t)v21, &qword_1EB393260);
  v13._uint64_t countAndFlagsBits = 0x7363697274656D20;
  v13._uint64_t object = (void *)0xEF73746E65766520;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  *(void *)(v3 + 32) = v22;
  *(void *)&long long v18 = v4;
  LOBYTE(v15) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v15);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0C034C()
{
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_19F24EAD0;
  id v2 = v0;
  uint64_t v22 = sub_19EEC3F3C(0, 41, 0, MEMORY[0x1E4FBC860]);
  v3._uint64_t object = (void *)0x800000019F271890;
  v3._uint64_t countAndFlagsBits = 0xD000000000000028;
  LogMessage.StringInterpolation.appendLiteral(_:)(v3);
  swift_getErrorValue();
  void v21[3] = v20;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(boxed_opaque_existential_2Tm, v19, v20);
  sub_19EEBCD00((uint64_t)v21, (uint64_t)v15);
  long long v13 = 0u;
  long long v14 = 0u;
  sub_19EEC3E70((uint64_t)v15, (uint64_t)&v13);
  char v18 = 0;
  long long v16 = v13;
  long long v17 = v14;
  Swift::String v5 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v5 = sub_19EEC3F3C(0, v5[2] + 1, 1, v5);
  }
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  if (v7 >= v6 >> 1) {
    Swift::String v5 = sub_19EEC3F3C((void *)(v6 > 1), v7 + 1, 1, v5);
  }
  v5[2] = v7 + 1;
  unint64_t v8 = &v5[5 * v7];
  long long v9 = v16;
  long long v10 = v17;
  *((unsigned char *)v8 + 64) = v18;
  *((_OWORD *)v8 + 2) = v9;
  *((_OWORD *)v8 + 3) = v10;
  uint64_t v22 = v5;
  sub_19EEBD664((uint64_t)v21, &qword_1EB393260);
  v11._uint64_t countAndFlagsBits = 0;
  v11._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v11);
  *(void *)(v1 + 32) = v22;
  *(void *)&long long v16 = v2;
  LOBYTE(v13) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v1, (JetEngine::LogMessageLevel)&v13);

  return swift_bridgeObjectRelease();
}

id sub_19F0C0570@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_integerValue);
  *a2 = result;
  return result;
}

uint64_t AMSMetricsEventRecorder.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_bridgeObjectRelease();
  sub_19EE83660(*(void *)(v0 + 96));
  return v0;
}

void sub_19F0C05F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_19F0C0618()
{
  return AMSMetricsEventRecorder.flush()();
}

uint64_t sub_19F0C063C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_19F0C0670(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v3 = *a1;
  a2(&v2, &v3);
  sub_19F1ADA78(v2);
}

uint64_t sub_19F0C0704(uint64_t a1, uint64_t a2)
{
  long long v12 = &type metadata for SyncTaskScheduler;
  long long v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391BD8);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = 0;
  unint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  void v7[3] = a2;
  void v7[4] = v4;
  v9[0] = sub_19F0C0AE0;
  v9[1] = v7;
  void v9[2] = sub_19F0C0AEC;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF53344((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1EB3909E8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

void *sub_19F0C084C(void *a1, uint64_t a2, uint64_t a3)
{
  v3[12] = 0;
  v3[13] = 0;
  _OWORD v3[2] = a1;
  id v6 = [a1 bag];
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DC70]), sel_initWithBag_, v6);
  swift_unknownObjectRelease();
  v3[3] = v7;
  void v3[4] = a2;
  void v3[5] = a3;
  id v8 = objc_msgSend(self, sel_ams_sharedAccountStore);
  v3[9] = sub_19EEBDC10(0, qword_1EB392F30);
  v3[10] = &protocol witness table for ACAccountStore;
  v3[6] = v8;
  v3[11] = MEMORY[0x1E4FBC870];
  return v3;
}

void *sub_19F0C0930(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = 0;
  v4[13] = 0;
  uint64_t v4[2] = a1;
  id v8 = [a1 bag];
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DC70]), sel_initWithBag_, v8);
  swift_unknownObjectRelease();
  void v4[3] = v9;
  v4[4] = a2;
  v4[5] = a3;
  v4[11] = a4;
  id v10 = objc_msgSend(self, sel_ams_sharedAccountStore);
  v4[9] = sub_19EEBDC10(0, qword_1EB392F30);
  v4[10] = &protocol witness table for ACAccountStore;
  v4[6] = v10;
  return v4;
}

id sub_19F0C0A10@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*(id *)(*(void *)a1 + 16), sel_monitorsLifecycleEvents);
  *a2 = (_BYTE)result;
  return result;
}

id sub_19F0C0A48(unsigned __int8 *a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(void *)a2 + 16), sel_setMonitorsLifecycleEvents_, *a1);
}

uint64_t method lookup function for AMSMetricsEventRecorder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AMSMetricsEventRecorder);
}

uint64_t dispatch thunk of AMSMetricsEventRecorder.__allocating_init(metrics:defaultTopic:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of AMSMetricsEventRecorder.__allocating_init(metrics:defaultTopic:anonymousTopics:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_19F0C0AA0()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_19F0C0AE0(uint64_t *a1)
{
  sub_19F0C0670(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

void sub_19F0C0AEC(void *a1)
{
}

uint64_t static PipelinePhase<>.unpackJetpack(keyURLs:bundleOutputURL:artifactStoreURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t a1)@<X8>)
{
  uint64_t v8 = sub_19F1DB34C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  Swift::String v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v12);
  long long v15 = (char *)&v21 - v14;
  long long v16 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16);
  v16((char *)&v21 - v14, a2, v8, v13);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v11, a3, v8);
  type metadata accessor for UnpackJetpackPhase();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  char v18 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v18(v17 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_bundleOutputURL, v15, v8);
  v18(v17 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_artifactStoreURL, v11, v8);
  *(unsigned char *)(v17 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_verifySignature) = 0;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_19F0C1918;
  *(void *)(v19 + 24) = v17;
  *a4 = sub_19F0C14C4;
  a4[1] = (uint64_t (*)(uint64_t))v19;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UnpackJetpackPhase()
{
  uint64_t result = qword_1E946FD88;
  if (!qword_1E946FD88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_19F0C0D10()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_19F1DB34C();
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB392AA8 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1EB392860;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v6 = swift_allocObject();
  long long v27 = xmmword_19F24EAD0;
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v7 + 16) = v27;
  uint64_t v34 = v8;
  unint64_t v31 = 0xD00000000000001DLL;
  unint64_t v32 = 0x800000019F271990;
  long long v28 = 0u;
  long long v29 = 0u;
  id v9 = v5;
  sub_19EEC3E70((uint64_t)&v31, (uint64_t)&v28);
  *(unsigned char *)(v7 + 64) = 0;
  long long v10 = v29;
  *(_OWORD *)(v7 + 32) = v28;
  *(_OWORD *)(v7 + 48) = v10;
  *(void *)(v6 + 32) = v7;
  *(void *)&long long v28 = v9;
  LOBYTE(v31) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v31);

  swift_bridgeObjectRelease();
  unint64_t v11 = *(void *)(v1 + 16);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_verifySignature)) {
    uint64_t v12 = sub_19F08E304;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_bundleOutputURL;
  swift_bridgeObjectRetain();
  sub_19F1DB2DC();
  uint64_t v14 = type metadata accessor for FileInputStream();
  swift_allocObject();
  uint64_t v15 = sub_19F04BB08();
  uint64_t v16 = v1 + v13;
  unint64_t v31 = v11;
  unint64_t v32 = (unint64_t)v12;
  uint64_t v33 = 0;
  *((void *)&v29 + 1) = v14;
  uint64_t v30 = &off_1EF13D8C8;
  *(void *)&long long v28 = v15;
  sub_19F08EB80(&v28, v16);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
  uint64_t v20 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v4, v16, v2);
  sub_19F1DB2DC();
  id v21 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
  uint64_t v22 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v21, sel_initWithPath_, v22);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  if (v23)
  {
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v12);
    char v24 = 1;
  }
  else
  {
    sub_19F0C16AC();
    id v23 = (id)swift_allocError();
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v12);
    char v24 = 2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE50);
  uint64_t v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 16) = 0;
  *(void *)(v17 + 16) = v18;
  *(void *)(v17 + 24) = v23;
  *(unsigned char *)(v17 + 32) = v24;
  return v17;
}

uint64_t static PipelinePhase<>.unpackJetpack(keyURLs:bundleOutputURL:artifactStoreURL:verifySignature:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t (**a5)(uint64_t)@<X8>)
{
  int v23 = a4;
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = &v22[-v15];
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t, uint64_t, double))(v10 + 16);
  v17(&v22[-v15], a2, v9, v14);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v17)(v12, a3, v9);
  type metadata accessor for UnpackJetpackPhase();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  uint64_t v19 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v10 + 32);
  v19(v18 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_bundleOutputURL, v16, v9);
  v19(v18 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_artifactStoreURL, v12, v9);
  *(unsigned char *)(v18 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_verifySignature) = v23;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_19F0C14CC;
  *(void *)(v20 + 24) = v18;
  *a5 = sub_19F0C1920;
  a5[1] = (uint64_t (*)(uint64_t))v20;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F0C12A4()
{
  return sub_19F0C0D10();
}

uint64_t static UnpackJetpackError.== infix(_:_:)()
{
  return 1;
}

uint64_t UnpackJetpackError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t UnpackJetpackError.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F0C133C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_artifactStoreURL;
  uint64_t v2 = sub_19F1DB34C();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_bundleOutputURL, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_19F0C1414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(**(void **)a1 + 88))();
  uint64_t v5 = sub_19F0C1700(a2, a3);
  swift_release();
  return v5;
}

uint64_t sub_19F0C148C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0C14C4(uint64_t a1)
{
  return sub_19F0C1414(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_19F0C14D4()
{
  unint64_t result = qword_1E9474280;
  if (!qword_1E9474280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474280);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UnpackJetpackError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F0C15C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnpackJetpackError()
{
  return &type metadata for UnpackJetpackError;
}

uint64_t sub_19F0C15FC()
{
  return type metadata accessor for UnpackJetpackPhase();
}

uint64_t sub_19F0C1604()
{
  uint64_t result = sub_19F1DB34C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_19F0C16AC()
{
  unint64_t result = qword_1E9474288;
  if (!qword_1E9474288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474288);
  }
  return result;
}

uint64_t sub_19F0C1700(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = &type metadata for SyncTaskScheduler;
  double v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE50);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = 0;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  void v7[3] = a2;
  void v7[4] = v4;
  sub_19EEBB420(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19F0C18A0;
  v9[1] = v7;
  void v9[2] = sub_19F0C18B0;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF53B38((uint64_t)v9);
  sub_19F0C18B8((uint64_t)v9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19F0C1858()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19F0C18A0(uint64_t a1)
{
  return sub_19F15F950(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

void sub_19F0C18B0(void *a1)
{
}

uint64_t sub_19F0C18B8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FC00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CodeByKind.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
  return v5(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_19F0C19AC(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v25 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = 16 * i;
    uint64_t v18 = *(void *)(a3 + 56);
    uint64_t v19 = (uint64_t *)(*(void *)(a3 + 48) + v17);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    v23[0] = *v19;
    v23[1] = v20;
    long long v24 = *(_OWORD *)(v18 + v17);
    swift_bridgeObjectRetain();
    char v22 = a1(v23);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v21;
    }
    if (v22)
    {
      swift_release();
      return v21;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v25) {
        goto LABEL_28;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15) {
        goto LABEL_16;
      }
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v25) {
        goto LABEL_28;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15) {
        goto LABEL_16;
      }
      int64_t v16 = v11 + 3;
      if (v11 + 3 >= v25) {
        goto LABEL_28;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15)
      {
LABEL_16:
        int64_t v11 = v16;
        goto LABEL_17;
      }
      int64_t v16 = v11 + 4;
      if (v11 + 4 < v25)
      {
        unint64_t v15 = *(void *)(v6 + 8 * v16);
        if (!v15)
        {
          while (1)
          {
            int64_t v11 = v16 + 1;
            if (__OFADD__(v16, 1)) {
              goto LABEL_31;
            }
            if (v11 >= v25) {
              goto LABEL_28;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v11);
            ++v16;
            if (v15) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      return 0;
    }
LABEL_17:
    unint64_t v9 = (v15 - 1) & v15;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_19F0C1BC0(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v23 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    int64_t v16 = (uint64_t *)(*(void *)(a3 + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = *(void *)(*(void *)(a3 + 56) + 8 * i);
    v22[0] = *v16;
    v22[1] = v17;
    _OWORD v22[2] = v19;
    swift_bridgeObjectRetain();
    char v20 = a1(v22);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v18;
    }
    if (v20)
    {
      swift_release();
      return v18;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1)) {
      break;
    }
    if (v10 >= v23) {
      goto LABEL_28;
    }
    unint64_t v14 = *(void *)(v21 + 8 * v10);
    if (!v14)
    {
      int64_t v15 = v10 + 1;
      if (v10 + 1 >= v23) {
        goto LABEL_28;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v15);
      if (v14) {
        goto LABEL_16;
      }
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v23) {
        goto LABEL_28;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v15);
      if (v14) {
        goto LABEL_16;
      }
      int64_t v15 = v10 + 3;
      if (v10 + 3 >= v23) {
        goto LABEL_28;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v15);
      if (v14)
      {
LABEL_16:
        int64_t v10 = v15;
        goto LABEL_17;
      }
      int64_t v15 = v10 + 4;
      if (v10 + 4 < v23)
      {
        unint64_t v14 = *(void *)(v21 + 8 * v15);
        if (!v14)
        {
          while (1)
          {
            int64_t v10 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              goto LABEL_31;
            }
            if (v10 >= v23) {
              goto LABEL_28;
            }
            unint64_t v14 = *(void *)(v21 + 8 * v10);
            ++v15;
            if (v14) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      return 0;
    }
LABEL_17:
    unint64_t v8 = (v14 - 1) & v14;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t CodeByKind.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t CodeByKind.wrappedValue.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v4(v1, a1, AssociatedTypeWitness);
}

uint64_t (*CodeByKind.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t CodeByKind.description.getter()
{
  return 0;
}

uint64_t CodeByKind.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v67 = a4;
  uint64_t v7 = sub_19F1DCDBC();
  uint64_t v69 = *(void *)(v7 - 8);
  uint64_t v70 = v7;
  MEMORY[0x1F4188790](v7);
  char v68 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v71 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (char *)&v61 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v61 = (char *)&v61 - v13;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D4A0);
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v82 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D448);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  char v20 = (char *)&v61 - v19;
  MEMORY[0x1F4188790](v21);
  int64_t v23 = (char **)((char *)&v61 - v22);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v61 - v25;
  uint64_t v75 = a3;
  uint64_t v27 = type metadata accessor for CodeByKind();
  uint64_t v64 = *(void *)(v27 - 8);
  uint64_t v65 = v27;
  MEMORY[0x1F4188790](v27);
  unint64_t v63 = (char *)&v61 - v28;
  uint64_t v29 = a1[3];
  char v76 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  sub_19EF6EA7C();
  uint64_t v30 = v77;
  sub_19F1DD8AC();
  if (v30)
  {
    *int64_t v23 = v30;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_19F0C28E0((uint64_t)v20, (uint64_t)v23);
  }
  uint64_t v31 = (uint64_t)v26;
  sub_19F0C28E0((uint64_t)v23, (uint64_t)v26);
  sub_19F0C2948((uint64_t)v26, (uint64_t)v17);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v33 = v82;
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v34 = v72;
    uint64_t v35 = v74;
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v82, v17, v74);
    long long v77 = xmmword_19F25CA80;
    long long v80 = xmmword_19F25CA80;
    char v81 = 1;
    if ((sub_19F1DD1DC() & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
      goto LABEL_9;
    }
    long long v80 = v77;
    char v81 = 1;
    uint64_t v48 = sub_19F1DD18C();
    uint64_t v50 = v49;
    uint64_t v51 = v75;
    uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 16))(a2, v75);
    if (*(void *)(v52 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v53 = sub_19EE77E90(v48, v50);
      if (v54)
      {
        uint64_t v55 = *(void *)(*(void *)(v52 + 56) + 8 * v53);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        unint64_t v39 = v61;
        uint64_t v56 = v55;
        uint64_t v37 = v76;
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v51 + 40))(v56, v76, a2, v51);
LABEL_20:
        (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v74);
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 32))(a2, v51);
    if (!v57)
    {
      long long v80 = v77;
      char v81 = 1;
      uint64_t v78 = 0;
      unint64_t v79 = 0xE000000000000000;
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      uint64_t v78 = 1008758606;
      unint64_t v79 = 0xE400000000000000;
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DCDCC();
      swift_allocError();
      sub_19F0C3330();
      uint64_t v60 = v74;
      sub_19F1DCD9C();
      swift_bridgeObjectRelease();
      sub_19EF6EAD0(v80, *((uint64_t *)&v80 + 1), v81);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v60);
      sub_19EEBD664(v31, &qword_1E946D448);
      uint64_t v37 = v76;
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
    }
    uint64_t v58 = v51;
    uint64_t v59 = v57;
    swift_bridgeObjectRelease();
    unint64_t v39 = v62;
    uint64_t v37 = v76;
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v58 + 40))(v59, v76, a2, v58);
    goto LABEL_20;
  }
  sub_19EEBD664((uint64_t)v17, &qword_1E946D448);
LABEL_9:
  uint64_t v36 = v75;
  uint64_t v37 = v76;
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 24))(a2, v75);
  if (!v38)
  {
    __swift_project_boxed_opaque_existential_1(v37, v37[3]);
    sub_19F1DD86C();
    *(void *)&long long v80 = 0;
    *((void *)&v80 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    uint64_t v41 = v68;
    sub_19F1DCDAC();
    uint64_t v42 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v44 = v43;
    uint64_t v46 = v69;
    uint64_t v45 = v70;
    (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v43, v41, v70);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v42 - 8) + 104))(v44, *MEMORY[0x1E4FBBA78], v42);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v45);
    sub_19EEBD664(v31, &qword_1E946D448);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
  }
  unint64_t v39 = v71;
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v36 + 40))(v38, v37, a2, v36);
LABEL_11:
  sub_19EEBD664(v31, &qword_1E946D448);
  char v40 = v63;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v39, AssociatedTypeWitness);
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v67, v40, v65);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
}

uint64_t type metadata accessor for CodeByKind()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0C28E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F0C2948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t CodeByKind.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CEA8);
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2 + 16;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(v11 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  double v14 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v15((char *)&v38 - v16, v3, AssociatedTypeWitness, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474298);
  if (swift_dynamicCast())
  {
    uint64_t v17 = a1;
    sub_19EEBB420(&v42, (uint64_t)v45);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    MEMORY[0x1F4188790](v18);
    *(&v38 - 2) = (uint64_t)v45;
    uint64_t v19 = v47;
    sub_19F0C1BC0((uint64_t (*)(void *))sub_19F0C338C, (uint64_t)(&v38 - 4), v18);
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_19EF6EA7C();
      sub_19F1DD8FC();
      long long v42 = xmmword_19F25CA80;
      LOBYTE(v43) = 1;
      uint64_t v22 = v39;
      sub_19F1DD26C();
      swift_bridgeObjectRelease();
      if (!v19)
      {
        __swift_project_boxed_opaque_existential_1(v45, v46);
        sub_19F1DBC7C();
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v22);
    }
    else
    {
      uint64_t v28 = sub_19F1DCDFC();
      swift_allocError();
      uint64_t v30 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568);
      uint64_t v31 = v46;
      unint64_t v32 = __swift_project_boxed_opaque_existential_1(v45, v46);
      *((void *)&v43 + 1) = v31;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v42);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(boxed_opaque_existential_2Tm, v32, v31);
      uint64_t v34 = runtimeType(of:)(&v42);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v42);
      v30[3] = swift_getMetatypeMetadata();
      *uint64_t v30 = v34;
      __swift_project_boxed_opaque_existential_1(v17, v17[3]);
      sub_19F1DD8BC();
      *(void *)&long long v42 = 0;
      *((void *)&v42 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      unint64_t v40 = 0xD000000000000017;
      unint64_t v41 = 0x800000019F271A60;
      uint64_t v35 = v46;
      uint64_t v36 = __swift_project_boxed_opaque_existential_1(v45, v46);
      *((void *)&v43 + 1) = v35;
      uint64_t v37 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v42);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v37, v36, v35);
      runtimeType(of:)(&v42);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v42);
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DCDAC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4FBBAA0], v28);
      swift_willThrow();
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
  }
  else
  {
    uint64_t v44 = 0;
    long long v42 = 0u;
    long long v43 = 0u;
    sub_19EEBD664((uint64_t)&v42, &qword_1E94742A0);
    uint64_t v47 = sub_19F1DCDFC();
    uint64_t v38 = swift_allocError();
    uint64_t v24 = v23;
    uint64_t v39 = (uint64_t)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568) + 48);
    void v24[3] = AssociatedTypeWitness;
    uint64_t v25 = __swift_allocate_boxed_opaque_existential_2Tm(v24);
    ((void (*)(uint64_t *, uint64_t, uint64_t))v15)(v25, v3, AssociatedTypeWitness);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8BC();
    v45[0] = 0;
    v45[1] = 0xE000000000000000;
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    *(void *)&long long v42 = 60;
    *((void *)&v42 + 1) = 0xE100000000000000;
    uint64_t v46 = AssociatedTypeWitness;
    uint64_t v26 = __swift_allocate_boxed_opaque_existential_2Tm(v45);
    ((void (*)(uint64_t *, uint64_t, uint64_t))v15)(v26, v3, AssociatedTypeWitness);
    runtimeType(of:)(v45);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void))(*(void *)(v47 - 8) + 104))(v24, *MEMORY[0x1E4FBBAA0]);
    return swift_willThrow();
  }
}

uint64_t runtimeType(of:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return swift_getDynamicType();
}

BOOL sub_19F0C3094(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = a2[3];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a2, v3);
  void v8[3] = v3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v8);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_2Tm, v4, v3);
  uint64_t v6 = runtimeType(of:)(v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v2 == v6;
}

uint64_t sub_19F0C313C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CodeByKind.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_19F0C315C(void *a1, uint64_t a2)
{
  return CodeByKind.encode(to:)(a1, a2);
}

uint64_t static CodeByKind<>.== infix(_:_:)()
{
  return sub_19F1DBD3C() & 1;
}

uint64_t sub_19F0C31E0()
{
  return static CodeByKind<>.== infix(_:_:)();
}

uint64_t CodeByKind<>.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  return sub_19F1DBC9C();
}

uint64_t CodeByKind<>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F0C32CC()
{
  return CodeByKind<>.hashValue.getter();
}

uint64_t sub_19F0C32D4()
{
  return CodeByKind<>.hash(into:)();
}

uint64_t sub_19F0C32DC()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F0C3330()
{
  unint64_t result = qword_1E9474290;
  if (!qword_1E9474290)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E946D4A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474290);
  }
  return result;
}

BOOL sub_19F0C338C(uint64_t a1)
{
  return sub_19F0C3094(a1, *(void **)(v1 + 16));
}

uint64_t sub_19F0C33AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0C33F4()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19F0C3494(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_19F0C3570(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_19F0C35EC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19F0C3664(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19F0C36DC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19F0C3754(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19F0C37CC(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        uint64_t v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_19F0C397C(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19F0C3BB8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        double v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

ValueMetadata *type metadata accessor for SystemDateProvider()
{
  return &type metadata for SystemDateProvider;
}

uint64_t dispatch thunk of DeepLinkIntentModel.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for BaseVersionFieldProvider()
{
  return &type metadata for BaseVersionFieldProvider;
}

uint64_t sub_19F0C3C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a3;
  return MEMORY[0x1F4188298](sub_19EEBA5F8, 0, 0);
}

void sub_19F0C3C34(uint64_t a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_transactionCount);
  uint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_19EE66474(v3);
  os_unfair_lock_unlock(v4);
  if (!v1)
  {
    MEMORY[0x1F4188790](v5);
    unsigned int v7 = (uint64_t *)&v6[4];
    size_t v8 = v6 + 6;
    os_unfair_lock_lock(v6 + 6);
    sub_19F0C97DC(v7, &v9);
    os_unfair_lock_unlock(v8);
    os_unfair_lock_lock(v4);
    sub_19EE7AB04((uint64_t *)v3);
    os_unfair_lock_unlock(v4);
  }
}

void sub_19F0C3D9C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if (qword_1E946FC20 != -1) {
    a1 = swift_once();
  }
  if ((byte_1E9498AF8 & 1) == 0)
  {
    MEMORY[0x1F4188790](a1);
    os_unfair_lock_lock((os_unfair_lock_t)(a5 + 40));
    sub_19EED5740((uint64_t *)(a5 + 16));
    if (v5)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)(a5 + 40));
      __break(1u);
      os_unfair_lock_unlock((os_unfair_lock_t)a5);
      __break(1u);
      return;
    }
    uint64_t v6 = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(a5 + 40));
  }
  a3(&v13);
  if (v6)
  {
    if ((byte_1E9498AF8 & 1) == 0)
    {
      uint64_t v9 = (void *)(a5 + 16);
      unsigned int v10 = (os_unfair_lock_s *)(a5 + 40);
      os_unfair_lock_lock(v10);
      sub_19EED56B0(v9);
      os_unfair_lock_unlock(v10);
    }
  }
  else if ((byte_1E9498AF8 & 1) == 0)
  {
    int v11 = (void *)(a5 + 16);
    unsigned int v12 = (os_unfair_lock_s *)(a5 + 40);
    os_unfair_lock_lock(v12);
    sub_19EED56B0(v11);
    os_unfair_lock_unlock(v12);
  }
}

unint64_t sub_19F0C3F34(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000021;
      break;
    case 2:
    case 3:
      return result;
    default:
      unint64_t result = 0xD00000000000001DLL;
      break;
  }
  return result;
}

unint64_t sub_19F0C3FB8()
{
  return sub_19F0C3F34(*v0);
}

uint64_t JetPackAssetDiskCache.__allocating_init(url:)(uint64_t a1)
{
  return sub_19EE3B3C8(a1);
}

uint64_t JetPackAssetDiskCache._cache(_:)(uint64_t a1, uint64_t a2)
{
  v3[72] = v2;
  v3[71] = a2;
  v3[70] = a1;
  uint64_t v4 = sub_19F1DB20C();
  v3[73] = v4;
  v3[74] = *(void *)(v4 - 8);
  v3[75] = swift_task_alloc();
  uint64_t v5 = sub_19F1DB34C();
  v3[76] = v5;
  v3[77] = *(void *)(v5 - 8);
  v3[78] = swift_task_alloc();
  uint64_t v6 = sub_19F1DB5AC();
  v3[79] = v6;
  v3[80] = *(void *)(v6 - 8);
  v3[81] = swift_task_alloc();
  uint64_t v7 = sub_19F1DB8AC();
  v3[82] = v7;
  v3[83] = *(void *)(v7 - 8);
  v3[84] = swift_task_alloc();
  v3[85] = swift_task_alloc();
  v3[86] = swift_task_alloc();
  v3[87] = swift_task_alloc();
  v3[88] = swift_task_alloc();
  v3[89] = swift_task_alloc();
  v3[90] = swift_task_alloc();
  v3[91] = swift_task_alloc();
  uint64_t v8 = sub_19F1DB85C();
  v3[92] = v8;
  v3[93] = *(void *)(v8 - 8);
  v3[94] = swift_task_alloc();
  v3[95] = swift_task_alloc();
  v3[96] = swift_task_alloc();
  v3[97] = swift_task_alloc();
  v3[98] = swift_task_alloc();
  v3[99] = swift_task_alloc();
  v3[100] = swift_task_alloc();
  v3[101] = swift_task_alloc();
  v3[102] = swift_task_alloc();
  v3[103] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F0C4304, 0, 0);
}

uint64_t sub_19F0C4304()
{
  uint64_t v83 = v0;
  uint64_t v82 = *MEMORY[0x1E4F143B8];
  if (qword_1EB390C08 != -1) {
    swift_once();
  }
  uint64_t v75 = v0 + 336;
  uint64_t v1 = sub_19F1DB89C();
  *(void *)(v0 + 832) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB390CF8);
  sub_19F1DB87C();
  sub_19F1DB82C();
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 816);
    uint64_t v5 = *(void *)(v0 + 744);
    uint64_t v6 = *(void *)(v0 + 736);
    uint64_t v7 = *(void (**)(uint64_t, void, uint64_t))(v5 + 16);
    unint64_t v8 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v4, *(void *)(v0 + 824), v6);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    os_signpost_id_t v10 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v10, "Cache Asset", "", v9, 2u);
    MEMORY[0x19F3C9470](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 744);

    uint64_t v7 = *(void (**)(uint64_t, void, uint64_t))(v11 + 16);
    unint64_t v8 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  unsigned int v12 = (long long *)(v0 + 216);
  *(void *)(v0 + 840) = v7;
  uint64_t v13 = *(void *)(v0 + 824);
  uint64_t v14 = *(void *)(v0 + 816);
  uint64_t v15 = *(void *)(v0 + 736);
  *(void *)(v0 + 848) = v8;
  uint64_t v74 = v7;
  v7(v14, v13, v15);
  sub_19F1DB8EC();
  swift_allocObject();
  *(void *)(v0 + 856) = sub_19F1DB8DC();
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v16 = *(void *)(v0 + 568);
  uint64_t v17 = (void *)qword_1EB390E30;
  *(void *)(v0 + 864) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_19F24EAD0;
  id v19 = v17;
  v76[0] = sub_19EEC3F3C(0, 30, 0, MEMORY[0x1E4FBC860]);
  v20._uint64_t object = (void *)0x800000019F271A90;
  v20._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t v21 = type metadata accessor for JetPackAsset(0);
  *(void *)(v0 + 872) = v21;
  uint64_t v22 = *(int *)(v21 + 28);
  *(_DWORD *)(v0 + 156) = v22;
  int64_t v23 = (uint64_t *)(v16 + v22);
  uint64_t v24 = *v23;
  uint64_t v25 = v23[1];
  *(void *)(v0 + 360) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 336) = v24;
  *(void *)(v0 + 344) = v25;
  sub_19EEBCD00(v75, v0 + 400);
  *unsigned int v12 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70(v0 + 400, v0 + 216);
  *(unsigned char *)(v0 + 248) = 0;
  long long v26 = *(_OWORD *)(v0 + 232);
  long long v77 = *v12;
  long long v78 = v26;
  char v79 = *(unsigned char *)(v0 + 248);
  uint64_t v27 = v76[0];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v27 = sub_19EEC3F3C(0, v76[0][2] + 1, 1, v76[0]);
  }
  unint64_t v29 = v27[2];
  unint64_t v28 = v27[3];
  if (v29 >= v28 >> 1) {
    uint64_t v27 = sub_19EEC3F3C((void *)(v28 > 1), v29 + 1, 1, v27);
  }
  uint64_t v30 = *(void *)(v0 + 568);
  void v27[2] = v29 + 1;
  uint64_t v31 = &v27[5 * v29];
  long long v32 = v77;
  long long v33 = v78;
  *((unsigned char *)v31 + 64) = v79;
  *((_OWORD *)v31 + 2) = v32;
  *((_OWORD *)v31 + 3) = v33;
  v76[0] = v27;
  sub_19EEBD664(v75, &qword_1EB393260);
  v34._uint64_t countAndFlagsBits = 0;
  v34._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  *(void *)(v18 + 32) = v27;
  *(void *)&long long v77 = v19;
  LOBYTE(v76[0]) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)v76);
  swift_bridgeObjectRelease();

  uint64_t v35 = (int *)(v30 + *(int *)(v21 + 24));
  if (v35[1])
  {
    uint64_t v36 = *(void **)(v0 + 568);
    sub_19F0C662C(*v23, v23[1]);
    uint64_t v37 = v36[3];
    uint64_t v38 = v36[4];
    __swift_project_boxed_opaque_existential_1(v36, v37);
    *(void *)(v0 + 880) = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    return MEMORY[0x1F4188298](sub_19F0C512C, 0, 0);
  }
  else
  {
    int v73 = *v35;
    uint64_t v39 = (void *)qword_1EB390E30;
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 392) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 368) = 0xD000000000000029;
    *(void *)(v0 + 376) = 0x800000019F271AD0;
    *(_OWORD *)(v0 + 296) = 0u;
    *(_OWORD *)(v0 + 312) = 0u;
    id v42 = v39;
    sub_19EEC3E70(v0 + 368, v0 + 296);
    *(unsigned char *)(v0 + 328) = 0;
    long long v43 = *(_OWORD *)(v0 + 312);
    *(_OWORD *)(v41 + 32) = *(_OWORD *)(v0 + 296);
    *(_OWORD *)(v41 + 48) = v43;
    *(unsigned char *)(v41 + 64) = *(unsigned char *)(v0 + 328);
    *(void *)(v40 + 32) = v41;
    *(void *)&long long v77 = v42;
    LOBYTE(v76[0]) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v40, (JetEngine::LogMessageLevel)v76);
    swift_bridgeObjectRelease();

    sub_19F1DADCC();
    swift_allocObject();
    sub_19F1DADBC();
    type metadata accessor for JetPackAsset.Metadata(0);
    sub_19EED54B4(&qword_1EB390C10);
    uint64_t v44 = sub_19F1DADAC();
    unint64_t v46 = v45;
    uint64_t v47 = *__swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 576) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(void *)(*(void *)(v0 + 576) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
    uint64_t v48 = swift_task_alloc();
    *(void *)(v48 + 16) = v44;
    *(void *)(v48 + 24) = v46;
    *(_DWORD *)(v48 + 32) = v73;
    *(void *)(v48 + 40) = v47;
    uint64_t v49 = *(void *)(v47 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
    uint64_t v50 = (void *)swift_task_alloc();
    v50[2] = v47;
    v50[3] = sub_19F0C94F0;
    v50[4] = v48;
    sub_19EEA0784(v44, v46);
    swift_retain();
    sub_19EED54F8((uint64_t)sub_19EED8744, v47, sub_19F0C98C4, (uint64_t)v50, v49);
    uint64_t v51 = *(void *)(v0 + 568);
    uint64_t v52 = *(void *)(v0 + 560);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v53 = v80;
    unint64_t v54 = v81;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EED5BFC(v53, v54);
    sub_19EEA072C(v44, v46);
    swift_release();
    sub_19EEA072C(v44, v46);
    sub_19EF93C94(v51, v52);
    uint64_t v55 = sub_19F1DB87C();
    sub_19F1DB8CC();
    os_signpost_type_t v56 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      uint64_t v57 = *(void *)(v0 + 728);
      uint64_t v58 = *(void *)(v0 + 664);
      uint64_t v59 = *(void *)(v0 + 656);
      swift_retain();
      sub_19F1DB8FC();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v58 + 88))(v57, v59) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v60 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 664) + 8))(*(void *)(v0 + 728), *(void *)(v0 + 656));
        uint64_t v60 = "";
      }
      uint64_t v61 = (uint64_t *)(v0 + 816);
      uint64_t v64 = *(void *)(v0 + 808);
      uint64_t v65 = *(void *)(v0 + 744);
      uint64_t v66 = *(void *)(v0 + 736);
      v74(*(void *)(v0 + 816), v64, v66);
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      os_signpost_id_t v68 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v55, v56, v68, "Cache Asset", v60, v67, 2u);
      MEMORY[0x19F3C9470](v67, -1, -1);

      unint64_t v63 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v63(v64, v66);
    }
    else
    {
      uint64_t v61 = (uint64_t *)(v0 + 808);
      uint64_t v62 = *(void *)(v0 + 744);

      unint64_t v63 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
    }
    uint64_t v69 = *(void *)(v0 + 824);
    uint64_t v70 = *(void *)(v0 + 736);
    v63(*v61, v70);
    swift_release();
    v63(v69, v70);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v71 = *(uint64_t (**)(void))(v0 + 8);
    return v71();
  }
}

uint64_t sub_19F0C512C()
{
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 552;
  *(void *)(v0 + 24) = sub_19F0C5220;
  *(void *)(v0 + 80) = swift_continuation_init();
  *(unsigned char *)(v0 + 152) = 1;
  sub_19EE65B6C(v0 + 80);
  sub_19EEBD664(v0 + 80, qword_1EB3918C0);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_19F0C5220()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 888) = v2;
  if (v2)
  {
    swift_willThrow();
    os_signpost_type_t v3 = sub_19F0C62BC;
  }
  else
  {
    *(void *)(v1 + 896) = *(void *)(v1 + 552);
    swift_release();
    os_signpost_type_t v3 = sub_19F0C5378;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F0C5378()
{
  uint64_t v109 = v0;
  uint64_t v108 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void *)(v0 + 648);
  uint64_t v2 = *(void *)(v0 + 640);
  uint64_t v3 = *(void *)(v0 + 632);
  sub_19F1DB59C();
  uint64_t v4 = sub_19F1DB58C();
  uint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(v0 + 528) = 0x6B63617074656A2ELL;
  *(void *)(v0 + 536) = 0xE800000000000000;
  *(void *)(v0 + 496) = v4;
  *(void *)(v0 + 504) = v6;
  swift_bridgeObjectRetain();
  *(void *)&long long v103 = sub_19F1DBFFC();
  *((void *)&v103 + 1) = v7;
  sub_19F1DBEEC();
  swift_bridgeObjectRelease();
  unint64_t v101 = *((void *)&v103 + 1);
  unint64_t v8 = v103;
  sub_19F1DADCC();
  swift_allocObject();
  sub_19F1DADBC();
  type metadata accessor for JetPackAsset.Metadata(0);
  sub_19EED54B4(&qword_1EB390C10);
  uint64_t v9 = sub_19F1DADAC();
  unint64_t v11 = v10;
  unsigned int v12 = (uint64_t *)(*(void *)(v0 + 568) + *(int *)(v0 + 156));
  uint64_t v13 = __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 576) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(void *)(*(void *)(v0 + 576) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  uint64_t v14 = *v12;
  uint64_t v15 = v12[1];
  *(_DWORD *)(v0 + 160) = 0;
  *(unsigned char *)(v0 + 164) = 1;
  *(void *)(v0 + 168) = v14;
  *(void *)(v0 + 176) = v15;
  unint64_t v99 = v8;
  *(_OWORD *)(v0 + 184) = __PAIR128__(v101, v8);
  *(void *)(v0 + 200) = v9;
  *(void *)(v0 + 208) = v11;
  unint64_t v16 = v11;
  uint64_t v17 = *v13;
  uint64_t v18 = swift_task_alloc();
  *(void *)(v18 + 16) = v0 + 160;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = *(void *)(v17 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  Swift::String v20 = (void *)swift_task_alloc();
  uint64_t v20[2] = v17;
  void v20[3] = sub_19F0C94D4;
  void v20[4] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v21 = v16;
  sub_19EEA0784(v9, v16);
  swift_retain();
  sub_19EED54F8((uint64_t)sub_19EED8744, v17, sub_19EED5690, (uint64_t)v20, v19);
  uint64_t v22 = *(void *)(v0 + 600);
  uint64_t v23 = *(void *)(v0 + 592);
  uint64_t v97 = *(void *)(v0 + 584);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v96 = v9;
  unint64_t v24 = v21;
  sub_19EED5BFC(v9, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  int v91 = v103;
  char v92 = BYTE4(v103);
  uint64_t v94 = v106;
  unint64_t v95 = v107;
  *(_OWORD *)(v0 + 512) = __PAIR128__(v101, v99);
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v22, *MEMORY[0x1E4F276C0], v97);
  sub_19EEC4910();
  uint64_t v25 = MEMORY[0x1E4FBB1A0];
  sub_19F1DB33C();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v97);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_19F1DB2CC();
  uint64_t v28 = v27;
  unint64_t v29 = (void *)qword_1EB390E30;
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_19F24EAD0;
  id v31 = v29;
  uint64_t v102 = sub_19EEC3F3C(0, 18, 0, MEMORY[0x1E4FBC860]);
  v32._uint64_t object = (void *)0x800000019F271AB0;
  v32._uint64_t countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  *(void *)(v0 + 456) = v25;
  *(void *)(v0 + 432) = v26;
  *(void *)(v0 + 440) = v28;
  sub_19EEBCD00(v0 + 432, v0 + 464);
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70(v0 + 464, v0 + 256);
  *(unsigned char *)(v0 + 288) = 0;
  long long v33 = *(_OWORD *)(v0 + 272);
  long long v103 = *(_OWORD *)(v0 + 256);
  long long v104 = v33;
  char v105 = *(unsigned char *)(v0 + 288);
  Swift::String v34 = v102;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v34 = sub_19EEC3F3C(0, v102[2] + 1, 1, v102);
  }
  unint64_t v36 = v34[2];
  unint64_t v35 = v34[3];
  if (v36 >= v35 >> 1) {
    Swift::String v34 = sub_19EEC3F3C((void *)(v35 > 1), v36 + 1, 1, v34);
  }
  unint64_t v100 = v24;
  uint64_t v37 = *(void **)(v0 + 896);
  v34[2] = v36 + 1;
  uint64_t v38 = &v34[5 * v36];
  long long v39 = v103;
  long long v40 = v104;
  *((unsigned char *)v38 + 64) = v105;
  *((_OWORD *)v38 + 2) = v39;
  *((_OWORD *)v38 + 3) = v40;
  uint64_t v102 = v34;
  sub_19EEBD664(v0 + 432, &qword_1EB393260);
  v41._uint64_t countAndFlagsBits = 0;
  v41._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v41);
  *(void *)(v30 + 32) = v34;
  *(void *)&long long v103 = v31;
  LOBYTE(v102) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v30, (JetEngine::LogMessageLevel)&v102);
  swift_bridgeObjectRelease();

  id v42 = objc_msgSend(self, sel_defaultManager);
  uint64_t v43 = sub_19F1DBD4C();
  objc_msgSend(v42, sel_createFileAtPath_contents_attributes_, v43, 0, 0);

  uint64_t v44 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 544) = 0;
  LOBYTE(v43) = objc_msgSend(v37, sel_writeToFile_blockSize_error_, v44, 0x20000, v0 + 544);

  unint64_t v45 = *(void **)(v0 + 544);
  unint64_t v46 = *(void **)(v0 + 896);
  if (v43)
  {
    uint64_t v98 = *(void *)(v0 + 872);
    uint64_t v47 = *(void *)(v0 + 624);
    uint64_t v48 = *(void *)(v0 + 608);
    uint64_t v49 = *(void *)(v0 + 568);
    uint64_t v50 = *(void *)(v0 + 560);
    uint64_t v51 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 616) + 8);
    id v52 = v45;
    v51(v47, v48);
    sub_19EEA072C(v96, v100);
    swift_release();

    sub_19EF93C94(v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EED5BFC(v94, v95);
    uint64_t v53 = v50 + *(int *)(v98 + 24);
    *(_DWORD *)uint64_t v53 = v91;
    *(unsigned char *)(v53 + 4) = v92;
    unint64_t v54 = sub_19F1DB87C();
    sub_19F1DB8CC();
    os_signpost_type_t v55 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      uint64_t v56 = *(void *)(v0 + 696);
      uint64_t v57 = *(void *)(v0 + 664);
      uint64_t v58 = *(void *)(v0 + 656);
      swift_retain();
      sub_19F1DB8FC();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v57 + 88))(v56, v58) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v59 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 664) + 8))(*(void *)(v0 + 696), *(void *)(v0 + 656));
        uint64_t v59 = "";
      }
      uint64_t v70 = (uint64_t *)(v0 + 816);
      uint64_t v75 = *(void *)(v0 + 776);
      uint64_t v76 = *(void *)(v0 + 744);
      uint64_t v77 = *(void *)(v0 + 736);
      (*(void (**)(void, uint64_t, uint64_t))(v0 + 840))(*(void *)(v0 + 816), v75, v77);
      long long v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v78 = 0;
      os_signpost_id_t v79 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v54, v55, v79, "Cache Asset", v59, v78, 2u);
      MEMORY[0x19F3C9470](v78, -1, -1);

      uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
      v72(v75, v77);
    }
    else
    {
      uint64_t v70 = (uint64_t *)(v0 + 776);
      uint64_t v71 = *(void *)(v0 + 744);

      uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    }
    uint64_t v80 = *(void *)(v0 + 824);
    uint64_t v81 = *(void *)(v0 + 736);
    v72(*v70, v81);
    swift_release();
    v72(v80, v81);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v82 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v60 = *(void *)(v0 + 624);
    uint64_t v61 = *(void *)(v0 + 616);
    uint64_t v62 = *(void *)(v0 + 608);
    id v63 = v45;
    sub_19F1DB19C();

    swift_willThrow();
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EED5BFC(v94, v95);
    sub_19EEA072C(v96, v100);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    uint64_t v64 = sub_19F1DB87C();
    sub_19F1DB8CC();
    os_signpost_type_t v65 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      uint64_t v66 = *(void *)(v0 + 672);
      uint64_t v67 = *(void *)(v0 + 664);
      uint64_t v68 = *(void *)(v0 + 656);
      swift_retain();
      sub_19F1DB8FC();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v67 + 88))(v66, v68) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v69 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 664) + 8))(*(void *)(v0 + 672), *(void *)(v0 + 656));
        uint64_t v69 = "";
      }
      int v73 = (uint64_t *)(v0 + 816);
      uint64_t v83 = *(void *)(v0 + 752);
      uint64_t v84 = *(void *)(v0 + 744);
      uint64_t v85 = *(void *)(v0 + 736);
      (*(void (**)(void, uint64_t, uint64_t))(v0 + 840))(*(void *)(v0 + 816), v83, v85);
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v86 = 0;
      os_signpost_id_t v87 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v64, v65, v87, "Cache Asset", v69, v86, 2u);
      MEMORY[0x19F3C9470](v86, -1, -1);

      uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
      v93(v83, v85);
    }
    else
    {
      int v73 = (uint64_t *)(v0 + 752);
      uint64_t v74 = *(void *)(v0 + 744);

      uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    }
    uint64_t v88 = *(void *)(v0 + 824);
    uint64_t v89 = *(void *)(v0 + 736);
    v93(*v73, v89);
    swift_release();
    v93(v88, v89);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v82 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v82();
}

uint64_t sub_19F0C62BC()
{
  swift_release();
  uint64_t v1 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v2 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v3 = *(void *)(v0 + 712);
    uint64_t v4 = *(void *)(v0 + 664);
    uint64_t v5 = *(void *)(v0 + 656);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 664) + 8))(*(void *)(v0 + 712), *(void *)(v0 + 656));
      uint64_t v6 = "";
    }
    uint64_t v7 = (uint64_t *)(v0 + 816);
    uint64_t v10 = *(void *)(v0 + 792);
    uint64_t v11 = *(void *)(v0 + 744);
    uint64_t v12 = *(void *)(v0 + 736);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 840))(*(void *)(v0 + 816), v10, v12);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v1, v2, v14, "Cache Asset", v6, v13, 2u);
    MEMORY[0x19F3C9470](v13, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    uint64_t v7 = (uint64_t *)(v0 + 792);
    uint64_t v8 = *(void *)(v0 + 744);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *(void *)(v0 + 824);
  uint64_t v16 = *(void *)(v0 + 736);
  v9(*v7, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

void sub_19F0C662C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_1EB390E30;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v7 = swift_allocObject();
  long long v42 = xmmword_19F24EAD0;
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  id v8 = v6;
  uint64_t v49 = sub_19EEC3F3C(0, 32, 0, MEMORY[0x1E4FBC860]);
  v9._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v9._uint64_t object = (void *)0x800000019F271CF0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v9);
  uint64_t v48 = MEMORY[0x1E4FBB1A0];
  v47[0] = a1;
  v47[1] = a2;
  sub_19EEBCD00((uint64_t)v47, (uint64_t)v46);
  long long v45 = 0u;
  long long v44 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v46, (uint64_t)&v44);
  LOBYTE(v52) = 0;
  long long v50 = v44;
  long long v51 = v45;
  uint64_t v10 = v49;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_19EEC3F3C(0, v10[2] + 1, 1, v10);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  _OWORD v10[2] = v12 + 1;
  uint64_t v13 = &v10[5 * v12];
  long long v14 = v50;
  long long v15 = v51;
  *((unsigned char *)v13 + 64) = v52;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  uint64_t v49 = v10;
  sub_19EEBD664((uint64_t)v47, &qword_1EB393260);
  v16._uint64_t countAndFlagsBits = 0;
  v16._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v7 + 32) = v49;
  *(void *)&long long v50 = v8;
  LOBYTE(v44) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v44);

  swift_bridgeObjectRelease();
  uint64_t v17 = __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(void *)(v3 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  uint64_t v18 = *v17;
  MEMORY[0x1F4188790](v17);
  v41[8] = a1;
  v41[9] = a2;
  v41[10] = v18;
  uint64_t v19 = *(void *)(v18 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  MEMORY[0x1F4188790](v20);
  _OWORD v41[2] = v18;
  long long v41[3] = sub_19F0C9858;
  v41[4] = v21;
  swift_retain();
  sub_19F0C3D9C((uint64_t)sub_19EED8744, v18, (void (*)(uint64_t *__return_ptr))sub_19F0C95A4, (uint64_t)v41, v19);
  uint64_t v23 = v22;
  swift_release();
  unint64_t v24 = (void *)qword_1EB390E30;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v42;
  id v26 = v24;
  uint64_t v49 = sub_19EEC3F3C(0, 23, 0, MEMORY[0x1E4FBC860]);
  v27._uint64_t countAndFlagsBits = 0x20646E756F46;
  v27._uint64_t object = (void *)0xE600000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  uint64_t v28 = *(void *)(v23 + 16);
  uint64_t v48 = MEMORY[0x1E4FBB550];
  v47[0] = v28;
  sub_19EEBCD00((uint64_t)v47, (uint64_t)v46);
  long long v45 = 0u;
  long long v44 = 0u;
  sub_19EEC3E70((uint64_t)v46, (uint64_t)&v44);
  LOBYTE(v52) = 0;
  long long v50 = v44;
  long long v51 = v45;
  unint64_t v29 = v49;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v29 = sub_19EEC3F3C(0, v29[2] + 1, 1, v29);
  }
  unint64_t v31 = v29[2];
  unint64_t v30 = v29[3];
  if (v31 >= v30 >> 1) {
    unint64_t v29 = sub_19EEC3F3C((void *)(v30 > 1), v31 + 1, 1, v29);
  }
  uint64_t v29[2] = v31 + 1;
  Swift::String v32 = &v29[5 * v31];
  long long v33 = v50;
  long long v34 = v51;
  *((unsigned char *)v32 + 64) = v52;
  *((_OWORD *)v32 + 2) = v33;
  *((_OWORD *)v32 + 3) = v34;
  uint64_t v49 = v29;
  sub_19EEBD664((uint64_t)v47, &qword_1EB393260);
  v35._uint64_t object = (void *)0x800000019F271B50;
  v35._uint64_t countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  *(void *)(v25 + 32) = v49;
  *(void *)&long long v50 = v26;
  LOBYTE(v44) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v25, (JetEngine::LogMessageLevel)&v44);

  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v23 + 16);
  if (v36)
  {
    uint64_t v37 = 32;
    do
    {
      long long v38 = *(_OWORD *)(v23 + v37);
      long long v39 = *(_OWORD *)(v23 + v37 + 16);
      long long v40 = *(_OWORD *)(v23 + v37 + 32);
      uint64_t v53 = *(void *)(v23 + v37 + 48);
      long long v51 = v39;
      long long v52 = v40;
      long long v50 = v38;
      sub_19F0C95BC((uint64_t)&v50);
      sub_19F0C89C4((uint64_t)&v50);
      sub_19F0C960C((uint64_t)&v50);
      v37 += 56;
      --v36;
    }
    while (v36);
  }
  swift_bridgeObjectRelease();
}

uint64_t JetPackAssetDiskCache._asset(withID:)(uint64_t a1, int a2)
{
  *(_DWORD *)(v3 + 108) = a2;
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = v2;
  return MEMORY[0x1F4188298](sub_19F0C6E20, 0, 0);
}

uint64_t sub_19F0C6E20()
{
  uint64_t v26 = v0;
  int v1 = *(_DWORD *)(v0 + 108);
  uint64_t v2 = *__swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 152) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(void *)(*(void *)(v0 + 152) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  uint64_t v3 = swift_task_alloc();
  *(_DWORD *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  uint64_t v5 = (void *)swift_task_alloc();
  v5[2] = v2;
  void v5[3] = sub_19F0C9514;
  void v5[4] = v3;
  swift_retain();
  sub_19EED54F8((uint64_t)sub_19EED8744, v2, sub_19F0C98C4, (uint64_t)v5, v4);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v20 == 1)
  {
    uint64_t v6 = (_OWORD *)(v0 + 72);
    if (qword_1EB390E38 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void *)(v0 + 144);
    id v8 = (void *)qword_1EB390E30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 136) = v11;
    *(void *)(v0 + 112) = 0xD000000000000026;
    *(void *)(v0 + 120) = 0x800000019F271B20;
    *uint64_t v6 = 0u;
    *(_OWORD *)(v0 + 88) = 0u;
    id v12 = v8;
    sub_19EEC3E70(v0 + 112, v0 + 72);
    *(unsigned char *)(v0 + 104) = 0;
    long long v13 = *(_OWORD *)(v0 + 88);
    *(_OWORD *)(v10 + 32) = *v6;
    *(_OWORD *)(v10 + 48) = v13;
    *(unsigned char *)(v10 + 64) = *(unsigned char *)(v0 + 104);
    *(void *)(v9 + 32) = v10;
    char v25 = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v25);
    swift_bridgeObjectRelease();

    uint64_t v14 = type metadata accessor for JetPackAsset(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  else
  {
    long long v15 = *(void **)(v0 + 144);
    *(_DWORD *)(v0 + 16) = v18;
    *(unsigned char *)(v0 + 20) = BYTE4(v18) & 1;
    *(void *)(v0 + 24) = v19;
    *(void *)(v0 + 32) = v20;
    *(void *)(v0 + 40) = v21;
    *(void *)(v0 + 48) = v22;
    *(void *)(v0 + 56) = v23;
    *(void *)(v0 + 64) = v24;
    sub_19EED3FF0((void *)(v0 + 16), v15);
    sub_19EED3F8C(v18, v19, v20, v21, v22, v23, v24);
  }
  Swift::String v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

void JetPackAssetDiskCache._evict(asset:)(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = (int *)(a1 + *(int *)(type metadata accessor for JetPackAsset(0) + 24));
  if ((v4[1] & 1) == 0)
  {
    int v5 = *v4;
    uint64_t v6 = __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(void *)(v1 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
    uint64_t v7 = *v6;
    MEMORY[0x1F4188790](v6);
    int v20 = v5;
    uint64_t v21 = v7;
    uint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
    MEMORY[0x1F4188790](v9);
    _OWORD v19[2] = v7;
    void v19[3] = sub_19F0C98AC;
    v19[4] = v10;
    swift_retain();
    sub_19EED54F8((uint64_t)sub_19EED8744, v7, sub_19F0C98C4, (uint64_t)v19, v8);
    swift_release();
    if (!v3)
    {
      uint64_t v11 = v24;
      if (v24 == 1)
      {
        sub_19F0C9534();
        swift_allocError();
        *id v12 = 1;
        swift_willThrow();
      }
      else
      {
        uint64_t v13 = v22;
        uint64_t v14 = v23;
        uint64_t v15 = v25;
        uint64_t v16 = v26;
        uint64_t v17 = v27;
        unint64_t v18 = v28;
        int v29 = v22;
        char v30 = BYTE4(v22) & 1;
        uint64_t v31 = v23;
        uint64_t v32 = v24;
        uint64_t v33 = v25;
        uint64_t v34 = v26;
        uint64_t v35 = v27;
        unint64_t v36 = v28;
        sub_19F0C7308((uint64_t)&v29);
        sub_19EED3F8C(v13, v14, v11, v15, v16, v17, v18);
      }
    }
  }
}

uint64_t sub_19F0C7308(uint64_t a1)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_19F1DB20C();
  uint64_t v45 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_19F1DB34C();
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  long long v44 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
  id v12 = v10;
  uint64_t v49 = sub_19EEC3F3C(0, 25, 0, MEMORY[0x1E4FBC860]);
  v13._uint64_t object = (void *)0x800000019F271C80;
  v13._uint64_t countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  sub_19EEBDC4C(a1, (uint64_t)v50, &qword_1EB390EC8);
  sub_19EEBDC4C((uint64_t)v50, (uint64_t)&v53, &qword_1EB390EC8);
  if (v54)
  {
    long long v61 = 0u;
    long long v62 = 0u;
  }
  else
  {
    *((void *)&v62 + 1) = MEMORY[0x1E4FBC150];
    LODWORD(v61) = v53;
  }
  sub_19EEBCD00((uint64_t)&v61, (uint64_t)v57);
  long long v56 = 0u;
  long long v55 = 0u;
  sub_19EEC3E70((uint64_t)v57, (uint64_t)&v55);
  char v60 = 0;
  long long v58 = v55;
  long long v59 = v56;
  uint64_t v14 = v49;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v43 = v1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v14 = sub_19EEC3F3C(0, v14[2] + 1, 1, v14);
  }
  unint64_t v17 = v14[2];
  unint64_t v16 = v14[3];
  if (v17 >= v16 >> 1) {
    uint64_t v14 = sub_19EEC3F3C((void *)(v16 > 1), v17 + 1, 1, v14);
  }
  uint64_t v14[2] = v17 + 1;
  unint64_t v18 = &v14[5 * v17];
  long long v19 = v58;
  long long v20 = v59;
  *((unsigned char *)v18 + 64) = v60;
  *((_OWORD *)v18 + 2) = v19;
  *((_OWORD *)v18 + 3) = v20;
  uint64_t v49 = v14;
  sub_19EEBD664((uint64_t)&v61, &qword_1EB393260);
  v21._uint64_t countAndFlagsBits = 0;
  v21._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *(void *)(v11 + 32) = v49;
  *(void *)&long long v58 = v12;
  LOBYTE(v55) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v55);

  swift_bridgeObjectRelease();
  sub_19EEBDC4C((uint64_t)v50, (uint64_t)&v51, &qword_1EB390EC8);
  if (v52) {
    goto LABEL_19;
  }
  int v22 = v51;
  sub_19EEBDC4C(a1 + 24, (uint64_t)v63, &qword_1EB392310);
  sub_19EEBDC4C((uint64_t)v63, (uint64_t)&v64, &qword_1EB392310);
  if (!*((void *)&v64 + 1))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v8, 1, 1, v48);
    goto LABEL_18;
  }
  long long v58 = v64;
  uint64_t v23 = v45;
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v5, *MEMORY[0x1E4F276C0], v3);
  sub_19EEC4910();
  sub_19F1DB33C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  uint64_t v24 = v47;
  uint64_t v25 = v48;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v8, 0, 1, v48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v8, 1, v25) == 1)
  {
LABEL_18:
    sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1EB392E50);
LABEL_19:
    sub_19F0C9534();
    swift_allocError();
    *long long v40 = 0;
    return swift_willThrow();
  }
  LODWORD(v45) = v22;
  uint64_t v26 = v44;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v44, v8, v25);
  uint64_t v27 = self;
  id v28 = objc_msgSend(v27, sel_defaultManager);
  sub_19F1DB2CC();
  int v29 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  unsigned int v30 = objc_msgSend(v28, sel_fileExistsAtPath_, v29);

  if (v30)
  {
    id v31 = objc_msgSend(v27, sel_defaultManager);
    uint64_t v32 = (void *)sub_19F1DB25C();
    *(void *)&long long v58 = 0;
    unsigned int v33 = objc_msgSend(v31, sel_removeItemAtURL_error_, v32, &v58);

    if (!v33)
    {
      id v42 = (id)v58;
      sub_19F1DB19C();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v25);
    }
    id v34 = (id)v58;
  }
  uint64_t v35 = __swift_project_boxed_opaque_existential_1((void *)(v46 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(void *)(v46 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  uint64_t v36 = *v35;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  *((_DWORD *)&v43 - 4) = v45;
  uint64_t v38 = *(void *)(v36 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  MEMORY[0x1F4188790](v37);
  *(&v43 - 4) = v36;
  *(&v43 - 3) = (uint64_t)sub_19F0C97FC;
  *(&v43 - 2) = v39;
  swift_retain();
  sub_19EED54F8((uint64_t)sub_19EED8744, v36, sub_19EED5690, (uint64_t)(&v43 - 6), v38);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v25);
}

uint64_t JetPackAssetDiskCache._allCachedAssets.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_19F0C7AE4, 0, 0);
}

uint64_t sub_19F0C7AE4()
{
  uint64_t v1 = __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  uint64_t v4 = (void *)swift_task_alloc();
  uint64_t v4[2] = v2;
  void v4[3] = sub_19F0C9588;
  v4[4] = v2;
  swift_retain();
  sub_19F0C3D9C((uint64_t)sub_19EED8744, v2, (void (*)(uint64_t *__return_ptr))sub_19F0C95A4, (uint64_t)v4, v3);
  uint64_t v6 = v5;
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v0 + 16);
  swift_retain();
  unint64_t v8 = sub_19F0C9184(v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v9(v8);
}

uint64_t sub_19F0C7C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v7 = *(_OWORD *)(a1 + 16);
  v34[0] = *(_OWORD *)a1;
  v34[1] = v7;
  v34[2] = *(_OWORD *)(a1 + 32);
  uint64_t v35 = *(void *)(a1 + 48);
  sub_19EED3FF0(v34, v6);
  uint64_t v8 = type metadata accessor for JetPackAsset(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_19EEBD664((uint64_t)v6, &qword_1EB3911D0);
    if (qword_1EB390E38 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)qword_1EB390E30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
    id v12 = v10;
    unsigned int v33 = sub_19EEC3F3C(0, 25, 0, MEMORY[0x1E4FBC860]);
    v13._uint64_t object = (void *)0x800000019F271C60;
    v13._uint64_t countAndFlagsBits = 0xD000000000000018;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_19EEBDC4C((uint64_t)v34, (uint64_t)v36, &qword_1EB390EC8);
    sub_19EEBDC4C((uint64_t)v36, (uint64_t)&v37, &qword_1EB390EC8);
    if (v38)
    {
      long long v31 = 0u;
      long long v32 = 0u;
    }
    else
    {
      *((void *)&v32 + 1) = MEMORY[0x1E4FBC150];
      LODWORD(v31) = v37;
    }
    uint64_t v24 = a2;
    sub_19EEBCD00((uint64_t)&v31, (uint64_t)v27);
    long long v25 = 0u;
    long long v26 = 0u;
    sub_19EEC3E70((uint64_t)v27, (uint64_t)&v25);
    char v30 = 0;
    long long v28 = v25;
    long long v29 = v26;
    uint64_t v15 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_19EEC3F3C(0, v15[2] + 1, 1, v15);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      uint64_t v15 = sub_19EEC3F3C((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    void v15[2] = v17 + 1;
    unint64_t v18 = &v15[5 * v17];
    long long v19 = v28;
    long long v20 = v29;
    *((unsigned char *)v18 + 64) = v30;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    unsigned int v33 = v15;
    sub_19EEBD664((uint64_t)&v31, &qword_1EB393260);
    v21._uint64_t countAndFlagsBits = 0;
    v21._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(void *)(v11 + 32) = v33;
    *(void *)&long long v28 = v12;
    LOBYTE(v25) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v25);

    swift_bridgeObjectRelease();
    uint64_t v14 = 1;
    a2 = v24;
  }
  else
  {
    sub_19EED544C((uint64_t)v6, a2, type metadata accessor for JetPackAsset);
    uint64_t v14 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v14, 1, v8);
}

uint64_t JetPackAssetDiskCache._empty()()
{
  *(void *)(v1 + 240) = v0;
  return MEMORY[0x1F4188298](sub_19F0C8004, 0, 0);
}

uint64_t sub_19F0C8004()
{
  uint64_t v44 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 72);
  uint64_t v2 = v0 + 112;
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v4 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  *(void *)(v0 + 136) = MEMORY[0x1E4FBB1A0];
  strcpy((char *)(v0 + 112), "Emptying cache");
  *(unsigned char *)(v0 + 127) = -18;
  _OWORD *v1 = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  id v7 = v4;
  sub_19EEC3E70(v0 + 112, v0 + 72);
  *(unsigned char *)(v0 + 104) = 0;
  long long v8 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v6 + 32) = *v1;
  *(_OWORD *)(v6 + 48) = v8;
  *(unsigned char *)(v6 + 64) = *(unsigned char *)(v0 + 104);
  *(void *)(v5 + 32) = v6;
  *(void *)&long long v41 = v7;
  LOBYTE(v40) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v40);
  swift_bridgeObjectRelease();

  uint64_t v9 = __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(void *)(v3 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(*v9 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  id v12 = (void *)swift_task_alloc();
  void v12[2] = v10;
  v12[3] = sub_19F0C9588;
  void v12[4] = v10;
  swift_retain();
  sub_19F0C3D9C((uint64_t)sub_19EED8744, v10, (void (*)(uint64_t *__return_ptr))sub_19F0C95A4, (uint64_t)v12, v11);
  uint64_t v14 = v13;
  swift_release();
  swift_task_dealloc();
  uint64_t v15 = (void *)qword_1EB390E30;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
  id v17 = v15;
  long long v40 = sub_19EEC3F3C(0, 23, 0, MEMORY[0x1E4FBC860]);
  v18._uint64_t countAndFlagsBits = 0x20646E756F46;
  v18._uint64_t object = (void *)0xE600000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  uint64_t v19 = *(void *)(v14 + 16);
  *(void *)(v0 + 136) = MEMORY[0x1E4FBB550];
  *(void *)(v0 + 112) = v19;
  sub_19EEBCD00(v2, v0 + 144);
  _OWORD *v1 = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  sub_19EEC3E70(v0 + 144, (uint64_t)v1);
  *(unsigned char *)(v0 + 104) = 0;
  long long v20 = *(_OWORD *)(v0 + 88);
  long long v41 = *v1;
  long long v42 = v20;
  char v43 = *(unsigned char *)(v0 + 104);
  Swift::String v21 = v40;
  uint64_t v39 = v14;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v21 = sub_19EEC3F3C(0, v21[2] + 1, 1, v21);
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1) {
    Swift::String v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
  }
  void v21[2] = v23 + 1;
  uint64_t v24 = &v21[5 * v23];
  long long v25 = v41;
  long long v26 = v42;
  *((unsigned char *)v24 + 64) = v43;
  *((_OWORD *)v24 + 2) = v25;
  *((_OWORD *)v24 + 3) = v26;
  long long v40 = v21;
  sub_19EEBD664(v2, &qword_1EB393260);
  v27._uint64_t object = (void *)0x800000019F271B50;
  v27._uint64_t countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  *(void *)(v16 + 32) = v40;
  *(void *)&long long v41 = v17;
  LOBYTE(v40) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);
  swift_bridgeObjectRelease();

  uint64_t v28 = *(void *)(v39 + 16);
  if (v28)
  {
    long long v29 = (_OWORD *)(v0 + 16);
    char v30 = (long long *)(v39 + 32);
    uint64_t v31 = MEMORY[0x1E4FBC860];
    do
    {
      long long v33 = v30[1];
      long long v32 = v30[2];
      long long v34 = *v30;
      *(void *)(v0 + 64) = *((void *)v30 + 6);
      *(_OWORD *)(v0 + 32) = v33;
      *(_OWORD *)(v0 + 48) = v32;
      *long long v29 = v34;
      sub_19F0C95BC((uint64_t)v29);
      sub_19F0C7308((uint64_t)v29);
      sub_19F0C960C((uint64_t)v29);
      char v30 = (long long *)((char *)v30 + 56);
      --v28;
    }
    while (v28);
  }
  else
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v31 + 16))
  {
    sub_19EFA6878();
    swift_allocError();
    uint64_t v36 = v35;
    if (!*(void *)(v31 + 16)) {
      sub_19F199C68((unint64_t)"JetEngine/CompoundError.swift", 0x1DuLL, 2, 0x15uLL);
    }
    *uint64_t v36 = v31;
    swift_willThrow();
    int v37 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    swift_bridgeObjectRelease();
    int v37 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v37();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JetPackAssetDiskCache._beginTransaction()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*__swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(void *)(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24))+ OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_transactionCount);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_19EE66474(v2);
  os_unfair_lock_unlock(v3);
}

Swift::Void __swiftcall JetPackAssetDiskCache._endTransaction()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*__swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(void *)(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24))+ OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_transactionCount);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_19EE7AB04(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_19F0C89C4(uint64_t a1)
{
  return sub_19F0C7308(a1);
}

uint64_t JetPackAssetDiskCache.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_assetsURL;
  uint64_t v2 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore);
  return v0;
}

uint64_t JetPackAssetDiskCache.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_assetsURL;
  uint64_t v2 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore);
  return swift_deallocClassInstance();
}

uint64_t sub_19F0C8E64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_19EE17780;
  return JetPackAssetDiskCache._cache(_:)(a1, a2);
}

uint64_t sub_19F0C8F10(uint64_t a1)
{
  JetPackAssetDiskCache._evict(asset:)(a1);
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return sub_19EED02BC(v2);
}

uint64_t sub_19F0C8FAC()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_19EE17780;
  v3[30] = v2;
  return MEMORY[0x1F4188298](sub_19F0C8004, 0, 0);
}

uint64_t sub_19F0C9058()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_19EE19904;
  _OWORD v3[2] = v2;
  return MEMORY[0x1F4188298](sub_19F0C7AE4, 0, 0);
}

uint64_t sub_19F0C9100@<X0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr)@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_19EE66538(a1);
  if (!v3)
  {
    a2(&v7);
    uint64_t result = swift_release();
    *a3 = v7;
  }
  return result;
}

unint64_t sub_19F0C9184(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for JetPackAsset(0);
  MEMORY[0x1F4188790](v28);
  uint64_t v27 = (uint64_t)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v25 = (uint64_t)v23 - v10;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v24 = v9;
  long long v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  v23[1] = a1;
  id v12 = (uint64_t *)(a1 + 40);
  unint64_t v13 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v15 = v12[4];
    unint64_t v14 = v12[5];
    uint64_t v16 = v12[3];
    uint64_t v17 = *v12;
    char v18 = *((unsigned char *)v12 - 4);
    int v29 = *((_DWORD *)v12 - 2);
    char v30 = v18;
    uint64_t v31 = v17;
    long long v32 = *(_OWORD *)(v12 + 1);
    uint64_t v33 = v16;
    uint64_t v34 = v15;
    unint64_t v35 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19EEE0560(v15, v14);
    sub_19F0C7C64((uint64_t)&v29, (uint64_t)v6);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_19EED5BFC(v15, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EED5BFC(v15, v14);
    if ((*v26)(v6, 1, v28) == 1)
    {
      sub_19EEBD664((uint64_t)v6, &qword_1EB3911D0);
    }
    else
    {
      uint64_t v19 = v25;
      sub_19EED544C((uint64_t)v6, v25, type metadata accessor for JetPackAsset);
      sub_19EED544C(v19, v27, type metadata accessor for JetPackAsset);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v13 = sub_19F09E860(0, *(void *)(v13 + 16) + 1, 1, v13);
      }
      unint64_t v21 = *(void *)(v13 + 16);
      unint64_t v20 = *(void *)(v13 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v13 = sub_19F09E860(v20 > 1, v21 + 1, 1, v13);
      }
      *(void *)(v13 + 16) = v21 + 1;
      sub_19EED544C(v27, v13+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21, type metadata accessor for JetPackAsset);
    }
    v12 += 7;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_19F0C94D4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_19EFDF218(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_19F0C94F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EFDFB10(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(_DWORD *)(v2 + 32), a2);
}

uint64_t sub_19F0C9514@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19EFDE7E0(a1, *(_DWORD *)(v2 + 16), a2);
}

unint64_t sub_19F0C9534()
{
  unint64_t result = qword_1E94742D0;
  if (!qword_1E94742D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94742D0);
  }
  return result;
}

uint64_t sub_19F0C9588@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19EFDEBC0(a1, a2);
}

void sub_19F0C95A4(void *a1@<X8>)
{
}

uint64_t sub_19F0C95BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EEE0560(v2, v3);
  return a1;
}

uint64_t sub_19F0C960C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19EED5BFC(v2, v3);
  return a1;
}

uint64_t sub_19F0C965C()
{
  return type metadata accessor for JetPackAssetDiskCache();
}

uint64_t method lookup function for JetPackAssetDiskCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for JetPackAssetDiskCache);
}

unsigned char *storeEnumTagSinglePayload for JetPackAssetDiskCacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F0C9748);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackAssetDiskCacheError()
{
  return &type metadata for JetPackAssetDiskCacheError;
}

unint64_t sub_19F0C9788()
{
  unint64_t result = qword_1E9474310;
  if (!qword_1E9474310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474310);
  }
  return result;
}

uint64_t sub_19F0C97DC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_19F0C9100(a1, *(void (**)(uint64_t *__return_ptr))(v2 + 16), a2);
}

void *sub_19F0C97FC(uint64_t a1)
{
  return sub_19EFDF7E8(a1, *(_DWORD *)(v1 + 16));
}

uint64_t sub_19F0C9818()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F0C9858@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19EFDEE1C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void sub_19F0C9878(void *a1@<X8>)
{
  sub_19F0C3C34(*(void *)(v1 + 16));
  if (!v2) {
    *a1 = v4;
  }
}

uint64_t sub_19F0C98AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19F0C9514(a1, a2);
}

void sub_19F0C98C4()
{
}

ValueMetadata *actionTableFromUserInfo(_:)(uint64_t a1)
{
  unint64_t result = (ValueMetadata *)sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, a1);
  if (!result) {
    return &type metadata for EmptyActionKindTable;
  }
  return result;
}

uint64_t decodeActionModel<A, B>(using:container:forKey:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CodeByKind();
  sub_19F1DD1EC();
  swift_getWitnessTable();
  sub_19F1DD17C();
  if (v1)
  {
    sub_19F1DD12C();
    __swift_project_boxed_opaque_existential_1(v10, v11);
    uint64_t v5 = sub_19F1DD89C();
    sub_19F0D75E4(0xD000000000000027, 0x800000019F269EF0, v5, (uint64_t)&v13);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    sub_19EEC3ED8((uint64_t)&v13, (uint64_t)v10, qword_1E946D938);
    uint64_t v6 = v11;
    if (v11)
    {
      uint64_t v7 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v7 + 8))(MetatypeMetadata, v1, v6, v7);

      sub_19EEBD664((uint64_t)&v13, qword_1E946D938);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v13, qword_1E946D938);

      uint64_t result = sub_19EEBD664((uint64_t)v10, qword_1E946D938);
    }
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else if (*((void *)&v14 + 1))
  {
    sub_19EEC4154((uint64_t)&v13, a1);
    return (*(uint64_t (**)(long long *, uint64_t))(*(void *)(v3 - 8) + 8))(&v13, v3);
  }
  else
  {
    uint64_t v9 = sub_19F1DCAAC();
    uint64_t result = (*(uint64_t (**)(long long *, uint64_t))(*(void *)(v9 - 8) + 8))(&v13, v9);
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t encodeActionModel<A, B>(_:using:container:forKey:)(uint64_t a1)
{
  sub_19EEC3ED8(a1, (uint64_t)&v4, qword_1E946D0B8);
  if (!v5) {
    return sub_19EEBD664((uint64_t)&v4, qword_1E946D0B8);
  }
  sub_19EEBB420(&v4, (uint64_t)v6);
  sub_19EEC4154((uint64_t)v6, (uint64_t)v3);
  CodeByKind.init(wrappedValue:)((uint64_t)v3, (uint64_t)&v4);
  sub_19F1DD2BC();
  uint64_t v1 = type metadata accessor for CodeByKind();
  swift_getWitnessTable();
  sub_19F1DD2AC();
  (*(void (**)(long long *, uint64_t))(*(void *)(v1 - 8) + 8))(&v4, v1);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
}

ValueMetadata *type metadata accessor for EmptyActionKindTable()
{
  return &type metadata for EmptyActionKindTable;
}

unint64_t sub_19F0C9D2C()
{
  unint64_t result = sub_19EFB4D34(MEMORY[0x1E4FBC860]);
  qword_1E9498B98 = result;
  return result;
}

uint64_t sub_19F0C9D54()
{
  if (qword_1E94701E0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

double sub_19F0C9DB0@<D0>(_OWORD *a1@<X8>)
{
  return ComponentModel.contextMenu.getter(a1);
}

double ComponentModel.contextMenu.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void ComponentModel<>.doNotAdoptBothComponentModelAndIdentifiable()()
{
}

uint64_t ComponentModel<>.id.getter()
{
  return sub_19F1DCC8C();
}

uint64_t ComponentTypes.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1E946E490);
  swift_getTupleTypeMetadata2();
  sub_19F1DC1CC();
  uint64_t result = sub_19F1DBBAC();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

void sub_19F0C9F00(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

uint64_t sub_19F0C9F18()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t dispatch thunk of ComponentModel.segue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ComponentModel.contextMenu.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

JetEngine::AppMetricsFieldProvider __swiftcall AppMetricsFieldProvider.init(bundle:)(JetEngine::AppMetricsFieldProvider bundle)
{
  v1->bundle.super.Class isa = bundle.bundle.super.isa;
  return bundle;
}

void AppMetricsFieldProvider.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19F0C9FA4(uint64_t a1)
{
  return AppMetricsFieldProvider.addMetricsFields(into:using:)(a1);
}

ValueMetadata *type metadata accessor for AppMetricsFieldProvider()
{
  return &type metadata for AppMetricsFieldProvider;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.appending(_:)(Swift::String a1)
{
  uint64_t object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v5 = v1;
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19F24EB80;
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = countAndFlagsBits;
  *(void *)(v8 + 56) = object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19EE58DE8();
  uint64_t v9 = sub_19F1DBCCC();
  uint64_t v11 = v10;
  uint64_t v12 = swift_bridgeObjectRelease();
  uint64_t *v5 = v9;
  v5[1] = v11;
  result.rawValue._uint64_t object = v13;
  result.rawValue._uint64_t countAndFlagsBits = v12;
  return result;
}

uint64_t PreferenceNamespace.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static PreferenceNamespace.delimiter.getter()
{
  return 95;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.init(subsystem:)(Swift::String subsystem)
{
  uint64_t object = subsystem._object;
  uint64_t countAndFlagsBits = subsystem._countAndFlagsBits;
  long long v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
  *(void *)(v5 + 32) = countAndFlagsBits;
  *(void *)(v5 + 40) = object;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19EE58DE8();
  uint64_t v6 = sub_19F1DBCCC();
  uint64_t v8 = v7;
  uint64_t v9 = swift_bridgeObjectRelease();
  *long long v4 = v6;
  v4[1] = v8;
  result.rawValue._uint64_t object = v10;
  result.rawValue._uint64_t countAndFlagsBits = v9;
  return result;
}

uint64_t static PreferenceNamespace.jetEngine.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB3927C8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EB3925C8;
  *a1 = qword_1EB3925C0;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.init()()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19EE58DE8();
  uint64_t v2 = sub_19F1DBCCC();
  uint64_t *v1 = v2;
  v1[1] = (uint64_t)v3;
  result.rawValue._uint64_t object = v3;
  result.rawValue._uint64_t countAndFlagsBits = v2;
  return result;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.init(components:)(Swift::OpaquePointer components)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19EE58DE8();
  uint64_t v3 = sub_19F1DBCCC();
  uint64_t v5 = v4;
  uint64_t v6 = swift_bridgeObjectRelease();
  *uint64_t v2 = v3;
  v2[1] = v5;
  result.rawValue._uint64_t object = v7;
  result.rawValue._uint64_t countAndFlagsBits = v6;
  return result;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.init(subsystem:category:)(Swift::String subsystem, Swift::String category)
{
  uint64_t object = category._object;
  uint64_t countAndFlagsBits = category._countAndFlagsBits;
  uint64_t v5 = subsystem._object;
  uint64_t v6 = subsystem._countAndFlagsBits;
  uint64_t v7 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19F24EB80;
  *(void *)(v8 + 32) = v6;
  *(void *)(v8 + 40) = v5;
  *(void *)(v8 + 48) = countAndFlagsBits;
  *(void *)(v8 + 56) = object;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19EE58DE8();
  uint64_t v9 = sub_19F1DBCCC();
  uint64_t v11 = v10;
  uint64_t v12 = swift_bridgeObjectRelease();
  *uint64_t v7 = v9;
  v7[1] = v11;
  result.rawValue._uint64_t object = v13;
  result.rawValue._uint64_t countAndFlagsBits = v12;
  return result;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.appending(_:)(Swift::Int a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EB80;
  *(void *)(v6 + 32) = v5;
  *(void *)(v6 + 40) = v4;
  swift_bridgeObjectRetain();
  *(void *)(v6 + 48) = sub_19F1DD2EC();
  *(void *)(v6 + 56) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19EE58DE8();
  uint64_t v8 = sub_19F1DBCCC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_bridgeObjectRelease();
  *uint64_t v3 = v8;
  v3[1] = v10;
  result.rawValue._uint64_t object = v12;
  result.rawValue._uint64_t countAndFlagsBits = v11;
  return result;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.appending(_:)(JetEngine::PreferenceNamespace a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)a1.rawValue._countAndFlagsBits;
  uint64_t v4 = *(void *)(a1.rawValue._countAndFlagsBits + 8);
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19F24EB80;
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v5;
  *(void *)(v8 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19EE58DE8();
  uint64_t v9 = sub_19F1DBCCC();
  uint64_t v11 = v10;
  uint64_t v12 = swift_bridgeObjectRelease();
  *uint64_t v3 = v9;
  v3[1] = v11;
  result.rawValue._uint64_t object = v13;
  result.rawValue._uint64_t countAndFlagsBits = v12;
  return result;
}

uint64_t static PreferenceNamespace.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_19F1DD44C();
  }
}

BOOL static ActionOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ActionOutcome.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t ActionOutcome.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F0CA670()
{
  unint64_t result = qword_1E9474318;
  if (!qword_1E9474318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474318);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActionOutcome(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    ValueMetadata *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F0CA790);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          ValueMetadata *result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t dispatch thunk of ActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

double sub_19F0CA7CC(double a1, double a2, double a3, double a4)
{
  double v6 = a1;
  double v7 = a1 / a3;
  if ((*(void *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    double v8 = v7;
  }
  else {
    double v8 = 0.0;
  }
  if ((*(void *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    double v9 = a2 / a4;
  }
  else {
    double v9 = 0.0;
  }
  uint64_t v10 = sub_19F1DBD7C();
  uint64_t v12 = v11;
  if (v10 == sub_19F1DBD7C() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_12;
    }
  }
  if (v6 == a2) {
    return floor(v6);
  }
LABEL_12:
  uint64_t v15 = sub_19F1DBD7C();
  uint64_t v17 = v16;
  if (v15 == sub_19F1DBD7C() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
    return floor(v6);
  }
  char v19 = sub_19F1DD44C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19) {
    return floor(v6);
  }
  uint64_t v20 = sub_19F1DBD7C();
  uint64_t v22 = v21;
  if (v20 == sub_19F1DBD7C() && v22 == v23)
  {
    swift_bridgeObjectRelease_n();
LABEL_20:
    double v6 = a3;
    return floor(v6);
  }
  char v24 = sub_19F1DD44C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v24) {
    goto LABEL_20;
  }
  double v26 = v9 * a3;
  uint64_t v27 = sub_19F1DBD7C();
  uint64_t v29 = v28;
  if (v27 == sub_19F1DBD7C() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v31 = sub_19F1DD44C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31)
  {
LABEL_26:
    if (v8 >= v9) {
      double v6 = v26;
    }
    return floor(v6);
  }
  if (v8 < v9) {
    double v6 = v26;
  }
  return floor(v6);
}

double static AMSMetricsIdentifierFieldsProvider.metricsResetInterval.getter()
{
  return 15552000.0;
}

uint64_t static AMSMetricsIdentifierFieldsProvider.metricsKeys.getter()
{
  if (qword_1E946E1F0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accountProvider:process:bag:shouldMigrate:resetInterval:keys:activeITunesAccountRequired:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v15 = *a3;
  sub_19EEC4154(a1, (uint64_t)v18);
  uint64_t v17 = v15;
  sub_19F0CABD0((uint64_t)v18, a2, &v17, a4, a5, a6, (uint64_t)sub_19F0CAB70, 0, a7, a8);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_19F0CAB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474348);
  a3[4] = &off_1EF144690;
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

void sub_19F0CABD0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  v50[4] = *MEMORY[0x1E4F143B8];
  uint64_t v18 = *a3;
  *(void *)(a9 + 8) = *a3;
  *(void *)(a9 + 16) = 0;
  *(unsigned char *)a9 = a4;
  sub_19EEC4154(a1, a9 + 24);
  *(void *)(a9 + 64) = a2;
  *(double *)(a9 + 72) = a10;
  *(void *)(a9 + 80) = a5;
  *(unsigned char *)(a9 + 88) = a6;
  *(void *)(a9 + 96) = a7;
  *(void *)(a9 + 104) = a8;
  if (!v18)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    return;
  }
  *(void *)&long long v47 = v18;
  id v19 = a2;
  swift_retain();
  swift_unknownObjectRetain();
  if (!sub_19EE6BA68(0x696669746E656469, 0xEB00000000737265, 0, 0))
  {

    swift_release();
    swift_unknownObjectRelease();
    uint64_t v27 = 0;
    goto LABEL_7;
  }
  sub_19F1DAD0C();
  swift_allocObject();
  sub_19F1DACFC();
  uint64_t v20 = self;
  uint64_t v21 = (void *)sub_19F1DBB1C();
  swift_bridgeObjectRelease();
  *(void *)&long long v44 = 0;
  id v22 = objc_msgSend(v20, sel_dataWithJSONObject_options_error_, v21, 0, &v44);

  id v23 = (id)v44;
  if (v22)
  {
    uint64_t v24 = sub_19F1DB40C();
    unint64_t v26 = v25;

    sub_19F05084C();
    sub_19F1DACEC();
    swift_release();
    sub_19EEA072C(v24, v26);

    swift_release();
    swift_unknownObjectRelease();
    uint64_t v27 = v47;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_bridgeObjectRelease();
    *(void *)(a9 + 16) = v27;
    return;
  }
  uint64_t v28 = v23;
  swift_release();
  uint64_t v29 = (void *)sub_19F1DB19C();

  swift_willThrow();
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v30 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_19F24EAD0;
  id v32 = v30;
  char v43 = sub_19EEC3F3C(0, 47, 0, MEMORY[0x1E4FBC860]);
  v33._uint64_t object = (void *)0x800000019F26ED20;
  v33._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  swift_getErrorValue();
  v50[3] = v42;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v50);
  (*(void (**)(uint64_t *))(*(void *)(v42 - 8) + 16))(boxed_opaque_existential_2Tm);
  sub_19EEBCD00((uint64_t)v50, (uint64_t)v46);
  long long v44 = 0u;
  long long v45 = 0u;
  sub_19EEC3E70((uint64_t)v46, (uint64_t)&v44);
  char v49 = 0;
  long long v47 = v44;
  long long v48 = v45;
  unint64_t v35 = v43;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v35 = sub_19EEC3F3C(0, v43[2] + 1, 1, v43);
  }
  unint64_t v37 = v35[2];
  unint64_t v36 = v35[3];
  if (v37 >= v36 >> 1) {
    unint64_t v35 = sub_19EEC3F3C((void *)(v36 > 1), v37 + 1, 1, v35);
  }
  _OWORD v35[2] = v37 + 1;
  char v38 = &v35[5 * v37];
  long long v39 = v47;
  long long v40 = v48;
  *((unsigned char *)v38 + 64) = v49;
  *((_OWORD *)v38 + 2) = v39;
  *((_OWORD *)v38 + 3) = v40;
  sub_19EEBD664((uint64_t)v50, &qword_1EB393260);
  v41._uint64_t countAndFlagsBits = 0;
  v41._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v41);
  *(void *)(v31 + 32) = v35;
  *(void *)&long long v47 = v32;
  LOBYTE(v44) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v44);

  swift_release();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

void sub_19F0CB064(uint64_t a1)
{
}

void sub_19F0CB088(uint64_t a1)
{
}

void sub_19F0CB0A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  double v7 = (void *)sub_19F1DBD4C();
  id v8 = objc_msgSend(self, sel_keyWithName_crossDeviceSync_, v7, a4 & 1);

  *a5 = v8;
}

id sub_19F0CB118()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  unint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_19F250E90;
  if (qword_1E946DC40 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1E946DB48;
  *(void *)(v0 + 32) = qword_1E946DB48;
  uint64_t v2 = qword_1E946DC58;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  unsigned int v4 = (void *)qword_1E946DC48;
  *(void *)(v0 + 40) = qword_1E946DC48;
  sub_19F1DC17C();
  if ((v0 & 0x8000000000000000) != 0 || (v0 & 0x4000000000000000) != 0)
  {
    id v7 = v4;
    uint64_t v5 = (uint64_t)sub_19EF9F3DC(v0);
    id result = (id)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = v0 & 0xFFFFFFFFFFFFFF8;
    id result = v4;
  }
  qword_1E946E1E0 = v5;
  return result;
}

void AMSMetricsIdentifierFieldsProvider.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t AMSMetricsIdentifierFieldsProvider.addMetricsFields(into:using:)(uint64_t a1, uint64_t *a2)
{
  void (*v41)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  id v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char v64;
  unsigned int v65;
  unsigned int v66;
  long long *v67;
  unsigned char *v68;
  uint64_t v69;
  void (*v70)(void *, long long *, uint64_t, uint64_t, long long *, unsigned char *);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  BOOL v82;
  int64_t v83;
  unint64_t v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  NSObject *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char *v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  long long v101;
  long long v102;
  _OWORD v103[2];
  long long v104;
  long long v105;
  long long v106;
  uint64_t v107;
  uint64_t v108;
  long long v109;
  uint64_t v110;
  _UNKNOWN **v111;
  unsigned char v112[32];
  long long v113;
  long long v114;
  _UNKNOWN **v115;
  _OWORD v116[3];
  void v117[14];
  unsigned char v118[128];
  uint64_t v119;

  id v3 = v2;
  uint64_t v96 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v93 = ((char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v119 = sub_19F1DBA0C();
  uint64_t v98 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119);
  uint64_t v97 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a2;
  uint64_t v12 = swift_allocObject();
  uint64_t v94 = v12;
  *(void *)(v12 + 16) = MEMORY[0x1E4FBC868];
  unint64_t v95 = (void *)(v12 + 16);
  swift_bridgeObjectRetain();
  char v13 = sub_19EF911A8(0xD000000000000040, 0x800000019F26EEB0, v11);
  swift_bridgeObjectRelease();
  sub_19F0CCFB0((uint64_t)v3, (uint64_t)v118);
  if (v13 == 2) {
    char v14 = v118[88];
  }
  else {
    char v14 = v13;
  }
  sub_19F0CCFE8((uint64_t)v118);
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_19EF91F3C(0xD000000000000029, 0x800000019F26EE40, v11);
  swift_bridgeObjectRelease();
  sub_19F0CCFB0((uint64_t)v3, (uint64_t)v117);
  if (!v15)
  {
    unint64_t v15 = v117[10];
    swift_bridgeObjectRetain();
  }
  sub_19F0CCFE8((uint64_t)v117);
  int v16 = *v3;
  unint64_t v100 = v15;
  if (v16 == 1)
  {
    uint64_t v17 = *((void *)v3 + 1);
    if (v17)
    {
      uint64_t v18 = *((void *)v3 + 2);
      if (v18)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_19EEBBC1C(0xD000000000000019, 0x800000019F269850, v11);
        uint64_t v21 = v20;
        swift_bridgeObjectRelease();
        if (v21)
        {
          char v92 = v17;
          (*((void (**)(long long *__return_ptr, uint64_t, uint64_t))v3 + 12))(&v101, v19, v21);
          swift_bridgeObjectRelease();
          if (*((void *)&v102 + 1))
          {
            swift_bridgeObjectRelease();
            sub_19EEBB420(&v101, (uint64_t)&v113);
            id v22 = dispatch_group_create();
            dispatch_group_enter(v22);
            sub_19EEC4154((uint64_t)&v113, (uint64_t)&v109);
            sub_19F0CCFB0((uint64_t)v3, (uint64_t)&v101);
            uint64_t v23 = swift_allocObject();
            sub_19EEBB420(&v109, v23 + 16);
            *(void *)(v23 + 56) = v18;
            long long v24 = v105;
            *(_OWORD *)(v23 + 128) = v104;
            *(_OWORD *)(v23 + 144) = v24;
            *(_OWORD *)(v23 + 160) = v106;
            long long v25 = v102;
            *(_OWORD *)(v23 + 64) = v101;
            *(_OWORD *)(v23 + 80) = v25;
            long long v26 = v103[1];
            *(_OWORD *)(v23 + 96) = v103[0];
            *(_OWORD *)(v23 + 112) = v26;
            *(void *)(v23 + 176) = v92;
            *(unsigned char *)(v23 + 184) = v14 & 1;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D638);
            uint64_t v27 = swift_allocObject();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
            uint64_t v28 = swift_allocObject();
            *(_DWORD *)(v28 + 16) = 0;
            uint64_t v29 = MEMORY[0x1E4FBC860];
            *(void *)(v27 + 16) = v28;
            *(void *)(v27 + 24) = v29;
            *(unsigned char *)(v27 + 32) = 0;
            uint64_t v30 = sub_19F1DC37C();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 1, 1, v30);
            uint64_t v31 = (void *)swift_allocObject();
            v31[2] = 0;
            _OWORD v31[3] = 0;
            void v31[4] = &unk_1E9474338;
            void v31[5] = v23;
            unint64_t v100 = v27;
            void v31[6] = v27;
            swift_unknownObjectRetain();
            swift_retain();
            sub_19EE9A0F8((uint64_t)v10, (uint64_t)&unk_1E9474340, (uint64_t)v31);
            swift_release();
            uint64_t v32 = swift_allocObject();
            *(void *)(v32 + 16) = v94;
            *(void *)(v32 + 24) = v22;
            uint64_t v33 = swift_allocObject();
            *(void *)(v33 + 16) = v22;
            uint64_t v34 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
            unint64_t v35 = v97;
            int64_t v36 = v98;
            uint64_t v37 = v119;
            (*(void (**)(char *, void, uint64_t))(v98 + 104))(v97, *MEMORY[0x1E4FBCB48], v119);
            uint64_t v93 = v22;
            swift_retain();
            uint64_t v38 = sub_19F1DC8BC();
            (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
            uint64_t v110 = v34;
            char v111 = &protocol witness table for OS_dispatch_queue;
            *(void *)&uint64_t v109 = v38;
            *(void *)&unint64_t v101 = sub_19F0CD2C4;
            *((void *)&v101 + 1) = v32;
            *(void *)&uint64_t v102 = sub_19F0CD304;
            *((void *)&v102 + 1) = v33;
            sub_19EEC4154((uint64_t)&v109, (uint64_t)v103);
            BYTE8(v104) = 0;
            swift_retain();
            swift_retain();
            sub_19EF52E34((uint64_t)&v101);
            sub_19EEBD664((uint64_t)&v101, &qword_1E946D620);
            swift_unknownObjectRelease();

            swift_release();
            swift_release();
            swift_release();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v113);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v109);
            long long v39 = v95;
            goto LABEL_48;
          }
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_19EEBD664((uint64_t)&v101, &qword_1E9474320);
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        unint64_t v15 = v100;
      }
    }
  }
  *(void *)&unint64_t v101 = v11;
  uint64_t v40 = (uint64_t)sub_19F0CC6E8((uint64_t *)&v101);
  if (*v3 != 1) {
    goto LABEL_47;
  }
  Swift::String v41 = (void (*)(long long *__return_ptr, uint64_t, uint64_t))*((void *)v3 + 12);
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_19EEBBC1C(0xD000000000000019, 0x800000019F269850, v11);
  long long v44 = v43;
  swift_bridgeObjectRelease();
  v41(&v113, v42, v44);
  swift_bridgeObjectRelease();
  if (!*((void *)&v114 + 1))
  {
    sub_19EEBD664((uint64_t)&v113, &qword_1E9474320);
    unint64_t v15 = v100;
    goto LABEL_47;
  }
  sub_19EEBB420(&v113, (uint64_t)&v101);
  long long v45 = objc_msgSend(*((id *)v3 + 8), sel_bundleIdentifier);
  unint64_t v15 = v100;
  if (!v45) {
    goto LABEL_46;
  }
  uint64_t v46 = v45;
  long long v47 = sub_19F1DBD7C();
  char v49 = v48;

  if (v47 == 0x6C7070612E6D6F63 && v49 == 0xEF64656D61672E65)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v50 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if ((v50 & 1) == 0) {
      goto LABEL_46;
    }
  }
  if (v15 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v98 = sub_19F1DD03C();
    if (v98) {
      goto LABEL_25;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  uint64_t v98 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v98) {
    goto LABEL_45;
  }
LABEL_25:
  char v92 = v40;
  uint64_t v97 = (char *)(v15 & 0xC000000000000001);
  uint64_t v40 = 4;
  while (1)
  {
    if (v97) {
      int v51 = (id)MEMORY[0x19F3C7060](v40 - 4, v15);
    }
    else {
      int v51 = *(id *)(v15 + 8 * v40);
    }
    char v52 = v51;
    int v53 = v40 - 3;
    if (__OFADD__(v40 - 4, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (qword_1E946DC58 != -1) {
      swift_once();
    }
    char v54 = (void *)qword_1E946DC48;
    uint64_t v119 = (uint64_t)v52;
    long long v55 = objc_msgSend(v52, sel_name, v92);
    long long v56 = sub_19F1DBD7C();
    long long v58 = v57;

    long long v59 = objc_msgSend(v54, sel_name);
    char v60 = sub_19F1DBD7C();
    long long v62 = v61;

    if (v56 == v60 && v58 == v62) {
      break;
    }
    long long v64 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v63 = (void *)v119;
    if (v64) {
      goto LABEL_37;
    }
LABEL_26:

    ++v40;
    unint64_t v15 = v100;
    if (v53 == v98)
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = v92;
      goto LABEL_46;
    }
  }
  swift_bridgeObjectRelease_n();
  id v63 = (void *)v119;
LABEL_37:
  uint64_t v65 = objc_msgSend(v63, sel_crossDeviceSync);
  if (v65 != objc_msgSend(v54, sel_crossDeviceSync)) {
    goto LABEL_26;
  }
  uint64_t v66 = objc_msgSend(v63, sel_isActiveITunesAccountRequired);
  if (v66 != objc_msgSend(v54, sel_isActiveITunesAccountRequired)) {
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  uint64_t v67 = (long long *)*((void *)&v102 + 1);
  uint64_t v68 = *(unsigned char **)&v103[0];
  __swift_project_boxed_opaque_existential_1(&v101, *((uint64_t *)&v102 + 1));
  if (qword_1E946FCE0 != -1) {
LABEL_77:
  }
    swift_once();
  uint64_t v69 = qword_1E946FC88;
  *((void *)&v114 + 1) = type metadata accessor for Unstable.Accounts();
  unint64_t v115 = &protocol witness table for Unstable.Accounts;
  *(void *)&uint64_t v113 = v69;
  uint64_t v70 = (void (*)(void *, long long *, uint64_t, uint64_t, long long *, unsigned char *))*((void *)v68 + 3);
  uint64_t v71 = sub_19EEBDC10(0, &qword_1E9474328);
  swift_retain();
  uint64_t v40 = v92;
  v70(v63, &v113, v92, v71, v67, v68);

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v113);
  unint64_t v15 = v100;
LABEL_46:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v101);
LABEL_47:
  uint64_t v72 = sub_19F1DB57C();
  int v73 = (uint64_t)v93;
  (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v93, 1, 1, v72);
  uint64_t v74 = sub_19EF87794(v15, v73, 1, 0);
  swift_bridgeObjectRelease();

  sub_19EEBD664(v73, qword_1EB3923B0);
  long long v39 = v95;
  *unint64_t v95 = v74;
  swift_bridgeObjectRelease();
LABEL_48:
  uint64_t v67 = &v113;
  swift_beginAccess();
  uint64_t v75 = (void *)*v39;
  uint64_t v76 = v75[8];
  uint64_t v97 = (char *)(v75 + 8);
  uint64_t v77 = 1 << *((unsigned char *)v75 + 32);
  long long v78 = -1;
  if (v77 < 64) {
    long long v78 = ~(-1 << v77);
  }
  os_signpost_id_t v79 = v78 & v76;
  uint64_t v98 = (unint64_t)(v77 + 63) >> 6;
  uint64_t v68 = v112;
  swift_bridgeObjectRetain();
  uint64_t v80 = 0;
  id v63 = (void *)MEMORY[0x1E4FBB960];
  unint64_t v95 = v75;
  while (2)
  {
    if (v79)
    {
      unint64_t v100 = (v79 - 1) & v79;
      uint64_t v119 = v80;
      uint64_t v81 = __clz(__rbit64(v79)) | (v80 << 6);
    }
    else
    {
      uint64_t v82 = __OFADD__(v80, 1);
      uint64_t v83 = v80 + 1;
      if (v82)
      {
        __break(1u);
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      if (v83 >= v98) {
        goto LABEL_73;
      }
      uint64_t v84 = *(void *)&v97[8 * v83];
      if (!v84)
      {
        uint64_t v85 = v83 + 1;
        if (v83 + 1 >= v98) {
          goto LABEL_73;
        }
        uint64_t v84 = *(void *)&v97[8 * v85];
        if (!v84)
        {
          uint64_t v85 = v83 + 2;
          if (v83 + 2 >= v98) {
            goto LABEL_73;
          }
          uint64_t v84 = *(void *)&v97[8 * v85];
          if (!v84)
          {
            uint64_t v85 = v83 + 3;
            if (v83 + 3 >= v98)
            {
LABEL_73:
              swift_release();
              return swift_release();
            }
            uint64_t v84 = *(void *)&v97[8 * v85];
            if (!v84)
            {
              while (1)
              {
                uint64_t v83 = v85 + 1;
                if (__OFADD__(v85, 1)) {
                  goto LABEL_76;
                }
                if (v83 >= v98) {
                  goto LABEL_73;
                }
                uint64_t v84 = *(void *)&v97[8 * v83];
                ++v85;
                if (v84) {
                  goto LABEL_65;
                }
              }
            }
          }
        }
        uint64_t v83 = v85;
      }
LABEL_65:
      unint64_t v100 = (v84 - 1) & v84;
      uint64_t v119 = v83;
      uint64_t v81 = __clz(__rbit64(v84)) + (v83 << 6);
    }
    sub_19EE77E34(v75[6] + 40 * v81, (uint64_t)&v101);
    sub_19EEBDBA4(v75[7] + 32 * v81, (uint64_t)v103 + 8);
    uint64_t v113 = v101;
    uint64_t v114 = v102;
    unint64_t v115 = *(_UNKNOWN ***)&v103[0];
    sub_19EEBDC00((_OWORD *)((char *)v103 + 8), v116);
    sub_19EE77E34((uint64_t)&v113, (uint64_t)&v109);
    sub_19EEBDBA4((uint64_t)v116, (uint64_t)v112);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_19EEBD664((uint64_t)&v113, &qword_1EB391080);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v112);
LABEL_52:
      uint64_t v80 = v119;
      os_signpost_id_t v79 = v100;
      continue;
    }
    break;
  }
  uint64_t v86 = v107;
  os_signpost_id_t v87 = v108;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v112);
  uint64_t v88 = *(void *)(v96 + 24);
  uint64_t v89 = *(void *)(v96 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v96, v88);
  uint64_t v90 = v99;
  (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 16))(v116, v86, v87, v88, v89);
  unint64_t v99 = v90;
  if (!v90)
  {
    sub_19EEBD664((uint64_t)&v113, &qword_1EB391080);
    swift_bridgeObjectRelease();
    uint64_t v75 = v95;
    uint64_t v67 = &v113;
    id v63 = (void *)MEMORY[0x1E4FBB960];
    goto LABEL_52;
  }
  swift_bridgeObjectRelease();
  sub_19EEBD664((uint64_t)&v113, &qword_1EB391080);
  swift_release();
  return swift_release();
}

uint64_t sub_19F0CC000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 96) = a6;
  *(void *)(v6 + 48) = a4;
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  *(void *)(v6 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  *(void *)(v6 + 64) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F0CC0A0, 0, 0);
}

uint64_t sub_19F0CC0A0()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  unsigned int v4 = *(void **)(v0 + 32);
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v7 = v3 + 24;
  uint64_t v8 = *(void *)(v3 + 64);
  *(void *)(v0 + 16) = v2;
  uint64_t v9 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v1, 1, 1, v9);
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_19F0CC22C;
  uint64_t v11 = *(void *)(v0 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 40);
  return v15(v13, v7, v8, v0 + 16, v12, v11, v5, v6);
}

uint64_t sub_19F0CC22C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_19EEBD664(*(void *)(v4 + 64), qword_1EB3923B0);
    uint64_t v5 = sub_19F0CC3E0;
  }
  else
  {
    uint64_t v6 = *(void *)(v4 + 64);
    *(void *)(v4 + 88) = a1;
    sub_19EEBD664(v6, qword_1EB3923B0);
    uint64_t v5 = sub_19F0CC370;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_19F0CC370()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 88);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0CC3E0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_19F0CC444(uint64_t *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = *a1;
  swift_beginAccess();
  *(void *)(a2 + 16) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a3);
}

void sub_19F0CC4B0(uint64_t a1, NSObject *a2)
{
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  id v5 = v3;
  long long v24 = sub_19EEC3F3C(0, 40, 0, MEMORY[0x1E4FBC860]);
  v6._uint64_t object = (void *)0x800000019F271E00;
  v6._uint64_t countAndFlagsBits = 0xD000000000000027;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  swift_getErrorValue();
  void v23[3] = v22;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v23);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(boxed_opaque_existential_2Tm, v21, v22);
  sub_19EEBCD00((uint64_t)v23, (uint64_t)v17);
  long long v15 = 0u;
  long long v16 = 0u;
  sub_19EEC3E70((uint64_t)v17, (uint64_t)&v15);
  char v20 = 0;
  long long v18 = v15;
  long long v19 = v16;
  uint64_t v8 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = sub_19EEC3F3C(0, v8[2] + 1, 1, v8);
  }
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_19EEC3F3C((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  long long v8[2] = v10 + 1;
  uint64_t v11 = &v8[5 * v10];
  long long v12 = v18;
  long long v13 = v19;
  *((unsigned char *)v11 + 64) = v20;
  *((_OWORD *)v11 + 2) = v12;
  *((_OWORD *)v11 + 3) = v13;
  long long v24 = v8;
  sub_19EEBD664((uint64_t)v23, &qword_1EB393260);
  v14._uint64_t countAndFlagsBits = 0;
  v14._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  *(void *)(v4 + 32) = v24;
  *(void *)&long long v18 = v5;
  LOBYTE(v15) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v15);

  swift_bridgeObjectRelease();
  dispatch_group_leave(a2);
}

id sub_19F0CC6E8(uint64_t *a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v3 = *a1;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD78]), sel_init);
  uint64_t v5 = v1[6];
  uint64_t v6 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v5);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v6 + 8))(&v29, v5, v6);
  uint64_t v7 = v29;
  objc_msgSend(v4, sel_setAccount_, v29);

  objc_msgSend(v4, sel_setClientInfo_, *(void *)(v2 + 64));
  objc_msgSend(v4, sel_setIsActiveITunesAccountRequired_, *(unsigned __int8 *)(v2 + 88));
  uint64_t v8 = *(void *)(v2 + 16);
  if (!v8) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_19EEBBC1C(0xD000000000000019, 0x800000019F269850, v3);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_5;
  }
  char v28 = 0;
  sub_19F156620(v9, v11, &v28, v8, (uint64_t)&v29);
  swift_bridgeObjectRelease();
  uint64_t v12 = v30;
  if (v30)
  {
    char v13 = v32;
    double v14 = v31;
    uint64_t v15 = (uint64_t)v29;
    long long v16 = (void *)sub_19F1DBD4C();
    objc_msgSend(v4, sel_setDomain_, v16);

    sub_19F0CD664(v15, v12);
    sub_19F0CCFB0(v2, (uint64_t)&v29);
    double v17 = v33;
    double v18 = v14;
    BOOL v19 = (v13 & 1) == 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRetain();
    sub_19EEBBC1C(0xD00000000000002BLL, 0x800000019F26EE10, v3);
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      uint64_t v22 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = 0;
    }
    objc_msgSend(v4, sel_setDomain_, v22);

    swift_bridgeObjectRetain();
    *(double *)&uint64_t v23 = COERCE_DOUBLE(sub_19EF90E48(0xD000000000000032, 0x800000019F26EE70, v3));
    char v25 = v24;
    swift_bridgeObjectRelease();
    sub_19F0CCFB0(v2, (uint64_t)&v29);
    double v17 = v33;
    double v18 = *(double *)&v23;
    BOOL v19 = (v25 & 1) == 0;
  }
  if (v19) {
    double v26 = v18;
  }
  else {
    double v26 = v17;
  }
  sub_19F0CCFE8((uint64_t)&v29);
  objc_msgSend(v4, sel_setResetInterval_, v26);
  return v4;
}

uint64_t sub_19F0CC9A8(uint64_t a1, uint64_t *a2)
{
  return AMSMetricsIdentifierFieldsProvider.addMetricsFields(into:using:)(a1, a2);
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accountProvider:process:bag:shouldMigrate:eventRecorder:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *a3;
  sub_19EEC4154(a1, (uint64_t)v16);
  if (qword_1E946E1F0 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1E946E1E0;
  sub_19EEC4154((uint64_t)v16, (uint64_t)v15);
  uint64_t v14 = v11;
  swift_bridgeObjectRetain();
  sub_19F0CABD0((uint64_t)v15, a2, &v14, a4 & 1, v12, 0, (uint64_t)sub_19F0CAB70, 0, a6, 15552000.0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  sub_19EEBD664(a5, &qword_1E946EC08);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accountProvider:process:bag:shouldMigrate:resetInterval:eventRecorder:keys:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v15 = *a3;
  sub_19EEC4154(a1, (uint64_t)v19);
  sub_19EEC4154((uint64_t)v19, (uint64_t)v18);
  uint64_t v17 = v15;
  sub_19F0CABD0((uint64_t)v18, a2, &v17, a4, a6, 0, (uint64_t)sub_19F0CAB70, 0, a7, a8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  sub_19EEBD664(a5, &qword_1E946EC08);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accountProvider:process:bag:shouldMigrate:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a3;
  sub_19EEC4154(a1, (uint64_t)v14);
  if (qword_1E946E1F0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1E946E1E0;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  uint64_t v12 = v9;
  swift_bridgeObjectRetain();
  sub_19F0CABD0((uint64_t)v13, a2, &v12, a4 & 1, v10, 0, (uint64_t)sub_19F0CAB70, 0, a5, 15552000.0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accountProvider:process:bag:shouldMigrate:resetInterval:keys:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v13 = *a3;
  sub_19EEC4154(a1, (uint64_t)v17);
  sub_19EEC4154((uint64_t)v17, (uint64_t)v16);
  uint64_t v15 = v13;
  sub_19F0CABD0((uint64_t)v16, a2, &v15, a4, a5, 0, (uint64_t)sub_19F0CAB70, 0, a6, a7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accounts:clientInfo:resetInterval:keys:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>, double a5@<D0>)
{
  void v20[3] = type metadata accessor for Unstable.Accounts();
  void v20[4] = &protocol witness table for Unstable.Accounts;
  v20[0] = a1;
  sub_19EEC4154((uint64_t)v20, (uint64_t)v19);
  LOBYTE(v14) = 0;
  *(void *)&v15[0] = 0;
  sub_19EEC4154((uint64_t)v19, (uint64_t)v15 + 8);
  *(void *)&long long v16 = a2;
  *((double *)&v16 + 1) = a5;
  *(void *)&long long v17 = a3;
  BYTE8(v17) = 0;
  *(void *)&long long v18 = sub_19F0CAB70;
  *((void *)&v18 + 1) = 0;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  long long v10 = v17;
  a4[4] = v16;
  a4[5] = v10;
  a4[6] = v18;
  long long v11 = v15[0];
  *a4 = v14;
  a4[1] = v11;
  long long v12 = v15[2];
  a4[2] = v15[1];
  a4[3] = v12;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  return swift_release();
}

void (*sub_19F0CCE48(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_19F0CCEF8(v6, a2, a3);
  return sub_19F0CCEB0;
}

void sub_19F0CCEB0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_19F0CCEF8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x19F3C7060](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for QueryExpression.Rule;
  }
  __break(1u);
  return result;
}

uint64_t sub_19F0CCF78()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F0CCFB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19F0CCFE8(uint64_t a1)
{
  return a1;
}

uint64_t sub_19F0CD018()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 185, 7);
}

uint64_t sub_19F0CD090(uint64_t a1)
{
  uint64_t v4 = v1 + 16;
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = v1 + 64;
  uint64_t v7 = *(void *)(v1 + 176);
  char v8 = *(unsigned char *)(v1 + 184);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EEB8A6C;
  return sub_19F0CC000(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19F0CD160()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F0CD1A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EEB8A6C;
  long long v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E9475700
                                                                                   + dword_1E9475700);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19F0CD284()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_19F0CD2C4(uint64_t *a1)
{
  sub_19F0CC444(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_19F0CD2CC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_19F0CD304(uint64_t a1)
{
  sub_19F0CC4B0(a1, *(NSObject **)(v1 + 16));
}

uint64_t destroy for AMSMetricsIdentifierFieldsProvider(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for AMSMetricsIdentifierFieldsProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 24, v5, v7);
  uint64_t v9 = *(void **)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v11 = *(void *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = v12;
  id v13 = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AMSMetricsIdentifierFieldsProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  uint64_t v4 = *(void **)(a2 + 64);
  uint64_t v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v4;
  id v6 = v4;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AMSMetricsIdentifierFieldsProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AMSMetricsIdentifierFieldsProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AMSMetricsIdentifierFieldsProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AMSMetricsIdentifierFieldsProvider()
{
  return &type metadata for AMSMetricsIdentifierFieldsProvider;
}

uint64_t sub_19F0CD664(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_19F0CD6C8()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
  sub_19F0D0CEC();
  sub_19F0D0D2C();
  id v0 = v1;
  sub_19F1DCC8C();
}

uint64_t static MediaArtwork._nullCachedImagesKey.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E94701E8 != -1) {
    swift_once();
  }
  return sub_19EE77E34((uint64_t)&unk_1E9474350, a1);
}

uint64_t MediaArtwork.init(_:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EEC4154((uint64_t)a1, (uint64_t)v20);
  uint64_t v4 = v21;
  uint64_t v5 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  uint64_t v7 = v21;
  uint64_t v8 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
  LOBYTE(v8) = v10;
  uint64_t v11 = v21;
  uint64_t v12 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 40))(v11, v12);
  uint64_t v14 = v21;
  uint64_t v15 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  double v16 = (*(double (**)(uint64_t, uint64_t))(v15 + 48))(v14, v15);
  uint64_t v18 = v17;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v13;
  *(double *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v18;
  return sub_19EEBB420(a1, a2 + 48);
}

uint64_t MediaArtwork.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = &_s20_AppleServicesSourceVN;
  uint64_t v5 = &off_1EC30E2A0;
  *(void *)&long long v3 = a1;
  return MediaArtwork.init(_:)(&v3, a2);
}

uint64_t MediaArtwork.init(urlTemplate:sourceImageSize:colors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v9 = &_s20_AppleServicesSourceVN;
  char v10 = &off_1EC30E2A0;
  *(void *)&long long v8 = sub_19F0FAD5C(a1, a2, a3, a5, a6);
  return MediaArtwork.init(_:)(&v8, a4);
}

uint64_t MediaArtwork.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v9 = _s10_URLSourceVMa();
  char v10 = &off_1EC30E180;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v8);
  uint64_t v5 = sub_19F1DB34C();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(boxed_opaque_existential_2Tm, a1, v5);
  MediaArtwork.init(_:)(&v8, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

uint64_t MediaArtwork.init()@<X0>(uint64_t a1@<X8>)
{
  long long v3 = &_s12_EmptySourceVN;
  uint64_t v4 = &off_1EC30E250;
  return MediaArtwork.init(_:)(&v2, a1);
}

uint64_t MediaArtwork.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474378);
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s10_URLSourceVMa();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a2;
  sub_19EEC355C(a1, (uint64_t)v80);
  sub_19EEC3ED8((uint64_t)v80, (uint64_t)v84, (uint64_t *)&unk_1E946FD20);
  uint64_t v14 = v85;
  if (!v85)
  {
    sub_19EEBD664((uint64_t)v84, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v80);
    goto LABEL_13;
  }
  uint64_t v78 = a1;
  uint64_t v15 = v86;
  __swift_project_boxed_opaque_existential_1(v84, v85);
  double v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 104);
  uint64_t v17 = v15;
  a1 = v78;
  char v18 = v16(v14, v17);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v84);
  sub_19EEC3418((uint64_t)v80);
  if (v18)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    long long v39 = (void **)MEMORY[0x1E4F4DAF0];
    *(void *)(a3 + 72) = &_s12_EmptySourceVN;
    *(void *)(a3 + 80) = &off_1EC30E250;
    uint64_t v40 = *v39;
    Swift::String v41 = (void *)*MEMORY[0x1E4F4DAD8];
    *(void *)a3 = *v39;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = 1;
    *(void *)(a3 + 32) = 0;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 24) = v41;
    id v42 = v40;
    id v43 = v41;
    uint64_t v44 = a1;
    return sub_19EEC3418(v44);
  }
  sub_19EEC355C(a1, (uint64_t)v80);
  v84[0] = v13;
  swift_bridgeObjectRetain();
  sub_19F0F8A28((uint64_t)v80, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    swift_bridgeObjectRelease();
    sub_19F0D0850((uint64_t)v8, (uint64_t)v12);
    *(void *)(a3 + 72) = v9;
    *(void *)(a3 + 80) = &off_1EC30E180;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(a3 + 48));
    sub_19F0D08B4((uint64_t)v12, (uint64_t)boxed_opaque_existential_2Tm);
    long long v47 = (void *)*MEMORY[0x1E4F4DAF0];
    long long v48 = (void *)*MEMORY[0x1E4F4DAD8];
    *(void *)a3 = *MEMORY[0x1E4F4DAF0];
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = 1;
    *(void *)(a3 + 32) = 0;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 24) = v48;
    id v49 = v47;
    id v50 = v48;
    sub_19EEC3418(a1);
    return sub_19F0D0918((uint64_t)v12);
  }
  sub_19EEBD664((uint64_t)v8, &qword_1E9474378);
  JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v80);
  sub_19EEC3ED8((uint64_t)v80, (uint64_t)v84, (uint64_t *)&unk_1E946FD20);
  uint64_t v19 = v85;
  if (!v85)
  {
    sub_19EEBD664((uint64_t)v84, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v80);
    goto LABEL_17;
  }
  uint64_t v20 = v86;
  __swift_project_boxed_opaque_existential_1(v84, v85);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 24);
  uint64_t v22 = v20;
  a1 = v78;
  uint64_t v23 = v21(v19, v22);
  uint64_t v25 = v24;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v84);
  sub_19EEC3418((uint64_t)v80);
  if (!v25)
  {
LABEL_17:
    sub_19EEC355C(a1, (uint64_t)v80);
    v84[0] = v13;
    id v51 = sub_19F0FA2AC((uint64_t)v80);
    if (!v51)
    {
      sub_19EF5B580();
      swift_allocError();
      uint64_t v60 = MEMORY[0x1E4FBC860];
      *long long v59 = (uint64_t)&type metadata for MediaArtwork;
LABEL_20:
      v59[1] = v60;
      v59[2] = 0;
      v59[3] = 0;
LABEL_26:
      swift_willThrow();
      return sub_19EEC3418(a1);
    }
    char v52 = v51;
    *(void *)(a3 + 72) = &_s20_AppleServicesSourceVN;
    *(void *)(a3 + 80) = &off_1EC30E2A0;
    *(void *)(a3 + 48) = v51;
    int v53 = (void *)*MEMORY[0x1E4F4DAD8];
    uint64_t v54 = a1;
    id v55 = (id)*MEMORY[0x1E4F4DAF0];
    id v56 = v53;
    objc_msgSend(v52, sel_artworkSize);
    *(void *)a3 = v55;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = 1;
    *(void *)(a3 + 24) = v56;
    *(void *)(a3 + 32) = v57;
    *(void *)(a3 + 40) = v58;
    uint64_t v44 = v54;
    return sub_19EEC3418(v44);
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_19F17AA2C(0xD000000000000027, 0x800000019F271E30, v13);
  swift_bridgeObjectRelease();
  if (!v26) {
    goto LABEL_25;
  }
  if (!*(void *)(v26 + 16))
  {
LABEL_24:
    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    unint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474380) | 0x8000000000000000;
    sub_19EF5B580();
    swift_allocError();
    uint64_t *v62 = v23;
    v62[1] = v25;
    _OWORD v62[2] = v61;
    v62[3] = 0;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  unint64_t v27 = sub_19EEBD400(v23, v25);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v29 = *(void *)(*(void *)(v26 + 56) + 16 * v27);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v30 = dynamic_cast_existential_2_conditional(v29);
  if (v30)
  {
    uint64_t v33 = v30;
    uint64_t v34 = v31;
    uint64_t v35 = v32;
    sub_19EEC355C(a1, (uint64_t)v84);
    uint64_t v87 = v13;
    uint64_t v36 = a1;
    uint64_t v37 = *(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v34 + 8);
    uint64_t v81 = v33;
    uint64_t v82 = v34;
    uint64_t v83 = v35;
    __swift_allocate_boxed_opaque_existential_2Tm(v80);
    uint64_t v38 = v79;
    v37(v84, &v87, v33, v34);
    if (v38)
    {
      sub_19EEC3418(v36);
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v80);
    }
    uint64_t v68 = v81;
    uint64_t v69 = v83;
    goto LABEL_34;
  }
  uint64_t v63 = dynamic_cast_existential_2_conditional(v29);
  if (!v63)
  {
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    uint64_t v60 = MEMORY[0x1E4FBC860];
    *long long v59 = v29;
    goto LABEL_20;
  }
  uint64_t v66 = v63;
  uint64_t v83 = v65;
  v84[0] = v13;
  uint64_t v81 = v63;
  uint64_t v82 = v64;
  __swift_allocate_boxed_opaque_existential_2Tm(v80);
  uint64_t v67 = v79;
  JSONObject.decode<A>(_:using:)(v66, v84);
  if (v67)
  {
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v80);
  }
  swift_bridgeObjectRelease();
  uint64_t v68 = v81;
  uint64_t v69 = v82;
LABEL_34:
  __swift_project_boxed_opaque_existential_1(v80, v68);
  *(void *)(a3 + 72) = v68;
  *(void *)(a3 + 80) = v69;
  __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(a3 + 48));
  (*(void (**)(void))(*(void *)(v68 - 8) + 16))();
  uint64_t v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 24))(v68, v69);
  uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 32))(v68, v69);
  char v73 = v72;
  uint64_t v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 40))(v68, v69);
  double v75 = (*(double (**)(uint64_t, uint64_t))(v69 + 48))(v68, v69);
  *(void *)a3 = v70;
  *(void *)(a3 + 8) = v71;
  *(unsigned char *)(a3 + 16) = v73 & 1;
  *(void *)(a3 + 24) = v74;
  *(double *)(a3 + 32) = v75;
  *(void *)(a3 + 40) = v76;
  sub_19EEC3418(v78);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
}

uint64_t MediaArtwork.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = sub_19F1DCDBC();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v6 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474388);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D4A0);
  uint64_t v95 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v94 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474378);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = _s10_URLSourceVMa();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEC4154((uint64_t)a1, (uint64_t)&v98);
  sub_19F0F9F84(&v98);
  if (v2)
  {

    sub_19EEC4154((uint64_t)a1, (uint64_t)&v98);
    sub_19F0F8D50(&v98, (uint64_t)v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
    if (v22 == 1)
    {
      sub_19EEBD664((uint64_t)v13, &qword_1E9474378);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_19EF6EA7C();
      sub_19F1DD8AC();
      uint64_t v23 = v95;
      uint64_t v24 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v9, 0, 1, v109);
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v94, v9, v24);
      long long v98 = xmmword_19F25CA80;
      char v99 = 1;
      uint64_t v25 = sub_19F1DD13C();
      uint64_t v40 = v26;
      if (v26)
      {
        uint64_t v91 = v25;
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t v41 = v109;
        uint64_t v42 = sub_19F1DD89C();
        uint64_t v43 = sub_19F0D79E8(0xD000000000000027, 0x800000019F271E30, v42);
        swift_bridgeObjectRelease();
        if (v43)
        {
          if (*(void *)(v43 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v44 = sub_19EEBD400(v91, v40);
            if (v45)
            {
              uint64_t v46 = *(void *)(*(void *)(v43 + 56) + 16 * v44);
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              uint64_t v47 = v46;
              uint64_t v48 = dynamic_cast_existential_2_conditional(v46);
              if (v48)
              {
                uint64_t v51 = v48;
                uint64_t v52 = v49;
                uint64_t v53 = v50;
                sub_19EEC4154((uint64_t)a1, (uint64_t)v97);
                uint64_t v100 = v51;
                uint64_t v101 = v52;
                uint64_t v102 = v53;
                __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v98);
                sub_19F1DC59C();
                uint64_t v69 = v100;
                uint64_t v70 = v101;
                __swift_project_boxed_opaque_existential_1(&v98, v100);
                *((void *)&v107 + 1) = v69;
                uint64_t v108 = (_UNKNOWN **)v70;
                __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v106);
                (*(void (**)(void))(*(void *)(v69 - 8) + 16))();
                uint64_t v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 24))(v69, v70);
                uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 32))(v69, v70);
                LODWORD(v92) = v72;
                uint64_t v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 40))(v69, v70);
                double v74 = (*(double (**)(uint64_t, uint64_t))(v70 + 48))(v69, v70);
                *(void *)&long long v103 = v93;
                *((void *)&v103 + 1) = v71;
                LOBYTE(v104) = v92 & 1;
                *((void *)&v104 + 1) = v73;
                *(double *)&long long v105 = v74;
                *((void *)&v105 + 1) = v75;
                (*(void (**)(char *, uint64_t))(v23 + 8))(v94, v109);
              }
              else
              {
                uint64_t v61 = dynamic_cast_existential_2_conditional(v46);
                if (!v61)
                {
                  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
                  sub_19F1DD86C();
                  *(void *)&long long v98 = 0;
                  *((void *)&v98 + 1) = 0xE000000000000000;
                  sub_19F1DCCEC();
                  swift_bridgeObjectRelease();
                  *(void *)&long long v98 = 60;
                  *((void *)&v98 + 1) = 0xE100000000000000;
                  sub_19F1DD98C();
                  sub_19F1DBEFC();
                  swift_bridgeObjectRelease();
                  sub_19F1DBEFC();
                  sub_19F1DCDAC();
                  uint64_t v76 = sub_19F1DCDCC();
                  swift_allocError();
                  uint64_t v78 = v77;
                  uint64_t v79 = (char *)v77 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50) + 48);
                  *uint64_t v78 = v47;
                  uint64_t v80 = v92;
                  uint64_t v81 = v93;
                  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v79, v6, v93);
                  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v76 - 8) + 104))(v78, *MEMORY[0x1E4FBBA70], v76);
                  swift_willThrow();
                  (*(void (**)(char *, uint64_t))(v80 + 8))(v6, v81);
                  (*(void (**)(char *, uint64_t))(v23 + 8))(v94, v109);
                  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
                }
                uint64_t v64 = v61;
                uint64_t v65 = v62;
                uint64_t v66 = v63;
                sub_19EEC4154((uint64_t)a1, (uint64_t)v96);
                JSONObject.init(from:)(v96, v97);
                __swift_project_boxed_opaque_existential_1(a1, a1[3]);
                uint64_t v67 = sub_19F1DD89C();
                JSONContext.init(userInfo:)((Swift::OpaquePointer)v67);
                uint64_t v68 = *(void (**)(uint64_t *, void *, uint64_t, uint64_t))(v65 + 8);
                uint64_t v100 = v64;
                uint64_t v101 = v65;
                uint64_t v102 = v66;
                __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v98);
                v68(v97, v96, v64, v65);
                uint64_t v82 = v100;
                uint64_t v83 = v102;
                __swift_project_boxed_opaque_existential_1(&v98, v100);
                *((void *)&v107 + 1) = v82;
                uint64_t v108 = (_UNKNOWN **)v83;
                __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v106);
                (*(void (**)(void))(*(void *)(v82 - 8) + 16))();
                uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 24))(v82, v83);
                uint64_t v85 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 32))(v82, v83);
                LODWORD(v93) = v86;
                uint64_t v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 40))(v82, v83);
                double v88 = (*(double (**)(uint64_t, uint64_t))(v83 + 48))(v82, v83);
                *(void *)&long long v103 = v84;
                *((void *)&v103 + 1) = v85;
                LOBYTE(v104) = v93 & 1;
                *((void *)&v104 + 1) = v87;
                *(double *)&long long v105 = v88;
                *((void *)&v105 + 1) = v89;
                (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v109);
              }
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v98);
              goto LABEL_7;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        sub_19F1DD86C();
        *(void *)&long long v98 = 0;
        *((void *)&v98 + 1) = 0xE000000000000000;
        sub_19F1DCCEC();
        swift_bridgeObjectRelease();
        *(void *)&long long v98 = 0xD000000000000023;
        *((void *)&v98 + 1) = 0x800000019F271E80;
        sub_19F1DBEFC();
        swift_bridgeObjectRelease();
        sub_19F1DBEFC();
        sub_19F1DCDAC();
        uint64_t v54 = sub_19F1DCDCC();
        swift_allocError();
        id v56 = v55;
        uint64_t v57 = (char *)v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50) + 48);
        uint64_t *v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474380);
        uint64_t v58 = v92;
        long long v59 = v57;
        uint64_t v60 = v93;
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v59, v6, v93);
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v54 - 8) + 104))(v56, *MEMORY[0x1E4FBBA80], v54);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v6, v60);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v94, v41);
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v94, v24);
      sub_19EEC4154((uint64_t)a1, (uint64_t)&v98);
      id v27 = sub_19F0F8F14(&v98);
      *((void *)&v107 + 1) = &_s20_AppleServicesSourceVN;
      uint64_t v108 = &off_1EC30E2A0;
      *(void *)&long long v106 = v27;
      char v28 = (void *)*MEMORY[0x1E4F4DAD8];
      id v29 = (id)*MEMORY[0x1E4F4DAF0];
      id v30 = v28;
      objc_msgSend(v27, sel_artworkSize);
      long long v103 = (unint64_t)v29;
      LOBYTE(v104) = 1;
      *((void *)&v104 + 1) = v30;
      *(void *)&long long v105 = v31;
      *((void *)&v105 + 1) = v32;
    }
    else
    {
      sub_19F0D0850((uint64_t)v13, (uint64_t)v17);
      *((void *)&v107 + 1) = v14;
      uint64_t v108 = &off_1EC30E180;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v106);
      sub_19F0D08B4((uint64_t)v17, (uint64_t)boxed_opaque_existential_2Tm);
      uint64_t v34 = (void *)*MEMORY[0x1E4F4DAD8];
      long long v103 = (unint64_t)*MEMORY[0x1E4F4DAF0];
      LOBYTE(v104) = 1;
      long long v105 = 0uLL;
      *((void *)&v104 + 1) = v34;
      id v35 = (id)v103;
      id v36 = v34;
      sub_19F0D0918((uint64_t)v17);
    }
  }
  else
  {
    uint64_t v108 = &off_1EC30E250;
    char v18 = (void *)*MEMORY[0x1E4F4DAF0];
    LOBYTE(v104) = 1;
    uint64_t v19 = (void *)*MEMORY[0x1E4F4DAD8];
    long long v103 = (unint64_t)v18;
    *((void *)&v107 + 1) = &_s12_EmptySourceVN;
    long long v105 = 0uLL;
    *((void *)&v104 + 1) = v19;
    id v20 = v18;
    id v21 = v19;
  }
LABEL_7:
  long long v37 = v106;
  *(_OWORD *)(a2 + 32) = v105;
  *(_OWORD *)(a2 + 48) = v37;
  *(_OWORD *)(a2 + 64) = v107;
  *(void *)(a2 + 80) = v108;
  long long v38 = v104;
  *(_OWORD *)a2 = v103;
  *(_OWORD *)(a2 + 16) = v38;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t MediaArtwork.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v41 = sub_19F1DCDEC();
  uint64_t v4 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CEA8);
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  long long v38 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s10_URLSourceVMa();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEC4154(v1 + 48, (uint64_t)v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474380);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474298);
  if (swift_dynamicCast())
  {
    uint64_t v11 = v4;
    uint64_t v12 = v41;
    sub_19EEBB420(&v42, (uint64_t)v47);
    sub_19EEC4154((uint64_t)v47, (uint64_t)v45);
    if ((swift_dynamicCast() & 1) == 0)
    {
      if (!swift_dynamicCast())
      {
        if (swift_dynamicCast())
        {

          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          sub_19F1DD8DC();
          __swift_project_boxed_opaque_existential_1(v47, v48);
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v42, *((uint64_t *)&v43 + 1));
          sub_19F1DD51C();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v42);
        }
        else
        {
          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          uint64_t v23 = sub_19F1DD8EC();
          uint64_t v24 = sub_19F0D79E8(0xD000000000000027, 0x800000019F271E30, v23);
          uint64_t v25 = swift_bridgeObjectRelease();
          if (v24
            && (MEMORY[0x1F4188790](v25),
                *(&v36 - 2) = (uint64_t)v47,
                uint64_t v26 = v40,
                sub_19F0C19AC((uint64_t (*)(void *))sub_19F0D0974, (uint64_t)(&v36 - 4), v24),
                uint64_t v28 = v27,
                swift_bridgeObjectRelease(),
                v28))
          {
            __swift_project_boxed_opaque_existential_1(a1, a1[3]);
            sub_19EF6EA7C();
            id v29 = v38;
            sub_19F1DD8FC();
            long long v42 = xmmword_19F25CA80;
            LOBYTE(v43) = 1;
            uint64_t v30 = v39;
            sub_19F1DD26C();
            swift_bridgeObjectRelease();
            if (!v26)
            {
              __swift_project_boxed_opaque_existential_1(v47, v48);
              sub_19F1DBC7C();
            }
            (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v30);
          }
          else
          {
            __swift_project_boxed_opaque_existential_1(a1, a1[3]);
            sub_19F1DD8BC();
            *(void *)&long long v42 = 0;
            *((void *)&v42 + 1) = 0xE000000000000000;
            sub_19F1DCCEC();
            swift_bridgeObjectRelease();
            *(void *)&long long v42 = 0xD000000000000017;
            *((void *)&v42 + 1) = 0x800000019F271A60;
            __swift_project_boxed_opaque_existential_1(v47, v48);
            swift_getDynamicType();
            sub_19F1DD98C();
            sub_19F1DBEFC();
            swift_bridgeObjectRelease();
            sub_19F1DBEFC();
            sub_19F1DCDAC();
            uint64_t v31 = sub_19F1DCDFC();
            swift_allocError();
            uint64_t v33 = v32;
            uint64_t v34 = (char *)v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568) + 48);
            __swift_project_boxed_opaque_existential_1(v47, v48);
            uint64_t DynamicType = swift_getDynamicType();
            uint64_t v33[3] = swift_getMetatypeMetadata();
            *uint64_t v33 = DynamicType;
            (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v34, v6, v12);
            (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x1E4FBBAA0], v31);
            swift_willThrow();
            (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v12);
          }
        }
        goto LABEL_6;
      }
      sub_19F0D0918((uint64_t)v10);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8DC();
    __swift_project_boxed_opaque_existential_1(v47, v48);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v45, v46);
    sub_19F1DD51C();
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
  }
  uint64_t v44 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
  sub_19EEBD664((uint64_t)&v42, &qword_1E94742A0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8BC();
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  sub_19F1DCDAC();
  uint64_t v14 = sub_19F1DCDFC();
  swift_allocError();
  uint64_t v16 = v15;
  uint64_t v17 = (char *)v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568) + 48);
  uint64_t v18 = *(void *)(v2 + 72);
  uint64_t v19 = __swift_project_boxed_opaque_existential_1((void *)(v2 + 48), v18);
  void v16[3] = v18;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v16);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(boxed_opaque_existential_2Tm, v19, v18);
  id v21 = v17;
  uint64_t v22 = v41;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v21, v6, v41);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, *MEMORY[0x1E4FBBAA0], v14);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v22);
}

uint64_t MediaArtwork.isEmpty.getter()
{
  sub_19EEC4154(v0 + 48, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474380);
  return swift_dynamicCast();
}

double MediaArtwork.size.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t MediaArtwork.subscript.getter(uint64_t a1)
{
  uint64_t v3 = v1[9];
  uint64_t v4 = v1[10];
  __swift_project_boxed_opaque_existential_1(v1 + 6, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v3, v4);
}

void MediaArtwork.resize(_:croppedTo:)(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  sub_19F0D09CC((uint64_t)v4, a2);
  uint64_t v9 = v4[9];
  uint64_t v10 = v4[10];
  __swift_project_boxed_opaque_existential_1(v4 + 6, v9);
  double v11 = (*(double (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
  sub_19F0D09CC((uint64_t)v4, (uint64_t)v21);
  if (v11 <= 0.0)
  {
    sub_19F0D0A04(v21);
  }
  else
  {
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v13 + 48))(v12, v13);
    double v15 = v14;
    sub_19F0D0A04(v21);
    if (v15 > 0.0)
    {
      uint64_t v17 = v4[9];
      uint64_t v16 = v4[10];
      __swift_project_boxed_opaque_existential_1(v4 + 6, v17);
      double v18 = (*(double (**)(uint64_t, uint64_t))(v16 + 48))(v17, v16);
      a3 = sub_19F0CA7CC(a3, a4, v18, v19);
      a4 = v20;
    }
  }
  *(double *)(a2 + 32) = a3;
  *(double *)(a2 + 40) = a4;
  objc_storeStrong((id *)(a2 + 24), a1);
}

void MediaArtwork.format(_:withQuality:)(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_19F0D09CC(v4, a4);
  objc_storeStrong((id *)a4, a1);
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3 & 1;
}

uint64_t sub_19F0CFBDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaArtwork.init(from:)(a1, a2);
}

uint64_t sub_19F0CFBF4(void *a1)
{
  return MediaArtwork.encode(to:)(a1);
}

uint64_t sub_19F0CFC0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return MediaArtwork.init(deserializing:using:)(a1, a2, a3);
}

uint64_t MediaArtwork.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EEC4154(a1, (uint64_t)&v12);
  MediaArtwork.init(from:)(&v12, (uint64_t)v14);
  uint64_t v4 = v14[1];
  char v5 = v15;
  v23[0] = *(_DWORD *)v16;
  *(_DWORD *)((char *)v23 + 3) = *(_DWORD *)&v16[3];
  uint64_t v6 = v17;
  long long v7 = v18;
  long long v12 = v19;
  uint64_t v8 = v21;
  uint64_t v13 = v20;
  uint64_t v9 = v22;
  *(void *)a2 = v14[0];
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  *(_DWORD *)(a2 + 17) = v23[0];
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)v23 + 3);
  *(void *)(a2 + 24) = v6;
  long long v10 = v12;
  *(_OWORD *)(a2 + 32) = v7;
  *(_OWORD *)(a2 + 48) = v10;
  *(void *)(a2 + 64) = v13;
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t MediaArtwork._partiallyEncode(to:)(void *a1)
{
  return MediaArtwork.encode(to:)(a1);
}

uint64_t MediaArtwork._cachedImagesKey(withScale:)(CGFloat a1)
{
  sub_19EEC4154(v1 + 48, (uint64_t)v15);
  uint64_t v3 = v16;
  uint64_t v4 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  CGFloat v5 = *(double *)(v1 + 8);
  char v6 = *(unsigned char *)(v1 + 16);
  long long v7 = *(void **)(v1 + 24);
  CGFloat v8 = *(double *)(v1 + 32);
  CGFloat v9 = *(double *)(v1 + 40);
  id v10 = *(id *)v1;
  id v11 = v7;
  if (a1 <= 0.0) {
    sub_19F1A4018((uint64_t)"JetEngine/MediaArtworkSourceConfiguration.swift", 47, 2, 58, sub_19F0D0A34);
  }
  CGAffineTransformMakeScale(&v14, a1, a1);
  v18.width = v8;
  v18.height = v9;
  CGSize v12 = CGSizeApplyAffineTransform(v18, &v14);
  *(void *)&v14.a = v10;
  v14.b = v5;
  LOBYTE(v14.c) = v6;
  *(void *)&v14.d = v11;
  *(CGSize *)&v14.tx = v12;
  (*(void (**)(CGAffineTransform *, uint64_t, uint64_t))(v4 + 64))(&v14, v3, v4);

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
}

uint64_t MediaArtwork._resource(withScale:)@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>)
{
  uint64_t v28 = a1;
  sub_19EEC4154(v2 + 48, (uint64_t)v31);
  uint64_t v5 = v32;
  uint64_t v4 = v33;
  void v27[2] = __swift_project_boxed_opaque_existential_1(v31, v32);
  char v6 = *(void **)v2;
  CGFloat v7 = *(double *)(v2 + 8);
  char v8 = *(unsigned char *)(v2 + 16);
  CGFloat v9 = *(void **)(v2 + 24);
  CGFloat v10 = *(double *)(v2 + 32);
  CGFloat v11 = *(double *)(v2 + 40);
  CGFloat v29 = a2;
  id v12 = v6;
  id v13 = v9;
  if (a2 <= 0.0) {
    sub_19F1A4018((uint64_t)"JetEngine/MediaArtworkSourceConfiguration.swift", 47, 2, 58, sub_19F0D0D84);
  }
  CGAffineTransformMakeScale(&v30, a2, a2);
  v34.width = v10;
  v34.height = v11;
  CGSize v14 = CGSizeApplyAffineTransform(v34, &v30);
  *(void *)&v30.a = v12;
  v30.b = v7;
  LOBYTE(v30.c) = v8;
  *(void *)&v30.d = v13;
  *(CGSize *)&v30.tx = v14;
  v27[0] = v13;
  char v15 = *(void (**)(CGAffineTransform *, uint64_t, uint64_t, double))(v4 + 72);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_19F1DCAAC();
  v27[1] = v27;
  uint64_t v18 = *(void *)(v17 - 8);
  double v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v27 - v20;
  v15(&v30, v5, v4, v19);

  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    uint64_t v23 = (_OWORD *)v28;
    *(void *)(v28 + 32) = 0;
    *uint64_t v23 = 0u;
    v23[1] = 0u;
  }
  else
  {
    uint64_t v24 = (uint64_t *)v28;
    *(void *)(v28 + 24) = AssociatedTypeWitness;
    void v24[4] = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v24);
    (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 32))(boxed_opaque_existential_2Tm, v21, AssociatedTypeWitness);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
}

uint64_t MediaArtwork.init(urlTemplate:sourceImageSize:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  unint64_t v10 = sub_19EFB5484(MEMORY[0x1E4FBC860]);
  id v13 = &_s20_AppleServicesSourceVN;
  CGSize v14 = &off_1EC30E2A0;
  *(void *)&long long v12 = sub_19F0FAD5C(a1, a2, v10, a4, a5);
  return MediaArtwork.init(_:)(&v12, a3);
}

uint64_t MediaArtwork.url(withScale:)@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>)
{
  MediaArtwork._resource(withScale:)((uint64_t)v7, a2);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474398);
    uint64_t v3 = sub_19F1DB34C();
    int v4 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, v4 ^ 1u, 1, v3);
  }
  else
  {
    sub_19EEBD664((uint64_t)v7, &qword_1E9474390);
    uint64_t v6 = sub_19F1DB34C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 1, 1, v6);
  }
}

uint64_t _s9JetEngine12MediaArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  v30[0] = *(void *)a1;
  v30[1] = v4;
  char v31 = v5;
  uint64_t v32 = v6;
  long long v33 = *(_OWORD *)(a1 + 32);
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  v26[0] = *(void *)a2;
  v26[1] = v7;
  char v27 = v8;
  uint64_t v28 = v9;
  long long v29 = *(_OWORD *)(a2 + 32);
  if (!_s9JetEngine31MediaArtworkSourceConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)v30, (uint64_t)v26)) {
    goto LABEL_6;
  }
  sub_19EEC4154(a1 + 48, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474380);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E620);
  if (!swift_dynamicCast())
  {
    uint64_t v25 = 0;
    memset(v24, 0, sizeof(v24));
    sub_19EEBD664((uint64_t)v24, &qword_1E946DEC0);
LABEL_6:
    char v21 = 0;
    return v21 & 1;
  }
  sub_19EEBB420(v24, (uint64_t)v30);
  uint64_t v10 = v32;
  v23[1] = v33;
  __swift_project_boxed_opaque_existential_1(v30, v32);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](a2 + 48);
  id v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEC4154(v14, (uint64_t)v26);
  uint64_t v15 = sub_19F1DCAAC();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v23 - v17;
  int v19 = swift_dynamicCast();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v19)
  {
    v20(v18, 0, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v18, v10);
    char v21 = sub_19F1DBD3C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v20(v18, 1, 1, v10);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    char v21 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  return v21 & 1;
}

uint64_t sub_19F0D0850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10_URLSourceVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F0D08B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10_URLSourceVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F0D0918(uint64_t a1)
{
  uint64_t v2 = _s10_URLSourceVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_19F0D0974(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_project_boxed_opaque_existential_1(*(void **)(v1 + 16), *(void *)(*(void *)(v1 + 16) + 24));
  return v2 == swift_getDynamicType();
}

uint64_t sub_19F0D09CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

id *sub_19F0D0A04(id *a1)
{
  return a1;
}

uint64_t sub_19F0D0A34()
{
  return sub_19EF63B5C();
}

uint64_t destroy for MediaArtwork(id *a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 6));
}

uint64_t initializeWithCopy for MediaArtwork(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  char v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v6 = a1 + 48;
  uint64_t v7 = a2 + 48;
  long long v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  id v11 = v3;
  id v12 = v5;
  v10(v6, v7, v9);
  return a1;
}

uint64_t assignWithCopy for MediaArtwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  char v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  long long v8 = *(void **)(a2 + 24);
  uint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v8;
  id v10 = v8;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MediaArtwork(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 48);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaArtwork(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaArtwork(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaArtwork()
{
  return &type metadata for MediaArtwork;
}

unint64_t sub_19F0D0CEC()
{
  unint64_t result = qword_1EB392CF8;
  if (!qword_1EB392CF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB392CF8);
  }
  return result;
}

unint64_t sub_19F0D0D2C()
{
  unint64_t result = qword_1E94743A0;
  if (!qword_1E94743A0)
  {
    sub_19F0D0CEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94743A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EventTimeTreatmentFilter()
{
  return &type metadata for EventTimeTreatmentFilter;
}

BOOL sub_19F0D0D98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  double v3 = MEMORY[0x1F4188790](a1);
  long long v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v2 + 16))(v5, v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_19F1DCAAC();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
    uint64_t v6 = sub_19F1DD80C();
    BOOL v7 = swift_getEnumCaseMultiPayload() != 1;
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
    return 0;
  }
  return v7;
}

BOOL sub_19F0D0F04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  double v3 = MEMORY[0x1F4188790](a1);
  long long v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v2 + 16))(v5, v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_19F1DCAAC();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
    uint64_t v6 = sub_19F1DD80C();
    BOOL v7 = swift_getEnumCaseMultiPayload() == 1;
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
    return 0;
  }
  return v7;
}

uint64_t sub_19F0D1070(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 - 8);
  double v6 = MEMORY[0x1F4188790](a1);
  long long v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, double))(v5 + 16))(v8, v2, a2, v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, a2);
  }
  else
  {
    id v11 = *(void (**)(char *, uint64_t))(v5 + 8);
    v11(v2, a2);
    v11(v8, a2);
  }
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 16))(v2, a1);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_19F0D11F4(void *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E94745D8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6.n128_f64[0] = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  long long v8 = (char *)&v19 - v7;
  uint64_t v10 = *(int *)(v9 + 56);
  uint64_t v11 = *(void *)(a2 - 8);
  (*(void (**)(char *, void *, uint64_t, __n128))(v11 + 16))((char *)&v19 - v7, v2, a2, v6);
  *(void *)&v8[v10] = a1;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, a2);
    }
    id v18 = a1;
    (*(void (**)(void *, uint64_t))(v11 + 8))(v2, a2);
    if (a1) {
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t, uint64_t, void))(*(void *)(*(void *)(a2 + 16) - 8) + 56))(v2, 1, 1, *(void *)(a2 + 16));
LABEL_10:
    sub_19F1DCAAC();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
    sub_19F1DD80C();
    goto LABEL_11;
  }
  id v14 = a1;
  (*(void (**)(void *, uint64_t))(v11 + 8))(v2, a2);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = v16;
  if (!a1)
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v2, v8, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v2, 0, 1, v15);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
LABEL_7:
  *uint64_t v2 = a1;
  sub_19F1DCAAC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  sub_19F1DD80C();
LABEL_11:
  swift_storeEnumTagMultiPayload();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_19F0D14C0(uint64_t a1)
{
  return sub_19F0D14FC(a1);
}

uint64_t sub_19F0D14FC(uint64_t a1)
{
  uint64_t v76 = a1;
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v4 = sub_19F1DC4BC();
  uint64_t v68 = *(void *)(v4 - 8);
  uint64_t v69 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v66 = (char *)&v64 - v5;
  uint64_t v80 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v65 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v67 = (char *)&v64 - v9;
  uint64_t v83 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  uint64_t v75 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  double v74 = (char *)&v64 - v10;
  uint64_t v11 = sub_19F1DC53C();
  uint64_t v72 = *(void *)(v11 - 8);
  uint64_t v73 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v71 = (char *)&v64 - v12;
  uint64_t v13 = sub_19F1DC4FC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v70 = (char *)&v64 - v15;
  uint64_t v79 = sub_19F1DC4CC();
  uint64_t v16 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  id v18 = (uint64_t *)((char *)&v64 - v17);
  uint64_t v64 = v3;
  uint64_t v19 = sub_19F1DC54C();
  uint64_t v81 = *(void *)(v19 - 8);
  uint64_t v82 = v19;
  MEMORY[0x1F4188790](v19);
  char v21 = (char *)&v64 - v20;
  uint64_t v22 = v13;
  uint64_t v23 = sub_19F1DCAAC();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v28 = MEMORY[0x1F4188790](v27);
  CGAffineTransform v30 = (char *)&v64 - v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v14 + 56))((char *)&v64 - v29, 1, 1, v22, v28);
  *id v18 = 1;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FBD118], v79);
  uint64_t v84 = v2;
  uint64_t v85 = v30;
  nullsub_1(v2);
  char v31 = v21;
  sub_19F1DC55C();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v78 = v23;
  uint64_t v79 = (uint64_t)v30;
  long long v33 = (char *)v22;
  v32(v26, v30, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v26, 1, v22) != 1)
  {
    CGSize v34 = *(void (**)(char *, char *, char *))(v14 + 32);
    id v35 = v70;
    v34(v70, v26, v33);
    uint64_t v36 = v77;
    uint64_t v37 = (char *)(v77 + *(void *)(*(void *)v77 + 88));
    uint64_t v70 = v33;
    v34(v37, v35, v33);
    long long v38 = v71;
    uint64_t v39 = v82;
    uint64_t v40 = v31;
    sub_19F1DC3DC();
    (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v36 + *(void *)(*(void *)v36 + 96), v38, v73);
    long long v42 = (void **)v74;
    uint64_t v41 = v75;
    uint64_t v43 = v76;
    uint64_t v44 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v76, v83);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v46 = v44;
    uint64_t v47 = v36;
    uint64_t v48 = v42;
    if (!EnumCaseMultiPayload)
    {
      uint64_t v53 = v80;
      uint64_t v54 = *(void (**)(char *, void **, uint64_t))(v80 + 32);
      uint64_t v73 = v24;
      id v55 = v67;
      uint64_t v56 = v46;
      v54(v67, v48, v2);
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v65, v55, v2);
      double v74 = v40;
      uint64_t v57 = v66;
      sub_19F1DC4DC();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v56);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v57, v69);
      uint64_t v24 = v73;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v2);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v74, v82);
LABEL_13:
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v79, v78);
      return v47;
    }
    uint64_t v49 = v39;
    uint64_t v50 = v80;
    if (EnumCaseMultiPayload == 1)
    {
      sub_19F1DCAAC();
      sub_19F1DD80C();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v51 = *v48;
        int v86 = v51;
        id v52 = v51;
        sub_19F1DC4EC();
      }
      else
      {
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v50 + 48))(v48, 1, v2) != 1)
        {
          uint64_t v61 = *(void (**)(char *, void **, uint64_t))(v50 + 32);
          uint64_t v73 = v24;
          uint64_t v62 = v67;
          v61(v67, v48, v2);
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v65, v62, v2);
          double v74 = v40;
          uint64_t v63 = v66;
          sub_19F1DC4DC();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v63, v69);
          int v86 = 0;
          sub_19F1DC4EC();
          (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v83);
          uint64_t v24 = v73;
          (*(void (**)(char *, uint64_t))(v50 + 8))(v62, v2);
          uint64_t v58 = *(void (**)(char *, uint64_t))(v81 + 8);
          long long v59 = v74;
          goto LABEL_12;
        }
        int v86 = 0;
        sub_19F1DC4EC();
      }
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v83);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v46);
    }
    uint64_t v58 = *(void (**)(char *, uint64_t))(v81 + 8);
    long long v59 = v40;
LABEL_12:
    v58(v59, v49);
    goto LABEL_13;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v78);
  __break(1u);
  return result;
}

uint64_t sub_19F0D1EA8(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v4 = sub_19F1DC4FC();
  uint64_t v5 = sub_19F1DCAAC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  uint64_t v8 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v4);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
  return v6(a2, 0, 1, v4);
}

uint64_t sub_19F0D1FC0(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v13 - v5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v7 = sub_19F1DC4BC();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v6, a1, v3, v9);
  sub_19F1DC4FC();
  sub_19F1DC4DC();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_19F0D218C(void *a1)
{
  id v1 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  sub_19F1DC4FC();
  return sub_19F1DC4EC();
}

uint64_t _AsyncSequenceMultiplexer.AsyncIterator.next()(uint64_t a1)
{
  void v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return MEMORY[0x1F4188298](sub_19F0D226C, 0, 0);
}

uint64_t sub_19F0D226C()
{
  swift_beginAccess();
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v2 = sub_19F1DC53C();
  void *v1 = v0;
  v1[1] = sub_19F0D2368;
  uint64_t v3 = *(void *)(v0 + 40);
  return MEMORY[0x1F4187EE0](v3, v2);
}

uint64_t sub_19F0D2368()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F0D24A4, 0, 0);
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_19F0D24A4()
{
  swift_endAccess();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t _AsyncSequenceMultiplexer.AsyncIterator.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v2 = sub_19F1DC4FC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v4 = sub_19F1DC53C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t _AsyncSequenceMultiplexer.AsyncIterator.__deallocating_deinit()
{
  _AsyncSequenceMultiplexer.AsyncIterator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19F0D2678(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_19EEB8A6C;
  void v5[5] = a1;
  void v5[6] = v4;
  v5[7] = *v4;
  return MEMORY[0x1F4188298](sub_19F0D226C, 0, 0);
}

uint64_t sub_19F0D2750()
{
  swift_weakInit();
  swift_weakAssign();
  return swift_release();
}

uint64_t _AsyncSequenceMultiplexer.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  _AsyncSequenceMultiplexer.init()();
  return v0;
}

uint64_t _AsyncSequenceMultiplexer.init()()
{
  uint64_t v1 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator();
  sub_19F1DC27C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v3 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v5 = (char *)&v15 - v4;
  uint64_t v6 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v7);
  double v9 = (char *)&v15 - v8;
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = sub_19F1DC1CC();
  uint64_t v11 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v5, v9, v1);
  *(void *)&v5[v11] = v10;
  uint64_t v12 = sub_19EEAEA60();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, TupleTypeMetadata2);
  *(void *)(v0 + 16) = v12;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E94743B0);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 24) = 0;
  *(void *)(v13 + 16) = 0;
  *(void *)(v0 + 24) = v13;
  return v0;
}

uint64_t type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _AsyncSequenceMultiplexer.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = swift_allocObject();
  _AsyncSequenceMultiplexer.init()();
  uint64_t v11 = (void *)swift_allocObject();
  long long v11[2] = *(void *)(v5 + 80);
  v11[3] = a3;
  void v11[4] = a4;
  void v11[5] = a1;
  v11[6] = a2;
  swift_retain();
  swift_retain();
  _AsyncSequenceMultiplexer.yield<A>(contentsOf:)();
  swift_release();
  swift_release();
  swift_release();
  return v10;
}

uint64_t _AsyncSequenceMultiplexer.yield<A>(contentsOf:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_19F0D4C18((uint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  return swift_release();
}

uint64_t _AsyncSequenceMultiplexer.deinit()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_19F0D2BE0((uint64_t *)(v1 + 16), &v3);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t *sub_19F0D2BE0@<X0>(uint64_t *result@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result) {
    uint64_t result = (uint64_t *)sub_19F1DC43C();
  }
  *a2 = v3 == 0;
  return result;
}

uint64_t _AsyncSequenceMultiplexer.__deallocating_deinit()
{
  _AsyncSequenceMultiplexer.deinit();
  return swift_deallocClassInstance();
}

uint64_t _AsyncSequenceMultiplexer.isFinishedSuccess.getter()
{
  return sub_19F0D2CAC((void (*)(uint64_t))sub_19F0D4C3C);
}

uint64_t _AsyncSequenceMultiplexer.isFinishedFailure.getter()
{
  return sub_19F0D2CAC((void (*)(uint64_t))sub_19F0D4C68);
}

uint64_t sub_19F0D2CAC(void (*a1)(uint64_t))
{
  uint64_t v3 = v1[2];
  v5[2] = *(void *)(*v1 + 80);
  type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator();
  sub_19F1DC27C();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_19EEAC6FC(a1, (uint64_t)v5, v3);
  swift_release();
  return v6;
}

uint64_t sub_19F0D2D78(uint64_t a1)
{
  uint64_t v3 = v1[2];
  void v12[2] = *(void *)(*v1 + 80);
  v12[3] = a1;
  type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  uint64_t v4 = type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator();
  sub_19F1DC27C();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_19EEAC6FC((void (*)(uint64_t))sub_19F0D6B3C, (uint64_t)v12, v3);
  swift_release();
  uint64_t v5 = v15;
  if (MEMORY[0x19F3C6550](v15, v4))
  {
    uint64_t v6 = 0;
    uint64_t v7 = v5 + 32;
    do
    {
      char v8 = sub_19F1DC1FC();
      sub_19F1DC19C();
      if (v8)
      {
        uint64_t v9 = *(void *)(v4 - 8);
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v14, v7, v4);
        uint64_t v10 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v13 = sub_19F1DCD5C();
        uint64_t v9 = *(void *)(v4 - 8);
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v9 + 16))(v14, &v13, v4);
        swift_unknownObjectRelease();
        uint64_t v10 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v9 + 32))(&v13, v14, v4);
      if (swift_weakLoadStrong())
      {
        sub_19F0D1FC0(a1);
        swift_release();
      }
      (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(&v13, v4);
      v7 += 8;
      ++v6;
    }
    while (v10 != MEMORY[0x19F3C6550](v5, v4));
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0D3008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator();
  sub_19F1DC27C();
  uint64_t v7 = (void *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_19F1DC72C();
  sub_19F0D1070(a2, v6);
  *a3 = *v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F0D313C(void *a1)
{
  uint64_t v3 = v1[2];
  void v12[2] = *(void *)(*v1 + 80);
  v12[3] = a1;
  type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  uint64_t v4 = type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator();
  sub_19F1DC27C();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_19EEAC6FC((void (*)(uint64_t))sub_19F0D6B98, (uint64_t)v12, v3);
  swift_release();
  uint64_t v5 = v14;
  if (MEMORY[0x19F3C6550](v14, v4))
  {
    uint64_t v6 = 0;
    uint64_t v7 = v5 + 32;
    do
    {
      char v8 = sub_19F1DC1FC();
      sub_19F1DC19C();
      if (v8)
      {
        uint64_t v9 = *(void *)(v4 - 8);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(&v14, v7, v4);
        uint64_t v10 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        v13[0] = sub_19F1DCD5C();
        uint64_t v9 = *(void *)(v4 - 8);
        (*(void (**)(uint64_t *, void *, uint64_t))(v9 + 16))(&v14, v13, v4);
        swift_unknownObjectRelease();
        uint64_t v10 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      (*(void (**)(void *, uint64_t *, uint64_t))(v9 + 32))(v13, &v14, v4);
      if (swift_weakLoadStrong())
      {
        sub_19F0D218C(a1);
        swift_release();
      }
      (*(void (**)(void *, uint64_t))(v9 + 8))(v13, v4);
      v7 += 8;
      ++v6;
    }
    while (v10 != MEMORY[0x19F3C6550](v5, v4));
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0D33CC@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator();
  *a2 = sub_19F1DBAFC();
  uint64_t v4 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  sub_19F1DC27C();
  swift_getTupleTypeMetadata2();
  sub_19F1DD63C();
  return sub_19F0D11F4(a1, v4);
}

uint64_t sub_19F0D3488(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *a2;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t result = swift_release();
  if (v15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    uint64_t v19 = (void *)swift_allocObject();
    _OWORD v19[2] = 0;
    void v19[3] = 0;
    v19[4] = *(void *)(v11 + 80);
    void v19[5] = a5;
    v19[6] = a6;
    v19[7] = a3;
    void v19[8] = a4;
    void v19[9] = v18;
    swift_retain();
    uint64_t v20 = sub_19F0D3F0C((uint64_t)v14, (uint64_t)&unk_1E94745D0, (uint64_t)v19);
    uint64_t result = sub_19EEAEF0C((uint64_t)v14);
    *a1 = v20;
  }
  return result;
}

uint64_t sub_19F0D3634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a8;
  v8[16] = v13;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  v8[17] = *(void *)(a7 - 8);
  v8[18] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[19] = AssociatedTypeWitness;
  v8[20] = *(void *)(AssociatedTypeWitness - 8);
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  sub_19F1DCAAC();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  v8[25] = v10;
  v8[26] = *(void *)(v10 - 8);
  v8[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F0D3864, 0, 0);
}

uint64_t sub_19F0D3864()
{
  (*(void (**)(void))(v0 + 88))();
  sub_19F1DC4AC();
  swift_beginAccess();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)(v0 + 224) = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19F0D399C;
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  return MEMORY[0x1F4187C80](v4, 0, 0, v5, v3, AssociatedConformanceWitness);
}

uint64_t sub_19F0D399C()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_19F0D3D2C;
  }
  else {
    uint64_t v1 = sub_19F0D3AAC;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_19F0D3AAC()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_19F0D313C(0);
      swift_release();
    }
    goto LABEL_9;
  }
  (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[18], v1, v3);
  if (!swift_weakLoadStrong())
  {
    uint64_t v13 = v0[26];
    uint64_t v12 = v0[27];
    uint64_t v14 = v0[25];
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[14]);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v6 = v0[14];
  sub_19F0D2D78(v4);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[28] = AssociatedConformanceWitness;
  char v8 = (void *)swift_task_alloc();
  v0[29] = v8;
  *char v8 = v0;
  v8[1] = sub_19F0D399C;
  uint64_t v9 = v0[25];
  uint64_t v11 = v0[22];
  uint64_t v10 = v0[23];
  return MEMORY[0x1F4187C80](v10, 0, 0, v11, v9, AssociatedConformanceWitness);
}