uint64_t sub_19F0D3D2C()
{
  void *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[20] + 32);
  v1(v0[21], v0[22], v0[19]);
  swift_getAssociatedConformanceWitness();
  v2 = sub_19F1DD3FC();
  v3 = v0[21];
  if (v2)
  {
    v4 = (void *)v2;
    (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  }
  else
  {
    v5 = v0[19];
    v4 = (void *)swift_allocError();
    v1(v6, v3, v5);
  }
  (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v7 = v4;
    sub_19F0D313C(v4);

    swift_release();
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_19F0D3F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v6 - 8);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F0D6A9C(a1, (uint64_t)v8);
  uint64_t v9 = sub_19F1DC37C();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_19EEAEF0C((uint64_t)v8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_19F1DC2FC();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_19F1DC36C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t _AsyncSequenceMultiplexer.makeAsyncIterator()()
{
  uint64_t v1 = v0[2];
  v3[2] = *(void *)(*v0 + 80);
  type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator();
  sub_19F1DC27C();
  swift_retain();
  swift_getTupleTypeMetadata2();
  type metadata accessor for _AsyncSequenceMultiplexer.AsyncIterator();
  sub_19EEAC6FC((void (*)(uint64_t))sub_19F0D4CF4, (uint64_t)v3, v1);
  swift_release();
  return v3[5];
}

uint64_t sub_19F0D41D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - v6;
  type metadata accessor for _AsyncSequenceMultiplexer.AsyncIterator();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_allocObject();
  uint64_t v8 = sub_19F0D14FC((uint64_t)v7);
  uint64_t result = sub_19F0D0D98(v4);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_19F0D0F04(v4);
    if ((result & 1) == 0)
    {
      swift_retain();
      sub_19F0D2750();
      type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator();
      sub_19F1DC27C();
      swift_getTupleTypeMetadata2();
      uint64_t result = sub_19F1DC23C();
    }
  }
  *a2 = v8;
  return result;
}

unint64_t _AsyncSequenceMultiplexer.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator();
  sub_19F1DC27C();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_19F0D4A18((void (*)(uint64_t))sub_19F0D4D28, v1, MEMORY[0x1E4FBB1A0], (uint64_t)v3);
  swift_release();
  if (v3[1]) {
    return v3[0];
  }
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return 0xD000000000000013;
}

void sub_19F0D44C4(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  double v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void **)((char *)&v20 - v11);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)&v20 - v11, a1, v9, v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload != 1) {
    goto LABEL_8;
  }
  sub_19F1DCAAC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  sub_19F1DD80C();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(v12, 1, a2) == 1)
    {
LABEL_8:
      unint64_t v20 = 0;
      unint64_t v21 = 0xE000000000000000;
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      unint64_t v20 = 0xD000000000000013;
      unint64_t v21 = 0x800000019F271FA0;
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      goto LABEL_9;
    }
LABEL_10:
    (*(void (**)(char *, void **, uint64_t))(v6 + 32))(v8, v12, a2);
    unint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DD40C();
    sub_19F1DBEFC();
    unint64_t v18 = v20;
    unint64_t v19 = v21;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
    goto LABEL_11;
  }
  v15 = *v12;
  unint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  unint64_t v20 = 0xD000000000000013;
  unint64_t v21 = 0x800000019F271FA0;
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  v16 = (void *)sub_19F1DB18C();
  id v17 = (id)AMSLogableError();

  sub_19F1DBD7C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();

LABEL_9:
  unint64_t v18 = v20;
  unint64_t v19 = v21;
LABEL_11:
  *a3 = v18;
  a3[1] = v19;
}

uint64_t sub_19F0D49B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = _AsyncSequenceMultiplexer.makeAsyncIterator()();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

unint64_t sub_19F0D49F4()
{
  return _AsyncSequenceMultiplexer.debugDescription.getter();
}

void sub_19F0D4A18(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_19F0D4AA4((os_unfair_lock_t)(a2 + ((*(unsigned int *)(*(void *)a2 + 48) + 3) & 0x1FFFFFFFCLL)), a2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a2 + 16), a1, a3, &v4, a4);
}

void sub_19F0D4AA4(os_unfair_lock_t lock@<X1>, uint64_t a2@<X0>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X5>, void *a5@<X6>, uint64_t a6@<X8>)
{
  if (os_unfair_lock_trylock(lock))
  {
    a3(a2);
    if (v6)
    {
      os_unfair_lock_unlock(lock);
      *a5 = v6;
    }
    else
    {
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a6, 0, 1, a4);
      os_unfair_lock_unlock(lock);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a6, 1, 1, a4);
  }
}

uint64_t sub_19F0D4BB8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F0D4BF0()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_19F0D4C18(uint64_t *a1)
{
  return sub_19F0D3488(a1, *(uint64_t **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19F0D4C3C@<X0>(unsigned char *a1@<X8>)
{
  return sub_19F0D4C94((uint64_t (*)(uint64_t))sub_19F0D0D98, a1);
}

uint64_t sub_19F0D4C68@<X0>(unsigned char *a1@<X8>)
{
  return sub_19F0D4C94((uint64_t (*)(uint64_t))sub_19F0D0F04, a1);
}

uint64_t sub_19F0D4C94@<X0>(uint64_t (*a1)(uint64_t)@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer();
  uint64_t result = a1(v4);
  *a2 = result & 1;
  return result;
}

uint64_t sub_19F0D4CF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19F0D41D4(a1, a2);
}

uint64_t type metadata accessor for _AsyncSequenceMultiplexer.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

void sub_19F0D4D28(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  sub_19F0D44C4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_19F0D4D44()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0D4D60()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for _AsyncSequenceMultiplexer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for _AsyncSequenceMultiplexer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _AsyncSequenceMultiplexer);
}

uint64_t dispatch thunk of _AsyncSequenceMultiplexer.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_19F0D4DEC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t result = sub_19F1DC4FC();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_19F1DC53C();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for _AsyncSequenceMultiplexer.AsyncIterator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _AsyncSequenceMultiplexer.AsyncIterator);
}

uint64_t sub_19F0D4F20()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    sub_19F1DCAAC();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
    uint64_t v0 = sub_19F1DD80C();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

id *sub_19F0D5024(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v9 = *(void *)(v6 + 64);
  }
  else {
    size_t v9 = v7 + 1;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  if (v10 + 1 > v7) {
    uint64_t v11 = v10 + 1;
  }
  else {
    uint64_t v11 = *(void *)(v6 + 64);
  }
  size_t v12 = v11 + 1;
  if ((v8 & 0x1000F8) != 0 || v12 > 0x18)
  {
    uint64_t v14 = (char *)*__src;
    *uint64_t v4 = *__src;
    uint64_t v4 = (id *)&v14[(unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v15 = *((unsigned __int8 *)__src + v11);
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v17 = v11;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *(unsigned __int8 *)__src;
          goto LABEL_25;
        case 2:
          int v18 = *(unsigned __int16 *)__src;
          goto LABEL_25;
        case 3:
          int v18 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_25;
        case 4:
          int v18 = *(_DWORD *)__src;
LABEL_25:
          int v19 = (v18 | (v16 << (8 * v11))) + 2;
          unsigned int v15 = v18 + 2;
          if (v11 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      unsigned int v20 = *((unsigned __int8 *)__src + v10);
      unsigned int v21 = v20 - 2;
      if (v20 >= 2)
      {
        if (v10 <= 3) {
          uint64_t v22 = v10;
        }
        else {
          uint64_t v22 = 4;
        }
        switch(v22)
        {
          case 1:
            int v23 = *(unsigned __int8 *)__src;
            goto LABEL_40;
          case 2:
            int v23 = *(unsigned __int16 *)__src;
            goto LABEL_40;
          case 3:
            int v23 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
            goto LABEL_40;
          case 4:
            int v23 = *(_DWORD *)__src;
LABEL_40:
            int v24 = (v23 | (v21 << (8 * v10))) + 2;
            unsigned int v20 = v23 + 2;
            if (v10 < 4) {
              unsigned int v20 = v24;
            }
            break;
          default:
            break;
        }
      }
      if (v20 == 1)
      {
        id v25 = *__src;
        id v26 = *__src;
        *uint64_t v4 = v25;
        char v27 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
        {
          memcpy(v4, __src, v9);
        }
        else
        {
          (*(void (**)(id *, id *, uint64_t))(v6 + 16))(v4, __src, v5);
          (*(void (**)(id *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
        }
        char v27 = 0;
      }
      *((unsigned char *)v4 + v10) = v27;
      *((unsigned char *)v4 + v11) = 1;
    }
    else if (v15)
    {
      memcpy(__dst, __src, v12);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((unsigned char *)v4 + v11) = 0;
    }
  }
  return v4;
}

void sub_19F0D530C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (*(_DWORD *)(v4 + 84)) {
    unint64_t v6 = *(void *)(v4 + 64);
  }
  else {
    unint64_t v6 = v5 + 1;
  }
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  if (v6 + 1 > v5) {
    unint64_t v5 = v6 + 1;
  }
  unsigned int v7 = a1[v5];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_17;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_17:
        int v11 = (v10 | (v8 << (8 * v5))) + 2;
        unsigned int v7 = v10 + 2;
        if (v5 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 != 1)
  {
    if (v7) {
      return;
    }
LABEL_21:
    size_t v12 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
    v12(a1, v3);
    return;
  }
  unsigned int v13 = a1[v6];
  unsigned int v14 = v13 - 2;
  if (v13 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v15 = v6;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *a1;
        goto LABEL_33;
      case 2:
        int v16 = *(unsigned __int16 *)a1;
        goto LABEL_33;
      case 3:
        int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_33;
      case 4:
        int v16 = *(_DWORD *)a1;
LABEL_33:
        int v17 = (v16 | (v14 << (8 * v6))) + 2;
        unsigned int v13 = v16 + 2;
        if (v6 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 != 1)
  {
    uint64_t v20 = *(void *)(*(void *)(a2 + 16) - 8);
    int v19 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    uint64_t v4 = v20;
    if (v19) {
      return;
    }
    goto LABEL_21;
  }
  int v18 = *(void **)a1;
}

void *sub_19F0D5550(void *__dst, id *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = v7 + 1;
  }
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  if (v9 + 1 > v7) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = *(void *)(v6 + 64);
  }
  unsigned int v11 = *((unsigned __int8 *)__src + v10);
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)__src;
        goto LABEL_19;
      case 2:
        int v14 = *(unsigned __int16 *)__src;
        goto LABEL_19;
      case 3:
        int v14 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_19;
      case 4:
        int v14 = *(_DWORD *)__src;
LABEL_19:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    unsigned int v16 = *((unsigned __int8 *)__src + v9);
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v18 = v9;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *(unsigned __int8 *)__src;
          goto LABEL_34;
        case 2:
          int v19 = *(unsigned __int16 *)__src;
          goto LABEL_34;
        case 3:
          int v19 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_34;
        case 4:
          int v19 = *(_DWORD *)__src;
LABEL_34:
          int v20 = (v19 | (v17 << (8 * v9))) + 2;
          unsigned int v16 = v19 + 2;
          if (v9 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
      id v21 = *__src;
      id v22 = *__src;
      *__dst = v21;
      char v23 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
      {
        memcpy(__dst, __src, v8);
      }
      else
      {
        (*(void (**)(void *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
      }
      char v23 = 0;
    }
    *((unsigned char *)__dst + v9) = v23;
    *((unsigned char *)__dst + v10) = 1;
  }
  else if (v11)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else
  {
    (*(void (**)(void *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
    *((unsigned char *)__dst + v10) = 0;
  }
  return __dst;
}

id *sub_19F0D5800(id *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst == (id *)__src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = v7 + 1;
  }
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  if (v9 + 1 > v7) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = *(void *)(v6 + 64);
  }
  unsigned int v11 = *((unsigned __int8 *)__dst + v10);
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)__dst;
        goto LABEL_20;
      case 2:
        int v14 = *(unsigned __int16 *)__dst;
        goto LABEL_20;
      case 3:
        int v14 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
        goto LABEL_20;
      case 4:
        int v14 = *(_DWORD *)__dst;
LABEL_20:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    unsigned int v16 = *((unsigned __int8 *)__dst + v9);
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v18 = v9;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *(unsigned __int8 *)__dst;
          goto LABEL_34;
        case 2:
          int v19 = *(unsigned __int16 *)__dst;
          goto LABEL_34;
        case 3:
          int v19 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_34;
        case 4:
          int v19 = *(_DWORD *)__dst;
LABEL_34:
          int v20 = (v19 | (v17 << (8 * v9))) + 2;
          unsigned int v16 = v19 + 2;
          if (v9 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {

      goto LABEL_39;
    }
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(__dst, 1, v5)) {
      goto LABEL_39;
    }
    goto LABEL_24;
  }
  if (!v11) {
LABEL_24:
  }
    (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
LABEL_39:
  unsigned int v21 = __src[v10];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v23 = v10;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *__src;
        goto LABEL_48;
      case 2:
        int v24 = *(unsigned __int16 *)__src;
        goto LABEL_48;
      case 3:
        int v24 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_48;
      case 4:
        int v24 = *(_DWORD *)__src;
LABEL_48:
        int v25 = (v24 | (v22 << (8 * v10))) + 2;
        unsigned int v21 = v24 + 2;
        if (v10 < 4) {
          unsigned int v21 = v25;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 1)
  {
    unsigned int v26 = __src[v9];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v28 = v9;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *__src;
          if (v9 >= 4) {
            goto LABEL_68;
          }
          goto LABEL_62;
        case 2:
          int v29 = *(unsigned __int16 *)__src;
          if (v9 < 4) {
            goto LABEL_62;
          }
          goto LABEL_68;
        case 3:
          int v29 = *(unsigned __int16 *)__src | (__src[2] << 16);
          if (v9 < 4) {
            goto LABEL_62;
          }
          goto LABEL_68;
        case 4:
          int v29 = *(_DWORD *)__src;
          if (v9 < 4)
          {
LABEL_62:
            unsigned int v26 = (v29 | (v27 << (8 * v9))) + 2;
            break;
          }
LABEL_68:
          if (v29 != -1) {
            goto LABEL_69;
          }
          goto LABEL_64;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
LABEL_64:
      v30 = *(void **)__src;
      id v31 = v30;
      *__dst = v30;
      char v32 = 1;
    }
    else
    {
LABEL_69:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
      {
        memcpy(__dst, __src, v8);
      }
      else
      {
        (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
        (*(void (**)(id *, void, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
      }
      char v32 = 0;
    }
    *((unsigned char *)__dst + v9) = v32;
    *((unsigned char *)__dst + v10) = 1;
  }
  else if (v21)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else
  {
    (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
    *((unsigned char *)__dst + v10) = 0;
  }
  return __dst;
}

void *sub_19F0D5C50(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = v7 + 1;
  }
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  if (v9 + 1 > v7) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = *(void *)(v6 + 64);
  }
  unsigned int v11 = __src[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *__src;
        goto LABEL_19;
      case 2:
        int v14 = *(unsigned __int16 *)__src;
        goto LABEL_19;
      case 3:
        int v14 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_19;
      case 4:
        int v14 = *(_DWORD *)__src;
LABEL_19:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    unsigned int v16 = __src[v9];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v18 = v9;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *__src;
          goto LABEL_34;
        case 2:
          int v19 = *(unsigned __int16 *)__src;
          goto LABEL_34;
        case 3:
          int v19 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_34;
        case 4:
          int v19 = *(_DWORD *)__src;
LABEL_34:
          int v20 = (v19 | (v17 << (8 * v9))) + 2;
          unsigned int v16 = v19 + 2;
          if (v9 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
      *__dst = *(void *)__src;
      char v21 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
      {
        memcpy(__dst, __src, v8);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
      }
      char v21 = 0;
    }
    *((unsigned char *)__dst + v9) = v21;
    *((unsigned char *)__dst + v10) = 1;
  }
  else if (v11)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    *((unsigned char *)__dst + v10) = 0;
  }
  return __dst;
}

id *sub_19F0D5EF8(id *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst == (id *)__src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = v7 + 1;
  }
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  if (v9 + 1 > v7) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = *(void *)(v6 + 64);
  }
  unsigned int v11 = *((unsigned __int8 *)__dst + v10);
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)__dst;
        goto LABEL_20;
      case 2:
        int v14 = *(unsigned __int16 *)__dst;
        goto LABEL_20;
      case 3:
        int v14 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
        goto LABEL_20;
      case 4:
        int v14 = *(_DWORD *)__dst;
LABEL_20:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    unsigned int v16 = *((unsigned __int8 *)__dst + v9);
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v18 = v9;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *(unsigned __int8 *)__dst;
          goto LABEL_34;
        case 2:
          int v19 = *(unsigned __int16 *)__dst;
          goto LABEL_34;
        case 3:
          int v19 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_34;
        case 4:
          int v19 = *(_DWORD *)__dst;
LABEL_34:
          int v20 = (v19 | (v17 << (8 * v9))) + 2;
          unsigned int v16 = v19 + 2;
          if (v9 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {

      goto LABEL_39;
    }
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(__dst, 1, v5)) {
      goto LABEL_39;
    }
    goto LABEL_24;
  }
  if (!v11) {
LABEL_24:
  }
    (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
LABEL_39:
  unsigned int v21 = __src[v10];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v23 = v10;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *__src;
        goto LABEL_48;
      case 2:
        int v24 = *(unsigned __int16 *)__src;
        goto LABEL_48;
      case 3:
        int v24 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_48;
      case 4:
        int v24 = *(_DWORD *)__src;
LABEL_48:
        int v25 = (v24 | (v22 << (8 * v10))) + 2;
        unsigned int v21 = v24 + 2;
        if (v10 < 4) {
          unsigned int v21 = v25;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 1)
  {
    unsigned int v26 = __src[v9];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v28 = v9;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *__src;
          if (v9 >= 4) {
            goto LABEL_68;
          }
          goto LABEL_62;
        case 2:
          int v29 = *(unsigned __int16 *)__src;
          if (v9 < 4) {
            goto LABEL_62;
          }
          goto LABEL_68;
        case 3:
          int v29 = *(unsigned __int16 *)__src | (__src[2] << 16);
          if (v9 < 4) {
            goto LABEL_62;
          }
          goto LABEL_68;
        case 4:
          int v29 = *(_DWORD *)__src;
          if (v9 < 4)
          {
LABEL_62:
            unsigned int v26 = (v29 | (v27 << (8 * v9))) + 2;
            break;
          }
LABEL_68:
          if (v29 != -1) {
            goto LABEL_69;
          }
          goto LABEL_64;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
LABEL_64:
      *__dst = *(id *)__src;
      char v30 = 1;
    }
    else
    {
LABEL_69:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
      {
        memcpy(__dst, __src, v8);
      }
      else
      {
        (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
        (*(void (**)(id *, void, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
      }
      char v30 = 0;
    }
    *((unsigned char *)__dst + v9) = v30;
    *((unsigned char *)__dst + v10) = 1;
  }
  else if (v21)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else
  {
    (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    *((unsigned char *)__dst + v10) = 0;
  }
  return __dst;
}

uint64_t sub_19F0D6340(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  if (*(_DWORD *)(v3 + 84)) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = v4 + 1;
  }
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  if (v5 + 1 > v4) {
    unint64_t v6 = v5 + 1;
  }
  else {
    unint64_t v6 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_28;
  }
  unint64_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v11 = ((a2 + ~(-1 << v8) - 253) >> v8) + 1;
    if (HIWORD(v11))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v11 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v11 < 2)
    {
LABEL_28:
      unsigned int v13 = *((unsigned __int8 *)a1 + v6);
      if (v13 >= 3) {
        return (v13 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_28;
  }
LABEL_20:
  int v12 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v12 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v7 | v12) + 254;
}

void sub_19F0D64B8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = v6 + 1;
  }
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  if (v7 + 1 > v6) {
    unint64_t v6 = v7 + 1;
  }
  size_t v8 = v6 + 1;
  if (a3 < 0xFE)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << (8 * v8)) - 253) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v10 = a2 - 254;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v6 != -1)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        break;
      case 3:
LABEL_39:
        __break(1u);
        JUMPOUT(0x19F0D66C4);
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_27;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      default:
LABEL_27:
        if (a2) {
LABEL_28:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_19F0D66EC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  if (*(_DWORD *)(v2 + 84)) {
    unint64_t v4 = v3;
  }
  else {
    unint64_t v4 = v3 + 1;
  }
  if (v4 <= 8) {
    unint64_t v4 = 8;
  }
  if (v4 + 1 > v3) {
    unint64_t v5 = v4 + 1;
  }
  else {
    unint64_t v5 = v3;
  }
  uint64_t v6 = a1[v5];
  int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_18;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_18:
        unsigned int v10 = (v9 | (v7 << (8 * v5))) + 2;
        LODWORD(v6) = v9 + 2;
        if (v5 >= 4) {
          uint64_t v6 = v6;
        }
        else {
          uint64_t v6 = v10;
        }
        break;
      default:
        return v6;
    }
  }
  return v6;
}

void sub_19F0D67E8(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  size_t v5 = *(void *)(v4 + 64);
  if (*(_DWORD *)(v4 + 84)) {
    unint64_t v6 = v5;
  }
  else {
    unint64_t v6 = v5 + 1;
  }
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  if (v6 + 1 > v5) {
    size_t v5 = v6 + 1;
  }
  if (a2 > 1)
  {
    if (v5 <= 3) {
      char v7 = ((a2 - 2) >> (8 * v5)) + 2;
    }
    else {
      char v7 = 2;
    }
    if (v5 <= 3) {
      int v8 = (a2 - 2) & ~(-1 << (8 * v5));
    }
    else {
      int v8 = a2 - 2;
    }
    a1[v5] = v7;
    if (v5 >= 4) {
      int v9 = 4;
    }
    else {
      int v9 = v5;
    }
    bzero(a1, v5);
    switch(v9)
    {
      case 2:
        *(_WORD *)a1 = v8;
        break;
      case 3:
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
        break;
      case 4:
        *(_DWORD *)a1 = v8;
        break;
      default:
        *a1 = v8;
        break;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t sub_19F0D6928(uint64_t a1)
{
  return sub_19F0D1EA8(a1, *(void *)(v1 + 24));
}

uint64_t sub_19F0D6930()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F0D6968()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19F0D69B0(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v9 = v1[9];
  int v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *int v11 = v2;
  v11[1] = sub_19EEB8A6C;
  return sub_19F0D3634(a1, v6, v7, v8, v10, v9, v4, v5);
}

uint64_t sub_19F0D6A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F0D6B04()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0D6B3C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19F0D3008(a1, *(void *)(v2 + 24), a2);
}

BOOL sub_19F0D6B58()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong) {
    swift_release();
  }
  return Strong == 0;
}

uint64_t sub_19F0D6B98@<X0>(uint64_t *a1@<X8>)
{
  return sub_19F0D33CC(*(void **)(v1 + 24), a1);
}

uint64_t destroy for UserPreferenceIntentReplayDispatcherConfigurationProvider()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserPreferenceIntentReplayDispatcherConfigurationProvider(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserPreferenceIntentReplayDispatcherConfigurationProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserPreferenceIntentReplayDispatcherConfigurationProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UserPreferenceIntentReplayDispatcherConfigurationProvider()
{
  return &type metadata for UserPreferenceIntentReplayDispatcherConfigurationProvider;
}

uint64_t sub_19F0D6D18()
{
  return *v0;
}

uint64_t sub_19F0D6D20()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_19F0D6D28()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_19F0D6D30()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F0D6D38()
{
  return swift_bridgeObjectRetain();
}

uint64_t Dictionary<>.init(_partiallyFrom:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v5 = sub_19F1DCAAC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D4A0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_19F1DBAEC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_19F1DD89C();
  sub_19F0D75E4(0xD000000000000027, 0x800000019F269EF0, v12, (uint64_t)v38);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF6EA7C();
  sub_19F1DD8AC();
  int v29 = v7;
  int v24 = a1;
  char v30 = v11;
  uint64_t v31 = v8;
  uint64_t v13 = sub_19F1DD1CC();
  uint64_t v27 = sub_19F1DBC0C();
  sub_19F1DBB8C();
  uint64_t v25 = v13;
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v26 = a2 - 8;
    int v15 = (unsigned __int8 *)(v25 + 48);
    uint64_t v34 = a2;
    uint64_t v28 = v9;
    do
    {
      uint64_t v16 = *((void *)v15 - 2);
      uint64_t v17 = *((void *)v15 - 1);
      int v18 = *v15;
      if (v18 == 1)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v33 = v16;
        uint64_t v19 = v17;
      }
      else
      {
        uint64_t v35 = *((void *)v15 - 2);
        uint64_t v33 = sub_19F1DD2EC();
        uint64_t v19 = v20;
      }
      unsigned int v21 = v29;
      uint64_t v35 = v16;
      uint64_t v36 = v17;
      char v37 = v18;
      sub_19F1DD1BC();
      sub_19EF6EAD0(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v21, 0, 1, a2);
      uint64_t v35 = v33;
      uint64_t v36 = v19;
      sub_19F1DBC6C();
      uint64_t v9 = v28;
      v15 += 24;
      --v14;
    }
    while (v14);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v30, v31);
  sub_19EEBD664((uint64_t)v38, qword_1E946D938);
  uint64_t v22 = v39;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  return v22;
}

uint64_t sub_19F0D720C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DCF8C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F0F8A04(a1, a2, (uint64_t)v9);
  if (*(void *)(a3 + 16) && (unint64_t v10 = sub_19EE71FE4((uint64_t)v9), (v11 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v10, (uint64_t)&v30);
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (*((void *)&v31 + 1))
  {
    sub_19EEBDC00(&v30, v35);
    sub_19EEBDBA4((uint64_t)v35, (uint64_t)&v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474600);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
      return v27;
    }
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19F24EB80;
    id v15 = v13;
    uint64_t v34 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
    v16._object = (void *)0x800000019F26BAB0;
    v16._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    v33[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474608);
    v33[0] = a1;
    v33[1] = a2;
    sub_19EEC3ED8((uint64_t)v33, (uint64_t)v29, &qword_1EB393260);
    long long v27 = 0u;
    long long v28 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v29, (uint64_t)&v27);
    char v32 = 0;
    long long v30 = v27;
    long long v31 = v28;
    uint64_t v17 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
    }
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      uint64_t v17 = sub_19EEC3F3C((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    v17[2] = v19 + 1;
    uint64_t v20 = &v17[5 * v19];
    long long v21 = v30;
    long long v22 = v31;
    *((unsigned char *)v20 + 64) = v32;
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v22;
    uint64_t v34 = v17;
    sub_19EEBD664((uint64_t)v33, &qword_1EB393260);
    v23._countAndFlagsBits = 96;
    v23._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *(void *)(v14 + 32) = v34;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v24 + 16) = xmmword_19F24EAD0;
    *((void *)&v28 + 1) = v25;
    *(void *)&long long v27 = 0xD000000000000027;
    *((void *)&v27 + 1) = 0x800000019F26AE20;
    long long v30 = 0u;
    long long v31 = 0u;
    sub_19EEC3E70((uint64_t)&v27, (uint64_t)&v30);
    *(unsigned char *)(v24 + 64) = 0;
    long long v26 = v31;
    *(_OWORD *)(v24 + 32) = v30;
    *(_OWORD *)(v24 + 48) = v26;
    *(void *)(v14 + 40) = v24;
    *(void *)&long long v30 = v15;
    LOBYTE(v27) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v27);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v30, &qword_1EB393260);
  }
  return 0;
}

double sub_19F0D75E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_19F1DCF8C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F0F8A10(a1, a2, (uint64_t)v11);
  if (*(void *)(a3 + 16) && (unint64_t v12 = sub_19EE71FE4((uint64_t)v11), (v13 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v12, (uint64_t)&v34);
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (*((void *)&v35 + 1))
  {
    sub_19EEBDC00(&v34, v37);
    sub_19EEBDBA4((uint64_t)v37, (uint64_t)&v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C840);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
      sub_19EEBB420(&v34, a4);
      return result;
    }
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
    sub_19EEBD664((uint64_t)&v34, qword_1E946D938);
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    id v15 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_19F24EB80;
    id v17 = v15;
    uint64_t v33 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
    v18._object = (void *)0x800000019F26BAB0;
    v18._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    v32[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474610);
    v32[0] = a1;
    v32[1] = a2;
    sub_19EEC3ED8((uint64_t)v32, (uint64_t)v31, &qword_1EB393260);
    long long v29 = 0u;
    long long v30 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v31, (uint64_t)&v29);
    LOBYTE(v36) = 0;
    long long v34 = v29;
    long long v35 = v30;
    unint64_t v19 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
    }
    unint64_t v21 = v19[2];
    unint64_t v20 = v19[3];
    if (v21 >= v20 >> 1) {
      unint64_t v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
    }
    v19[2] = v21 + 1;
    long long v22 = &v19[5 * v21];
    long long v23 = v34;
    long long v24 = v35;
    *((unsigned char *)v22 + 64) = v36;
    *((_OWORD *)v22 + 2) = v23;
    *((_OWORD *)v22 + 3) = v24;
    uint64_t v33 = v19;
    sub_19EEBD664((uint64_t)v32, &qword_1EB393260);
    v25._countAndFlagsBits = 96;
    v25._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    *(void *)(v16 + 32) = v33;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v26 + 16) = xmmword_19F24EAD0;
    *((void *)&v30 + 1) = v27;
    *(void *)&long long v29 = 0xD000000000000027;
    *((void *)&v29 + 1) = 0x800000019F26AE20;
    long long v34 = 0u;
    long long v35 = 0u;
    sub_19EEC3E70((uint64_t)&v29, (uint64_t)&v34);
    *(unsigned char *)(v26 + 64) = 0;
    long long v28 = v35;
    *(_OWORD *)(v26 + 32) = v34;
    *(_OWORD *)(v26 + 48) = v28;
    *(void *)(v16 + 40) = v26;
    *(void *)&long long v34 = v17;
    LOBYTE(v29) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v29);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v34, &qword_1EB393260);
  }
  *(void *)(a4 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

uint64_t sub_19F0D79E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DCF8C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F0F8A1C(a1, a2, (uint64_t)v9);
  if (*(void *)(a3 + 16) && (unint64_t v10 = sub_19EE71FE4((uint64_t)v9), (v11 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v10, (uint64_t)&v30);
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (*((void *)&v31 + 1))
  {
    sub_19EEBDC00(&v30, v35);
    sub_19EEBDBA4((uint64_t)v35, (uint64_t)&v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94745F0);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
      return v27;
    }
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    char v13 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19F24EB80;
    id v15 = v13;
    long long v34 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
    v16._object = (void *)0x800000019F26BAB0;
    v16._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    v33[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94745F8);
    v33[0] = a1;
    v33[1] = a2;
    sub_19EEC3ED8((uint64_t)v33, (uint64_t)v29, &qword_1EB393260);
    long long v27 = 0u;
    long long v28 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v29, (uint64_t)&v27);
    char v32 = 0;
    long long v30 = v27;
    long long v31 = v28;
    id v17 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
    }
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      id v17 = sub_19EEC3F3C((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    v17[2] = v19 + 1;
    unint64_t v20 = &v17[5 * v19];
    long long v21 = v30;
    long long v22 = v31;
    *((unsigned char *)v20 + 64) = v32;
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v22;
    long long v34 = v17;
    sub_19EEBD664((uint64_t)v33, &qword_1EB393260);
    v23._countAndFlagsBits = 96;
    v23._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *(void *)(v14 + 32) = v34;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v24 + 16) = xmmword_19F24EAD0;
    *((void *)&v28 + 1) = v25;
    *(void *)&long long v27 = 0xD000000000000027;
    *((void *)&v27 + 1) = 0x800000019F26AE20;
    long long v30 = 0u;
    long long v31 = 0u;
    sub_19EEC3E70((uint64_t)&v27, (uint64_t)&v30);
    *(unsigned char *)(v24 + 64) = 0;
    long long v26 = v31;
    *(_OWORD *)(v24 + 32) = v30;
    *(_OWORD *)(v24 + 48) = v26;
    *(void *)(v14 + 40) = v24;
    *(void *)&long long v30 = v15;
    LOBYTE(v27) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v27);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v30, &qword_1EB393260);
  }
  return 0;
}

uint64_t Bool.init(_partiallyFrom:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  __swift_project_boxed_opaque_existential_1(v4, v5);
  if (sub_19F1DD4AC())
  {
    char v2 = 0;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v4, v5);
    char v2 = sub_19F1DD46C();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v2 & 1;
}

uint64_t sub_19F0D7F90@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = Bool.init(_partiallyFrom:)(a1);
  *a2 = result & 1;
  return result;
}

uint64_t Array<A>.init(_partiallyFrom:)(void *a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = sub_19F1DBAFC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v2 = sub_19F1DD89C();
  sub_19F0D75E4(0xD000000000000027, 0x800000019F269EF0, v2, (uint64_t)v8);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD87C();
  __swift_project_boxed_opaque_existential_1(v6, v7);
  sub_19F1DD31C();
  if ((v3 & 1) == 0)
  {
    sub_19F1DC27C();
    sub_19F1DC1AC();
  }
  __swift_project_boxed_opaque_existential_1(v6, v7);
  while ((sub_19F1DD33C() & 1) == 0)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_19F1DD32C();
    sub_19F1DC27C();
    sub_19F1DC23C();
    __swift_project_boxed_opaque_existential_1(v6, v7);
  }
  sub_19EEBD664((uint64_t)v8, qword_1E946D938);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  uint64_t v4 = v9;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v4;
}

unint64_t sub_19F0D83AC()
{
  unint64_t result = qword_1E94745E0;
  if (!qword_1E94745E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94745E0);
  }
  return result;
}

uint64_t sub_19F0D8400()
{
  return 0;
}

uint64_t sub_19F0D8498()
{
  return sub_19F0D8400();
}

uint64_t sub_19F0D84A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Array<A>.init(_partiallyFrom:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_19F0D84D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = Dictionary<>.init(_partiallyFrom:)(a1, *(void *)(a2 + 24), *(void *)(a3 - 8));
  *a4 = result;
  return result;
}

uint64_t dispatch thunk of _DiscardOnErrorDecodable.init(_partiallyFrom:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_19F0D8514(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474618);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EE2D850();
  sub_19F1DD8FC();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E40);
  sub_19EE2D7D4((unint64_t *)&qword_1E9472CB0, (void (*)(void))sub_19F02D364);
  sub_19F1DD2AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19F0D869C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1937335659 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_19F1DD44C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19F0D8724(uint64_t a1)
{
  unint64_t v2 = sub_19EE2D850();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F0D8760(uint64_t a1)
{
  unint64_t v2 = sub_19EE2D850();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F0D879C(void *a1)
{
  return sub_19F0D8514(a1, *v1);
}

uint64_t sub_19F0D87B8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

ValueMetadata *type metadata accessor for KeyFileContents()
{
  return &type metadata for KeyFileContents;
}

unint64_t sub_19F0D8804()
{
  unint64_t result = qword_1E9474620;
  if (!qword_1E9474620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474620);
  }
  return result;
}

uint64_t StateStore.performTransaction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 64))(1, a1, a2, a4, a3);
}

uint64_t StateStore.removeState(at:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  return (*(uint64_t (**)(uint64_t *, void, uint64_t))(a3 + 48))(&v4, 0, a2);
}

uint64_t dispatch thunk of StateStore.isConcurrent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of StateStore.onChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StateStore.currentState<A>(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of StateStore.updateState(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of StateStore.removeState(at:recursively:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of StateStore.removeAllState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of StateStore.performTransaction<A>(postingChanges:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

ValueMetadata *type metadata accessor for ClientEventIdFieldProvider()
{
  return &type metadata for ClientEventIdFieldProvider;
}

ValueMetadata *type metadata accessor for XPSamplingFieldsProvider()
{
  return &type metadata for XPSamplingFieldsProvider;
}

uint64_t sub_19F0D899C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JSBytesDeallocatorHolder()
{
  return self;
}

uint64_t sub_19F0D89F8(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    char v3 = *(void (**)(uint64_t))(a2 + 16);
    swift_retain();
    v3(v2);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19F0D8A64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(void)@<X3>, void *a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1 + *(void *)(*(void *)a1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v13, (uint64_t)v12, a2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_19EE94940((uint64_t)v12, (uint64_t)a5, a4);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a3);
      goto LABEL_5;
    case 2u:
    case 3u:
      *a5 = *v12;
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a3);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a5, 0, 1, v14);
      break;
    default:
      sub_19EEBD664((uint64_t)v12, a2);
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a3);
      uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a5, 1, 1, v15);
      break;
  }
  return result;
}

id sub_19F0D8C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  id result = *(id *)(a1 + 24);
  switch(*(unsigned char *)(a1 + 32))
  {
    case 1:
      *(void *)a2 = result;
      *(unsigned char *)(a2 + 8) = 0;
      id result = result;
      break;
    case 2:
    case 3:
      *(void *)a2 = result;
      *(unsigned char *)(a2 + 8) = 1;
      id result = result;
      break;
    default:
      *(void *)a2 = 0;
      *(unsigned char *)(a2 + 8) = -1;
      break;
  }
  return result;
}

uint64_t sub_19F0D8D08(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(v3);
  sub_19EEA8E28(v3[0], v3[1]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0D8DB4(uint64_t a1, void (*a2)(uint64_t, double))
{
  uint64_t v4 = sub_19F1DACDC();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1, v6);
  sub_19F1AE444((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_19F0D8ECC(uint64_t a1, void (*a2)(void *__return_ptr))
{
  a2(v3);
  sub_19F1B3374((uint64_t)v3);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
}

void sub_19F0D8F5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474638);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (id *)((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = swift_beginAccess();
  uint64_t v12 = *a1;
  if (!*a1) {
    goto LABEL_6;
  }
  MEMORY[0x1F4188790](v11);
  v18[-2] = sub_19F0DECCC;
  v18[-1] = v12;
  uint64_t v14 = v13 + 4;
  swift_retain();
  os_unfair_lock_lock(v14);
  sub_19F01CD58(v15);
  if (v2)
  {
    os_unfair_lock_unlock(v14);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v14);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474640);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v10, 1, v16) != 1)
    {
      sub_19EEC3ED8((uint64_t)v10, (uint64_t)v7, &qword_1E9474638);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_release();

        uint64_t v11 = sub_19EEBD664((uint64_t)v10, &qword_1E9474638);
LABEL_6:
        uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 88))(v11);
        swift_beginAccess();
        *a1 = v17;
        swift_retain();
        swift_release();
        return;
      }
      sub_19EEBD664((uint64_t)v7, &qword_1E9474640);
    }
    sub_19EEBD664((uint64_t)v10, &qword_1E9474638);
  }
}

void sub_19F0D91C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474648);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (id *)((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = swift_beginAccess();
  uint64_t v12 = *a1;
  if (!*a1) {
    goto LABEL_6;
  }
  MEMORY[0x1F4188790](v11);
  v18[-2] = sub_19F0DED9C;
  v18[-1] = v12;
  uint64_t v14 = v13 + 4;
  swift_retain();
  os_unfair_lock_lock(v14);
  sub_19F01CD58(v15);
  if (v2)
  {
    os_unfair_lock_unlock(v14);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v14);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474650);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v10, 1, v16) != 1)
    {
      sub_19EEC3ED8((uint64_t)v10, (uint64_t)v7, &qword_1E9474648);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_release();

        uint64_t v11 = sub_19EEBD664((uint64_t)v10, &qword_1E9474648);
LABEL_6:
        uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 88))(v11);
        swift_beginAccess();
        *a1 = v17;
        swift_retain();
        swift_release();
        return;
      }
      sub_19EEBD664((uint64_t)v7, &qword_1E9474650);
    }
    sub_19EEBD664((uint64_t)v10, &qword_1E9474648);
  }
}

void sub_19F0D942C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = swift_beginAccess();
  if (!*a1)
  {
LABEL_7:
    uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 88))(v5);
    swift_beginAccess();
    *a1 = v9;
    swift_retain();
    swift_release();
    return;
  }
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = v6 + 4;
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_19F01CD58(v8);
  if (v2)
  {
    os_unfair_lock_unlock(v7);
    __break(1u);
    return;
  }
  os_unfair_lock_unlock(v7);
  if (v11 != 255)
  {
    if ((v11 & 1) == 0)
    {
      sub_19F0DEC6C(v10, v11);
      return;
    }
    swift_release();
    sub_19F0DEC6C(v10, v11);
    goto LABEL_7;
  }
}

uint64_t JetpackLoader.jetpackBundlePipeline.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t JetpackLoader.sourceDataPipeline.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t JetpackLoader.sourcePipeline.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

uint64_t JetpackLoader.init(jetpackURL:keyURL:bundleOutputURL:artifactStoreURL:bag:urlSession:urlEncoder:process:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X7>, uint64_t *a9@<X8>)
{
  v44 = a7;
  v45 = a8;
  v42 = a9;
  v43 = a6;
  v46 = a4;
  v47 = a3;
  uint64_t v12 = sub_19F1DB34C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  v41 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  v40 = (char *)&v36 - v16;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v36 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v20 - 8);
  long long v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = *a5;
  uint64_t v48 = a2;
  sub_19EEC3ED8(a2, (uint64_t)v22, (uint64_t *)&unk_1EB392E50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v22, 1, v12) == 1)
  {
    unint64_t v38 = 0;
    Swift::String v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v22, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473A10);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471F18);
    uint64_t v25 = *(unsigned __int8 *)(*(void *)(v24 - 8) + 80);
    char v37 = a1;
    uint64_t v26 = (v25 + 32) & ~v25;
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_19F24EAD0;
    long long v28 = (void *)(v27 + v26);
    long long v29 = (char *)v28 + *(int *)(v24 + 48);
    *long long v28 = 0;
    Swift::String v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v23(v29, v19, v12);
    unint64_t v38 = sub_19EFC1420(v27);
    swift_setDeallocating();
    a1 = v37;
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
  v23(v19, a1, v12);
  long long v30 = v40;
  long long v31 = v47;
  v23(v40, v47, v12);
  char v32 = v41;
  uint64_t v33 = v46;
  v23(v41, v46, v12);
  uint64_t v49 = v39;
  JetpackLoader.init(jetpackURL:keyURLs:bundleOutputURL:artifactStoreURL:bag:urlSession:urlEncoder:process:)((uint64_t)v19, v38, v30, v32, &v49, v43, v44, v45, v42);
  long long v34 = *(void (**)(char *, uint64_t))(v13 + 8);
  v34(v33, v12);
  v34(v31, v12);
  sub_19EEBD664(v48, (uint64_t *)&unk_1EB392E50);
  return ((uint64_t (*)(char *, uint64_t))v34)(a1, v12);
}

uint64_t JetpackLoader.init(jetpackURL:keyURLs:bundleOutputURL:artifactStoreURL:bag:urlSession:urlEncoder:process:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X7>, uint64_t *a9@<X8>)
{
  id v71 = a6;
  v86 = a4;
  v84 = a3;
  v81 = a9;
  uint64_t v82 = a2;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v13 - 8);
  v80 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v69);
  v70 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_19F1DB34C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  v79 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v78 = (char *)&v67 - v20;
  MEMORY[0x1F4188790](v21);
  v77 = (char *)&v67 - v22;
  MEMORY[0x1F4188790](v23);
  v76 = (char *)&v67 - v24;
  MEMORY[0x1F4188790](v25);
  v75 = (char *)&v67 - v26;
  MEMORY[0x1F4188790](v27);
  long long v29 = (char *)&v67 - v28;
  double v31 = MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v67 - v32;
  uint64_t v34 = *a5;
  long long v35 = *(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16);
  uint64_t v83 = a1;
  v35((char *)&v67 - v32, a1, v16, v31);
  uint64_t v36 = a7;
  uint64_t v37 = v17;
  unint64_t v38 = (void (**)(char *, uint64_t))(v17 + 8);
  id v72 = a8;
  if (v36)
  {
    id v39 = v36;
    swift_unknownObjectRelease();
    v40 = *v38;
    uint64_t v74 = (unint64_t)v38 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v40(v33, v16);
    id v73 = v39;
    v41 = v39;
  }
  else
  {
    v87[0] = v34;
    id v73 = 0;
    id v42 = sub_19F0DD904((uint64_t)v33, v87, (uint64_t)a8);
    v43 = *v38;
    uint64_t v74 = (unint64_t)v38 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v44 = v33;
    v41 = v42;
    v43(v44, v16);
    swift_unknownObjectRelease();
  }
  v45 = v29;
  ((void (*)(char *, uint64_t, uint64_t))v35)(v29, v83, v16);
  uint64_t v85 = v37;
  v68 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  uint64_t v46 = (uint64_t)v70;
  v68(v70, v29, v16);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921F8);
  v47 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v48 = swift_allocObject();
  *(_DWORD *)(v48 + 16) = 0;
  v47[2] = v48;
  sub_19EEBDC4C(v46, (uint64_t)v47 + *(void *)(*v47 + 96), &qword_1EB3921D8);
  ((void (*)(char *, char *, uint64_t))v35)(v29, v86, v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946FC70);
  swift_allocObject();
  uint64_t v49 = (char *)v71;
  v70 = v49;
  id v50 = v41;
  id v71 = v50;
  uint64_t v51 = sub_19EE992B8(v50);
  type metadata accessor for RemoteJetpackFetcher();
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v49;
  *(void *)(v52 + 24) = v50;
  *(void *)(v52 + 32) = 0;
  *(void *)(v52 + 40) = 0;
  *(void *)(v52 + 48) = 4;
  *(unsigned char *)(v52 + 56) = 1;
  *(void *)(v52 + 64) = v51;
  v68((char *)(v52 + OBJC_IVAR____TtC9JetEngine20RemoteJetpackFetcher_artifactStoreURL), v45, v16);
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = sub_19F0DDBA4;
  *(void *)(v53 + 24) = v52;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAC8);
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F7D8);
  v55 = (void *)swift_allocObject();
  v55[2] = v54;
  v55[3] = sub_19EFF8954;
  v55[4] = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F848);
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v55;
  v57 = v45;
  v67 = v45;
  ((void (*)(char *, char *, uint64_t))v35)(v45, v84, v16);
  v58 = v75;
  ((void (*)(char *, char *, uint64_t))v35)(v75, v86, v16);
  v59 = v76;
  ((void (*)(char *, char *, uint64_t))v35)(v76, v57, v16);
  v60 = v77;
  ((void (*)(char *, char *, uint64_t))v35)(v77, v58, v16);
  v87[0] = v56;
  v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56);
  v85 += 56;
  uint64_t v62 = (uint64_t)v80;
  v61(v80, 1, 1, v16);
  uint64_t v63 = (uint64_t)v78;
  ((void (*)(char *, char *, uint64_t))v35)(v78, v59, v16);
  uint64_t v64 = (uint64_t)v79;
  ((void (*)(char *, char *, uint64_t))v35)(v79, v60, v16);
  swift_retain();
  sub_19F0DA858(v87, v62, v82, v63, v64, 0, v81);
  v65 = *(void (**)(char *, uint64_t))(v85 - 48);
  v65(v60, v16);
  v65(v59, v16);
  v65(v58, v16);
  v65(v67, v16);
  swift_release();

  v65(v86, v16);
  v65(v84, v16);
  return ((uint64_t (*)(uint64_t, uint64_t))v65)(v83, v16);
}

uint64_t JetpackLoader.init(filePipeline:keyURLs:bundleOutputURL:artifactStoreURL:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v30 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v7 - 8);
  long long v29 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v28 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v28 - v17;
  double v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v28 - v21;
  uint64_t v23 = *a1;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  v24((char *)&v28 - v21, v32, v9, v20);
  ((void (*)(char *, char *, uint64_t))v24)(v18, a4, v9);
  uint64_t v33 = v23;
  uint64_t v25 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v29, 1, 1, v9);
  ((void (*)(char *, char *, uint64_t))v24)(v15, v22, v9);
  ((void (*)(char *, char *, uint64_t))v24)(v12, v18, v9);
  sub_19F0DA858(&v33, v25, v31, (uint64_t)v15, (uint64_t)v12, 0, v30);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v18, v9);
  v26(v22, v9);
  v26(a4, v9);
  return ((uint64_t (*)(uint64_t, uint64_t))v26)(v32, v9);
}

uint64_t JetpackLoader.init(jetpackURL:keyURLs:bundleOutputURL:artifactStoreURL:bag:urlSession:urlEncoder:process:verifySignature:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X7>, uint64_t *a9@<X8>, unsigned __int8 a10)
{
  uint64_t v70 = a3;
  id v71 = a8;
  uint64_t v73 = a4;
  v68 = a9;
  uint64_t v69 = a2;
  int v67 = a10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v14 - 8);
  v66 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v61 = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v61);
  uint64_t v62 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_19F1DB34C();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  v65 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v60 - v21;
  double v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v60 - v25;
  uint64_t v27 = *a5;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16);
  uint64_t v72 = a1;
  v28((char *)&v60 - v25, a1, v17, v24);
  long long v29 = a7;
  uint64_t v30 = v18;
  uint64_t v31 = (void (**)(char *, uint64_t))(v18 + 8);
  if (v29)
  {
    uint64_t v32 = v22;
    uint64_t v33 = a6;
    uint64_t v34 = v28;
    uint64_t v35 = v30;
    id v36 = v29;
    swift_unknownObjectRelease();
    uint64_t v37 = *v31;
    uint64_t v64 = (unint64_t)v31 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v37(v26, v17);
    id v63 = v36;
    id v38 = v36;
    uint64_t v30 = v35;
    uint64_t v28 = v34;
    a6 = v33;
    uint64_t v22 = v32;
    id v39 = v38;
  }
  else
  {
    uint64_t v75 = v27;
    id v63 = 0;
    id v39 = sub_19F0DD904((uint64_t)v26, &v75, (uint64_t)v71);
    v40 = *v31;
    uint64_t v64 = (unint64_t)v31 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v40(v26, v17);
    swift_unknownObjectRelease();
  }
  ((void (*)(char *, uint64_t, uint64_t))v28)(v22, v72, v17);
  uint64_t v74 = v30;
  v60 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  uint64_t v41 = (uint64_t)v62;
  v60(v62, v22, v17);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921F8);
  id v42 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v43 = swift_allocObject();
  *(_DWORD *)(v43 + 16) = 0;
  v42[2] = v43;
  sub_19EEBDC4C(v41, (uint64_t)v42 + *(void *)(*v42 + 96), &qword_1EB3921D8);
  ((void (*)(char *, uint64_t, uint64_t))v28)(v22, v73, v17);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946FC70);
  swift_allocObject();
  id v44 = a6;
  id v61 = v44;
  v45 = (char *)v39;
  uint64_t v62 = v45;
  uint64_t v46 = sub_19EE992B8(v45);
  type metadata accessor for RemoteJetpackFetcher();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v44;
  *(void *)(v47 + 24) = v45;
  *(void *)(v47 + 32) = 0;
  *(void *)(v47 + 40) = 0;
  *(void *)(v47 + 48) = 4;
  *(unsigned char *)(v47 + 56) = 1;
  *(void *)(v47 + 64) = v46;
  v60((char *)(v47 + OBJC_IVAR____TtC9JetEngine20RemoteJetpackFetcher_artifactStoreURL), v22, v17);
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = sub_19F0DDBA4;
  *(void *)(v48 + 24) = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAC8);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F7D8);
  id v50 = (void *)swift_allocObject();
  v50[2] = v49;
  v50[3] = sub_19F0DEF80;
  v50[4] = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F848);
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v50;
  uint64_t v75 = v51;
  uint64_t v52 = (uint64_t)v66;
  uint64_t v53 = v72;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v66, v72, v17);
  uint64_t v54 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56);
  v74 += 56;
  v54(v52, 0, 1, v17);
  uint64_t v55 = v70;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v22, v70, v17);
  uint64_t v56 = (uint64_t)v65;
  uint64_t v57 = v73;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v65, v73, v17);
  swift_retain();
  sub_19F0DA858(&v75, v52, v69, (uint64_t)v22, v56, v67 & 1, v68);
  swift_release();

  v58 = *(void (**)(uint64_t, uint64_t))(v74 - 48);
  v58(v57, v17);
  v58(v55, v17);
  return ((uint64_t (*)(uint64_t, uint64_t))v58)(v53, v17);
}

uint64_t sub_19F0DA858@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t *a7@<X8>)
{
  int v88 = a6;
  uint64_t v100 = a5;
  uint64_t v101 = a4;
  uint64_t v86 = a3;
  uint64_t v87 = a2;
  v90 = a7;
  uint64_t v10 = sub_19F1DBDEC();
  uint64_t v98 = *(void *)(v10 - 8);
  uint64_t v99 = v10;
  uint64_t v97 = *(void *)(v98 + 64);
  MEMORY[0x1F4188790](v10);
  v96 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v95 = (char *)&v83 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  uint64_t v92 = *(void *)(v14 - 8);
  uint64_t v91 = *(void *)(v92 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v89 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_19F1DBA0C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_19F1DB34C();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v85 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v83 - v24;
  uint64_t v84 = *a1;
  uint64_t v26 = type metadata accessor for JetpackLoader();
  sub_19EEC3ED8(a2, (uint64_t)a7 + *(int *)(v26 + 28), (uint64_t *)&unk_1EB392E50);
  uint64_t v94 = v21;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v28 = v100;
  v27(v25, v100, v20);
  sub_19EF8A5D4((unint64_t *)&qword_1EB392868, MEMORY[0x1E4F276F0]);
  sub_19F1DCC8C();
  sub_19EEA5F34();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4FBCB48], v16);
  uint64_t v29 = sub_19F1DC8BC();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_19EE77E34((uint64_t)v104, (uint64_t)v102);
  type metadata accessor for PersistentPipelineBackoff();
  uint64_t v30 = swift_allocObject();
  long long v31 = v102[1];
  *(_OWORD *)(v30 + 16) = v102[0];
  *(_OWORD *)(v30 + 32) = v31;
  *(void *)(v30 + 48) = v103;
  *(void *)(v30 + 56) = sub_19EF88B14;
  *(void *)(v30 + 64) = 0;
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v30;
  v32[3] = &off_1EF145828;
  void v32[4] = v29;
  sub_19EE7760C((uint64_t)v104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F820);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v84;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F7D8);
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v33;
  v34[3] = sub_19F0DE6D0;
  v34[4] = v32;
  v27(v25, v101, v20);
  uint64_t v35 = v85;
  uint64_t v93 = v20;
  v27(v85, v28, v20);
  type metadata accessor for UnpackJetpackPhase();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v86;
  uint64_t v37 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v37(v36 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_bundleOutputURL, v25, v20);
  v37(v36 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_artifactStoreURL, v35, v20);
  *(unsigned char *)(v36 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_verifySignature) = v88;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_19F0DE6E0;
  *(void *)(v38 + 24) = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F848);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F7C8);
  v40 = (void *)swift_allocObject();
  v40[2] = v39;
  v40[3] = sub_19F0C14C4;
  v40[4] = v38;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = 0;
  id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v42;
  *(void *)(v43 + 24) = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F838);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F7F0);
  v45 = (void *)swift_allocObject();
  v45[2] = v44;
  v45[3] = sub_19F0DE760;
  v45[4] = v43;
  uint64_t v46 = v87;
  uint64_t v47 = v89;
  sub_19EEC3ED8(v87, v89, (uint64_t *)&unk_1EB392E50);
  unint64_t v48 = (*(unsigned __int8 *)(v92 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
  uint64_t v49 = swift_allocObject();
  sub_19EEBDC4C(v47, v49 + v48, (uint64_t *)&unk_1EB392E50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F860);
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v45;
  uint64_t v51 = (void *)swift_allocObject();
  v51[2] = v50;
  v51[3] = sub_19F0DE8F0;
  v51[4] = v49;
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v51;
  uint64_t v53 = v90;
  uint64_t *v90 = v52;
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_19F25B660;
  *(void *)(v54 + 32) = 0;
  *(void *)(v54 + 40) = 0;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_19F074494;
  *(void *)(v55 + 24) = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F830);
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v52;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F7E8);
  uint64_t v57 = (void *)swift_allocObject();
  v57[2] = v56;
  v57[3] = sub_19F074564;
  v57[4] = v55;
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = sub_19F1CD228;
  *(void *)(v58 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F858);
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = v57;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F7D0);
  v60 = (void *)swift_allocObject();
  v60[2] = v59;
  v60[3] = sub_19F0DE9AC;
  v60[4] = v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F840);
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = v60;
  v53[1] = v61;
  uint64_t v62 = v53;
  swift_retain();
  swift_retain();
  id v63 = v95;
  sub_19F1DBDCC();
  uint64_t v64 = v98;
  uint64_t v65 = v99;
  v66 = v96;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v96, v63, v99);
  uint64_t v67 = v64;
  unint64_t v68 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  uint64_t v69 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v67 + 32))(v69 + v68, v66, v65);
  uint64_t v70 = swift_allocObject();
  *(void *)(v70 + 16) = sub_19F06FE3C;
  *(void *)(v70 + 24) = v69;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v63, v65);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F828);
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = v61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F7E0);
  uint64_t v72 = (void *)swift_allocObject();
  v72[2] = v71;
  v72[3] = sub_19F0A8E54;
  v72[4] = v70;
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = sub_19F06FEDC;
  *(void *)(v73 + 24) = 0;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_19F06FEE0;
  *(void *)(v74 + 24) = v73;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F850);
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = v72;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F800);
  v76 = (void *)swift_allocObject();
  v76[2] = v75;
  v76[3] = sub_19EF9633C;
  v76[4] = v74;
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = sub_19F0DC38C;
  *(void *)(v77 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F870);
  uint64_t v78 = swift_allocObject();
  *(void *)(v78 + 16) = v76;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F7F8);
  v79 = (void *)swift_allocObject();
  v79[2] = v78;
  v79[3] = sub_19F0DE9CC;
  v79[4] = v77;
  v80 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
  swift_retain();
  uint64_t v81 = v93;
  v80(v100, v93);
  v80(v101, v81);
  sub_19EEBD664(v46, (uint64_t *)&unk_1EB392E50);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F868);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v79;
  v62[2] = result;
  return result;
}

uint64_t JetpackLoader.init(fileURL:keyURLs:bundleOutputURL:artifactStoreURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v44 = a4;
  v45 = a3;
  id v42 = a5;
  uint64_t v43 = a2;
  uint64_t v46 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DB34C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  v40 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v39 = (char *)&v38 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v38 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v38 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v38 - v22;
  double v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v38 - v26;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v28((char *)&v38 - v26, v46, v10, v25);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v27, v10);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921F8);
  uint64_t v29 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v30 = swift_allocObject();
  *(_DWORD *)(v30 + 16) = 0;
  v29[2] = v30;
  sub_19EEBDC4C((uint64_t)v9, (uint64_t)v29 + *(void *)(*v29 + 96), &qword_1EB3921D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAC8);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v29;
  ((void (*)(char *, char *, uint64_t))v28)(v27, v45, v10);
  uint64_t v38 = v23;
  ((void (*)(char *, char *, uint64_t))v28)(v23, v44, v10);
  ((void (*)(char *, char *, uint64_t))v28)(v20, v27, v10);
  ((void (*)(char *, char *, uint64_t))v28)(v17, v23, v10);
  uint64_t v47 = v31;
  uint64_t v32 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v41, 1, 1, v10);
  uint64_t v33 = (uint64_t)v39;
  uint64_t v34 = v20;
  ((void (*)(char *, char *, uint64_t))v28)(v39, v20, v10);
  uint64_t v35 = (uint64_t)v40;
  ((void (*)(char *, char *, uint64_t))v28)(v40, v17, v10);
  sub_19F0DA858(&v47, v32, v43, v33, v35, 0, v42);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v11 + 8);
  v36(v17, v10);
  v36(v34, v10);
  v36(v38, v10);
  v36(v27, v10);
  v36(v44, v10);
  v36(v45, v10);
  return ((uint64_t (*)(uint64_t, uint64_t))v36)(v46, v10);
}

uint64_t JetpackLoader.init(fileURL:keyURLs:bundleOutputURL:artifactStoreURL:verifySignature:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  int v41 = a5;
  id v42 = a3;
  uint64_t v39 = a6;
  uint64_t v40 = a2;
  uint64_t v37 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v38 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_19F1DB34C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v36 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v35 = (char *)&v34 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v34 - v19;
  double v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v34 - v23;
  double v25 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v25((char *)&v34 - v23, a1, v13, v22);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v24, v13);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921F8);
  uint64_t v26 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v27 = swift_allocObject();
  *(_DWORD *)(v27 + 16) = 0;
  v26[2] = v27;
  sub_19EEBDC4C((uint64_t)v12, (uint64_t)v26 + *(void *)(*v26 + 96), &qword_1EB3921D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAC8);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v26;
  ((void (*)(char *, char *, uint64_t))v25)(v24, v42, v13);
  ((void (*)(char *, char *, uint64_t))v25)(v20, a4, v13);
  uint64_t v43 = v28;
  uint64_t v29 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v38, 1, 1, v13);
  uint64_t v30 = (uint64_t)v35;
  ((void (*)(char *, char *, uint64_t))v25)(v35, v24, v13);
  uint64_t v31 = (uint64_t)v36;
  ((void (*)(char *, char *, uint64_t))v25)(v36, v20, v13);
  sub_19F0DA858(&v43, v29, v40, v30, v31, v41, v39);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v14 + 8);
  v32(v20, v13);
  v32(v24, v13);
  v32(a4, v13);
  v32(v42, v13);
  return ((uint64_t (*)(uint64_t, uint64_t))v32)(v37, v13);
}

uint64_t JetpackLoader.init(filePipeline:keyURLs:bundleOutputURL:artifactStoreURL:verifySignature:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  int v26 = a5;
  uint64_t v25 = a2;
  uint64_t v10 = sub_19F1DB34C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  double v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v11 + 56))(v20, 1, 1, v10, v18);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v21(v16, a3, v10);
  v21(v13, a4, v10);
  sub_19F0DA858(&v27, (uint64_t)v20, v25, (uint64_t)v16, (uint64_t)v13, v26, a6);
  double v22 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v22(a4, v10);
  return ((uint64_t (*)(uint64_t, uint64_t))v22)(a3, v10);
}

uint64_t sub_19F0DBDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = (*(uint64_t (**)(double))(**(void **)a1 + 88))(v12);
  sub_19EEC3ED8(a2, (uint64_t)v6, (uint64_t *)&unk_1EB392E50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_19EEBD664((uint64_t)v6, (uint64_t *)&unk_1EB392E50);
  }
  else
  {
    double v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v22(v14, v6, v7);
    uint64_t v25 = v15;
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v16(v10, v14, v7);
    unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = v8;
    double v18 = (void (*)(unint64_t, char *, uint64_t))v22;
    v22((char *)(v23 + v17), v10, v7);
    v16(v10, v14, v7);
    uint64_t v19 = v25;
    uint64_t v20 = swift_allocObject();
    v18(v20 + v17, v10, v7);
    uint64_t v29 = &type metadata for SyncTaskScheduler;
    uint64_t v30 = &protocol witness table for SyncTaskScheduler;
    v26[0] = sub_19F0DEAA4;
    v26[1] = v23;
    v26[2] = sub_19F0DEBC4;
    v26[3] = v20;
    sub_19EEC4154((uint64_t)v28, (uint64_t)v27);
    v27[40] = 0;
    swift_retain();
    swift_retain();
    uint64_t v15 = v19;
    sub_19EF56944((uint64_t)v26);
    sub_19EEBD664((uint64_t)v26, &qword_1E946E3E0);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  }
  return v15;
}

uint64_t sub_19F0DC0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1E946DB58 != -1) {
    uint64_t v4 = swift_once();
  }
  uint64_t v7 = *(os_unfair_lock_s **)(qword_1E9498948 + 16);
  MEMORY[0x1F4188790](v4);
  *(void *)&v9[-16] = a2;
  swift_retain();
  os_unfair_lock_lock(v7 + 6);
  sub_19F0DEC34((uint64_t)v6);
  os_unfair_lock_unlock(v7 + 6);
  swift_release();
  return sub_19EEBD664((uint64_t)v6, (uint64_t *)&unk_1EB392E50);
}

uint64_t sub_19F0DC21C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C780);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1E946DB58 != -1) {
    uint64_t v4 = swift_once();
  }
  uint64_t v7 = *(os_unfair_lock_s **)(qword_1E9498948 + 16);
  MEMORY[0x1F4188790](v4);
  *(void *)&v11[-16] = a2;
  swift_retain();
  os_unfair_lock_lock(v7 + 6);
  sub_19EF8A558(v6);
  os_unfair_lock_unlock(v7 + 6);
  swift_release();
  uint64_t v8 = &v6[*(int *)(v3 + 48)];
  uint64_t v9 = sub_19F1DB34C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
}

uint64_t sub_19F0DC38C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = type metadata accessor for JSSource();
  a2[4] = (uint64_t)&protocol witness table for JSSource;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a2);
  return sub_19F0DEA28(a1, (uint64_t)boxed_opaque_existential_2Tm);
}

uint64_t JetpackLoader.fetchJetpackBundle()()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)v0 + 88);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t JetpackLoader.fetchSource()()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + 16) + 88);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_19F0DC4B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v32 = a4;
  uint64_t v33 = sub_19F1DB9FC();
  uint64_t v36 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DBA3C();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DBA5C();
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v28 - v16;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946EFF0);
  uint64_t v18 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  *(void *)(v18 + 16) = v19;
  *(void *)(v18 + 24) = v20;
  *(void *)(v18 + 32) = 0;
  *(unsigned char *)(v18 + 40) = 0;
  uint64_t ObjectType = swift_getObjectType();
  double v22 = (*(double (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_19F1DBA4C();
  MEMORY[0x19F3C5D70](v14, v22);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v14, v11);
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v32;
  v23[2] = v31;
  v23[3] = a2;
  v23[4] = a3;
  v23[5] = v18;
  v23[6] = v24;
  aBlock[4] = sub_19F0DED10;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_66;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v24;
  sub_19F1DBA1C();
  uint64_t v37 = v20;
  sub_19EF8A5D4(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  uint64_t v26 = v33;
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B40](v17, v10, v7, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v35);
  v29(v17, v30);
  swift_release();
  return v18;
}

void *sub_19F0DC8CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v36 = a4;
  uint64_t v38 = sub_19F1DB9FC();
  uint64_t v41 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DBA3C();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DBA5C();
  uint64_t v34 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470FB0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (uint64_t *)((char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v19 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736F0);
  uint64_t v20 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 16) = 0;
  v20[2] = v21;
  sub_19EEBDC4C((uint64_t)v19, (uint64_t)v20 + *(void *)(*v20 + 96), (uint64_t *)&unk_1E9470FB0);
  uint64_t ObjectType = swift_getObjectType();
  double v23 = (*(double (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_19F1DBA4C();
  MEMORY[0x19F3C5D70](v13, v23);
  uint64_t v24 = v11 + 8;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v33 = v24;
  v25(v13, v10);
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a1;
  v26[3] = a2;
  void v26[4] = a3;
  v26[5] = v20;
  uint64_t v27 = v36;
  v26[6] = v36;
  aBlock[4] = sub_19F0DEDE0;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_75;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v27;
  uint64_t v29 = v35;
  sub_19F1DBA1C();
  uint64_t v42 = MEMORY[0x1E4FBC860];
  sub_19EF8A5D4(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  uint64_t v30 = v37;
  uint64_t v31 = v38;
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B40](v16, v29, v30, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
  v25(v16, v34);
  swift_release();
  return v20;
}

void *sub_19F0DCD84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v36 = a4;
  uint64_t v38 = sub_19F1DB9FC();
  uint64_t v41 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DBA3C();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DBA5C();
  uint64_t v34 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (uint64_t *)((char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v19 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921F8);
  uint64_t v20 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 16) = 0;
  v20[2] = v21;
  sub_19EEBDC4C((uint64_t)v19, (uint64_t)v20 + *(void *)(*v20 + 96), &qword_1EB3921D8);
  uint64_t ObjectType = swift_getObjectType();
  double v23 = (*(double (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_19F1DBA4C();
  MEMORY[0x19F3C5D70](v13, v23);
  uint64_t v24 = v11 + 8;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v33 = v24;
  v25(v13, v10);
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a1;
  v26[3] = a2;
  void v26[4] = a3;
  v26[5] = v20;
  uint64_t v27 = v36;
  v26[6] = v36;
  aBlock[4] = sub_19F0DEC94;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_26;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v27;
  uint64_t v29 = v35;
  sub_19F1DBA1C();
  uint64_t v42 = MEMORY[0x1E4FBC860];
  sub_19EF8A5D4(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  uint64_t v30 = v37;
  uint64_t v31 = v38;
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B40](v16, v29, v30, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
  v25(v16, v34);
  swift_release();
  return v20;
}

uint64_t sub_19F0DD23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  (*(void (**)(void))(*(void *)a1 + 88))();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  v14[3] = sub_19EEA5F34();
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = a5;
  v12[0] = sub_19F0DEEE4;
  v12[1] = v9;
  v12[2] = sub_19F0DEF4C;
  v12[3] = a4;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_unknownObjectRetain();
  id v10 = a5;
  swift_retain();
  sub_19EE65B6C((uint64_t)v12);
  sub_19EEBD664((uint64_t)v12, qword_1EB3918C0);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t sub_19F0DD378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  (*(void (**)(void))(*(void *)a1 + 88))();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  v14[3] = sub_19EEA5F34();
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = a5;
  v12[0] = sub_19F0DED2C;
  v12[1] = v9;
  v12[2] = sub_19F0DED98;
  v12[3] = a4;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_unknownObjectRetain();
  id v10 = a5;
  swift_retain();
  sub_19EF56720((uint64_t)v12);
  sub_19EEBD664((uint64_t)v12, &qword_1E9473830);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t sub_19F0DD4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  (*(void (**)(void))(*(void *)a1 + 88))();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  v14[3] = sub_19EEA5F34();
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = a5;
  v12[0] = sub_19F0DEE14;
  v12[1] = v9;
  v12[2] = sub_19F0DEE9C;
  v12[3] = a4;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_unknownObjectRetain();
  id v10 = a5;
  swift_retain();
  sub_19EF56448((uint64_t)v12);
  sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1E9476570);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t sub_19F0DD5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  (*(void (**)(void))(*(void *)a1 + 88))();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  v14[3] = sub_19EEA5F34();
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = a5;
  v12[0] = sub_19F0DECB0;
  v12[1] = v9;
  v12[2] = sub_19F0DECC8;
  v12[3] = a4;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_unknownObjectRetain();
  id v10 = a5;
  swift_retain();
  sub_19EF53B38((uint64_t)v12);
  sub_19EEBD664((uint64_t)v12, &qword_1E946FC00);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t sub_19F0DD72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(**(void **)a1 + 88))();
  uint64_t v5 = sub_19F0DD7A4(a2, a3);
  swift_release();
  return v5;
}

uint64_t sub_19F0DD7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = &type metadata for SyncTaskScheduler;
  uint64_t v12 = &protocol witness table for SyncTaskScheduler;
  v8[0] = MEMORY[0x1E4FBC860];
  v9[8] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C7A8);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(void *)(v4 + 16) = v5;
  sub_19EEBDC4C((uint64_t)v8, v4 + 24, (uint64_t *)&unk_1E946C790);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  void v6[3] = a2;
  v6[4] = v4;
  v8[0] = sub_19F0DEA14;
  v8[1] = v6;
  v8[2] = sub_19F0DEA20;
  v8[3] = v4;
  sub_19EEC4154((uint64_t)v10, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF541E8((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, &qword_1E9470FA8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v4;
}

id sub_19F0DD904(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE68]), sel_initWithBag_, *a2);
  objc_msgSend(v10, sel_setIncludeClientVersions_, 0);
  objc_msgSend(v10, sel_setAnisetteType_, 0);
  objc_msgSend(v10, sel_setMescalType_, 0);
  objc_msgSend(v10, sel_setAccount_, 0);
  objc_msgSend(v10, sel_setRequestEncoding_, 1);
  objc_msgSend(v10, sel_setDialogOptions_, 1);
  objc_msgSend(v10, sel_setClientInfo_, a3);
  objc_msgSend(v10, sel_setDisableResponseDecoding_, 1);
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  uint64_t v11 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v12 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v12);
  sub_19EEC4E5C(v11, &v18);
  os_unfair_lock_unlock(v12);
  int v13 = v18;
  swift_release();
  if (v13 == 2) {
    int has_internal_content = os_variant_has_internal_content();
  }
  else {
    int has_internal_content = v13 & 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (has_internal_content)
  {
    char v15 = sub_19F1DB1CC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v15) {
      objc_msgSend(v10, sel_setUrlKnownToBeTrusted_, 1);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v10;
}

void *sub_19F0DDBA4(uint64_t a1)
{
  return sub_19EFF7E74(a1);
}

uint64_t sub_19F0DDBAC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t *initializeBufferWithCopyOfBuffer for JetpackLoader(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_19F1DB34C();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t destroy for JetpackLoader(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for JetpackLoader(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_19F1DB34C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for JetpackLoader(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for JetpackLoader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for JetpackLoader(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetpackLoader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F0DE430);
}

uint64_t sub_19F0DE430(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for JetpackLoader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F0DE4F8);
}

void *sub_19F0DE4F8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for JetpackLoader()
{
  uint64_t result = qword_1E946F7B8;
  if (!qword_1E946F7B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_19F0DE5F0()
{
  sub_19EE23F8C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_19F0DE690()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void *sub_19F0DE6D0(uint64_t *a1)
{
  return sub_19F0DCD84(*a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_19F0DE6E0()
{
  return sub_19F0C12A4();
}

uint64_t sub_19F0DE6E8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F0DE720()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0DE760(uint64_t *a1)
{
  int v3 = *(void **)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)(v2 + 16);
  objc_msgSend(v3, sel_lock);
  sub_19F0D942C(v5, v4);
  uint64_t v7 = v6;
  objc_msgSend(v3, sel_unlock);
  return v7;
}

uint64_t sub_19F0DE7D0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_19F1DB34C();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_19F0DE8F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_19F0DBDAC(a1, v4);
}

uint64_t sub_19F0DE964()
{
  if (*(void *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F0DE9AC(uint64_t a1)
{
  return sub_19F1CD2BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19F0DE9B4()
{
  return objectdestroy_32Tm_0(MEMORY[0x1E4F27EC8]);
}

uint64_t sub_19F0DE9CC(uint64_t a1)
{
  return sub_19F0DD72C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19F0DE9D4()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0DEA14(uint64_t a1)
{
  return sub_19F0D8ECC(a1, *(void (**)(void *__return_ptr))(v1 + 16));
}

void sub_19F0DEA20(void *a1)
{
}

uint64_t sub_19F0DEA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F0DEA8C()
{
  return objectdestroy_32Tm_0(MEMORY[0x1E4F276F0]);
}

uint64_t sub_19F0DEAA4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB34C() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_19F0DC0EC(a1, v4);
}

uint64_t sub_19F0DEB14()
{
  return objectdestroy_32Tm_0(MEMORY[0x1E4F276F0]);
}

uint64_t objectdestroy_32Tm_0(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_19F0DEBC4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB34C() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_19F0DC21C(a1, v4);
}

uint64_t sub_19F0DEC34@<X0>(uint64_t a1@<X8>)
{
  return sub_19EF89244(*(void *)(v1 + 16), a1);
}

id sub_19F0DEC50@<X0>(uint64_t a1@<X8>)
{
  return sub_19F0D8C50(v1, a1);
}

void sub_19F0DEC6C(id a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_19F0DEC84(a1);
  }
}

void sub_19F0DEC84(id a1)
{
}

uint64_t sub_19F0DEC94()
{
  return sub_19F0DEDF8((uint64_t (*)(void, void, void, void, void))sub_19F0DD5F0);
}

uint64_t sub_19F0DECB0(uint64_t a1)
{
  return sub_19F0DEE2C(a1, (uint64_t (*)(uint64_t))sub_19F1B068C);
}

uint64_t sub_19F0DECCC@<X0>(void *a1@<X8>)
{
  return sub_19F0D8A64(v1, &qword_1E946C7A0, &qword_1E9474640, (uint64_t (*)(void))type metadata accessor for JSSource, a1);
}

uint64_t sub_19F0DED10()
{
  return sub_19F0DEDF8((uint64_t (*)(void, void, void, void, void))sub_19F0DD378);
}

void sub_19F0DED2C(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
  sub_19F1AE94C(v3, v4);
}

uint64_t sub_19F0DED9C@<X0>(void *a1@<X8>)
{
  return sub_19F0D8A64(v1, (uint64_t *)&unk_1E9470FB0, &qword_1E9474650, (uint64_t (*)(void))type metadata accessor for JSPackageIndex, a1);
}

uint64_t sub_19F0DEDE0()
{
  return sub_19F0DEDF8((uint64_t (*)(void, void, void, void, void))sub_19F0DD4B4);
}

uint64_t sub_19F0DEDF8(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_19F0DEE14(uint64_t a1)
{
  return sub_19F0DEE2C(a1, (uint64_t (*)(uint64_t))sub_19F1B2684);
}

uint64_t sub_19F0DEE2C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5);
  return a2(a1);
}

uint64_t objectdestroy_59Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_19F0DEEE4(void **a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *a1;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
  sub_19F1AEBF4(v3);
}

void CapacityMetricsFieldsProvider.init()(void *a1@<X8>)
{
  *a1 = 0;
}

void CapacityMetricsFieldsProvider.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19F0DEF98(void *a1)
{
  return CapacityMetricsFieldsProvider.addMetricsFields(into:using:)(a1);
}

void CapacityMetricsFieldsProvider.init(device:)(void *a1@<X8>)
{
  *a1 = 0;
}

ValueMetadata *type metadata accessor for CapacityMetricsFieldsProvider()
{
  return &type metadata for CapacityMetricsFieldsProvider;
}

uint64_t _chain<A, B>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v16 + 16))(v15, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, a4);
  return _AsyncChainedSequence.init(_:_:)((uint64_t)v15, (uint64_t)v11, a3, a4, a5);
}

uint64_t _AsyncChainedSequence.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for _AsyncChainedSequence();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t type metadata accessor for _AsyncChainedSequence()
{
  return swift_getGenericMetadata();
}

uint64_t _AsyncChainedSequence.AsyncIterator.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a3, a1, AssociatedTypeWitness);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for _AsyncChainedSequence.AsyncIterator() + 52);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a2, v8);
}

uint64_t type metadata accessor for _AsyncChainedSequence.AsyncIterator()
{
  return swift_getGenericMetadata();
}

uint64_t _AsyncChainedSequence.AsyncIterator.first.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t _AsyncChainedSequence.AsyncIterator.first.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v4(v1, a1, AssociatedTypeWitness);
}

uint64_t (*_AsyncChainedSequence.AsyncIterator.first.modify())()
{
  return nullsub_1;
}

uint64_t _AsyncChainedSequence.AsyncIterator.second.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t _AsyncChainedSequence.AsyncIterator.second.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v6(v4, a1, AssociatedTypeWitness);
}

uint64_t (*_AsyncChainedSequence.AsyncIterator.second.modify())()
{
  return nullsub_1;
}

uint64_t _AsyncChainedSequence.AsyncIterator.next()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  uint64_t v3[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  void v3[5] = AssociatedTypeWitness;
  uint64_t v5 = sub_19F1DCAAC();
  void v3[6] = v5;
  v3[7] = *(void *)(v5 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v6 = swift_task_alloc();
  v3[9] = v6;
  v3[10] = *(void *)(AssociatedTypeWitness - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = (void *)swift_task_alloc();
  v3[13] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_19F0DF7C0;
  return MEMORY[0x1F4187C78](v6, v7, AssociatedConformanceWitness);
}

uint64_t sub_19F0DF7C0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0DFD48;
  }
  else {
    uint64_t v2 = sub_19F0DF8D4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0DF8D4()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[5];
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[15] = v4;
  v0[16] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v1, 1, v3) == 1)
  {
    uint64_t v5 = v0[6];
    uint64_t v6 = v0[7];
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v0[17] = v7;
    v0[18] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v1, v5);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[19] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_19F0DFB04;
    uint64_t v11 = v0[8];
    return MEMORY[0x1F4187C78](v11, AssociatedTypeWitness, AssociatedConformanceWitness);
  }
  else
  {
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[2];
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v14(v12, v1, v3);
    v14(v13, v12, v3);
    (*(void (**)(void, void, uint64_t, void))(v0[10] + 56))(v0[2], 0, 1, v0[5]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_19F0DFB04()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0DFDD0;
  }
  else {
    uint64_t v2 = sub_19F0DFC18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0DFC18()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 120))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, void))(v0 + 136))(v1, *(void *)(v0 + 48));
    uint64_t v3 = 1;
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 16);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 80) + 32);
    v6(v4, v1, v2);
    v6(v5, v4, v2);
    uint64_t v3 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 80) + 56))(*(void *)(v0 + 16), v3, 1, *(void *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_19F0DFD48()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0DFDD0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0DFE58(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19EEB8A6C;
  return _AsyncChainedSequence.AsyncIterator.next()(a1, a2);
}

uint64_t sub_19F0DFF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  void v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = swift_task_alloc();
  v6[5] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v6[6] = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_19F0E0054;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6, v13);
}

uint64_t sub_19F0E0054()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0) {
    (*(void (**)(void, void, void))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v3[1];
  return v4();
}

uint64_t _AsyncChainedSequence.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t _AsyncChainedSequence.second.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t _AsyncChainedSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v23 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(void *)(v8 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  uint64_t v11 = (char *)v22 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  double v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (char *)v22 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, v3, v12, v18);
  sub_19F1DC4AC();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v7, v3 + *(int *)(a1 + 52), v5);
  sub_19F1DC4AC();
  return _AsyncChainedSequence.AsyncIterator.init(_:_:)((uint64_t)v20, (uint64_t)v11, v24);
}

uint64_t _AsyncChainedSequence.debugDescription.getter()
{
  return 0;
}

uint64_t sub_19F0E0504()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_19F0E05A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0E05C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _AsyncChainedSequence.makeAsyncIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t sub_19F0E0628(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_19F0E0820(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x19F0E0AECLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_19F0E0B14()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_19F0E0C0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v11 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v6 + v9) & (unint64_t)~v9) + *(void *)(*(void *)(v7 - 8) + 64) > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
  }
  else
  {
    uint64_t v15 = v7;
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v16, ((unint64_t)a2 + v10) & v16, v15);
  }
  return a1;
}

uint64_t sub_19F0E0DB4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v5;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v7(v9, v8);
}

uint64_t sub_19F0E0EA8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19F0E0FA0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19F0E1098(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19F0E1190(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19F0E1288(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v6) {
    unsigned int v10 = v6;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(v5 + 64) + v11;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v12 & ~v11) + *(void *)(*(void *)(v7 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v9)
        {
          unint64_t v22 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48);
          return v22(a1, v6, AssociatedTypeWitness);
        }
        else
        {
          unsigned int v20 = *(uint64_t (**)(unint64_t))(v8 + 48);
          return v20(((unint64_t)a1 + v12) & ~v11);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_19F0E1564(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = *(void *)(v7 + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(v9 + 64);
  if (a3 <= v12)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v12 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v17 = ~v12 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x19F0E18B0);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 >= v11)
        {
          unint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
          v22(a1, a2, v8, AssociatedTypeWitness);
        }
        else
        {
          int v21 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
          v21((unint64_t)&a1[v14] & ~v13, a2);
        }
      }
      return;
  }
}

__n128 JSRequest.route.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  *unint64_t v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*JSRequest.route.modify())()
{
  return nullsub_1;
}

uint64_t JSRequest.timeoutInterval.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*JSRequest.timeoutInterval.modify())()
{
  return nullsub_1;
}

uint64_t JSRequest.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(void *)(v1 + 16)
    && (unint64_t v2 = sub_19EEBD400(0x6E6F697372657624, 0xE800000000000000), (v3 & 1) != 0)
    && (sub_19EEBDBA4(*(void *)(v1 + 56) + 32 * v2, (uint64_t)v6), swift_dynamicCast()))
  {
    return v5;
  }
  else
  {
    return 0;
  }
}

uint64_t JSRequest.version.setter(uint64_t a1)
{
  v2[3] = MEMORY[0x1E4FBB808];
  v2[0] = a1;
  return sub_19EE7D94C((uint64_t)v2, 0x6E6F697372657624, 0xE800000000000000);
}

void (*JSRequest.version.modify(void *a1))(uint64_t a1)
{
  char v3 = malloc(0x38uLL);
  *a1 = v3;
  void v3[6] = v1;
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v6 = sub_19EEBD400(0x6E6F697372657624, 0xE800000000000000);
    if ((v7 & 1) != 0
      && (sub_19EEBDBA4(*(void *)(v4 + 56) + 32 * v6, (uint64_t)v3), swift_dynamicCast()))
    {
      uint64_t v5 = v3[5];
    }
    else
    {
      uint64_t v5 = 0;
    }
  }
  v3[4] = v5;
  return sub_19F0E1B3C;
}

void sub_19F0E1B3C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  v3[3] = MEMORY[0x1E4FBB808];
  v3[0] = v2;
  sub_19EE7D94C((uint64_t)v3, 0x6E6F697372657624, 0xE800000000000000);
  free(v1);
}

uint64_t JSRequest.addingOption(_:withName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v10 = *v4;
  uint64_t v9 = v4[1];
  uint64_t v11 = v4[2];
  uint64_t v12 = v4[3];
  uint64_t v13 = v4[4];
  char v14 = *((unsigned char *)v4 + 40);
  uint64_t v15 = v4[6];
  *(void *)a4 = v10;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = v11;
  *(void *)(a4 + 24) = v12;
  *(void *)(a4 + 32) = v13;
  *(unsigned char *)(a4 + 40) = v14;
  *(void *)(a4 + 48) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_19F1DBFAC()) {
    sub_19F19F004("JetEngine/JSRequest.swift", 25, 2, 82);
  }
  sub_19EEBCD00(a1, (uint64_t)v17);
  swift_bridgeObjectRetain();
  return sub_19EE7D94C((uint64_t)v17, a2, a3);
}

Swift::Void __swiftcall JSRequest.removeOption(withName:)(Swift::String withName)
{
  object = withName._object;
  uint64_t countAndFlagsBits = withName._countAndFlagsBits;
  if (sub_19F1DBFAC()) {
    sub_19F19F004("JetEngine/JSRequest.swift", 25, 2, 106);
  }
  sub_19EF6B168(countAndFlagsBits, (uint64_t)object, v3);
  sub_19EEBCB4C((uint64_t)v3);
}

void __swiftcall JSRequest.removingOption(withName:)(JetEngine::JSRequest *__return_ptr retstr, Swift::String withName)
{
  object = withName._object;
  uint64_t countAndFlagsBits = withName._countAndFlagsBits;
  uint64_t v7 = *(void *)v2;
  unint64_t v6 = *(void **)(v2 + 8);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void **)(v2 + 24);
  Swift::Double v10 = *(double *)(v2 + 32);
  char v11 = *(unsigned char *)(v2 + 40);
  uint64_t v12 = *(void **)(v2 + 48);
  retstr->route.service._uint64_t countAndFlagsBits = v7;
  retstr->route.service._object = v6;
  retstr->route.function._uint64_t countAndFlagsBits = v8;
  retstr->route.function._object = v9;
  retstr->timeoutInterval.value = v10;
  retstr->timeoutInterval.is_nil = v11;
  retstr->options._rawValue = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_19F1DBFAC()) {
    sub_19F19F004("JetEngine/JSRequest.swift", 25, 2, 106);
  }
  sub_19EF6B168(countAndFlagsBits, (uint64_t)object, v13);
  sub_19EEBCB4C((uint64_t)v13);
}

Swift::Void __swiftcall JSRequest.removeAllOptions()()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = MEMORY[0x1E4FBC868];
}

void __swiftcall JSRequest.removingAllOptions()(JetEngine::JSRequest *__return_ptr retstr)
{
  uint64_t v4 = *(void *)v1;
  char v3 = *(void **)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v5 = *(void **)(v1 + 24);
  Swift::Double v7 = *(double *)(v1 + 32);
  char v8 = *(unsigned char *)(v1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  retstr->route.service._uint64_t countAndFlagsBits = v4;
  retstr->route.service._object = v3;
  retstr->route.function._uint64_t countAndFlagsBits = v6;
  retstr->route.function._object = v5;
  retstr->timeoutInterval.value = v7;
  retstr->timeoutInterval.is_nil = v8;
  retstr->options._rawValue = (void *)MEMORY[0x1E4FBC868];
}

uint64_t static JSRequest.versionOption.getter()
{
  return 0x6E6F697372657624;
}

uint64_t sub_19F0E1E88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = JSRequest.version.getter();
  *a1 = result;
  return result;
}

uint64_t sub_19F0E1EE0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  v3[3] = MEMORY[0x1E4FBB808];
  v3[0] = v1;
  return sub_19EE7D94C((uint64_t)v3, 0x6E6F697372657624, 0xE800000000000000);
}

uint64_t assignWithCopy for JSRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JSRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_19F0E211C()
{
  uint64_t v5 = 0;
  MEMORY[0x19F3C9490](&v5, 8);
  int v0 = v5;
  id v1 = objc_msgSend(self, sel_currentContext);
  if (v1)
  {
    unint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_valueWithBool_inContext_, (*(void *)&v0 & 0x20000) == 0, v1);

    if (v3) {
      return (uint64_t)v3;
    }
    __break(1u);
  }
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19F0E220C()
{
  unint64_t v0 = sub_19F085950(0x20000000000001uLL);
  id v1 = objc_msgSend(self, sel_currentContext);
  if (v1)
  {
    unint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_valueWithDouble_inContext_, v1, (double)v0 * 1.11022302e-16 + 0.0);

    if (v3) {
      return (uint64_t)v3;
    }
    __break(1u);
  }
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19F0E2310(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_19EFF63E0(0, v2, 0);
  uint64_t v3 = v10;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_19EEBDBA4(i, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19EFF63E0(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v10;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_19EFF63E0(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v10;
      }
      *(void *)(v3 + 16) = v6 + 1;
      *(void *)(v3 + 8 * v6 + 32) = v8;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

id RollItemsMediaActivityTracker.__allocating_init(pipeline:playlist:eventData:topic:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v11 = (char *)objc_allocWithZone(v5);
  uint64_t v12 = OBJC_IVAR___JERollItemsMediaActivityTracker_trackerEventData;
  *(void *)&v11[OBJC_IVAR___JERollItemsMediaActivityTracker_trackerEventData] = 0;
  *(void *)&v11[OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity] = 0;
  *(void *)&v11[OBJC_IVAR___JERollItemsMediaActivityTracker_seekActivity] = 0;
  uint64_t v13 = &v11[OBJC_IVAR___JERollItemsMediaActivityTracker_activity];
  *(void *)uint64_t v13 = 0;
  v13[8] = 1;
  *(void *)&v11[OBJC_IVAR___JERollItemsMediaActivityTracker_pipeline] = a1;
  *(void *)&v11[OBJC_IVAR___JERollItemsMediaActivityTracker_playlist] = a2;
  *(void *)&v11[v12] = a3;
  char v14 = v11;
  id v15 = a1;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  int v16 = &v14[OBJC_IVAR___JERollItemsMediaActivityTracker_topic];
  *(void *)int v16 = a4;
  *((void *)v16 + 1) = a5;

  v19.receiver = v14;
  v19.super_class = v5;
  id v17 = objc_msgSendSuper2(&v19, sel_init);

  swift_unknownObjectRelease();
  return v17;
}

id RollItemsMediaActivityTracker.init(pipeline:playlist:eventData:topic:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = sub_19F0E3AAC(a1, a2, a3, a4, a5);

  swift_unknownObjectRelease();
  return v6;
}

void sub_19F0E2724(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v9 = v8;
  char v14 = *(void **)(v8 + OBJC_IVAR___JERollItemsMediaActivityTracker_pipeline);
  uint64_t v15 = v8 + OBJC_IVAR___JERollItemsMediaActivityTracker_topic;
  uint64_t v16 = *(void *)(v8 + OBJC_IVAR___JERollItemsMediaActivityTracker_topic);
  uint64_t v17 = *(void *)(v15 + 8);
  int v18 = (char *)objc_allocWithZone((Class)type metadata accessor for MediaActivity());
  id v19 = v14;
  swift_bridgeObjectRetain();
  id v20 = a7;
  id v21 = sub_19F0E3808(a1, v20, v19, v16, v17, v18);
  if (v21)
  {
    unint64_t v22 = v21;
    uint64_t v23 = (void *)sub_19F0E36B4(a8, v20, v9);
    memset(v31, 0, sizeof(v31));
    sub_19F0ABD20(a2, a3, a4, a5, a6, v23, (uint64_t)v31);
    swift_bridgeObjectRelease();
    sub_19EEBCB4C((uint64_t)v31);
    if (a1)
    {
      if (a1 != 1)
      {
LABEL_7:

        return;
      }
      uint64_t v24 = &OBJC_IVAR___JERollItemsMediaActivityTracker_seekActivity;
    }
    else
    {
      uint64_t v24 = &OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity;
    }
    uint64_t v25 = *v24;
    uint64_t v26 = *(void **)(v9 + v25);
    *(void *)(v9 + v25) = v22;
    unint64_t v22 = v26;
    goto LABEL_7;
  }
}

uint64_t RollItemsMediaActivityTracker.playStoppedAtOverallPosition(_:type:reason:eventData:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_19F1DBD7C();
  uint64_t v8 = v7;
  uint64_t v9 = sub_19F1DBD7C();
  sub_19F0E29BC(0, a1, v6, v8, v9, v10, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_19F0E29BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a1)
  {
    if (a1 != 1)
    {
      uint64_t v15 = 0;
      goto LABEL_15;
    }
    uint64_t v13 = &OBJC_IVAR___JERollItemsMediaActivityTracker_seekActivity;
  }
  else
  {
    uint64_t v13 = &OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity;
  }
  uint64_t v14 = *v13;
  uint64_t v15 = *(char **)(v7 + v14);
  *(void *)(v7 + v14) = 0;
  if (v15 && (*(unsigned char *)(*(void *)&v15[OBJC_IVAR___JEMediaActivity_pipelineHandler] + 216) & 1) == 0)
  {
    uint64_t v16 = (void **)&v15[OBJC_IVAR___JEMediaActivity_playlistItem];
    swift_beginAccess();
    self;
    uint64_t v17 = (void *)swift_dynamicCastObjCClass();
    int v18 = v15;
    if (v17)
    {
      swift_unknownObjectRetain();
      if ((unint64_t)objc_msgSend(v17, sel_startOverallPosition) > a2) {
        goto LABEL_11;
      }
      id v19 = objc_msgSend(v17, sel_startOverallPosition);
      id v20 = (char *)objc_msgSend(v17, sel_duration);
      if (__CFADD__(v19, v20))
      {
        __break(1u);
        return;
      }
      if (&v20[(void)v19] < (char *)a2)
      {
LABEL_11:
        if (qword_1EB393168 != -1) {
          swift_once();
        }
        id v21 = (void *)qword_1EB393080;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_19F24EAD0;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_19F24EAD0;
        uint64_t v39 = MEMORY[0x1E4FBB1A0];
        unint64_t v37 = 0xD000000000000041;
        unint64_t v38 = 0x800000019F2722B0;
        long long v35 = 0u;
        long long v36 = 0u;
        id v24 = v21;
        sub_19EEC3E70((uint64_t)&v37, (uint64_t)&v35);
        *(unsigned char *)(v23 + 64) = 0;
        long long v25 = v36;
        *(_OWORD *)(v23 + 32) = v35;
        *(_OWORD *)(v23 + 48) = v25;
        *(void *)(v22 + 32) = v23;
        *(void *)&long long v35 = v24;
        LOBYTE(v37) = 0;
        OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v22, (JetEngine::LogMessageLevel)&v37);

        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v32 = *v16;
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v33 = (void *)sub_19F0E36B4(a7, v32, v7);
    swift_unknownObjectRelease();
    long long v35 = 0u;
    long long v36 = 0u;
    sub_19F0ABD88(a2, a3, a4, a5, a6, v33, (uint64_t)&v35);
    swift_bridgeObjectRelease();

    sub_19EEBCB4C((uint64_t)&v35);
    return;
  }
LABEL_15:
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v26 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v28 + 16) = xmmword_19F24EAD0;
  uint64_t v39 = v29;
  unint64_t v37 = 0xD000000000000024;
  unint64_t v38 = 0x800000019F272280;
  long long v35 = 0u;
  long long v36 = 0u;
  id v30 = v26;
  sub_19EEC3E70((uint64_t)&v37, (uint64_t)&v35);
  *(unsigned char *)(v28 + 64) = 0;
  long long v31 = v36;
  *(_OWORD *)(v28 + 32) = v35;
  *(_OWORD *)(v28 + 48) = v31;
  *(void *)(v27 + 32) = v28;
  *(void *)&long long v35 = v30;
  LOBYTE(v37) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v27, (JetEngine::LogMessageLevel)&v37);

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall RollItemsMediaActivityTracker.jumpFromOverallPosition(_:fromRollItem:toRollItem:eventData:)(Swift::UInt64 _, JEHLSRollItem *fromRollItem, JEHLSRollItem *toRollItem, Swift::OpaquePointer_optional eventData)
{
  rawValue = eventData.value._rawValue;
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity);
  if (v9)
  {
    uint64_t v10 = (void *)(v9 + OBJC_IVAR___JEMediaActivity_type);
    swift_beginAccess();
    if (!*v10)
    {
      uint64_t v11 = sub_19F1DBD7C();
      uint64_t v13 = v12;
      uint64_t v14 = sub_19F1DBD7C();
      sub_19F0E29BC(0, _, v11, v13, v14, v15, (uint64_t)rawValue);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v16 = sub_19F1DBD7C();
  uint64_t v18 = v17;
  uint64_t v19 = sub_19F1DBD7C();
  sub_19F0E2724(1, _, v16, v18, v19, v20, fromRollItem, (uint64_t)rawValue);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v21 = [(JEHLSItem *)toRollItem startOverallPosition];
  uint64_t v22 = sub_19F1DBD7C();
  uint64_t v24 = v23;
  uint64_t v25 = sub_19F1DBD7C();
  sub_19F0E29BC(1, v21, v22, v24, v25, v26, (uint64_t)rawValue);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s9JetEngine29RollItemsMediaActivityTrackerC28playStartedAtOverallPosition_4type6reason8rollItem9eventDatays6UInt64V_So07JEMediaF11TriggerTypeaSo0tF15PlayStartReasonaSo09JEHLSRollP0CSaySDySSypGGSgtF_0([(JEHLSItem *)toRollItem startOverallPosition], (int)@"automatic", (int)@"next", toRollItem, (uint64_t)rawValue);
}

uint64_t RollItemsMediaActivityTracker.seekStartedAtOverallPosition(_:type:reason:rollItem:eventData:)(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8 = sub_19F1DBD7C();
  uint64_t v10 = v9;
  uint64_t v11 = sub_19F1DBD7C();
  sub_19F0E2724(1, a1, v8, v10, v11, v12, a4, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t RollItemsMediaActivityTracker.seekStoppedAtOverallPosition(_:type:reason:rollItem:eventData:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_19F1DBD7C();
  uint64_t v9 = v8;
  uint64_t v10 = sub_19F1DBD7C();
  sub_19F0E29BC(1, a1, v7, v9, v10, v11, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id RollItemsMediaActivityTracker.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void RollItemsMediaActivityTracker.init()()
{
}

id RollItemsMediaActivityTracker.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19F0E36B4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v5 = *(void **)(a3 + OBJC_IVAR___JERollItemsMediaActivityTracker_playlist);
  if (objc_msgSend(v5, sel_respondsToSelector_, sel_eventData))
  {
    id v6 = objc_msgSend(v5, sel_eventData);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_19F1DC16C();

      if (v8)
      {
        uint64_t v9 = sub_19F0E2310(v8);
        sub_19F0E4000(v8);
        if (v9) {
          sub_19EF5D830(v9);
        }
      }
    }
  }
  if (objc_msgSend(a2, sel_respondsToSelector_, sel_eventData))
  {
    id v10 = objc_msgSend(a2, sel_eventData);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_19F1DC16C();

      if (v12)
      {
        uint64_t v13 = sub_19F0E2310(v12);
        sub_19F0E4000(v12);
        if (v13) {
          sub_19EF5D830(v13);
        }
      }
    }
  }
  if (a1)
  {
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_19EF5D830(v14);
  }
  return v16;
}

id sub_19F0E3808(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  type metadata accessor for WrappedMetricsPipeline();
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    *(void *)&a6[OBJC_IVAR___JEMediaActivity_type] = a1;
    *(void *)&a6[OBJC_IVAR___JEMediaActivity_playlistItem] = a2;
    sub_19EE99F44(v12 + OBJC_IVAR___JEWrappedMetricsPipeline_pipeline, (uint64_t)&v31);
    type metadata accessor for MediaActivityPipelineHandler();
    uint64_t v13 = swift_allocObject();
    *(unsigned char *)(v13 + 216) = 0;
    *(void *)(v13 + 224) = 0;
    *(void *)(v13 + 232) = 0;
    uint64_t v14 = a6;
    id v15 = a2;
    uint64_t v16 = MEMORY[0x1E4FBC860];
    *(void *)(v13 + 240) = sub_19EEBF898(MEMORY[0x1E4FBC860]);
    *(void *)(v13 + 248) = sub_19EEBF898(v16);
    long long v17 = v40;
    *(_OWORD *)(v13 + 144) = v39;
    *(_OWORD *)(v13 + 160) = v17;
    *(_OWORD *)(v13 + 176) = v41;
    *(unsigned char *)(v13 + 192) = v42;
    long long v18 = v36;
    *(_OWORD *)(v13 + 80) = v35;
    *(_OWORD *)(v13 + 96) = v18;
    long long v19 = v38;
    *(_OWORD *)(v13 + 112) = v37;
    *(_OWORD *)(v13 + 128) = v19;
    long long v20 = v32;
    *(_OWORD *)(v13 + 16) = v31;
    *(_OWORD *)(v13 + 32) = v20;
    long long v21 = v34;
    *(_OWORD *)(v13 + 48) = v33;
    *(_OWORD *)(v13 + 64) = v21;
    *(void *)(v13 + 200) = a4;
    *(void *)(v13 + 208) = a5;
    *(void *)&v14[OBJC_IVAR___JEMediaActivity_pipelineHandler] = v13;

    v30.receiver = v14;
    v30.super_class = (Class)type metadata accessor for MediaActivity();
    id v22 = objc_msgSendSuper2(&v30, sel_init);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v23 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v25 + 16) = xmmword_19F24EAD0;
    v43[3] = v26;
    v43[0] = 0xD00000000000006ALL;
    v43[1] = 0x800000019F270F00;
    long long v31 = 0u;
    long long v32 = 0u;
    id v27 = v23;
    sub_19EEC3E70((uint64_t)v43, (uint64_t)&v31);
    *(unsigned char *)(v25 + 64) = 0;
    long long v28 = v32;
    *(_OWORD *)(v25 + 32) = v31;
    *(_OWORD *)(v25 + 48) = v28;
    *(void *)(v24 + 32) = v25;
    *(void *)&long long v31 = v27;
    LOBYTE(v43[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v24, (JetEngine::LogMessageLevel)v43);

    swift_bridgeObjectRelease();
    type metadata accessor for MediaActivity();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v22;
}

id sub_19F0E3AAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = OBJC_IVAR___JERollItemsMediaActivityTracker_trackerEventData;
  *(void *)&v5[OBJC_IVAR___JERollItemsMediaActivityTracker_trackerEventData] = 0;
  *(void *)&v5[OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity] = 0;
  *(void *)&v5[OBJC_IVAR___JERollItemsMediaActivityTracker_seekActivity] = 0;
  uint64_t v13 = &v5[OBJC_IVAR___JERollItemsMediaActivityTracker_activity];
  *(void *)uint64_t v13 = 0;
  v13[8] = 1;
  *(void *)&v5[OBJC_IVAR___JERollItemsMediaActivityTracker_pipeline] = a1;
  *(void *)&v5[OBJC_IVAR___JERollItemsMediaActivityTracker_playlist] = a2;
  *(void *)&v5[v12] = a3;
  uint64_t v14 = v5;
  id v15 = a1;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = &v14[OBJC_IVAR___JERollItemsMediaActivityTracker_topic];
  *(void *)uint64_t v16 = a4;
  *((void *)v16 + 1) = a5;

  v18.receiver = v14;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

uint64_t _s9JetEngine29RollItemsMediaActivityTrackerC28playStartedAtOverallPosition_4type6reason8rollItem9eventDatays6UInt64V_So07JEMediaF11TriggerTypeaSo0tF15PlayStartReasonaSo09JEHLSRollP0CSaySDySSypGGSgtF_0(unint64_t a1, int a2, int a3, id a4, uint64_t a5)
{
  if ((unint64_t)objc_msgSend(a4, sel_startOverallPosition) > a1) {
    goto LABEL_4;
  }
  id v9 = objc_msgSend(a4, sel_startOverallPosition);
  id v10 = (char *)objc_msgSend(a4, sel_duration);
  if (__CFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_19;
  }
  if (&v10[(void)v9] >= (char *)a1)
  {
    uint64_t v22 = *(void *)(v5 + OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity);
    if (!v22
      || (uint64_t v23 = (void *)(v22 + OBJC_IVAR___JEMediaActivity_type), swift_beginAccess(), *v23)
      || *(unsigned char *)(*(void *)(v22 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 216) == 1)
    {
      uint64_t v24 = sub_19F1DBD7C();
      uint64_t v26 = v25;
      uint64_t v27 = sub_19F1DBD7C();
      sub_19F0E2724(0, a1, v24, v26, v27, v28, a4, a5);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (qword_1EB393168 == -1)
    {
LABEL_17:
      objc_super v30 = (void *)qword_1EB393080;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_19F24EAD0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_19F24EAD0;
      *((void *)&v36 + 1) = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v35 = 0xD000000000000037;
      *((void *)&v35 + 1) = 0x800000019F272300;
      long long v40 = 0u;
      long long v41 = 0u;
      id v33 = v30;
      sub_19EEC3E70((uint64_t)&v35, (uint64_t)&v40);
      *(unsigned char *)(v32 + 64) = 0;
      long long v34 = v41;
      *(_OWORD *)(v32 + 32) = v40;
      *(_OWORD *)(v32 + 48) = v34;
      *(void *)(v31 + 32) = v32;
      *(void *)&long long v40 = v33;
      LOBYTE(v35) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v35);

      return swift_bridgeObjectRelease();
    }
LABEL_19:
    swift_once();
    goto LABEL_17;
  }
LABEL_4:
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19F24EAD0;
  id v13 = v11;
  long long v39 = sub_19EEC3F3C(0, 70, 0, MEMORY[0x1E4FBC860]);
  v14._object = (void *)0x800000019F272340;
  v14._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  v38[3] = MEMORY[0x1E4FBC538];
  v38[0] = a1;
  sub_19EEBCD00((uint64_t)v38, (uint64_t)v37);
  long long v35 = 0u;
  long long v36 = 0u;
  sub_19EEC3E70((uint64_t)v37, (uint64_t)&v35);
  char v42 = 1;
  long long v40 = v35;
  long long v41 = v36;
  id v15 = v39;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v15 = sub_19EEC3F3C(0, v15[2] + 1, 1, v15);
  }
  unint64_t v17 = v15[2];
  unint64_t v16 = v15[3];
  if (v17 >= v16 >> 1) {
    id v15 = sub_19EEC3F3C((void *)(v16 > 1), v17 + 1, 1, v15);
  }
  v15[2] = v17 + 1;
  objc_super v18 = &v15[5 * v17];
  long long v19 = v40;
  long long v20 = v41;
  *((unsigned char *)v18 + 64) = v42;
  *((_OWORD *)v18 + 2) = v19;
  *((_OWORD *)v18 + 3) = v20;
  long long v39 = v15;
  sub_19EEBCB4C((uint64_t)v38);
  v21._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v21._object = (void *)0x800000019F272360;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *(void *)(v12 + 32) = v39;
  *(void *)&long long v40 = v13;
  LOBYTE(v35) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v35);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for RollItemsMediaActivityTracker()
{
  return self;
}

uint64_t method lookup function for RollItemsMediaActivityTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RollItemsMediaActivityTracker);
}

uint64_t dispatch thunk of RollItemsMediaActivityTracker.__allocating_init(pipeline:playlist:eventData:topic:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_19F0E4000(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19F0E4010@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  if (a2)
  {
    sub_19EEC4154(a1, (uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94747D8);
    id v9 = (void *)swift_allocObject();
    id v10 = objc_allocWithZone((Class)JEUnfairLock);
    swift_retain();
    void v9[2] = objc_msgSend(v10, sel_init);
    sub_19EEBB420(v19, (uint64_t)(v9 + 3));
    v9[8] = a3;
    v9[9] = a4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94747E0);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v9;
    uint64_t v12 = *(void *)(v5 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v12 + 24));
    sub_19F0E4478((uint64_t *)(v12 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 24));
    swift_release();
    uint64_t result = swift_release();
    *a5 = v11;
  }
  else
  {
    sub_19EEC4154(a1, (uint64_t)v19);
    uint64_t v20 = a3;
    uint64_t v21 = a4;
    sub_19F0E4410((uint64_t)v19, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94747D0);
    uint64_t v14 = swift_allocObject();
    long long v15 = v17[1];
    *(_OWORD *)(v14 + 16) = v17[0];
    *(_OWORD *)(v14 + 32) = v15;
    *(_OWORD *)(v14 + 48) = v17[2];
    *(void *)(v14 + 64) = v18;
    uint64_t v16 = *(void *)(v5 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v16 + 24));
    sub_19F0E4478((uint64_t *)(v16 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 24));
    swift_release();
    *a5 = v14;
    return sub_19F0E4494((uint64_t)v19);
  }
  return result;
}

id sub_19F0E41CC()
{
  id result = objc_msgSend(objc_allocWithZone((Class)_JEAtomicFlag), sel_initWithInitialValue_, 0);
  qword_1E94747A8 = (uint64_t)result;
  return result;
}

uint64_t sub_19F0E4204()
{
  if (qword_1E94701F8 != -1) {
    swift_once();
  }
  -[_JEAtomicFlag setCurrentValue:](qword_1E94747A8, 1u);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94747B8);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94747C0);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = v1;
  v3[3] = &type metadata for SyncTaskScheduler;
  void v3[4] = &protocol witness table for SyncTaskScheduler;
  sub_19F0E4010((uint64_t)v3, 0, (uint64_t)sub_19F0E4304, 0, &v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  uint64_t result = swift_release();
  qword_1E9498BA0 = v0;
  return result;
}

void sub_19F0E4304(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  sub_19F04A428(v1, v2);
}

uint64_t static JetEngineTracing.onEnterPointOfInterest.getter()
{
  if (qword_1E9470200 != -1) {
    swift_once();
  }
  return swift_retain();
}

ValueMetadata *type metadata accessor for JetEngineTracing()
{
  return &type metadata for JetEngineTracing;
}

unint64_t sub_19F0E43B4()
{
  unint64_t result = qword_1E94747B0;
  if (!qword_1E94747B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E94747B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94747B0);
  }
  return result;
}

uint64_t sub_19F0E4410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94747C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F0E4478(uint64_t *a1)
{
  return sub_19F1D4B58(a1, v1);
}

uint64_t sub_19F0E4494(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94747C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for LocalizerFormattingKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_19F1DB6CC();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for LocalizerFormattingKey(uint64_t a1)
{
  uint64_t v2 = sub_19F1DB6CC();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for LocalizerFormattingKey(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB6CC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for LocalizerFormattingKey(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB6CC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for LocalizerFormattingKey(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB6CC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for LocalizerFormattingKey(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB6CC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizerFormattingKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F0E4C2C);
}

uint64_t sub_19F0E4C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB6CC();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocalizerFormattingKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F0E4CAC);
}

uint64_t sub_19F0E4CAC(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_19F1DB6CC();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_19F0E4D2C(uint64_t a1)
{
  uint64_t v2 = sub_19F1DB6CC();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_19F0E4D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB6CC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for LocalizerFormattingKey()
{
  uint64_t result = qword_1E94747E8;
  if (!qword_1E94747E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_19F0E4E50()
{
  uint64_t result = sub_19F1DB6CC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t _IntentReplayDispatcher.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (qword_1EB392A90 != -1) {
    swift_once();
  }
  swift_retain();
  __int16 v4 = sub_19F0E7B48();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_release();
  a2[8] = &type metadata for UserPreferenceIntentReplayDispatcherConfigurationProvider;
  a2[9] = &off_1EF1498A0;
  uint64_t v11 = swift_allocObject();
  a2[5] = v11;
  *(unsigned char *)(v11 + 16) = v4 & 1;
  *(unsigned char *)(v11 + 17) = HIBYTE(v4) & 1;
  *(void *)(v11 + 24) = v6;
  *(void *)(v11 + 32) = v8;
  *(void *)(v11 + 40) = v10;
  sub_19F0E7D54(a1, (uint64_t)a2);
  uint64_t v12 = a2[8];
  uint64_t v13 = a2[9];
  __swift_project_boxed_opaque_existential_1(a2 + 5, v12);
  char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  uint64_t v15 = type metadata accessor for StandardIntentReplayStorage();
  uint64_t v16 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v16 + 120) = 0;
  *(unsigned char *)(v16 + 112) = v14 & 1;
  *(void *)(v16 + 128) = sub_19EE599C4(MEMORY[0x1E4FBC860]);
  uint64_t v19 = v15;
  uint64_t v20 = &off_1EF146E08;
  *(void *)&long long v18 = v16;
  sub_19EEBD664(a1, qword_1E946CC60);
  return sub_19EEBB420(&v18, (uint64_t)(a2 + 10));
}

uint64_t sub_19F0E5058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v62 = sub_19F1DD7FC();
  uint64_t v9 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v64 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v4[8];
  uint64_t v12 = v4[9];
  __swift_project_boxed_opaque_existential_1(v4 + 5, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 40))(v11, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  if (!*(void *)(v13 + 16)) {
    goto LABEL_53;
  }
  unint64_t v16 = sub_19EEBD400(v14, v15);
  if ((v17 & 1) == 0) {
    goto LABEL_53;
  }
  long long v18 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v16);
  uint64_t v20 = *v18;
  unint64_t v19 = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v77 = a2;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v76);
  uint64_t v22 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, a1, a2);
  *(void *)&long long v73 = 47;
  *((void *)&v73 + 1) = 0xE100000000000000;
  MEMORY[0x1F4188790](v22);
  uint64_t v58 = &v73;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_19EEA0B44(0x7FFFFFFFFFFFFFFFLL, 1, sub_19EEA0FE8, (uint64_t)&v59[-4], v20, v19);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_19EF9EF40(v23);
  swift_bridgeObjectRelease();
  uint64_t v25 = v24[2];
  v59[0] = (uint64_t)a4;
  if (!v25)
  {
LABEL_54:
    swift_bridgeObjectRelease();
    uint64_t v56 = (_OWORD *)v59[0];
    *(void *)(v59[0] + 32) = 0;
    *uint64_t v56 = 0u;
    v56[1] = 0u;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v76);
  }
  uint64_t v65 = &v74;
  a4 = v70;
  v60 = (void (**)(char *, uint64_t))(v9 + 8);
  v59[1] = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v24 = sub_19F16B9E0(v24);
      uint64_t v26 = v24[2];
      if (v26) {
        goto LABEL_9;
      }
LABEL_52:
      __break(1u);
LABEL_53:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *((void *)a4 + 4) = 0;
      *a4 = 0u;
      a4[1] = 0u;
      return result;
    }
    uint64_t v26 = v24[2];
    if (!v26) {
      goto LABEL_52;
    }
LABEL_9:
    uint64_t v27 = v26 - 1;
    uint64_t v61 = v24 + 4;
    uint64_t v28 = &v24[4 * v27 + 4];
    uint64_t v29 = v24;
    unint64_t v31 = *v28;
    unint64_t v30 = v28[1];
    unint64_t v33 = v28[2];
    unint64_t v32 = v28[3];
    id v63 = v29;
    v29[2] = v27;
    sub_19EEBDBA4((uint64_t)&v76, (uint64_t)&v73);
    sub_19F1DD7AC();
    sub_19F1DD7EC();
    sub_19F1DCF3C();
    swift_release();
    swift_retain();
    sub_19F1DD08C();
    if (!v75)
    {
LABEL_5:
      swift_release_n();
      swift_bridgeObjectRelease();
      (*v60)(v64, v62);
      uint64_t v24 = v63;
      goto LABEL_6;
    }
    unint64_t v34 = v31 >> 16;
    unint64_t v35 = v30 >> 16;
    while (1)
    {
      long long v36 = v73;
      long long v71 = v73;
      sub_19EEBDC00(v65, v72);
      long long v69 = v36;
      sub_19EEBDBA4((uint64_t)v72, (uint64_t)v70);
      if (!*((void *)&v36 + 1))
      {
        sub_19EEBD664((uint64_t)&v71, &qword_1E9474868);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);
        goto LABEL_12;
      }
      swift_bridgeObjectRetain_n();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);
      uint64_t v37 = (*((void *)&v36 + 1) & 0x2000000000000000) != 0
          ? HIBYTE(*((void *)&v36 + 1)) & 0xFLL
          : v36 & 0xFFFFFFFFFFFFLL;
      BOOL v38 = (void)v36 == v33 && *((void *)&v36 + 1) == v32;
      BOOL v39 = v38 && v34 == 0;
      if (v39 && v37 == v35) {
        break;
      }
      LOBYTE(v58) = 0;
      char v41 = sub_19F1DD2DC();
      swift_bridgeObjectRelease();
      if (v41)
      {
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v32 = *((void *)&v36 + 1);
        unint64_t v33 = v36;
        goto LABEL_31;
      }
      sub_19EEBD664((uint64_t)&v71, &qword_1E9474868);
      swift_bridgeObjectRelease();
LABEL_12:
      sub_19F1DD08C();
      if (!v75) {
        goto LABEL_5;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_31:
    uint64_t v24 = v63;
    if (!v63[2]) {
      break;
    }
LABEL_34:
    *(void *)&long long v69 = v33;
    *((void *)&v69 + 1) = v32;
    sub_19EEBDBA4((uint64_t)v72, (uint64_t)v70);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
    if (swift_dynamicCast())
    {
      uint64_t v42 = v66;
      uint64_t v43 = v24[2];
      if (v43)
      {
        uint64_t v44 = &v61[4 * v43];
        unint64_t v45 = *(v44 - 4);
        unint64_t v46 = *(v44 - 3);
        uint64_t v48 = *(v44 - 2);
        uint64_t v47 = *(v44 - 1);
        swift_bridgeObjectRetain();
        unint64_t v49 = MEMORY[0x19F3C6E00](42, 0xE100000000000000);
        if (!v47) {
          goto LABEL_56;
        }
        if (v48 == v51 && v47 == v52 && v45 >> 16 == v49 >> 16 && v46 >> 16 == v50 >> 16)
        {
          swift_bridgeObjectRelease_n();
LABEL_44:
          if (*(void *)(v42 + 16))
          {
            sub_19EEBDBA4(v42 + 32, (uint64_t)&v66);
          }
          else
          {
            long long v67 = 0u;
            long long v66 = 0u;
          }
          uint64_t v24 = v63;
          swift_bridgeObjectRelease();
          if (*((void *)&v67 + 1))
          {
            sub_19EEBDC00(&v66, &v69);
            uint64_t v54 = v24[2];
            if (v54) {
              v24[2] = v54 - 1;
            }
            swift_release();
            swift_bridgeObjectRelease();
            sub_19EEBD664((uint64_t)&v71, &qword_1E9474868);
            (*v60)(v64, v62);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v76);
            sub_19EEBDC00(&v69, &v76);
            goto LABEL_6;
          }
          sub_19EEBD664((uint64_t)&v71, &qword_1E9474868);
          swift_release();
          (*v60)(v64, v62);
          swift_bridgeObjectRelease();
          sub_19EEBD664((uint64_t)&v66, &qword_1EB393260);
          uint64_t v57 = v59[0];
LABEL_61:
          *(void *)(v57 + 32) = 0;
          *(_OWORD *)uint64_t v57 = 0u;
          *(_OWORD *)(v57 + 16) = 0u;
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v76);
        }
        LOBYTE(v58) = 0;
        char v53 = sub_19F1DD2DC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v53) {
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v57 = v59[0];
      }
      else
      {
        MEMORY[0x19F3C6E00](42, 0xE100000000000000);
LABEL_56:
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v57 = v59[0];
      }
      sub_19EEBD664((uint64_t)&v71, &qword_1E9474868);
      (*v60)(v64, v62);
      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
    swift_release();
    (*v60)(v64, v62);
    long long v69 = v71;
    sub_19EEBDC00(v72, v70);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v76);
    sub_19EEBDC00(v70, &v76);
LABEL_6:
    if (!v24[2]) {
      goto LABEL_54;
    }
  }
  *(void *)&long long v69 = v33;
  *((void *)&v69 + 1) = v32;
  sub_19EEBDBA4((uint64_t)v72, (uint64_t)v70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474860);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v68 = 0;
    long long v67 = 0u;
    long long v66 = 0u;
    sub_19EEBD664((uint64_t)&v66, &qword_1E9474848);
    goto LABEL_34;
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_19EEBD664((uint64_t)&v71, &qword_1E9474868);
  (*v60)(v64, v62);
  swift_bridgeObjectRelease();
  sub_19EEBB420(&v66, v59[0]);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v76);
}

uint64_t sub_19F0E59A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v83 = *MEMORY[0x1E4F143B8];
  *(void *)&long long v68 = sub_19F1DBADC();
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  long long v67 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_19F1DBACC();
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v65 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  long long v69 = (char *)&v60 - v10;
  uint64_t v11 = sub_19F1DAD2C();
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v72 = (unint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v60 - v18;
  uint64_t v21 = v3[8];
  uint64_t v20 = v3[9];
  __swift_project_boxed_opaque_existential_1(v3 + 5, v21);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v21, v20);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(a3 + 32);
  uint64_t v74 = a3 + 32;
  uint64_t v75 = a3;
  long long v73 = v23;
  uint64_t v24 = ((uint64_t (*)(uint64_t, uint64_t))v23)(a2, a3);
  LOBYTE(a3) = sub_19EE7F4A0(v24, v25, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = 0;
  if ((a3 & 1) == 0)
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v27(v19, a1, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474838);
    uint64_t v28 = a2;
    if (swift_dynamicCast())
    {
      sub_19EEBB420(&v78, (uint64_t)&v81);
      uint64_t v76 = 0;
      unint64_t v77 = 0xE000000000000000;
      v73(a2, v75);
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      __swift_project_boxed_opaque_existential_1(&v81, v82);
      *((void *)&v79 + 1) = swift_getAssociatedTypeWitness();
      *(void *)&long long v80 = swift_getAssociatedConformanceWitness();
      __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v78);
      sub_19F1DCD0C();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474860);
      sub_19F1DCF4C();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
      uint64_t v26 = v76;
    }
    else
    {
      *(void *)&long long v80 = 0;
      long long v78 = 0u;
      long long v79 = 0u;
      sub_19EEBD664((uint64_t)&v78, &qword_1E9474840);
      uint64_t v29 = v75;
      sub_19F0E5058(a1, a2, v75, &v78);
      if (*((void *)&v79 + 1))
      {
        sub_19EEBB420(&v78, (uint64_t)&v81);
        *(void *)&long long v78 = 0;
        *((void *)&v78 + 1) = 0xE000000000000000;
        v73(a2, v29);
        sub_19F1DBEFC();
        swift_bridgeObjectRelease();
        sub_19F1DBEFC();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474860);
        sub_19F1DCF4C();
      }
      else
      {
        sub_19EEBD664((uint64_t)&v78, &qword_1E9474848);
        v27(v16, a1, a2);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474800);
        if ((swift_dynamicCast() & 1) == 0)
        {
          long long v79 = 0u;
          long long v80 = 0u;
          long long v78 = 0u;
          sub_19EEBD664((uint64_t)&v78, &qword_1E9474810);
          return 0;
        }
        uint64_t v64 = a1;
        sub_19EECDD70(&v78, &v81);
        sub_19F1DADCC();
        swift_allocObject();
        uint64_t v31 = sub_19F1DADBC();
        sub_19F1DAD1C();
        sub_19F1DAD3C();
        __swift_project_boxed_opaque_existential_1(&v81, v82);
        uint64_t v32 = sub_19F1DADAC();
        unint64_t v63 = v33;
        sub_19F0E829C(&qword_1E9474850, MEMORY[0x1E4F25170]);
        unint64_t v34 = v67;
        uint64_t v35 = v68;
        sub_19F1DBABC();
        uint64_t v62 = v31;
        uint64_t v61 = v32;
        switch(v63 >> 62)
        {
          case 1uLL:
            if (v32 >> 32 < (int)v32) {
              goto LABEL_36;
            }
            unint64_t v72 = v63 & 0x3FFFFFFFFFFFFFFFLL;
            unint64_t v36 = v63;
            sub_19EEA0784(v32, v63);
            sub_19F0E7A68((int)v32, v32 >> 32);
            break;
          case 2uLL:
            uint64_t v37 = v32;
            uint64_t v38 = *(void *)(v32 + 24);
            unint64_t v72 = *(void *)(v32 + 16);
            uint64_t v39 = v32;
            unint64_t v40 = v63;
            sub_19EEA0784(v39, v63);
            swift_retain();
            swift_retain();
            sub_19F0E7A68(v72, v38);
            swift_release();
            swift_release();
            uint64_t v41 = v37;
            unint64_t v42 = v40;
            goto LABEL_20;
          case 3uLL:
            *(void *)((char *)&v78 + 6) = 0;
            *(void *)&long long v78 = 0;
            unint64_t v36 = v63;
            goto LABEL_18;
          default:
            *(void *)&long long v78 = v32;
            DWORD2(v78) = v63;
            WORD6(v78) = WORD2(v63);
            unint64_t v36 = v63;
LABEL_18:
            sub_19F1DBA9C();
            break;
        }
        uint64_t v41 = v32;
        unint64_t v42 = v36;
LABEL_20:
        sub_19EEA072C(v41, v42);
        uint64_t v43 = v66;
        uint64_t v44 = v65;
        unint64_t v45 = v69;
        sub_19F1DBAAC();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v35);
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v44, v45, v71);
        sub_19F0E829C(&qword_1E9474858, MEMORY[0x1E4F24F80]);
        sub_19F1DC01C();
        long long v46 = v78;
        uint64_t v47 = *(void *)(v78 + 16);
        if (*((void *)&v78 + 1) != v47)
        {
          if (*((uint64_t *)&v78 + 1) < v47)
          {
            unint64_t v72 = v78 + 32;
            uint64_t v48 = (void *)MEMORY[0x1E4FBC860];
            long long v68 = xmmword_19F24EAD0;
            unint64_t v50 = *((void *)&v78 + 1);
            uint64_t v51 = v28;
            while ((*((void *)&v46 + 1) & 0x8000000000000000) == 0)
            {
              if (v50 >= *(void *)(v46 + 16)) {
                goto LABEL_34;
              }
              char v52 = *(unsigned char *)(v72 + v50);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393160);
              uint64_t v53 = swift_allocObject();
              *(_OWORD *)(v53 + 16) = v68;
              *(void *)(v53 + 56) = MEMORY[0x1E4FBC358];
              *(void *)(v53 + 64) = MEMORY[0x1E4FBC3B0];
              *(unsigned char *)(v53 + 32) = v52;
              uint64_t v54 = sub_19F1DBDBC();
              uint64_t v56 = v55;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v48 = sub_19EE91FA0(0, v48[2] + 1, 1, v48);
              }
              unint64_t v58 = v48[2];
              unint64_t v57 = v48[3];
              if (v58 >= v57 >> 1) {
                uint64_t v48 = sub_19EE91FA0((void *)(v57 > 1), v58 + 1, 1, v48);
              }
              ++v50;
              v48[2] = v58 + 1;
              uint64_t v59 = &v48[2 * v58];
              v59[4] = v54;
              v59[5] = v56;
              uint64_t v29 = v75;
              uint64_t v28 = v51;
              if (v47 == v50) {
                goto LABEL_22;
              }
            }
            __break(1u);
LABEL_34:
            __break(1u);
          }
          __break(1u);
LABEL_36:
          __break(1u);
        }
        uint64_t v48 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
        *(void *)&long long v78 = v48;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
        sub_19EE868D4();
        sub_19F1DBCCC();
        swift_bridgeObjectRelease();
        *(void *)&long long v78 = ((uint64_t (*)(uint64_t, uint64_t))v73)(v28, v29);
        *((void *)&v78 + 1) = v49;
        sub_19F1DBEFC();
        swift_bridgeObjectRetain();
        sub_19F1DBEFC();
        sub_19EEA072C(v61, v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      uint64_t v26 = v78;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v81);
  }
  return v26;
}

uint64_t _IntentReplayDispatcher.load<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  return MEMORY[0x1F4188298](sub_19F0E650C, 0, 0);
}

uint64_t sub_19F0E650C()
{
  uint64_t v1 = sub_19F0E59A4(v0[9], v0[10], v0[11]);
  v0[13] = v2;
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v0[14] = AssociatedTypeWitness;
    uint64_t v6 = dynamic_cast_existential_2_conditional(AssociatedTypeWitness);
    v0[15] = v6;
    v0[16] = v7;
    v0[17] = v8;
    if (v6)
    {
      uint64_t v9 = (void *)v0[12];
      uint64_t v10 = v9[13];
      uint64_t v11 = v9[14];
      __swift_project_boxed_opaque_existential_1(v9 + 10, v10);
      uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 24) + **(int **)(v11 + 24));
      uint64_t v12 = (void *)swift_task_alloc();
      v0[18] = v12;
      *uint64_t v12 = v0;
      v12[1] = sub_19F0E6720;
      return v17(v3, v4, v10, v11);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v0[8];
  uint64_t v15 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  unint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_19F0E6720(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_19F0E6840, 0, 0);
}

uint64_t sub_19F0E6840()
{
  if (*(void *)(v0 + 160) >> 60 == 15)
  {
    uint64_t v1 = *(void *)(v0 + 64);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v1, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 120);
    sub_19F1DAD0C();
    swift_allocObject();
    long long v9 = *(_OWORD *)(v0 + 128);
    sub_19F1DACFC();
    *(void *)(v0 + 40) = v3;
    *(_OWORD *)(v0 + 48) = v9;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 16));
    sub_19F1DACEC();
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 64);
    sub_19EED5BFC(*(void *)(v0 + 152), *(void *)(v0 + 160));
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474800);
    int v6 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v5, v6 ^ 1u, 1, v4);
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t _IntentReplayDispatcher.cache<A>(result:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[17] = a4;
  v5[18] = v4;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[19] = AssociatedTypeWitness;
  v5[20] = *(void *)(AssociatedTypeWitness - 8);
  v5[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F0E6AF4, 0, 0);
}

uint64_t sub_19F0E6AF4()
{
  uint64_t v1 = sub_19F0E59A4(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136));
  *(void *)(v0 + 176) = v2;
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 16))(*(void *)(v0 + 168), *(void *)(v0 + 112), *(void *)(v0 + 152));
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474800);
    if (swift_dynamicCast())
    {
      sub_19EECDD70((long long *)(v0 + 64), (_OWORD *)(v0 + 16));
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
      sub_19F1DADCC();
      swift_allocObject();
      sub_19F1DADBC();
      uint64_t v7 = sub_19F1DADAC();
      uint64_t v9 = v8;
      uint64_t v10 = *(void **)(v0 + 144);
      swift_release();
      *(void *)(v0 + 184) = v9;
      *(void *)(v0 + 192) = v7;
      uint64_t v11 = v10 + 10;
      uint64_t v12 = v10[13];
      uint64_t v13 = v10[14];
      __swift_project_boxed_opaque_existential_1(v11, v12);
      uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 16)
                                                                                         + **(int **)(v13 + 16));
      uint64_t v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_19F0E6D98;
      return v15(v3, v4, v7, v9, v12, v13);
    }
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
    swift_bridgeObjectRelease();
    sub_19EEBD664(v0 + 64, &qword_1E9474810);
  }
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_19F0E6D98()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_19F0E6EB0, 0, 0);
}

uint64_t sub_19F0E6EB0()
{
  sub_19EEA072C(v0[24], v0[23]);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t _IntentReplayDispatcher.perform<A, B>(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[17] = a6;
  v7[18] = v6;
  v7[15] = a4;
  v7[16] = a5;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  v7[19] = *(void *)(a4 - 8);
  v7[20] = swift_task_alloc();
  uint64_t v8 = sub_19F1DCAAC();
  v7[21] = v8;
  v7[22] = *(void *)(v8 - 8);
  v7[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F0E704C, 0, 0);
}

uint64_t sub_19F0E704C()
{
  sub_19F0E7D54(*(void *)(v0 + 144), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_19EEBB420((long long *)(v0 + 56), v0 + 16);
    uint64_t v1 = swift_task_alloc();
    *(void *)(v0 + 192) = v1;
    *(void *)uint64_t v1 = v0;
    *(void *)(v1 + 8) = sub_19F0E71B8;
    uint64_t v2 = *(void *)(v0 + 184);
    uint64_t v3 = *(void *)(v0 + 104);
    long long v4 = *(_OWORD *)(v0 + 128);
    *(void *)(v1 + 96) = *(void *)(v0 + 144);
    *(_OWORD *)(v1 + 80) = v4;
    *(void *)(v1 + 64) = v2;
    *(void *)(v1 + 72) = v3;
    return MEMORY[0x1F4188298](sub_19F0E650C, 0, 0);
  }
  else
  {
    sub_19EEBD664(v0 + 56, qword_1E946CC60);
    sub_19F0E7DBC();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_19F0E71B8()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_19F0E77C8;
  }
  else
  {
    uint64_t v1 = sub_19F0E72D0;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_19F0E72D0()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[22] + 8))(v1, v0[21]);
    uint64_t v4 = v0[5];
    uint64_t v5 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v4);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 16)
                                                                                                + **(int **)(v5 + 16));
    uint64_t v6 = (void *)swift_task_alloc();
    v0[25] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_19F0E74AC;
    uint64_t v7 = v0[20];
    uint64_t v8 = v0[16];
    uint64_t v9 = v0[17];
    uint64_t v10 = v0[13];
    uint64_t v11 = v0[14];
    return v14(v7, v10, v11, v8, v9, v4, v5);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[12], v1, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_19F0E74AC()
{
  uint64_t v2 = (void *)*v1;
  v2[26] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F0E7918, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[27] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_19F0E7628;
    uint64_t v4 = v2[17];
    uint64_t v5 = v2[16];
    uint64_t v6 = v2[13];
    uint64_t v7 = v2[20];
    return _IntentReplayDispatcher.cache<A>(result:for:)(v7, v6, v5, v4);
  }
}

uint64_t sub_19F0E7628()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19F0E7724, 0, 0);
}

uint64_t sub_19F0E7724()
{
  (*(void (**)(void, void, void))(v0[19] + 32))(v0[12], v0[20], v0[15]);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_19F0E77C8()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[23], 1, 1, v0[15]);
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 16)
                                                                                              + **(int **)(v2 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[25] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_19F0E74AC;
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[17];
  uint64_t v7 = v0[13];
  uint64_t v8 = v0[14];
  return v10(v4, v7, v8, v5, v6, v1, v2);
}

uint64_t sub_19F0E7918()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0E7990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_19EEB8A6C;
  return _IntentReplayDispatcher.perform<A, B>(_:asPartOf:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19F0E7A68(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_19F1DB04C();
  if (!result || (uint64_t result = sub_19F1DB07C(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_19F1DB06C();
      sub_19F1DBADC();
      sub_19F0E829C(&qword_1E9474850, MEMORY[0x1E4F25170]);
      return sub_19F1DBA9C();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19F0E7B48()
{
  if (qword_1EB392A90 != -1) {
    swift_once();
  }
  sub_19EE56B20(0xD000000000000012, 0x800000019F272390);
  sub_19EE56B20(0x4D6E496568636163, 0xED000079726F6D65);
  sub_19EF6ECBC(0xD000000000000011, 0x800000019F2723B0);
  if (sub_19EF6F1E8(0xD000000000000016, 0x800000019F2723D0)) {
    swift_bridgeObjectRelease();
  }
  if (!sub_19EF6F204(0xD000000000000019, 0x800000019F2723F0)) {
    sub_19EE8F204(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRelease();
  char v0 = sub_19EE56B20(0xD000000000000012, 0x800000019F272390);
  char v1 = sub_19EE56B20(0x4D6E496568636163, 0xED000079726F6D65);
  sub_19EF6ECBC(0xD000000000000011, 0x800000019F2723B0);
  sub_19EF6F1E8(0xD000000000000016, 0x800000019F2723D0);
  if (!sub_19EF6F204(0xD000000000000019, 0x800000019F2723F0)) {
    sub_19EE8F204(MEMORY[0x1E4FBC860]);
  }
  return v0 & 1 | ((v1 & 1) << 8);
}

uint64_t sub_19F0E7D14()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F0E7D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946CC60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_19F0E7DBC()
{
  unint64_t result = qword_1E9474820;
  if (!qword_1E9474820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474820);
  }
  return result;
}

uint64_t destroy for _IntentReplayDispatcher(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
}

uint64_t initializeWithCopy for _IntentReplayDispatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  long long v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 80, a2 + 80);
  return a1;
}

uint64_t assignWithCopy for _IntentReplayDispatcher(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)a2 + 10);
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for _IntentReplayDispatcher(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for _IntentReplayDispatcher(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _IntentReplayDispatcher(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _IntentReplayDispatcher()
{
  return &type metadata for _IntentReplayDispatcher;
}

unsigned char *storeEnumTagSinglePayload for IntentReplayDispatcherError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F0E820CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentReplayDispatcherError()
{
  return &type metadata for IntentReplayDispatcherError;
}

unint64_t sub_19F0E8248()
{
  unint64_t result = qword_1E9474830;
  if (!qword_1E9474830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474830);
  }
  return result;
}

uint64_t sub_19F0E829C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19F0E82E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

JetEngine::PackagingLog::LogTypes __swiftcall PackagingLog.LogTypes.init(rawValue:)(JetEngine::PackagingLog::LogTypes rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t PackagingLog.LogTypes.rawValue.getter()
{
  return *(void *)v0;
}

void static PackagingLog.LogTypes.debug.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static PackagingLog.LogTypes.info.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static PackagingLog.LogTypes.warning.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static PackagingLog.LogTypes.error.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void sub_19F0E837C()
{
  uint64_t v0 = unk_1EF13B830;
  if ((unk_1EF13B830 & ~qword_1EF13B828) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = qword_1EF13B838;
  if ((qword_1EF13B838 & ~(v0 | qword_1EF13B828)) == 0) {
    uint64_t v1 = 0;
  }
  qword_1E9474870 = v1 | v0 | qword_1EF13B828;
}

uint64_t static PackagingLog.LogTypes.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_1E9470208 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_1E9474870;
  return result;
}

void *sub_19F0E840C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_19F0E8420@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_19F0E8434@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_19F0E8448(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_19F0E8478@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_19F0E84A4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_19F0E84C8(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_19F0E84DC(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_19F0E84F0(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_19F0E8504@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_19F0E8518(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_19F0E852C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_19F0E8540(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_19F0E8554()
{
  return *v0 == 0;
}

uint64_t sub_19F0E8564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_19F0E857C(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_19F0E8594()
{
  if (qword_1E9470208 != -1) {
    uint64_t result = swift_once();
  }
  qword_1E9474878 = qword_1E9474870;
  return result;
}

uint64_t static PackagingLog.enabledLogTypes.getter@<X0>(void *a1@<X8>)
{
  if (qword_1E9470210 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  *a1 = qword_1E9474878;
  return result;
}

uint64_t static PackagingLog.enabledLogTypes.setter(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (qword_1E9470210 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  qword_1E9474878 = v1;
  return result;
}

uint64_t (*static PackagingLog.enabledLogTypes.modify())()
{
  if (qword_1E9470210 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess_0;
}

unint64_t sub_19F0E8768()
{
  unint64_t result = qword_1E9474880;
  if (!qword_1E9474880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474880);
  }
  return result;
}

unint64_t sub_19F0E87C0()
{
  unint64_t result = qword_1E9474888;
  if (!qword_1E9474888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474888);
  }
  return result;
}

unint64_t sub_19F0E8818()
{
  unint64_t result = qword_1E9474890;
  if (!qword_1E9474890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474890);
  }
  return result;
}

unint64_t sub_19F0E8870()
{
  unint64_t result = qword_1E9474898;
  if (!qword_1E9474898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9474898);
  }
  return result;
}

ValueMetadata *type metadata accessor for PackagingLog()
{
  return &type metadata for PackagingLog;
}

ValueMetadata *type metadata accessor for PackagingLog.LogTypes()
{
  return &type metadata for PackagingLog.LogTypes;
}

uint64_t sub_19F0E88E4(uint64_t a1, uint64_t a2)
{
  return sub_19F0E88FC(a1, a2, 0);
}

uint64_t sub_19F0E88EC(uint64_t a1, uint64_t a2)
{
  return sub_19F0E88FC(a1, a2, 2);
}

uint64_t sub_19F0E88F4(uint64_t a1, uint64_t a2)
{
  return sub_19F0E88FC(a1, a2, 1);
}

uint64_t sub_19F0E88FC(uint64_t a1, uint64_t a2, char a3)
{
  if (qword_1E946FCD0 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_1EB3919C0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  id v8 = v6;
  uint64_t v25 = sub_19EEC3F3C(0, 1, 0, MEMORY[0x1E4FBC860]);
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v9);
  v24[3] = MEMORY[0x1E4FBB1A0];
  v24[0] = a1;
  v24[1] = a2;
  sub_19EEBCD00((uint64_t)v24, (uint64_t)v20);
  long long v18 = 0u;
  long long v19 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v20, (uint64_t)&v18);
  char v23 = 0;
  long long v21 = v18;
  long long v22 = v19;
  uint64_t v10 = v25;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_19EEC3F3C(0, v10[2] + 1, 1, v10);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  v10[2] = v12 + 1;
  uint64_t v13 = &v10[5 * v12];
  long long v14 = v21;
  long long v15 = v22;
  *((unsigned char *)v13 + 64) = v23;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  uint64_t v25 = v10;
  sub_19EEBCB4C((uint64_t)v24);
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v7 + 32) = v25;
  *(void *)&long long v21 = v8;
  LOBYTE(v18) = a3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v18);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0E8ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a3;
  v5[8] = a4;
  v5[5] = a1;
  v5[6] = a2;
  v5[9] = *v4;
  return MEMORY[0x1F4188298](sub_19F0E8B08, 0, 0);
}

uint64_t sub_19F0E8B08()
{
  if (v0[8])
  {
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    uint64_t v1 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    id v2 = objc_msgSend((id)swift_unknownObjectRetain(), sel_doubleForKey_, v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390C60);
    uint64_t v3 = (void *)swift_allocObject();
    v0[10] = v3;
    _OWORD v3[2] = v2;
    v3[3] = sub_19EEA41B0;
    void v3[4] = 0;

    swift_unknownObjectRelease();
    Swift::String v9 = (uint64_t (*)(uint64_t))((char *)&dword_1E9473318 + dword_1E9473318);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[11] = v4;
    *uint64_t v4 = v0;
    uint64_t v5 = sub_19F0E8D70;
  }
  else
  {
    sub_19F1DBEFC();
    uint64_t v6 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend((id)swift_unknownObjectRetain(), sel_doubleForKey_, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390C60);
    uint64_t v3 = (void *)swift_allocObject();
    v0[12] = v3;
    _OWORD v3[2] = v7;
    v3[3] = sub_19EEA41B0;
    void v3[4] = 0;

    swift_unknownObjectRelease();
    Swift::String v9 = (uint64_t (*)(uint64_t))((char *)&dword_1E9473318 + dword_1E9473318);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    *uint64_t v4 = v0;
    uint64_t v5 = sub_19EE29140;
  }
  v4[1] = v5;
  return v9((uint64_t)v3);
}

uint64_t sub_19F0E8D70(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 32) = a2;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = a1;
  *(unsigned char *)(v3 + 112) = a2;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](sub_19F0E8E94, 0, 0);
}

uint64_t sub_19F0E8E94()
{
  if (*(unsigned char *)(v0 + 112))
  {
    sub_19F1DBEFC();
    uint64_t v4 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend((id)swift_unknownObjectRetain(), sel_doubleForKey_, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390C60);
    uint64_t v6 = (void *)swift_allocObject();
    *(void *)(v0 + 96) = v6;
    v6[2] = v5;
    void v6[3] = sub_19EEA41B0;
    v6[4] = 0;

    swift_unknownObjectRelease();
    id v8 = (uint64_t (*)(uint64_t))((char *)&dword_1E9473318 + dword_1E9473318);
    id v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v7;
    *id v7 = v0;
    v7[1] = sub_19EE29140;
    return v8((uint64_t)v6);
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 24);
    id v2 = *(uint64_t (**)(uint64_t, void))(v0 + 8);
    return v2(v1, 0);
  }
}

uint64_t sub_19F0E9038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = *v4;
  uint64_t v6 = sub_19EE6BC54(a1, a2, a3, a4);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRetain();
  unint64_t v8 = 0;
  while (1)
  {
    uint64_t v9 = v6 + 8 * v8;
    uint64_t v10 = *(void **)(v9 + 32);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = v10;
    id v12 = objc_msgSend(v5, sel_integerForKey_, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3910B0);
    uint64_t v13 = (void *)swift_allocObject();
    _OWORD v13[2] = v12;
    v13[3] = sub_19EECD0C8;
    v13[4] = 0;
    swift_unknownObjectRelease();
    sub_19EEA4600((uint64_t)v13);
    LOBYTE(v12) = v14;
    swift_bridgeObjectRelease();

    uint64_t result = swift_release();
    if ((v12 & 1) == 0) {
      break;
    }
    if (v7 == ++v8) {
      goto LABEL_7;
    }
  }
  if (v7 == v8)
  {
LABEL_7:
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  if (v8 >= *(void *)(v6 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = *(void **)(v9 + 32);
    swift_unknownObjectRetain();
    id v18 = v17;
    id v19 = objc_msgSend(v5, sel_integerForKey_, v18);
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v19;
    v20[3] = sub_19EECD0C8;
    v20[4] = 0;
    swift_unknownObjectRelease();
    uint64_t v16 = sub_19EEA4600((uint64_t)v20);
    char v22 = v21;

    uint64_t result = swift_release();
    if ((v22 & 1) == 0)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_19F0E9230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = *v4;
  uint64_t v6 = sub_19EE6BC54(a1, a2, a3, a4);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRetain();
  unint64_t v8 = 0;
  while (1)
  {
    uint64_t v9 = v6 + 8 * v8;
    uint64_t v10 = *(void **)(v9 + 32);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = v10;
    id v12 = objc_msgSend(v5, sel_doubleForKey_, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390C60);
    uint64_t v13 = (void *)swift_allocObject();
    _OWORD v13[2] = v12;
    v13[3] = sub_19EEA41B0;
    v13[4] = 0;
    swift_unknownObjectRelease();
    sub_19EEA4600((uint64_t)v13);
    LOBYTE(v12) = v14;
    swift_bridgeObjectRelease();

    uint64_t result = swift_release();
    if ((v12 & 1) == 0) {
      break;
    }
    if (v7 == ++v8) {
      goto LABEL_7;
    }
  }
  if (v7 == v8)
  {
LABEL_7:
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  if (v8 >= *(void *)(v6 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = *(void **)(v9 + 32);
    swift_unknownObjectRetain();
    id v18 = v17;
    id v19 = objc_msgSend(v5, sel_doubleForKey_, v18);
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v19;
    v20[3] = sub_19EEA41B0;
    v20[4] = 0;
    swift_unknownObjectRelease();
    uint64_t v16 = sub_19EEA4600((uint64_t)v20);
    char v22 = v21;

    uint64_t result = swift_release();
    if ((v22 & 1) == 0)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  __break(1u);
  return result;
}

uint64_t PageRenderField<>.callAsFunction(_:for:at:)(void *a1, uint64_t a2, uint64_t a3, double *a4)
{
  uint64_t v69 = sub_19F1DB85C();
  uint64_t v66 = *(void *)(v69 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v69);
  id v11 = &v59[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  long long v73 = &v59[-v12];
  uint64_t v13 = sub_19F1DB89C();
  uint64_t v71 = *(void *)(v13 - 8);
  uint64_t v72 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v70 = &v59[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v15 = *a4;
  uint64_t v16 = *((void *)a4 + 1);
  uint64_t v17 = *(const char **)v4;
  uint64_t v18 = *(void *)(v4 + 8);
  int v19 = *(unsigned __int8 *)(v4 + 16);
  if (qword_1EB390588 != -1)
  {
    double v57 = v15;
    uint64_t v58 = v16;
    swift_once();
    uint64_t v16 = v58;
    double v15 = v57;
  }
  uint64_t v65 = v11;
  uint64_t v20 = qword_1EB394D28;
  v78[0] = a2;
  v78[1] = a3;
  *(double *)&v78[2] = v15;
  v78[3] = v16;
  v78[4] = v17;
  v78[5] = v18;
  char v79 = v19;
  long long v80 = a1;
  double v21 = v15;
  uint64_t v67 = v18;
  uint64_t v22 = a2;
  uint64_t v23 = v16;
  sub_19F0EB610((uint64_t)v78);
  sub_19EE83A30((uint64_t)v78, (uint64_t)v77);
  uint64_t v24 = *(void **)(v20 + 32);
  swift_bridgeObjectRetain();
  id v25 = a1;
  objc_msgSend(v24, sel_lock);
  sub_19EE836C4(v20, (uint64_t)v77);
  objc_msgSend(v24, sel_unlock);
  swift_bridgeObjectRelease();

  long long v68 = (char *)v17;
  LODWORD(v67) = v19;
  uint64_t v26 = sub_19F1DCD2C();
  uint64_t v62 = v23;
  double v63 = v21;
  double v75 = v21;
  uint64_t v76 = v23;
  sub_19EE83F28(v26, v27, v22, a3, (uint64_t *)&v75);
  swift_bridgeObjectRelease();
  unint64_t v28 = a3;
  if (qword_1EB390590 != -1) {
    swift_once();
  }
  uint64_t v29 = v72;
  uint64_t v30 = __swift_project_value_buffer(v72, (uint64_t)qword_1EB394D30);
  uint64_t v31 = v70;
  uint64_t v32 = v71;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v71 + 16))(v70, v30, v29);
  uint64_t v64 = v22;
  sub_19F1DBFCC();
  unint64_t v33 = v73;
  sub_19F1DB86C();
  sub_19EE83670();
  sub_19EE84120();
  sub_19EE83660(v34);
  swift_bridgeObjectRetain();
  id v35 = a1;
  swift_bridgeObjectRetain();
  id v36 = a1;
  uint64_t v37 = sub_19F1DB87C();
  int v38 = sub_19F1DC99C();
  if ((sub_19F1DCA6C() & 1) == 0)
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v33, v69);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v32 + 8))(v31, v29);
  }
  os_log_t v61 = v37;
  int v60 = v38;
  if (v67)
  {
    if ((unint64_t)v68 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v68 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v40 = v69;
      uint64_t v41 = v73;
      if (v68 >> 16 <= 0x10)
      {
        long long v68 = &v81;
        uint64_t v39 = v66;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v39 = v66;
  if (!v68)
  {
LABEL_20:

    uint64_t result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  uint64_t v40 = v69;
  uint64_t v41 = v73;
LABEL_14:
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v39 + 16))(v65, v41, v40);
  uint64_t v43 = swift_slowAlloc();
  uint64_t v66 = swift_slowAlloc();
  uint64_t v44 = swift_slowAlloc();
  uint64_t v67 = v44;
  *(_DWORD *)uint64_t v43 = 134218754;
  uint64_t v45 = v62;
  uint64_t v46 = *(void *)&v63;
  uint64_t v74 = v44;
  double v75 = v63;
  uint64_t v76 = v62;
  sub_19F10F5E0();
  double v75 = v47;
  sub_19F1DCB3C();
  *(_WORD *)(v43 + 12) = 2080;
  swift_bridgeObjectRetain();
  double v75 = COERCE_DOUBLE(sub_19EEAD23C(v64, v28, &v74));
  sub_19F1DCB3C();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v43 + 22) = 2048;
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  double v75 = (double)v45 / *(double *)&qword_1EB392B98 + (double)v46;
  sub_19F1DCB3C();
  *(_WORD *)(v43 + 32) = 2112;
  id v48 = a1;
  *(double *)&uint64_t v49 = COERCE_DOUBLE(_swift_stdlib_bridgeErrorToNSError());
  double v75 = *(double *)&v49;
  sub_19F1DCB3C();
  uint64_t v50 = v66;
  *(double *)uint64_t v66 = *(double *)&v49;

  uint64_t v51 = v65;
  os_signpost_id_t v52 = sub_19F1DB83C();
  os_log_t v53 = v61;
  _os_signpost_emit_with_name_impl(&dword_19EE14000, v61, (os_signpost_type_t)v60, v52, v68, "%{signpost.description:event_time}lluid=%s, instant=%f, value=%@", (uint8_t *)v43, 0x2Au);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E628);
  swift_arrayDestroy();
  MEMORY[0x19F3C9470](v50, -1, -1);
  uint64_t v54 = v67;
  swift_arrayDestroy();
  MEMORY[0x19F3C9470](v54, -1, -1);
  MEMORY[0x19F3C9470](v43, -1, -1);

  uint64_t v55 = *(void (**)(unsigned char *, uint64_t))(v39 + 8);
  uint64_t v56 = v69;
  v55(v73, v69);
  (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v70, v72);
  return ((uint64_t (*)(unsigned char *, uint64_t))v55)(v51, v56);
}

uint64_t PageRenderField<>.callAsFunction(_:for:at:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v60 = a6;
  unint64_t v57 = a3;
  uint64_t v71 = a1;
  uint64_t v72 = a2;
  uint64_t v8 = *(void *)(a5 + 16);
  uint64_t v65 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_19F1DB85C();
  uint64_t v56 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v55 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v70 = (char *)&v53 - v13;
  uint64_t v14 = sub_19F1DB89C();
  uint64_t v62 = *(void *)(v14 - 8);
  uint64_t v63 = v14;
  MEMORY[0x1F4188790](v14);
  os_log_t v61 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a4;
  unint64_t v68 = a4[1];
  uint64_t v69 = v16;
  uint64_t v17 = *(const char **)v6;
  uint64_t v18 = *(void *)(v6 + 8);
  int v67 = *(unsigned __int8 *)(v6 + 16);
  if (qword_1EB390588 != -1) {
    swift_once();
  }
  uint64_t v64 = v10;
  uint64_t v19 = qword_1EB394D28;
  unint64_t v20 = v57;
  swift_bridgeObjectRetain();
  sub_19F1DC0CC();
  uint64_t v66 = v8;
  v77[0] = v72;
  v77[1] = v20;
  unint64_t v22 = v68;
  double v21 = *(double *)&v69;
  v77[2] = v69;
  v77[3] = v68;
  v77[4] = v17;
  v77[5] = v18;
  char v78 = v67;
  double v79 = v74;
  unint64_t v80 = v75;
  sub_19EE81A70((uint64_t)v77);
  sub_19EE83A30((uint64_t)v77, (uint64_t)v76);
  uint64_t v23 = *(void **)(v19 + 32);
  objc_msgSend(v23, sel_lock);
  sub_19EE836C4(v19, (uint64_t)v76);
  objc_msgSend(v23, sel_unlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v58 = (char *)v17;
  uint64_t v24 = sub_19F1DCD2C();
  double v74 = v21;
  unint64_t v75 = v22;
  sub_19EE83F28(v24, v25, v72, v20, (uint64_t *)&v74);
  swift_bridgeObjectRelease();
  uint64_t v26 = v66;
  if (qword_1EB390590 != -1) {
    swift_once();
  }
  uint64_t v27 = v63;
  uint64_t v28 = __swift_project_value_buffer(v63, (uint64_t)qword_1EB394D30);
  uint64_t v29 = v61;
  uint64_t v30 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v28, v27);
  sub_19F1DBFCC();
  uint64_t v31 = v70;
  sub_19F1DB86C();
  sub_19EE83670();
  sub_19EE84120();
  sub_19EE83660(v32);
  unint64_t v33 = v64;
  uint64_t v34 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v71, v26);
  swift_bridgeObjectRetain_n();
  id v35 = sub_19F1DB87C();
  LODWORD(v71) = sub_19F1DC99C();
  if ((sub_19F1DCA6C() & 1) == 0)
  {

    (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v26);
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v59);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v29, v27);
  }
  os_log_t v54 = v35;
  if (v67)
  {
    uint64_t v38 = v68;
    uint64_t v37 = v69;
    if ((unint64_t)v58 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v58 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v39 = v59;
      uint64_t v40 = v70;
      uint64_t v41 = v55;
      if (v58 >> 16 <= 0x10)
      {
        uint64_t v58 = &v81;
        uint64_t v36 = v56;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v36 = v56;
  uint64_t v38 = v68;
  uint64_t v37 = v69;
  if (!v58)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
    uint64_t result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  uint64_t v39 = v59;
  uint64_t v40 = v70;
  uint64_t v41 = v55;
LABEL_14:
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v41, v40, v39);
  uint64_t v43 = swift_slowAlloc();
  uint64_t v69 = swift_slowAlloc();
  v73[0] = v69;
  *(_DWORD *)uint64_t v43 = 134218754;
  double v74 = *(double *)&v37;
  unint64_t v75 = v38;
  sub_19F10F5E0();
  double v74 = v44;
  sub_19F1DCB3C();
  *(_WORD *)(v43 + 12) = 2080;
  swift_bridgeObjectRetain();
  double v74 = COERCE_DOUBLE(sub_19EEAD23C(v72, v20, v73));
  sub_19F1DCB3C();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v43 + 22) = 2048;
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  double v74 = (double)v38 / *(double *)&qword_1EB392B98 + (double)v37;
  sub_19F1DCB3C();
  *(_WORD *)(v43 + 32) = 2080;
  uint64_t v45 = v64;
  uint64_t v46 = v66;
  sub_19F1DC0CC();
  double v74 = COERCE_DOUBLE(sub_19EEAD23C(*(uint64_t *)&v74, v75, v73));
  sub_19F1DCB3C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v46);
  double v47 = v55;
  os_signpost_id_t v48 = sub_19F1DB83C();
  os_log_t v49 = v54;
  _os_signpost_emit_with_name_impl(&dword_19EE14000, v54, (os_signpost_type_t)v71, v48, v58, "%{signpost.description:event_time}lluid=%s, instant=%f, value=%s", (uint8_t *)v43, 0x2Au);
  uint64_t v50 = v69;
  swift_arrayDestroy();
  MEMORY[0x19F3C9470](v50, -1, -1);
  MEMORY[0x19F3C9470](v43, -1, -1);

  uint64_t v51 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v52 = v59;
  v51(v70, v59);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
  return ((uint64_t (*)(char *, uint64_t))v51)(v47, v52);
}

void PageRenderField<>.init(timestampWithName:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_19F1DCD2C();
  char v8 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    sub_19F19AF34((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  }
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 1;
}

void PageRenderField<>.init(intervalWithBaseName:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_19F1DCD2C();
  char v8 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if (v8) {
    sub_19F19A2AC((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x54uLL);
  }
  sub_19F1DCD2C();
  char v9 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if (v9) {
    sub_19F19A8F0((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x56uLL);
  }
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 1;
}

void PageRenderField<>.callAsFunction(for:at:)()
{
}

void PageRenderField<>.init(enum:withName:)(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 1;
}

uint64_t PageRenderField<>.callAsFunction(_:for:at:)(const void *a1, uint64_t a2, uint64_t a3, double *a4)
{
  uint64_t v9 = sub_19F1DB85C();
  uint64_t v67 = *(void *)(v9 - 8);
  uint64_t v68 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v64 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v70 = (char *)&v60 - v12;
  uint64_t v13 = sub_19F1DB89C();
  uint64_t v71 = *(void *)(v13 - 8);
  uint64_t v72 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v69 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v77, a1, sizeof(v77));
  double v16 = *a4;
  uint64_t v15 = *((void *)a4 + 1);
  uint64_t v18 = *(const char **)v4;
  uint64_t v17 = *(void *)(v4 + 8);
  int v19 = *(unsigned __int8 *)(v4 + 16);
  if (qword_1EB390588 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1EB394D28;
  v78[0] = a2;
  v78[1] = a3;
  *(double *)&v78[2] = v16;
  v78[3] = v15;
  v78[4] = v18;
  v78[5] = v17;
  LOBYTE(v78[6]) = v19;
  uint64_t v65 = v17;
  uint64_t v21 = v15;
  memcpy(&v78[7], a1, 0x158uLL);
  memcpy(v79, v78, sizeof(v79));
  sub_19F0EB6EC((uint64_t)v79);
  sub_19EE83A30((uint64_t)v79, (uint64_t)v76);
  uint64_t v22 = a2;
  uint64_t v23 = *(void **)(v20 + 32);
  swift_bridgeObjectRetain();
  sub_19EEB1F44((uint64_t)v77);
  objc_msgSend(v23, sel_lock);
  sub_19EE836C4(v20, (uint64_t)v76);
  objc_msgSend(v23, sel_unlock);
  sub_19F0EB7C8((uint64_t)v78);
  uint64_t v66 = (char *)v18;
  LODWORD(v65) = v19;
  uint64_t v24 = sub_19F1DCD2C();
  double v62 = v16;
  double v74 = v16;
  uint64_t v75 = v21;
  uint64_t v25 = v21;
  sub_19EE83F28(v24, v26, v22, a3, (uint64_t *)&v74);
  swift_bridgeObjectRelease();
  unint64_t v27 = a3;
  if (qword_1EB390590 != -1) {
    swift_once();
  }
  uint64_t v28 = v72;
  uint64_t v29 = __swift_project_value_buffer(v72, (uint64_t)qword_1EB394D30);
  uint64_t v30 = v71;
  uint64_t v31 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v69, v29, v28);
  sub_19F1DBFCC();
  uint64_t v32 = v70;
  sub_19F1DB86C();
  sub_19EE83670();
  sub_19EE84120();
  sub_19EE83660(v33);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  sub_19EEB1F44((uint64_t)v77);
  swift_bridgeObjectRetain();
  sub_19EEB1F44((uint64_t)v77);
  swift_bridgeObjectRetain();
  sub_19EEB1F44((uint64_t)v77);
  uint64_t v34 = sub_19F1DB87C();
  int v63 = sub_19F1DC99C();
  if ((sub_19F1DCA6C() & 1) == 0)
  {
    sub_19EEB1ECC((uint64_t)v77);

    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v32, v68);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v31, v28);
  }
  os_log_t v61 = v34;
  if (v65)
  {
    if ((unint64_t)v66 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v66 >> 11 == 27)
      {
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      uint64_t v36 = v68;
      uint64_t v37 = v64;
      if (v66 >> 16 <= 0x10)
      {
        uint64_t v66 = &v80;
        uint64_t v35 = v67;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v35 = v67;
  if (!v66)
  {
LABEL_46:
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    sub_19EEB1ECC((uint64_t)v77);
    uint64_t result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  uint64_t v36 = v68;
  uint64_t v37 = v64;
LABEL_14:
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v37, v32, v36);
  uint64_t v39 = swift_slowAlloc();
  uint64_t v40 = swift_slowAlloc();
  uint64_t v65 = v40;
  *(_DWORD *)uint64_t v39 = 134221058;
  uint64_t v41 = *(void *)&v62;
  uint64_t v73 = v40;
  double v74 = v62;
  uint64_t v75 = v25;
  sub_19F10F5E0();
  double v74 = v42;
  sub_19F1DCB3C();
  *(_WORD *)(v39 + 12) = 2080;
  swift_bridgeObjectRetain();
  double v74 = COERCE_DOUBLE(sub_19EEAD23C(v22, v27, &v73));
  sub_19F1DCB3C();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v39 + 22) = 2048;
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  double v74 = (double)v25 / *(double *)&qword_1EB392B98 + (double)v41;
  sub_19F1DCB3C();
  *(_WORD *)(v39 + 32) = 2080;
  if (v77[1]) {
    uint64_t v43 = v77[0];
  }
  else {
    uint64_t v43 = 0;
  }
  if (v77[1]) {
    unint64_t v44 = v77[1];
  }
  else {
    unint64_t v44 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  double v74 = COERCE_DOUBLE(sub_19EEAD23C(v43, v44, &v73));
  sub_19F1DCB3C();
  swift_bridgeObjectRelease();
  sub_19EEB1ECC((uint64_t)v77);
  sub_19EEB1ECC((uint64_t)v77);
  *(_WORD *)(v39 + 42) = 2080;
  if (v77[3]) {
    uint64_t v45 = v77[2];
  }
  else {
    uint64_t v45 = 0;
  }
  if (v77[3]) {
    unint64_t v46 = v77[3];
  }
  else {
    unint64_t v46 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  double v74 = COERCE_DOUBLE(sub_19EEAD23C(v45, v46, &v73));
  sub_19F1DCB3C();
  swift_bridgeObjectRelease();
  sub_19EEB1ECC((uint64_t)v77);
  sub_19EEB1ECC((uint64_t)v77);
  *(_WORD *)(v39 + 52) = 2048;
  double v47 = *(double *)&v77[4];
  if (LOBYTE(v77[5])) {
    double v47 = 0.0;
  }
  double v74 = v47;
  sub_19F1DCB3C();
  sub_19EEB1ECC((uint64_t)v77);
  sub_19EEB1ECC((uint64_t)v77);
  *(_WORD *)(v39 + 62) = 2048;
  double v48 = *(double *)&v77[6];
  if (LOBYTE(v77[7])) {
    double v48 = 0.0;
  }
  double v74 = v48;
  sub_19F1DCB3C();
  sub_19EEB1ECC((uint64_t)v77);
  sub_19EEB1ECC((uint64_t)v77);
  *(_WORD *)(v39 + 72) = 2048;
  double v49 = *(double *)&v77[8];
  if (LOBYTE(v77[9])) {
    double v49 = 0.0;
  }
  double v74 = v49;
  sub_19F1DCB3C();
  sub_19EEB1ECC((uint64_t)v77);
  sub_19EEB1ECC((uint64_t)v77);
  *(_WORD *)(v39 + 82) = 1024;
  sub_19EEB1ECC((uint64_t)v77);
  LODWORD(v74) = BYTE1(v77[9]) & 1;
  sub_19F1DCB3C();
  sub_19EEB1ECC((uint64_t)v77);
  *(_WORD *)(v39 + 88) = 2048;
  double v50 = *(double *)&v77[10];
  if (LOBYTE(v77[11])) {
    double v50 = 0.0;
  }
  double v74 = v50;
  sub_19F1DCB3C();
  sub_19EEB1ECC((uint64_t)v77);
  sub_19EEB1ECC((uint64_t)v77);
  *(_WORD *)(v39 + 98) = 2048;
  double v51 = *(double *)&v77[12];
  if (LOBYTE(v77[13])) {
    double v51 = 0.0;
  }
  double v74 = v51;
  sub_19F1DCB3C();
  sub_19EEB1ECC((uint64_t)v77);
  sub_19EEB1ECC((uint64_t)v77);
  *(_WORD *)(v39 + 108) = 2048;
  double v52 = *(double *)&v77[14];
  if (LOBYTE(v77[15])) {
    double v52 = 0.0;
  }
  double v74 = v52;
  sub_19F1DCB3C();
  sub_19EEB1ECC((uint64_t)v77);
  sub_19EEB1ECC((uint64_t)v77);
  *(_WORD *)(v39 + 118) = 2048;
  double v53 = *(double *)&v77[16];
  if (LOBYTE(v77[17])) {
    double v53 = 0.0;
  }
  double v74 = v53;
  sub_19F1DCB3C();
  sub_19EEB1ECC((uint64_t)v77);
  sub_19EEB1ECC((uint64_t)v77);
  os_log_t v54 = v64;
  os_signpost_id_t v55 = sub_19F1DB83C();
  os_log_t v56 = v61;
  _os_signpost_emit_with_name_impl(&dword_19EE14000, v61, (os_signpost_type_t)v63, v55, v66, "%{signpost.description:event_time}lluid=%s, instant=%f, clientCorrelationKey=%s, pageURL=%s, requestStartTime=%f, responseStartTime=%f, responseEndTime=%f, responseWasCached=%{BOOL}d, parseStartTime=%f, parseEndTime=%f, modelConstructionStartTime=%f, modelConstructionEndTime=%f", (uint8_t *)v39, 0x80u);
  uint64_t v57 = v65;
  swift_arrayDestroy();
  MEMORY[0x19F3C9470](v57, -1, -1);
  MEMORY[0x19F3C9470](v39, -1, -1);

  uint64_t v58 = v68;
  uint64_t v59 = *(void (**)(char *, uint64_t))(v67 + 8);
  v59(v70, v68);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v72);
  return ((uint64_t (*)(char *, uint64_t))v59)(v54, v58);
}

uint64_t _s9JetEngine15PageRenderFieldVAASbRszrlE12flagWithNameACySbGs12StaticStringV_tcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 1;
  return result;
}

JetEngine::PagePreloadStatus __swiftcall PagePreloadStatus.init(rawValue:)(JetEngine::PagePreloadStatus rawValue)
{
  *uint64_t v1 = rawValue;
  return rawValue;
}

uint64_t PagePreloadStatus.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static PagePreloadStatus.full.getter(void *a1@<X8>)
{
  *a1 = 1819047270;
  a1[1] = 0xE400000000000000;
}

void static PagePreloadStatus.visible.getter(void *a1@<X8>)
{
  *a1 = 0x656C6269736976;
  a1[1] = 0xE700000000000000;
}

void static PagePreloadStatus.partial.getter(void *a1@<X8>)
{
  *a1 = 0x6C616974726170;
  a1[1] = 0xE700000000000000;
}

void static PagePreloadStatus.previouslyShown.getter(void *a1@<X8>)
{
  *a1 = 0x73756F6976657270;
  a1[1] = 0xEF6E776F6853796CLL;
}

void sub_19F0EB034()
{
  sub_19F1DCD2C();
  char v0 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0) {
    sub_19F19AF34((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  }
  *(void *)&xmmword_1EB390330 = "interstitialPageAppearTime";
  *((void *)&xmmword_1EB390330 + 1) = 26;
  byte_1EB390340 = 2;
  qword_1EB390348 = 0;
  byte_1EB390350 = 1;
}

double static PageRenderField<>._interstitialPageAppearTime.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_1EB390360 != -1) {
    swift_once();
  }
  char v2 = byte_1EB390340;
  uint64_t v3 = qword_1EB390348;
  char v4 = byte_1EB390350;
  double result = *(double *)&xmmword_1EB390330;
  *(_OWORD *)a1 = xmmword_1EB390330;
  *(unsigned char *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  return result;
}

void sub_19F0EB150()
{
  sub_19F1DCD2C();
  char v0 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0) {
    sub_19F19AF34((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  }
  *(void *)&xmmword_1EB394E10 = "pageEndTime";
  *((void *)&xmmword_1EB394E10 + 1) = 11;
  byte_1EB394E20 = 2;
  qword_1EB394E28 = 0;
  byte_1EB394E30 = 1;
}

void sub_19F0EB1F4()
{
  sub_19F1DCD2C();
  char v0 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0) {
    sub_19F19AF34((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  }
  *(void *)&xmmword_1EB394D98 = "pageInterruptTime";
  *((void *)&xmmword_1EB394D98 + 1) = 17;
  byte_1EB394DA8 = 2;
  qword_1EB394DB0 = 0;
  byte_1EB394DB8 = 1;
}

void sub_19F0EB298()
{
  sub_19F1DCD2C();
  char v0 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0) {
    sub_19F19AF34((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  }
  *(void *)&xmmword_1EB394D70 = "pageReappearTime";
  *((void *)&xmmword_1EB394D70 + 1) = 16;
  byte_1EB394D80 = 2;
  qword_1EB394D88 = 0;
  byte_1EB394D90 = 1;
}

void sub_19F0EB33C()
{
  sub_19F1DCD2C();
  char v0 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0) {
    sub_19F19AF34((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  }
  *(void *)&xmmword_1E9498A20 = "primaryDataSecureConnectionStartTime";
  *((void *)&xmmword_1E9498A20 + 1) = 36;
  byte_1E9498A30 = 2;
  qword_1E9498A38 = 0;
  byte_1E9498A40 = 1;
}

void sub_19F0EB3E0()
{
  sub_19F1DCD2C();
  char v0 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if (v0) {
    sub_19F19A2AC((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x54uLL);
  }
  sub_19F1DCD2C();
  char v1 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if (v1) {
    sub_19F19A8F0((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x56uLL);
  }
  *(void *)&xmmword_1E9498A48 = "primaryDataConnection";
  *((void *)&xmmword_1E9498A48 + 1) = 21;
  byte_1E9498A58 = 2;
  qword_1E9498A60 = 0;
  byte_1E9498A68 = 1;
}

void sub_19F0EB4F0()
{
  sub_19F1DCD2C();
  char v0 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if (v0) {
    sub_19F19A2AC((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x54uLL);
  }
  sub_19F1DCD2C();
  char v1 = sub_19F1DBFBC();
  swift_bridgeObjectRelease();
  if (v1) {
    sub_19F19A8F0((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x56uLL);
  }
  *(void *)&xmmword_1E9498A70 = "primaryDataDomainLookup";
  *((void *)&xmmword_1E9498A70 + 1) = 23;
  byte_1E9498A80 = 2;
  qword_1E9498A88 = 0;
  byte_1E9498A90 = 1;
}

char *sub_19F0EB600()
{
  return &v1;
}

uint64_t sub_19F0EB610(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 96) & 1;
  uint64_t v2 = *(void *)(result + 112) & 1;
  uint64_t v3 = *(void *)(result + 128) & 0xFF01;
  uint64_t v4 = *(void *)(result + 144) & 1;
  uint64_t v5 = *(void *)(result + 160) & 1;
  uint64_t v6 = *(void *)(result + 176) & 1;
  uint64_t v7 = *(void *)(result + 192) & 1;
  uint64_t v8 = *(void *)(result + 208) & 1;
  uint64_t v9 = *(void *)(result + 224) & 1;
  uint64_t v10 = *(void *)(result + 240) & 1;
  uint64_t v11 = *(void *)(result + 256) & 1;
  uint64_t v12 = *(void *)(result + 272) & 1;
  uint64_t v13 = *(void *)(result + 288) & 0xFF01;
  uint64_t v14 = *(void *)(result + 304) & 1;
  uint64_t v15 = *(void *)(result + 320) & 1;
  unint64_t v16 = *(unsigned __int8 *)(result + 376) | 0xE000000000000000;
  *(void *)(result + 48) &= 0x1FFuLL;
  *(void *)(result + 96) = v1;
  *(void *)(result + 112) = v2;
  *(void *)(result + 128) = v3;
  *(void *)(result + 144) = v4;
  *(void *)(result + 160) = v5;
  *(void *)(result + 176) = v6;
  *(void *)(result + 192) = v7;
  *(void *)(result + 208) = v8;
  *(void *)(result + 224) = v9;
  *(void *)(result + 240) = v10;
  *(void *)(result + 256) = v11;
  *(void *)(result + 272) = v12;
  *(void *)(result + 288) = v13;
  *(void *)(result + 304) = v14;
  *(void *)(result + 320) = v15;
  *(void *)(result + 376) = v16;
  return result;
}

uint64_t sub_19F0EB6EC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 96) & 1;
  uint64_t v2 = *(void *)(result + 112) & 1;
  uint64_t v3 = *(void *)(result + 128) & 0xFF01;
  uint64_t v4 = *(void *)(result + 144) & 1;
  uint64_t v5 = *(void *)(result + 160) & 1;
  uint64_t v6 = *(void *)(result + 176) & 1;
  uint64_t v7 = *(void *)(result + 192) & 1;
  uint64_t v8 = *(void *)(result + 208) & 1;
  uint64_t v9 = *(void *)(result + 224) & 1;
  uint64_t v10 = *(void *)(result + 240) & 1;
  uint64_t v11 = *(void *)(result + 256) & 1;
  uint64_t v12 = *(void *)(result + 272) & 1;
  uint64_t v13 = *(void *)(result + 288) & 0xFF01;
  uint64_t v14 = *(void *)(result + 304) & 1;
  uint64_t v15 = *(void *)(result + 320) & 1;
  unint64_t v16 = *(unsigned __int8 *)(result + 376) | 0xC000000000000000;
  *(void *)(result + 48) &= 0x1FFuLL;
  *(void *)(result + 96) = v1;
  *(void *)(result + 112) = v2;
  *(void *)(result + 128) = v3;
  *(void *)(result + 144) = v4;
  *(void *)(result + 160) = v5;
  *(void *)(result + 176) = v6;
  *(void *)(result + 192) = v7;
  *(void *)(result + 208) = v8;
  *(void *)(result + 224) = v9;
  *(void *)(result + 240) = v10;
  *(void *)(result + 256) = v11;
  *(void *)(result + 272) = v12;
  *(void *)(result + 288) = v13;
  *(void *)(result + 304) = v14;
  *(void *)(result + 320) = v15;
  *(void *)(result + 376) = v16;
  return result;
}

uint64_t sub_19F0EB7C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_19F0EB854(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_19F0EB874(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)double result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PagePreloadStatus()
{
  return &type metadata for PagePreloadStatus;
}

uint64_t sub_19F0EB8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DABEC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_19F1DABFC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a2
    || a1 == 42 && a2 == 0xE100000000000000
    || (sub_19F1DD44C() & 1) != 0
    || !a1 && a2 == 0xE000000000000000
    || (sub_19F1DD44C() & 1) != 0)
  {
    return 10798;
  }
  swift_bridgeObjectRetain();
  if (sub_19F1DBFAC() & 1) != 0 || (sub_19F1DBFBC())
  {
    if ((sub_19F1DBFAC() & 1) == 0 || (sub_19F1DBFBC() & 1) == 0)
    {
      sub_19F1DABAC();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
      *(void *)(inited + 32) = sub_19F1DBD7C();
      *(void *)(inited + 40) = v11;
      uint64_t v20 = 0;
      unint64_t v21 = 0xE000000000000000;
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      uint64_t v20 = 0x206E726574746150;
      unint64_t v21 = 0xE800000000000000;
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      uint64_t v12 = v20;
      unint64_t v13 = v21;
      uint64_t v14 = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 48) = v12;
      *(void *)(inited + 56) = v13;
      *(void *)(inited + 80) = sub_19F1DBD7C();
      *(void *)(inited + 88) = v15;
      *(void *)(inited + 120) = v14;
      *(void *)(inited + 96) = a1;
      *(void *)(inited + 104) = a2;
      sub_19EEBF898(inited);
      sub_19F0A671C();
      sub_19F1DB17C();
      sub_19F1DAB9C();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      return swift_willThrow();
    }
    uint64_t v20 = 94;
    unint64_t v21 = 0xE100000000000000;
    sub_19F1DBEFC();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 94;
    unint64_t v21 = 0xE100000000000000;
    unint64_t v16 = self;
    uint64_t v17 = (void *)sub_19F1DBD4C();
    id v18 = objc_msgSend(v16, sel_escapedPatternForString_, v17);

    sub_19F1DBD7C();
    sub_19F1DBEFC();
  }
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return v20;
}

uint64_t sub_19F0EBC70()
{
  if (qword_1EB3927C8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB3925C0;
  uint64_t v0 = *(void *)algn_1EB3925C8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F24EB80;
  *(void *)(v2 + 32) = v1;
  *(void *)(v2 + 40) = v0;
  *(void *)(v2 + 48) = 0xD00000000000001ALL;
  *(void *)(v2 + 56) = 0x800000019F272610;
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19EE58DE8();
  uint64_t v3 = sub_19F1DBCCC();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  qword_1E946EB00 = v3;
  *(void *)algn_1E946EB08 = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0EBD94()
{
  if (qword_1E946EC40 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1E946EB00;
  uint64_t v0 = *(void *)algn_1E946EB08;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F24EB80;
  *(void *)(v2 + 32) = v1;
  *(void *)(v2 + 40) = v0;
  strcpy((char *)(v2 + 48), "isAllowedStub");
  *(_WORD *)(v2 + 62) = -4864;
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19EE58DE8();
  uint64_t v3 = sub_19F1DBCCC();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1E946EC48 = v3;
  unk_1E946EC50 = v5;
  return result;
}

uint64_t sub_19F0EBEC0()
{
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  uint64_t v0 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v1 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_19EEC4E5C(v0, &v7);
  os_unfair_lock_unlock(v1);
  int v2 = v7;
  swift_release();
  if (v2 == 2)
  {
    if ((os_variant_has_internal_content() & 1) == 0) {
      return 2;
    }
  }
  else if ((v2 & 1) == 0)
  {
    return 2;
  }
  if (qword_1EB392A90 != -1) {
    swift_once();
  }
  if (qword_1E946EB48 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1E946EC48;
  uint64_t v5 = unk_1E946EC50;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_19EE56B20(v4, v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t getEnumTagSinglePayload for MetricsDiagnosticsAndUsage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetricsDiagnosticsAndUsage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F0EC18CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t *sub_19F0EC1B4(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  swift_unknownObjectWeakCopyAssign();
  uint64_t v4 = a2[7];
  a1[6] = a2[6];
  a1[7] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19F0EC204(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_19F0EC25C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t *sub_19F0EC328(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return IntentDispatcher.dispatch<A>(intent:jsonContext:)(a1, a2, a5, a3, a6, a4);
}

uint64_t *IntentDispatcher.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v43 = a3;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v46 = a5;
  uint64_t v47 = v9;
  uint64_t v45 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for _IntentAsJSIntentModel();
  uint64_t v12 = *(void *)(v42 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v37 - v15;
  uint64_t v17 = *a2;
  uint64_t v38 = a6;
  uint64_t v39 = (char *)&v37 - v15;
  uint64_t v37 = a4;
  sub_19EF70B5C(a4, (uint64_t)&v37 - v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392D00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 64) = &type metadata for JSONContext;
  *(void *)(inited + 40) = v17;
  *(void *)(inited + 32) = &type metadata for JSONContext;
  sub_19EE6D228();
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_19F1DBB7C();
  sub_19EE6C294(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v19 = v48;
  type metadata accessor for BaseObjectGraph();
  uint64_t v20 = (void *)swift_allocObject();
  v20[3] = 0xD00000000000001DLL;
  v20[4] = 0x800000019F272630;
  v20[2] = v19;
  swift_getAssociatedTypeWitness();
  uint64_t v40 = type metadata accessor for Promise();
  uint64_t v21 = v47;
  uint64_t v22 = v11;
  uint64_t v23 = v11;
  uint64_t v24 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v23, v44, v43);
  uint64_t v25 = v41;
  uint64_t v26 = v16;
  uint64_t v27 = v42;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v41, v26, v42);
  unint64_t v28 = (*(unsigned __int8 *)(v21 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v29 = (v45 + *(unsigned __int8 *)(v12 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v30 = (v13 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = (char *)swift_allocObject();
  uint64_t v32 = v37;
  *((void *)v31 + 2) = v24;
  *((void *)v31 + 3) = v32;
  uint64_t v33 = v47;
  uint64_t v34 = v38;
  *((void *)v31 + 4) = v46;
  *((void *)v31 + 5) = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v31[v28], v22, v24);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v31[v29], v25, v27);
  *(void *)&v31[v30] = v20;
  uint64_t v35 = Promise.__allocating_init(task:)((uint64_t)&unk_1E94748B8, (uint64_t)v31);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v39, v27);
  return v35;
}

uint64_t sub_19F0EC700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v13;
  *uint64_t v13 = v9;
  v13[4] = a8;
  v13[5] = v8;
  _OWORD v13[2] = a1;
  v13[3] = a7;
  v13[1] = sub_19EEB8A6C;
  return MEMORY[0x1F4188298](sub_19F0EC7E4, 0, 0);
}

uint64_t IntentDispatcher.dispatcher<A, B>(for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v8[4] = a7;
  v8[5] = v7;
  v8[2] = a1;
  v8[3] = a4;
  return MEMORY[0x1F4188298](sub_19F0EC7E4, 0, 0);
}

uint64_t sub_19F0EC7E4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);
  long long v6 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 24) = v6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v2);
  (*(void (**)(uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v1);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_19F0EC88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  void *v16 = v8;
  v16[1] = sub_19EE17780;
  v16[18] = a5;
  v16[19] = v7;
  v16[16] = a4;
  v16[17] = a7;
  v16[14] = a3;
  v16[15] = a6;
  v16[12] = a1;
  v16[13] = a2;
  return MEMORY[0x1F4188298](sub_19F0EC9A0, 0, 0);
}

uint64_t IntentDispatcher.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[18] = a7;
  v8[19] = v7;
  v8[16] = a5;
  v8[17] = a6;
  v8[14] = a3;
  v8[15] = a4;
  v8[12] = a1;
  v8[13] = a2;
  return MEMORY[0x1F4188298](sub_19F0EC9A0, 0, 0);
}

uint64_t sub_19F0EC9A0()
{
  uint64_t v11 = v0[17];
  (*(void (**)(void, void))(v0[18] + 40))(v0[16], v0[18]);
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  uint64_t v10 = (uint64_t (*)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 8) + **(int **)(v11 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[20] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *uint64_t v4 = v0;
  v4[1] = sub_19F0ECB2C;
  uint64_t v6 = v0[17];
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[15];
  return v10(v0 + 7, v3, v7, AssociatedTypeWitness, v2, v1, v8, v6);
}

uint64_t sub_19F0ECB2C()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0ECED8;
  }
  else {
    uint64_t v2 = sub_19F0ECC40;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0ECC40()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 16)
                                                                                              + **(int **)(v2 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[22] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_19F0ECD54;
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[13];
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[12];
  return v10(v8, v6, v7, v5, v4, v1, v2);
}

uint64_t sub_19F0ECD54()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0ECF3C;
  }
  else {
    uint64_t v2 = sub_19F0ECE68;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0ECE68()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0ECED8()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0ECF3C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t IntentDispatcher.dispatch<A>(intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v12 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, &v12, a3, a5, a2, a4);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_19F0ED04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a6;
  void v8[4] = a8;
  v8[2] = a1;
  type metadata accessor for _UncheckedSendableIntentReturnType();
  uint64_t v13 = swift_task_alloc();
  v8[5] = v13;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 16)
                                                                                              + **(int **)(a7 + 16));
  uint64_t v14 = (void *)swift_task_alloc();
  v8[6] = v14;
  uint64_t v15 = type metadata accessor for _IntentAsJSIntentModel();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v14 = v8;
  v14[1] = sub_19F0ED1F4;
  return v18(v13, a3, a4, v15, WitnessTable, a5, a7);
}

uint64_t sub_19F0ED1F4()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0ED3C0;
  }
  else {
    uint64_t v2 = sub_19F0ED308;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0ED308()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v2, v1, AssociatedTypeWitness);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_19F0ED3C0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0ED424()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 48) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for _IntentAsJSIntentModel() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v6 + v8) & ~v8;
  uint64_t v10 = v4 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v0 + v9, v2);
  swift_release();
  return MEMORY[0x1F4186498](v0, v11 + 8, v10);
}

uint64_t sub_19F0ED598(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v11 = *(void *)(type metadata accessor for _IntentAsJSIntentModel() - 8);
  unint64_t v12 = (v10 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (uint64_t)v1 + v10;
  uint64_t v14 = (uint64_t)v1 + v12;
  uint64_t v15 = *(void *)((char *)v1 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v16;
  void *v16 = v3;
  v16[1] = sub_19EE17780;
  return sub_19F0ED04C(a1, v13, v14, v15, v6, v5, v7, v8);
}

uint64_t dispatch thunk of IntentDispatcher.dispatcher<A, B>(for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a8 + 8) + **(int **)(a8 + 8));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_19EEB8A6C;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 16)
                                                                                              + **(int **)(a7 + 16));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  void *v15 = v7;
  v15[1] = sub_19EE17780;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of IntentDispatcher.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t sub_19F0ED9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474948);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474950);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = &type metadata for JSRequestIntent;
  uint64_t v19 = &protocol witness table for JSRequestIntent;
  uint64_t v17 = swift_allocObject();
  sub_19EE518E8(a1, v17 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474940);
  int v11 = swift_dynamicCast();
  unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_19EEBDC4C((uint64_t)v6, (uint64_t)v10, &qword_1E9474950);
    sub_19F0F18C8((uint64_t)v10, a2, (uint64_t (*)(void))type metadata accessor for JSIntentResult);
    uint64_t v13 = type metadata accessor for JSIntentResult();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 0, 1, v13);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_19EEBD664((uint64_t)v6, &qword_1E9474948);
    uint64_t v15 = type metadata accessor for JSIntentResult();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
}

uint64_t sub_19F0EDC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[74] = v3;
  v4[73] = a3;
  v4[72] = a2;
  v4[71] = a1;
  uint64_t v5 = type metadata accessor for JSIntentResult();
  v4[75] = v5;
  v4[76] = *(void *)(v5 - 8);
  v4[77] = swift_task_alloc();
  v4[78] = type metadata accessor for JSResponse();
  v4[79] = swift_task_alloc();
  v4[80] = swift_task_alloc();
  v4[81] = type metadata accessor for PageRenderEvent();
  v4[82] = swift_task_alloc();
  v4[83] = swift_task_alloc();
  v4[84] = type metadata accessor for JSStack.DecoratedIntent();
  v4[85] = swift_task_alloc();
  v4[86] = swift_task_alloc();
  v4[87] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F5F8);
  v4[88] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for PageIntentInstrumentation();
  v4[89] = v6;
  v4[90] = *(void *)(v6 - 8);
  v4[91] = swift_task_alloc();
  v4[92] = swift_task_alloc();
  v4[93] = swift_task_alloc();
  v4[94] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474938);
  v4[95] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F0EDE88, 0, 0);
}

uint64_t sub_19F0EDE88()
{
  uint64_t v1 = v0[95];
  uint64_t v2 = v0[76];
  uint64_t v3 = v0[75];
  sub_19F0ED9C0(v0[72], v1);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3);
  uint64_t v5 = v0[95];
  if (v4 == 1)
  {
    sub_19EEBD664(v5, &qword_1E9474938);
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    v0[70] = v0[73];
    uint64_t v6 = (void *)swift_task_alloc();
    v0[96] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_19F0EE120;
    uint64_t v7 = v0[88];
    uint64_t v8 = v0[73];
    return MEMORY[0x1F41881B8](v7, v0 + 70, &unk_1E94726A0, v8, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
  }
  else
  {
    sub_19F0F18C8(v5, v0[71], (uint64_t (*)(void))type metadata accessor for JSIntentResult);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_19F0EE120()
{
  *(void *)(*(void *)v1 + 776) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0EE608;
  }
  else {
    uint64_t v2 = sub_19F0EE234;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0EE234()
{
  uint64_t v1 = *(void *)(v0 + 704);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 720) + 48))(v1, 1, *(void *)(v0 + 712)) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_19EEBD664(v1, &qword_1E946F5F8);
  }
  else
  {
    sub_19F0F18C8(v1, *(void *)(v0 + 752), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
  }
  sub_19EE518E8(*(void *)(v0 + 576), v0 + 160);
  *(void *)(v0 + 472) = &type metadata for JSRequestIntent;
  *(void *)(v0 + 480) = &protocol witness table for JSRequestIntent;
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 448) = v2;
  sub_19EE518E8(v0 + 160, v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474940);
  if (swift_dynamicCast())
  {
    sub_19EE95960(v0 + 160);
    long long v3 = *(_OWORD *)(v0 + 240);
    *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 304) = v3;
    *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 329) = *(_OWORD *)(v0 + 265);
LABEL_8:
    uint64_t v4 = *(void *)(v0 + 584);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
    *(void *)(v0 + 552) = v4;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 784) = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EC38);
    *uint64_t v5 = v0;
    v5[1] = sub_19F0EE728;
    uint64_t v6 = *(void *)(v0 + 584);
    return MEMORY[0x1F41881B8](v0 + 528, v0 + 552, &unk_1E94726B0, v6, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DC38);
  if (swift_dynamicCast())
  {
    sub_19EE95960(v0 + 160);
    sub_19EECDD70((long long *)(v0 + 352), (_OWORD *)(v0 + 288));
    *(void *)(v0 + 336) = 0;
    *(unsigned char *)(v0 + 344) = 1;
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(v0 + 752);
  sub_19F049244();
  swift_allocError();
  unsigned char *v8 = 2;
  swift_willThrow();
  sub_19EE95960(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  sub_19EE94F48(v7, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_19F0EE608()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0EE728()
{
  *(void *)(*(void *)v1 + 792) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0EEB40;
  }
  else {
    uint64_t v2 = sub_19F0EE83C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0EE83C()
{
  if ((*(unsigned char *)(v0 + 537) & 1) == 0 && (*(unsigned char *)(v0 + 536) & 1) == 0)
  {
    *(void *)(v0 + 336) = *(void *)(v0 + 528);
    *(unsigned char *)(v0 + 344) = 0;
  }
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 744);
  uint64_t v3 = *(void *)(v0 + 736);
  uint64_t v23 = *(void *)(v0 + 688);
  uint64_t v4 = *(void *)(v0 + 680);
  uint64_t v5 = *(void *)(v0 + 672);
  sub_19EE959B4(v0 + 288, v0 + 400);
  sub_19EE958FC(v1, v2);
  long long v22 = *(_OWORD *)(v0 + 424);
  uint64_t v6 = *(void *)(v0 + 424);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 400), v6);
  *(_OWORD *)(v4 + 24) = v22;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v4);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v7, v6);
  uint64_t v9 = *(void *)(v0 + 424);
  uint64_t v10 = *(void *)(v0 + 440);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 400), v9);
  *(void *)(v4 + 40) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  *(void *)(v4 + 48) = v11;
  sub_19F0F18C8(v2, v4 + *(int *)(v5 + 24), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
  sub_19F0F18C8(v4, v23, (uint64_t (*)(void))type metadata accessor for JSStack.DecoratedIntent);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 400);
  sub_19EE958FC(v1, v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v13 = *(void *)(v0 + 736);
  if (EnumCaseMultiPayload)
  {
    sub_19EE94F48(v13, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 664);
    uint64_t v17 = *(void *)(v0 + 648);
    sub_19F0F18C8(v13, v16, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
    uint64_t v18 = (uint64_t *)(v16 + *(int *)(v17 + 24));
    uint64_t v14 = *v18;
    uint64_t v15 = v18[1];
    swift_bridgeObjectRetain();
    sub_19EE94F48(v16, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  }
  *(void *)(v0 + 808) = v15;
  *(void *)(v0 + 800) = v14;
  *(void *)(v0 + 544) = *(void *)(v0 + 584);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 816) = v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946FC10);
  *uint64_t v19 = v0;
  v19[1] = sub_19F0EEC88;
  uint64_t v20 = *(void *)(v0 + 584);
  return MEMORY[0x1F41881B8](v0 + 488, v0 + 544, &unk_1E94726C0, v20, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19F0EEB40()
{
  sub_19EE94F48(*(void *)(v0 + 752), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
  sub_19EE95960(v0 + 288);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0EEC88()
{
  *(void *)(*(void *)v1 + 824) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0EEECC;
  }
  else {
    uint64_t v2 = sub_19F0EED9C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0EED9C()
{
  *(void *)(v0 + 832) = *(void *)(v0 + 824);
  unint64_t v1 = *(void *)(v0 + 808);
  uint64_t v2 = *(void *)(v0 + 800);
  uint64_t v3 = *(void *)(v0 + 688);
  uint64_t v4 = *(void *)(v0 + 592);
  uint64_t v5 = *(void *)(v0 + 312);
  uint64_t v6 = *(void *)(v0 + 328);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 288), v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  *(void *)(v0 + 840) = sub_19EE9A808(0x656D69746E757224, 0xE800000000000000, 0x6863746170736964, 0xE800000000000000, v7, v8, *(void *)(v0 + 336), *(unsigned __int8 *)(v0 + 344), v3, v2, v1, (void *)(v0 + 488), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_19F0EF010, 0, 0);
}

uint64_t sub_19F0EEECC()
{
  *(void *)(v0 + 520) = 0;
  *(_OWORD *)(v0 + 488) = 0u;
  *(_OWORD *)(v0 + 504) = 0u;
  *(void *)(v0 + 832) = 0;
  unint64_t v1 = *(void *)(v0 + 808);
  uint64_t v2 = *(void *)(v0 + 800);
  uint64_t v3 = *(void *)(v0 + 688);
  uint64_t v4 = *(void *)(v0 + 592);
  uint64_t v5 = *(void *)(v0 + 312);
  uint64_t v6 = *(void *)(v0 + 328);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 288), v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  *(void *)(v0 + 840) = sub_19EE9A808(0x656D69746E757224, 0xE800000000000000, 0x6863746170736964, 0xE800000000000000, v7, v8, *(void *)(v0 + 336), *(unsigned __int8 *)(v0 + 344), v3, v2, v1, (void *)(v0 + 488), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_19F0EF010, 0, 0);
}

uint64_t sub_19F0EF010()
{
  unint64_t v1 = v0 + 2;
  uint64_t v2 = v0[79];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_19F0EF0D4;
  v0[10] = swift_continuation_init();
  uint64_t v3 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v3 + 72) = 1;
  sub_19EE6EBE4(v3);
  sub_19EEBD664(v3, &qword_1EB3912C0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0EF0D4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 848) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F0EF6C0;
  }
  else
  {
    sub_19F0F18C8(*(void *)(v1 + 632), *(void *)(v1 + 640), (uint64_t (*)(void))type metadata accessor for JSResponse);
    uint64_t v3 = sub_19F0EF210;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F0EF210()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[104];
  uint64_t v2 = v0[80];
  uint64_t v3 = v0[77];
  uint64_t v4 = v0[73];
  swift_release();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_19EE955D4(v5);
  swift_bridgeObjectRelease();
  sub_19F0EF848(v2, v4, v3);
  uint64_t v6 = v0[94];
  if (v1)
  {
    uint64_t v7 = v0[86];
    sub_19EE94F48(v0[80], (uint64_t (*)(void))type metadata accessor for JSResponse);
    sub_19EEBD664((uint64_t)(v0 + 61), (uint64_t *)&unk_1E946FC10);
    sub_19EE94F48(v7, (uint64_t (*)(void))type metadata accessor for JSStack.DecoratedIntent);
    sub_19EE94F48(v6, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    sub_19EE95960((uint64_t)(v0 + 36));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_19EE958FC(v0[94], v0[91]);
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v9 = v0[94];
      uint64_t v10 = v0[91];
      uint64_t v11 = v0[86];
      sub_19EE94F48(v0[80], (uint64_t (*)(void))type metadata accessor for JSResponse);
      sub_19EEBD664((uint64_t)(v0 + 61), (uint64_t *)&unk_1E946FC10);
      sub_19EE94F48(v11, (uint64_t (*)(void))type metadata accessor for JSStack.DecoratedIntent);
      sub_19EE94F48(v9, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
      uint64_t v12 = v10;
    }
    else
    {
      sub_19F0F18C8(v0[91], v0[82], (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
      if (qword_1E946DBA8 != -1) {
        swift_once();
      }
      uint64_t v13 = v0[94];
      uint64_t v14 = v0[86];
      uint64_t v15 = v0[82];
      uint64_t v16 = v0[80];
      uint64_t v17 = (uint64_t *)(v15 + *(int *)(v0[81] + 24));
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      swift_bridgeObjectRetain();
      static MonotonicTime.now.getter(&v21);
      timespec v22 = v21;
      PageRenderField<>.endTime(for:at:)(v18, v19, (double *)&v22.tv_sec);
      swift_bridgeObjectRelease();
      sub_19EE94F48(v15, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
      sub_19EE94F48(v16, (uint64_t (*)(void))type metadata accessor for JSResponse);
      sub_19EEBD664((uint64_t)(v0 + 61), (uint64_t *)&unk_1E946FC10);
      sub_19EE94F48(v14, (uint64_t (*)(void))type metadata accessor for JSStack.DecoratedIntent);
      uint64_t v12 = v13;
    }
    sub_19EE94F48(v12, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    sub_19F0F18C8(v0[77], v0[71], (uint64_t (*)(void))type metadata accessor for JSIntentResult);
    sub_19EE95960((uint64_t)(v0 + 36));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
  }
  return v8();
}

uint64_t sub_19F0EF6C0()
{
  uint64_t v1 = v0[94];
  uint64_t v2 = v0[86];
  swift_release();
  sub_19EEBD664((uint64_t)(v0 + 61), (uint64_t *)&unk_1E946FC10);
  sub_19EE94F48(v2, (uint64_t (*)(void))type metadata accessor for JSStack.DecoratedIntent);
  sub_19EE94F48(v1, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
  sub_19EE95960((uint64_t)(v0 + 36));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_19F0EF848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v37 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DAE7C();
  uint64_t v35 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for JSIntentResult();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v39[0] = a2;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_19EE97A4C(v14, v39);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  unint64_t v15 = v39[0];
  if (!v39[0]) {
    unint64_t v15 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  }
  uint64_t v16 = swift_conformsToProtocol2();
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v16) {
    uint64_t v18 = v11;
  }
  else {
    uint64_t v18 = 0;
  }
  if (!v18)
  {
    uint64_t v34 = v8;
    uint64_t v22 = swift_conformsToProtocol2();
    if (v22) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    if (v22) {
      uint64_t v24 = (uint64_t)v11;
    }
    else {
      uint64_t v24 = 0;
    }
    if (!v24)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = type metadata accessor for JSResponse();
      uint64_t v27 = v37;
      unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
      v28(v10, v37 + *(int *)(v26 + 20), v34);
      sub_19EECD9F0(v27 + *(int *)(v26 + 24), (uint64_t)v7);
      uint64_t v29 = v34;
      v28(v13, (uint64_t)v10, v34);
      sub_19EECD9F0((uint64_t)v7, (uint64_t)&v13[v11[5]]);
      uint64_t v30 = MEMORY[0x1E4FBC860];
      v39[0] = sub_19EEBF898(MEMORY[0x1E4FBC860]);
      uint64_t v31 = sub_19EE967CC((uint64_t)v7, v39);
      swift_bridgeObjectRelease();
      *(void *)&v13[v11[6]] = v31;
      JSONObject.subscript.getter(0xD000000000000013, 0x800000019F26DAB0, (uint64_t)v39);
      unint64_t v32 = sub_19EEBF898(v30);
      uint64_t v33 = sub_19EE964AC((uint64_t)v39, v32);
      sub_19EEBD664((uint64_t)v7, &qword_1EB391EE8);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v29);
      *(void *)&v13[v11[7]] = v33;
      return sub_19F0F18C8((uint64_t)v13, v36, (uint64_t (*)(void))type metadata accessor for JSIntentResult);
    }
    type metadata accessor for JSResponse();
    v38[0] = v15;
    uint64_t v40 = v24;
    uint64_t v41 = v23;
    __swift_allocate_boxed_opaque_existential_2Tm(v39);
    JSONObject.decode<A>(_:using:)(v24, v38);
    swift_bridgeObjectRelease();
    if (!v3)
    {
      sub_19EEC4154((uint64_t)v39, (uint64_t)v38);
      timespec v21 = &qword_1E9472968;
      goto LABEL_25;
    }
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v39);
  }
  uint64_t v19 = type metadata accessor for JSResponse();
  sub_19EEC355C(v37 + *(int *)(v19 + 24), (uint64_t)v38);
  unint64_t v42 = v15;
  uint64_t v20 = *(void (**)(uint64_t *, unint64_t *, int *, uint64_t))(v17 + 8);
  uint64_t v40 = (uint64_t)v18;
  uint64_t v41 = v17;
  __swift_allocate_boxed_opaque_existential_2Tm(v39);
  v20(v38, &v42, v18, v17);
  if (v3) {
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v39);
  }
  sub_19EEC4154((uint64_t)v39, (uint64_t)v38);
  timespec v21 = &qword_1E946DC28;
LABEL_25:
  __swift_instantiateConcreteTypeFromMangledName(v21);
  swift_dynamicCast();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
}

uint64_t *sub_19F0EFCE8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return JSStack.dispatch<A>(intent:jsonContext:)(a1, a2, a3, a4);
}

uint64_t *JSStack.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = type metadata accessor for _IntentAsJSIntentModel();
  uint64_t v7 = *(void *)(v26 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v26);
  uint64_t v25 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v24 = (char *)v23 - v10;
  uint64_t v11 = *a2;
  sub_19EF70B5C(a3, (uint64_t)v23 - v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392D00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 64) = &type metadata for JSONContext;
  *(void *)(inited + 40) = v11;
  *(void *)(inited + 32) = &type metadata for JSONContext;
  sub_19EE6D228();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_19F1DBB7C();
  sub_19EE6C294(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v13 = v28;
  type metadata accessor for BaseObjectGraph();
  uint64_t v14 = (void *)swift_allocObject();
  v14[3] = 0xD00000000000001DLL;
  v14[4] = 0x800000019F272630;
  v14[2] = v13;
  swift_getAssociatedTypeWitness();
  v23[1] = type metadata accessor for Promise();
  unint64_t v15 = v24;
  uint64_t v16 = v25;
  uint64_t v17 = v26;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v24, v26);
  unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v19 = (v8 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = a3;
  *((void *)v20 + 3) = a4;
  *((void *)v20 + 4) = v27;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v20[v18], v16, v17);
  *(void *)&v20[v19] = v14;
  swift_retain();
  timespec v21 = Promise.__allocating_init(task:)((uint64_t)&unk_1E94748F8, (uint64_t)v20);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v17);
  return v21;
}

uint64_t static JSStack.servicesGlobalName.getter()
{
  return 0x7365636976726573;
}

uint64_t static JSStack.bootstrapGlobalName.getter()
{
  return 0x727473746F6F6224;
}

uint64_t static JSStack.makeStandardPrerequisites(using:bag:urlSession:process:accounts:)(uint64_t a1, uint64_t *a2, void *a3, void *a4, uint64_t a5)
{
  char v8 = *(unsigned char *)(a1 + 1);
  uint64_t v9 = *a2;
  v16[0] = *(unsigned char *)a1;
  v16[1] = v8;
  long long v17 = *(_OWORD *)(a1 + 8);
  uint64_t v15 = v9;
  if (a5)
  {
    *((void *)&v13 + 1) = type metadata accessor for Unstable.Accounts();
    uint64_t v14 = &protocol witness table for Unstable.Accounts;
    *(void *)&long long v12 = a5;
  }
  else
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_retain();
  uint64_t v10 = _s9JetEngine7JSStackC25makeStandardPrerequisites5using3bag10urlSession7process15accountProviderSayAC12PrerequisiteOGAC0E19GlobalConfigurationV_AA3BagVSgSo13AMSURLSessionCSgSo14AMSProcessInfoCSgAA07AccountM0_pSgtFZ_0((uint64_t)v16, &v15, a3, a4, (uint64_t)&v12);
  sub_19EEBD664((uint64_t)&v12, &qword_1EB391760);
  return v10;
}

uint64_t static JSStack.makeStandardPrerequisites(using:bag:urlSession:process:accountStore:)(uint64_t a1, uint64_t *a2, void *a3, void *a4, void *a5)
{
  char v8 = *(unsigned char *)(a1 + 1);
  uint64_t v9 = *a2;
  v17[0] = *(unsigned char *)a1;
  v17[1] = v8;
  long long v18 = *(_OWORD *)(a1 + 8);
  uint64_t v16 = v9;
  if (a5)
  {
    *((void *)&v14 + 1) = sub_19EE6E5F8();
    uint64_t v15 = &protocol witness table for ACAccountStore;
    *(void *)&long long v13 = a5;
  }
  else
  {
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
  }
  id v10 = a5;
  uint64_t v11 = _s9JetEngine7JSStackC25makeStandardPrerequisites5using3bag10urlSession7process15accountProviderSayAC12PrerequisiteOGAC0E19GlobalConfigurationV_AA3BagVSgSo13AMSURLSessionCSgSo14AMSProcessInfoCSgAA07AccountM0_pSgtFZ_0((uint64_t)v17, &v16, a3, a4, (uint64_t)&v13);
  sub_19EEBD664((uint64_t)&v13, &qword_1EB391760);
  return v11;
}

id static JSStack.makeNetObject(configuration:urlSession:bag:accounts:process:)(unsigned __int8 *a1, void *a2, uint64_t *a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *((void *)a1 + 1);
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *a3;
  if (a1[1]) {
    __int16 v11 = 256;
  }
  else {
    __int16 v11 = 0;
  }
  __int16 v12 = v11 | *a1;
  swift_retain();
  id v13 = sub_19F0F120C(v12, v8, v9, a2, v10, a4, a5);
  swift_release();
  return v13;
}

id static JSStack.makeNetObject(configuration:urlSession:bag:accounts:process:)(uint64_t a1, void *a2, uint64_t *a3, void *a4, void *a5)
{
  uint64_t v10 = a4[3];
  uint64_t v11 = a4[4];
  __int16 v12 = __swift_project_boxed_opaque_existential_1(a4, v10);
  return sub_19F0F134C(a1, a2, a3, (uint64_t)v12, a5, v5, v10, v11);
}

uint64_t *JSStack.dispatch<A>(intentRequest:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for JSIntentRequest();
  uint64_t v37 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v39 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v38 = (char *)&v35 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v36 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473818);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43[3] = type metadata accessor for _IntentAsJSIntentModel();
  void v43[4] = (uint64_t)&off_1EF1436A8;
  v43[5] = swift_getWitnessTable();
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v43);
  uint64_t v35 = a1;
  sub_19EF70B5C(a2, (uint64_t)boxed_opaque_existential_2Tm);
  uint64_t v17 = a1 + *(int *)(v8 + 36);
  uint64_t v18 = *(void *)v17;
  LOBYTE(v17) = *(unsigned char *)(v17 + 8);
  v43[6] = v18;
  char v44 = v17;
  sub_19EE6D228();
  *(void *)&long long v40 = sub_19F1DBB7C();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_19EE6C294(MEMORY[0x1E4FBC860]);
  uint64_t v20 = v40;
  type metadata accessor for BaseObjectGraph();
  timespec v21 = (void *)swift_allocObject();
  v21[3] = 0xD000000000000018;
  v21[4] = 0x800000019F272650;
  v21[2] = v20;
  sub_19EE518E8((uint64_t)v43, (uint64_t)&v40);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v4;
  long long v23 = v41;
  *(_OWORD *)(v22 + 24) = v40;
  *(_OWORD *)(v22 + 40) = v23;
  *(_OWORD *)(v22 + 56) = v42[0];
  *(_OWORD *)(v22 + 65) = *(_OWORD *)((char *)v42 + 9);
  *(void *)(v22 + 88) = v21;
  void *v15 = v19;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474910);
  uint64_t v24 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v25 = swift_allocObject();
  *(_DWORD *)(v25 + 16) = 0;
  v24[2] = v25;
  sub_19EEBDC4C((uint64_t)v15, (uint64_t)v24 + *(void *)(*v24 + 96), &qword_1E9473818);
  uint64_t v26 = sub_19F1DC37C();
  uint64_t v27 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v36, 1, 1, v26);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = &unk_1E9474908;
  v28[5] = v22;
  v28[6] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19EE9A0F8(v27, (uint64_t)&unk_1E9474918, (uint64_t)v28);
  swift_release();
  uint64_t v29 = v37;
  uint64_t v30 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v38, v35, v37);
  unint64_t v31 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = a2;
  *(void *)(v32 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v32 + v31, v30, v29);
  type metadata accessor for JSIntentResult();
  type metadata accessor for JSIntentResponse();
  *((void *)&v41 + 1) = &type metadata for SyncTaskScheduler;
  *(void *)&v42[0] = &protocol witness table for SyncTaskScheduler;
  uint64_t v33 = Promise.map<A>(on:_:)((uint64_t)&v40, (uint64_t)sub_19F0F17F8, v32);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v40);
  sub_19EE95960((uint64_t)v43);
  return v33;
}

uint64_t sub_19F0F0774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E9474930 + dword_1E9474930);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_19EEB8A6C;
  return v10(a1, a3, a4);
}

uint64_t sub_19F0F0844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DAE7C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for JSIntentRequest();
  double v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v19 - v14;
  (*(void (**)(char *, uint64_t, double))(v16 + 16))((char *)&v19 - v14, a2, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v17 = type metadata accessor for JSIntentResult();
  sub_19EECD9F0(a1 + *(int *)(v17 + 20), (uint64_t)v7);
  return sub_19F18253C((uint64_t)v15, (uint64_t)v11, (uint64_t)v7, v20);
}

uint64_t sub_19F0F0A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[3] = a5;
  v6[4] = a6;
  v6[2] = a1;
  type metadata accessor for _UncheckedSendableIntentReturnType();
  uint64_t v9 = swift_task_alloc();
  v6[5] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v6[6] = v10;
  uint64_t v11 = type metadata accessor for _IntentAsJSIntentModel();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v10 = v6;
  v10[1] = sub_19F0ED1F4;
  return JSStack.dispatch<A>(_:objectGraph:)(v9, a3, a4, v11, WitnessTable);
}

uint64_t JSStack.dispatch<A>(intentRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_19F0F0BB4, 0, 0);
}

uint64_t sub_19F0F0BB4()
{
  v0[7] = JSStack.dispatch<A>(intentRequest:)(v0[3], v0[4], v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  type metadata accessor for JSIntentResponse();
  uint64_t v2 = type metadata accessor for Promise();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v1 = v0;
  v1[1] = sub_19F002564;
  uint64_t v4 = v0[2];
  return Future.result.getter(v4, v2, WitnessTable);
}

uint64_t JSStack.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  v6[4] = a4;
  v6[5] = a5;
  v6[2] = a1;
  void v6[3] = a2;
  uint64_t v7 = *a3;
  v6[6] = v5;
  v6[7] = v7;
  return MEMORY[0x1F4188298](sub_19F0F0CE0, 0, 0);
}

uint64_t sub_19F0F0CE0()
{
  uint64_t v10 = v0;
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v9 = v0[7];
  v0[8] = JSStack.dispatch<A>(intent:jsonContext:)(v3, &v9, v2, v1);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  swift_getAssociatedTypeWitness();
  uint64_t v5 = type metadata accessor for Promise();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v4 = v0;
  v4[1] = sub_19F0F0E04;
  uint64_t v7 = v0[2];
  return Future.result.getter(v7, v5, WitnessTable);
}

uint64_t sub_19F0F0E04()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0F0F7C;
  }
  else {
    uint64_t v2 = sub_19F0F0F18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F0F0F18()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0F0F7C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0F0FE0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for _IntentAsJSIntentModel() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_19F0F10D8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = *(void *)(type metadata accessor for _IntentAsJSIntentModel() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v7;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_19EE17780;
  return sub_19F0F0A48(a1, v8, v9, v10, v4, v5);
}

id sub_19F0F120C(__int16 a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  v26[3] = type metadata accessor for Unstable.Accounts();
  void v26[4] = &protocol witness table for Unstable.Accounts;
  v26[0] = a6;
  __int16 v22 = a1 & 0x101;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v21 = a5;
  sub_19EEC4154((uint64_t)v26, (uint64_t)v20);
  swift_retain();
  sub_19EE47F40(a2);
  id v14 = a4;
  swift_unknownObjectRetain();
  sub_19EE453AC(v14, (char *)&v22, &v21, v20, a7, v25);
  sub_19EEC4154((uint64_t)v25, (uint64_t)v20);
  uint64_t v15 = (objc_class *)type metadata accessor for JSNetObject();
  id v16 = objc_allocWithZone(v15);
  sub_19EEC4154((uint64_t)v20, (uint64_t)v16 + OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
  v19.receiver = v16;
  v19.super_class = v15;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  sub_19EEDAF40((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  return v17;
}

id sub_19F0F134C(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v31[3] = a7;
  v31[4] = a8;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16))(boxed_opaque_existential_2Tm, a4, a7);
  char v15 = *(unsigned char *)(a1 + 1);
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *a3;
  v27[0] = *(unsigned char *)a1;
  v27[1] = v15;
  uint64_t v28 = v16;
  uint64_t v29 = v17;
  uint64_t v26 = v18;
  sub_19EEC4154((uint64_t)v31, (uint64_t)v25);
  sub_19EE47F40(v16);
  id v19 = a2;
  swift_unknownObjectRetain();
  sub_19EE453AC(v19, v27, &v26, v25, a5, v30);
  sub_19EEC4154((uint64_t)v30, (uint64_t)v25);
  uint64_t v20 = (objc_class *)type metadata accessor for JSNetObject();
  id v21 = objc_allocWithZone(v20);
  sub_19EEC4154((uint64_t)v25, (uint64_t)v21 + OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
  v24.receiver = v21;
  v24.super_class = v20;
  id v22 = objc_msgSendSuper2(&v24, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  sub_19EEDAF40((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return v22;
}

uint64_t sub_19F0F14A4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_19F0F14EC(uint64_t a1)
{
  uint64_t v4 = v1 + 24;
  uint64_t v5 = *(void *)(v1 + 88);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_19EE17780;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E9474930 + dword_1E9474930);
  unint64_t v7 = (void *)swift_task_alloc();
  v6[2] = v7;
  *unint64_t v7 = v6;
  v7[1] = sub_19EEB8A6C;
  return v9(a1, v4, v5);
}

uint64_t sub_19F0F1600()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F0F1648(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EEB8A6C;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))&aL0[*(int *)aL0];
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19F0F1724()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for JSIntentRequest() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19F0F17F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for JSIntentRequest() - 8);
  return sub_19F0F0844(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_19F0F1890()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 73, 7);
}

uint64_t sub_19F0F18C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_19F0F1930(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 1112) = v15;
  *(void *)(v8 + 1104) = v14;
  *(void *)(v8 + 1096) = a8;
  *(void *)(v8 + 1088) = a7;
  *(void *)(v8 + 1080) = a6;
  *(unsigned char *)(v8 + 329) = a5;
  *(void *)(v8 + 1072) = a3;
  *(void *)(v8 + 1064) = a2;
  *(void *)(v8 + 1056) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5C0);
  *(void *)(v8 + 1120) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MTMetricsIdentifier();
  *(void *)(v8 + 1128) = v10;
  *(void *)(v8 + 1136) = *(void *)(v10 - 8);
  *(void *)(v8 + 1144) = swift_task_alloc();
  *(void *)(v8 + 1152) = swift_task_alloc();
  *(void *)(v8 + 1160) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  *(void *)(v8 + 1168) = swift_task_alloc();
  *(void *)(v8 + 1176) = swift_task_alloc();
  uint64_t v11 = sub_19F1DB57C();
  *(void *)(v8 + 1184) = v11;
  *(void *)(v8 + 1192) = *(void *)(v11 - 8);
  *(void *)(v8 + 1200) = swift_task_alloc();
  *(void *)(v8 + 1208) = swift_task_alloc();
  *(void *)(v8 + 1216) = *a4;
  return MEMORY[0x1F4188298](sub_19F0F1B1C, 0, 0);
}

uint64_t sub_19F0F1B1C()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 1096);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 1192);
    uint64_t v3 = *(void *)(v0 + 1184);
    uint64_t v4 = *(void *)(v0 + 1176);
    uint64_t v5 = *(void *)(v0 + 1080);
    uint64_t v6 = swift_allocObject();
    *(void *)(v0 + 1224) = v6;
    *(void *)(v6 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D4F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
    *(unsigned char *)(inited + 32) = 5;
    *(void *)(inited + 64) = MEMORY[0x1E4FBB550];
    *(void *)(inited + 40) = 0;
    *(unsigned char *)(inited + 72) = 6;
    uint64_t v8 = sub_19F1DC2EC();
    *(void *)(inited + 104) = sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
    *(void *)(inited + 80) = v8;
    unint64_t v9 = sub_19EFB5354(inited);
    sub_19EEC3ED8(v5, v4, qword_1EB3923B0);
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    *(void *)(v0 + 1232) = v10;
    *(void *)(v0 + 1240) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    if (v10(v4, 1, v3) == 1)
    {
      sub_19EEBD664(*(void *)(v0 + 1176), qword_1EB3923B0);
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 1208);
      uint64_t v21 = *(void *)(v0 + 1192);
      uint64_t v22 = *(void *)(v0 + 1184);
      (*(void (**)(uint64_t, void, uint64_t))(v21 + 32))(v20, *(void *)(v0 + 1176), v22);
      *(void *)(v0 + 776) = v22;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 752));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v21 + 16))(boxed_opaque_existential_2Tm, v20, v22);
      sub_19EEBDC00((_OWORD *)(v0 + 752), (_OWORD *)(v0 + 656));
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v28 = v9;
      sub_19EFBC79C((_OWORD *)(v0 + 656), 0, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }
    *(void *)(v0 + 1248) = v9;
    uint64_t v25 = *(void *)(v0 + 1088);
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t))(*(void *)sub_19F0F38E8(v6, *(void *)(v0 + 1216), *(void *)(v0 + 1104))+ 144);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 1256) = v26(v25, v1, v9);
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1F4188298](sub_19F0F1F94, 0, 0);
  }
  else
  {
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v11 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 840) = v14;
    *(void *)(v0 + 816) = 0xD000000000000038;
    *(void *)(v0 + 824) = 0x800000019F272710;
    *(_OWORD *)(v0 + 576) = 0u;
    *(_OWORD *)(v0 + 592) = 0u;
    id v15 = v11;
    sub_19EEC3E70(v0 + 816, v0 + 576);
    *(unsigned char *)(v0 + 608) = 0;
    *(unsigned char *)(v13 + 64) = 0;
    long long v16 = *(_OWORD *)(v0 + 592);
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(v0 + 576);
    *(_OWORD *)(v13 + 48) = v16;
    *(void *)(v12 + 32) = v13;
    unint64_t v28 = (unint64_t)v15;
    char v27 = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v27);
    swift_bridgeObjectRelease();

    unint64_t v17 = sub_19EE78050(MEMORY[0x1E4FBC860]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v18(v17);
  }
}

uint64_t sub_19F0F1F94()
{
  *(void *)(v0 + 80) = v0;
  *(void *)(v0 + 120) = v0 + 1048;
  *(void *)(v0 + 88) = sub_19F0F205C;
  *(void *)(v0 + 256) = swift_continuation_init();
  *(unsigned char *)(v0 + 328) = 1;
  sub_19EF52E34(v0 + 256);
  sub_19EEBD664(v0 + 256, &qword_1E946D620);
  return MEMORY[0x1F41881E8](v0 + 80);
}

uint64_t sub_19F0F205C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 1264) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F0F3040;
  }
  else
  {
    *(void *)(v1 + 1272) = *(void *)(v1 + 1048);
    swift_release();
    uint64_t v3 = sub_19F0F2188;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F0F2188()
{
  v119 = v0;
  uint64_t v1 = v0[137];
  uint64_t v2 = v0[136];
  uint64_t v3 = v0[132];
  v118[0] = 1;
  sub_19F156620(v2, v1, v118, v3, (uint64_t)&v114);
  uint64_t v4 = v115;
  if (!v115)
  {
    swift_bridgeObjectRelease();
LABEL_94:
    swift_release();
    uint64_t v77 = v0[159];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v78 = (uint64_t (*)(uint64_t))v0[1];
    return v78(v77);
  }
  uint64_t v101 = v0;
  uint64_t v5 = v0[132];
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v111 = v6;
  uint64_t v112 = v114;
  if (v116)
  {
    if (v6)
    {
      uint64_t v97 = v117;
      uint64_t v7 = 0;
      uint64_t v98 = v5 + 32;
      uint64_t v99 = v116;
      uint64_t v8 = *(void *)(v116 + 16);
      v96 = (void *)(v116 + 56);
      while (1)
      {
        if (v8)
        {
          uint64_t v9 = v98 + 72 * v7;
          uint64_t v11 = *(void *)v9;
          uint64_t v10 = *(void *)(v9 + 8);
          char v106 = *(unsigned char *)(v9 + 40);
          uint64_t v12 = *(void *)(v9 + 64);
          double v102 = *(double *)(v9 + 32);
          uint64_t v104 = *(void *)(v9 + 56);
          if (*(void *)(v99 + 32) == *(void *)v9 && *(void *)(v99 + 40) == v10) {
            goto LABEL_43;
          }
          uint64_t v14 = sub_19F1DD44C();
          if (v14) {
            goto LABEL_43;
          }
          if (v8 != 1) {
            break;
          }
        }
LABEL_5:
        if (++v7 == v111) {
          goto LABEL_93;
        }
      }
      unint64_t v17 = v96;
      uint64_t v18 = 1;
      while (1)
      {
        uint64_t v19 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          break;
        }
        if (*(v17 - 1) == v11 && *v17 == v10) {
          goto LABEL_43;
        }
        uint64_t v14 = sub_19F1DD44C();
        if (v14) {
          goto LABEL_43;
        }
        ++v18;
        v17 += 2;
        if (v19 == v8) {
          goto LABEL_5;
        }
      }
      __break(1u);
LABEL_141:
      __break(1u);
      return MEMORY[0x1F4188298](v14, v15, v16);
    }
    goto LABEL_93;
  }
  if (!v6)
  {
LABEL_93:
    uint64_t v0 = v101;
    sub_19F0CD664(v112, v4);
    swift_bridgeObjectRelease();
    goto LABEL_94;
  }
  uint64_t v97 = v117;
  uint64_t v21 = 0;
  v109 = (char *)(v5 + 32);
  uint64_t v22 = v114;
  while (1)
  {
    uint64_t v23 = &v109[72 * v21];
    objc_super v24 = (void *)*((void *)v23 + 6);
    if (!v24) {
      goto LABEL_25;
    }
    uint64_t v25 = v24[2];
    if (!v25) {
      goto LABEL_25;
    }
    uint64_t v11 = *(void *)v23;
    uint64_t v10 = *((void *)v23 + 1);
    char v106 = v23[40];
    uint64_t v12 = *((void *)v23 + 8);
    double v102 = *((double *)v23 + 4);
    uint64_t v104 = *((void *)v23 + 7);
    if (v24[4] == v22 && v4 == v24[5]) {
      break;
    }
    uint64_t v14 = sub_19F1DD44C();
    uint64_t v22 = v112;
    if (v14) {
      break;
    }
    if (v25 != 1)
    {
      char v27 = v24 + 7;
      uint64_t v28 = 1;
      do
      {
        uint64_t v29 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          goto LABEL_141;
        }
        if (*(v27 - 1) == v22 && v4 == *v27) {
          goto LABEL_43;
        }
        uint64_t v14 = sub_19F1DD44C();
        uint64_t v22 = v112;
        if (v14) {
          goto LABEL_43;
        }
        ++v28;
        v27 += 2;
      }
      while (v29 != v25);
    }
LABEL_25:
    if (++v21 == v111) {
      goto LABEL_93;
    }
  }
LABEL_43:
  uint64_t v31 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = (void *)v101[133];
  uint64_t v0 = v101;
  sub_19F0CD664(v112, v4);
  uint64_t v33 = v32[3];
  uint64_t v34 = v32[4];
  __swift_project_boxed_opaque_existential_1(v32, v33);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v34 + 8))(&v114, v33, v34);
  uint64_t v35 = (void *)v114;
  v101[160] = v114;
  if (!v35)
  {
    swift_bridgeObjectRelease();
    sub_19F0CD664(v11, v10);
    goto LABEL_94;
  }
  uint64_t v36 = *((unsigned __int8 *)v101 + 329);
  uint64_t v37 = v101[134];
  id v38 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init, v97);
  v101[161] = v38;
  objc_msgSend(v38, sel_setAccount_, v35);
  objc_msgSend(v38, sel_setClientInfo_, v37);
  id v39 = v38;
  long long v40 = (void *)sub_19F1DBD4C();
  objc_msgSend(v39, sel_setDomain_, v40);

  objc_msgSend(v39, sel_setIsActiveITunesAccountRequired_, v36);
  v113 = v35;
  if (v106)
  {
    if (v31)
    {
      if (v104 == 0x796C696164 && v31 == 0xE500000000000000)
      {
        sub_19F0CD664(v11, v10);
        objc_msgSend(v39, sel_setResetInterval_, 86400.0, 0xE500000000000000);
      }
      else
      {
        char v41 = sub_19F1DD44C();
        sub_19F0CD664(v11, v10);
        if (v41) {
          objc_msgSend(v39, sel_setResetInterval_, 86400.0, v31);
        }
      }
    }
    else
    {
      sub_19F0CD664(v11, v10);
    }
  }
  else
  {
    sub_19F0CD664(v11, v10);
    objc_msgSend(v39, sel_setResetInterval_, v102, v31);
  }
  unint64_t v42 = (void *)sub_19F1DBD4C();
  uint64_t v43 = self;
  id v44 = objc_msgSend(v43, sel_keyWithName_crossDeviceSync_, v42, 0);
  v101[162] = v44;

  uint64_t v45 = (void *)sub_19F1DBD4C();
  id v46 = objc_msgSend(v43, sel_keyWithName_crossDeviceSync_, v45, 1);
  v101[163] = v46;

  id v47 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v48 = (void *)sub_19F1DBD4C();
  unsigned int v49 = objc_msgSend(v47, sel_BOOLForKey_, v48);

  if (v49)
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v39, sel_reset);

    double v50 = v113;
LABEL_57:

    goto LABEL_94;
  }
  uint64_t v105 = (uint64_t)(v101 + 57);
  double v51 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v101[154];
  uint64_t v52 = v101[148];
  uint64_t v53 = v101[146];
  uint64_t v54 = v101[135];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_19F250E90;
  *(void *)(v55 + 32) = v44;
  *(void *)(v55 + 40) = v46;
  uint64_t v114 = v55;
  sub_19F1DC17C();
  sub_19EEBDC10(0, (unint64_t *)&qword_1E946E1F8);
  id v110 = v39;
  id v56 = v44;
  id v100 = v46;
  uint64_t v57 = (void *)sub_19F1DC14C();
  swift_bridgeObjectRelease();
  sub_19EEC3ED8(v54, v53, qword_1EB3923B0);
  id v103 = v56;
  if (v51(v53, 1, v52) == 1)
  {
    uint64_t v58 = v101[146];
    sub_19F1DB55C();
    sub_19EEBD664(v58, qword_1EB3923B0);
  }
  else
  {
    (*(void (**)(void, void, void))(v101[149] + 32))(v101[150], v101[146], v101[148]);
  }
  uint64_t v59 = v101[150];
  uint64_t v60 = v101[149];
  uint64_t v61 = v101[148];
  double v62 = (void *)sub_19F1DB4DC();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  id v63 = objc_msgSend(v110, sel_generateEventFieldsForKeys_date_, v57, v62);

  uint64_t v64 = sub_19F1DBB3C();
  v101[120] = 0x644972657375;
  v101[121] = 0xE600000000000000;
  sub_19F1DCC8C();
  if (*(void *)(v64 + 16) && (unint64_t v65 = sub_19EE77500(v105), (v66 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v64 + 56) + 32 * v65, (uint64_t)(v101 + 110));
  }
  else
  {
    *((_OWORD *)v101 + 55) = 0u;
    *((_OWORD *)v101 + 56) = 0u;
  }
  sub_19EE7760C(v105);
  if (v101[113])
  {
    int v67 = swift_dynamicCast();
    uint64_t v68 = v101[128];
    if (!v67) {
      uint64_t v68 = 0;
    }
    uint64_t v107 = v68;
    if (v67) {
      uint64_t v69 = v101[129];
    }
    else {
      uint64_t v69 = 0;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)(v101 + 110), &qword_1EB393260);
    uint64_t v107 = 0;
    uint64_t v69 = 0;
  }
  uint64_t v70 = v101[159];
  v101[124] = 0x644972657375;
  v101[125] = 0xE600000000000000;
  sub_19F1DCC8C();
  uint64_t v108 = v70;
  if (*(void *)(v70 + 16) && (unint64_t v71 = sub_19EE77500((uint64_t)(v101 + 52)), (v72 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v101[159] + 56) + 32 * v71, (uint64_t)(v101 + 90));
  }
  else
  {
    *((_OWORD *)v101 + 45) = 0u;
    *((_OWORD *)v101 + 46) = 0u;
  }
  sub_19EE7760C((uint64_t)(v101 + 52));
  if (!v101[93])
  {
    sub_19EEBD664((uint64_t)(v101 + 90), &qword_1EB393260);
    if (v69) {
      goto LABEL_89;
    }
LABEL_92:
    int v76 = 1;
    goto LABEL_99;
  }
  int v73 = swift_dynamicCast();
  if (v73) {
    uint64_t v74 = v101[126];
  }
  else {
    uint64_t v74 = 0;
  }
  if (v73) {
    uint64_t v75 = v101[127];
  }
  else {
    uint64_t v75 = 0;
  }
  if (!v69)
  {
    if (v75)
    {
      int v76 = 0;
      goto LABEL_98;
    }
    goto LABEL_92;
  }
  if (!v75)
  {
LABEL_89:
    int v76 = 0;
    goto LABEL_98;
  }
  if (v107 == v74 && v69 == v75)
  {
    swift_bridgeObjectRelease();
    int v76 = 1;
  }
  else
  {
    int v76 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
  }
LABEL_98:
  swift_bridgeObjectRelease();
LABEL_99:
  *((unsigned char *)v101 + 330) = v76 & 1;
  v101[114] = 0x6449746E65696C63;
  v101[115] = 0xE800000000000000;
  sub_19F1DCC8C();
  if (*(void *)(v64 + 16) && (unint64_t v80 = sub_19EE77500((uint64_t)(v101 + 67)), (v81 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v64 + 56) + 32 * v80, (uint64_t)(v101 + 86));
  }
  else
  {
    *((_OWORD *)v101 + 43) = 0u;
    *((_OWORD *)v101 + 44) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_19EE7760C((uint64_t)(v101 + 67));
  if (v101[89])
  {
    int v82 = swift_dynamicCast();
    if (v82) {
      uint64_t v83 = v101[116];
    }
    else {
      uint64_t v83 = 0;
    }
    if (v82) {
      uint64_t v84 = v101[117];
    }
    else {
      uint64_t v84 = 0;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)(v101 + 86), &qword_1EB393260);
    uint64_t v83 = 0;
    uint64_t v84 = 0;
  }
  v101[118] = 0x6449746E65696C63;
  v101[119] = 0xE800000000000000;
  sub_19F1DCC8C();
  if (*(void *)(v108 + 16) && (unint64_t v85 = sub_19EE77500((uint64_t)(v101 + 62)), (v86 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v101[159] + 56) + 32 * v85, (uint64_t)(v101 + 98));
  }
  else
  {
    *((_OWORD *)v101 + 49) = 0u;
    *((_OWORD *)v101 + 50) = 0u;
  }
  sub_19EE7760C((uint64_t)(v101 + 62));
  if (!v101[101])
  {
    sub_19EEBD664((uint64_t)(v101 + 98), &qword_1EB393260);
    if (v84) {
      goto LABEL_131;
    }
LABEL_132:
    if ((v76 & 1) == 0) {
      goto LABEL_133;
    }
    goto LABEL_135;
  }
  int v87 = swift_dynamicCast();
  if (v87) {
    uint64_t v88 = v101[122];
  }
  else {
    uint64_t v88 = 0;
  }
  if (v87) {
    uint64_t v89 = v101[123];
  }
  else {
    uint64_t v89 = 0;
  }
  if (!v84)
  {
    if (v89) {
      goto LABEL_131;
    }
    goto LABEL_132;
  }
  if (v89)
  {
    if (v83 == v88 && v84 == v89)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v76 & 1) == 0)
      {
LABEL_133:
        char v90 = 1;
        goto LABEL_137;
      }
    }
    else
    {
      int v91 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v76 & v91 & 1) == 0)
      {
        char v90 = (v76 ^ 1) & v91;
        goto LABEL_137;
      }
    }
LABEL_135:
    swift_bridgeObjectRelease();

    double v50 = v103;
    goto LABEL_57;
  }
LABEL_131:
  swift_bridgeObjectRelease();
  char v90 = 0;
LABEL_137:
  *((unsigned char *)v101 + 331) = v90 & 1;
  uint64_t v92 = v101[156];
  uint64_t v93 = v101[137];
  uint64_t v94 = v101[136];
  uint64_t v95 = sub_19F0F38E8(v101[153], v101[152], v101[138]);
  v101[164] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v95 + 128))(v94, v93, v92);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = (uint64_t)sub_19F0F3140;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  return MEMORY[0x1F4188298](v14, v15, v16);
}

uint64_t sub_19F0F3040()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F0F3140()
{
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 1040;
  *(void *)(v0 + 24) = sub_19F0F3208;
  *(void *)(v0 + 336) = swift_continuation_init();
  *(unsigned char *)(v0 + 408) = 1;
  sub_19EF556BC(v0 + 336);
  sub_19EEBD664(v0 + 336, (uint64_t *)&unk_1E946D610);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_19F0F3208()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 1320) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F0F36B4;
  }
  else
  {
    *(void *)(v1 + 1328) = *(void *)(v1 + 1040);
    swift_release();
    uint64_t v3 = sub_19F0F3334;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F0F3334()
{
  if ((*(unsigned char *)(v0 + 330) & 1) == 0)
  {
    if (*(void *)(*(void *)(v0 + 1328) + 16))
    {
      unint64_t v1 = sub_19EFB6CB0(0);
      if (v2)
      {
        uint64_t v3 = *(void *)(v0 + 1160);
        uint64_t v4 = *(void *)(v0 + 1152);
        uint64_t v5 = *(void *)(v0 + 1128);
        sub_19EF7DB10(*(void *)(*(void *)(v0 + 1328) + 56) + *(void *)(*(void *)(v0 + 1136) + 72) * v1, v4);
        sub_19EF7E42C(v4, v3);
        if (*(unsigned char *)(v3 + *(int *)(v5 + 32)))
        {
          uint64_t v6 = *(void *)(v0 + 1304);
          id v7 = *(id *)(v0 + 1288);
          swift_bridgeObjectRetain();
          uint64_t v8 = (void *)sub_19F1DBD4C();
          swift_bridgeObjectRelease();
          uint64_t v9 = (void *)sub_19F1DB4DC();
          objc_msgSend(v7, sel__setIdentifier_withStartedDate_forKey_, v8, v9, v6);
        }
        sub_19EF7E490(*(void *)(v0 + 1160));
      }
    }
  }
  if (*(unsigned char *)(v0 + 331))
  {
    uint64_t v10 = *(void **)(v0 + 1304);
    uint64_t v11 = *(void **)(v0 + 1296);
    uint64_t v12 = *(void **)(v0 + 1280);

    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    if (*(void *)(*(void *)(v0 + 1328) + 16))
    {
      uint64_t v13 = 1;
      unint64_t v14 = sub_19EFB6CB0(1);
      if (v15)
      {
        sub_19EF7DB10(*(void *)(*(void *)(v0 + 1328) + 56) + *(void *)(*(void *)(v0 + 1136) + 72) * v14, *(void *)(v0 + 1120));
        uint64_t v13 = 0;
      }
    }
    else
    {
      uint64_t v13 = 1;
    }
    uint64_t v16 = *(void *)(v0 + 1136);
    uint64_t v17 = *(void *)(v0 + 1128);
    uint64_t v18 = *(void *)(v0 + 1120);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v18, v13, 1, v17);
    swift_bridgeObjectRelease();
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v17);
    uint64_t v20 = *(void **)(v0 + 1304);
    uint64_t v21 = *(void **)(v0 + 1296);
    uint64_t v22 = *(void **)(v0 + 1288);
    uint64_t v23 = *(void **)(v0 + 1280);
    if (v19 == 1)
    {
      uint64_t v24 = *(void *)(v0 + 1120);

      sub_19EEBD664(v24, &qword_1E946D5C0);
    }
    else
    {
      uint64_t v25 = *(void *)(v0 + 1144);
      sub_19EF7E42C(*(void *)(v0 + 1120), v25);
      id v26 = v22;
      swift_bridgeObjectRetain();
      char v27 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      uint64_t v28 = (void *)sub_19F1DB4DC();
      objc_msgSend(v26, sel__setIdentifier_withStartedDate_forKey_, v27, v28, v21);

      sub_19EF7E490(v25);
    }
    swift_release();
  }
  uint64_t v29 = *(void *)(v0 + 1272);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v30(v29);
}

uint64_t sub_19F0F36B4()
{
  uint64_t v15 = v0;

  swift_release();
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  unint64_t v1 = *(void **)(v0 + 1304);
  char v2 = *(void **)(v0 + 1296);
  uint64_t v3 = *(void **)(v0 + 1288);
  uint64_t v4 = *(void **)(v0 + 1280);
  uint64_t v5 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  *(void *)(v0 + 872) = v8;
  *(void *)(v0 + 848) = 0xD000000000000022;
  *(void *)(v0 + 856) = 0x800000019F272770;
  *(_OWORD *)(v0 + 616) = 0u;
  *(_OWORD *)(v0 + 632) = 0u;
  id v9 = v5;
  sub_19EEC3E70(v0 + 848, v0 + 616);
  *(unsigned char *)(v0 + 648) = 0;
  *(unsigned char *)(v7 + 64) = 0;
  long long v10 = *(_OWORD *)(v0 + 632);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v7 + 48) = v10;
  *(void *)(v6 + 32) = v7;
  char v14 = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v14);
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v11 = *(void *)(v0 + 1272);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v12(v11);
}

uint64_t sub_19F0F38E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = v3;
  }
  else
  {
    v8[0] = a2;
    uint64_t v6 = *(uint64_t (**)(void *))(a3 + 104);
    swift_unknownObjectRetain();
    uint64_t v5 = v6(v8);
    swift_beginAccess();
    *uint64_t v4 = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

void *sub_19F0F398C(void *a1, uint64_t a2)
{
  uint64_t v3 = (void *)*a1;
  if (v3)
  {
    uint64_t v4 = v3;
  }
  else
  {
    type metadata accessor for MTStandardIDServiceWrapper();
    uint64_t v4 = (void *)swift_allocObject();
    id v6 = objc_allocWithZone((Class)JESoftLinkedMTStandardIDService);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_19F1DBB1C();
    id v8 = objc_msgSend(v6, sel_initWithConfigDictionary_, v7);

    v4[2] = v8;
    void v4[3] = 0;
    v4[4] = a2;
    swift_beginAccess();
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

void sub_19F0F3A84(uint64_t a1, void *a2, void *a3, void *a4, NSObject *a5)
{
  uint64_t v9 = sub_19F1DB57C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEBDC10(0, (unint64_t *)&unk_1EB392290);
  uint64_t v13 = (void *)sub_19F1DCA3C();
  char v14 = sub_19F1DCA1C();

  if (v14)
  {
    id v47 = a4;
    uint64_t v48 = a5;
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v15 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
    id v17 = v15;
    uint64_t v58 = sub_19EEC3F3C(0, 32, 0, MEMORY[0x1E4FBC860]);
    v18._uint64_t countAndFlagsBits = 0x20676E69766F4DLL;
    v18._object = (void *)0xE700000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    id v19 = objc_msgSend(a2, sel_name);
    uint64_t v20 = sub_19F1DBD7C();
    uint64_t v22 = v21;

    uint64_t v57 = MEMORY[0x1E4FBB1A0];
    uint64_t v55 = v20;
    uint64_t v56 = v22;
    sub_19EEC3ED8((uint64_t)&v55, (uint64_t)v51, &qword_1EB393260);
    long long v49 = 0u;
    long long v50 = 0u;
    sub_19EEC3E70((uint64_t)v51, (uint64_t)&v49);
    char v54 = 0;
    long long v52 = v49;
    long long v53 = v50;
    uint64_t v23 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v23 = sub_19EEC3F3C(0, v23[2] + 1, 1, v23);
    }
    unint64_t v25 = v23[2];
    unint64_t v24 = v23[3];
    if (v25 >= v24 >> 1) {
      uint64_t v23 = sub_19EEC3F3C((void *)(v24 > 1), v25 + 1, 1, v23);
    }
    void v23[2] = v25 + 1;
    id v26 = &v23[5 * v25];
    long long v27 = v52;
    long long v28 = v53;
    *((unsigned char *)v26 + 64) = v54;
    *((_OWORD *)v26 + 2) = v27;
    *((_OWORD *)v26 + 3) = v28;
    uint64_t v58 = v23;
    sub_19EEBD664((uint64_t)&v55, &qword_1EB393260);
    v29._uint64_t countAndFlagsBits = 0xD000000000000018;
    v29._object = (void *)0x800000019F2727A0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    *(void *)(v16 + 32) = v58;
    *(void *)&long long v52 = v17;
    LOBYTE(v49) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v49);

    swift_bridgeObjectRelease();
    id v30 = objc_msgSend(a3, sel_identifierForKey_, a2);
    if (!v30)
    {
      sub_19F1DBD7C();
      id v30 = (id)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
    }
    sub_19F1DB55C();
    uint64_t v31 = (void *)sub_19F1DB4DC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    objc_msgSend(v47, sel__setIdentifier_withStartedDate_forKey_, v30, v31, a2);

    a5 = v48;
  }
  else
  {
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v32 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_19F24EAD0;
    id v34 = v32;
    uint64_t v58 = sub_19EEC3F3C(0, 59, 0, MEMORY[0x1E4FBC860]);
    v35._object = (void *)0x800000019F272830;
    v35._uint64_t countAndFlagsBits = 0xD000000000000013;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    id v36 = objc_msgSend(a2, sel_name);
    uint64_t v37 = sub_19F1DBD7C();
    uint64_t v39 = v38;

    uint64_t v57 = MEMORY[0x1E4FBB1A0];
    uint64_t v55 = v37;
    uint64_t v56 = v39;
    sub_19EEC3ED8((uint64_t)&v55, (uint64_t)v51, &qword_1EB393260);
    long long v49 = 0u;
    long long v50 = 0u;
    sub_19EEC3E70((uint64_t)v51, (uint64_t)&v49);
    char v54 = 0;
    long long v52 = v49;
    long long v53 = v50;
    long long v40 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v40 = sub_19EEC3F3C(0, v40[2] + 1, 1, v40);
    }
    unint64_t v42 = v40[2];
    unint64_t v41 = v40[3];
    if (v42 >= v41 >> 1) {
      long long v40 = sub_19EEC3F3C((void *)(v41 > 1), v42 + 1, 1, v40);
    }
    v40[2] = v42 + 1;
    uint64_t v43 = &v40[5 * v42];
    long long v44 = v52;
    long long v45 = v53;
    *((unsigned char *)v43 + 64) = v54;
    *((_OWORD *)v43 + 2) = v44;
    *((_OWORD *)v43 + 3) = v45;
    uint64_t v58 = v40;
    sub_19EEBD664((uint64_t)&v55, &qword_1EB393260);
    v46._uint64_t countAndFlagsBits = 0xD000000000000027;
    v46._object = (void *)0x800000019F272850;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    *(void *)(v33 + 32) = v58;
    *(void *)&long long v52 = v34;
    LOBYTE(v49) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v33, (JetEngine::LogMessageLevel)&v49);

    swift_bridgeObjectRelease();
  }
  dispatch_group_leave(a5);
}

void sub_19F0F403C(uint64_t a1, void *a2, void *a3, void *a4, NSObject *a5)
{
  dispatch_group_t v40 = a5;
  id v39 = a4;
  uint64_t v38 = sub_19F1DB57C();
  uint64_t v7 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
  id v12 = v10;
  double v51 = sub_19EEC3F3C(0, 75, 0, MEMORY[0x1E4FBC860]);
  v13._uint64_t countAndFlagsBits = 0xD000000000000028;
  v13._object = (void *)0x800000019F272800;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  swift_getErrorValue();
  uint64_t v14 = v47;
  uint64_t v15 = v48;
  uint64_t v50 = v48;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v49);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(boxed_opaque_existential_2Tm, v14, v15);
  sub_19EEC3ED8((uint64_t)v49, (uint64_t)v43, &qword_1EB393260);
  long long v42 = 0u;
  long long v41 = 0u;
  sub_19EEC3E70((uint64_t)v43, (uint64_t)&v41);
  char v46 = 0;
  long long v44 = v41;
  long long v45 = v42;
  id v17 = v51;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
  }
  unint64_t v19 = v17[2];
  unint64_t v18 = v17[3];
  if (v19 >= v18 >> 1) {
    id v17 = sub_19EEC3F3C((void *)(v18 > 1), v19 + 1, 1, v17);
  }
  v17[2] = v19 + 1;
  uint64_t v20 = &v17[5 * v19];
  long long v21 = v44;
  long long v22 = v45;
  *((unsigned char *)v20 + 64) = v46;
  *((_OWORD *)v20 + 2) = v21;
  *((_OWORD *)v20 + 3) = v22;
  double v51 = v17;
  sub_19EEBD664((uint64_t)v49, &qword_1EB393260);
  v23._uint64_t countAndFlagsBits = 0x676E69766F6D202CLL;
  v23._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  id v24 = objc_msgSend(a2, sel_name);
  uint64_t v25 = sub_19F1DBD7C();
  uint64_t v27 = v26;

  uint64_t v50 = MEMORY[0x1E4FBB1A0];
  v49[0] = v25;
  v49[1] = v27;
  sub_19EEC3ED8((uint64_t)v49, (uint64_t)v43, &qword_1EB393260);
  long long v42 = 0u;
  long long v41 = 0u;
  sub_19EEC3E70((uint64_t)v43, (uint64_t)&v41);
  char v46 = 0;
  long long v44 = v41;
  long long v45 = v42;
  long long v28 = v51;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v28 = sub_19EEC3F3C(0, v28[2] + 1, 1, v28);
  }
  unint64_t v30 = v28[2];
  unint64_t v29 = v28[3];
  if (v30 >= v29 >> 1) {
    long long v28 = sub_19EEC3F3C((void *)(v29 > 1), v30 + 1, 1, v28);
  }
  v28[2] = v30 + 1;
  uint64_t v31 = &v28[5 * v30];
  long long v32 = v44;
  long long v33 = v45;
  *((unsigned char *)v31 + 64) = v46;
  *((_OWORD *)v31 + 2) = v32;
  *((_OWORD *)v31 + 3) = v33;
  double v51 = v28;
  sub_19EEBD664((uint64_t)v49, &qword_1EB393260);
  v34._object = (void *)0x800000019F2727A0;
  v34._uint64_t countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  *(void *)(v11 + 32) = v51;
  *(void *)&long long v44 = v12;
  LOBYTE(v41) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v41);

  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(a3, sel_identifierForKey_, a2);
  if (!v35)
  {
    sub_19F1DBD7C();
    id v35 = (id)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
  }
  sub_19F1DB55C();
  id v36 = (void *)sub_19F1DB4DC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v38);
  objc_msgSend(v39, sel__setIdentifier_withStartedDate_forKey_, v35, v36, a2);

  dispatch_group_leave(v40);
}

uint64_t sub_19F0F4518(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6)
{
  uint64_t v15 = *v6;
  uint64_t v14 = v6[1];
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  void *v16 = v7;
  v16[1] = sub_19EE19904;
  return sub_19F0F1930(a1, a2, a3, a4, a5, a6, v15, v14);
}

uint64_t sub_19F0F4610(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_19F0F4EF4(a1, a2, a3, *(void *)(a5 + 16), *(void *)(a5 + 24), a4);
}

uint64_t static JEMetricsSecretMigrator.migrateSecretIfNecessaryAndReturnSecretValue(namespace:topic:secretKey:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9474960 + dword_1E9474960);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19F0F46E8;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_19F0F46E8(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_19F0F4994(void *a1, void *a2, void *a3, void *a4, void *aBlock)
{
  v5[4] = a3;
  v5[5] = a4;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = _Block_copy(aBlock);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9474960 + dword_1E9474960);
  id v10 = a1;
  id v11 = a2;
  id v12 = a3;
  id v13 = a4;
  uint64_t v14 = (void *)swift_task_alloc();
  v5[7] = v14;
  *uint64_t v14 = v5;
  v14[1] = sub_19F0F4A9C;
  return v16((uint64_t)v10, (uint64_t)v11, (uint64_t)v12, (uint64_t)v13);
}

uint64_t sub_19F0F4A9C()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 40);
  uint64_t v5 = *(void **)(*v1 + 32);
  uint64_t v6 = *(void **)(*v1 + 24);
  uint64_t v7 = *(void **)(*v1 + 16);
  uint64_t v8 = *v1;
  swift_task_dealloc();

  if (v2)
  {
    uint64_t v9 = sub_19F1DB18C();

    uint64_t v10 = 0;
    id v11 = (void *)v9;
  }
  else
  {
    uint64_t v10 = sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    id v11 = (void *)v10;
  }
  id v12 = *(void (***)(void, void, void))(v3 + 48);
  v12[2](v12, v10, v9);

  _Block_release(v12);
  id v13 = *(uint64_t (**)(void))(v8 + 8);
  return v13();
}

id JEMetricsSecretMigrator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id JEMetricsSecretMigrator.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JEMetricsSecretMigrator();
  return objc_msgSendSuper2(&v2, sel_init);
}

id JEMetricsSecretMigrator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JEMetricsSecretMigrator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19F0F4D5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_19EE17780;
  return v6();
}

uint64_t sub_19F0F4E28(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_19EE17780;
  return v7();
}

uint64_t sub_19F0F4EF4(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v26)(long long *__return_ptr, uint64_t, uint64_t);
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  char v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  long long v37;
  NSObject *v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  NSObject *v62;
  id v63;
  id v64;
  NSObject *v65;
  uint64_t v66;
  NSObject *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  long long v75;
  id v76;
  long long v77;
  long long v78;
  unsigned char v79[48];
  long long v80;
  long long v81;
  _UNKNOWN **v82;
  unsigned char v83[32];
  void v84[4];
  void *v85;

  uint64_t v70 = a6;
  uint64_t v69 = a5;
  uint64_t v68 = a4;
  int v76 = a3;
  uint64_t v74 = sub_19F1DBA0C();
  int v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  char v72 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v10 = swift_allocObject();
  uint64_t v75 = xmmword_19F24EAD0;
  *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
  id v11 = v9;
  unint64_t v85 = sub_19EEC3F3C(0, 35, 0, MEMORY[0x1E4FBC860]);
  v12._uint64_t countAndFlagsBits = 0x6E6974617267694DLL;
  v12._object = (void *)0xEA00000000002067;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  id v13 = objc_msgSend(a1, sel_name);
  uint64_t v14 = sub_19F1DBD7C();
  uint64_t v16 = v15;

  v84[3] = MEMORY[0x1E4FBB1A0];
  v84[0] = v14;
  v84[1] = v16;
  sub_19EEC3ED8((uint64_t)v84, (uint64_t)v83, &qword_1EB393260);
  unint64_t v80 = 0u;
  char v81 = 0u;
  sub_19EEC3E70((uint64_t)v83, (uint64_t)&v80);
  v79[0] = 0;
  uint64_t v77 = v80;
  char v78 = v81;
  uint64_t v17 = v85;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
  }
  unint64_t v19 = v17[2];
  unint64_t v18 = v17[3];
  unint64_t v71 = a1;
  if (v19 >= v18 >> 1) {
    uint64_t v17 = sub_19EEC3F3C((void *)(v18 > 1), v19 + 1, 1, v17);
  }
  v17[2] = v19 + 1;
  uint64_t v20 = &v17[5 * v19];
  long long v21 = v77;
  long long v22 = v78;
  *((unsigned char *)v20 + 64) = v79[0];
  *((_OWORD *)v20 + 2) = v21;
  *((_OWORD *)v20 + 3) = v22;
  unint64_t v85 = v17;
  sub_19EEBD664((uint64_t)v84, &qword_1EB393260);
  v23._object = (void *)0x800000019F2727A0;
  v23._uint64_t countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  *(void *)(v10 + 32) = v85;
  *(void *)&uint64_t v77 = v11;
  LOBYTE(v80) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v80);

  swift_bridgeObjectRelease();
  uint64_t v25 = a2[3];
  uint64_t v24 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v25);
  uint64_t v26 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v24 + 8);
  v26(&v77, v25, v24);
  uint64_t v27 = (void *)v77;
  if ((void)v77)
  {
    long long v28 = objc_msgSend((id)v77, sel_identifier);
  }
  else
  {
    long long v28 = 0;
  }
  unint64_t v29 = objc_msgSend(v76, sel_account);
  unint64_t v30 = objc_msgSend(v29, sel_identifier);

  if (v28)
  {
    if (v30)
    {
      sub_19EEBDC10(0, (unint64_t *)&unk_1EB392290);
      uint64_t v31 = v28;
      long long v32 = sub_19F1DCA1C();

      if ((v32 & 1) == 0) {
        goto LABEL_18;
      }
LABEL_15:
      long long v33 = (void *)qword_1EB393080;
      Swift::String v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v75;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      id v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = v75;
      *((void *)&v81 + 1) = MEMORY[0x1E4FBB1A0];
      *(void *)&unint64_t v80 = 0xD00000000000003ELL;
      *((void *)&v80 + 1) = 0x800000019F2727C0;
      char v78 = 0u;
      uint64_t v77 = 0u;
      id v36 = v33;
      sub_19EEC3E70((uint64_t)&v80, (uint64_t)&v77);
      *(unsigned char *)(v35 + 64) = 0;
      uint64_t v37 = v78;
      *(_OWORD *)(v35 + 32) = v77;
      *(_OWORD *)(v35 + 48) = v37;
      *(void *)(v34 + 32) = v35;
      *(void *)&uint64_t v77 = v36;
      LOBYTE(v80) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v34, (JetEngine::LogMessageLevel)&v80);

      return swift_bridgeObjectRelease();
    }
    unint64_t v30 = v28;
  }
  else if (!v30)
  {
    goto LABEL_15;
  }

LABEL_18:
  id v39 = dispatch_group_create();
  dispatch_group_enter(v39);
  dispatch_group_t v40 = v70;
  long long v41 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v26(&v77, v25, v24);
  long long v42 = (void *)v77;
  objc_msgSend(v41, sel_setAccount_, (void)v77);

  uint64_t v43 = v41;
  long long v44 = v76;
  long long v45 = objc_msgSend(v76, sel_clientInfo);
  objc_msgSend(v43, sel_setClientInfo_, v45);

  char v46 = v43;
  objc_msgSend(v46, sel_setIsActiveITunesAccountRequired_, objc_msgSend(v44, sel_isActiveITunesAccountRequired));

  uint64_t v47 = v46;
  uint64_t v48 = objc_msgSend(v44, sel_domain);
  objc_msgSend(v47, sel_setDomain_, v48);

  long long v49 = v47;
  objc_msgSend(v44, sel_resetInterval);
  objc_msgSend(v49, sel_setResetInterval_);

  uint64_t v50 = v71;
  *(void *)&uint64_t v75 = sub_19EE4A050(objc_msgSend(v44, sel_identifierIfExistsForKey_, v71));
  double v51 = (void *)swift_allocObject();
  long long v52 = v68;
  long long v53 = v69;
  v51[2] = v68;
  v51[3] = v53;
  v51[4] = v40;
  v51[5] = v50;
  v51[6] = v49;
  v51[7] = v44;
  int v67 = v39;
  v51[8] = v39;
  char v54 = (void *)swift_allocObject();
  v54[2] = v52;
  v54[3] = v53;
  v54[4] = v40;
  v54[5] = v50;
  v54[6] = v49;
  v54[7] = v44;
  v54[8] = v39;
  uint64_t v55 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
  uint64_t v56 = v73;
  uint64_t v57 = v72;
  uint64_t v58 = v74;
  (*(void (**)(char *, void, uint64_t))(v73 + 104))(v72, *MEMORY[0x1E4FBCB48], v74);
  uint64_t v59 = v49;
  uint64_t v60 = v50;
  uint64_t v61 = v44;
  double v62 = v67;
  int v76 = v59;
  id v63 = v60;
  uint64_t v64 = v61;
  unint64_t v65 = v62;
  char v66 = sub_19F1DC8BC();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
  *((void *)&v81 + 1) = v55;
  int v82 = &protocol witness table for OS_dispatch_queue;
  *(void *)&unint64_t v80 = v66;
  *(void *)&uint64_t v77 = sub_19F0F6674;
  *((void *)&v77 + 1) = v51;
  *(void *)&char v78 = sub_19F0F66DC;
  *((void *)&v78 + 1) = v54;
  sub_19EEC4154((uint64_t)&v80, (uint64_t)v79);
  v79[40] = 0;
  swift_retain();
  swift_retain();
  sub_19EE3F5BC((uint64_t)&v77);
  sub_19EEBD664((uint64_t)&v77, &qword_1EB3903F0);
  swift_release();
  swift_release();
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v80);
}

uint64_t sub_19F0F5778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[31] = a5;
  unsigned char v6[32] = a6;
  v6[29] = a3;
  v6[30] = a4;
  v6[27] = a1;
  v6[28] = a2;
  return MEMORY[0x1F4188298](sub_19F0F57A0, 0, 0);
}

uint64_t sub_19F0F57A0()
{
  void (*v5)(void **__return_ptr, uint64_t, uint64_t);
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;

  uint64_t v14 = v0;
  id v1 = (void *)v0[30];
  id v11 = v0[31];
  Swift::String v12 = v0[32];
  v0[26] = 0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD78]), sel_init);
  v0[33] = v2;
  uint64_t v4 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  uint64_t v5 = *(void (**)(void **__return_ptr, uint64_t, uint64_t))(v3 + 8);
  uint64_t v6 = v2;
  v5(&v13, v4, v3);
  uint64_t v7 = v13;
  objc_msgSend(v6, sel_setAccount_, v13);

  objc_msgSend(v6, sel_setClientInfo_, v11);
  uint64_t v8 = v6;
  uint64_t v9 = (void *)sub_19F1DBD4C();
  objc_msgSend(v8, sel_setDomain_, v9);

  sub_19F0F398C(v0 + 26, v12);
  v0[34] = sub_19EF7D7D8();
  swift_release();
  return MEMORY[0x1F4188298](sub_19F0F5924, 0, 0);
}

uint64_t sub_19F0F5924()
{
  id v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F0F59E8;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF54018(v2);
  sub_19EEBD664(v2, &qword_1E9470FA0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F0F59E8()
{
  id v1 = *(void **)v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 280) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F0F5E6C;
  }
  else
  {
    uint64_t v4 = v1[21];
    v1[36] = v1[20];
    v1[37] = v4;
    swift_release();
    uint64_t v3 = sub_19F0F5B14;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F0F5B14()
{
  id v1 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v2 = (void *)sub_19F1DBD4C();
  unsigned int v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  uint64_t v4 = *(void **)(v0 + 264);
  if (v3)
  {
    objc_msgSend(*(id *)(v0 + 264), sel_reset);

    goto LABEL_16;
  }
  uint64_t v5 = *(void **)(v0 + 232);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F255020;
  *(void *)(v6 + 32) = v5;
  uint64_t v26 = v6;
  sub_19F1DC17C();
  sub_19EEBDC10(0, (unint64_t *)&qword_1E946E1F8);
  id v7 = v4;
  id v8 = v5;
  uint64_t v9 = (void *)sub_19F1DC14C();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v7, sel_generateEventFieldsForKeys_, v9, v26);

  uint64_t v11 = sub_19F1DBB3C();
  id v12 = objc_msgSend(v8, sel_name);
  uint64_t v13 = sub_19F1DBD7C();
  uint64_t v15 = v14;

  *(void *)(v0 + 192) = v13;
  *(void *)(v0 + 200) = v15;
  sub_19F1DCC8C();
  if (*(void *)(v11 + 16) && (unint64_t v16 = sub_19EE77500(v0 + 80), (v17 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v16, v0 + 160);
  }
  else
  {
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_19EE7760C(v0 + 80);
  if (*(void *)(v0 + 184))
  {
    if (swift_dynamicCast())
    {
      if (*(void *)(v0 + 192) == *(void *)(v0 + 288) && *(void *)(v0 + 200) == *(void *)(v0 + 296))
      {
        swift_bridgeObjectRelease();
LABEL_14:

        goto LABEL_16;
      }
      char v18 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    sub_19EEBD664(v0 + 160, &qword_1EB393260);
  }
  uint64_t v19 = *(void *)(v0 + 232);
  id v20 = *(id *)(v0 + 264);
  long long v21 = (void *)sub_19F1DBD4C();
  objc_msgSend(v20, sel_setIdentifier_forKey_, v21, v19);

LABEL_16:
  swift_release();
  long long v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v23 = *(void *)(v0 + 288);
  uint64_t v24 = *(void *)(v0 + 296);
  return v22(v23, v24);
}

uint64_t sub_19F0F5E6C()
{
  id v1 = *(void **)(v0 + 264);
  swift_release();

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F0F5EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  return MEMORY[0x1F4188298](sub_19F0F5F00, 0, 0);
}

uint64_t sub_19F0F5F00()
{
  unint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void **)(v0 + 56);
  id v3 = *(id *)(v0 + 64);
  sub_19F1DBDFC();
  *(void *)(v0 + 88) = v4;
  id v5 = v2;
  uint64_t v6 = sub_19F1DBDFC();
  uint64_t v8 = v7;
  *(void *)(v0 + 96) = v7;
  id v9 = objc_msgSend(self, sel_ams_sharedAccountStore);
  *(void *)(v0 + 40) = sub_19EEBDC10(0, qword_1EB392F30);
  *(void *)(v0 + 48) = &protocol witness table for ACAccountStore;
  *(void *)(v0 + 16) = v9;
  id v10 = objc_msgSend(self, sel_currentProcess);
  *(void *)(v0 + 104) = v10;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E94749A0
                                                                                     + dword_1E94749A0);
  id v11 = (id)v1;
  id v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v12;
  *id v12 = v0;
  v12[1] = sub_19F0F6084;
  uint64_t v13 = *(void *)(v0 + 72);
  return v15(v6, v8, v13, v0 + 16, (uint64_t)v10, ~(v1 >> 1) & 0x4000000000000000 | v1);
}

uint64_t sub_19F0F6084(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 120) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = *(void **)(v6 + 104);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_19F0F622C, 0, 0);
  }
  else
  {
    uint64_t v8 = *(void **)(v6 + 104);
    id v9 = *(void **)(v6 + 80);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_1Tm(v6 + 16);
    id v10 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v10(a1, a2);
  }
}

uint64_t sub_19F0F622C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for JEMetricsSecretMigrator()
{
  return self;
}

uint64_t sub_19F0F62B4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F0F62EC()
{
  _Block_release(*(const void **)(v0 + 48));
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_19F0F6344()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  id v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_19EEB8A6C;
  uint64_t v8 = (uint64_t (*)(void *, void *, void *, void *, void *))((char *)&dword_1E9474970 + dword_1E9474970);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_19F0F641C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_19EE17780;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1E9474980 + dword_1E9474980);
  return v6(v2, v3, v4);
}

uint64_t sub_19F0F64E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_19EE17780;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E9474990 + dword_1E9474990);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_19F0F65AC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_19F0F6608(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for AMSMetricsFieldsMigrator()
{
  return __swift_instantiateGenericMetadata();
}

void sub_19F0F6674(uint64_t a1)
{
  sub_19F0F3A84(a1, *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(NSObject **)(v1 + 64));
}

uint64_t objectdestroy_24Tm()
{
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_19F0F66DC(uint64_t a1)
{
  sub_19F0F403C(a1, *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(NSObject **)(v1 + 64));
}

BOOL static LRUMultiCache.Values.Index.< infix(_:_:)(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL static LRUMultiCache.Values.Index.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t LRUMultiCache.Values.makeIterator()@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  a1[1] = 0;
  return swift_bridgeObjectRetain();
}

void LRUMultiCache.Values.startIndex.getter(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t LRUMultiCache.Values.endIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = MEMORY[0x19F3C6550](*(void *)(v2 + 8), *(void *)(a1 + 24));
  *a2 = result;
  return result;
}

void *LRUMultiCache.Values.index(after:)@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

uint64_t LRUMultiCache.Values.subscript.getter()
{
  return sub_19F1DC2DC();
}

uint64_t LRUMultiCache.Values.insert(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x19F3C6510](v2[1], v4, v6);
  if ((v9 & 0x8000000000000000) == 0 && v9 == *v2)
  {
    sub_19F1DC27C();
    swift_getWitnessTable();
    sub_19F1DC70C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  sub_19F1DC27C();
  return sub_19F1DC23C();
}

uint64_t LRUMultiCache.Values.removeAll(where:)()
{
  return sub_19F1DC72C();
}

Swift::Void __swiftcall LRUMultiCache.Values.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
}

uint64_t sub_19F0F69D4()
{
  return LRUMultiCache.Values.removeAll(where:)();
}

void sub_19F0F69F0(void *a1@<X8>)
{
}

void (*sub_19F0F6A0C(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  double v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_19F0F6A7C(v6, a2, a3);
  return sub_19F0CCEB0;
}

void (*sub_19F0F6A7C(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v3 = *(void *)(a3 + 24);
  *a1 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  a1[1] = v4;
  a1[2] = malloc(*(void *)(v4 + 64));
  sub_19F1DC2DC();
  return sub_19F03D9D0;
}

uint64_t sub_19F0F6B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19F0F822C(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_19F0F6B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19F0F822C(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

void *sub_19F0F6BD8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LRUMultiCache.Values.index(after:)(a1, a2);
}

void *sub_19F0F6BF0(void *a1)
{
  uint64_t result = LRUMultiCache.Values.index(after:)(a1, &v3);
  *a1 = v3;
  return result;
}

uint64_t sub_19F0F6C28@<X0>(void *a1@<X8>)
{
  LRUMultiCache.Values.makeIterator()(a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0F6C54(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_19F0F6CA8()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_19F0F801C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LRUMultiCache.__allocating_init(keyLimit:valueLimit:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  LRUMultiCache.init(keyLimit:valueLimit:)(a1, a2);
  return v4;
}

void LRUMultiCache.init(keyLimit:valueLimit:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  double v6 = (void *)*v3;
  uint64_t v7 = sub_19F1DB9FC();
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DBA3C();
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v36 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DC90C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a1;
  if (a1 && a2)
  {
    _OWORD v3[2] = a2;
    sub_19F0F7204();
    uint64_t v33 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474A38);
    uint64_t v31 = v9;
    uint64_t v32 = v10;
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_19F24EB80;
    sub_19F1DC8EC();
    sub_19F1DC8FC();
    uint64_t aBlock = v16;
    sub_19F0F7244();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474A48);
    sub_19F0F729C();
    sub_19F1DCC1C();
    uint64_t v17 = sub_19F1DC91C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v3[3] = v17;
    uint64_t v18 = v6[10];
    uint64_t v19 = v6[11];
    uint64_t v20 = v6[12];
    type metadata accessor for LRUMultiCache.Values();
    uint64_t aBlock = sub_19F086A70(v35);
    uint64_t v39 = v21;
    dispatch_group_t v40 = v22;
    uint64_t v23 = type metadata accessor for _LRUCache();
    uint64_t v24 = sub_19EEAEA5C(&aBlock, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    void v3[4] = v24;
    swift_getObjectType();
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = v18;
    v26[3] = v19;
    void v26[4] = v20;
    void v26[5] = v25;
    long long v42 = sub_19F0F7D5C;
    uint64_t v43 = v26;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v39 = 1107296256;
    dispatch_group_t v40 = sub_19EEA4A68;
    long long v41 = &block_descriptor_27;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_retain();
    long long v28 = v36;
    sub_19EFD4010();
    unint64_t v29 = v31;
    sub_19EE99B20();
    sub_19F1DC92C();
    _Block_release(v27);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v33);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v32);
    swift_release();
    swift_release();
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19F1DC96C();
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_19F0F7204()
{
  unint64_t result = qword_1EB390740;
  if (!qword_1EB390740)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB390740);
  }
  return result;
}

unint64_t sub_19F0F7244()
{
  unint64_t result = qword_1E9474A40;
  if (!qword_1E9474A40)
  {
    sub_19F1DC90C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474A40);
  }
  return result;
}

unint64_t sub_19F0F729C()
{
  unint64_t result = qword_1E9474A50[0];
  if (!qword_1E9474A50[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9474A48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9474A50);
  }
  return result;
}

uint64_t type metadata accessor for LRUMultiCache.Values()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0F7310()
{
  uint64_t v0 = sub_19F1DC90C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getObjectType();
    sub_19F1DC9DC();
    sub_19F0F7428();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

void sub_19F0F7428()
{
  uint64_t v0 = sub_19F1DC90C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DC8EC();
  sub_19F0F7244();
  char v4 = sub_19F1DCBFC();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  if (v4 & 1) != 0 || (sub_19F1DC8FC(), char v6 = sub_19F1DCBFC(), v5(v3, v0), (v6)) {
    LRUMultiCache.removeAll(keepingCapacity:)(v4 & 1);
  }
}

uint64_t LRUMultiCache.deinit()
{
  swift_getObjectType();
  sub_19F1DC93C();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t LRUMultiCache.__deallocating_deinit()
{
  LRUMultiCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t LRUMultiCache.withValues<A>(forKey:perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(v4 + 32);
  v7[2] = a4;
  v7[3] = a1;
  v7[4] = a2;
  v7[5] = a3;
  type metadata accessor for LRUMultiCache.Values();
  type metadata accessor for _LRUCache();
  swift_retain();
  sub_19EEAC6FC((void (*)(uint64_t))sub_19F0F7D68, (uint64_t)v7, v5);
  return swift_release();
}

uint64_t sub_19F0F76D8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v19 = a6;
  uint64_t v9 = *(void *)(*a5 + 80);
  type metadata accessor for LRUMultiCache.Values();
  uint64_t v10 = type metadata accessor for _LRUCache();
  sub_19F085A48(a2, v10, (char *)&v15);
  if (v16)
  {
    uint64_t v17 = v15;
    uint64_t v18 = v16;
    a3(&v17);
    sub_19F0F785C(&v17, a1, a2, v9);
  }
  else
  {
    uint64_t v11 = a5[2];
    uint64_t v12 = sub_19F1DC1CC();
    uint64_t v17 = v11;
    uint64_t v18 = v12;
    a3(&v17);
    sub_19F0F79FC(&v17, a1, a2, v9);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F0F785C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v10[1];
  uint64_t v16 = *v10;
  uint64_t v17 = v11;
  type metadata accessor for LRUMultiCache.Values();
  swift_getWitnessTable();
  if (sub_19F1DC6AC())
  {
    uint64_t v12 = type metadata accessor for _LRUCache();
    sub_19F086178(a3, v12, (char *)&v16);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, a4);
    uint64_t v14 = a1[1];
    uint64_t v16 = *a1;
    uint64_t v17 = v14;
    uint64_t v15 = type metadata accessor for _LRUCache();
    swift_bridgeObjectRetain();
    return sub_19F085E90((char *)&v16, (uint64_t)v9, v15);
  }
}

uint64_t sub_19F0F79FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v10[1];
  uint64_t v15 = *v10;
  uint64_t v16 = v11;
  type metadata accessor for LRUMultiCache.Values();
  swift_getWitnessTable();
  uint64_t result = sub_19F1DC6AC();
  if ((result & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, a4);
    uint64_t v13 = a1[1];
    uint64_t v15 = *a1;
    uint64_t v16 = v13;
    uint64_t v14 = type metadata accessor for _LRUCache();
    swift_bridgeObjectRetain();
    return sub_19F085E90((char *)&v15, (uint64_t)v9, v14);
  }
  return result;
}

Swift::Void __swiftcall LRUMultiCache.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[4];
  v4[2] = *(void *)(*v1 + 80);
  void v4[3] = *(void *)(v2 + 88);
  v4[4] = *(void *)(v2 + 96);
  Swift::Bool v5 = keepingCapacity;
  type metadata accessor for LRUMultiCache.Values();
  type metadata accessor for _LRUCache();
  swift_retain();
  sub_19EEAC6FC((void (*)(uint64_t))sub_19F0F7D8C, (uint64_t)v4, v3);
  swift_release();
}

uint64_t sub_19F0F7C54()
{
  return sub_19F0871D0();
}

uint64_t sub_19F0F7CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return LRUMultiCache.withValues<A>(forKey:perform:)(a1, a2, a3, a4);
}

uint64_t sub_19F0F7CEC()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F0F7D24()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F0F7D5C()
{
  return sub_19F0F7310();
}

uint64_t sub_19F0F7D68(uint64_t a1)
{
  return sub_19F0F76D8(a1, *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 16));
}

uint64_t sub_19F0F7D8C()
{
  return sub_19F0F7C54();
}

uint64_t sub_19F0F7DB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0F7DCC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_19F0F7E08()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0F7E24()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0F7E40()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0F7E5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0F7E78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19F0F7EC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F0F7EE0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LRUMultiCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for LRUMultiCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LRUMultiCache);
}

uint64_t dispatch thunk of LRUMultiCache.__allocating_init(keyLimit:valueLimit:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t type metadata accessor for LRUMultiCache.Values.Index()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F0F7F9C()
{
  sub_19F1DC27C();
  swift_getWitnessTable();
  sub_19F1DCF5C();
  return swift_getWitnessTable();
}

uint64_t sub_19F0F8020(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_19F1DC74C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_19F1DBCEC();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v8, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v8, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_19F1DBCEC();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_19F0F822C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_19F1DBCEC();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v14[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

void LanguagesMetricFieldProvider.init()(void *a1@<X8>)
{
  *a1 = 0;
}

void LanguagesMetricFieldProvider.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_19F0F84B0(void *a1)
{
  return LanguagesMetricFieldProvider.addMetricsFields(into:using:)(a1);
}

ValueMetadata *type metadata accessor for LanguagesMetricFieldProvider()
{
  return &type metadata for LanguagesMetricFieldProvider;
}

__n128 AppleServicesEncoderInstrumented.init(_:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  a2[2] = *(_OWORD *)(a1 + 32);
  a2[3] = v2;
  long long v3 = *(_OWORD *)(a1 + 80);
  a2[4] = *(_OWORD *)(a1 + 64);
  a2[5] = v3;
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v5;
  return result;
}

uint64_t AppleServicesEncoderInstrumented.encodeRequest(fromContentsOf:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v4 = (void *)swift_task_alloc();
  void v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE1C584;
  return AppleServicesEncoder.encodeRequest(fromContentsOf:)(a2);
}

id InstrumentedAMSURLRequest.amsURLRequest.getter()
{
  return *v0;
}

uint64_t assignWithCopy for AppleServicesEncoderInstrumented(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  uint64_t v4 = *(void **)(a2 + 48);
  long long v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4;
  id v6 = v4;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v7;
      *(void *)(a1 + 88) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v7)
  {
    sub_19F0F8698(a1 + 80);
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19F0F8698(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for AppleServicesEncoderInstrumented(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  long long v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80)) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_19F0F8698(a1 + 80);
LABEL_5:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleServicesEncoderInstrumented(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleServicesEncoderInstrumented(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t initializeWithCopy for InstrumentedAMSURLRequest(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InstrumentedAMSURLRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for InstrumentedAMSURLRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstrumentedAMSURLRequest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstrumentedAMSURLRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_19F0F8A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EE721E0(a1, a2, &qword_1E9474608, a3);
}

uint64_t sub_19F0F8A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EE721E0(a1, a2, &qword_1E9474610, a3);
}

uint64_t sub_19F0F8A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EE721E0(a1, a2, &qword_1E94745F8, a3);
}

uint64_t sub_19F0F8A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s10_URLSourceVMa();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v33 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  sub_19EEBF040(a1, (uint64_t)v34);
  uint64_t v14 = v35;
  if (v35)
  {
    uint64_t v32 = v6;
    uint64_t v15 = v8;
    uint64_t v16 = v7;
    uint64_t v17 = v12;
    uint64_t v18 = v10;
    uint64_t v19 = a1;
    uint64_t v20 = v11;
    uint64_t v21 = a2;
    uint64_t v22 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v22 + 24);
    uint64_t v24 = v22;
    a2 = v21;
    uint64_t v11 = v20;
    a1 = v19;
    uint64_t v10 = v18;
    uint64_t v12 = v17;
    uint64_t v7 = v16;
    uint64_t v8 = v15;
    id v6 = v32;
    v23(v14, v24);
    uint64_t v26 = v25;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    if (v26)
    {
      sub_19F1DB2FC();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v34, (uint64_t *)&unk_1E946FD20);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_6:
  sub_19EEC3418(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_19EEBD664((uint64_t)v6, (uint64_t *)&unk_1EB392E50);
    uint64_t v27 = 1;
  }
  else
  {
    long long v28 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v28(v10, v6, v7);
    uint64_t v29 = (uint64_t)v33;
    v28(v33, v10, v7);
    sub_19F0D0850(v29, a2);
    uint64_t v27 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, v27, 1, v11);
}

uint64_t sub_19F0F8D50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s10_URLSourceVMa();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v13[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    sub_19F0FAD04();
    sub_19F1DD49C();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    sub_19F0D0850((uint64_t)v10, v14);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

id sub_19F0F8F14(void *a1)
{
  return sub_19F0FA660(a1);
}

id sub_19F0F8F2C()
{
  return (id)*MEMORY[0x1E4F4DAF0];
}

id MediaArtworkSource.preferredFormat.getter()
{
  return (id)*MEMORY[0x1E4F4DAF0];
}

uint64_t MediaArtworkSource.preferredQuality.getter()
{
  return 0;
}

id sub_19F0F8F58()
{
  return (id)*MEMORY[0x1E4F4DAD8];
}

id MediaArtworkSource.preferredCropStyle.getter()
{
  return (id)*MEMORY[0x1E4F4DAD8];
}

double sub_19F0F8F78()
{
  return 0.0;
}

double MediaArtworkSource.preferredSize.getter()
{
  return 0.0;
}

uint64_t MediaArtworkSource.subscript.getter()
{
  return 0;
}

uint64_t sub_19F0F8F98@<X0>(uint64_t a1@<X8>)
{
  return MediaArtworkSource.cachedImagesKey(using:)(a1);
}

uint64_t MediaArtworkSource.cachedImagesKey(using:)@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E94701E8 != -1) {
    swift_once();
  }
  return sub_19EE77E34((uint64_t)&unk_1E9474350, a1);
}

void static JSONContext.Property<A>.mediaArtworkSources.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000027;
  a1[1] = 0x800000019F271E30;
}

uint64_t static CodingUserInfoKey.mediaArtworkSources.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EE721E0(0xD000000000000027, 0x800000019F271E30, &qword_1E94745F8, a1);
}

uint64_t dispatch thunk of MediaArtworkSource.preferredFormat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MediaArtworkSource.preferredQuality.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MediaArtworkSource.preferredCropStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MediaArtworkSource.preferredSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MediaArtworkSource.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of MediaArtworkSource.cachedImagesKey(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of MediaArtworkSource.resolve(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

ValueMetadata *_s12_EmptySourceVMa()
{
  return &_s12_EmptySourceVN;
}

uint64_t sub_19F0F9130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F0F9144);
}

uint64_t sub_19F0F9144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_19F0F91B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F0F91C4);
}

uint64_t sub_19F0F91C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t _s10_URLSourceVMa()
{
  uint64_t result = qword_1E9474BF0;
  if (!qword_1E9474BF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *_s20_AppleServicesSourceVMa()
{
  return &_s20_AppleServicesSourceVN;
}

uint64_t sub_19F0F9290@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E94701E8 != -1) {
    swift_once();
  }
  return sub_19EE77E34((uint64_t)&unk_1E9474350, a1);
}

uint64_t sub_19F0F92FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_19F1DB34C();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t sub_19F0F9368(void *a1)
{
  return sub_19F0F9F84(a1);
}

uint64_t sub_19F0F9380(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD52C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19F0F9404(uint64_t a1)
{
  return sub_19F0FA190(a1);
}

uint64_t sub_19F0F941C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_19F0FA5A8(a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_19F0F9448@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474378);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = *a2;
  sub_19EEC355C(a1, (uint64_t)v16);
  uint64_t v17 = v9;
  sub_19F0F8A28((uint64_t)v16, (uint64_t)v8);
  uint64_t v10 = _s10_URLSourceVMa();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) == 1)
  {
    sub_19EEBD664((uint64_t)v8, &qword_1E9474378);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474380);
    sub_19EF5B580();
    swift_allocError();
    uint64_t v12 = MEMORY[0x1E4FBC860];
    *uint64_t v13 = v11;
    v13[1] = v12;
    _OWORD v13[2] = 0;
    v13[3] = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  else
  {
    sub_19EEC3418(a1);
    return sub_19F0D0850((uint64_t)v8, a3);
  }
}

uint64_t sub_19F0F95B8()
{
  return sub_19F1DCC8C();
}

uint64_t sub_19F0F9604@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F0F8D50(a1, a2);
}

uint64_t sub_19F0F961C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  sub_19F1DB21C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19F0F96D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F0F9448(a1, a2, a3);
}

uint64_t sub_19F0F96F0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v21 - v14;
  id v16 = objc_msgSend(a2, sel_URLWithSize_cropStyle_format_quality_, a1[3], *a1, 70, 1.0, 1.0);
  if (v16)
  {
    uint64_t v17 = v16;
    sub_19F1DB2BC();

    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v18(v8, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v18(v15, v8, v9);
      v21[0] = sub_19F1DB21C();
      v21[1] = v19;
      sub_19F1DCC8C();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1EB392E50);
  if (qword_1E94701E8 != -1) {
    swift_once();
  }
  return sub_19EE77E34((uint64_t)&unk_1E9474350, a3);
}

uint64_t sub_19F0F9990@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v26 - v10;
  if (*((double *)a1 + 4) <= 0.0 || *((double *)a1 + 5) <= 0.0)
  {
    uint64_t v17 = sub_19F1DB34C();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    return v18(a3, 1, 1, v17);
  }
  else
  {
    uint64_t v12 = *a1;
    uint64_t v13 = a1[3];
    if (a1[2])
    {
      id v14 = objc_msgSend(a2, sel_URLWithSize_cropStyle_format_, v13, v12);
      if (v14)
      {
        uint64_t v15 = v14;
        sub_19F1DB2BC();

        uint64_t v16 = sub_19F1DB34C();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
      }
      else
      {
        uint64_t v23 = sub_19F1DB34C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 1, 1, v23);
      }
      uint64_t v24 = (uint64_t)v8;
    }
    else
    {
      id v20 = objc_msgSend(a2, sel_URLWithSize_cropStyle_format_quality_, v13, v12, a1[1]);
      if (v20)
      {
        uint64_t v21 = v20;
        sub_19F1DB2BC();

        uint64_t v22 = sub_19F1DB34C();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 0, 1, v22);
      }
      else
      {
        uint64_t v25 = sub_19F1DB34C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
      }
      uint64_t v24 = (uint64_t)v11;
    }
    return sub_19F0A8578(v24, a3);
  }
}

id sub_19F0F9C10()
{
  return objc_msgSend(*v0, sel_artworkSize);
}

id sub_19F0F9C20(uint64_t a1)
{
  id v3 = *v1;
  return objc_msgSend(v3, sel_colorWithKind_, a1);
}

uint64_t sub_19F0F9C64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F0F96F0(a1, *v2, a2);
}

uint64_t sub_19F0F9C6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F0F9990(a1, *v2, a2);
}

id sub_19F0F9C74@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = sub_19F0FA660(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_19F0F9CA0(void *a1)
{
  id v3 = objc_msgSend(*v1, sel_artworkDictionary);
  uint64_t v4 = sub_19F1DBB3C();

  v7[3] = &type metadata for FoundationValue;
  v7[4] = &off_1EF13D8F8;
  uint64_t v5 = swift_allocObject();
  v7[0] = v5;
  *(void *)(v5 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390A60);
  *(void *)(v5 + 16) = v4;
  JSONObject.encode(to:)(a1);
  return sub_19EEC3418((uint64_t)v7);
}

uint64_t sub_19F0F9D7C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v10);
  id v4 = sub_19F0FA2AC((uint64_t)v10);
  if (v4)
  {
    id v5 = v4;
    uint64_t result = sub_19EEC3418(a1);
    *a2 = v5;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474380);
    sub_19EF5B580();
    swift_allocError();
    uint64_t v8 = MEMORY[0x1E4FBC860];
    *uint64_t v9 = v7;
    v9[1] = v8;
    void v9[2] = 0;
    v9[3] = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  return result;
}

id sub_19F0F9E3C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_19F0FA2AC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_19F0F9E64(void **a1, void **a2)
{
  return sub_19F0F9E7C(*a1, *a2);
}

_UNKNOWN **sub_19F0F9E70()
{
  return &protocol witness table for URL;
}

uint64_t sub_19F0F9E7C(void *a1, void *a2)
{
  id v3 = objc_msgSend(a1, sel_artworkDictionary);
  uint64_t v4 = sub_19F1DBB3C();

  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390A60);
  v9[0] = v4;
  id v5 = objc_msgSend(a2, sel_artworkDictionary);
  uint64_t v6 = sub_19F1DBB3C();

  void v8[3] = v10;
  v8[0] = v6;
  LOBYTE(v5) = _isStructurallyEqual(_:to:with:at:)(v9, v8, 3uLL, 0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  return v5 & 1;
}

uint64_t sub_19F0F9F84(void *a1)
{
  uint64_t v3 = sub_19F1DCDBC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    if ((sub_19F1DD4AC() & 1) == 0)
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_19F1DD86C();
      sub_19F1DCDAC();
      uint64_t v7 = sub_19F1DCDCC();
      swift_allocError();
      uint64_t v9 = v8;
      (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v8, v6, v3);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v9, *MEMORY[0x1E4FBBA78], v7);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19F0FA190(uint64_t a1)
{
  sub_19EEC355C(a1, (uint64_t)v12);
  swift_bridgeObjectRelease();
  sub_19EEBF040((uint64_t)v12, (uint64_t)v9);
  uint64_t v2 = v10;
  if (v10)
  {
    uint64_t v3 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    sub_19EEC3418((uint64_t)v12);
    if ((v4 & 1) == 0)
    {
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474380);
      sub_19EF5B580();
      swift_allocError();
      uint64_t v6 = MEMORY[0x1E4FBC860];
      *uint64_t v7 = v5;
      v7[1] = v6;
      v7[2] = 0;
      v7[3] = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v12);
  }
  return sub_19EEC3418(a1);
}

id sub_19F0FA2AC(uint64_t a1)
{
  uint64_t v2 = sub_19F1DB34C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  JSONObject.dictionary.getter((uint64_t)v19);
  uint64_t v9 = v20;
  if (!v20)
  {
    sub_19EEBD664((uint64_t)v19, &qword_1E946F740);
    goto LABEL_7;
  }
  uint64_t v10 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  uint64_t v11 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v10 + 32))(MEMORY[0x1E4FBB960], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB968], v9, v10);
  sub_19EEC05FC((uint64_t)v19);
  if (!v11)
  {
LABEL_7:
    sub_19EEC3418(a1);
    return 0;
  }
  id v12 = objc_allocWithZone(MEMORY[0x1E4F4DD20]);
  uint64_t v13 = (void *)sub_19F1DBB1C();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithDictionary_, v13);

  objc_msgSend(v14, sel_artworkSize);
  id v15 = objc_msgSend(v14, sel_URLWithSize_);
  if (!v15)
  {
    sub_19EEC3418(a1);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_9;
  }
  uint64_t v16 = v15;
  sub_19F1DB2BC();

  sub_19EEC3418(a1);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
LABEL_9:

    sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1EB392E50);
    return 0;
  }
  sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1EB392E50);
  return v14;
}

uint64_t sub_19F0FA5A8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_19EEBF040(a1, (uint64_t)v6);
  uint64_t v2 = v7;
  if (v7)
  {
    uint64_t v3 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
    sub_19EEC3418(a1);
    if ((v4 & 1) == 0) {
      return 1;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v6, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418(a1);
  }
  return 0;
}

id sub_19F0FA660(void *a1)
{
  uint64_t v2 = sub_19F1DB34C();
  uint64_t v40 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_19F1DCDBC();
  uint64_t v41 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (id)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v11);
  id v12 = v47;
  sub_19F1DD88C();
  if (v12) {
    goto LABEL_14;
  }
  uint64_t v36 = v4;
  uint64_t v37 = v10;
  uint64_t v47 = a1;
  uint64_t v38 = v2;
  uint64_t v39 = v7;
  __swift_project_boxed_opaque_existential_1(v46, v46[3]);
  sub_19EFAA6E8();
  sub_19F1DD49C();
  JSONObject.dictionary.getter((uint64_t)v42);
  id v11 = v43;
  if (!v43)
  {
    sub_19EEBD664((uint64_t)v42, &qword_1E946F740);
    goto LABEL_9;
  }
  uint64_t v13 = v44;
  __swift_project_boxed_opaque_existential_1(v42, (uint64_t)v43);
  uint64_t v14 = (*(uint64_t (**)(void, uint64_t, void, id, uint64_t))(v13 + 32))(MEMORY[0x1E4FBB960], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB968], v11, v13);
  sub_19EEC05FC((uint64_t)v42);
  if (!v14)
  {
LABEL_9:
    __swift_project_boxed_opaque_existential_1(v47, v47[3]);
    sub_19F1DD86C();
    uint64_t v18 = v39;
    sub_19F1DCDAC();
    uint64_t v26 = sub_19F1DCDCC();
    swift_allocError();
    long long v28 = v27;
    uint64_t v29 = (char *)v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50) + 48);
    *long long v28 = sub_19EEBDC10(0, &qword_1E9474C00);
    uint64_t v30 = v41;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v29, v18, v5);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x1E4FBBA70], v26);
    swift_willThrow();
    goto LABEL_12;
  }
  id v15 = objc_allocWithZone(MEMORY[0x1E4F4DD20]);
  uint64_t v16 = (void *)sub_19F1DBB1C();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v15, sel_initWithDictionary_, v16);

  objc_msgSend(v11, sel_artworkSize);
  id v17 = objc_msgSend(v11, sel_URLWithSize_);
  uint64_t v18 = v39;
  if (!v17)
  {
    uint64_t v23 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v37, 1, 1, v38);
    uint64_t v25 = v47;
    goto LABEL_11;
  }
  uint64_t v19 = v17;
  uint64_t v20 = v36;
  sub_19F1DB2BC();

  uint64_t v21 = v40;
  uint64_t v23 = (uint64_t)v37;
  uint64_t v22 = v38;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v20, v38);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v22);
  int v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v22);
  uint64_t v25 = v47;
  if (v24 == 1)
  {
LABEL_11:
    sub_19EEBD664(v23, (uint64_t *)&unk_1EB392E50);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    sub_19F1DD86C();
    sub_19F1DCDAC();
    uint64_t v31 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v33 = v32;
    uint64_t v34 = v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EB0) + 48);
    *(void *)(v33 + 24) = &type metadata for OpenCodingKey;
    *(void *)(v33 + 32) = sub_19EF6EA7C();
    *(_OWORD *)uint64_t v33 = xmmword_19F257730;
    *(unsigned char *)(v33 + 16) = 1;
    uint64_t v30 = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v34, v18, v5);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x1E4FBBA68], v31);
    swift_willThrow();

LABEL_12:
    (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v5);
    sub_19EEC3418((uint64_t)v45);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
    a1 = v47;
LABEL_14:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return v11;
  }
  sub_19EEBD664(v23, (uint64_t *)&unk_1EB392E50);
  sub_19EEC3418((uint64_t)v45);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  return v11;
}

uint64_t sub_19F0FACCC()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_19F0FAD04()
{
  unint64_t result = qword_1E94730B8;
  if (!qword_1E94730B8)
  {
    sub_19F1DB34C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94730B8);
  }
  return result;
}

uint64_t sub_19F0FAD5C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D688);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24DBC0;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  sub_19F1DCC8C();
  *(void *)(inited + 96) = v11;
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 80) = a2;
  sub_19F1DCC8C();
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, a4);
  uint64_t v13 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
  *(void *)(inited + 168) = v13;
  *(void *)(inited + 144) = v12;
  v59[0] = 0x746867696568;
  v59[1] = 0xE600000000000000;
  sub_19F1DCC8C();
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, a5);
  *(void *)(inited + 240) = v13;
  *(void *)(inited + 216) = v14;
  id v15 = (void *)sub_19EE78050(inited);
  int64_t v16 = 0;
  uint64_t v17 = a3 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(a3 + 64);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  int64_t v55 = v21;
  if (!v20) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (unint64_t i = v22 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v31)) + (v16 << 6))
  {
    uint64_t v24 = 8 * i;
    uint64_t v25 = *(void **)(*(void *)(a3 + 56) + v24);
    id v26 = *(id *)(*(void *)(a3 + 48) + v24);
    id v27 = v25;
    sub_19EF8B02C(0);
    if (!v29)
    {

      if (v20) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
    uint64_t v33 = v28;
    uint64_t v34 = v29;
    *(void *)&long long v57 = sub_19F1DBD7C();
    *((void *)&v57 + 1) = v35;
    uint64_t v36 = MEMORY[0x1E4FBB1A0];
    sub_19F1DCC8C();
    uint64_t v58 = v36;
    *(void *)&long long v57 = v33;
    *((void *)&v57 + 1) = v34;
    sub_19EEBDC00(&v57, v56);
    uint64_t v37 = v15;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = sub_19EE77500((uint64_t)v59);
    uint64_t v41 = v37[2];
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42)) {
      goto LABEL_37;
    }
    char v44 = v39;
    if (v37[3] >= v43)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        id v15 = v37;
        if ((v39 & 1) == 0) {
          goto LABEL_30;
        }
      }
      else
      {
        sub_19EFBD530();
        id v15 = v37;
        if ((v44 & 1) == 0) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      sub_19EE77768(v43, isUniquelyReferenced_nonNull_native);
      unint64_t v45 = sub_19EE77500((uint64_t)v59);
      if ((v44 & 1) != (v46 & 1)) {
        goto LABEL_39;
      }
      unint64_t v40 = v45;
      id v15 = v37;
      if ((v44 & 1) == 0)
      {
LABEL_30:
        v15[(v40 >> 6) + 8] |= 1 << v40;
        sub_19EE77E34((uint64_t)v59, v15[6] + 40 * v40);
        sub_19EEBDC00(v56, (_OWORD *)(v15[7] + 32 * v40));
        uint64_t v48 = v15[2];
        BOOL v49 = __OFADD__(v48, 1);
        uint64_t v50 = v48 + 1;
        if (v49) {
          goto LABEL_38;
        }
        v15[2] = v50;
        goto LABEL_32;
      }
    }
    uint64_t v47 = (_OWORD *)(v15[7] + 32 * v40);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    sub_19EEBDC00(v56, v47);
LABEL_32:
    swift_bridgeObjectRelease();
    sub_19EE7760C((uint64_t)v59);

    int64_t v21 = v55;
    if (v20) {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v30 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v30 >= v21) {
      goto LABEL_34;
    }
    unint64_t v31 = *(void *)(v17 + 8 * v30);
    ++v16;
    if (!v31)
    {
      int64_t v16 = v30 + 1;
      if (v30 + 1 >= v21) {
        goto LABEL_34;
      }
      unint64_t v31 = *(void *)(v17 + 8 * v16);
      if (!v31)
      {
        int64_t v16 = v30 + 2;
        if (v30 + 2 >= v21) {
          goto LABEL_34;
        }
        unint64_t v31 = *(void *)(v17 + 8 * v16);
        if (!v31) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v20 = (v31 - 1) & v31;
  }
  int64_t v32 = v30 + 3;
  if (v32 >= v21)
  {
LABEL_34:
    swift_release();
    id v51 = objc_allocWithZone(MEMORY[0x1E4F4DD20]);
    long long v52 = (void *)sub_19F1DBB1C();
    swift_bridgeObjectRelease();
    id v53 = objc_msgSend(v51, sel_initWithDictionary_, v52);

    return (uint64_t)v53;
  }
  unint64_t v31 = *(void *)(v17 + 8 * v32);
  if (v31)
  {
    int64_t v16 = v32;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v16 >= v21) {
      goto LABEL_34;
    }
    unint64_t v31 = *(void *)(v17 + 8 * v16);
    ++v32;
    if (v31) {
      goto LABEL_20;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F0FB1F4(void (*a1)(uint64_t *__return_ptr, unsigned char *))
{
  uint64_t v4 = sub_19F1DB57C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_19EF87BFC(v1, (uint64_t)v10);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return 2;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v10, v4);
  a1(&v13, v7);
  if (v2) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

uint64_t sub_19F0FB3B8(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_19EE1E324(a1, a2, a3, (uint64_t)sub_19F0FCECC, (uint64_t)sub_19F0FCED0);
}

uint64_t sub_19F0FB3E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_19F1DB57C();
  MEMORY[0x1F4188790](v5);
  char v39 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v35 = (char *)&v33 - v9;
  uint64_t v36 = v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v41 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v42 = (unint64_t)(v11 + 63) >> 6;
  id v14 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  id v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v38 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  unint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v34 = a1;
  if (v13) {
    goto LABEL_8;
  }
LABEL_14:
  int64_t v28 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v28 < v42)
    {
      unint64_t v29 = *(void *)(v41 + 8 * v28);
      ++v17;
      if (v29) {
        goto LABEL_29;
      }
      int64_t v17 = v28 + 1;
      if (v28 + 1 >= v42) {
        goto LABEL_32;
      }
      unint64_t v29 = *(void *)(v41 + 8 * v17);
      if (v29) {
        goto LABEL_29;
      }
      int64_t v17 = v28 + 2;
      if (v28 + 2 >= v42) {
        goto LABEL_32;
      }
      unint64_t v29 = *(void *)(v41 + 8 * v17);
      if (v29) {
        goto LABEL_29;
      }
      int64_t v17 = v28 + 3;
      if (v28 + 3 >= v42) {
        goto LABEL_32;
      }
      unint64_t v29 = *(void *)(v41 + 8 * v17);
      if (v29)
      {
LABEL_29:
        unint64_t v13 = (v29 - 1) & v29;
        for (unint64_t i = __clz(__rbit64(v29)) + (v17 << 6); ; unint64_t i = v20 | (v17 << 6))
        {
          id v31 = *(id *)(*(void *)(a1 + 56) + 8 * i);
          id v32 = objc_msgSend(v31, sel_beginDate);
          if (v32)
          {
            uint64_t v18 = v32;
            sub_19F1DB54C();

            uint64_t v19 = 0;
          }
          else
          {
            uint64_t v19 = 1;
          }
          (*v14)(v4, v19, 1, v5);

          if ((*v15)(v4, 1, v5) == 1)
          {
            uint64_t result = sub_19EF87C64((uint64_t)v4);
            if (!v13) {
              goto LABEL_14;
            }
          }
          else
          {
            unint64_t v22 = *v38;
            uint64_t v23 = v35;
            (*v38)(v35, v4, v5);
            uint64_t v37 = v22;
            v22(v39, v23, v5);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v40 = sub_19F09E9D4(0, *(void *)(v40 + 16) + 1, 1, v40);
            }
            unint64_t v25 = *(void *)(v40 + 16);
            unint64_t v24 = *(void *)(v40 + 24);
            a1 = v34;
            if (v25 >= v24 >> 1) {
              unint64_t v40 = sub_19F09E9D4(v24 > 1, v25 + 1, 1, v40);
            }
            id v26 = v39;
            unint64_t v27 = v40;
            *(void *)(v40 + 16) = v25 + 1;
            uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v37)(v27+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v25, v26, v5);
            if (!v13) {
              goto LABEL_14;
            }
          }
LABEL_8:
          unint64_t v20 = __clz(__rbit64(v13));
          v13 &= v13 - 1;
        }
      }
      int64_t v30 = v28 + 4;
      if (v30 < v42)
      {
        unint64_t v29 = *(void *)(v41 + 8 * v30);
        if (v29)
        {
          int64_t v17 = v30;
          goto LABEL_29;
        }
        while (1)
        {
          int64_t v17 = v30 + 1;
          if (__OFADD__(v30, 1)) {
            goto LABEL_34;
          }
          if (v17 >= v42) {
            break;
          }
          unint64_t v29 = *(void *)(v41 + 8 * v17);
          ++v30;
          if (v29) {
            goto LABEL_29;
          }
        }
      }
    }
LABEL_32:
    swift_release();
    return v40;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t SignpostAggregator.TimedEvent.Duration.nanoseconds.getter()
{
  return *(void *)v0;
}

double SignpostAggregator.TimedEvent.Duration.milliseconds.getter()
{
  return (double)*v0 / 1000000.0;
}

double SignpostAggregator.TimedEvent.Duration.seconds.getter()
{
  return (double)*v0 / 1000000.0 / 1000.0;
}

void SignpostAggregator.TimedEvent.duration.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t SignpostAggregator.TimedEvent.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SignpostAggregator.__allocating_init(subsystem:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  sub_19F1DB56C();
  uint64_t v9 = (void *)(v8 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_subsystem);
  *uint64_t v9 = a1;
  v9[1] = a2;
  uint64_t v10 = (void *)(v8 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_category);
  *uint64_t v10 = a3;
  v10[1] = a4;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  *(void *)(v8 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_lock) = v11;
  return v8;
}

uint64_t SignpostAggregator.init(subsystem:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_19F1DB57C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DB56C();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v4 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_nextStartTime, v12, v9);
  unint64_t v13 = (void *)(v4 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_subsystem);
  *unint64_t v13 = a1;
  v13[1] = a2;
  id v14 = (void *)(v4 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_category);
  *id v14 = a3;
  v14[1] = a4;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  *(void *)(v4 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_lock) = v15;
  return v4;
}

uint64_t SignpostAggregator.collect(on:)(uint64_t a1)
{
  sub_19EEC4154(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(qword_1E9474C08);
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(_DWORD *)(v3 + 16) = 0;
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = v4;
  *(unsigned char *)(v2 + 32) = 0;
  uint64_t v5 = v11;
  uint64_t v6 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = sub_19F0FBC40;
  v7[3] = v1;
  v7[4] = v2;
  uint64_t v8 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v6 + 8);
  swift_retain_n();
  swift_retain();
  v8(sub_19F0FBC88, v7, v5, v6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v2;
}

id sub_19F0FBB9C(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(void *), uint64_t a4, char *a5)
{
  uint64_t v10 = *(void **)&a5[OBJC_IVAR____TtC9JetEngine18SignpostAggregator_lock];
  swift_retain();
  objc_msgSend(v10, sel_lock);
  sub_19F0FBCD0(a5, a3, a4, a1, a2);
  return objc_msgSend(v10, sel_unlock);
}

id sub_19F0FBC40(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  return sub_19F0FBB9C(a1, a2, a3, a4, v4);
}

uint64_t sub_19F0FBC48()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F0FBC88()
{
  return sub_19EE1E324(*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (uint64_t)sub_19F0FE388, (uint64_t)sub_19F0FE390);
}

uint64_t sub_19F0FBCD0(char *a1, void (*a2)(void *), uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v88 = a5;
  unint64_t v80 = a4;
  uint64_t v74 = a3;
  uint64_t v75 = a2;
  uint64_t v83 = a1;
  uint64_t v100 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v5);
  uint64_t v70 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v81 = (char *)&v67 - v8;
  uint64_t v9 = sub_19F1DB57C();
  uint64_t v82 = v9;
  uint64_t v90 = *(void *)(v9 - 8);
  uint64_t v10 = v90;
  MEMORY[0x1F4188790](v9);
  uint64_t v69 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v77 = (char *)&v67 - v13;
  MEMORY[0x1F4188790](v14);
  double v79 = (char *)&v67 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v67 - v17;
  MEMORY[0x1F4188790](v19);
  int64_t v21 = (char *)&v67 - v20;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  *(void *)(v22 + 16) = MEMORY[0x1E4FBC860];
  char v78 = (uint64_t *)(v22 + 16);
  uint64_t v89 = v21;
  sub_19F1DB56C();
  uint64_t v24 = swift_allocBox();
  unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v68 = v26;
  uint64_t v73 = v10 + 56;
  char v72 = v25;
  v25((char *)v26, 1, 1, v9);
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F7B8]), sel_init);
  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F7C0]), sel_init);
  unint64_t v29 = (void *)sub_19F1DBD4C();
  int64_t v30 = (void *)sub_19F1DBD4C();
  objc_msgSend(v28, sel_addSubsystem_category_, v29, v30);

  id v85 = v28;
  objc_msgSend(v27, sel_setSubsystemCategoryFilter_, v28);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v22;
  *(void *)(v31 + 24) = v24;
  uint64_t v98 = sub_19F0FE3D4;
  uint64_t v99 = v31;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v95 = 1107296256;
  v96 = sub_19F0FCB48;
  uint64_t v97 = &block_descriptor_28;
  id v32 = _Block_copy(&aBlock);
  uint64_t v87 = v22;
  swift_retain();
  uint64_t v86 = v24;
  swift_retain();
  swift_release();
  objc_msgSend(v27, sel_setIntervalCompletionProcessingBlock_, v32);
  _Block_release(v32);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_19EFC15E8(v23);
  uint64_t v98 = sub_19F0FE414;
  uint64_t v99 = v33;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v95 = 1107296256;
  v96 = sub_19F0FCB48;
  uint64_t v97 = &block_descriptor_14_0;
  uint64_t v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v27, sel_setBeginEventProcessingBlock_, v34);
  _Block_release(v34);
  uint64_t v98 = sub_19F0FE41C;
  uint64_t v99 = v33;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v95 = 1107296256;
  v96 = sub_19F0FCB48;
  uint64_t v97 = &block_descriptor_17;
  uint64_t v35 = _Block_copy(&aBlock);
  uint64_t v84 = v33;
  swift_retain();
  swift_release();
  objc_msgSend(v27, sel_setEndEventProcessingBlock_, v35);
  _Block_release(v35);
  uint64_t v36 = &v83[OBJC_IVAR____TtC9JetEngine18SignpostAggregator_nextStartTime];
  swift_beginAccess();
  uint64_t v37 = v90;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  unint64_t v71 = v36;
  uint64_t v39 = v82;
  v38(v18, v36, v82);
  unint64_t v40 = (void *)sub_19F1DB4DC();
  uint64_t v83 = *(char **)(v37 + 8);
  ((void (*)(char *, uint64_t))v83)(v18, v39);
  v93[0] = 0;
  LODWORD(v24) = objc_msgSend(v27, sel_processLogArchiveWithPath_startDate_endDate_errorOut_, 0, v40, 0, v93);

  id v41 = v93[0];
  if (!v24)
  {
    BOOL v49 = v41;
    uint64_t v50 = (void *)sub_19F1DB19C();

    swift_willThrow();
    v75(v50);

    ((void (*)(char *, uint64_t))v83)(v89, v39);
LABEL_14:
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  swift_beginAccess();
  uint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v43 = v76;
  char v44 = (void *)sub_19F0FB3E4(v42);
  swift_bridgeObjectRelease();
  uint64_t v92 = (char *)v44;
  swift_bridgeObjectRetain();
  sub_19F0FCED4((void **)&v92);
  if (!v43)
  {
    uint64_t v76 = 0;
    swift_bridgeObjectRelease();
    uint64_t v45 = v90;
    char v46 = v77;
    if (*((void *)v92 + 2))
    {
      uint64_t v47 = v81;
      v38(v81, &v92[(*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80)], v39);
      uint64_t v48 = 0;
    }
    else
    {
      uint64_t v48 = 1;
      uint64_t v47 = v81;
    }
    v72(v47, v48, 1, v39);
    swift_release();
    v38(v46, v89, v39);
    id v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
    if (v51((uint64_t)v47, 1, v39) == 1)
    {
      uint64_t v52 = v68;
      swift_beginAccess();
      uint64_t v53 = v52;
      uint64_t v54 = v70;
      sub_19EF87BFC(v53, v70);
      int64_t v55 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      uint64_t v56 = v46;
      long long v57 = v69;
      v55(v69, v56, v39);
      if (v51(v54, 1, v39) == 1)
      {
        uint64_t v58 = v79;
        v55(v79, v57, v39);
        sub_19EF87C64(v54);
        uint64_t v59 = (uint64_t)v81;
        uint64_t v60 = (void (*)(char *, uint64_t))v83;
      }
      else
      {
        double v62 = v57;
        uint64_t v60 = (void (*)(char *, uint64_t))v83;
        ((void (*)(char *, uint64_t))v83)(v62, v39);
        uint64_t v58 = v79;
        v55(v79, (char *)v54, v39);
        uint64_t v59 = (uint64_t)v81;
      }
      sub_19EF87C64(v59);
      uint64_t v45 = v90;
    }
    else
    {
      uint64_t v61 = v46;
      uint64_t v60 = (void (*)(char *, uint64_t))v83;
      ((void (*)(char *, uint64_t))v83)(v61, v39);
      uint64_t v58 = v79;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v79, v47, v39);
    }
    id v63 = v85;
    uint64_t v64 = v71;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v64, v58, v39);
    swift_endAccess();
    unint64_t v65 = v78;
    swift_beginAccess();
    uint64_t v91 = *v65;
    swift_bridgeObjectRetain();
    v80(&v91);

    swift_bridgeObjectRelease();
    v60(v89, v39);
    goto LABEL_14;
  }
  swift_release();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_19F0FC6C8(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v42 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (uint64_t)&v42 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = sub_19F1DB57C();
  char v46 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v11 - 8);
  uint64_t v47 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v45 = (char *)&v42 - v15;
  uint64_t v16 = (void *)(a2 + 16);
  uint64_t v44 = swift_projectBox();
  id v17 = objc_msgSend(a1, sel_durationNanoseconds);
  id v18 = objc_msgSend(a1, sel_name);
  uint64_t v19 = sub_19F1DBD7C();
  uint64_t v21 = v20;

  swift_beginAccess();
  uint64_t v22 = *(void **)(a2 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v22;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v22 = sub_19F09EA08(0, v22[2] + 1, 1, v22);
    void *v16 = v22;
  }
  unint64_t v25 = v22[2];
  unint64_t v24 = v22[3];
  if (v25 >= v24 >> 1)
  {
    uint64_t v22 = sub_19F09EA08((void *)(v24 > 1), v25 + 1, 1, v22);
    void *v16 = v22;
  }
  uint64_t v26 = v46;
  void v22[2] = v25 + 1;
  id v27 = &v22[3 * v25];
  v27[4] = v17;
  v27[5] = v19;
  v27[6] = v21;
  swift_endAccess();
  id v28 = objc_msgSend(a1, sel_endEvent);
  id v29 = objc_msgSend(v28, sel_endDate);

  if (!v29)
  {
    v26[7](v10, 1, 1, v47);
    goto LABEL_11;
  }
  sub_19F1DB54C();

  int64_t v30 = v26[4];
  uint64_t v31 = v13;
  uint64_t v32 = v47;
  ((void (*)(char *, char *, uint64_t))v30)(v10, v31, v47);
  uint64_t v33 = v26[7];
  v33(v10, 0, 1, v32);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v26[6])(v10, 1, v32) == 1)
  {
LABEL_11:
    sub_19EF87C64((uint64_t)v10);
    return 1;
  }
  char v46 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v33;
  uint64_t v34 = v45;
  ((void (*)(char *, char *, uint64_t))v30)(v45, v10, v32);
  uint64_t v35 = v44;
  swift_beginAccess();
  uint64_t v36 = v43;
  uint64_t v37 = sub_19EF87BFC(v35, v43);
  MEMORY[0x1F4188790](v37);
  *(&v42 - 2) = v34;
  char v38 = sub_19F0FB1F4((void (*)(uint64_t *__return_ptr, unsigned char *))sub_19F0FE424);
  sub_19EF87C64(v36);
  if (v38 == 2 || (v38 & 1) != 0)
  {
    uint64_t v40 = (uint64_t)v42;
    ((void (*)(char *, char *, uint64_t))v30)(v42, v45, v32);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v46)(v40, 0, 1, v32);
    uint64_t v41 = v44;
    swift_beginAccess();
    sub_19F0FE45C(v40, v41);
  }
  else
  {
    ((void (*)(char *, uint64_t))v26[1])(v45, v32);
  }
  return 1;
}

uint64_t sub_19F0FCB4C(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(a1, sel_signpostId);
  swift_beginAccess();
  id v5 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = 0x8000000000000000;
  sub_19EFBCA44((uint64_t)v5, (uint64_t)v4, isUniquelyReferenced_nonNull_native);
  *(void *)(a2 + 16) = v8;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return 1;
}

uint64_t sub_19F0FCBF8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_19F0FCC50(void *a1)
{
  id v1 = objc_msgSend(a1, sel_signpostId);
  swift_beginAccess();
  uint64_t v2 = (void *)sub_19EF6BACC((uint64_t)v1);
  swift_endAccess();

  return 1;
}

uint64_t SignpostAggregator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_nextStartTime;
  uint64_t v2 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t SignpostAggregator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_nextStartTime;
  uint64_t v2 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_19F0FCE2C()
{
  return type metadata accessor for SignpostAggregator();
}

uint64_t method lookup function for SignpostAggregator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SignpostAggregator);
}

uint64_t dispatch thunk of SignpostAggregator.__allocating_init(subsystem:category:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void *assignWithCopy for SignpostAggregator.TimedEvent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SignpostAggregator.TimedEvent()
{
  return &type metadata for SignpostAggregator.TimedEvent;
}

ValueMetadata *type metadata accessor for SignpostAggregator.TimedEvent.Duration()
{
  return &type metadata for SignpostAggregator.TimedEvent.Duration;
}

void sub_19F0FCED4(void **a1)
{
  uint64_t v2 = *(void *)(sub_19F1DB57C() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_19F02C4D0(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_19F0FCF7C(v5);
  *a1 = v3;
}

void sub_19F0FCF7C(void *a1)
{
  uint64_t v3 = sub_19F1DB57C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  v136 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v151 = (char *)&v132 - v7;
  MEMORY[0x1F4188790](v8);
  v146 = (char *)&v132 - v9;
  MEMORY[0x1F4188790](v10);
  v147 = (char *)&v132 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_19F1DD2CC();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_141;
    }
    if (v12) {
      sub_19F0FDAD0(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_149;
  }
  uint64_t v133 = v13;
  uint64_t v140 = v1;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v139 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
LABEL_106:
      uint64_t v132 = v18;
      if (v21 >= 2)
      {
        uint64_t v125 = *a1;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_136;
          }
          if (!v125) {
            goto LABEL_148;
          }
          uint64_t v127 = *(void *)&v20[16 * v126 + 32];
          uint64_t v128 = *(void *)&v20[16 * v21 + 24];
          uint64_t v129 = v140;
          sub_19F0FDDC0(v125 + *(void *)(v4 + 72) * v127, v125 + *(void *)(v4 + 72) * *(void *)&v20[16 * v21 + 16], v125 + *(void *)(v4 + 72) * v128, v139);
          uint64_t v140 = v129;
          if (v129) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_19F132CBC((uint64_t)v20);
          }
          if (v126 >= *((void *)v20 + 2)) {
            goto LABEL_138;
          }
          v130 = &v20[16 * v126 + 32];
          *(void *)v130 = v127;
          *((void *)v130 + 1) = v128;
          unint64_t v131 = *((void *)v20 + 2);
          if (v21 > v131) {
            goto LABEL_139;
          }
          memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v131 - v21));
          *((void *)v20 + 2) = v131 - 1;
          unint64_t v21 = v131 - 1;
        }
        while (v131 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v132 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v132 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_19F1DC1DC();
    *(void *)(v16 + 16) = v15;
    unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v132 = v16;
    unint64_t v139 = v16 + v17;
  }
  uint64_t v19 = 0;
  v144 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v145 = v4 + 16;
  v154 = (char **)(v4 + 32);
  uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v138 = v4;
  v148 = a1;
  uint64_t v150 = v3;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    uint64_t v137 = (uint64_t)v19;
    if ((uint64_t)(v19 + 1) >= v12)
    {
      uint64_t v36 = (uint64_t)(v19 + 1);
      uint64_t v44 = v140;
    }
    else
    {
      uint64_t v143 = *a1;
      uint64_t v24 = v143;
      uint64_t v25 = v4;
      uint64_t v26 = *(void *)(v4 + 72);
      uint64_t v155 = v26;
      uint64_t v153 = v12;
      id v27 = v19;
      id v28 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
      v28(v147, v143 + v26 * (void)v23, v3);
      uint64_t v29 = v24 + v26 * (void)v27;
      uint64_t v30 = v25;
      uint64_t v31 = v146;
      v28(v146, v29, v3);
      unint64_t v32 = sub_19EE7AA28();
      uint64_t v33 = v147;
      v149 = (char *)v32;
      int v34 = sub_19F1DBCDC();
      uint64_t v3 = v150;
      LODWORD(v152) = v34;
      uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
      v35(v31, v150);
      v35(v33, v3);
      uint64_t v36 = (uint64_t)(v27 + 2);
      uint64_t v12 = v153;
      if (v36 >= v153)
      {
        uint64_t v44 = v140;
      }
      else
      {
        v134 = v20;
        uint64_t v142 = v155 * (void)v23;
        uint64_t v37 = v143;
        uint64_t v38 = v155 * v36;
        while (1)
        {
          uint64_t v39 = v36;
          uint64_t v40 = v147;
          v28(v147, v37 + v38, v3);
          uint64_t v41 = v146;
          v28(v146, v37 + v142, v3);
          int v42 = sub_19F1DBCDC();
          uint64_t v3 = v150;
          int v43 = v42;
          v35(v41, v150);
          v35(v40, v3);
          if ((v152 ^ v43)) {
            break;
          }
          uint64_t v36 = v39 + 1;
          v37 += v155;
          uint64_t v12 = v153;
          if (v153 == v36)
          {
            uint64_t v36 = v153;
            uint64_t v44 = v140;
            uint64_t v20 = v134;
            goto LABEL_25;
          }
        }
        uint64_t v44 = v140;
        uint64_t v20 = v134;
        uint64_t v36 = v39;
        uint64_t v12 = v153;
      }
LABEL_25:
      a1 = v148;
      uint64_t v22 = (char *)v137;
      if (v152)
      {
        if (v36 < v137) {
          goto LABEL_142;
        }
        if (v137 < v36)
        {
          v134 = v20;
          uint64_t v45 = 0;
          uint64_t v46 = v155;
          uint64_t v47 = v155 * (v36 - 1);
          uint64_t v48 = v36 * v155;
          uint64_t v49 = v137;
          uint64_t v50 = v137 * v155;
          v149 = (char *)v36;
          do
          {
            if (v49 != v36 + v45 - 1)
            {
              if (!v143) {
                goto LABEL_147;
              }
              uint64_t v51 = v44;
              unint64_t v52 = v143 + v50;
              uint64_t v53 = v143 + v47;
              v152 = *v154;
              ((void (*)(char *, uint64_t, uint64_t))v152)(v136, v143 + v50, v3);
              if (v50 < v47 || v52 >= v143 + v48)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v50 != v47)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(uint64_t, char *, uint64_t))v152)(v53, v136, v3);
              uint64_t v44 = v51;
              a1 = v148;
              uint64_t v36 = (uint64_t)v149;
              uint64_t v46 = v155;
            }
            ++v49;
            --v45;
            v47 -= v46;
            v48 -= v46;
            v50 += v46;
          }
          while (v49 < v36 + v45);
          uint64_t v20 = v134;
          uint64_t v22 = (char *)v137;
          uint64_t v12 = v153;
        }
      }
    }
    if (v36 >= v12) {
      goto LABEL_57;
    }
    if (__OFSUB__(v36, v22)) {
      goto LABEL_140;
    }
    if (v36 - (uint64_t)v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_143;
    }
    uint64_t v54 = (uint64_t)&v22[v133] >= v12 ? v12 : (uint64_t)&v22[v133];
    if (v54 < (uint64_t)v22) {
      break;
    }
    if (v36 != v54)
    {
      v134 = v20;
      uint64_t v135 = v54;
      uint64_t v55 = *(void *)(v138 + 72);
      uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
      uint64_t v140 = v44;
      v141 = v56;
      uint64_t v155 = v55 * (v36 - 1);
      uint64_t v142 = v55;
      uint64_t v57 = v36 * v55;
      do
      {
        uint64_t v59 = 0;
        v149 = (char *)v36;
        uint64_t v143 = v57;
        while (1)
        {
          v152 = v22;
          uint64_t v60 = *a1;
          uint64_t v61 = v57 + v59 + *a1;
          double v62 = v147;
          id v63 = v141;
          v141(v147, v61, v3);
          uint64_t v64 = v155 + v59 + v60;
          unint64_t v65 = a1;
          char v66 = v146;
          v63(v146, v64, v3);
          sub_19EE7AA28();
          LODWORD(v153) = sub_19F1DBCDC();
          uint64_t v67 = *v144;
          (*v144)(v66, v3);
          v67(v62, v3);
          if ((v153 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v65;
          if (!*v65) {
            goto LABEL_145;
          }
          uint64_t v57 = v143;
          uint64_t v69 = v68 + v155 + v59;
          uint64_t v70 = *v154;
          uint64_t v3 = v150;
          ((void (*)(char *, uint64_t, uint64_t))*v154)(v151, v68 + v143 + v59, v150);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v70)(v69, v151, v3);
          v59 -= v142;
          uint64_t v22 = v152 + 1;
          a1 = v148;
          uint64_t v58 = v149;
          if (v149 == v152 + 1) {
            goto LABEL_50;
          }
        }
        uint64_t v58 = v149;
        uint64_t v3 = v150;
        a1 = v65;
        uint64_t v57 = v143;
LABEL_50:
        uint64_t v36 = (uint64_t)(v58 + 1);
        v155 += v142;
        v57 += v142;
        uint64_t v22 = (char *)v137;
      }
      while (v36 != v135);
      uint64_t v36 = v135;
      uint64_t v44 = v140;
      uint64_t v20 = v134;
    }
LABEL_57:
    if (v36 < (uint64_t)v22) {
      goto LABEL_135;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v140 = v44;
    v149 = (char *)v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_19F132908(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v73 = *((void *)v20 + 2);
    unint64_t v72 = *((void *)v20 + 3);
    unint64_t v21 = v73 + 1;
    if (v73 >= v72 >> 1) {
      uint64_t v20 = sub_19F132908((char *)(v72 > 1), v73 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    uint64_t v74 = v20 + 32;
    uint64_t v75 = &v20[16 * v73 + 32];
    uint64_t v76 = v149;
    *(void *)uint64_t v75 = v137;
    *((void *)v75 + 1) = v76;
    if (v73)
    {
      while (1)
      {
        unint64_t v77 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v82 = &v74[16 * v21];
          uint64_t v83 = *((void *)v82 - 8);
          uint64_t v84 = *((void *)v82 - 7);
          BOOL v88 = __OFSUB__(v84, v83);
          uint64_t v85 = v84 - v83;
          if (v88) {
            goto LABEL_124;
          }
          uint64_t v87 = *((void *)v82 - 6);
          uint64_t v86 = *((void *)v82 - 5);
          BOOL v88 = __OFSUB__(v86, v87);
          uint64_t v80 = v86 - v87;
          char v81 = v88;
          if (v88) {
            goto LABEL_125;
          }
          unint64_t v89 = v21 - 2;
          uint64_t v90 = &v74[16 * v21 - 32];
          uint64_t v92 = *(void *)v90;
          uint64_t v91 = *((void *)v90 + 1);
          BOOL v88 = __OFSUB__(v91, v92);
          uint64_t v93 = v91 - v92;
          if (v88) {
            goto LABEL_127;
          }
          BOOL v88 = __OFADD__(v80, v93);
          uint64_t v94 = v80 + v93;
          if (v88) {
            goto LABEL_130;
          }
          if (v94 >= v85)
          {
            uint64_t v112 = &v74[16 * v77];
            uint64_t v114 = *(void *)v112;
            uint64_t v113 = *((void *)v112 + 1);
            BOOL v88 = __OFSUB__(v113, v114);
            uint64_t v115 = v113 - v114;
            if (v88) {
              goto LABEL_134;
            }
            BOOL v105 = v80 < v115;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v106 = *((void *)v20 + 4);
            uint64_t v107 = *((void *)v20 + 5);
            BOOL v88 = __OFSUB__(v107, v106);
            uint64_t v99 = v107 - v106;
            char v100 = v88;
            goto LABEL_88;
          }
          uint64_t v79 = *((void *)v20 + 4);
          uint64_t v78 = *((void *)v20 + 5);
          BOOL v88 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          char v81 = v88;
        }
        if (v81) {
          goto LABEL_126;
        }
        unint64_t v89 = v21 - 2;
        uint64_t v95 = &v74[16 * v21 - 32];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v98 = __OFSUB__(v96, v97);
        uint64_t v99 = v96 - v97;
        char v100 = v98;
        if (v98) {
          goto LABEL_129;
        }
        uint64_t v101 = &v74[16 * v77];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v88 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v88) {
          goto LABEL_132;
        }
        if (__OFADD__(v99, v104)) {
          goto LABEL_133;
        }
        if (v99 + v104 >= v80)
        {
          BOOL v105 = v80 < v104;
LABEL_94:
          if (v105) {
            unint64_t v77 = v89;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v100) {
          goto LABEL_128;
        }
        uint64_t v108 = &v74[16 * v77];
        uint64_t v110 = *(void *)v108;
        uint64_t v109 = *((void *)v108 + 1);
        BOOL v88 = __OFSUB__(v109, v110);
        uint64_t v111 = v109 - v110;
        if (v88) {
          goto LABEL_131;
        }
        if (v111 < v99) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v116 = v77 - 1;
        if (v77 - 1 >= v21)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        uint64_t v117 = *a1;
        if (!*a1) {
          goto LABEL_146;
        }
        v118 = v20;
        v119 = &v74[16 * v116];
        uint64_t v120 = *(void *)v119;
        v121 = &v74[16 * v77];
        uint64_t v122 = *((void *)v121 + 1);
        uint64_t v123 = v140;
        sub_19F0FDDC0(v117 + *(void *)(v138 + 72) * *(void *)v119, v117 + *(void *)(v138 + 72) * *(void *)v121, v117 + *(void *)(v138 + 72) * v122, v139);
        uint64_t v140 = v123;
        if (v123) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_121;
        }
        if (v77 > *((void *)v118 + 2)) {
          goto LABEL_122;
        }
        *(void *)v119 = v120;
        *(void *)&v74[16 * v116 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v77 >= v124) {
          goto LABEL_123;
        }
        uint64_t v20 = v118;
        unint64_t v21 = v124 - 1;
        memmove(&v74[16 * v77], v121 + 16, 16 * (v124 - 1 - v77));
        *((void *)v118 + 2) = v124 - 1;
        a1 = v148;
        if (v124 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v149;
    uint64_t v4 = v138;
    if ((uint64_t)v149 >= v12)
    {
      uint64_t v18 = v132;
      goto LABEL_106;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  sub_19F1DCFBC();
  __break(1u);
}

void sub_19F0FDAD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_19F1DB57C();
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v37 = (char *)&v29 - v10;
  v13.n128_f64[0] = MEMORY[0x1F4188790](v11);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void, __n128))(v12 + 16);
    uint64_t v15 = v12 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    unint64_t v32 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = (void (*)(char *, uint64_t, uint64_t))v16;
    int v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      uint64_t v22 = v33;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v33)(v36, v20, v7, v13);
      uint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_19EE7AA28();
      LOBYTE(v19) = sub_19F1DBCDC();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      v24(v25, v7);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      id v27 = (char *)(v26 + v44 + v18);
      id v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      v28(v27, (uint64_t)v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_19F0FDDC0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v57 = sub_19F1DB57C();
  uint64_t v8 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v55 = (char *)&v47 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v32 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = (void (*)(char *, unint64_t, uint64_t))a1;
      if (v18 >= 1 && a1 < a2)
      {
        int v34 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v54 = v8 + 16;
        uint64_t v49 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v50 = v34;
        uint64_t v35 = -v13;
        unint64_t v51 = a4;
        uint64_t v48 = -v13;
        uint64_t v36 = v57;
        do
        {
          unint64_t v53 = a3 + v35;
          unint64_t v37 = a3;
          uint64_t v38 = v55;
          uint64_t v39 = v50;
          v50(v55, v32 + v35, v36);
          unint64_t v40 = a2 + v35;
          uint64_t v41 = v56;
          v39(v56, v40, v36);
          sub_19EE7AA28();
          LOBYTE(v39) = sub_19F1DBCDC();
          uint64_t v42 = *v49;
          (*v49)(v41, v36);
          v42(v38, v36);
          if (v39)
          {
            uint64_t v35 = v48;
            a3 = v53;
            if (v37 < a2 || v53 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v43 = v51;
            }
            else
            {
              unint64_t v43 = v51;
              if (v37 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v60 += v35;
          }
          else
          {
            unint64_t v44 = v58;
            v58 += v48;
            a3 = v53;
            BOOL v45 = v37 < v44 || v53 >= v44;
            uint64_t v35 = v48;
            if (v45)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v40 = a2;
              unint64_t v43 = v51;
            }
            else
            {
              unint64_t v43 = v51;
              if (v37 != v44) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v40 = a2;
            }
          }
          unint64_t v32 = v58;
          if (v58 <= v43) {
            break;
          }
          a2 = v40;
        }
        while (v40 > (unint64_t)v52);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v52 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v54 = v8 + 16;
      uint64_t v50 = (void (*)(char *, unint64_t, uint64_t))(v8 + 8);
      uint64_t v20 = v57;
      do
      {
        uint64_t v21 = v13;
        unint64_t v22 = a3;
        uint64_t v23 = v55;
        uint64_t v24 = v52;
        v52(v55, a2, v20);
        uint64_t v25 = v56;
        v24(v56, a4, v20);
        sub_19EE7AA28();
        LOBYTE(v24) = sub_19F1DBCDC();
        uint64_t v26 = *(void (**)(char *, uint64_t))v50;
        (*(void (**)(char *, uint64_t))v50)(v25, v20);
        v26(v23, v20);
        unint64_t v27 = v60;
        if (v24)
        {
          uint64_t v13 = v21;
          unint64_t v28 = a2 + v21;
          if (v60 < a2 || v60 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v60 == a2) {
              unint64_t v27 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v13 = v21;
          unint64_t v30 = v59 + v21;
          if (v60 < v59 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v30;
          unint64_t v28 = a2;
        }
        unint64_t v60 = v27 + v13;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_69:
    sub_19F132B7C(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

void sub_19F0FE388(uint64_t *a1)
{
}

uint64_t sub_19F0FE394()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F0FE3D4(void *a1)
{
  return sub_19F0FC6C8(a1, *(void *)(v1 + 16));
}

uint64_t sub_19F0FE3DC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F0FE414(void *a1)
{
  return sub_19F0FCB4C(a1, v1);
}

uint64_t sub_19F0FE41C(void *a1)
{
  return sub_19F0FCC50(a1);
}

uint64_t sub_19F0FE424@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F1DB4EC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_19F0FE45C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void JSONInitFailureObserver.tryingToEncode(_:didFailWith:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_19F1DCDEC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getErrorValue();
  sub_19F1DD6AC();
  id v12 = a2;
  sub_19F1DCDAC();
  uint64_t v13 = sub_19F1DCDFC();
  int64_t v14 = (void *)swift_allocError();
  uint64_t v16 = v15;
  uint64_t v17 = (char *)v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568) + 48);
  v16[3] = swift_getMetatypeMetadata();
  void *v16 = a1;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v17, v11, v8);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v16, *MEMORY[0x1E4FBBAA0], v13);
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(a4 + 8))(a1, v14, a3, a4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t dispatch thunk of JSONInitFailureObserver.tryingToInitialize(_:didFailWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of JSONInitFailureObserver.tryingToEncode(_:didFailWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t MetricsFieldExclusionRequest.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  swift_bridgeObjectRelease();
  sub_19EEBF040(a1, (uint64_t)v12);
  uint64_t v4 = v13;
  if (v13)
  {
    uint64_t v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v8 = v7;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if (v8)
    {
      uint64_t result = sub_19EEC3418(a1);
      *a2 = v6;
      a2[1] = v8;
      return result;
    }
  }
  else
  {
    sub_19EEBF108((uint64_t)v12);
  }
  sub_19EF5B580();
  swift_allocError();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *uint64_t v11 = &type metadata for MetricsFieldExclusionRequest;
  v11[1] = v10;
  v11[2] = 0;
  v11[3] = 0;
  swift_willThrow();
  return sub_19EEC3418(a1);
}

uint64_t MetricsFieldExclusionRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v5 = sub_19F1DD45C();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t MetricsFieldExclusionRequest.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t MetricsFieldExclusionRequest.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static MetricsFieldExclusionRequest.amsMetricsID.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsFieldExclusionRequest.app.getter(void *a1@<X8>)
{
  *a1 = 7368801;
  a1[1] = 0xE300000000000000;
}

void static MetricsFieldExclusionRequest.appVersion.getter(void *a1@<X8>)
{
  *a1 = 0x6973726556707061;
  a1[1] = 0xEA00000000006E6FLL;
}

void static MetricsFieldExclusionRequest.baseVersion.getter(void *a1@<X8>)
{
  *a1 = 0x7372655665736162;
  a1[1] = 0xEB000000006E6F69;
}

void static MetricsFieldExclusionRequest.clientEventId.getter(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

void static MetricsFieldExclusionRequest.clientBuildType.getter(void *a1@<X8>)
{
  *a1 = 0x7542746E65696C63;
  a1[1] = 0xEF65707954646C69;
}

void static MetricsFieldExclusionRequest.connection.getter(void *a1@<X8>)
{
  *a1 = 0x697463656E6E6F63;
  a1[1] = 0xEA00000000006E6FLL;
}

void static MetricsFieldExclusionRequest.osLanguages.getter(void *a1@<X8>)
{
  *a1 = 0x6175676E614C736FLL;
  a1[1] = 0xEB00000000736567;
}

void static MetricsFieldExclusionRequest.isSignedIn.getter(void *a1@<X8>)
{
  *a1 = 0x64656E6769537369;
  a1[1] = 0xEA00000000006E49;
}

void static MetricsFieldExclusionRequest.storeFrontHeader.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x800000019F268CB0;
}

void static MetricsFieldExclusionRequest.timezoneOffset.getter(char *a1@<X8>)
{
  a1[15] = -18;
}

void static MetricsFieldExclusionRequest.userAgent.getter(void *a1@<X8>)
{
  *a1 = 0x6E65674172657375;
  a1[1] = 0xE900000000000074;
}

void static MetricsFieldExclusionRequest.xpPostFrequency.getter(void *a1@<X8>)
{
  *a1 = 0x724674736F507078;
  a1[1] = 0xEF79636E65757165;
}

void static MetricsFieldExclusionRequest.capacity.getter(void *a1@<X8>)
{
  *a1 = 0x7974696361706163;
  a1[1] = 0xE800000000000000;
}

void static MetricsFieldExclusionRequest.eventTime.getter(void *a1@<X8>)
{
  *a1 = 0x6D6954746E657665;
  a1[1] = 0xE900000000000065;
}

void static MetricsFieldExclusionRequest.systemInfo.getter(void *a1@<X8>)
{
  *a1 = 0x6E496D6574737973;
  a1[1] = 0xEA00000000006F66;
}

void static MetricsFieldExclusionRequest.screen.getter(void *a1@<X8>)
{
  *a1 = 0x6E6565726373;
  a1[1] = 0xE600000000000000;
}

void static MetricsFieldExclusionRequest.pageHistory.getter(void *a1@<X8>)
{
  *a1 = 0x7473694865676170;
  a1[1] = 0xEB0000000079726FLL;
}

void static MetricsFieldExclusionRequest.eventVersion.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsFieldExclusionRequest.sampling.getter(void *a1@<X8>)
{
  *a1 = 0x676E696C706D6173;
  a1[1] = 0xE800000000000000;
}

void static MetricsFieldExclusionRequest.xpViewablePercentage.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x800000019F26A790;
}

void static MetricsFieldExclusionRequest.xpViewableThreshold.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000019F26A7B0;
}

void static MetricsFieldExclusionRequest.xpSendMethod.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsFieldExclusionRequest.config.getter(void *a1@<X8>)
{
  *a1 = 0x6769666E6F63;
  a1[1] = 0xE600000000000000;
}

void static MetricsFieldExclusionRequest.pageRenderClientId.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x800000019F26A660;
}

uint64_t sub_19F0FECD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return MetricsFieldExclusionRequest.init(deserializing:using:)(a1, a2);
}

uint64_t static AnyActionTypes.makeInstance(byDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  swift_bridgeObjectRetain();
  sub_19F17A6D0(0xD00000000000001FLL, 0x800000019F272A10, v5, v19);
  swift_bridgeObjectRelease();
  uint64_t v6 = *((void *)&v19[0] + 1);
  if ((~*((void *)&v19[0] + 1) & 0xF000000000000007) != 0)
  {
    uint64_t v9 = *(void *)&v19[0];
    JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v19);
    sub_19EEC3ED8((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_1E946FD20);
    uint64_t v10 = v17;
    if (v17)
    {
      uint64_t v11 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
      uint64_t v14 = v13;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
      sub_19EEC3418((uint64_t)v19);
      if (v14)
      {
        *(void *)&v19[0] = v9;
        *((void *)&v19[0] + 1) = v6;
        v16[0] = v5;
        AnyActionTypes.makeInstance(ofKind:byDeserializing:using:)(v12, v14, a1, v16, a3);
        swift_bridgeObjectRelease();
        return sub_19F0FEEF8(v9, v6);
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)v16, (uint64_t *)&unk_1E946FD20);
      sub_19EEC3418((uint64_t)v19);
    }
    sub_19F0FEEF8(v9, v6);
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v7 = xmmword_19F25CA80;
    uint64_t v8 = &type metadata for JSONObject;
  }
  else
  {
    sub_19EF5B580();
    swift_allocError();
    *(void *)uint64_t v7 = 0xD00000000000001FLL;
    *(void *)(v7 + 8) = 0x800000019F272A10;
    uint64_t v8 = &type metadata for JSONContext;
  }
  *(void *)(v7 + 16) = (unint64_t)v8 | 0x2000000000000000;
  *(void *)(v7 + 24) = 0;
  return swift_willThrow();
}

uint64_t sub_19F0FEEF8(uint64_t a1, uint64_t a2)
{
  if ((~a2 & 0xF000000000000007) != 0) {
    return sub_19F0FEF0C(a1, a2);
  }
  return a1;
}

uint64_t sub_19F0FEF0C(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t AnyActionTypes.init(types:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

uint64_t AnyActionTypes.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2 | 0x8000000000000000;
  return result;
}

void AnyActionTypes.makeInstance(ofKind:byDeserializing:using:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v76 = a5;
  uint64_t v10 = sub_19F1DCDCC();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v64 - v17;
  uint64_t v19 = *a4;
  uint64_t v20 = *v5;
  uint64_t v21 = v5[1];
  if ((v21 & 0x8000000000000000) == 0)
  {
    if (!*(void *)(v20 + 16))
    {
LABEL_14:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E488) | 0x6000000000000000;
      sub_19EF5B580();
      swift_allocError();
      *uint64_t v39 = a1;
      v39[1] = a2;
      v39[2] = v38;
      uint64_t v39[3] = 0;
      swift_bridgeObjectRetain();
LABEL_15:
      swift_willThrow();
      return;
    }
    sub_19F100290(*v5, v5[1]);
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_19EEBD400(a1, a2);
    if (v23)
    {
      uint64_t v24 = *(void *)(v20 + 56) + 24 * v22;
      uint64_t v25 = *(void *)(v24 + 16);
      long long v66 = *(_OWORD *)v24;
      sub_19F0FEF0C(v20, v21);
      swift_bridgeObjectRelease();
      sub_19EEC355C(a3, (uint64_t)v69);
      v68[0] = v19;
      uint64_t v26 = *(void (**)(uint64_t *, void *))(v25 + 8);
      long long v73 = v66;
      uint64_t v74 = v25;
      __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v72);
      swift_bridgeObjectRetain();
      uint64_t v27 = v67;
      goto LABEL_9;
    }
    sub_19F0FEF0C(v20, v21);
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v65 = v15;
  *(void *)&long long v66 = v14;
  uint64_t v28 = (*(uint64_t (**)(uint64_t, double))(*(void *)((v21 & 0x7FFFFFFFFFFFFFFFLL) + 8) + 16))(v20, v16);
  if (!*(void *)(v28 + 16)) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_19EEBD400(a1, a2);
  if ((v30 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v31 = *(void *)(*(void *)(v28 + 56) + 8 * v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = dynamic_cast_existential_2_conditional(v31);
  if (v32)
  {
    uint64_t v35 = v32;
    uint64_t v36 = v33;
    uint64_t v37 = v34;
    sub_19EEC355C(a3, (uint64_t)v69);
    v68[0] = v19;
    uint64_t v26 = *(void (**)(uint64_t *, void *))(v37 + 8);
    *(void *)&long long v73 = v35;
    *((void *)&v73 + 1) = v36;
    uint64_t v74 = v37;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v72);
    swift_bridgeObjectRetain();
    uint64_t v27 = v67;
LABEL_9:
    v26(v69, v68);
    if (v27)
    {
      __swift_deallocate_boxed_opaque_existential_2((uint64_t)v72);
    }
    else
    {
      long long v67 = v73;
      uint64_t v40 = v73;
      uint64_t v41 = __swift_project_boxed_opaque_existential_1(v72, v73);
      uint64_t v42 = (uint64_t *)v76;
      *(_OWORD *)(v76 + 24) = v67;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v42);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(boxed_opaque_existential_2Tm, v41, v40);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
    }
    return;
  }
  uint64_t v44 = dynamic_cast_existential_2_conditional(v31);
  if (!v44)
  {
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E488);
    sub_19EF5B580();
    swift_allocError();
    uint64_t v58 = MEMORY[0x1E4FBC860];
    uint64_t *v59 = v57;
    v59[1] = v58;
    uint64_t v59[2] = 0;
    v59[3] = 0;
    goto LABEL_15;
  }
  uint64_t v47 = v44;
  uint64_t v48 = v45;
  uint64_t v49 = v46;
  sub_19EEC355C(a3, (uint64_t)v72);
  v69[0] = v19;
  swift_bridgeObjectRetain();
  uint64_t v74 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v69);
  uint64_t v75 = MEMORY[0x1E4FBC860];
  v68[3] = &type metadata for _JSONObjectDecoder;
  v68[4] = sub_19EE70560();
  v68[0] = swift_allocObject();
  sub_19EE70470((uint64_t)v72, v68[0] + 16);
  *(void *)&long long v70 = v47;
  *((void *)&v70 + 1) = v48;
  uint64_t v71 = v49;
  __swift_allocate_boxed_opaque_existential_2Tm(v69);
  uint64_t v50 = (void *)v67;
  sub_19F1DC59C();
  if (v50)
  {
    sub_19EE703B4((uint64_t)v72);
    __swift_deallocate_boxed_opaque_existential_2((uint64_t)v69);
    v72[0] = v50;
    id v51 = v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    uint64_t v52 = v66;
    if (swift_dynamicCast())
    {

      uint64_t v53 = v65;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v12, v18, v52);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D900);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_19F24EAD0;
      *(void *)(v54 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v55, v12, v52);
      sub_19EF5B580();
      swift_allocError();
      *uint64_t v56 = v47;
      v56[1] = v54;
      _OWORD v56[2] = 0;
      v56[3] = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v52);
    }
  }
  else
  {
    long long v67 = v70;
    uint64_t v60 = v70;
    uint64_t v61 = __swift_project_boxed_opaque_existential_1(v69, v70);
    double v62 = (uint64_t *)v76;
    *(_OWORD *)(v76 + 24) = v67;
    id v63 = __swift_allocate_boxed_opaque_existential_2Tm(v62);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(v63, v61, v60);
    sub_19EE703B4((uint64_t)v72);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v69);
  }
}

void static JSONContext.actionTypes.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x800000019F272A10;
}

double static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  sub_19EEC3ED8(a1, (uint64_t)v10, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v11;
  if (v11)
  {
    uint64_t v7 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    if ((v8 & 1) == 0)
    {
      v10[0] = v5;
      static AnyActionTypes.makeInstance(byDeserializing:using:)(a1, v10, a3);
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v10, (uint64_t *)&unk_1E946FD20);
  }
  *(void *)(a3 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t static AnyActionTypes.makeInstances(byDeserializing:using:)(void *a1, void *a2)
{
  v7[2] = *a2;
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  uint64_t v4 = *(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t))(v3 + 48);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E488);
  return v4(sub_19F10029C, v7, v5, v2, v3);
}

uint64_t sub_19F0FF7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a2;
  return static AnyActionTypes.makeInstance(byDeserializing:using:)(a1, &v4, a3);
}

uint64_t static AnyActionTypes.tryToMakeInstances(byDeserializing:using:)(void *a1, void *a2)
{
  v7[2] = *a2;
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  uint64_t v4 = *(uint64_t (**)(double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E488);
  return v4(sub_19F1002C8, v7, v5, v2, v3);
}

void sub_19F0FF894(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t static JSONContext.actionKindKey.getter()
{
  return 0x646E696B24;
}

void static JSONContext.Property<A>.actionKindTable.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000023;
  a1[1] = 0x800000019F26A630;
}

uint64_t AnyActionTypes.init<A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v73 = a3;
  uint64_t v4 = a2;
  uint64_t v60 = a4;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  char v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946D0A8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v76 = sub_19F1DCAAC();
  MEMORY[0x1F4188790](v76);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.n128_f64[0] = MEMORY[0x1F4188790](v12);
  double v16 = (char *)&v59 - v14;
  int64_t v17 = 0;
  uint64_t v18 = *a1;
  uint64_t v19 = *(void *)(*a1 + 64);
  uint64_t v61 = *a1 + 64;
  uint64_t v64 = v6;
  uint64_t v65 = v18;
  uint64_t v20 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v62 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v63 = v6 + 16;
  uint64_t v74 = (void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v75 = TupleTypeMetadata2 - 8;
  unint64_t v72 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  long long v66 = (void (**)(char *, uint64_t))(v6 + 8);
  int64_t v59 = v62 - 1;
  char v23 = (void *)MEMORY[0x1E4FBC868];
  long long v70 = v8;
  uint64_t v71 = v4;
  uint64_t v68 = v11;
  uint64_t v69 = TupleTypeMetadata2;
  long long v67 = (char *)&v59 - v14;
  while (1)
  {
    if (v22)
    {
      unint64_t v25 = __clz(__rbit64(v22));
      uint64_t v26 = (v22 - 1) & v22;
      unint64_t v27 = v25 | (v17 << 6);
      goto LABEL_8;
    }
    int64_t v33 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_41;
    }
    if (v33 < v62)
    {
      unint64_t v34 = *(void *)(v61 + 8 * v33);
      if (v34) {
        goto LABEL_12;
      }
      v17 += 2;
      if (v33 + 1 >= v62)
      {
        uint64_t v26 = 0;
        uint64_t v29 = 1;
        int64_t v17 = v33;
        goto LABEL_21;
      }
      unint64_t v34 = *(void *)(v61 + 8 * v17);
      if (v34)
      {
        ++v33;
        goto LABEL_12;
      }
      int64_t v35 = v33 + 2;
      if (v33 + 2 < v62) {
        break;
      }
    }
    uint64_t v26 = 0;
    uint64_t v29 = 1;
LABEL_21:
    uint64_t v36 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v11, v29, 1, TupleTypeMetadata2);
    (*v74)(v16, v11, v76);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v16, 1, TupleTypeMetadata2) == 1)
    {
      uint64_t result = swift_release();
      uint64_t v58 = v60;
      void *v60 = v23;
      v58[1] = 0;
      return result;
    }
    unint64_t v77 = v26;
    int64_t v78 = v17;
    uint64_t v37 = &v16[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v39 = *(void *)v37;
    uint64_t v38 = *((void *)v37 + 1);
    uint64_t v40 = *((void *)v37 + 2);
    (*v72)(v8, v16, v4);
    sub_19F1DC0CC();
    uint64_t v41 = v80;
    uint64_t v42 = v81;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = v23;
    unint64_t v45 = sub_19EEBD400(v41, v42);
    uint64_t v46 = v23[2];
    BOOL v47 = (v44 & 1) == 0;
    uint64_t v48 = v46 + v47;
    if (__OFADD__(v46, v47))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    char v49 = v44;
    if (v23[3] >= v48)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        char v23 = v79;
        if (v44) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_19EFBFF10();
        char v23 = v79;
        if (v49) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_19EFBA9E4(v48, isUniquelyReferenced_nonNull_native);
      unint64_t v50 = sub_19EEBD400(v41, v42);
      if ((v49 & 1) != (v51 & 1)) {
        goto LABEL_43;
      }
      unint64_t v45 = v50;
      char v23 = v79;
      if (v49)
      {
LABEL_4:
        uint64_t v24 = (void *)(v23[7] + 24 * v45);
        *uint64_t v24 = v39;
        v24[1] = v38;
        v24[2] = v40;
        goto LABEL_5;
      }
    }
    v23[(v45 >> 6) + 8] |= 1 << v45;
    uint64_t v52 = (uint64_t *)(v23[6] + 16 * v45);
    *uint64_t v52 = v41;
    v52[1] = v42;
    uint64_t v53 = (void *)(v23[7] + 24 * v45);
    *uint64_t v53 = v39;
    v53[1] = v38;
    v53[2] = v40;
    uint64_t v54 = v23[2];
    BOOL v55 = __OFADD__(v54, 1);
    uint64_t v56 = v54 + 1;
    if (v55) {
      goto LABEL_40;
    }
    void v23[2] = v56;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v8 = v70;
    uint64_t v4 = v71;
    (*v66)(v70, v71);
    uint64_t v11 = v68;
    TupleTypeMetadata2 = v69;
    double v16 = v67;
    unint64_t v22 = v77;
    int64_t v17 = v78;
  }
  unint64_t v34 = *(void *)(v61 + 8 * v35);
  if (v34)
  {
    v33 += 2;
LABEL_12:
    uint64_t v26 = (v34 - 1) & v34;
    unint64_t v27 = __clz(__rbit64(v34)) + (v33 << 6);
    int64_t v17 = v33;
LABEL_8:
    uint64_t v28 = v65;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v64 + 16))(v11, *(void *)(v65 + 48) + *(void *)(v64 + 72) * v27, v4, v15);
    uint64_t v29 = 0;
    uint64_t v30 = *(void *)(v28 + 56) + 24 * v27;
    uint64_t v31 = &v11[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v32 = *(void *)(v30 + 16);
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v30;
    *((void *)v31 + 2) = v32;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v33 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v33 >= v62)
    {
      uint64_t v26 = 0;
      uint64_t v29 = 1;
      int64_t v17 = v59;
      goto LABEL_21;
    }
    unint64_t v34 = *(void *)(v61 + 8 * v33);
    ++v35;
    if (v34) {
      goto LABEL_12;
    }
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t ActionTypes.init()@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946D0B0);
  swift_getTupleTypeMetadata2();
  sub_19F1DC1CC();
  uint64_t result = sub_19F1DBBAC();
  *a1 = result;
  return result;
}

uint64_t ActionTypes.registering(_:toKind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t v10 = *(void *)(a4 + 16);
  double v11 = MEMORY[0x1F4188790](a1);
  *a5 = *v5;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v10, v11);
  v16[1] = a1;
  v16[2] = a2;
  uint64_t v16[3] = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946D0B0);
  sub_19F1DBC0C();
  return sub_19F1DBC6C();
}

uint64_t ActionTypes.makeInstance(ofKind:byDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = *a3;
  uint64_t v12 = *v5;
  uint64_t v13 = *(void *)(a4 + 16);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D0B0);
  MEMORY[0x19F3C5F50](&v29, a1, v12, v13, v14, *(void *)(a4 + 24));
  uint64_t v15 = v29;
  if (v29)
  {
    uint64_t v16 = v30;
    uint64_t v17 = v31;
    sub_19EEC355C(a2, (uint64_t)v28);
    uint64_t v34 = v11;
    uint64_t v18 = *(void (**)(unsigned char *, uint64_t *, uint64_t, uint64_t))(v17 + 8);
    *(void *)&long long v32 = v15;
    *((void *)&v32 + 1) = v16;
    uint64_t v33 = v17;
    __swift_allocate_boxed_opaque_existential_2Tm(&v29);
    swift_bridgeObjectRetain();
    v18(v28, &v34, v15, v17);
    if (v6)
    {
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)&v29);
    }
    else
    {
      long long v27 = v32;
      uint64_t v24 = v32;
      unint64_t v25 = __swift_project_boxed_opaque_existential_1(&v29, v32);
      *(_OWORD *)(a5 + 24) = v27;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)a5);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_2Tm, v25, v24);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
    }
  }
  else
  {
    sub_19F1DC0CC();
    uint64_t v20 = v29;
    uint64_t v21 = v30;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E488) | 0x6000000000000000;
    sub_19EF5B580();
    swift_allocError();
    *char v23 = v20;
    v23[1] = v21;
    void v23[2] = v22;
    v23[3] = 0;
    return swift_willThrow();
  }
}

uint64_t sub_19F100228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return ActionTypes.makeInstance(ofKind:byDeserializing:using:)(a1, a2, a3, a4, a5);
}

uint64_t sub_19F100240()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19F100290(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19F10029C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  return static AnyActionTypes.makeInstance(byDeserializing:using:)(a1, &v4, a2);
}

double sub_19F1002C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  return static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)(a1, &v4, a2);
}

uint64_t dispatch thunk of ActionModel.actionMetrics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for AnyActionTypes()
{
  return &type metadata for AnyActionTypes;
}

uint64_t type metadata accessor for ActionTypes()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for AnyActionTypes.Registry(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_19F100290(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for AnyActionTypes.Registry(uint64_t *a1)
{
  return sub_19F0FEF0C(*a1, a1[1]);
}

uint64_t *_s9JetEngine14AnyActionTypesV8RegistryOwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_19F100290(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_19F0FEF0C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for AnyActionTypes.Registry(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_19F0FEF0C(v3, v4);
  return a1;
}

uint64_t _s9JetEngine14AnyActionTypesV8RegistryOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 57) >> 6) | (2
                                                          * ((*(void *)(a1 + 8) >> 57) & 0x38 | *(void *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s9JetEngine14AnyActionTypesV8RegistryOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_19F1004C0(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_19F1004CC(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_19F1004DC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for AnyActionTypes.Registry()
{
  return &type metadata for AnyActionTypes.Registry;
}

uint64_t OpenIntent.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v18);
  sub_19EEBF040((uint64_t)v18, (uint64_t)v15);
  uint64_t v7 = v16;
  if (!v16)
  {
    sub_19EEBD664((uint64_t)v15, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v18);
    goto LABEL_6;
  }
  uint64_t v8 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  uint64_t v11 = v10;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  sub_19EEC3418((uint64_t)v18);
  if (!v11)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v13 = type metadata accessor for OpenIntent() | 0x2000000000000000;
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v14 = xmmword_19F25CA80;
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  sub_19EEC355C(a1, (uint64_t)v18);
  uint64_t v19 = v6;
  ScalarDictionary.init(deserializing:using:)((uint64_t)v18, v15);
  uint64_t result = sub_19EEC3418(a1);
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  *a3 = v15[0];
  a3[1] = v9;
  a3[2] = v11;
  return result;
}

uint64_t type metadata accessor for OpenIntent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t OpenIntent.kind.getter()
{
  uint64_t v0 = sub_19F100F90();
  swift_bridgeObjectRetain();
  return v0;
}

JSValue __swiftcall OpenIntent.makeValue(in:)(JSContext in)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_19EF69270(in.super.isa, v3);
  swift_bridgeObjectRelease();
  return (JSValue)v4;
}

uint64_t sub_19F100814()
{
  uint64_t v0 = sub_19F100F90();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_19F10084C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return OpenIntent.init(deserializing:using:)(a1, a2, a3);
}

uint64_t OpenIntentModifier.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v7 = a2;
  uint64_t v25 = *(void *)(a2 - 8);
  uint64_t v26 = a4;
  MEMORY[0x1F4188790](a1);
  int64_t v35 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v11;
  *(void *)&long long v31 = *v11;
  swift_bridgeObjectRetain();
  sub_19EF6B168(0xD000000000000027, 0x800000019F269EF0, v34);
  sub_19EEBD664((uint64_t)v34, &qword_1EB393260);
  uint64_t v13 = v31;
  uint64_t v27 = a1;
  sub_19EEC355C(a1, (uint64_t)v34);
  JSONObject.dictionary.getter((uint64_t)&v28);
  if (*((void *)&v29 + 1))
  {
    uint64_t v23 = (uint64_t)&v23;
    long long v31 = v28;
    long long v32 = v29;
    uint64_t v33 = v30;
    MEMORY[0x1F4188790](v14);
    *(&v23 - 2) = v13;
    uint64_t v15 = *((void *)&v32 + 1);
    uint64_t v16 = v33;
    uint64_t v24 = v7;
    __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
    uint64_t v7 = v24;
    uint64_t v17 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>), uint64_t *, void, ValueMetadata *, void, uint64_t, uint64_t))(v16 + 48))(sub_19EECA854, &v23 - 4, MEMORY[0x1E4FBB1A0], &type metadata for ScalarDictionary.Value, MEMORY[0x1E4FBB1B0], v15, v16);
    uint64_t v18 = v5;
    swift_bridgeObjectRelease();
    sub_19EEC3418((uint64_t)v34);
    sub_19EEC05FC((uint64_t)&v31);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)&v28, &qword_1E946F740);
    sub_19EEC3418((uint64_t)v34);
    uint64_t v17 = MEMORY[0x1E4FBC868];
    uint64_t v18 = v5;
  }
  *a5 = v17;
  uint64_t v19 = v27;
  sub_19EEC355C(v27, (uint64_t)v34);
  *(void *)&long long v31 = v12;
  uint64_t v20 = v35;
  (*(void (**)(_OWORD *, long long *, uint64_t, uint64_t))(a3 + 8))(v34, &v31, v7, a3);
  sub_19EEC3418(v19);
  if (v18) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v22 = type metadata accessor for OpenIntentModifier();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))((char *)a5 + *(int *)(v22 + 44), v20, v7);
}

uint64_t OpenIntentModifier.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = MEMORY[0x1E4FBC868];
  uint64_t v5 = (char *)a3 + *(int *)(type metadata accessor for OpenIntentModifier() + 44);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v6(v5, a1, a2);
}

uint64_t OpenIntentModifier.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t OpenIntentModifier.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, v2 + *(int *)(v8 + 44), v3, v5);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t OpenIntentModifier.kind.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 32))(*(void *)(a1 + 16));
}

JSValue __swiftcall OpenIntentModifier.makeValue(in:)(JSContext in)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_19EF69270(in.super.isa, v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(*(uint64_t (**)(Class, void))(*(void *)(*(void *)(v3 + 32) + 8) + 24))(in.super.isa, *(void *)(v3 + 16));
  JSValue.propertyNames.getter();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = v8 + 40;
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = (void *)sub_19F1DBD4C();
      id v12 = objc_msgSend(v6, sel_valueForProperty_, v11);

      if (!v12) {
        break;
      }
      v10 += 16;
      id v14 = v12;
      uint64_t v15 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_setValue_forProperty_, v14, v15);

      if (!--v9) {
        goto LABEL_5;
      }
    }
    __break(1u);
    __break(1u);
  }
  else
  {
LABEL_5:

    swift_bridgeObjectRelease();
    return (JSValue)v7;
  }
  return result;
}

uint64_t sub_19F100F68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  return OpenIntentModifier.init(deserializing:using:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_19F100F90()
{
  return *(void *)(v0 + 8);
}

uint64_t type metadata accessor for OpenIntentModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F100FB0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_19F100FD0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19F101070(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_19F101210(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x19F10146CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t AMSInMemoryMetricsEventRecorder.__allocating_init(metrics:maximumBatchSize:flushTimeInterval:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  int v7 = a4 & 1;
  swift_allocObject();
  uint64_t v8 = sub_19F102710(a1, a2, a3, v7);

  return v8;
}

uint64_t AMSInMemoryMetricsEventRecorder.init(metrics:maximumBatchSize:flushTimeInterval:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = sub_19F102710(a1, a2, a3, a4 & 1);

  return v5;
}

uint64_t AMSInMemoryMetricsEventRecorder.__allocating_init(bag:topic:)(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  id v6 = objc_msgSend((id)swift_unknownObjectRetain(), sel_profile);
  sub_19F1DBD7C();

  id v7 = objc_msgSend(v5, sel_profileVersion);
  sub_19F1DBD7C();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  id v8 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  swift_unknownObjectRetain();
  uint64_t v9 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithContainerID_bag_, v9, v5);

  swift_unknownObjectRelease();
  id v11 = AMSMetrics.withRemoteInspection.getter();

  swift_unknownObjectRetain();
  uint64_t v12 = sub_19F0E9038(0x686374614278616DLL, 0xEC000000657A6953, a2, a3);
  char v14 = v13;
  swift_unknownObjectRelease();
  if (v14) {
    uint64_t v15 = 1000;
  }
  else {
    uint64_t v15 = v12;
  }
  double v16 = COERCE_DOUBLE(sub_19F0E9230(0x7165724674736F70, 0xED000079636E6575, a2, a3));
  char v18 = v17;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (v18) {
    double v19 = 60.0;
  }
  else {
    double v19 = v16 / 1000.0;
  }
  swift_allocObject();
  uint64_t v20 = sub_19F102710(v11, v15, *(uint64_t *)&v19, 0);

  return v20;
}

Swift::Void __swiftcall AMSInMemoryMetricsEventRecorder.record(_:on:)(JetEngine::LintedMetricsEvent _, Swift::String_optional on)
{
  uint64_t v3 = v2;
  uint64_t countAndFlagsBits = on.value._countAndFlagsBits;
  uint64_t v5 = sub_19F1DB9FC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DBA3C();
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (countAndFlagsBits)
  {
    uint64_t v25 = v10;
    uint64_t v26 = v6;
    id v13 = objc_allocWithZone(MEMORY[0x1E4F4DD60]);
    swift_bridgeObjectRetain();
    char v14 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_initWithTopic_, v14);

    uint64_t v16 = v3[6];
    uint64_t v17 = v3[7];
    __swift_project_boxed_opaque_existential_1(v3 + 3, v16);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8))(aBlock, v16, v17);
    char v18 = (void *)aBlock[0];
    objc_msgSend(v15, sel_setAccount_, aBlock[0]);
    double v19 = (void *)sub_19F1DBB1C();
    objc_msgSend(v15, sel_addPropertiesWithDictionary_, v19);

    uint64_t v30 = 0;
    BOOL v29 = 0;
    uint64_t v20 = (void *)v3[9];
    objc_msgSend(v20, sel_lock);
    sub_19F101BBC(&v29, (uint64_t)v3, v15, &v30);
    objc_msgSend(v20, sel_unlock);
    uint64_t v21 = v30;
    if (v30)
    {
      v24[1] = v3[13];
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v3;
      *(void *)(v22 + 24) = v21;
      aBlock[4] = sub_19F102A4C;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_19EEA4A68;
      aBlock[3] = &block_descriptor_29;
      uint64_t v23 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_19F1DBA1C();
      uint64_t v27 = MEMORY[0x1E4FBC860];
      sub_19EEA5EEC(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
      sub_19EEA5E54((unint64_t *)&qword_1EB393050, &qword_1EB393048);
      sub_19F1DCC1C();
      MEMORY[0x19F3C6B90](0, v12, v8, v23);

      _Block_release(v23);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v5);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v9);
      swift_release();
    }
    else
    {
      if (v29) {
        sub_19F101EAC();
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19F1979DC((unint64_t)"JetEngine/AMSInMemoryMetricsEventRecorder.swift", 0x2FuLL, 2, 0x46uLL);
  }
}

uint64_t sub_19F101BBC(BOOL *a1, uint64_t a2, void *a3, void *a4)
{
  id v8 = (void *)(a2 + 64);
  swift_beginAccess();
  unint64_t v9 = *(void *)(a2 + 64);
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *a1 = v10 == 0;
  swift_beginAccess();
  id v11 = a3;
  MEMORY[0x19F3C6430]();
  if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_19F1DC1BC();
  }
  sub_19F1DC20C();
  sub_19F1DC17C();
  uint64_t result = swift_endAccess();
  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_19F1DD03C();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 >= *(void *)(a2 + 96))
  {
    *a4 = *v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    void *v8 = MEMORY[0x1E4FBC860];
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19F101D50()
{
  unint64_t v1 = *(void **)(v0 + 16);
  sub_19EEBDC10(0, (unint64_t *)&qword_1E946F790);
  uint64_t v2 = (void *)sub_19F1DC14C();
  id v3 = objc_msgSend(v1, sel_flushEvents_, v2);

  sub_19F020170(v3);
  uint64_t v4 = sub_19F0C0704((uint64_t)sub_19F0C0570, 0);
  swift_release();
  uint64_t v5 = sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
  uint64_t v6 = (void *)sub_19F1DC87C();
  v11[3] = v5;
  v11[4] = &protocol witness table for OS_dispatch_queue;
  v11[0] = v6;
  v9[0] = sub_19F102304;
  v9[1] = 0;
  void v9[2] = sub_19F0C034C;
  void v9[3] = 0;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  id v7 = v6;
  sub_19EF5339C((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1EB390E20);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);

  return v4;
}

void sub_19F101EAC()
{
  uint64_t v1 = sub_19F1DB9FC();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  uint64_t v31 = v2;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_19F1DBA3C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DBA5C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v23 - v14;
  if ((*(unsigned char *)(v0 + 88) & 1) == 0)
  {
    double v16 = *(double *)(v0 + 80);
    uint64_t v27 = *(void *)(v0 + 104);
    sub_19F1DBA4C();
    MEMORY[0x19F3C5D70](v12, v16);
    uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v28 = v10 + 8;
    BOOL v29 = v17;
    v17(v12, v9);
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_19F102B10;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_19EEA4A68;
    aBlock[3] = &block_descriptor_8_0;
    uint64_t v25 = _Block_copy(aBlock);
    swift_retain();
    sub_19F1DBA1C();
    uint64_t v32 = MEMORY[0x1E4FBC860];
    sub_19EEA5EEC(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
    uint64_t v19 = v30;
    uint64_t v26 = v9;
    uint64_t v20 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
    uint64_t v21 = v31;
    uint64_t v24 = v5;
    sub_19EEA5E54((unint64_t *)&qword_1EB393050, &qword_1EB393048);
    sub_19F1DCC1C();
    uint64_t v22 = v25;
    MEMORY[0x19F3C6B40](v15, v20, v4, v25);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v19);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v24);
    v29(v15, v26);
    swift_release();
    swift_release();
  }
}

uint64_t AMSInMemoryMetricsEventRecorder.flush()()
{
  uint64_t v1 = *(void **)(v0 + 72);
  objc_msgSend(v1, sel_lock);
  swift_beginAccess();
  *(void *)(v0 + 64) = MEMORY[0x1E4FBC860];
  objc_msgSend(v1, sel_unlock);
  uint64_t v2 = sub_19F101D50();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_19F102304(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
  id v4 = v2;
  uint64_t v21 = sub_19EEC3F3C(0, 24, 0, MEMORY[0x1E4FBC860]);
  v5._uint64_t countAndFlagsBits = 0x2064656873756C46;
  v5._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  v20[3] = MEMORY[0x1E4FBB550];
  v20[0] = v1;
  sub_19EEBCD00((uint64_t)v20, (uint64_t)v16);
  long long v14 = 0u;
  long long v15 = 0u;
  sub_19EEC3E70((uint64_t)v16, (uint64_t)&v14);
  char v19 = 1;
  long long v17 = v14;
  long long v18 = v15;
  uint64_t v6 = v21;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = sub_19EEC3F3C(0, v6[2] + 1, 1, v6);
  }
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  if (v8 >= v7 >> 1) {
    uint64_t v6 = sub_19EEC3F3C((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  v6[2] = v8 + 1;
  uint64_t v9 = &v6[5 * v8];
  long long v10 = v17;
  long long v11 = v18;
  *((unsigned char *)v9 + 64) = v19;
  *((_OWORD *)v9 + 2) = v10;
  *((_OWORD *)v9 + 3) = v11;
  uint64_t v21 = v6;
  sub_19EEBD664((uint64_t)v20, &qword_1EB393260);
  v12._uint64_t countAndFlagsBits = 0x7363697274656D20;
  v12._object = (void *)0xEF73746E65766520;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  *(void *)(v3 + 32) = v21;
  *(void *)&long long v17 = v4;
  LOBYTE(v14) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19F102504()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void **)(result + 72);
    objc_msgSend(v2, sel_lock);
    swift_beginAccess();
    *(void *)(v1 + 64) = MEMORY[0x1E4FBC860];
    objc_msgSend(v2, sel_unlock);
    sub_19F101D50();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

id *AMSInMemoryMetricsEventRecorder.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t AMSInMemoryMetricsEventRecorder.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_19F10265C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_19F102680()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(v1 + 72);
  objc_msgSend(v2, sel_lock);
  swift_beginAccess();
  *(void *)(v1 + 64) = MEMORY[0x1E4FBC860];
  objc_msgSend(v2, sel_unlock);
  uint64_t v3 = sub_19F101D50();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_19F102710(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v20 = a4;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  long long v17 = a1;
  uint64_t v16 = sub_19F1DC86C();
  uint64_t v5 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DC83C();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_19F1DBA3C();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 64) = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 72) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
  sub_19F1DBA1C();
  uint64_t v21 = v10;
  sub_19EEA5EEC((unint64_t *)&qword_1EB393078, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393060);
  sub_19EEA5E54((unint64_t *)&qword_1EB393068, &qword_1EB393060);
  sub_19F1DCC1C();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC58], v16);
  *(void *)(v4 + 104) = sub_19F1DC8AC();
  long long v11 = v17;
  *(void *)(v4 + 16) = v17;
  Swift::String v12 = self;
  id v13 = v11;
  id v14 = objc_msgSend(v12, sel_ams_sharedAccountStore);
  *(void *)(v4 + 48) = sub_19EEBDC10(0, qword_1EB392F30);
  *(void *)(v4 + 56) = &protocol witness table for ACAccountStore;
  *(void *)(v4 + 24) = v14;
  *(void *)(v4 + 96) = v18;
  *(void *)(v4 + 80) = v19;
  *(unsigned char *)(v4 + 88) = v20 & 1;
  return v4;
}

uint64_t sub_19F102A0C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F102A4C()
{
  sub_19F101D50();
  return swift_release();
}

uint64_t type metadata accessor for AMSInMemoryMetricsEventRecorder()
{
  return self;
}

uint64_t method lookup function for AMSInMemoryMetricsEventRecorder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AMSInMemoryMetricsEventRecorder);
}

uint64_t dispatch thunk of AMSInMemoryMetricsEventRecorder.__allocating_init(metrics:maximumBatchSize:flushTimeInterval:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 136))(a1, a2, a3, a4 & 1);
}

uint64_t sub_19F102AD8()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F102B10()
{
  return sub_19F102504();
}

uint64_t sub_19F102B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  sub_19EEC4154(v2, (uint64_t)v16);
  uint64_t v7 = v17;
  uint64_t v8 = v18;
  long long v15 = __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v10 = *(void *)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  Swift::String v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = v4;
  *((void *)v12 + 3) = v10;
  *((void *)v12 + 4) = v9;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  id v13 = *(void (**)(uint64_t (*)(), char *, uint64_t, uint64_t))(v8 + 8);
  swift_retain();
  v13(sub_19F103608, v12, v7, v8);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
}

void *sub_19F102CB8(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  sub_19EEBB420(a1, (uint64_t)(v6 + 3));
  v6[8] = a2;
  v6[9] = a3;
  return v6;
}

uint64_t sub_19F102D2C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_lock);
  sub_19F102D90(v0, (char *)&v3);
  objc_msgSend(v1, sel_unlock);
  return v3;
}

uint64_t sub_19F102D90@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = a1 + 24;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for SingleUseClosureEventObserver.State();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v7, v3, v4);
  char v6 = v8;
  if (v8)
  {
    swift_release();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
    char v6 = 1;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_19F102E60(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v19 - v6;
  uint64_t v8 = *(void **)(v2 + 16);
  sub_19F103628();
  uint64_t v9 = type metadata accessor for SingleUseClosureEventObserver.State();
  withLock<A, B>(_:_:)(v8, (void (*)(id))sub_19F10360C);
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(long long *, long long *, uint64_t))(v10 + 16))(&v21, v28, v9);
  if (v22)
  {
    uint64_t v11 = v24;
    v19[0] = v23;
    sub_19EEBB420(&v21, (uint64_t)v25);
    uint64_t v12 = v27;
    uint64_t v20 = v26;
    v19[1] = __swift_project_boxed_opaque_existential_1(v25, v26);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    id v14 = (char *)swift_allocObject();
    uint64_t v15 = v19[0];
    *((void *)v14 + 2) = v4;
    *((void *)v14 + 3) = v15;
    *((void *)v14 + 4) = v11;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], v7, v4);
    uint64_t v16 = *(void (**)(uint64_t (*)(), char *, uint64_t, uint64_t))(v12 + 8);
    swift_retain();
    v16(sub_19F103608, v14, v20, v12);
    swift_release();
    swift_release();
    (*(void (**)(long long *, uint64_t))(v10 + 8))(v28, v9);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  }
  else
  {
    uint64_t v18 = *(uint64_t (**)(long long *, uint64_t))(v10 + 8);
    v18(v28, v9);
    return v18(&v21, v9);
  }
}

uint64_t sub_19F103114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + 24;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for SingleUseClosureEventObserver.State();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v3, v4);
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  swift_beginAccess();
  (*(void (**)(uint64_t, _OWORD *, uint64_t))(v5 + 40))(v3, v7, v4);
  return swift_endAccess();
}

uint64_t sub_19F103228(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    swift_retain();
  }
  return a1;
}

uint64_t sub_19F1032C0(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      uint64_t v6 = *((void *)a2 + 6);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    long long v7 = *a2;
    long long v8 = a2[1];
    long long v9 = a2[2];
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)a1 = v7;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_release();
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v5 = *((void *)a2 + 6);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19F1033AC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    return a1;
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_19F103448(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_19F103498(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

double sub_19F1034F8(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

uint64_t *sub_19F103528(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19F10356C(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_19F1035B8()
{
  return sub_19F102D2C() & 1;
}

uint64_t sub_19F1035E0(uint64_t a1)
{
  return sub_19F102E60(a1);
}

uint64_t sub_19F10360C@<X0>(uint64_t a1@<X8>)
{
  return sub_19F103114(v1, a1);
}

unint64_t sub_19F103628()
{
  unint64_t result = qword_1EB391D88;
  if (!qword_1EB391D88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB391D88);
  }
  return result;
}

uint64_t sub_19F10366C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void, uint64_t, uint64_t *))
{
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  uint64_t v10 = v12;
  swift_bridgeObjectRelease();
  if (v4) {
    swift_bridgeObjectRelease();
  }
  return v10;
}

unint64_t sub_19F1036FC()
{
  if (qword_1E94701E0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E9498B98;
  uint64_t v1 = qword_1E946D388;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_19F10366C(v2, v0, (uint64_t)sub_19F104BC4, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_19F1048A8);
  unint64_t v4 = sub_19EF4CAA0(v3);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t static ActionKindTable._table.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  if (qword_1E946D388 != -1) {
    swift_once();
  }
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_19F10366C(v3, v2, (uint64_t)sub_19F104BC4, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_19F1048A8);
  unint64_t v5 = sub_19EF4CAA0(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_19F1038BC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F1038D4(a1, a2, a3);
}

uint64_t sub_19F1038D4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = dynamic_cast_existential_2_conditional(a1);
  if (v8)
  {
    uint64_t v11 = v8;
    uint64_t v12 = v10;
    uint64_t v37 = v9;
    uint64_t v36 = a3;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v13 = sub_19F1DD89C();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v13);
    uint64_t v14 = v41[0];
    if (!sub_19F17ADA4(0xD000000000000023, 0x800000019F26A630, v41[0]))
    {
      *(void *)&long long v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474600);
      *(void *)&long long v43 = v3;
      *((void *)&v43 + 1) = &off_1EF142470;
      sub_19EEBDC00(&v43, v42);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = v41[0];
      sub_19EE7DA20(v42, 0xD000000000000023, 0x800000019F26A630, isUniquelyReferenced_nonNull_native);
      uint64_t v16 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41[0] = v16;
      uint64_t v14 = v16;
    }
    uint64_t v17 = a2[3];
    uint64_t v18 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v17);
    uint64_t v46 = v14;
    swift_bridgeObjectRetain();
    uint64_t v19 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(&v46);
    Decoder.withUserInfo(_:)(v19, v17, v18, v42);
    swift_bridgeObjectRelease();
    *(void *)&long long v44 = v11;
    *((void *)&v44 + 1) = v37;
    uint64_t v45 = v12;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v43);
    sub_19F1DC59C();
    if (v4)
    {
      swift_bridgeObjectRelease();
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)&v43);
    }
  }
  else
  {
    uint64_t v21 = dynamic_cast_existential_2_conditional(a1);
    if (!v21)
    {
      uint64_t v29 = sub_19F1DCDCC();
      swift_allocError();
      uint64_t v31 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
      *uint64_t v31 = a1;
      __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      sub_19F1DD86C();
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      *(void *)&long long v43 = 60;
      *((void *)&v43 + 1) = 0xE100000000000000;
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DCDAC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x1E4FBBA70], v29);
      return swift_willThrow();
    }
    uint64_t v24 = v21;
    uint64_t v38 = v22;
    uint64_t v39 = v23;
    uint64_t v36 = a3;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v25 = sub_19F1DD89C();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v25);
    uint64_t v26 = v46;
    sub_19F17A6D0(0xD00000000000001FLL, 0x800000019F272A10, v46, &v43);
    uint64_t v27 = *((void *)&v43 + 1);
    sub_19F0FEEF8(v43, *((uint64_t *)&v43 + 1));
    if ((~v27 & 0xF000000000000007) == 0)
    {
      *(void *)&long long v44 = &type metadata for AnyActionTypes;
      *(void *)&long long v43 = v3;
      *((void *)&v43 + 1) = 0x80000001EF142470;
      sub_19EEBDC00(&v43, v42);
      swift_bridgeObjectRetain();
      char v28 = swift_isUniquelyReferenced_nonNull_native();
      v41[0] = v26;
      sub_19EE7DA20(v42, 0xD00000000000001FLL, 0x800000019F272A10, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v46 = v26;
    }
    sub_19EEC4154((uint64_t)a2, (uint64_t)v41);
    JSONObject.init(from:)(v41, v42);
    if (v4) {
      return swift_bridgeObjectRelease();
    }
    v41[0] = v26;
    uint64_t v32 = *(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v39 + 8);
    *(void *)&long long v44 = v24;
    *((void *)&v44 + 1) = v38;
    uint64_t v45 = v39;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v43);
    swift_bridgeObjectRetain();
    v32(v42, v41, v24, v39);
  }
  long long v40 = v44;
  uint64_t v33 = v44;
  uint64_t v34 = __swift_project_boxed_opaque_existential_1(&v43, v44);
  *(_OWORD *)(v36 + 24) = v40;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v36);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(boxed_opaque_existential_2Tm, v34, v33);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
}

uint64_t static ActionKindTable._decode(_:from:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v10 = dynamic_cast_existential_2_conditional(a1);
  if (v10)
  {
    uint64_t v13 = v10;
    uint64_t v14 = v12;
    uint64_t v41 = v11;
    uint64_t v39 = a4;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v15 = sub_19F1DD89C();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v15);
    uint64_t v16 = v44[0];
    if (!sub_19F17ADA4(0xD000000000000023, 0x800000019F26A630, v44[0]))
    {
      *(void *)&long long v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474600);
      *(void *)&long long v46 = v4;
      *((void *)&v46 + 1) = a3;
      sub_19EEBDC00(&v46, v45);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v49 = v44[0];
      sub_19EE7DA20(v45, 0xD000000000000023, 0x800000019F26A630, isUniquelyReferenced_nonNull_native);
      uint64_t v18 = v49;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44[0] = v18;
      uint64_t v16 = v18;
    }
    uint64_t v19 = a2[3];
    uint64_t v20 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v19);
    uint64_t v49 = v16;
    swift_bridgeObjectRetain();
    uint64_t v21 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(&v49);
    Decoder.withUserInfo(_:)(v21, v19, v20, v45);
    swift_bridgeObjectRelease();
    *(void *)&long long v47 = v13;
    *((void *)&v47 + 1) = v41;
    uint64_t v48 = v14;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v46);
    sub_19F1DC59C();
    if (v5)
    {
      swift_bridgeObjectRelease();
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)&v46);
    }
  }
  else
  {
    uint64_t v23 = dynamic_cast_existential_2_conditional(a1);
    if (!v23)
    {
      uint64_t v32 = sub_19F1DCDCC();
      swift_allocError();
      uint64_t v34 = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
      *uint64_t v34 = a1;
      __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      sub_19F1DD86C();
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      *(void *)&long long v46 = 60;
      *((void *)&v46 + 1) = 0xE100000000000000;
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DCDAC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x1E4FBBA70], v32);
      return swift_willThrow();
    }
    uint64_t v26 = v23;
    uint64_t v27 = v25;
    uint64_t v40 = v24;
    uint64_t v42 = v4;
    uint64_t v39 = a4;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v28 = sub_19F1DD89C();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v28);
    uint64_t v29 = v49;
    sub_19F17A6D0(0xD00000000000001FLL, 0x800000019F272A10, v49, &v46);
    uint64_t v30 = *((void *)&v46 + 1);
    sub_19F0FEEF8(v46, *((uint64_t *)&v46 + 1));
    if ((~v30 & 0xF000000000000007) == 0)
    {
      *(void *)&long long v47 = &type metadata for AnyActionTypes;
      *(void *)&long long v46 = v42;
      *((void *)&v46 + 1) = a3 | 0x8000000000000000;
      sub_19EEBDC00(&v46, v45);
      swift_bridgeObjectRetain();
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      v44[0] = v29;
      sub_19EE7DA20(v45, 0xD00000000000001FLL, 0x800000019F272A10, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = v29;
    }
    sub_19EEC4154((uint64_t)a2, (uint64_t)v44);
    JSONObject.init(from:)(v44, v45);
    if (v5) {
      return swift_bridgeObjectRelease();
    }
    v44[0] = v29;
    int64_t v35 = *(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v27 + 8);
    *(void *)&long long v47 = v26;
    *((void *)&v47 + 1) = v40;
    uint64_t v48 = v27;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v46);
    swift_bridgeObjectRetain();
    v35(v45, v44, v26, v27);
  }
  long long v43 = v47;
  uint64_t v36 = v47;
  uint64_t v37 = __swift_project_boxed_opaque_existential_1(&v46, v47);
  *(_OWORD *)(v39 + 24) = v43;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v39);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(boxed_opaque_existential_2Tm, v37, v36);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v46);
}

uint64_t sub_19F1042F8()
{
  uint64_t result = sub_19F104318();
  qword_1E946D380 = result;
  return result;
}

uint64_t sub_19F104318()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D4C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24DBC0;
  strcpy((char *)(inited + 32), "closureAction");
  *(_WORD *)(inited + 46) = -4864;
  *(void *)(inited + 48) = &type metadata for ClosureAction;
  *(void *)(inited + 56) = &protocol witness table for ClosureAction;
  strcpy((char *)(inited + 64), "compoundAction");
  *(unsigned char *)(inited + 79) = -18;
  *(void *)(inited + 80) = &type metadata for CompoundAction;
  *(void *)(inited + 88) = &protocol witness table for CompoundAction;
  *(void *)(inited + 96) = 0x7463417974706D65;
  *(void *)(inited + 104) = 0xEB000000006E6F69;
  *(void *)(inited + 112) = &type metadata for EmptyAction;
  *(void *)(inited + 120) = &protocol witness table for EmptyAction;
  unint64_t v1 = sub_19EFB4D34(inited);
  uint64_t v2 = swift_initStackObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F24DBA0;
  *(void *)(v2 + 32) = 0x7463417472656C61;
  *(void *)(v2 + 40) = 0xEB000000006E6F69;
  *(void *)(v2 + 48) = &type metadata for Models.AlertAction;
  *(void *)(v2 + 56) = &protocol witness table for Models.AlertAction;
  *(void *)(v2 + 64) = 0xD000000000000011;
  *(void *)(v2 + 72) = 0x800000019F272B10;
  *(void *)(v2 + 80) = type metadata accessor for Models.ExternalURLAction();
  *(void *)(v2 + 88) = &protocol witness table for Models.ExternalURLAction;
  *(void *)(v2 + 96) = 0x6974634170747468;
  *(void *)(v2 + 104) = 0xEA00000000006E6FLL;
  *(void *)(v2 + 112) = type metadata accessor for Models.HTTPAction();
  *(void *)(v2 + 120) = &protocol witness table for Models.HTTPAction;
  *(void *)(v2 + 128) = 0xD000000000000012;
  *(void *)(v2 + 136) = 0x800000019F272B30;
  *(void *)(v2 + 144) = type metadata accessor for Models.HTTPTemplateAction();
  *(void *)(v2 + 152) = &protocol witness table for Models.HTTPTemplateAction;
  *(void *)(v2 + 160) = 0x7463417473616F74;
  *(void *)(v2 + 168) = 0xEB000000006E6F69;
  *(void *)(v2 + 176) = &type metadata for Models.ToastAction;
  *(void *)(v2 + 184) = &protocol witness table for Models.ToastAction;
  unint64_t v3 = sub_19EFB4D34(v2);
  return sub_19F10366C(v3, v1, (uint64_t)sub_19F104BC4, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_19F1045AC);
}

uint64_t _defaultActionKindLookup.getter()
{
  if (qword_1E946D388 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F1045AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_19EFC9B04(v7);
  if (!v9) {
    goto LABEL_24;
  }
  uint64_t v12 = v8;
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  uint64_t v15 = v11;
  uint64_t v16 = (void *)*a5;
  unint64_t v18 = sub_19EEBD400(v8, v9);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v22 = v17;
  if (v16[3] >= v21)
  {
    if (a4)
    {
      uint64_t v24 = (void *)*a5;
      if (v17) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v21 = sub_19EFBDAC4();
      uint64_t v24 = (void *)*a5;
      if (v22) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v24[(v18 >> 6) + 8] |= 1 << v18;
    uint64_t v26 = (uint64_t *)(v24[6] + 16 * v18);
    *uint64_t v26 = v12;
    v26[1] = v13;
    uint64_t v27 = (void *)(v24[7] + 16 * v18);
    *uint64_t v27 = v14;
    v27[1] = v15;
    uint64_t v28 = v24[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    void v24[2] = v30;
LABEL_13:
    uint64_t v31 = sub_19EFC9B04(v21);
    if (v32)
    {
      uint64_t v35 = v31;
      uint64_t v36 = v32;
      uint64_t v37 = v33;
      uint64_t v38 = v34;
      do
      {
        long long v44 = (void *)*a5;
        unint64_t v46 = sub_19EEBD400(v35, v36);
        uint64_t v47 = v44[2];
        BOOL v48 = (v45 & 1) == 0;
        int64_t v39 = v47 + v48;
        if (__OFADD__(v47, v48)) {
          goto LABEL_25;
        }
        char v49 = v45;
        if (v44[3] < v39)
        {
          sub_19EFB8240();
          int64_t v39 = sub_19EEBD400(v35, v36);
          if ((v49 & 1) != (v50 & 1)) {
            goto LABEL_27;
          }
          unint64_t v46 = v39;
        }
        char v51 = (void *)*a5;
        if (v49)
        {
          int64_t v39 = swift_bridgeObjectRelease();
          uint64_t v40 = (void *)(v51[7] + 16 * v46);
          void *v40 = v37;
          v40[1] = v38;
        }
        else
        {
          v51[(v46 >> 6) + 8] |= 1 << v46;
          uint64_t v52 = (uint64_t *)(v51[6] + 16 * v46);
          *uint64_t v52 = v35;
          v52[1] = v36;
          uint64_t v53 = (void *)(v51[7] + 16 * v46);
          *uint64_t v53 = v37;
          v53[1] = v38;
          uint64_t v54 = v51[2];
          BOOL v29 = __OFADD__(v54, 1);
          uint64_t v55 = v54 + 1;
          if (v29) {
            goto LABEL_26;
          }
          v51[2] = v55;
        }
        uint64_t v35 = sub_19EFC9B04(v39);
        uint64_t v36 = v41;
        uint64_t v37 = v42;
        uint64_t v38 = v43;
      }
      while (v41);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    return swift_release();
  }
  sub_19EFB8240();
  uint64_t v21 = sub_19EEBD400(v12, v13);
  if ((v22 & 1) == (v23 & 1))
  {
    unint64_t v18 = v21;
    uint64_t v24 = (void *)*a5;
    if ((v22 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v21 = swift_bridgeObjectRelease();
    uint64_t v25 = (void *)(v24[7] + 16 * v18);
    *uint64_t v25 = v14;
    v25[1] = v15;
    goto LABEL_13;
  }
LABEL_27:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F1048A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_19EFC9B04(v7);
  if (!v9) {
    goto LABEL_23;
  }
  uint64_t v12 = v8;
  uint64_t v13 = v9;
  uint64_t v14 = v11;
  uint64_t v55 = v10;
  uint64_t v15 = (void *)*a5;
  unint64_t v17 = sub_19EE77E90(v8, v9);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v21 = v16;
  if (v15[3] >= v20)
  {
    if (a4)
    {
      char v23 = (void *)*a5;
      if (v16) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v20 = sub_19EFBDAC4();
      char v23 = (void *)*a5;
      if (v21) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v24 = (uint64_t *)(v23[6] + 16 * v17);
    *uint64_t v24 = v12;
    v24[1] = v13;
    uint64_t v25 = (void *)(v23[7] + 16 * v17);
    *uint64_t v25 = v55;
    v25[1] = v14;
    uint64_t v26 = v23[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v23[2] = v28;
LABEL_13:
    uint64_t v29 = sub_19EFC9B04(v20);
    if (v30)
    {
      uint64_t v33 = v29;
      uint64_t v34 = v30;
      uint64_t v35 = v31;
      uint64_t v36 = v32;
      do
      {
        uint64_t v42 = (void *)*a5;
        unint64_t v38 = sub_19EE77E90(v33, v34);
        uint64_t v44 = v42[2];
        BOOL v45 = (v43 & 1) == 0;
        BOOL v27 = __OFADD__(v44, v45);
        uint64_t v46 = v44 + v45;
        if (v27) {
          goto LABEL_24;
        }
        char v47 = v43;
        if (v42[3] < v46)
        {
          sub_19EFB8240(v46, 1);
          unint64_t v38 = sub_19EE77E90(v33, v34);
          if ((v47 & 1) != (v48 & 1)) {
            goto LABEL_26;
          }
        }
        char v49 = (void *)*a5;
        if (v47)
        {
          uint64_t v37 = 16 * v38;
          long long v57 = *(_OWORD *)(v49[7] + 16 * v38);
          unint64_t v38 = swift_bridgeObjectRelease();
          *(_OWORD *)(v49[7] + v37) = v57;
        }
        else
        {
          v49[(v38 >> 6) + 8] |= 1 << v38;
          char v50 = (uint64_t *)(v49[6] + 16 * v38);
          *char v50 = v33;
          v50[1] = v34;
          char v51 = (void *)(v49[7] + 16 * v38);
          *char v51 = v35;
          v51[1] = v36;
          uint64_t v52 = v49[2];
          BOOL v27 = __OFADD__(v52, 1);
          uint64_t v53 = v52 + 1;
          if (v27) {
            goto LABEL_25;
          }
          v49[2] = v53;
        }
        uint64_t v33 = sub_19EFC9B04(v38);
        uint64_t v34 = v39;
        uint64_t v35 = v40;
        uint64_t v36 = v41;
      }
      while (v39);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    return swift_release();
  }
  ((void (*)(void))sub_19EFB8240)();
  uint64_t v20 = sub_19EE77E90(v12, v13);
  if ((v21 & 1) == (v22 & 1))
  {
    unint64_t v17 = v20;
    char v23 = (void *)*a5;
    if ((v21 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    long long v56 = *(_OWORD *)(v23[7] + 16 * v17);
    uint64_t v20 = swift_bridgeObjectRelease();
    *(_OWORD *)(v23[7] + 16 * v17) = v56;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F104BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of static ActionKindTable.table.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for AppleServicesNoOpEncoder()
{
  return &type metadata for AppleServicesNoOpEncoder;
}

_UNKNOWN **sub_19F104C0C()
{
  return &protocol witness table for URLRequestEncoder.PropertyScope;
}

uint64_t sub_19F104C18(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAA0);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_19F104CEC;
  return URLRequestEncoder.encodeRequest(fromContentsOf:)(v3, a1);
}

uint64_t sub_19F104CEC()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F104F64;
  }
  else {
    uint64_t v2 = sub_19F104E00;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_19F104E00()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_19F1DACDC();
  uint64_t v3 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = 0;
  if (v4 != 1)
  {
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v5 = (void *)sub_19F1DAC5C();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  }
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE60]), sel_initWithRequest_, v5);

  if (v7)
  {
    swift_task_dealloc();
    uint64_t v8 = *(void (**)(id))(v0 + 8);
    v8(v7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_19F104F64()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F104FC8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *int v4 = v2;
  v4[1] = sub_19EE1C0A4;
  return sub_19F104C18(a2);
}

uint64_t sub_19F105060()
{
  return sub_19F105084(0x40000001EF14AAA8);
}

uint64_t sub_19F105084(uint64_t a1)
{
  sub_19EEBF040(v1, (uint64_t)v10);
  uint64_t v3 = v11;
  if (!v11)
  {
    sub_19EEBF108((uint64_t)v10);
LABEL_5:
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v7 = xmmword_19F25E7B0;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    *(void *)(v7 + 16) = a1;
    *(void *)(v7 + 24) = v8;
    swift_willThrow();
    return v1;
  }
  uint64_t v4 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  uint64_t v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v6 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if (!v6) {
    goto LABEL_5;
  }
  return v1;
}

uint64_t Models.FlowBackAction.Dismissal.rawValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t static Models.FlowBackAction.Dismissal.stackPop.getter()
{
  return 0x706F506B63617473;
}

uint64_t static Models.FlowBackAction.Dismissal.stackPopToRoot.getter()
{
  return 0x706F506B63617473;
}

uint64_t static Models.FlowBackAction.Dismissal.sheetDismiss.getter()
{
  return 0x7369447465656873;
}

uint64_t sub_19F105204()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F105264()
{
  return sub_19F1DC0EC();
}

__n128 Models.FlowBackAction.init(actionMetrics:dismissal:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result = *a1;
  *a4 = *a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  return result;
}

uint64_t Models.FlowBackAction.actionMetrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Models.FlowBackAction.actionMetrics.setter(__n128 *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *a1;
  *uint64_t v1 = *a1;
  return result;
}

uint64_t (*Models.FlowBackAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t Models.FlowBackAction.dismissal.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.FlowBackAction.dismissal.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Models.FlowBackAction.dismissal.modify())()
{
  return nullsub_1;
}

uint64_t sub_19F1053E8()
{
  if (*v0) {
    return 0x617373696D736964;
  }
  else {
    return 0x654D6E6F69746361;
  }
}

uint64_t sub_19F105434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F105EE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F10545C(uint64_t a1)
{
  unint64_t v2 = sub_19F105674();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F105498(uint64_t a1)
{
  unint64_t v2 = sub_19F105674();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Models.FlowBackAction.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474D20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v12 = *((void *)v3 + 3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F105674();
  sub_19F1DD8FC();
  long long v13 = *v3;
  char v14 = 0;
  sub_19F046118();
  sub_19F1DD2AC();
  if (!v2)
  {
    *(void *)&long long v13 = v9;
    *((void *)&v13 + 1) = v12;
    char v14 = 1;
    sub_19F1056C8();
    sub_19F1DD2AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_19F105674()
{
  unint64_t result = qword_1E9474D28;
  if (!qword_1E9474D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474D28);
  }
  return result;
}

unint64_t sub_19F1056C8()
{
  unint64_t result = qword_1E9474D30;
  if (!qword_1E9474D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474D30);
  }
  return result;
}

uint64_t Models.FlowBackAction.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474D38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F105674();
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v16 = 0;
  sub_19F046530();
  sub_19F1DD1BC();
  uint64_t v9 = v14;
  uint64_t v10 = v15;
  char v16 = 1;
  sub_19F105948();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19F1DD1BC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v14;
  uint64_t v12 = v15;
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_19F105948()
{
  unint64_t result = qword_1E9474D40;
  if (!qword_1E9474D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474D40);
  }
  return result;
}

uint64_t sub_19F10599C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Models.FlowBackAction.init(from:)(a1, a2);
}

uint64_t sub_19F1059B4(void *a1)
{
  return Models.FlowBackAction.encode(to:)(a1);
}

uint64_t Models.FlowBackAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v13);
  uint64_t v15 = v6;
  ActionMetrics.init(deserializing:using:)((uint64_t)v13, &v15, v14);
  if (v3) {
    return sub_19EEC3418(a1);
  }
  uint64_t v8 = v14[0];
  uint64_t v9 = v14[1];
  JSONObject.subscript.getter(0x617373696D736964, 0xE90000000000006CLL, (uint64_t)v13);
  uint64_t v10 = sub_19F105084(0x40000001EF14A080);
  uint64_t v12 = v11;
  sub_19EEC3418(a1);
  uint64_t result = sub_19EEC3418((uint64_t)v13);
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v12;
  return result;
}

unint64_t sub_19F105B04()
{
  unint64_t result = qword_1E9474D48;
  if (!qword_1E9474D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474D48);
  }
  return result;
}

uint64_t _s14FlowBackActionVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s14FlowBackActionVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14FlowBackActionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14FlowBackActionVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Models.FlowBackAction()
{
  return &type metadata for Models.FlowBackAction;
}

ValueMetadata *type metadata accessor for Models.FlowBackAction.Dismissal()
{
  return &type metadata for Models.FlowBackAction.Dismissal;
}

unsigned char *_s14FlowBackActionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F105DA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14FlowBackActionV10CodingKeysOMa()
{
  return &_s14FlowBackActionV10CodingKeysON;
}

unint64_t sub_19F105DE4()
{
  unint64_t result = qword_1E9474D50;
  if (!qword_1E9474D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474D50);
  }
  return result;
}

unint64_t sub_19F105E3C()
{
  unint64_t result = qword_1E9474D58;
  if (!qword_1E9474D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474D58);
  }
  return result;
}

unint64_t sub_19F105E94()
{
  unint64_t result = qword_1E9474D60;
  if (!qword_1E9474D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474D60);
  }
  return result;
}

uint64_t sub_19F105EE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617373696D736964 && a2 == 0xE90000000000006CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_19F10600C()
{
  unint64_t result = qword_1E9474D68[0];
  if (!qword_1E9474D68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9474D68);
  }
  return result;
}

uint64_t sub_19F106060@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  swift_unknownObjectWeakInit();
  sub_19EEBB420(a1, a3);
  swift_unknownObjectWeakAssign();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(a3 + 48) = a2;
  return result;
}

uint64_t sub_19F1060D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x1F4188790](a1);
  uint64_t result = MEMORY[0x19F3C95C0](v2 + 40, v7);
  if (result)
  {
    uint64_t v9 = result;
    sub_19EEC4154(v2, (uint64_t)v17);
    uint64_t v10 = v18;
    uint64_t v11 = v19;
    char v16 = __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v12 = *(void *)(v2 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v14 = (char *)swift_allocObject();
    *((void *)v14 + 2) = v4;
    *((void *)v14 + 3) = v9;
    *((void *)v14 + 4) = v12;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    uint64_t v15 = *(void (**)(id (*)(), char *, uint64_t, uint64_t))(v11 + 8);
    swift_unknownObjectRetain();
    v15(sub_19F106664, v14, v10, v11);
    swift_release();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
  return result;
}

id sub_19F10627C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DD42C();
  objc_msgSend((id)swift_unknownObjectRetain(), sel_performSelector_withObject_, a2, v4);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t EventEmitter.addObserver(on:target:selector:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_19EEC4154(a1, (uint64_t)v12);
  swift_getAssociatedTypeWitness();
  swift_unknownObjectRetain();
  sub_19F106060(v12, a3, (uint64_t)v13);
  uint64_t v8 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24);
  uint64_t v9 = type metadata accessor for NSObjectEventObserver();
  uint64_t WitnessTable = swift_getWitnessTable();
  v8(v13, v9, WitnessTable, a4, a5);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v9 - 8) + 8))(v13, v9);
}

uint64_t type metadata accessor for NSObjectEventObserver()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F106420(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_19F106458(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  swift_unknownObjectWeakCopyInit();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t *sub_19F1064C8(uint64_t *a1, uint64_t *a2)
{
  a1[6] = a2[6];
  return a1;
}

uint64_t sub_19F106508(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t sub_19F106554(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectWeakTakeAssign();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t sub_19F1065A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

id sub_19F106664()
{
  return sub_19F10627C(*(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_19F1066A8()
{
  if (objc_msgSend(v0, sel_isString)) {
    return 0;
  }
  if (objc_msgSend(v0, sel_isNumber)) {
    return 1;
  }
  if (objc_msgSend(v0, sel_isArray)) {
    return 3;
  }
  if (objc_msgSend(v0, sel_isBoolean)) {
    return 4;
  }
  if (objc_msgSend(v0, sel_isNull)) {
    return 5;
  }
  if (JSValue.isJSONObject.getter()) {
    return 2;
  }
  return 6;
}

uint64_t static JSValue.deserializedJSON(_:in:)(uint64_t a1, uint64_t a2, void *a3)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_19F1DCCDC();
    uint64_t v9 = *(OpaqueJSString **)string;
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    if ((v5 & 0x2000000000000000) != 0)
    {
      *(void *)string = v4;
      uint64_t v13 = v5 & 0xFFFFFFFFFFFFFFLL;
      uint64_t result = (uint64_t)JSStringCreateWithUTF8CString(string);
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    else
    {
      if ((v4 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (v5 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v6 = sub_19F1DCE2C();
      }
      uint64_t result = sub_19F1069C8(v6, v7, (uint64_t (*)(void))sub_19F106A4C);
    }
    uint64_t v9 = (OpaqueJSString *)result;
  }
  JSValueRef v10 = JSValueMakeFromJSONString((JSContextRef)objc_msgSend(a3, sel_JSGlobalContextRef), v9);
  if (v10) {
    id v11 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, v10, a3);
  }
  else {
    id v11 = 0;
  }
  JSStringRelease(v9);
  return (uint64_t)v11;
}

Swift::String_optional __swiftcall JSValue.serializedJSON(indent:)(Swift::UInt32 indent)
{
  uint64_t v3 = (__CFString *)objc_msgSend(v1, sel_context);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = v3;
  uint64_t v6 = (const OpaqueJSContext *)[(__CFString *)v3 JSGlobalContextRef];

  JSONString = JSValueCreateJSONString(v6, (JSValueRef)objc_msgSend(v1, sel_JSValueRef), indent, 0);
  if (!JSONString)
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    goto LABEL_6;
  }
  uint64_t v8 = JSONString;
  uint64_t v3 = (__CFString *)JSStringCopyCFString((CFAllocatorRef)*MEMORY[0x1E4F1CF80], JSONString);
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = v3;
  uint64_t v10 = sub_19F1DBD7C();
  uint64_t v12 = v11;

  JSStringRelease(v8);
LABEL_6:
  uint64_t v3 = (__CFString *)v10;
  uint64_t v4 = v12;
LABEL_9:
  result.value._object = v4;
  result.value._uint64_t countAndFlagsBits = (uint64_t)v3;
  return result;
}

uint64_t sub_19F1069C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (!v3) {
    return v5;
  }
  return result;
}

void *sub_19F106A08@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, void *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_19F106A4C@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_19F106A90()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_19F106AC8()
{
  unint64_t result = qword_1E9474DF0;
  if (!qword_1E9474DF0)
  {
    sub_19F1DB78C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474DF0);
  }
  return result;
}

uint64_t sub_19F106B20(uint64_t a1, NSObject *a2, uint64_t a3)
{
  unint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v4 = sub_19F1DB9FC();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_19F1DC83C();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_19F1DBA3C();
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DC86C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEA5F34();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCC68], v10);
  sub_19F1DBA1C();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t aBlock = MEMORY[0x1E4FBC860];
  sub_19EE6A33C((unint64_t *)&qword_1EB393078, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393060);
  sub_19EEA5E54((unint64_t *)&qword_1EB393068, &qword_1EB393060);
  sub_19F1DCC1C();
  uint64_t v37 = v9;
  uint64_t v15 = (void *)sub_19F1DC8AC();
  dispatch_group_t v16 = dispatch_group_create();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v14;
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a1;
  void v19[3] = v16;
  v19[4] = v17;
  v19[5] = v18;
  v19[6] = v15;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_19F10A5E8;
  *(void *)(v20 + 24) = v19;
  char v50 = sub_19EEB3CC0;
  char v51 = (void *)v20;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v47 = 1107296256;
  char v48 = sub_19EEB20C0;
  char v49 = &block_descriptor_92;
  char v21 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  char v22 = v16;
  swift_retain();
  swift_retain();
  char v23 = v15;
  swift_retain();
  swift_release();
  dispatch_sync(v23, v21);
  _Block_release(v21);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v21)
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391BD8);
    uint64_t v25 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v26 = swift_allocObject();
    *(_DWORD *)(v26 + 16) = 0;
    *(void *)(v25 + 16) = v26;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    *(void *)(v25 + 24) = MEMORY[0x1E4FBC860];
    *(unsigned char *)(v25 + 32) = 0;
    uint64_t v28 = (void *)swift_allocObject();
    uint64_t v29 = v38;
    v28[2] = v25;
    v28[3] = v29;
    unint64_t v38 = v23;
    long long v28[4] = v39;
    v28[5] = v17;
    v28[6] = v18;
    char v50 = sub_19F10A614;
    char v51 = v28;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v47 = 1107296256;
    char v48 = sub_19EEA4A68;
    char v49 = &block_descriptor_98;
    uint64_t v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v39 = v17;
    uint64_t v31 = v22;
    uint64_t v32 = v37;
    sub_19F1DBA1C();
    uint64_t v45 = v27;
    sub_19EE6A33C(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
    sub_19EEA5E54((unint64_t *)&qword_1EB393050, &qword_1EB393048);
    uint64_t v33 = v40;
    uint64_t v34 = v44;
    sub_19F1DCC1C();
    uint64_t v35 = v38;
    sub_19F1DC81C();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v34);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v25;
  }
  return result;
}

uint64_t sub_19F1071A4(uint64_t a1, NSObject *a2, uint64_t a3)
{
  unint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v4 = sub_19F1DB9FC();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_19F1DC83C();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_19F1DBA3C();
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DC86C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEA5F34();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCC68], v10);
  sub_19F1DBA1C();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t aBlock = MEMORY[0x1E4FBC860];
  sub_19EE6A33C((unint64_t *)&qword_1EB393078, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393060);
  sub_19EEA5E54((unint64_t *)&qword_1EB393068, &qword_1EB393060);
  sub_19F1DCC1C();
  uint64_t v37 = v9;
  uint64_t v15 = (void *)sub_19F1DC8AC();
  dispatch_group_t v16 = dispatch_group_create();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v14;
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a1;
  void v19[3] = v16;
  v19[4] = v17;
  v19[5] = v18;
  v19[6] = v15;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_19F10A354;
  *(void *)(v20 + 24) = v19;
  char v50 = sub_19EEB3CC0;
  char v51 = (void *)v20;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v47 = 1107296256;
  char v48 = sub_19EEB20C0;
  char v49 = &block_descriptor_27_1;
  char v21 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  char v22 = v16;
  swift_retain();
  swift_retain();
  char v23 = v15;
  swift_retain();
  swift_release();
  dispatch_sync(v23, v21);
  _Block_release(v21);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v21)
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D630);
    uint64_t v25 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v26 = swift_allocObject();
    *(_DWORD *)(v26 + 16) = 0;
    *(void *)(v25 + 16) = v26;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    *(void *)(v25 + 24) = MEMORY[0x1E4FBC860];
    *(unsigned char *)(v25 + 32) = 0;
    uint64_t v28 = (void *)swift_allocObject();
    uint64_t v29 = v38;
    v28[2] = v25;
    v28[3] = v29;
    unint64_t v38 = v23;
    long long v28[4] = v39;
    v28[5] = v17;
    v28[6] = v18;
    char v50 = sub_19F10A380;
    char v51 = v28;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v47 = 1107296256;
    char v48 = sub_19EEA4A68;
    char v49 = &block_descriptor_33_0;
    uint64_t v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v39 = v17;
    uint64_t v31 = v22;
    uint64_t v32 = v37;
    sub_19F1DBA1C();
    uint64_t v45 = v27;
    sub_19EE6A33C(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
    sub_19EEA5E54((unint64_t *)&qword_1EB393050, &qword_1EB393048);
    uint64_t v33 = v40;
    uint64_t v34 = v44;
    sub_19F1DCC1C();
    uint64_t v35 = v38;
    sub_19F1DC81C();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v34);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v25;
  }
  return result;
}

uint64_t sub_19F107828(uint64_t a1, NSObject *a2, uint64_t a3)
{
  unint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v4 = sub_19F1DB9FC();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_19F1DC83C();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_19F1DBA3C();
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DC86C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEA5F34();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCC68], v10);
  sub_19F1DBA1C();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t aBlock = MEMORY[0x1E4FBC860];
  sub_19EE6A33C((unint64_t *)&qword_1EB393078, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393060);
  sub_19EEA5E54((unint64_t *)&qword_1EB393068, &qword_1EB393060);
  sub_19F1DCC1C();
  uint64_t v37 = v9;
  uint64_t v15 = (void *)sub_19F1DC8AC();
  dispatch_group_t v16 = dispatch_group_create();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v14;
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a1;
  void v19[3] = v16;
  v19[4] = v17;
  v19[5] = v18;
  v19[6] = v15;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_19F10A3AC;
  *(void *)(v20 + 24) = v19;
  char v50 = sub_19EEB3CC0;
  char v51 = (void *)v20;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v47 = 1107296256;
  char v48 = sub_19EEB20C0;
  char v49 = &block_descriptor_53;
  char v21 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  char v22 = v16;
  swift_retain();
  swift_retain();
  char v23 = v15;
  swift_retain();
  swift_release();
  dispatch_sync(v23, v21);
  _Block_release(v21);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v21)
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1E9474DF8);
    uint64_t v25 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v26 = swift_allocObject();
    *(_DWORD *)(v26 + 16) = 0;
    *(void *)(v25 + 16) = v26;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    *(void *)(v25 + 24) = MEMORY[0x1E4FBC860];
    *(void *)(v25 + 32) = 0;
    *(void *)(v25 + 40) = 0;
    *(unsigned char *)(v25 + 48) = 0;
    uint64_t v28 = (void *)swift_allocObject();
    uint64_t v29 = v38;
    v28[2] = v25;
    v28[3] = v29;
    unint64_t v38 = v23;
    long long v28[4] = v39;
    v28[5] = v17;
    v28[6] = v18;
    char v50 = sub_19F10A3D8;
    char v51 = v28;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v47 = 1107296256;
    char v48 = sub_19EEA4A68;
    char v49 = &block_descriptor_59;
    uint64_t v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v39 = v17;
    uint64_t v31 = v22;
    uint64_t v32 = v37;
    sub_19F1DBA1C();
    uint64_t v45 = v27;
    sub_19EE6A33C(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
    sub_19EEA5E54((unint64_t *)&qword_1EB393050, &qword_1EB393048);
    uint64_t v33 = v40;
    uint64_t v34 = v44;
    sub_19F1DCC1C();
    uint64_t v35 = v38;
    sub_19F1DC81C();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v34);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v25;
  }
  return result;
}

uint64_t sub_19F107EB0(uint64_t a1)
{
  uint64_t v2 = sub_19EED9B48(a1);
  if (v4)
  {
LABEL_8:
    __break(1u);
    JUMPOUT(0x19F107F30);
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_19F10A590(v2, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_19F107F40(unint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_19F1DD03C();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      if (v7 < 1)
      {
        __break(1u);
        JUMPOUT(0x19F1085E8);
      }
      uint64_t v8 = 0;
      uint64_t v50 = a4;
      char v51 = a5;
      uint64_t v55 = v7;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = MEMORY[0x19F3C7060](v8, a1);
        }
        else
        {
          uint64_t v11 = *(void *)(a1 + 8 * v8 + 32);
          swift_retain();
        }
        uint64_t v59 = v8 + 1;
        dispatch_group_enter(a2);
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = a3;
        *(void *)(v12 + 24) = a2;
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = a4;
        *(void *)(v13 + 24) = a2;
        v70[3] = sub_19EEA5F34();
        v70[4] = &protocol witness table for OS_dispatch_queue;
        v70[0] = a5;
        v68[0] = sub_19F10A630;
        v68[1] = v12;
        v68[2] = sub_19F0844A8;
        v68[3] = v13;
        sub_19EEC4154((uint64_t)v70, (uint64_t)v69);
        v69[40] = 0;
        uint64_t v14 = (os_unfair_lock_s *)(*(void *)(v11 + 16) + 16);
        uint64_t v15 = a2;
        id v16 = a5;
        uint64_t v17 = v15;
        id v18 = v16;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v14);
        swift_beginAccess();
        uint64_t v19 = *(void **)(v11 + 24);
        switch(*(unsigned char *)(v11 + 32))
        {
          case 1:
            os_unfair_lock_unlock(v14);
            sub_19EEC3ED8((uint64_t)v68, (uint64_t)v63, &qword_1EB390E20);
            uint64_t v25 = v63[0];
            if (v67)
            {
              **(void **)(*(void *)(v63[0] + 64) + 40) = v19;
              swift_continuation_throwingResume();
            }
            else
            {
              uint64_t v40 = v63[1];
              swift_release();
              sub_19EEBB420(v66, (uint64_t)v60);
              id v54 = v18;
              uint64_t v42 = v61;
              uint64_t v41 = v62;
              __swift_project_boxed_opaque_existential_1(v60, v61);
              uint64_t v43 = (void *)swift_allocObject();
              v43[2] = v25;
              v43[3] = v40;
              void v43[4] = v19;
              uint64_t v44 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v41 + 8);
              swift_retain();
              uint64_t v45 = v42;
              uint64_t v46 = v41;
              a5 = v51;
              id v18 = v54;
              v44(sub_19EECAE64, v43, v45, v46);
              a4 = v50;
              swift_release();
              swift_release();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
            }
            goto LABEL_6;
          case 2:
            uint64_t v26 = v19;
            os_unfair_lock_unlock(v14);
            sub_19EEC3ED8((uint64_t)v68, (uint64_t)v63, &qword_1EB390E20);
            if (v67) {
              goto LABEL_5;
            }
            swift_release();
            id v52 = v18;
            uint64_t v28 = v64;
            uint64_t v27 = v65;
            sub_19EEBB420(v66, (uint64_t)v60);
            uint64_t v29 = v61;
            uint64_t v30 = v62;
            __swift_project_boxed_opaque_existential_1(v60, v61);
            uint64_t v31 = (void *)swift_allocObject();
            _OWORD v31[2] = v28;
            v31[3] = v27;
            v31[4] = v19;
            char v48 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v30 + 8);
            sub_19F08415C(v19, 2);
            swift_retain();
            uint64_t v32 = v30;
            a5 = v51;
            v48(sub_19F0844A4, v31, v29, v32);
            a4 = v50;
            swift_release();
            id v18 = v52;
            swift_release();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
            sub_19EE7F054(v19, 2);
            goto LABEL_6;
          case 3:
            uint64_t v33 = v19;
            os_unfair_lock_unlock(v14);
            sub_19EEC3ED8((uint64_t)v68, (uint64_t)v63, &qword_1EB390E20);
            if (v67)
            {
LABEL_5:
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
              swift_allocError();
              *uint64_t v9 = v19;
              swift_continuation_throwingResumeWithError();
            }
            else
            {
              swift_release();
              id v53 = v18;
              uint64_t v35 = v64;
              uint64_t v34 = v65;
              sub_19EEBB420(v66, (uint64_t)v60);
              uint64_t v36 = v61;
              uint64_t v37 = v62;
              __swift_project_boxed_opaque_existential_1(v60, v61);
              unint64_t v38 = (void *)swift_allocObject();
              v38[2] = v35;
              v38[3] = v34;
              void v38[4] = v19;
              char v49 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v37 + 8);
              sub_19F08415C(v19, 3);
              swift_retain();
              uint64_t v39 = v37;
              a5 = v51;
              v49(sub_19F0844A4, v38, v36, v39);
              a4 = v50;
              swift_release();
              id v18 = v53;
              swift_release();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
              sub_19EE7F054(v19, 3);
            }
LABEL_6:
            uint64_t v10 = v55;
            uint64_t v8 = v59;
            break;
          default:
            id v20 = v18;
            sub_19EEC3ED8((uint64_t)v68, (uint64_t)v63, &qword_1EB390E20);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v19 = sub_19F09D680(0, v19[2] + 1, 1, v19);
            }
            unint64_t v22 = v19[2];
            unint64_t v21 = v19[3];
            if (v22 >= v21 >> 1) {
              uint64_t v19 = sub_19F09D680((void *)(v21 > 1), v22 + 1, 1, v19);
            }
            void v19[2] = v22 + 1;
            sub_19EEBDC4C((uint64_t)v63, (uint64_t)&v19[10 * v22 + 4], &qword_1EB390E20);
            char v23 = *(void **)(v11 + 24);
            *(void *)(v11 + 24) = v19;
            char v24 = *(unsigned char *)(v11 + 32);
            *(unsigned char *)(v11 + 32) = 0;
            sub_19EE7F054(v23, v24);
            os_unfair_lock_unlock(v14);
            uint64_t v10 = v55;
            uint64_t v8 = v59;
            id v18 = v20;
            break;
        }
        sub_19EEBD664((uint64_t)v68, &qword_1EB390E20);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);

        swift_release();
        swift_release();
        swift_release();
      }
      while (v10 != v8);
      return swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F1085F8(unint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v8 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_19F1DD03C();
    uint64_t v9 = result;
    if (result)
    {
LABEL_3:
      if (v9 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v11 = 0;
        unint64_t v18 = v8 & 0xC000000000000001;
        unint64_t v19 = v8;
        do
        {
          if (v18) {
            MEMORY[0x19F3C7060](v11, v8);
          }
          else {
            swift_retain();
          }
          ++v11;
          dispatch_group_enter(a2);
          uint64_t v12 = swift_allocObject();
          *(void *)(v12 + 16) = a3;
          *(void *)(v12 + 24) = a2;
          uint64_t v13 = swift_allocObject();
          *(void *)(v13 + 16) = a4;
          *(void *)(v13 + 24) = a2;
          v23[3] = sub_19EEA5F34();
          v23[4] = &protocol witness table for OS_dispatch_queue;
          v23[0] = a5;
          v21[0] = sub_19F10A39C;
          v21[1] = v12;
          void v21[2] = sub_19F083004;
          v21[3] = v13;
          sub_19EEC4154((uint64_t)v23, (uint64_t)v22);
          v22[40] = 0;
          uint64_t v14 = a2;
          id v15 = a5;
          id v16 = v14;
          id v17 = v15;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_19EF5354C((uint64_t)v21);
          sub_19EEBD664((uint64_t)v21, (uint64_t *)&unk_1E946D600);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);

          swift_release();
          swift_release();
          swift_release();
          unint64_t v8 = v19;
        }
        while (v9 != v11);
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_3;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F10883C(unint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_19F1DD03C();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      if (v6 < 1)
      {
        __break(1u);
        JUMPOUT(0x19F108EFCLL);
      }
      uint64_t v7 = 0;
      char v48 = a5;
      uint64_t v52 = v6;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = MEMORY[0x19F3C7060](v7, a1);
        }
        else
        {
          uint64_t v10 = *(void *)(a1 + 8 * v7 + 32);
          swift_retain();
        }
        ++v7;
        dispatch_group_enter(a2);
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 16) = a3;
        *(void *)(v11 + 24) = a2;
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = a4;
        *(void *)(v12 + 24) = a2;
        v67[3] = sub_19EEA5F34();
        v67[4] = &protocol witness table for OS_dispatch_queue;
        v67[0] = a5;
        v65[0] = sub_19F10A49C;
        v65[1] = v11;
        v65[2] = sub_19F0844A8;
        v65[3] = v12;
        sub_19EEC4154((uint64_t)v67, (uint64_t)v66);
        v66[40] = 0;
        uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v10 + 16) + 16);
        uint64_t v14 = a2;
        id v15 = a5;
        id v16 = v14;
        id v17 = v15;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v13);
        swift_beginAccess();
        unint64_t v18 = *(void **)(v10 + 24);
        switch(*(unsigned char *)(v10 + 32))
        {
          case 1:
            char v24 = v18;
            os_unfair_lock_unlock(v13);
            sub_19EEC3ED8((uint64_t)v65, (uint64_t)v60, (uint64_t *)&unk_1E94737F0);
            uint64_t v25 = v60[0];
            if (v64)
            {
              **(void **)(*(void *)(v60[0] + 64) + 40) = v24;
              swift_continuation_throwingResume();
            }
            else
            {
              uint64_t v38 = v60[1];
              swift_release();
              sub_19EEBB420(v63, (uint64_t)v57);
              uint64_t v39 = v59;
              uint64_t v47 = v58;
              __swift_project_boxed_opaque_existential_1(v57, v58);
              id v51 = v17;
              uint64_t v40 = (void *)swift_allocObject();
              v40[2] = v25;
              v40[3] = v38;
              v40[4] = v24;
              uint64_t v44 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v39 + 8);
              sub_19F10A4AC(v18, 1);
              swift_retain();
              v44(sub_19EECAE24, v40, v47, v39);
              id v17 = v51;
              swift_release();
              a5 = v48;
              swift_release();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
              sub_19F10A4FC(v18, 1);
            }
            goto LABEL_6;
          case 2:
            uint64_t v26 = v18;
            os_unfair_lock_unlock(v13);
            sub_19EEC3ED8((uint64_t)v65, (uint64_t)v60, (uint64_t *)&unk_1E94737F0);
            if (v64) {
              goto LABEL_5;
            }
            swift_release();
            id v49 = v17;
            uint64_t v28 = v61;
            uint64_t v27 = v62;
            sub_19EEBB420(v63, (uint64_t)v57);
            uint64_t v30 = v58;
            uint64_t v29 = v59;
            uint64_t v42 = v59;
            __swift_project_boxed_opaque_existential_1(v57, v58);
            uint64_t v31 = (void *)swift_allocObject();
            _OWORD v31[2] = v28;
            v31[3] = v27;
            v31[4] = v18;
            uint64_t v45 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v29 + 8);
            sub_19F10A4AC(v18, 2);
            swift_retain();
            v45(sub_19F0844A4, v31, v30, v42);
            a5 = v48;
            swift_release();
            id v17 = v49;
            swift_release();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
            sub_19F10A4FC(v18, 2);
            goto LABEL_6;
          case 3:
            uint64_t v32 = v18;
            os_unfair_lock_unlock(v13);
            sub_19EEC3ED8((uint64_t)v65, (uint64_t)v60, (uint64_t *)&unk_1E94737F0);
            if (v64)
            {
LABEL_5:
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
              swift_allocError();
              void *v8 = v18;
              swift_continuation_throwingResumeWithError();
            }
            else
            {
              swift_release();
              id v50 = v17;
              uint64_t v34 = v61;
              uint64_t v33 = v62;
              sub_19EEBB420(v63, (uint64_t)v57);
              uint64_t v36 = v58;
              uint64_t v35 = v59;
              uint64_t v43 = v59;
              __swift_project_boxed_opaque_existential_1(v57, v58);
              uint64_t v37 = (void *)swift_allocObject();
              _OWORD v37[2] = v34;
              v37[3] = v33;
              v37[4] = v18;
              uint64_t v46 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v35 + 8);
              sub_19F10A4AC(v18, 3);
              swift_retain();
              v46(sub_19EEA4ADC, v37, v36, v43);
              a5 = v48;
              swift_release();
              id v17 = v50;
              swift_release();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
              sub_19F10A4FC(v18, 3);
            }
LABEL_6:
            uint64_t v9 = v52;
            break;
          default:
            id v19 = v17;
            sub_19EEC3ED8((uint64_t)v65, (uint64_t)v60, (uint64_t *)&unk_1E94737F0);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v18 = sub_19F09EC7C(0, v18[2] + 1, 1, v18);
            }
            unint64_t v21 = v18[2];
            unint64_t v20 = v18[3];
            if (v21 >= v20 >> 1) {
              unint64_t v18 = sub_19F09EC7C((void *)(v20 > 1), v21 + 1, 1, v18);
            }
            v18[2] = v21 + 1;
            sub_19EEBDC4C((uint64_t)v60, (uint64_t)&v18[10 * v21 + 4], (uint64_t *)&unk_1E94737F0);
            unint64_t v22 = *(void **)(v10 + 24);
            *(void *)(v10 + 24) = v18;
            char v23 = *(unsigned char *)(v10 + 32);
            *(unsigned char *)(v10 + 32) = 0;
            sub_19F10A4FC(v22, v23);
            os_unfair_lock_unlock(v13);
            uint64_t v9 = v52;
            id v17 = v19;
            break;
        }
        sub_19EEBD664((uint64_t)v65, (uint64_t *)&unk_1E94737F0);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v67);

        swift_release();
        swift_release();
        swift_release();
      }
      while (v9 != v7);
      return swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_19F108F0C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = (void *)(a2 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void **)(a2 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_19F09D694(0, v7[2] + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_19F09D694((void *)(v9 > 1), v10 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  v7[2] = v10 + 1;
  v7[v10 + 4] = a1;
  swift_endAccess();
  dispatch_group_leave(a3);
}

void sub_19F108FEC(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = type metadata accessor for MTMetricsIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (unint64_t *)(a2 + 16);
  sub_19EF7DB10(a1, (uint64_t)v9);
  swift_beginAccess();
  unint64_t v11 = *(void *)(a2 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v11 = sub_19F09D6B4(0, *(void *)(v11 + 16) + 1, 1, v11);
    *unint64_t v10 = v11;
  }
  unint64_t v14 = *(void *)(v11 + 16);
  unint64_t v13 = *(void *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    unint64_t v11 = sub_19F09D6B4(v13 > 1, v14 + 1, 1, v11);
    *unint64_t v10 = v11;
  }
  *(void *)(v11 + 16) = v14 + 1;
  sub_19EF7E42C((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v14);
  swift_endAccess();
  dispatch_group_leave(a3);
}

void sub_19F109168(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a4 + 16);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(&v10, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19F1ADA78(v10);
}

uint64_t sub_19F109250(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a4 + 16);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(&v11, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19F1ADD10(v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F109344(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a4 + 16);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(v11, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19F1B3B08(v11[0], v11[1], v11[2]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t CompoundMetricsEventRecorder.__allocating_init(recorders:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  CompoundMetricsEventRecorder.init(recorders:)(a1);
  return v2;
}

uint64_t CompoundMetricsEventRecorder.add(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  v14[0] = a1;
  uint64_t v15 = sub_19F1DBA3C();
  uint64_t v3 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_19F1DB9FC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[1] = *(void *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391088);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
  sub_19F1DB9EC();
  aBlock[0] = v10;
  sub_19EE6A33C(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEA5E54((unint64_t *)&qword_1EB393050, &qword_1EB393048);
  sub_19F1DCC1C();
  sub_19EEC4154(v14[0], (uint64_t)v17);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v2;
  sub_19EEBB420(v17, v11 + 24);
  aBlock[4] = sub_19F1098CC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_30;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_19F1DBA1C();
  MEMORY[0x19F3C6B90](0, v5, v9, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_19F1097A8(uint64_t a1, uint64_t a2)
{
  sub_19EEC4154(a2, (uint64_t)v9);
  uint64_t v3 = (void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void **)(a1 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 16) = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_19F09EB30(0, v4[2] + 1, 1, v4);
    *uint64_t v3 = v4;
  }
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t v4 = sub_19F09EB30((void *)(v6 > 1), v7 + 1, 1, v4);
    *uint64_t v3 = v4;
  }
  v4[2] = v7 + 1;
  sub_19EEBB420(v9, (uint64_t)&v4[5 * v7 + 4]);
  return swift_endAccess();
}

uint64_t sub_19F10988C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_19F1098CC()
{
  return sub_19F1097A8(*(void *)(v0 + 16), v0 + 24);
}

Swift::Void __swiftcall CompoundMetricsEventRecorder.record(_:on:)(JetEngine::LintedMetricsEvent _, Swift::String_optional on)
{
  uint64_t v3 = v2;
  uint64_t countAndFlagsBits = on.value._countAndFlagsBits;
  rawValue = _.issues._rawValue;
  uint64_t v7 = *(void *)_.fields._rawValue;
  uint64_t v6 = *((void *)_.fields._rawValue + 1);
  uint64_t v8 = *(NSObject **)(v3 + 24);
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = v3;
  void v9[3] = v7;
  void v9[4] = v6;
  v9[5] = rawValue;
  v9[6] = countAndFlagsBits;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_19F109BA4;
  *(void *)(v10 + 24) = v9;
  void v12[4] = sub_19EEB224C;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  long long v12[2] = sub_19EEB20C0;
  void v12[3] = &block_descriptor_9_1;
  uint64_t v11 = _Block_copy(v12);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v8) {
    __break(1u);
  }
}

uint64_t sub_19F109A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = v11 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_19EEC4154(v13, (uint64_t)v17);
      uint64_t v14 = v18;
      uint64_t v15 = v19;
      __swift_project_boxed_opaque_existential_1(v17, v18);
      v16[0] = a2;
      v16[1] = a3;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(v16, a4, a5, v14, v15);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
      v13 += 40;
      --v12;
    }
    while (v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19F109B54()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F109BA4()
{
  return sub_19EEA9D7C(sub_19F109A68);
}

uint64_t sub_19F109BBC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t CompoundMetricsEventRecorder._recordAsync(_:on:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D070);
  sub_19F1DC88C();
  uint64_t v0 = sub_19EE69CB8(v2, sub_19EEA9D94, 0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CompoundMetricsEventRecorder.flush()()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946F898);
  sub_19F1DC88C();
  uint64_t v0 = sub_19F106B20(v2, sub_19F109E58, 0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19F109D14@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19F1DCE6C();
    uint64_t v8 = v5 + 32;
    do
    {
      sub_19EEC4154(v8, (uint64_t)v11);
      uint64_t v9 = v12;
      uint64_t v10 = v13;
      __swift_project_boxed_opaque_existential_1(v11, v12);
      (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      sub_19F1DCE3C();
      sub_19F1DCE7C();
      sub_19F1DCE8C();
      sub_19F1DCE4C();
      v8 += 40;
      --v6;
    }
    while (v6);
    uint64_t v7 = v14;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = v7;
  return result;
}

uint64_t sub_19F109E3C@<X0>(void *a1@<X8>)
{
  return sub_19F109D14(v1, a1);
}

uint64_t sub_19F109E58@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    sub_19EFA6878();
    swift_allocError();
    *uint64_t v4 = a2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    uint64_t v5 = *(void *)(result + 16);
    if (v5)
    {
      uint64_t v6 = 0;
      uint64_t v7 = (uint64_t *)(result + 32);
      while (1)
      {
        uint64_t v8 = *v7++;
        BOOL v9 = __OFADD__(v6, v8);
        v6 += v8;
        if (v9) {
          break;
        }
        if (!--v5) {
          goto LABEL_9;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v6 = 0;
LABEL_9:
      *a3 = v6;
    }
  }
  return result;
}

uint64_t CompoundMetricsEventRecorder.deinit()
{
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t CompoundMetricsEventRecorder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_19F109F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_19F109F80()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946F898);
  sub_19F1DC88C();
  uint64_t v0 = sub_19F106B20(v2, sub_19F109E58, 0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19F10A01C()
{
  uint64_t v1 = MEMORY[0x1E4FBC870];
  uint64_t v23 = MEMORY[0x1E4FBC870];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_19EEC4154(v4, (uint64_t)v19);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391AF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DBF0);
      if (swift_dynamicCast())
      {
        sub_19EEBB420(v17, (uint64_t)&v20);
        uint64_t v5 = *((void *)&v21 + 1);
        uint64_t v6 = v22;
        __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
        uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
        if (v8)
        {
          sub_19F04282C(v19, v7, v8);
          swift_bridgeObjectRelease();
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
      }
      else
      {
        uint64_t v18 = 0;
        memset(v17, 0, sizeof(v17));
        sub_19EEBD664((uint64_t)v17, &qword_1E946CD28);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v1 = v23;
  }
  if (*(void *)(v1 + 16) >= 2uLL)
  {
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    BOOL v9 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
    void v19[3] = v12;
    v19[0] = 0xD000000000000053;
    v19[1] = 0x800000019F272BC0;
    long long v20 = 0u;
    long long v21 = 0u;
    id v13 = v9;
    sub_19EEC3E70((uint64_t)v19, (uint64_t)&v20);
    *(unsigned char *)(v11 + 64) = 0;
    long long v14 = v21;
    *(_OWORD *)(v11 + 32) = v20;
    *(_OWORD *)(v11 + 48) = v14;
    *(void *)(v10 + 32) = v11;
    *(void *)&long long v20 = v13;
    LOBYTE(v19[0]) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)v19);

    swift_bridgeObjectRelease();
  }
  uint64_t v15 = sub_19F107EB0(v1);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_19F10A2C0()
{
  return sub_19F10A01C();
}

uint64_t method lookup function for CompoundMetricsEventRecorder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CompoundMetricsEventRecorder);
}

uint64_t dispatch thunk of CompoundMetricsEventRecorder.__allocating_init(recorders:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_19F10A310(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  return a1(&v4);
}

uint64_t sub_19F10A354()
{
  return sub_19EECCE08((uint64_t (*)(void, void, void, void, void))sub_19F1085F8);
}

uint64_t sub_19F10A36C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F10A380()
{
  return sub_19EEA9D7C((uint64_t (*)(void, void, void, void, void))sub_19F109250);
}

void sub_19F10A39C(uint64_t a1)
{
  sub_19F108FEC(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_19F10A3AC()
{
  return sub_19EECCE08((uint64_t (*)(void, void, void, void, void))sub_19F10883C);
}

uint64_t sub_19F10A3C4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F10A3D8()
{
  return sub_19EEA9D7C((uint64_t (*)(void, void, void, void, void))sub_19F109344);
}

void sub_19F10A3F0(void **a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = *a1;
  swift_beginAccess();
  id v6 = v5;
  MEMORY[0x19F3C6430]();
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_19F1DC1BC();
  sub_19F1DC20C();
  sub_19F1DC17C();
  swift_endAccess();
  dispatch_group_leave(a3);
}

void sub_19F10A49C(void **a1)
{
  sub_19F10A3F0(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

id sub_19F10A4AC(id result, char a2)
{
  switch(a2)
  {
    case 0:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
    case 2:
    case 3:
      uint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_19F10A4FC(id a1, char a2)
{
  switch(a2)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19F10A550()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F10A590(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_19F10A5E8()
{
  return sub_19EECCE08((uint64_t (*)(void, void, void, void, void))sub_19F107F40);
}

uint64_t sub_19F10A600()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F10A614()
{
  return sub_19EEA9D7C((uint64_t (*)(void, void, void, void, void))sub_19F109168);
}

void sub_19F10A630(uint64_t *a1)
{
  sub_19F108F0C(*a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_19F10A648()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F10A680()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F10A6BC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F10A6E0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t ClickLocationTracker.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_19EFB5590(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D0A0);
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 24) = sub_19EE992B8(v1);
  return v0;
}

uint64_t ClickLocationTracker.init()()
{
  *(void *)(v0 + 16) = sub_19EFB5590(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D0A0);
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 24) = sub_19EE992B8(v1);
  return v0;
}

uint64_t ClickLocationTracker.onDataSerialized.getter()
{
  return swift_retain();
}

Swift::Void __swiftcall ClickLocationTracker.save(data:)(JetEngine::ClickLocationData *data)
{
  long long v2 = *(_OWORD *)&data->position;
  v8[0] = (__int128)data->id;
  v8[1] = v2;
  Swift::String_optional uniqueID = data->_uniqueID;
  v8[2] = (__int128)data->parentUniqueID;
  Swift::String_optional v9 = uniqueID;
  if (uniqueID.value._object)
  {
    uint64_t countAndFlagsBits = v9.value._countAndFlagsBits;
    uint64_t object = (uint64_t)uniqueID.value._object;
  }
  else
  {
    uint64_t object = *((void *)&v8[0] + 1);
    uint64_t countAndFlagsBits = *(void *)&v8[0];
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  sub_19F10A944((uint64_t)v8);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = 0x8000000000000000;
  sub_19EFBCB80(v8, countAndFlagsBits, object, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 16) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
}

uint64_t ClickLocationData.uniqueID.getter()
{
  if (v0[7])
  {
    uint64_t v1 = v0[6];
  }
  else
  {
    uint64_t v1 = *v0;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_19F10A944(uint64_t a1)
{
  return a1;
}

Swift::Void __swiftcall ClickLocationTracker.remove(data:)(JetEngine::ClickLocationData *data)
{
  if (data->_uniqueID.value._object)
  {
    uint64_t countAndFlagsBits = data->_uniqueID.value._countAndFlagsBits;
    uint64_t object = data->_uniqueID.value._object;
  }
  else
  {
    uint64_t countAndFlagsBits = data->id._countAndFlagsBits;
    uint64_t object = data->id._object;
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19EF6BB0C(countAndFlagsBits, (uint64_t)object, (uint64_t)v3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_19F10B3CC(v3[0], v3[1]);
}

uint64_t sub_19F10AA3C(uint64_t a1, uint64_t a2)
{
  v42[27] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v38[0] = v2;
  uint64_t v8 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_19F10AF44(a1, a2, v8);
  swift_bridgeObjectRelease();
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    v38[2] = v7;
    v42[0] = (id)MEMORY[0x1E4FBC860];
    sub_19EFF63E0(0, v10, 0);
    v38[1] = v9;
    uint64_t v11 = (uint64_t *)(v9 + 48);
    long long v40 = xmmword_19F24EB80;
    unint64_t v39 = 0x800000019F272C60;
    do
    {
      uint64_t v13 = *(v11 - 2);
      uint64_t v12 = *(v11 - 1);
      uint64_t v15 = *v11;
      uint64_t v14 = v11[1];
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v40;
      *(void *)(inited + 32) = 25705;
      *(void *)(inited + 40) = 0xE200000000000000;
      *(void *)(inited + 48) = v13;
      *(void *)(inited + 56) = v12;
      *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 80) = 0xD000000000000010;
      *(void *)(inited + 120) = MEMORY[0x1E4FBB550];
      *(void *)(inited + 88) = v39;
      *(void *)(inited + 96) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v17 = sub_19EEBF898(inited);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v41 = v17;
      sub_19F091880(v14, (uint64_t)sub_19EEBD6C0, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v41);
      uint64_t v19 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v20 = v42[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19EFF63E0(0, v20[2] + 1, 1);
        long long v20 = v42[0];
      }
      unint64_t v22 = v20[2];
      unint64_t v21 = v20[3];
      if (v22 >= v21 >> 1)
      {
        sub_19EFF63E0(v21 > 1, v22 + 1, 1);
        long long v20 = v42[0];
      }
      v20[2] = v22 + 1;
      v20[v22 + 4] = v19;
      v11 += 8;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v20 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = sub_19EFA5354((uint64_t)v20);
  if (_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0())
  {
    char v24 = self;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472178);
    uint64_t v25 = swift_initStackObject();
    *(_OWORD *)(v25 + 16) = xmmword_19F24EAD0;
    *(void *)(v25 + 32) = 0x6E6F697461636F6CLL;
    *(void *)(v25 + 40) = 0xE800000000000000;
    *(void *)(v25 + 48) = v23;
    swift_bridgeObjectRetain();
    sub_19EFB4930(v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
    uint64_t v26 = (void *)sub_19F1DBB1C();
    swift_bridgeObjectRelease();
    v42[0] = 0;
    id v27 = objc_msgSend(v24, sel_dataWithJSONObject_options_error_, v26, 3, v42);

    id v28 = v42[0];
    if (v27)
    {
      uint64_t v29 = sub_19F1DB40C();
      unint64_t v31 = v30;

      sub_19F1DBDCC();
      uint64_t v32 = sub_19F1DBD9C();
      if (v33)
      {
        sub_19EFCBC90(v32, v33);
        sub_19EEA072C(v29, v31);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19EEA072C(v29, v31);
      }
    }
    else
    {
      uint64_t v34 = v28;
      uint64_t v35 = (void *)sub_19F1DB19C();

      swift_willThrow();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = sub_19EFA5354((uint64_t)v20);
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_19F10AF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EEBD400(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = (uint64_t *)(*(void *)(a3 + 56) + (v6 << 6));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = v8[2];
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[5];
  uint64_t v14 = v8[7];
  uint64_t v23 = v8[6];
  uint64_t v24 = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D1E0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_19F24EAD0;
  *(void *)(v15 + 32) = v10;
  *(void *)(v15 + 40) = v9;
  *(void *)(v15 + 48) = v11;
  *(void *)(v15 + 56) = v12;
  *(void *)(v15 + 64) = v24;
  *(void *)(v15 + 72) = v13;
  *(void *)(v15 + 80) = v23;
  *(void *)(v15 + 88) = v14;
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_19EEBD400(a1, a2);
    if (v17)
    {
      unint64_t v18 = *(void *)(a3 + 56) + (v16 << 6);
      uint64_t v19 = *(void *)(v18 + 32);
      uint64_t v20 = *(void *)(v18 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20)
      {
        uint64_t v21 = sub_19F10AF44(v19, v20, a3);
        swift_bridgeObjectRelease();
        sub_19EF5D17C(v21);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v15;
}

uint64_t ClickLocationTracker.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ClickLocationTracker.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ClickLocationData.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickLocationData.position.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ClickLocationData.clickLocationFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClickLocationData.parentUniqueID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall ClickLocationData.init(id:clickLocationFields:position:parentUniqueID:uniqueID:)(JetEngine::ClickLocationData *__return_ptr retstr, Swift::String id, Swift::OpaquePointer clickLocationFields, Swift::Int position, Swift::String_optional parentUniqueID, Swift::String_optional uniqueID)
{
  retstr->id = id;
  retstr->position = position;
  retstr->clickLocationFields = clickLocationFields;
  retstr->parentUniqueID = parentUniqueID;
  retstr->_Swift::String_optional uniqueID = uniqueID;
}

double ClickLocationData.init(impressionMetrics:position:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = a1[3];
  if (v5)
  {
    uint64_t v6 = *a1;
    uint64_t v7 = a1[1];
    uint64_t v8 = a1[2];
    uint64_t v9 = a1[9];
    if ((a3 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19F08B4EC(v6, v7, v8, v5);
      *(void *)a4 = v8;
      *(void *)(a4 + 8) = v5;
      *(void *)(a4 + 16) = a2;
      *(void *)(a4 + 24) = v9;
      double result = 0.0;
      *(_OWORD *)(a4 + 32) = 0u;
      *(_OWORD *)(a4 + 48) = 0u;
      return result;
    }
    sub_19F08B4EC(v6, v7, v8, v5);
  }
  double result = 0.0;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

void __swiftcall ClickLocationData.withParentUniqueID(_:)(JetEngine::ClickLocationData *__return_ptr retstr, Swift::String a2)
{
  uint64_t v3 = (void *)v2[1];
  Swift::Int v4 = v2[2];
  uint64_t v5 = (void *)v2[3];
  uint64_t v7 = v2[6];
  uint64_t v6 = (void *)v2[7];
  retstr->id._uint64_t countAndFlagsBits = *v2;
  retstr->id._uint64_t object = v3;
  retstr->position = v4;
  retstr->clickLocationFields._rawValue = v5;
  retstr->parentUniqueID.value = a2;
  retstr->_uniqueID.value._uint64_t countAndFlagsBits = v7;
  retstr->_uniqueID.value._uint64_t object = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

void __swiftcall ClickLocationData.withUniqueID(_:)(JetEngine::ClickLocationData *__return_ptr retstr, Swift::String a2)
{
  uint64_t v3 = (void *)v2[1];
  Swift::Int v4 = v2[2];
  uint64_t v5 = (void *)v2[3];
  uint64_t v7 = v2[4];
  uint64_t v6 = (void *)v2[5];
  retstr->id._uint64_t countAndFlagsBits = *v2;
  retstr->id._uint64_t object = v3;
  retstr->position = v4;
  retstr->clickLocationFields._rawValue = v5;
  retstr->parentUniqueID.value._uint64_t countAndFlagsBits = v7;
  retstr->parentUniqueID.value._uint64_t object = v6;
  retstr->_uniqueID.value = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t sub_19F10B3CC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ClickLocationTracker()
{
  return self;
}

uint64_t method lookup function for ClickLocationTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClickLocationTracker);
}

uint64_t dispatch thunk of ClickLocationTracker.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t destroy for ClickLocationData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ClickLocationData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClickLocationData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ClickLocationData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClickLocationData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClickLocationData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickLocationData()
{
  return &type metadata for ClickLocationData;
}

uint64_t ExponentialPipelineBackoff.__allocating_init(baseWaitInterval:maxWaitInterval:)(double a1, double a2)
{
  uint64_t v4 = swift_allocObject();
  *(double *)(v4 + 16) = a1;
  *(double *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(void *)(v4 + 40) = 0;
  return v4;
}

Swift::Double __swiftcall ExponentialPipelineBackoff.nextWaitInterval()()
{
  uint64_t v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  uint64_t v2 = *(void *)(v0 + 40);
  if (v2 < 1) {
    goto LABEL_8;
  }
  double v3 = exp2((double)(v2 - 1)) * *(double *)(v0 + 16);
  if (v3 >= *(double *)(v0 + 24)) {
    double v4 = *(double *)(v0 + 24);
  }
  else {
    double v4 = v3;
  }
  uint64_t v5 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
LABEL_8:
    uint64_t v5 = v2 + 1;
    double v4 = 0.0;
  }
  *(void *)(v0 + 40) = v5;
  objc_msgSend(v1, sel_unlock);
  return v4;
}

Swift::Void __swiftcall ExponentialPipelineBackoff.reset()()
{
  uint64_t v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  *(void *)(v0 + 40) = 0;
  objc_msgSend(v1, sel_unlock);
}

uint64_t ExponentialPipelineBackoff.init(baseWaitInterval:maxWaitInterval:)(double a1, double a2)
{
  *(void *)(v2 + 40) = 0;
  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
  *(void *)(v2 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(void *)(v2 + 40) = 0;
  return v2;
}

double ExponentialPipelineBackoff.baseWaitInterval.getter()
{
  return *(double *)(v0 + 16);
}

double ExponentialPipelineBackoff.maxWaitInterval.getter()
{
  return *(double *)(v0 + 24);
}

void sub_19F10B884(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4 < 1) {
    goto LABEL_7;
  }
  double v5 = exp2((double)(v4 - 1)) * *(double *)(a1 + 16);
  if (v5 >= *(double *)(a1 + 24)) {
    double v5 = *(double *)(a1 + 24);
  }
  *a2 = v5;
  uint64_t v6 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_7:
    *a2 = 0.0;
    uint64_t v6 = v4 + 1;
  }
  *(void *)(a1 + 40) = v6;
}

uint64_t ExponentialPipelineBackoff.deinit()
{
  return v0;
}

uint64_t ExponentialPipelineBackoff.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

double sub_19F10B950()
{
  uint64_t v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  sub_19F10B884(v0, &v3);
  objc_msgSend(v1, sel_unlock);
  return v3;
}

id sub_19F10B9B4()
{
  uint64_t v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  *(void *)(v0 + 40) = 0;
  return objc_msgSend(v1, sel_unlock);
}

uint64_t type metadata accessor for ExponentialPipelineBackoff()
{
  return self;
}

uint64_t method lookup function for ExponentialPipelineBackoff(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ExponentialPipelineBackoff);
}

uint64_t dispatch thunk of ExponentialPipelineBackoff.__allocating_init(baseWaitInterval:maxWaitInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t CodeByExpressibleByJSON.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t CodeByExpressibleByJSON.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t CodeByExpressibleByJSON.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*CodeByExpressibleByJSON.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t CodeByExpressibleByJSON.description.getter()
{
  return 0;
}

uint64_t CodeByExpressibleByJSON.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v36 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v9;
  uint64_t v10 = type metadata accessor for CodeByExpressibleByJSON();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = a1[3];
  uint64_t v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_19F1DD88C();
  if (v4)
  {
    uint64_t v15 = v38;
    id v45 = v4;
    id v16 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {

      long long v41 = v43;
      long long v42 = v44;
      uint64_t v39 = sub_19F1DCDCC();
      swift_allocError();
      uint64_t v38 = v17;
      __swift_project_boxed_opaque_existential_1(v15, v15[3]);
      uint64_t v37 = sub_19F1DD86C();
      v40[0] = 0;
      v40[1] = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      uint64_t v36 = v40[0];
      sub_19EF5B580();
      swift_allocError();
      long long v18 = v41;
      long long v19 = v42;
      *uint64_t v20 = v41;
      v20[1] = v19;
      sub_19F10C030(v18, *((id *)&v18 + 1), v19);
      uint64_t v21 = v15;
      unint64_t v22 = v38;
      sub_19F1DCDAC();
      uint64_t v23 = v22;
      uint64_t v15 = v21;
      (*(void (**)(void *, void))(*(void *)(v39 - 8) + 104))(v23, *MEMORY[0x1E4FBBA78]);
      swift_willThrow();
      sub_19F10C0E0(v18, *((id *)&v18 + 1), v19);
    }

    uint64_t v30 = (uint64_t)v15;
  }
  else
  {
    uint64_t v32 = v13;
    uint64_t v35 = v8;
    uint64_t v33 = v11;
    uint64_t v34 = v10;
    __swift_project_boxed_opaque_existential_1(&v43, *((uint64_t *)&v44 + 1));
    sub_19EFAA6E8();
    sub_19F1DD49C();
    uint64_t v25 = v38;
    __swift_project_boxed_opaque_existential_1(v38, v38[3]);
    uint64_t v26 = sub_19F1DD89C();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v26);
    sub_19EEC355C((uint64_t)&v41, (uint64_t)v40);
    id v27 = v35;
    uint64_t v28 = v39;
    (*(void (**)(void *, id *, uint64_t, uint64_t))(a3 + 8))(v40, &v45, v39, a3);
    sub_19EEC3418((uint64_t)&v41);
    uint64_t v29 = v32;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v27, v28);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v37, v29, v34);
    uint64_t v30 = (uint64_t)v25;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v30);
}

uint64_t type metadata accessor for CodeByExpressibleByJSON()
{
  return __swift_instantiateGenericMetadata();
}

id sub_19F10C030(int a1, id a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 6uLL:
      goto LABEL_4;
    case 2uLL:
      swift_bridgeObjectRetain();
LABEL_4:
      id result = (id)swift_bridgeObjectRetain();
      break;
    case 5uLL:
      id result = a2;
      break;
    default:
      return result;
  }
  return result;
}

void sub_19F10C0E0(int a1, id a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 6uLL:
      goto LABEL_4;
    case 2uLL:
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 5uLL:

      break;
    default:
      return;
  }
}

uint64_t sub_19F10C194@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CodeByExpressibleByJSON.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t CodeByExpressibleByJSON<>.init()()
{
  return sub_19F1DD2FC();
}

uint64_t static CodeByExpressibleByJSON<>.== infix(_:_:)()
{
  return sub_19F1DBD3C() & 1;
}

uint64_t sub_19F10C208()
{
  return static CodeByExpressibleByJSON<>.== infix(_:_:)();
}

uint64_t CodeByExpressibleByJSON<>.hash(into:)()
{
  return sub_19F1DBC9C();
}

uint64_t CodeByExpressibleByJSON<>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F10C274()
{
  return CodeByExpressibleByJSON<>.hashValue.getter();
}

uint64_t sub_19F10C27C()
{
  return CodeByExpressibleByJSON<>.hash(into:)();
}

uint64_t sub_19F10C284()
{
  return sub_19F1DD78C();
}

uint64_t CodeByExpressibleByJSON<>.init(_partiallyFrom:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for CodeByExpressibleByJSON();
  uint64_t v20 = *(void *)(v11 - 8);
  uint64_t v21 = v11;
  MEMORY[0x1F4188790](v11);
  long long v19 = &v18[-v12];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_19F1DD89C();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  sub_19EFAA6E8();
  sub_19F1DD49C();
  v25[0] = v22[0];
  v25[1] = v22[1];
  uint64_t v26 = v23;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  uint64_t v17 = v27;
  sub_19EEC355C((uint64_t)v25, (uint64_t)v24);
  *(void *)&v22[0] = v17;
  uint64_t v14 = *(void (**)(void *, _OWORD *, uint64_t, uint64_t))(a3 + 8);
  swift_bridgeObjectRetain();
  v14(v24, v22, a2, a3);
  sub_19EEC3418((uint64_t)v25);
  swift_bridgeObjectRelease();
  uint64_t v15 = v19;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v19, v10, a2);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v20 + 32))(a4, v15, v21);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19F10C638@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return CodeByExpressibleByJSON<>.init(_partiallyFrom:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t CodeByExpressibleByJSON<>.encode(to:)()
{
  return sub_19F1DBC7C();
}

uint64_t sub_19F10C664()
{
  return CodeByExpressibleByJSON<>.encode(to:)();
}

uint64_t CodeByExpressibleByJSON<>._partiallyEncode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void))(a3 + 8))(a1, *(void *)(a2 + 16));
}

uint64_t sub_19F10C698()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F10C6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CodeByExpressibleByJSON<>._partiallyEncode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t sub_19F10C6E8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_19F10C844(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19F10CA5CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        id v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

unint64_t static NativeIntentDispatcher.Builder.buildBlock(_:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  memset(&v13[8], 0, 40);
  sub_19EEBD664((uint64_t)&v13[8], qword_1E946CC60);
  memset(&v13[8], 0, 40);
  unint64_t result = sub_19EFB570C(MEMORY[0x1E4FBC860]);
  *(void *)int v13 = result;
  long long v5 = *(_OWORD *)&v13[32];
  long long v6 = *(_OWORD *)v13;
  a2[1] = *(_OWORD *)&v13[16];
  a2[2] = v5;
  *a2 = v6;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_19F10D120(v8, (uint64_t)v13);
      uint64_t v9 = *(void *)v13;
      swift_bridgeObjectRetain();
      uint64_t v10 = *(void *)a2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = v10;
      *(void *)a2 = 0x8000000000000000;
      sub_19F10CDBC(v9, (uint64_t)sub_19F10CD68, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v12);
      *(void *)a2 = v12;
      swift_bridgeObjectRelease();
      sub_19F10D17C((uint64_t)v13);
      v8 += 48;
      --v7;
    }
    while (v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static NativeIntentDispatcher.Builder.buildExpression<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  memset(&v9[8], 0, 40);
  sub_19EEBD664((uint64_t)&v9[8], qword_1E946CC60);
  memset(&v9[8], 0, 40);
  *(void *)uint64_t v9 = sub_19EFB570C(MEMORY[0x1E4FBC860]);
  v10[1] = *(_OWORD *)&v9[16];
  v10[2] = *(_OWORD *)&v9[32];
  v10[0] = *(_OWORD *)v9;
  NativeIntentDispatcher.registering<A>(_:)(a1, a2, a3, a4);
  return sub_19F10D17C((uint64_t)v10);
}

uint64_t static NativeIntentDispatcher.Builder.buildOptional(_:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_19F10D1D0(a1, (uint64_t)v8);
  if (*(void *)&v8[0])
  {
    long long v4 = v8[1];
    *a2 = v8[0];
    a2[1] = v4;
    a2[2] = v8[2];
  }
  else
  {
    memset(&v7[8], 0, 40);
    sub_19EEBD664((uint64_t)&v7[8], qword_1E946CC60);
    memset(&v7[8], 0, 40);
    *(void *)uint64_t v7 = sub_19EFB570C(MEMORY[0x1E4FBC860]);
    long long v5 = *(_OWORD *)&v7[32];
    long long v6 = *(_OWORD *)v7;
    a2[1] = *(_OWORD *)&v7[16];
    a2[2] = v5;
    *a2 = v6;
    return sub_19EEBD664((uint64_t)v8, &qword_1E9474E80);
  }
  return result;
}

uint64_t static NativeIntentDispatcher.Builder.buildEither(first:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F10D120(a1, a2);
}

uint64_t NativeIntentDispatcher.init(implementations:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_19F10CD68@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_19EEC4154((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F10CDBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v51 = a1;
  uint64_t v52 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v53 = v8;
  uint64_t v54 = 0;
  uint64_t v55 = v11 & v9;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19EFCA818((uint64_t)&v48);
  uint64_t v12 = v49;
  if (!v49) {
    goto LABEL_27;
  }
  uint64_t v13 = v48;
  sub_19EEBB420(v50, (uint64_t)v47);
  unsigned int v14 = *(void **)a5;
  unint64_t v16 = sub_19EEBD400(v13, v12);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_19EFC02EC();
      if (v20) {
        goto LABEL_12;
      }
    }
LABEL_14:
    uint64_t v24 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    uint64_t v25 = (uint64_t *)(v24[6] + 16 * v16);
    *uint64_t v25 = v13;
    v25[1] = v12;
    sub_19EEBB420(v47, v24[7] + 40 * v16);
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    void v24[2] = v28;
LABEL_16:
    sub_19EFCA818((uint64_t)&v48);
    for (uint64_t i = v49; v49; uint64_t i = v49)
    {
      uint64_t v31 = v48;
      sub_19EEBB420(v50, (uint64_t)v47);
      uint64_t v32 = *(void **)a5;
      unint64_t v34 = sub_19EEBD400(v31, i);
      uint64_t v35 = v32[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_28;
      }
      char v38 = v33;
      if (v32[3] < v37)
      {
        sub_19EFBB070(v37, 1);
        unint64_t v39 = sub_19EEBD400(v31, i);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_30;
        }
        unint64_t v34 = v39;
      }
      if (v38)
      {
        sub_19EEC4154((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
        swift_bridgeObjectRelease();
        uint64_t v30 = *(void *)(*(void *)a5 + 56) + 40 * v34;
        __swift_destroy_boxed_opaque_existential_1Tm(v30);
        sub_19EEBB420(v46, v30);
      }
      else
      {
        long long v41 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        long long v42 = (uint64_t *)(v41[6] + 16 * v34);
        uint64_t *v42 = v31;
        v42[1] = i;
        sub_19EEBB420(v47, v41[7] + 40 * v34);
        uint64_t v43 = v41[2];
        BOOL v27 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v27) {
          goto LABEL_29;
        }
        v41[2] = v44;
      }
      sub_19EFCA818((uint64_t)&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    return swift_release();
  }
  sub_19EFBB070(v19, a4 & 1);
  unint64_t v21 = sub_19EEBD400(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_19EEC4154((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(*(void *)a5 + 56) + 40 * v16;
    __swift_destroy_boxed_opaque_existential_1Tm(v23);
    sub_19EEBB420(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F10D120(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19F10D17C(uint64_t a1)
{
  return a1;
}

uint64_t sub_19F10D1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474E80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for NativeIntentDispatcher.Builder()
{
  return &type metadata for NativeIntentDispatcher.Builder;
}

uint64_t dispatch thunk of JetPackAssetFetcher._fetch(_:candidate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 24) + **(int **)(a5 + 24));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_19F01B558;
  return v13(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for UserAgentFieldProvider()
{
  return &type metadata for UserAgentFieldProvider;
}

uint64_t sub_19F10D37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a3;
  return MEMORY[0x1F4188298](sub_19EEBB634, 0, 0);
}

uint64_t PageMetricsPresenter.data.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 224);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 48));
  sub_19F10DAF0((uint64_t *)(v3 + 16), a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
  return swift_release();
}

uint64_t PageMetricsPresenter.__allocating_init(appMetrics:pipeline:context:data:)(uint64_t a1, uint64_t a2, uint64_t *a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  PageMetricsPresenter.init(appMetrics:pipeline:context:data:)(a1, a2, a3, a4);
  return v8;
}

uint64_t PageMetricsPresenter.init(appMetrics:pipeline:context:data:)(uint64_t a1, uint64_t a2, uint64_t *a3, long long *a4)
{
  uint64_t v6 = *a3;
  long long v11 = *a4;
  uint64_t v7 = *((void *)a4 + 2);
  uint64_t v8 = *((void *)a4 + 3);
  *(void *)(v4 + 208) = 0;
  *(void *)(v4 + 16) = a1;
  sub_19EE99F44(a2, v4 + 24);
  *(_WORD *)(v4 + 216) = 0;
  *(void *)(v4 + 232) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F6A0);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 48) = 0;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = v7;
  *(void *)(v9 + 40) = v8;
  sub_19EE98E9C(a2);
  *(void *)(v4 + 224) = v9;
  return v4;
}

uint64_t sub_19F10D528(uint64_t result)
{
  if (*(unsigned char *)(v1 + 216) != (result & 1))
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3)
    {
      uint64_t v4 = *(void *)(v3 + 208);
      if (*(unsigned char *)(v1 + 216))
      {
        swift_weakInit();
        swift_weakAssign();
        sub_19F10F380();
        sub_19F10F390();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F5F0);
        uint64_t v5 = swift_allocObject();
        sub_19F10F380();
        uint64_t v6 = *(void **)(v4 + 16);
        swift_retain();
        objc_msgSend(v6, sel_lock);
        uint64_t v7 = (void *)(v4 + 24);
        swift_beginAccess();
        uint64_t v8 = *(void **)(v4 + 24);
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v4 + 24) = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v8 = sub_19F09EB44(0, v8[2] + 1, 1, v8);
          *uint64_t v7 = v8;
        }
        unint64_t v11 = v8[2];
        unint64_t v10 = v8[3];
        if (v11 >= v10 >> 1)
        {
          uint64_t v8 = sub_19F09EB44((void *)(v10 > 1), v11 + 1, 1, v8);
          *uint64_t v7 = v8;
        }
        v8[2] = v11 + 1;
        v8[v11 + 4] = v5;
        swift_endAccess();
        objc_msgSend(v6, sel_unlock);
        sub_19F10F3A0((uint64_t)v23);
        uint64_t v12 = *(void *)(v2 + 208);
        if (v12)
        {
          uint64_t v13 = *(void *)(v3 + 208);
          uint64_t v14 = *(void **)(v13 + 16);
          swift_retain();
          swift_retain();
          objc_msgSend(v14, sel_lock);
          swift_beginAccess();
          uint64_t v15 = sub_19EF92618(v12, *(void *)(v13 + 24));
          if ((v16 & 1) == 0)
          {
            unint64_t v17 = v15;
            swift_beginAccess();
            sub_19F168798(v17, &v24);
            swift_endAccess();
            swift_release();
          }
          objc_msgSend(v14, sel_unlock);
          swift_release();
          swift_release();
          *(void *)(v2 + 208) = v5;
        }
        else
        {
          *(void *)(v2 + 208) = v5;
        }
      }
      else
      {
        uint64_t v18 = *(void *)(v1 + 208);
        if (v18)
        {
          uint64_t v19 = *(void **)(v4 + 16);
          swift_retain_n();
          swift_retain();
          objc_msgSend(v19, sel_lock);
          swift_beginAccess();
          uint64_t v20 = sub_19EF92618(v18, *(void *)(v4 + 24));
          if ((v21 & 1) == 0)
          {
            unint64_t v22 = v20;
            swift_beginAccess();
            sub_19F168798(v22, &v24);
            swift_endAccess();
            swift_release();
          }
          objc_msgSend(v19, sel_unlock);
          swift_release();
          swift_release();
        }
        else
        {
          swift_retain();
        }
        *(void *)(v1 + 208) = 0;
      }
      swift_release();
      return swift_release();
    }
  }
  return result;
}

BOOL PageMetricsPresenter.canProcessAppInstructions.getter()
{
  return *(void *)(v0 + 16) != 0;
}

uint64_t PageMetricsPresenter.context.getter@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 232);
  return swift_bridgeObjectRetain();
}

uint64_t PageMetricsPresenter.context.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  *(void *)(v1 + 232) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PageMetricsPresenter.context.modify())()
{
  return j__swift_endAccess_0;
}

double sub_19F10D940@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 224);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 48));
  sub_19F10DAF0((uint64_t *)(v3 + 16), (uint64_t *)v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
  swift_release();
  double result = *(double *)v6;
  long long v5 = v6[1];
  *a2 = v6[0];
  a2[1] = v5;
  return result;
}

void sub_19F10D9C4(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  void v4[3] = v3;
  sub_19F10F27C(v4[0]);
  PageMetricsPresenter.data.setter(v4);
}

void PageMetricsPresenter.data.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(v1 + 224);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 48));
  sub_19F10DB2C((uint64_t *)(v3 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
  swift_release();
  if (v2)
  {
    sub_19EFD1A68(v2);
    if (*(unsigned char *)(v1 + 216) == 1)
    {
      v4[0] = 0x65746E4565676170;
      v4[1] = 0xE900000000000072;
      _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0((unint64_t)v4);
    }
  }
}

uint64_t sub_19F10DAF0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  a2[3] = v5;
  return sub_19F10F27C(v3);
}

uint64_t sub_19F10DB2C(uint64_t *a1)
{
  return sub_19F10F2E0(a1);
}

void (*PageMetricsPresenter.data.modify(uint64_t **a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = (uint64_t *)malloc(0x30uLL);
  *a1 = v3;
  void v3[4] = v1;
  uint64_t v4 = *(void *)(v1 + 224);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 48));
  sub_19F10DAF0((uint64_t *)(v4 + 16), v3);
  void v3[5] = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 48));
  swift_release();
  return sub_19F10DBF4;
}

void sub_19F10DBF4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[3];
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  uint64_t v7 = *(void *)((*a1)[4] + 224);
  v10[4] = v4;
  v10[5] = v5;
  v10[6] = v6;
  v10[7] = v3;
  v10[1] = v10;
  if (a2)
  {
    sub_19F10F27C(v4);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v7 + 48));
    sub_19F10DB2C((uint64_t *)(v7 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 48));
    swift_release();
    if (v4)
    {
      uint64_t v8 = v2[4];
      sub_19EFD1A68(v4);
      if (*(unsigned char *)(v8 + 216) == 1)
      {
        uint64_t v11 = 0x65746E4565676170;
        unint64_t v12 = 0xE900000000000072;
        _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0((unint64_t)&v11);
      }
    }
    sub_19EFD1A68(*v2);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v7 + 48));
    sub_19F10DB2C((uint64_t *)(v7 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 48));
    swift_release();
    if (v4)
    {
      uint64_t v9 = v2[4];
      sub_19EFD1A68(v4);
      if (*(unsigned char *)(v9 + 216) == 1)
      {
        uint64_t v11 = 0x65746E4565676170;
        unint64_t v12 = 0xE900000000000072;
        _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0((unint64_t)&v11);
      }
    }
  }
  free(v2);
}

Swift::Void __swiftcall PageMetricsPresenter.viewDidAppear()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_19F1DBA6C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_19EEA5F34();
  *uint64_t v5 = sub_19F1DC87C();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  char v6 = sub_19F1DBA8C();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v7 = *(unsigned __int8 *)(v1 + 216);
    *(unsigned char *)(v1 + 216) = 1;
    sub_19F10D528(v7);
    uint64_t v8 = *(void *)(v1 + 224);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v8 + 48));
    sub_19F10DAF0((uint64_t *)(v8 + 16), v11);
    os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 48));
    swift_release();
    uint64_t v9 = v11[0];
    sub_19EFD1A68(v11[0]);
    if (v9)
    {
      v11[0] = 0x65746E4565676170;
      v11[1] = 0xE900000000000072;
      _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0((unint64_t)v11);
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall PageMetricsPresenter.viewWillDisappear(forReason:)(JetEngine::ViewWillDisappearReason forReason)
{
  uint64_t v2 = v1;
  uint64_t countAndFlagsBits = forReason.rawValue._countAndFlagsBits;
  uint64_t v4 = sub_19F1DBA6C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)countAndFlagsBits;
  uint64_t v9 = *(void *)(countAndFlagsBits + 8);
  sub_19EEA5F34();
  *uint64_t v7 = sub_19F1DC87C();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  LOBYTE(countAndFlagsBits) = sub_19F1DBA8C();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (countAndFlagsBits)
  {
    if (v8 == 0xD000000000000019 && v9 == 0x800000019F26C0F0 || (sub_19F1DD44C() & 1) != 0)
    {
      uint64_t v11 = 0x747475426B636162;
      unint64_t v12 = 0xEA00000000006E6FLL;
      _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0((unint64_t)&v11);
    }
    uint64_t v11 = 0x7469784565676170;
    unint64_t v12 = 0xE800000000000000;
    _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0((unint64_t)&v11);
    uint64_t v10 = *(unsigned __int8 *)(v2 + 216);
    *(unsigned char *)(v2 + 216) = 0;
    sub_19F10D528(v10);
  }
  else
  {
    __break(1u);
  }
}

uint64_t PageMetricsPresenter.deinit()
{
  swift_release();
  sub_19EE98E9C(v0 + 24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PageMetricsPresenter.__deallocating_deinit()
{
  swift_release();
  sub_19EE98E9C(v0 + 24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19F10E1B4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    if (*(unsigned char *)(result + 216) == 1)
    {
      BOOL v5 = v1 == 0x7265746E65 && v2 == 0xE500000000000000;
      if (v5 || (sub_19F1DD44C() & 1) != 0)
      {
        if (*(unsigned char *)(v4 + 217))
        {
          uint64_t v6 = 0x7265746E45707061;
          unint64_t v7 = 0xE800000000000000;
          _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0((unint64_t)&v6);
          *(unsigned char *)(v4 + 217) = 0;
        }
      }
      else
      {
        if ((v1 != 1953069157 || v2 != 0xE400000000000000) && (sub_19F1DD44C() & 1) == 0)
        {
          uint64_t result = sub_19F1DCFCC();
          __break(1u);
          return result;
        }
        uint64_t v6 = 0x74697845707061;
        unint64_t v7 = 0xE700000000000000;
        _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0((unint64_t)&v6);
        *(unsigned char *)(v4 + 217) = 1;
      }
    }
    return swift_release();
  }
  return result;
}

BOOL sub_19F10E338()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong) {
    swift_release();
  }
  return Strong != 0;
}

void _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0(unint64_t a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = sub_19F1DBA6C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  sub_19EEA5F34();
  *uint64_t v9 = sub_19F1DC87C();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  char v12 = sub_19F1DBA8C();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v12 & 1) == 0)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v13 = v4[28];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 48));
  sub_19F10DAF0((uint64_t *)(v13 + 16), (uint64_t *)&v110);
  os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 48));
  swift_release();
  a1 = (unint64_t)&unk_1EB393000;
  uint64_t v3 = &unk_19F24E000;
  if (!(void)v110)
  {
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    BOOL v36 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_19F24EB80;
    id v38 = v36;
    uint64_t v120 = sub_19EEC3F3C(0, 38, 0, MEMORY[0x1E4FBC860]);
    v39._uint64_t countAndFlagsBits = 0;
    v39._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    swift_unknownObjectRetain();
    sub_19EED7A90((uint64_t)&v110);
    char v40 = v120;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v40 = sub_19EEC3F3C(0, v40[2] + 1, 1, v40);
    }
    unint64_t v42 = v40[2];
    unint64_t v41 = v40[3];
    if (v42 >= v41 >> 1) {
      char v40 = sub_19EEC3F3C((void *)(v41 > 1), v42 + 1, 1, v40);
    }
    v40[2] = v42 + 1;
    uint64_t v43 = &v40[5 * v42];
    long long v44 = v110;
    long long v45 = v111;
    *((unsigned char *)v43 + 64) = v112;
    *((_OWORD *)v43 + 2) = v44;
    *((_OWORD *)v43 + 3) = v45;
    uint64_t v120 = v40;
    v46._uint64_t countAndFlagsBits = 0xD000000000000023;
    v46._uint64_t object = (void *)0x800000019F272DA0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    v119 = &type metadata for PageMetrics.InvocationPoint;
    uint64_t v117 = v11;
    uint64_t v118 = v10;
    sub_19EEBCD00((uint64_t)&v117, (uint64_t)v116);
    long long v114 = 0u;
    long long v115 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v116, (uint64_t)&v114);
    LOBYTE(v112) = 0;
    long long v110 = v114;
    long long v111 = v115;
    uint64_t v47 = v120;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v47 = sub_19EEC3F3C(0, v47[2] + 1, 1, v47);
    }
    unint64_t v49 = v47[2];
    unint64_t v48 = v47[3];
    if (v49 >= v48 >> 1) {
      uint64_t v47 = sub_19EEC3F3C((void *)(v48 > 1), v49 + 1, 1, v47);
    }
    long long v47[2] = v49 + 1;
    id v50 = &v47[5 * v49];
    long long v51 = v110;
    long long v52 = v111;
    *((unsigned char *)v50 + 64) = v112;
    *((_OWORD *)v50 + 2) = v51;
    *((_OWORD *)v50 + 3) = v52;
    uint64_t v120 = v47;
    sub_19EEBCB4C((uint64_t)&v117);
    v53._uint64_t countAndFlagsBits = 44;
    v53._uint64_t object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    *(void *)(v37 + 32) = v120;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v54 = swift_allocObject();
    uint64_t v55 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v54 + 16) = xmmword_19F24EAD0;
    *((void *)&v115 + 1) = v55;
    *(void *)&long long v114 = 0xD000000000000027;
    *((void *)&v114 + 1) = 0x800000019F272DD0;
    goto LABEL_37;
  }
  uint64_t v105 = v11;
  uint64_t v106 = v10;
  uint64_t v2 = *((void *)&v110 + 1);
  uint64_t v11 = v111;
  uint64_t v104 = *(void *)(v110 + 16);
  if (!v104)
  {
    sub_19EFD1A68(v110);
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v56 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_19F24EB80;
    id v38 = v56;
    uint64_t v120 = sub_19EEC3F3C(0, 38, 0, MEMORY[0x1E4FBC860]);
    v57._uint64_t countAndFlagsBits = 0;
    v57._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    swift_unknownObjectRetain();
    sub_19EED7A90((uint64_t)&v110);
    uint64_t v58 = v120;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v60 = v106;
    uint64_t v61 = v105;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v58 = sub_19EEC3F3C(0, v58[2] + 1, 1, v58);
    }
    unint64_t v63 = v58[2];
    unint64_t v62 = v58[3];
    if (v63 >= v62 >> 1) {
      uint64_t v58 = sub_19EEC3F3C((void *)(v62 > 1), v63 + 1, 1, v58);
    }
    v58[2] = v63 + 1;
    char v64 = &v58[5 * v63];
    long long v65 = v110;
    long long v66 = v111;
    *((unsigned char *)v64 + 64) = v112;
    *((_OWORD *)v64 + 2) = v65;
    *((_OWORD *)v64 + 3) = v66;
    uint64_t v120 = v58;
    v67._uint64_t countAndFlagsBits = 0xD000000000000023;
    v67._uint64_t object = (void *)0x800000019F272DA0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v67);
    v119 = &type metadata for PageMetrics.InvocationPoint;
    uint64_t v117 = v61;
    uint64_t v118 = v60;
    sub_19EEBCD00((uint64_t)&v117, (uint64_t)v116);
    long long v114 = 0u;
    long long v115 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v116, (uint64_t)&v114);
    LOBYTE(v112) = 0;
    long long v110 = v114;
    long long v111 = v115;
    uint64_t v68 = v120;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v68 = sub_19EEC3F3C(0, v68[2] + 1, 1, v68);
    }
    unint64_t v70 = v68[2];
    unint64_t v69 = v68[3];
    if (v70 >= v69 >> 1) {
      uint64_t v68 = sub_19EEC3F3C((void *)(v69 > 1), v70 + 1, 1, v68);
    }
    v68[2] = v70 + 1;
    uint64_t v71 = &v68[5 * v70];
    long long v72 = v110;
    long long v73 = v111;
    *((unsigned char *)v71 + 64) = v112;
    *((_OWORD *)v71 + 2) = v72;
    *((_OWORD *)v71 + 3) = v73;
    uint64_t v120 = v68;
    sub_19EEBCB4C((uint64_t)&v117);
    v74._uint64_t countAndFlagsBits = 44;
    v74._uint64_t object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v74);
    *(void *)(v37 + 32) = v120;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_19F24EAD0;
    *((void *)&v115 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v114 = 0xD00000000000001DLL;
    *((void *)&v114 + 1) = 0x800000019F272E20;
LABEL_37:
    long long v111 = 0u;
    long long v110 = 0u;
    sub_19EEC3E70((uint64_t)&v114, (uint64_t)&v110);
    *(unsigned char *)(v54 + 64) = 0;
    long long v75 = v111;
    *(_OWORD *)(v54 + 32) = v110;
    *(_OWORD *)(v54 + 48) = v75;
    *(void *)(v37 + 40) = v54;
    *(void *)&long long v110 = v38;
    LOBYTE(v114) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v37, (JetEngine::LogMessageLevel)&v114);

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v101 = (void *)v110;
  if (qword_1EB393168 != -1) {
LABEL_70:
  }
    swift_once();
  uint64_t v14 = *(void **)(a1 + 128);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v3[173];
  id v16 = v14;
  uint64_t v120 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
  v17._uint64_t countAndFlagsBits = 0;
  v17._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  swift_unknownObjectRetain();
  sub_19EED7A90((uint64_t)&v110);
  uint64_t v18 = v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v18 = sub_19EEC3F3C(0, v18[2] + 1, 1, v18);
  }
  unint64_t v20 = v18[2];
  unint64_t v19 = v18[3];
  if (v20 >= v19 >> 1) {
    uint64_t v18 = sub_19EEC3F3C((void *)(v19 > 1), v20 + 1, 1, v18);
  }
  v18[2] = v20 + 1;
  char v21 = &v18[5 * v20];
  long long v22 = v110;
  long long v23 = v111;
  *((unsigned char *)v21 + 64) = v112;
  *((_OWORD *)v21 + 2) = v22;
  *((_OWORD *)v21 + 3) = v23;
  uint64_t v120 = v18;
  v24._uint64_t object = (void *)0x800000019F272E00;
  v24._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  v119 = &type metadata for PageMetrics.InvocationPoint;
  uint64_t v117 = v105;
  uint64_t v118 = v106;
  sub_19EEBCD00((uint64_t)&v117, (uint64_t)v116);
  long long v114 = 0u;
  long long v115 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v116, (uint64_t)&v114);
  LOBYTE(v112) = 0;
  long long v110 = v114;
  long long v111 = v115;
  uint64_t v25 = v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v25 = sub_19EEC3F3C(0, v25[2] + 1, 1, v25);
  }
  unint64_t v27 = v25[2];
  unint64_t v26 = v25[3];
  uint64_t v3 = (_OWORD *)(v27 + 1);
  if (v27 >= v26 >> 1) {
    uint64_t v25 = sub_19EEC3F3C((void *)(v26 > 1), v27 + 1, 1, v25);
  }
  _OWORD v25[2] = v3;
  uint64_t v28 = &v25[5 * v27];
  long long v29 = v110;
  long long v30 = v111;
  *((unsigned char *)v28 + 64) = v112;
  *((_OWORD *)v28 + 2) = v29;
  *((_OWORD *)v28 + 3) = v30;
  uint64_t v120 = v25;
  sub_19EEBCB4C((uint64_t)&v117);
  v31._uint64_t countAndFlagsBits = 0;
  v31._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v31);
  *(void *)(v15 + 32) = v120;
  *(void *)&long long v110 = v16;
  LOBYTE(v114) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)&v114);

  swift_bridgeObjectRelease();
  sub_19EED6DB0();
  swift_beginAccess();
  uint64_t v32 = v4[29];
  *((void *)&v111 + 1) = &type metadata for ScalarDictionary;
  *(void *)&long long v110 = v11;
  sub_19EEBDC00(&v110, &v114);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  v116[0] = v32;
  sub_19EE7DA20(&v114, 0xD000000000000021, 0x800000019F26C0C0, v33);
  uint64_t v34 = v116[0];
  swift_bridgeObjectRelease();
  if (v2)
  {
    *((void *)&v111 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    *(void *)&long long v110 = v2;
    sub_19EEBDC00(&v110, &v114);
    swift_bridgeObjectRetain();
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    v116[0] = v34;
    sub_19EE7DA20(&v114, 0xD00000000000001ELL, 0x800000019F26AE50, v35);
    uint64_t v100 = v116[0];
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v100 = v34;
  }
  a1 = (unint64_t)v101;
  uint64_t v76 = swift_bridgeObjectRetain();
  sub_19EFD1A68(v76);
  unint64_t v77 = 0;
  uint64_t v102 = v4 + 3;
  uint64_t v4 = (void *)a1;
  unint64_t v103 = a1 + 32;
  uint64_t v78 = v100;
  do
  {
    if (v77 >= v4[2])
    {
      __break(1u);
      goto LABEL_69;
    }
    unint64_t v79 = v103 + 56 * v77;
    a1 = *(void *)(v79 + 8);
    uint64_t v109 = *(void *)v79;
    int v108 = *(unsigned __int8 *)(v79 + 16);
    uint64_t v11 = *(void *)(v79 + 24);
    uint64_t v2 = *(void *)(v79 + 32);
    uint64_t v3 = *(_OWORD **)(v79 + 40);
    uint64_t v80 = *(void *)(v79 + 48);
    if (!*(void *)(v80 + 16))
    {
      unint64_t v107 = a1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_41:
      *(void *)&long long v110 = v109;
      a1 = v107;
      *((void *)&v110 + 1) = v107;
      LOBYTE(v111) = v108;
      *((void *)&v111 + 1) = v11;
      uint64_t v112 = v2;
      uint64_t v113 = v3;
      *(void *)&long long v114 = v78;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      MetricsPipeline.process(_:using:)((uint64_t)&v110, (uint64_t *)&v114);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release();
      goto LABEL_42;
    }
    sub_19F1DD72C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v81 = v106;
    swift_bridgeObjectRetain();
    uint64_t v82 = v105;
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
    uint64_t v83 = sub_19F1DD78C();
    uint64_t v84 = -1 << *(unsigned char *)(v80 + 32);
    unint64_t v85 = v83 & ~v84;
    if ((*(void *)(v80 + 56 + ((v85 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v85))
    {
      unint64_t v107 = a1;
      uint64_t v99 = *(void *)(v80 + 48);
      uint64_t v86 = (void *)(v99 + 16 * v85);
      BOOL v87 = *v86 == v82 && v86[1] == v81;
      uint64_t v4 = v101;
      uint64_t v78 = v100;
      if (v87) {
        goto LABEL_41;
      }
      uint64_t v98 = v80 + 56;
      if (sub_19F1DD44C()) {
        goto LABEL_41;
      }
      uint64_t v88 = ~v84;
      a1 = (v85 + 1) & v88;
      if ((*(void *)(v98 + ((a1 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a1))
      {
        unint64_t v89 = (void *)(v99 + 16 * a1);
        if (*v89 == v105 && v89[1] == v106) {
          goto LABEL_41;
        }
        char v91 = sub_19F1DD44C();
        uint64_t v92 = v98;
        if (v91) {
          goto LABEL_41;
        }
        for (unint64_t i = a1 + 1; ; unint64_t i = v94 + 1)
        {
          unint64_t v94 = i & v88;
          if (((*(void *)(v92 + (((i & v88) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v88)) & 1) == 0) {
            break;
          }
          uint64_t v95 = (void *)(v99 + 16 * v94);
          if (*v95 == v105 && v95[1] == v106) {
            goto LABEL_41;
          }
          char v97 = sub_19F1DD44C();
          uint64_t v92 = v98;
          if (v97) {
            goto LABEL_41;
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v101;
      uint64_t v78 = v100;
    }
LABEL_42:
    ++v77;
  }
  while (v77 != v104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19EEA9DF8();
}

uint64_t sub_19F10F27C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19F10F2E0(uint64_t *a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  sub_19EFD1A68(*a1);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  return sub_19F10F27C(v3);
}

uint64_t method lookup function for PageMetricsPresenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PageMetricsPresenter);
}

uint64_t dispatch thunk of PageMetricsPresenter.__allocating_init(appMetrics:pipeline:context:data:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_19F10F380()
{
  return swift_weakTakeInit();
}

uint64_t sub_19F10F390()
{
  return swift_weakCopyInit();
}

uint64_t sub_19F10F3A0(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for _AppStateChangeObserver()
{
  return &type metadata for _AppStateChangeObserver;
}

Swift::Int static MonotonicTime.- infix(_:_:)(uint64_t *a1, double a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  double v5 = (double)v4 / *(double *)&qword_1EB392B98 + (double)v3 - a2;
  return MonotonicTime.init(timeInterval:)(v5).seconds;
}

uint64_t static MonotonicTime.< infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = a1[1] < a2[1] && *a1 == *a2;
  return *a1 < *a2 || v2;
}

Swift::Int static MonotonicTime.+ infix(_:_:)(uint64_t *a1, double a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  double v5 = (double)v4 / *(double *)&qword_1EB392B98 + (double)v3 + a2;
  return MonotonicTime.init(timeInterval:)(v5).seconds;
}

Swift::Double __swiftcall MonotonicTime.timeIntervalSince(_:)(JetEngine::MonotonicTime a1)
{
  uint64_t v2 = *(void *)a1.seconds;
  uint64_t v3 = *(void *)(a1.seconds + 8);
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  return (double)v4 / *(double *)&qword_1EB392B98 + (double)v5 - ((double)v3 / *(double *)&qword_1EB392B98 + (double)v2);
}

BOOL static MonotonicTime.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void sub_19F10F5E0()
{
  int64_t v1 = *v0;
  uint64_t v2 = v0[1];
  if (v1 < 0 || v2 < 0)
  {
    sub_19F1A4018((uint64_t)"JetEngine/MonotonicTime.swift", 29, 2, 111, sub_19F10FBE0);
    v1 &= ~(v1 >> 63);
  }
  if (is_mul_ok(v1, 0x3B9ACA00uLL))
  {
    uint64_t v3 = 1000000000 * v1;
    uint64_t v4 = v2 & ~(v2 >> 63);
    int64_t v1 = 1000000000 * v1 + v4;
    if (!__CFADD__(v3, v4))
    {
      if (qword_1E946EFC8 == -1) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  swift_once();
LABEL_7:
  if (!is_mul_ok(v1, HIDWORD(qword_1E946EFC0)))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (!qword_1E946EFC0) {
LABEL_14:
  }
    __break(1u);
}

double MonotonicTime.timeInterval.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  return (double)v2 / *(double *)&qword_1EB392B98 + (double)v1;
}

double static MonotonicTime.nanosecondsPerSecond.getter()
{
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  return *(double *)&qword_1EB392B98;
}

uint64_t sub_19F10F788()
{
  return 0;
}

double static MonotonicTime.timeIntervalSinceNow(_:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  static MonotonicTime.now.getter(&v6);
  __darwin_time_t tv_sec = v6.tv_sec;
  uint64_t tv_nsec = v6.tv_nsec;
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  return (double)tv_nsec / *(double *)&qword_1EB392B98
       + (double)tv_sec
       - ((double)v2 / *(double *)&qword_1EB392B98
        + (double)v1);
}

double static MonotonicTime.+= infix(_:_:)(uint64_t *a1, double a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  MonotonicTime.init(timeInterval:)((double)v5 / *(double *)&qword_1EB392B98 + (double)v4 + a2);
  double result = *(double *)&v7;
  *(_OWORD *)a1 = v7;
  return result;
}

double static MonotonicTime.-= infix(_:_:)(uint64_t *a1, double a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  MonotonicTime.init(timeInterval:)((double)v5 / *(double *)&qword_1EB392B98 + (double)v4 - a2);
  double result = *(double *)&v7;
  *(_OWORD *)a1 = v7;
  return result;
}

uint64_t MonotonicTime.description.getter()
{
  if (qword_1EB392DA0 != -1) {
    swift_once();
  }
  sub_19F1DC58C();
  sub_19F1DBEFC();
  return 0;
}

uint64_t sub_19F10FAF4(void *a1, void *a2)
{
  BOOL v2 = a1[1] < a2[1] && *a1 == *a2;
  return *a1 < *a2 || v2;
}

BOOL sub_19F10FB18(void *a1, void *a2)
{
  BOOL v2 = a2[1] >= a1[1] || *a2 != *a1;
  return *a2 >= *a1 && v2;
}

BOOL sub_19F10FB3C(void *a1, void *a2)
{
  BOOL v2 = a1[1] >= a2[1] || *a1 != *a2;
  return *a1 >= *a2 && v2;
}

uint64_t sub_19F10FB60(void *a1, void *a2)
{
  BOOL v2 = a2[1] < a1[1] && *a2 == *a1;
  return *a2 < *a1 || v2;
}

unint64_t sub_19F10FB8C()
{
  unint64_t result = qword_1E9474EA0[0];
  if (!qword_1E9474EA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9474EA0);
  }
  return result;
}

uint64_t sub_19F10FBE0()
{
  return sub_19F10F788();
}

uint64_t sub_19F10FBE8()
{
  return swift_initClassMetadata2();
}

BOOL sub_19F10FC34(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_19F10FC44()
{
  return sub_19F1DD73C();
}

uint64_t sub_19F10FC6C()
{
  return sub_19F1DD78C();
}

BOOL sub_19F10FCB4(char *a1, char *a2)
{
  return sub_19F10FC34(*a1, *a2);
}

uint64_t sub_19F10FCC0()
{
  return sub_19F10FC6C();
}

uint64_t sub_19F10FCC8()
{
  return sub_19F10FC44();
}

uint64_t sub_19F10FCD0()
{
  return sub_19F1DD78C();
}

uint64_t type metadata accessor for PackageDataBlobFormatReader()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for PackageDataBlobFormatReader.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F10FD44()
{
  return swift_getWitnessTable();
}

unsigned char *_s9JetEngine26PackageDataBlobFormatErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F10FE2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PackageDataBlobFormatError()
{
  return &type metadata for PackageDataBlobFormatError;
}

unint64_t sub_19F10FE68()
{
  unint64_t result = qword_1E9474F28[0];
  if (!qword_1E9474F28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9474F28);
  }
  return result;
}

uint64_t dispatch thunk of JetPackKeyProvider.keyForIdentifier(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t OpaqueIntent.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)(a2 + 40) = xmmword_19F249000;
  JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v16);
  sub_19EEC3ED8((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = v14;
  if (v14)
  {
    uint64_t v5 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v8 = v7;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    sub_19EEC3418((uint64_t)v16);
    if (v8)
    {
      uint64_t result = sub_19EEBD664(a2 + 16, &qword_1E946F7B0);
      long long v10 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(a2 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(a2 + 32) = v10;
      *(void *)(a2 + 48) = *(void *)(a1 + 32);
      *(void *)a2 = v6;
      *(void *)(a2 + 8) = v8;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v13, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v16);
  }
  uint64_t v11 = type metadata accessor for OpaqueIntent() | 0x2000000000000000;
  sub_19EF5B580();
  swift_allocError();
  *(_OWORD *)uint64_t v12 = xmmword_19F25CA80;
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = 0;
  swift_willThrow();
  sub_19EEC3418(a1);
  return sub_19EEBD664(a2 + 16, &qword_1E946F7B0);
}

uint64_t type metadata accessor for OpaqueIntent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t OpaqueIntent.kind.getter()
{
  uint64_t v0 = sub_19EEBCFB4();
  swift_bridgeObjectRetain();
  return v0;
}

JSValue_optional __swiftcall OpaqueIntent.makeOptionalValue(in:)(JSContext in)
{
  sub_19EEC3ED8(v1 + 16, (uint64_t)&v11, &qword_1E946F7B0);
  if (v12 == 1)
  {
    sub_19EEBD664((uint64_t)&v11, &qword_1E946F7B0);
    uint64_t v6 = 0;
  }
  else
  {
    sub_19EEC3ED8((uint64_t)&v11, (uint64_t)&v8, (uint64_t *)&unk_1E946FD20);
    uint64_t v4 = v9;
    if (v9)
    {
      uint64_t v5 = v10;
      __swift_project_boxed_opaque_existential_1(&v8, v9);
      uint64_t v6 = (*(uint64_t (**)(Class, uint64_t, uint64_t))(v5 + 144))(in.super.isa, v4, v5);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v8);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v8, (uint64_t *)&unk_1E946FD20);
      uint64_t v6 = 0;
    }
    sub_19EEC3418((uint64_t)&v11);
  }
  uint64_t v7 = (objc_class *)v6;
  result.value.super.isa = v7;
  result.is_nil = v3;
  return result;
}

JSValue __swiftcall OpaqueIntent.makeValue(in:)(JSContext in)
{
  v3.super.Class isa = (Class)OpaqueIntent.makeOptionalValue(in:)(in);
  if (v3.super.isa) {
    return v3;
  }
  uint64_t v5 = self;
  result.super.Class isa = (Class)objc_msgSend(v5, sel_valueWithNewObjectInContext_, in.super.isa);
  if (result.super.isa)
  {
    Class isa = result.super.isa;
    uint64_t v11 = *v1;
    uint64_t v12 = v1[1];
    swift_bridgeObjectRetain();
    uint64_t v7 = in.super.isa;
    id v8 = objc_msgSend(v5, sel_valueWithObject_inContext_, sub_19F1DD62C(), v7, v11, v12);
    swift_unknownObjectRelease();

    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = (void *)sub_19F1DBD4C();
      [(objc_class *)isa setValue:v9 forProperty:v10];

      return (JSValue)isa;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19F1104EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OpaqueIntent.init(deserializing:using:)(a1, a2);
}

uint64_t sub_19F110510(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40) >= 2uLL)
  {
    return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  }
  return result;
}

uint64_t sub_19F110564(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[5];
  swift_bridgeObjectRetain();
  if (v6 > 1)
  {
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v8;
    (**(void (***)(uint64_t, void *, unint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    long long v7 = *((_OWORD *)v5 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v7;
    *(void *)(a1 + 48) = v5[4];
  }
  return a1;
}

uint64_t sub_19F110610(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t v7 = *(void *)(a2 + 40);
  if (v6 == 1)
  {
    if (v7 >= 2) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  if (v7 == 1)
  {
    sub_19EEC3418(a1 + 16);
    uint64_t v8 = *(void *)(a2 + 48);
    long long v9 = *(_OWORD *)(a2 + 32);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 32) = v9;
    *(void *)(a1 + 48) = v8;
  }
  else
  {
    if (!v6)
    {
      if (v7)
      {
LABEL_10:
        *(void *)(a1 + 40) = v7;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16);
        return a1;
      }
LABEL_12:
      long long v10 = *v5;
      long long v11 = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *uint64_t v4 = v10;
      *(_OWORD *)(a1 + 32) = v11;
      return a1;
    }
    if (!v7)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
      goto LABEL_12;
    }
    __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  }
  return a1;
}

uint64_t sub_19F110720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5 != 1)
  {
    if (*(void *)(a2 + 40) == 1)
    {
      sub_19EEC3418(a1 + 16);
    }
    else if (v5)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
    }
  }
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t CompoundLogger.addLogger(_:)(uint64_t a1)
{
  sub_19EEC4154(a1, (uint64_t)v6);
  BOOL v2 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    BOOL v2 = sub_19F09EB58(0, v2[2] + 1, 1, v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    BOOL v2 = sub_19F09EB58((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t result = sub_19EEBB420(v6, (uint64_t)&v2[5 * v4 + 4]);
  *uint64_t v1 = v2;
  return result;
}

uint64_t CompoundLogger.addingLogger(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v4 = *v2;
  *a2 = v4;
  sub_19EEC4154(a1, (uint64_t)v8);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v4 = sub_19F09EB58(0, v4[2] + 1, 1, v4);
  }
  unint64_t v6 = v4[2];
  unint64_t v5 = v4[3];
  if (v6 >= v5 >> 1) {
    unint64_t v4 = sub_19F09EB58((void *)(v5 > 1), v6 + 1, 1, v4);
  }
  v4[2] = v6 + 1;
  uint64_t result = sub_19EEBB420(v8, (uint64_t)&v4[5 * v6 + 4]);
  *a2 = v4;
  return result;
}

Swift::Void __swiftcall CompoundLogger.log(contentsOf:withLevel:)(Swift::OpaquePointer contentsOf, JetEngine::LogMessageLevel withLevel)
{
  uint64_t v3 = *(void *)(*(void *)v2 + 16);
  if (v3)
  {
    char v5 = *(unsigned char *)withLevel;
    uint64_t v6 = *(void *)v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_19EEC4154(v6, (uint64_t)v10);
      uint64_t v7 = v11;
      uint64_t v8 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      char v9 = v5;
      (*(void (**)(void *, char *, uint64_t, uint64_t))(v8 + 8))(contentsOf._rawValue, &v9, v7, v8);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      v6 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
}

uint64_t DiskJetPackLoader.bundle(from:baseURL:automaticallyCleanUp:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 153) = a4;
  *(void *)(v5 + 176) = a3;
  *(void *)(v5 + 184) = v4;
  *(void *)(v5 + 160) = a1;
  *(void *)(v5 + 168) = a2;
  type metadata accessor for DiskJetPackResourceBundle();
  *(void *)(v5 + 192) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F110A6C, 0, 0);
}

uint64_t sub_19F110A6C()
{
  *(void *)(v0 + 200) = sub_19F110F6C(*(void **)(v0 + 168), *(void *)(v0 + 176), *(unsigned char *)(v0 + 153), *(void *)(v0 + 184));
  return MEMORY[0x1F4188298](sub_19F110AE0, 0, 0);
}

uint64_t sub_19F110AE0()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[24];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_19F110BA0;
  v0[10] = swift_continuation_init();
  uint64_t v3 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v3 + 72) = 1;
  sub_19EE331C0(v3);
  sub_19EEBD664(v3, (uint64_t *)&unk_1E946E640);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F110BA0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 208) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F110D34;
  }
  else
  {
    sub_19EEE0248(*(void *)(v1 + 192), *(void *)(v1 + 160));
    uint64_t v3 = sub_19F110CC8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F110CC8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F110D34()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F110DA0()
{
  uint64_t v0 = sub_19F1DC86C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DC83C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_19F1DBA3C();
  MEMORY[0x1F4188790](v5 - 8);
  sub_19EEA5F34();
  sub_19F1DBA2C();
  sub_19F1DC82C();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_19F1DC8AC();
  qword_1E946E200 = result;
  return result;
}

__n128 DiskJetPackLoader.init(signingPolicy:keyProviders:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  a3[2].n128_u64[1] = (unint64_t)&type metadata for JetPackCompoundKeyProvider;
  a3[3].n128_u64[0] = (unint64_t)&off_1EF138FB8;
  a3[1].n128_u64[0] = a2;
  __n128 result = *a1;
  *a3 = *a1;
  return result;
}

uint64_t sub_19F110F6C(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v13 = &type metadata for SyncTaskScheduler;
  uint64_t v14 = &protocol witness table for SyncTaskScheduler;
  type metadata accessor for BaseObjectGraph();
  uint64_t v8 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v11 = v8;
  swift_retain();
  swift_task_localValuePush();
  sub_19EE3BB70(a1, (uint64_t)v12, a2, a3 & 1, a4, &v11);
  swift_task_localValuePop();
  swift_release();
  uint64_t v9 = v11;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v9;
}

uint64_t assignWithCopy for DiskJetPackLoader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_19EE5A23C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_19EECDEA8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v8)
    {
      *(void *)(a1 + 40) = v8;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16);
      return a1;
    }
LABEL_7:
    long long v9 = *(_OWORD *)(a2 + 16);
    long long v10 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v10;
    return a1;
  }
  if (!v8)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t assignWithTake for DiskJetPackLoader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_19EECDEA8(v4, v5);
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  }
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiskJetPackLoader(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiskJetPackLoader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

uint64_t sub_19F111268()
{
  uint64_t v1 = sub_19F1DB34C();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  unint64_t v5 = (v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_19EECDEA8(*(void *)(v5 + v0 + 8), *(void *)(v5 + v0 + 16));
  if (*(void *)(v5 + v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v5 + v0 + 24);
  }
  return MEMORY[0x1F4186498](v0, v5 + 64, v3 | 7);
}

uint64_t sub_19F111358()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F111390()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_19F1113E4()
{
  sub_19EECDEA8(v0[2], v0[3]);
  if (v0[7]) {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 4));
  }
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_19F111430()
{
}

uint64_t PipelineEntryTask.run()()
{
  sub_19EEDE4BC();
  return swift_retain();
}

void *MapPipelineTask.init(previous:body:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3[2] = *a1;
  v3[3] = a2;
  void v3[4] = a3;
  return v3;
}

uint64_t MapPipelineTask.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t JoinPipelineTask.init(_:_:)(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = *a1;
  *(void *)(v2 + 24) = v3;
  return v2;
}

uint64_t JoinPipelineTask.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t dispatch thunk of PipelineTask.run()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for MapPipelineTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MapPipelineTask);
}

uint64_t dispatch thunk of MapPipelineTask.__allocating_init(previous:body:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for JoinPipelineTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for JoinPipelineTask);
}

uint64_t dispatch thunk of JoinPipelineTask.__allocating_init(_:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of JoinPipelineTask.run()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_19F1115AC()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1115F4()
{
  return sub_19F1DD78C();
}

_DWORD *__swift_memcpy4_4(_DWORD *result, _DWORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SQLiteError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SQLiteError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SQLiteError()
{
  return &type metadata for SQLiteError;
}

uint64_t Models.HTTPAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for NetRequest();
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)&v23);
  v21[0] = v10;
  swift_bridgeObjectRetain();
  ActionMetrics.init(deserializing:using:)((uint64_t)&v23, v21, (uint64_t *)v22);
  if (v3)
  {
    sub_19EEC3418(a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *((void *)&v22[0] + 1);
    uint64_t v19 = *(void *)&v22[0];
    uint64_t v12 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
    uint64_t v25 = v12;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_19F17A6BC(0xD00000000000001FLL, 0x800000019F2699A0, v10);
    swift_bridgeObjectRelease();
    if (v13)
    {
      sub_19EF5D2D4(v13);
      uint64_t v12 = v25;
    }
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9A0);
    *(void *)&long long v23 = v12;
    sub_19EEBDC00(&v23, v22);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21[0] = v10;
    sub_19EE7DA20(v22, 0xD00000000000001FLL, 0x800000019F2699A0, isUniquelyReferenced_nonNull_native);
    uint64_t v15 = v21[0];
    swift_bridgeObjectRelease();
    JSONObject.subscript.getter(0x74736575716572, 0xE700000000000000, (uint64_t)&v23);
    *(void *)&v22[0] = v15;
    NetRequest.init(deserializing:using:)((uint64_t)&v23, (uint64_t *)v22, v9);
    JSONObject.subscript.getter(0x4173736563637573, 0xED00006E6F697463, (uint64_t)v22);
    v21[0] = v10;
    static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)v22, v21, (uint64_t)&v23);
    sub_19EEC3418((uint64_t)v22);
    JSONObject.subscript.getter(0x416572756C696166, 0xED00006E6F697463, (uint64_t)v21);
    uint64_t v20 = v10;
    static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)v21, &v20, (uint64_t)v22);
    sub_19EEC3418(a1);
    sub_19EEC3418((uint64_t)v21);
    swift_bridgeObjectRelease();
    Swift::String v17 = (int *)type metadata accessor for Models.HTTPAction();
    sub_19EE5C4C8((uint64_t)v9, (uint64_t)a3 + v17[5]);
    *a3 = v19;
    a3[1] = v11;
    sub_19F1127A4((uint64_t)&v23, (uint64_t)a3 + v17[6]);
    return sub_19F1127A4((uint64_t)v22, (uint64_t)a3 + v17[7]);
  }
}

uint64_t Models.HTTPAction.actionMetrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPAction.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Models.HTTPAction() + 20);
  return sub_19EE5C360(v3, a1);
}

uint64_t Models.HTTPAction.successAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Models.HTTPAction() + 24);
  return sub_19F11280C(v3, a1);
}

uint64_t Models.HTTPAction.failureAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Models.HTTPAction() + 28);
  return sub_19F11280C(v3, a1);
}

uint64_t sub_19F111AA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return Models.HTTPAction.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_19F111AB8()
{
  uint64_t result = 0x654D6E6F69746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74736575716572;
      break;
    case 2:
      uint64_t result = 0x4173736563637573;
      break;
    case 3:
      uint64_t result = 0x416572756C696166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F111B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F113874(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F111B84(uint64_t a1)
{
  unint64_t v2 = sub_19F112874();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F111BC0(uint64_t a1)
{
  unint64_t v2 = sub_19F112874();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Models.HTTPAction.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  Swift::String v39 = a2;
  uint64_t v4 = type metadata accessor for NetRequest();
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474FB8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  char v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_19F112874();
  sub_19F1DD8AC();
  if (v2)
  {
    uint64_t v12 = v40;
  }
  else
  {
    uint64_t v37 = v6;
    uint64_t v38 = v8;
    v49[0] = 0;
    sub_19F046530();
    sub_19F1DD17C();
    uint64_t v35 = v7;
    if (v50[0]) {
      uint64_t v14 = v50[0];
    }
    else {
      uint64_t v14 = MEMORY[0x1E4FBC860];
    }
    if (v50[0]) {
      uint64_t v15 = v50[1];
    }
    else {
      uint64_t v15 = MEMORY[0x1E4FBC868];
    }
    uint64_t v12 = v40;
    BOOL v36 = v10;
    __swift_project_boxed_opaque_existential_1(v40, v40[3]);
    uint64_t v16 = sub_19F1DD89C();
    uint64_t v34 = 0x800000019F26A630;
    sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v16);
    swift_bridgeObjectRelease();
    v49[0] = 2;
    decodeActionModel<A, B>(using:container:forKey:)((uint64_t)v50);
    uint64_t v32 = v15;
    uint64_t v33 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    uint64_t v17 = sub_19F1DD89C();
    sub_19F0D720C(0xD000000000000023, v34, v17);
    swift_bridgeObjectRelease();
    LOBYTE(v48[0]) = 3;
    decodeActionModel<A, B>(using:container:forKey:)((uint64_t)v49);
    LOBYTE(v43) = 1;
    uint64_t v18 = v35;
    sub_19F1DD11C();
    uint64_t v31 = v47;
    uint64_t v34 = v46;
    v30[1] = __swift_project_boxed_opaque_existential_1(v45, v46);
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    sub_19F1DD89C();
    uint64_t v19 = swift_bridgeObjectRetain();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v19);
    uint64_t v20 = v43;
    uint64_t v21 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
    uint64_t v51 = v21;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_19F17A6BC(0xD00000000000001FLL, 0x800000019F2699A0, v20);
    swift_bridgeObjectRelease();
    if (v22)
    {
      sub_19EF5D2D4(v22);
      uint64_t v21 = v51;
    }
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9A0);
    *(void *)&long long v43 = v21;
    sub_19EEBDC00(&v43, v42);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v41 = v20;
    sub_19EE7DA20(v42, 0xD00000000000001FLL, 0x800000019F2699A0, isUniquelyReferenced_nonNull_native);
    uint64_t v24 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v43 = v24;
    uint64_t v25 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0((uint64_t *)&v43);
    Decoder.withUserInfo(_:)(v25, v34, v31, v48);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    sub_19EEC4154((uint64_t)v48, (uint64_t)v45);
    uint64_t v26 = (uint64_t)v37;
    NetRequest.init(from:)(v45, (uint64_t)v37);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v18);
    unint64_t v27 = (int *)type metadata accessor for Models.HTTPAction();
    uint64_t v28 = v39;
    sub_19EE5C4C8(v26, (uint64_t)v39 + v27[5]);
    sub_19F1127A4((uint64_t)v50, (uint64_t)v28 + v27[6]);
    sub_19F1127A4((uint64_t)v49, (uint64_t)v28 + v27[7]);
    uint64_t v29 = v32;
    *uint64_t v28 = v33;
    v28[1] = v29;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
}

uint64_t Models.HTTPAction.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474FC8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v26 = sub_19F112874();
  sub_19F1DD8FC();
  unint64_t v27 = v1;
  long long v33 = *v1;
  LOBYTE(v30[0]) = 0;
  sub_19F046118();
  sub_19F1DD2AC();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v24 = v5;
  uint64_t v25 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_19F1DD8EC();
  uint64_t v23 = 0xD000000000000023;
  sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for Models.HTTPAction();
  uint64_t v11 = (uint64_t)v27 + *(int *)(v10 + 24);
  LOBYTE(v33) = 2;
  encodeActionModel<A, B>(_:using:container:forKey:)(v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_19F1DD8EC();
  sub_19F0D720C(v23, 0x800000019F26A630, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t)v27 + *(int *)(v10 + 28);
  LOBYTE(v33) = 3;
  encodeActionModel<A, B>(_:using:container:forKey:)(v13);
  unint64_t v26 = v10;
  LOBYTE(v33) = 1;
  sub_19F1DD20C();
  uint64_t v23 = v32;
  uint64_t v14 = v31;
  uint64_t v22 = __swift_project_boxed_opaque_existential_1(v30, v31);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8EC();
  uint64_t v15 = swift_bridgeObjectRetain();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v15);
  uint64_t v16 = v33;
  uint64_t v17 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
  uint64_t v35 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_19F17A6BC(0xD00000000000001FLL, 0x800000019F2699A0, v16);
  swift_bridgeObjectRelease();
  if (v18)
  {
    sub_19EF5D2D4(v18);
    uint64_t v17 = v35;
  }
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9A0);
  *(void *)&long long v33 = v17;
  sub_19EEBDC00(&v33, v29);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = v16;
  sub_19EE7DA20(v29, 0xD00000000000001FLL, 0x800000019F2699A0, isUniquelyReferenced_nonNull_native);
  uint64_t v20 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v33 = v20;
  uint64_t v21 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0((uint64_t *)&v33);
  sub_19F13D4CC(v21, v14, v23, (uint64_t **)&v33);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  NetRequest.encode(to:)(&v33);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v7, v25);
}

uint64_t sub_19F112728@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Models.HTTPAction.init(from:)(a1, a2);
}

uint64_t sub_19F112740(void *a1)
{
  return Models.HTTPAction.encode(to:)(a1);
}

uint64_t type metadata accessor for Models.HTTPAction()
{
  uint64_t result = qword_1E946D418;
  if (!qword_1E946D418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_19F1127A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946D0B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F11280C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946D0B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_19F112874()
{
  unint64_t result = qword_1E9474FC0;
  if (!qword_1E9474FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474FC0);
  }
  return result;
}

uint64_t sub_19F1128C8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946D0B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *_s10HTTPActionVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_19F1DB34C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = (int *)type metadata accessor for NetRequest();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v18 = *(void *)v16;
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = v18;
    *((void *)v15 + 1) = v17;
    *(void *)&v9[v13[6]] = *(void *)&v10[v13[6]];
    *(void *)&v9[v13[7]] = *(void *)&v10[v13[7]];
    *(void *)&v9[v13[8]] = *(void *)&v10[v13[8]];
    uint64_t v19 = v13[9];
    uint64_t v20 = &v9[v19];
    uint64_t v21 = &v10[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    v20[16] = v21[16];
    uint64_t v23 = v13[10];
    uint64_t v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    *(void *)&v9[v13[11]] = *(void *)&v10[v13[11]];
    uint64_t v27 = a3[6];
    uint64_t v28 = (char *)v7 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = *(uint64_t *)((char *)a2 + v27 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      uint64_t v31 = *((void *)v29 + 4);
      *((void *)v28 + 3) = v30;
      *((void *)v28 + 4) = v31;
      (**(void (***)(char *, char *, uint64_t))(v30 - 8))(v28, v29, v30);
    }
    else
    {
      long long v32 = *((_OWORD *)v29 + 1);
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v32;
      *((void *)v28 + 4) = *((void *)v29 + 4);
    }
    uint64_t v33 = a3[7];
    uint64_t v34 = (char *)v7 + v33;
    uint64_t v35 = (char *)a2 + v33;
    uint64_t v36 = *(uint64_t *)((char *)a2 + v33 + 24);
    if (v36)
    {
      uint64_t v37 = *((void *)v35 + 4);
      *((void *)v34 + 3) = v36;
      *((void *)v34 + 4) = v37;
      (**(void (***)(void))(v36 - 8))();
    }
    else
    {
      long long v38 = *((_OWORD *)v35 + 1);
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v38;
      *((void *)v34 + 4) = *((void *)v35 + 4);
    }
  }
  return v7;
}

uint64_t _s10HTTPActionVwxx(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for NetRequest();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[6];
  if (*(void *)(v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v6);
  }
  uint64_t result = a1 + a2[7];
  if (*(void *)(result + 24))
  {
    return __swift_destroy_boxed_opaque_existential_1Tm(result);
  }
  return result;
}

void *_s10HTTPActionVwcp(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_19F1DB34C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for NetRequest();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v8[v13];
  uint64_t v15 = &v9[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;
  *(void *)&v8[v12[6]] = *(void *)&v9[v12[6]];
  *(void *)&v8[v12[7]] = *(void *)&v9[v12[7]];
  *(void *)&v8[v12[8]] = *(void *)&v9[v12[8]];
  uint64_t v18 = v12[9];
  uint64_t v19 = &v8[v18];
  uint64_t v20 = &v9[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  v19[16] = v20[16];
  uint64_t v22 = v12[10];
  uint64_t v23 = &v8[v22];
  uint64_t v24 = &v9[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  *(void *)&v8[v12[11]] = *(void *)&v9[v12[11]];
  uint64_t v26 = a3[6];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *(void *)((char *)a2 + v26 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29)
  {
    uint64_t v30 = *((void *)v28 + 4);
    *((void *)v27 + 3) = v29;
    *((void *)v27 + 4) = v30;
    (**(void (***)(char *, char *, uint64_t))(v29 - 8))(v27, v28, v29);
  }
  else
  {
    long long v31 = *((_OWORD *)v28 + 1);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v31;
    *((void *)v27 + 4) = *((void *)v28 + 4);
  }
  uint64_t v32 = a3[7];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)((char *)a2 + v32 + 24);
  if (v35)
  {
    uint64_t v36 = *((void *)v34 + 4);
    *((void *)v33 + 3) = v35;
    *((void *)v33 + 4) = v36;
    (**(void (***)(void))(v35 - 8))();
  }
  else
  {
    long long v37 = *((_OWORD *)v34 + 1);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *((_OWORD *)v33 + 1) = v37;
    *((void *)v33 + 4) = *((void *)v34 + 4);
  }
  return a1;
}

void *_s10HTTPActionVwca(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for NetRequest();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[8]] = *(void *)&v8[v10[8]];
  uint64_t v14 = v10[9];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  *(void *)uint64_t v15 = *(void *)&v8[v14];
  *((void *)v15 + 1) = *(void *)&v8[v14 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[16] = v16[16];
  uint64_t v17 = v10[10];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[6];
  uint64_t v21 = (uint64_t)a1 + v20;
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = *(void *)((char *)a2 + v20 + 24);
  if (*(void *)((char *)a1 + v20 + 24))
  {
    if (v23)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v21, v22);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(v21);
  }
  else if (v23)
  {
    *(void *)(v21 + 24) = v23;
    *(void *)(v21 + 32) = v22[4];
    (**(void (***)(uint64_t, char *))(v23 - 8))(v21, (char *)v22);
    goto LABEL_8;
  }
  long long v24 = *(_OWORD *)v22;
  long long v25 = *((_OWORD *)v22 + 1);
  *(void *)(v21 + 32) = v22[4];
  *(_OWORD *)uint64_t v21 = v24;
  *(_OWORD *)(v21 + 16) = v25;
LABEL_8:
  uint64_t v26 = a3[7];
  uint64_t v27 = (uint64_t)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *((void *)v28 + 3);
  if (!*(void *)((char *)a1 + v26 + 24))
  {
    if (v29)
    {
      *(void *)(v27 + 24) = v29;
      *(void *)(v27 + 32) = *((void *)v28 + 4);
      (**(void (***)(uint64_t, char *))(v29 - 8))(v27, v28);
      return a1;
    }
LABEL_14:
    long long v30 = *(_OWORD *)v28;
    long long v31 = *((_OWORD *)v28 + 1);
    *(void *)(v27 + 32) = *((void *)v28 + 4);
    *(_OWORD *)uint64_t v27 = v30;
    *(_OWORD *)(v27 + 16) = v31;
    return a1;
  }
  if (!v29)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v27);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v27, (uint64_t *)v28);
  return a1;
}

_OWORD *_s10HTTPActionVwtk(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for NetRequest();
  *(_OWORD *)&v7[v10[5]] = *(_OWORD *)&v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  *(void *)&v7[v10[8]] = *(void *)&v8[v10[8]];
  uint64_t v11 = v10[9];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  v12[16] = v13[16];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)&v7[v10[10]] = *(_OWORD *)&v8[v10[10]];
  *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((void *)v16 + 4) = *((void *)v17 + 4);
  uint64_t v19 = (char *)a1 + v15;
  uint64_t v20 = (char *)a2 + v15;
  *((void *)v19 + 4) = *((void *)v20 + 4);
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  return a1;
}

void *_s10HTTPActionVwta(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for NetRequest();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[8]] = *(void *)&v8[v10[8]];
  uint64_t v16 = v10[9];
  uint64_t v17 = &v7[v16];
  long long v18 = &v8[v16];
  uint64_t v19 = *(void *)&v8[v16 + 8];
  *(void *)uint64_t v17 = *(void *)&v8[v16];
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v17[16] = v18[16];
  uint64_t v20 = v10[10];
  long long v21 = &v7[v20];
  uint64_t v22 = &v8[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)long long v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[6];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  if (*(void *)((char *)a1 + v25 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v26);
  }
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(void *)(v26 + 32) = *((void *)v27 + 4);
  uint64_t v29 = a3[7];
  long long v30 = (char *)a1 + v29;
  if (*(void *)((char *)a1 + v29 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1 + v29);
  }
  long long v31 = *(_OWORD *)((char *)a2 + v29 + 16);
  *(_OWORD *)long long v30 = *(_OWORD *)((char *)a2 + v29);
  *((_OWORD *)v30 + 1) = v31;
  *((void *)v30 + 4) = *(void *)((char *)a2 + v29 + 32);
  return a1;
}

uint64_t _s10HTTPActionVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F113458);
}

uint64_t sub_19F113458(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for NetRequest();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t _s10HTTPActionVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F11351C);
}

void *sub_19F11351C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for NetRequest();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_19F1135C4()
{
  uint64_t result = type metadata accessor for NetRequest();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s10HTTPActionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F113734);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10HTTPActionV10CodingKeysOMa()
{
  return &_s10HTTPActionV10CodingKeysON;
}

unint64_t sub_19F113770()
{
  unint64_t result = qword_1E9474FD0;
  if (!qword_1E9474FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474FD0);
  }
  return result;
}

unint64_t sub_19F1137C8()
{
  unint64_t result = qword_1E9474FD8;
  if (!qword_1E9474FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474FD8);
  }
  return result;
}

unint64_t sub_19F113820()
{
  unint64_t result = qword_1E9474FE0;
  if (!qword_1E9474FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9474FE0);
  }
  return result;
}

uint64_t sub_19F113874(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4173736563637573 && a2 == 0xED00006E6F697463 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x416572756C696166 && a2 == 0xED00006E6F697463)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t MapStateCenter.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  MapStateCenter.init()();
  return v0;
}

uint64_t MapStateCenter.init()()
{
  type metadata accessor for StatePath();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946EFD8);
  swift_getTupleTypeMetadata2();
  sub_19F1DC1CC();
  swift_getWitnessTable();
  *(void *)(v0 + 16) = sub_19F1DBBAC();
  return v0;
}

uint64_t MapStateCenter.Transaction.changeState<A>(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a5 + 8);
  void v10[3] = a4;
  v10[4] = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_2Tm, a2, a4);
  char v11 = 0;
  swift_bridgeObjectRetain();
  type metadata accessor for MapStateCenter.Transaction.Change();
  sub_19F1DC27C();
  return sub_19F1DC23C();
}

uint64_t MapStateCenter.Transaction.removeState(at:recursively:)()
{
  return sub_19F1DC23C();
}

Swift::Void __swiftcall MapStateCenter.Transaction.removeAllState()()
{
  type metadata accessor for MapStateCenter.Transaction.Change();
  sub_19F1DD30C();
  swift_allocObject();
  uint64_t v1 = sub_19F1DC18C();
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(unsigned char *)(v2 + 48) = 3;
  uint64_t v3 = sub_19EFF4808(v1);
  swift_bridgeObjectRelease();
  uint64_t *v0 = v3;
}

uint64_t sub_19F113D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MapStateCenter.Transaction.changeState<A>(at:to:)(a1, a2, a5, a3, a4);
}

uint64_t MapStateCenter.currentState<A>(at:)@<X0>(unint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v42 = *v5;
  uint64_t v10 = v42;
  *(void *)&long long v43 = sub_19F1DCAAC();
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v12 = (char *)&v39 - v11;
  unint64_t v13 = *a1;
  swift_beginAccess();
  uint64_t v14 = v5[2];
  v44[0] = v13;
  uint64_t v15 = type metadata accessor for StatePath();
  swift_bridgeObjectRetain();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFD8);
  uint64_t v48 = *(void *)(v10 + 104);
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x19F3C5F50](&v49, v44, v14, v15, v16, WitnessTable);
  swift_bridgeObjectRelease();
  if (*((void *)&v50 + 1))
  {
    uint64_t v39 = a3;
    uint64_t v40 = a4;
    sub_19EEBB420(&v49, (uint64_t)v51);
    swift_endAccess();
    sub_19EEC4154((uint64_t)v51, (uint64_t)&v49);
    int v18 = swift_dynamicCast();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, unint64_t))(*(void *)(a2 - 8) + 56);
    if (v18)
    {
      uint64_t v20 = *(void *)(a2 - 8);
      v19(v12, 0, 1, a2);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
      return (*(uint64_t (**)(uint64_t, char *, unint64_t))(v20 + 32))(v40, v12, a2);
    }
    else
    {
      v19(v12, 1, 1, a2);
      (*(void (**)(char *, void))(v41 + 8))(v12, v43);
      unint64_t v22 = a2;
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v23 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_19F24DBB0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v25 = swift_allocObject();
      long long v43 = xmmword_19F24EAD0;
      *(_OWORD *)(v25 + 16) = xmmword_19F24EAD0;
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      uint64_t MetatypeMetadata = MEMORY[0x1E4FBB1A0];
      unint64_t v45 = 0x7461206574617453;
      unint64_t v46 = 0xE800000000000000;
      long long v49 = 0u;
      long long v50 = 0u;
      id v27 = v23;
      sub_19EEC3E70((uint64_t)&v45, (uint64_t)&v49);
      *(unsigned char *)(v25 + 64) = 0;
      long long v28 = v50;
      *(_OWORD *)(v25 + 32) = v49;
      *(_OWORD *)(v25 + 48) = v28;
      *(void *)(v24 + 32) = v25;
      uint64_t MetatypeMetadata = v15;
      unint64_t v45 = v13;
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v43;
      sub_19EEBCD00((uint64_t)&v45, (uint64_t)v44);
      long long v49 = 0u;
      long long v50 = 0u;
      swift_bridgeObjectRetain();
      sub_19EEC3E70((uint64_t)v44, (uint64_t)&v49);
      *(unsigned char *)(v29 + 64) = 0;
      long long v30 = v50;
      *(_OWORD *)(v29 + 32) = v49;
      *(_OWORD *)(v29 + 48) = v30;
      *(void *)(v24 + 40) = v29;
      sub_19EEBD664((uint64_t)&v45, &qword_1EB393260);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v43;
      uint64_t MetatypeMetadata = v26;
      unint64_t v45 = 28265;
      unint64_t v46 = 0xE200000000000000;
      long long v49 = 0u;
      long long v50 = 0u;
      sub_19EEC3E70((uint64_t)&v45, (uint64_t)&v49);
      *(unsigned char *)(v31 + 64) = 0;
      long long v32 = v50;
      *(_OWORD *)(v31 + 32) = v49;
      *(_OWORD *)(v31 + 48) = v32;
      *(void *)(v24 + 48) = v31;
      uint64_t MetatypeMetadata = v42;
      unint64_t v45 = (unint64_t)v5;
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v43;
      sub_19EEBCD00((uint64_t)&v45, (uint64_t)v44);
      long long v49 = 0u;
      long long v50 = 0u;
      swift_retain();
      sub_19EEC3E70((uint64_t)v44, (uint64_t)&v49);
      *(unsigned char *)(v33 + 64) = 0;
      long long v34 = v50;
      *(_OWORD *)(v33 + 32) = v49;
      *(_OWORD *)(v33 + 48) = v34;
      *(void *)(v24 + 56) = v33;
      sub_19EEBD664((uint64_t)&v45, &qword_1EB393260);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = v43;
      uint64_t MetatypeMetadata = v26;
      unint64_t v45 = 0xD000000000000014;
      unint64_t v46 = 0x800000019F272FC0;
      long long v49 = 0u;
      long long v50 = 0u;
      sub_19EEC3E70((uint64_t)&v45, (uint64_t)&v49);
      *(unsigned char *)(v35 + 64) = 0;
      long long v36 = v50;
      *(_OWORD *)(v35 + 32) = v49;
      *(_OWORD *)(v35 + 48) = v36;
      *(void *)(v24 + 64) = v35;
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      unint64_t v45 = v22;
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v43;
      sub_19EEBCD00((uint64_t)&v45, (uint64_t)v44);
      long long v49 = 0u;
      long long v50 = 0u;
      sub_19EEC3E70((uint64_t)v44, (uint64_t)&v49);
      *(unsigned char *)(v37 + 64) = 0;
      long long v38 = v50;
      *(_OWORD *)(v37 + 32) = v49;
      *(_OWORD *)(v37 + 48) = v38;
      *(void *)(v24 + 72) = v37;
      sub_19EEBD664((uint64_t)&v45, &qword_1EB393260);
      *(void *)&long long v49 = v27;
      LOBYTE(v45) = 3;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v24, (JetEngine::LogMessageLevel)&v45);

      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t))(v39 + 24))(v22);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v49, qword_1E946E778);
    swift_endAccess();
    return (*(uint64_t (**)(unint64_t, uint64_t))(a3 + 24))(a2, a3);
  }
}

uint64_t MapStateCenter.beginTransaction()@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MapStateCenter.Transaction.Change();
  uint64_t result = sub_19F1DC1CC();
  *a1 = result;
  return result;
}

uint64_t MapStateCenter.commit(_:)(uint64_t *a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *a1;
  uint64_t v38 = *a1;
  uint64_t v5 = *(void *)(v2 + 96);
  uint64_t v6 = *(void *)(v2 + 104);
  long long v34 = *(_OWORD *)(v3 + 80);
  uint64_t v35 = v5;
  uint64_t v36 = v6;
  uint64_t v7 = type metadata accessor for MapStateCenter.Transaction.Change();
  sub_19F1DC27C();
  swift_getWitnessTable();
  uint64_t result = sub_19F1DC6AC();
  if ((result & 1) == 0)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    if (MEMORY[0x19F3C6550](v9, v7))
    {
      uint64_t v31 = v1 + 2;
      swift_beginAccess();
      uint64_t v10 = 0;
      uint64_t v11 = v4 + 32;
      uint64_t v29 = v4;
      uint64_t v27 = v4 + 32;
      uint64_t v28 = v7;
      while (1)
      {
        char v12 = sub_19F1DC1FC();
        sub_19F1DC19C();
        if ((v12 & 1) == 0) {
          goto LABEL_37;
        }
        if (__OFADD__(v10, 1)) {
          goto LABEL_38;
        }
        uint64_t v30 = v10 + 1;
        (*(void (**)(long long *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(&v34, v11 + 56 * v10, v7);
        switch(v37)
        {
          case 1:
            swift_beginAccess();
            type metadata accessor for StatePath();
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946EFD8);
            v32[5] = v6;
            swift_getWitnessTable();
            sub_19F1DBC0C();
            sub_19F1DBB5C();
            swift_endAccess();
            sub_19EEBD664((uint64_t)v33, qword_1E946E778);
            swift_bridgeObjectRelease();
            goto LABEL_5;
          case 2:
            uint64_t v13 = v34;
            uint64_t v14 = *v31;
            type metadata accessor for StatePath();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFD8);
            uint64_t v15 = v6;
            v33[5] = v6;
            swift_getWitnessTable();
            nullsub_1(v14);
            swift_bridgeObjectRetain();
            sub_19F1DCFAC();
            uint64_t v17 = v38;
            uint64_t v16 = v39;
            uint64_t v18 = v41;
            unint64_t v19 = v42;
            int64_t v20 = (unint64_t)(v40 + 64) >> 6;
            break;
          case 3:
            swift_beginAccess();
            type metadata accessor for StatePath();
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946EFD8);
            v33[6] = v6;
            swift_getWitnessTable();
            sub_19F1DBC0C();
            sub_19F1DBBFC();
            swift_endAccess();
            goto LABEL_5;
          default:
            sub_19EEBB420((long long *)((char *)&v34 + 8), (uint64_t)v33);
            sub_19EEC4154((uint64_t)v33, (uint64_t)v32);
            swift_beginAccess();
            type metadata accessor for StatePath();
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946EFD8);
            swift_getWitnessTable();
            sub_19F1DBC0C();
            sub_19F1DBC6C();
            swift_endAccess();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
            goto LABEL_5;
        }
        while (1)
        {
          if (v19)
          {
            unint64_t v21 = __clz(__rbit64(v19));
            v19 &= v19 - 1;
            unint64_t v22 = v21 | (v18 << 6);
            goto LABEL_30;
          }
          int64_t v23 = v18 + 1;
          if (__OFADD__(v18, 1))
          {
            __break(1u);
LABEL_37:
            sub_19F1DCD5C();
            __break(1u);
LABEL_38:
            __break(1u);
            JUMPOUT(0x19F114A80);
          }
          if (v23 >= v20) {
            goto LABEL_33;
          }
          unint64_t v24 = *(void *)(v16 + 8 * v23);
          uint64_t v25 = v18 + 1;
          if (!v24)
          {
            uint64_t v25 = v18 + 2;
            if (v18 + 2 >= v20) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v16 + 8 * v25);
            if (!v24)
            {
              uint64_t v25 = v18 + 3;
              if (v18 + 3 >= v20) {
                goto LABEL_33;
              }
              unint64_t v24 = *(void *)(v16 + 8 * v25);
              if (!v24)
              {
                uint64_t v25 = v18 + 4;
                if (v18 + 4 >= v20) {
                  goto LABEL_33;
                }
                unint64_t v24 = *(void *)(v16 + 8 * v25);
                if (!v24) {
                  break;
                }
              }
            }
          }
LABEL_29:
          unint64_t v19 = (v24 - 1) & v24;
          unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
          uint64_t v18 = v25;
LABEL_30:
          v33[0] = *(void *)(*(void *)(v17 + 48) + 8 * v22);
          v32[0] = v13;
          swift_bridgeObjectRetain();
          if (StatePath<A>.starts(with:)())
          {
            swift_beginAccess();
            sub_19F1DBC0C();
            sub_19F1DBB5C();
            swift_endAccess();
            sub_19EEBD664((uint64_t)v33, qword_1E946E778);
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v25 = v18 + 5;
        if (v18 + 5 < v20) {
          break;
        }
LABEL_33:
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v6 = v15;
        uint64_t v7 = v28;
        uint64_t v4 = v29;
        uint64_t v11 = v27;
LABEL_5:
        uint64_t v10 = v30;
        if (v30 == MEMORY[0x19F3C6550](v4, v7)) {
          return swift_bridgeObjectRelease();
        }
      }
      unint64_t v24 = *(void *)(v16 + 8 * v25);
      if (!v24)
      {
        uint64_t v26 = v18 + 6;
        do
        {
          if (v20 == v26) {
            goto LABEL_33;
          }
          unint64_t v24 = *(void *)(v16 + 8 * v26++);
        }
        while (!v24);
        uint64_t v25 = v26 - 1;
      }
      goto LABEL_29;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t MapStateCenter.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MapStateCenter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MapStateCenter.Transaction.Change()
{
  return swift_getGenericMetadata();
}

uint64_t sub_19F114B0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F114B28()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MapStateCenter()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for MapStateCenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MapStateCenter);
}

uint64_t dispatch thunk of MapStateCenter.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t type metadata accessor for MapStateCenter.Transaction()
{
  return swift_getGenericMetadata();
}

uint64_t TransientPreferences.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(void *)(v0 + 24) = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  return v0;
}

uint64_t TransientPreferences.init()()
{
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(void *)(v0 + 24) = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  return v0;
}

id TransientPreferences.subscript.getter@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void **)(v3 + 16);
  objc_msgSend(v6, sel_lock);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  uint64_t v11 = v10;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v3 + 24);
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_19EEBD400(v9, v11), (v14 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v12 + 56) + 32 * v13, (uint64_t)a2);
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  return objc_msgSend(v6, sel_unlock);
}

uint64_t sub_19F114D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_19EEC4154(a3, (uint64_t)v14);
  sub_19EEBCD00(a1, (uint64_t)v13);
  uint64_t v5 = *(void **)(*(void *)a2 + 16);
  objc_msgSend(v5, sel_lock);
  uint64_t v6 = v15;
  uint64_t v7 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  uint64_t v10 = v9;
  sub_19EEBCD00((uint64_t)v13, (uint64_t)v12);
  swift_beginAccess();
  sub_19EE7D94C((uint64_t)v12, v8, v10);
  swift_endAccess();
  objc_msgSend(v5, sel_unlock);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return sub_19EEBCB4C((uint64_t)v13);
}

uint64_t TransientPreferences.subscript.setter(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void **)(v2 + 16);
  objc_msgSend(v5, sel_lock);
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  uint64_t v10 = v9;
  sub_19EEBCD00(a1, (uint64_t)v12);
  swift_beginAccess();
  sub_19EE7D94C((uint64_t)v12, v8, v10);
  swift_endAccess();
  objc_msgSend(v5, sel_unlock);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);
  return sub_19EEBCB4C(a1);
}

void (*TransientPreferences.subscript.modify(void *a1, void *a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = (char *)malloc(0xD0uLL);
  *a1 = v5;
  uint64_t v6 = v5 + 112;
  *((void *)v5 + 25) = v2;
  sub_19EEC4154((uint64_t)a2, (uint64_t)v5);
  TransientPreferences.subscript.getter(a2, v6);
  return sub_19F114FD4;
}

void sub_19F114FD4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1 + 40);
  uint64_t v4 = *a1 + 80;
  uint64_t v5 = *a1 + 112;
  if (a2)
  {
    uint64_t v6 = *(void *)(v2 + 200);
    sub_19EEBCD00(*a1 + 112, v4);
    sub_19EEBB420((long long *)v2, (uint64_t)v3);
    uint64_t v7 = *(void **)(v6 + 16);
    objc_msgSend(v7, sel_lock);
    uint64_t v19 = v5;
    uint64_t v8 = *(void *)(v2 + 64);
    uint64_t v9 = *(void *)(v2 + 72);
    __swift_project_boxed_opaque_existential_1(v3, v8);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    uint64_t v12 = v11;
    sub_19EEBCD00(v4, v2 + 144);
    swift_beginAccess();
    uint64_t v5 = v19;
    sub_19EE7D94C(v2 + 144, v10, v12);
    swift_endAccess();
    objc_msgSend(v7, sel_unlock);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
    sub_19EEBCB4C(v4);
  }
  else
  {
    unint64_t v13 = *(void **)(*(void *)(v2 + 200) + 16);
    objc_msgSend(v13, sel_lock);
    uint64_t v14 = *(void *)(v2 + 24);
    uint64_t v15 = *(void *)(v2 + 32);
    __swift_project_boxed_opaque_existential_1((void *)v2, v14);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
    uint64_t v18 = v17;
    sub_19EEBCD00(v5, (uint64_t)v3);
    swift_beginAccess();
    sub_19EE7D94C((uint64_t)v3, v16, v18);
    swift_endAccess();
    objc_msgSend(v13, sel_unlock);
    __swift_destroy_boxed_opaque_existential_1Tm(v2);
  }
  sub_19EEBCB4C(v5);
  free((void *)v2);
}

uint64_t TransientPreferences.removeValue(forKey:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v2 + 16);
  objc_msgSend(v4, sel_lock);
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  uint64_t v9 = v8;
  swift_beginAccess();
  sub_19EF6B168(v7, v9, v11);
  swift_endAccess();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_unlock);
  return sub_19EEBCB4C((uint64_t)v11);
}

uint64_t TransientPreferences.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TransientPreferences.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19F115318(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void **)(v2 + 16);
  objc_msgSend(v5, sel_lock);
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  uint64_t v10 = v9;
  sub_19EEBCD00(a1, (uint64_t)v12);
  swift_beginAccess();
  sub_19EE7D94C((uint64_t)v12, v8, v10);
  swift_endAccess();
  objc_msgSend(v5, sel_unlock);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);
  return sub_19EEBCB4C(a1);
}

void (*sub_19F11540C(void *a1, void *a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v4[4] = TransientPreferences.subscript.modify(v4, a2);
  return sub_19EF4E308;
}

uint64_t sub_19F11546C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v2 + 16);
  objc_msgSend(v4, sel_lock);
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  uint64_t v9 = v8;
  swift_beginAccess();
  sub_19EF6B168(v7, v9, v11);
  swift_endAccess();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_unlock);
  return sub_19EEBCB4C((uint64_t)v11);
}

id sub_19F115548@<X0>(void *a1@<X1>, _OWORD *a2@<X8>)
{
  return TransientPreferences.subscript.getter(a1, a2);
}

uint64_t sub_19F115574()
{
  return 0;
}

uint64_t type metadata accessor for TransientPreferences()
{
  return self;
}

uint64_t method lookup function for TransientPreferences(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TransientPreferences);
}

uint64_t dispatch thunk of TransientPreferences.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EventObserver.isValid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventObserver.notify(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_19F1155FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19EEBF040(a1, (uint64_t)v11);
  uint64_t v3 = v12;
  if (v12)
  {
    uint64_t v4 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
    uint64_t v7 = v6;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    if (v7)
    {
      *a2 = v5;
      a2[1] = v7;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v11, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EF5B580();
  swift_allocError();
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *uint64_t v10 = &type metadata for JSONObject;
  v10[1] = v9;
  v10[2] = 0;
  void v10[3] = 0;
  return swift_willThrow();
}

void *sub_19F1156E8(void *a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_19F1DBD4C();
  id v4 = objc_msgSend(a1, sel_localizedStringsForTable_localization_, 0, v3);

  uint64_t v5 = sub_19F1DBB3C();
  swift_bridgeObjectRelease();

  uint64_t v6 = sub_19EF9ED68(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_19F1157B4()
{
  return swift_bridgeObjectRetain();
}

void *sub_19F1157D0()
{
  return sub_19F1156E8(*(void **)v0, *(void *)(v0 + 8));
}

uint64_t sub_19F1157EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19F115808(a1, a2, a3, a4, *v4);
}

uint64_t sub_19F115808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = (void *)sub_19F1DBD4C();
  uint64_t v7 = (void *)sub_19F1DBD4C();
  uint64_t v8 = (void *)sub_19F1DBD4C();
  id v9 = objc_msgSend(a5, sel_localizedStringForKey_value_table_localization_, v6, v7, 0, v8);

  uint64_t v10 = sub_19F1DBD7C();
  uint64_t v12 = v11;

  if (v10) {
    BOOL v13 = 0;
  }
  else {
    BOOL v13 = v12 == 0xE100000000000000;
  }
  if (v13 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

void *sub_19F115910(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v81 = a4;
  uint64_t v80 = a3;
  uint64_t v91 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_19F1DABEC();
  MEMORY[0x1F4188790](v8 - 8);
  long long v72 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_19F1DABFC();
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v71 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DB5AC();
  long long v75 = *(void (***)(char *, uint64_t))(v11 - 8);
  MEMORY[0x1F4188790](v11);
  BOOL v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_19F1DB34C();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v67 - v17;
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (char *)&v67 - v20;
  MEMORY[0x1F4188790](v22);
  unint64_t v77 = (char *)&v67 - v23;
  uint64_t v24 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v24 - 8);
  sub_19F1DBDCC();
  uint64_t v79 = a1;
  sub_19F1DBD9C();
  if (!v25) {
    goto LABEL_8;
  }
  JSONObject.init(deserializing:)((uint64_t *)v88);
  if (v4)
  {
LABEL_9:
    sub_19EEA072C(v80, v81);
    sub_19EEA072C(v79, a2);
    return v5;
  }
  unint64_t v70 = a2;
  sub_19EEBF040((uint64_t)v88, (uint64_t)v82);
  uint64_t v26 = v83;
  if (!v83)
  {
    sub_19EEBD664((uint64_t)v82, (uint64_t *)&unk_1E946FD20);
    long long v85 = 0u;
    long long v86 = 0u;
    uint64_t v87 = 0;
    sub_19EEC3418((uint64_t)v88);
    goto LABEL_7;
  }
  uint64_t v27 = v84;
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v82, v83);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v27 + 120))(&v85, v26, v27);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v82);
  uint64_t v28 = *((void *)&v86 + 1);
  sub_19EEC3418((uint64_t)v88);
  if (!v28)
  {
LABEL_7:
    sub_19EEBD664((uint64_t)&v85, &qword_1E946FA88);
    a2 = v70;
LABEL_8:
    sub_19EF5B580();
    swift_allocError();
    uint64_t v31 = MEMORY[0x1E4FBC860];
    *long long v32 = MEMORY[0x1E4F277C0];
    v32[1] = v31;
    v32[2] = 0;
    v32[3] = 0;
    swift_willThrow();
    goto LABEL_9;
  }
  v89[0] = v85;
  v89[1] = v86;
  uint64_t v29 = v87;
  uint64_t v90 = v87;
  uint64_t v30 = *((void *)&v86 + 1);
  __swift_project_boxed_opaque_existential_1(v89, *((uint64_t *)&v86 + 1));
  uint64_t v34 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), void, void, uint64_t, uint64_t))(v29 + 48))(sub_19F1155FC, 0, MEMORY[0x1E4FBB1A0], v30, v29);
  uint64_t v35 = self;
  swift_bridgeObjectRetain();
  id v69 = objc_msgSend(v35, sel_defaultManager);
  id v36 = objc_msgSend(v69, sel_temporaryDirectory);
  uint64_t v68 = (void *)v34;
  id v37 = v36;
  sub_19F1DB2BC();

  sub_19F1DB59C();
  sub_19F1DB58C();
  v75[1](v13, v11);
  sub_19F1DB26C();
  swift_bridgeObjectRelease();
  uint64_t v38 = v76 + 8;
  uint64_t v39 = *(void (***)(char *, uint64_t))(v76 + 8);
  uint64_t v40 = v78;
  ((void (*)(char *, uint64_t))v39)(v18, v78);
  uint64_t v41 = v77;
  sub_19F1DB26C();
  ((void (*)(char *, uint64_t))v39)(v21, v40);
  unint64_t v42 = (void *)sub_19F1DB25C();
  v88[0] = 0;
  unsigned __int8 v43 = objc_msgSend(v69, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v42, 1, 0, v88);

  uint64_t v5 = v88[0];
  if (v43)
  {
    long long v75 = v39;
    uint64_t v44 = v68;
    uint64_t v45 = v68[2];
    if (v45)
    {
      swift_bridgeObjectRetain();
      unint64_t v46 = v5;
      uint64_t v47 = (void **)(v44 + 5);
      uint64_t v48 = v75;
      while (1)
      {
        long long v49 = *v47;
        v88[0] = *(v47 - 1);
        v88[1] = v49;
        swift_bridgeObjectRetain();
        sub_19F1DBEFC();
        sub_19F1DB26C();
        swift_bridgeObjectRelease();
        long long v50 = (void *)sub_19F1DB25C();
        ((void (*)(char *, uint64_t))v48)(v21, v78);
        v88[0] = 0;
        unsigned int v51 = objc_msgSend(v69, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v50, 1, 0, v88);

        id v52 = v88[0];
        if (!v51) {
          break;
        }
        v47 += 2;
        if (!--v45)
        {
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      uint64_t v58 = v52;
      uint64_t v5 = v68;
      swift_bridgeObjectRelease_n();
      sub_19F1DB19C();

      swift_willThrow();
      sub_19EEA072C(v80, v81);
      sub_19EEA072C(v79, v70);
      ((void (*)(char *, uint64_t))v48)(v77, v78);
      sub_19EEC5764((uint64_t)v89);
    }
    else
    {
      id v54 = v88[0];
LABEL_19:
      uint64_t v55 = v77;
      sub_19F1DB26C();
      uint64_t v56 = v80;
      unint64_t v57 = v81;
      sub_19F1DB41C();
      uint64_t v59 = v15;
      uint64_t v60 = v78;
      uint64_t v61 = v38;
      unint64_t v62 = v75;
      uint64_t v76 = v61;
      ((void (*)(char *, uint64_t))v75)(v59, v78);
      id v63 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
      char v64 = (void *)sub_19F1DB25C();
      uint64_t v5 = objc_msgSend(v63, sel_initWithURL_, v64);

      if (v5)
      {

        sub_19EEA072C(v56, v57);
        sub_19EEA072C(v79, v70);
        ((void (*)(char *, uint64_t))v62)(v55, v60);
        sub_19EEC5764((uint64_t)v89);
        swift_bridgeObjectRelease();
        return v5;
      }
      swift_bridgeObjectRelease();
      sub_19F1DABBC();
      sub_19EFAA108(MEMORY[0x1E4FBC860]);
      sub_19F0A671C();
      long long v65 = v71;
      uint64_t v66 = v74;
      sub_19F1DB17C();
      uint64_t v5 = v65;
      sub_19F1DAB9C();
      (*(void (**)(void *, uint64_t))(v73 + 8))(v65, v66);
      swift_willThrow();

      sub_19EEA072C(v56, v57);
      sub_19EEA072C(v79, v70);
      ((void (*)(char *, uint64_t))v62)(v55, v60);
      sub_19EEC5764((uint64_t)v89);
    }
  }
  else
  {
    id v53 = v88[0];
    swift_bridgeObjectRelease();
    sub_19F1DB19C();

    swift_willThrow();
    sub_19EEA072C(v80, v81);
    sub_19EEA072C(v79, v70);
    ((void (*)(char *, uint64_t))v39)(v41, v78);
    sub_19EEC5764((uint64_t)v89);
  }
  swift_bridgeObjectRelease();
  return v5;
}

void *initializeBufferWithCopyOfBuffer for LocalizedStringsContainerLoctable(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LocalizedStringsContainerLoctable(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for LocalizedStringsContainerLoctable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for LocalizedStringsContainerLoctable(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LocalizedStringsContainerLoctable()
{
  return &type metadata for LocalizedStringsContainerLoctable;
}

void sub_19F11653C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_19F1DB18C();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

id sub_19F1165AC()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_, v0);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_19F116710()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v2 = *MEMORY[0x1E4F4DBA0];
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing);
  if (sub_19F1DAEAC())
  {
    id v4 = (id)sub_19F1DBB1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  objc_msgSend(v1, sel_postNotificationName_object_userInfo_, v2, v3, v4);
}

id sub_19F116B04(char *a1, uint64_t a2, SEL *a3)
{
  id v4 = *(void **)&a1[OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing];
  uint64_t v5 = a1;
  id v6 = [v4 *a3];
  sub_19F1DBD7C();

  uint64_t v7 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  return v7;
}

id sub_19F116E08(void *a1, SEL *a2)
{
  if (*(void *)(*(void *)(v2 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_overrides) + 16))
  {
    id v5 = a1;
    sub_19EFB6E64((uint64_t)v5);
    if (v6)
    {
      swift_unknownObjectRetain();

      self;
      id result = (id)swift_dynamicCastObjCClass();
      if (result) {
        return result;
      }
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  id v8 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing), *a2, a1);
  return v8;
}

void sub_19F116F4C(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    id v7 = a1;
    swift_bridgeObjectRetain();
    id v8 = sub_19F117354(v7, a5);
    ((void (*)(id, void))a3)(v8, 0);
  }
  else
  {
    a3();
  }
}

id sub_19F117184()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing);
  self;
  id result = (id)swift_dynamicCastObjCClass();
  if (result)
  {
    id v3 = objc_msgSend(v1, sel_profile);
    sub_19F1DBD7C();

    id v4 = objc_msgSend(v1, sel_profileVersion);
    sub_19F1DBD7C();

    id v5 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    char v6 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(self, sel_bagForProfile_profileVersion_, v5, v6);

    uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_overrides);
    swift_bridgeObjectRetain();
    return sub_19F117354(v7, v8);
  }
  return result;
}

uint64_t type metadata accessor for OverriddenAMSBag()
{
  return self;
}

id sub_19F117354(void *a1, uint64_t a2)
{
  id v4 = (objc_class *)type metadata accessor for OverriddenAMSBag();
  id v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing] = a1;
  *(void *)&v5[OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_overrides] = a2;
  v11.receiver = v5;
  v11.super_class = v4;
  swift_unknownObjectRetain();
  id v6 = objc_msgSendSuper2(&v11, sel_init);
  self;
  if (swift_dynamicCastObjCClass())
  {
    id v7 = self;
    id v8 = v6;
    id v9 = objc_msgSend(v7, sel_defaultCenter, v11.receiver, v11.super_class);
    objc_msgSend(v9, sel_addObserver_selector_name_object_, v8, sel_forwardSnapshotBagExpiredValueAccessed_, *MEMORY[0x1E4F4DBA0], a1);
  }
  return v6;
}

uint64_t sub_19F117458()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F117490()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_19F1174D0(void *a1, uint64_t a2)
{
  sub_19F116F4C(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

id sub_19F1174DC(uint64_t a1, uint64_t a2, Class a3)
{
  id v6 = (char *)objc_allocWithZone(a3);
  *(void *)&v6[OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing] = a1;
  *(void *)&v6[OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_overrides] = a2;
  v12.receiver = v6;
  v12.super_class = a3;
  swift_unknownObjectRetain();
  id v7 = objc_msgSendSuper2(&v12, sel_init);
  self;
  if (swift_dynamicCastObjCClass())
  {
    id v8 = self;
    id v9 = v7;
    id v10 = objc_msgSend(v8, sel_defaultCenter, v12.receiver, v12.super_class);
    objc_msgSend(v10, sel_addObserver_selector_name_object_, v9, sel_forwardSnapshotBagExpiredValueAccessed_, *MEMORY[0x1E4F4DBA0], a1);
  }
  swift_unknownObjectRelease();
  return v7;
}

uint64_t type metadata accessor for RingBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F1175FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F117618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_19F1DCAAC();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v17 - v9;
  uint64_t v11 = v3[1];
  if (v11 == MEMORY[0x19F3C6510](*v3, v6, v8))
  {
    uint64_t v12 = *(void *)(v5 - 8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, 1, 1, v5);
  }
  else
  {
    uint64_t v18 = a2;
    BOOL v13 = (void (**)(char *, uint64_t))(v7 + 8);
    while (1)
    {
      sub_19F1DC2DC();
      uint64_t v12 = *(void *)(v5 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v5) != 1) {
        break;
      }
      (*v13)(v10, v6);
      sub_19F117844((uint64_t)v3);
      uint64_t v14 = v3[1];
      if (v14 == MEMORY[0x19F3C6510](*v3, v6))
      {
        a2 = v18;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, 1, 1, v5);
      }
    }
    uint64_t v16 = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v18, v10, v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v5);
    return sub_19F117844((uint64_t)v3);
  }
}

uint64_t sub_19F117844(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = result;
    uint64_t v4 = sub_19F1DCAAC();
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = MEMORY[0x19F3C6510](v5, v4);
    id result = swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    if (v2 < v6)
    {
      uint64_t v8 = *(void *)(v3 + 16);
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v7 = v8 + 1;
      if (v9) {
        goto LABEL_8;
      }
    }
    *(void *)(v3 + 16) = v7;
    uint64_t v10 = *(void *)(v3 + 8);
    BOOL v9 = __OFADD__(v10, 1);
    uint64_t v11 = v10 + 1;
    if (!v9)
    {
      *(void *)(v3 + 8) = v11;
      return result;
    }
  }
  __break(1u);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_19F1178E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F11790C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_19F1178E0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v6;
  return result;
}

uint64_t sub_19F117964(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_19F1179A0(v2, a1, a2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_19F1179A4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_19F1179DC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_19F117A34(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t type metadata accessor for RingBuffer.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for ConnectionFieldProvider()
{
  return &type metadata for ConnectionFieldProvider;
}

uint64_t sub_19F117AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a3;
  return MEMORY[0x1F4188298](sub_19EE42C5C, 0, 0);
}

uint64_t DeepLink.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for DeepLink();
  uint64_t v5 = (void *)(a2 + v4[5]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (_OWORD *)(a2 + v4[6]);
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  uint64_t v7 = (void *)(a2 + v4[7]);
  uint64_t v8 = sub_19F1DB34C();
  *uint64_t v7 = 0;
  v7[1] = 0;
  BOOL v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  return v9(a2, a1, v8);
}

uint64_t type metadata accessor for DeepLink()
{
  uint64_t result = qword_1E9475110;
  if (!qword_1E9475110) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DeepLink.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DeepLink.url.setter(uint64_t a1)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*DeepLink.url.modify())()
{
  return nullsub_1;
}

uint64_t DeepLink.sourceApplication.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DeepLink() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeepLink.sourceApplication.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for DeepLink() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DeepLink.sourceApplication.modify())(void)
{
  return nullsub_1;
}

uint64_t DeepLink.annotation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DeepLink() + 24);
  return sub_19EEBCD00(v3, a1);
}

uint64_t DeepLink.annotation.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DeepLink() + 24);
  return sub_19EEC3E70(a1, v3);
}

uint64_t (*DeepLink.annotation.modify())(void)
{
  return nullsub_1;
}

uint64_t DeepLink.sourceProcess.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DeepLink() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeepLink.sourceProcess.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for DeepLink() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DeepLink.sourceProcess.modify())(void)
{
  return nullsub_1;
}

uint64_t DeepLink.referrerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for DeepLink();
  sub_19EEBCD00(v1 + *(int *)(v7 + 24), (uint64_t)v17);
  if (!v18)
  {
    sub_19EEBCB4C((uint64_t)v17);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390A60);
  if ((swift_dynamicCast() & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  uint64_t v8 = v15;
  *(void *)&long long v15 = sub_19F1DBD7C();
  *((void *)&v15 + 1) = v9;
  sub_19F1DCC8C();
  if (*(void *)(v8 + 16) && (unint64_t v10 = sub_19EE77500((uint64_t)v17), (v11 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v8 + 56) + 32 * v10, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_19EE7760C((uint64_t)v17);
  if (!*((void *)&v16 + 1)) {
    goto LABEL_16;
  }
  sub_19EEBCD00((uint64_t)&v15, (uint64_t)v14);
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      sub_19F1DB2FC();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
LABEL_16:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
    return sub_19EEBCB4C((uint64_t)&v15);
  }
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 32))(a1, v6, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
LABEL_14:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return sub_19EEBCB4C((uint64_t)&v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for DeepLink(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_19F1DB34C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (uint64_t *)((char *)a1 + v8);
    char v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    BOOL v13 = (char *)a1 + v9;
    uint64_t v14 = (_OWORD *)((char *)a2 + v9);
    uint64_t v15 = *(uint64_t *)((char *)a2 + v9 + 24);
    swift_bridgeObjectRetain();
    if (v15)
    {
      *((void *)v13 + 3) = v15;
      (**(void (***)(char *, _OWORD *, uint64_t))(v15 - 8))(v13, v14, v15);
    }
    else
    {
      long long v17 = v14[1];
      *(_OWORD *)BOOL v13 = *v14;
      *((_OWORD *)v13 + 1) = v17;
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DeepLink(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v5 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeepLink(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  BOOL v13 = (_OWORD *)(a2 + v8);
  uint64_t v14 = *(void *)(a2 + v8 + 24);
  swift_bridgeObjectRetain();
  if (v14)
  {
    *(void *)(v12 + 24) = v14;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v14 - 8))(v12, v13, v14);
  }
  else
  {
    long long v15 = v13[1];
    *(_OWORD *)uint64_t v12 = *v13;
    *(_OWORD *)(v12 + 16) = v15;
  }
  uint64_t v16 = a3[7];
  long long v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *long long v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeepLink(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)(a2 + v10 + 24);
  if (!*(void *)(a1 + v10 + 24))
  {
    if (v13)
    {
      *(void *)(v11 + 24) = v13;
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v11, v12);
      goto LABEL_8;
    }
LABEL_7:
    long long v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *(_OWORD *)(v11 + 16) = v14;
    goto LABEL_8;
  }
  if (!v13)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v11);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)v11, (uint64_t *)v12);
LABEL_8:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  long long v17 = (void *)(a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DeepLink(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  _OWORD *v8 = *v9;
  v8[1] = v10;
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for DeepLink(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (_OWORD *)(a1 + v12);
  if (*(void *)(a1 + v12 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + v12);
  }
  long long v14 = *(_OWORD *)(a2 + v12 + 16);
  *uint64_t v13 = *(_OWORD *)(a2 + v12);
  v13[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  long long v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  void *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeepLink(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F11876C);
}

uint64_t sub_19F11876C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DeepLink(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F118850);
}

uint64_t sub_19F118850(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_19F1DB34C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_19F118910()
{
  uint64_t result = sub_19F1DB34C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id static PipelinePhase<>.rateLimitOnFailure(on:using:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = a4;
  void v9[3] = a2;
  void v9[4] = a3;
  v9[5] = a1;
  PipelinePhase.init(mapTask:)((uint64_t)sub_19F118E70, (uint64_t)v9, a5);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t *sub_19F118A58(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  long long v32 = a4;
  uint64_t v34 = sub_19F1DB9FC();
  uint64_t v37 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v33 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DBA3C();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DBA5C();
  uint64_t v31 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  long long v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v17 = (char *)&v29 - v16;
  uint64_t v18 = *a1;
  type metadata accessor for Promise();
  uint64_t v19 = Promise.__allocating_init()();
  uint64_t ObjectType = swift_getObjectType();
  double v21 = (*(double (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_19F1DBA4C();
  MEMORY[0x19F3C5D70](v14, v21);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v14, v11);
  uint64_t v22 = (void *)swift_allocObject();
  _OWORD v22[2] = v18;
  v22[3] = a2;
  v22[4] = a3;
  v22[5] = v19;
  uint64_t v23 = v32;
  v22[6] = v32;
  aBlock[4] = sub_19F118F98;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_33;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v25 = v19;
  swift_retain();
  v23;
  sub_19F1DBA1C();
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_19EEC8D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  uint64_t v26 = v33;
  uint64_t v27 = v34;
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B40](v17, v10, v26, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);
  v30(v17, v31);
  swift_release();
  return v25;
}

uint64_t sub_19F118E30()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t *sub_19F118E70(uint64_t *a1)
{
  return sub_19F118A58(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_19F118E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  type metadata accessor for AnyPipelineTask();
  AnyPipelineTask.run()();
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = a2;
  void v9[3] = a3;
  void v9[4] = a4;
  void v12[3] = sub_19EEA5F34();
  void v12[4] = &protocol witness table for OS_dispatch_queue;
  v12[0] = a5;
  swift_retain_n();
  swift_unknownObjectRetain();
  id v10 = a5;
  Promise.then(perform:orCatchError:on:)((uint64_t)sub_19F118FF0, (uint64_t)v9, (uint64_t)j___s9JetEngine7PromiseC6rejectyys5Error_pF, a4, (uint64_t)v12);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
}

uint64_t sub_19F118F98()
{
  return sub_19F119058((uint64_t (*)(void, void, void, void, void))sub_19F118E7C);
}

uint64_t sub_19F118FB0()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_19F118FF0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  Promise.resolve(_:)(a1);
}

uint64_t sub_19F119058(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

unint64_t JSONError.errorDescription.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)v0[1];
  unint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  switch(v4 >> 61)
  {
    case 0uLL:
      uint64_t v5 = v2[2];
      if (v5)
      {
        if (v5 == 1)
        {
          uint64_t v6 = (void *)v2[4];
          swift_getErrorValue();
          id v7 = v6;
          sub_19F1DD6AC();
        }
        else
        {
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471D98);
          sub_19EFA6640();
          sub_19F1DBCCC();
          sub_19F10C0E0(v1, v2, v4);
        }
      }
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD00000000000001BLL;
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 1uLL:
    case 3uLL:
    case 4uLL:
      unint64_t v12 = 0;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      goto LABEL_17;
    case 2uLL:
      uint64_t v9 = *(void *)(v3 + 16);
      if (v9)
      {
        if (v9 == 1)
        {
          id v10 = *(void **)(v3 + 32);
          swift_getErrorValue();
          id v11 = v10;
          sub_19F1DD6AC();
        }
        else
        {
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471D98);
          sub_19EFA6640();
          sub_19F1DBCCC();
          swift_bridgeObjectRelease();
        }
      }
      unint64_t v12 = 0;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
LABEL_16:
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
LABEL_17:
      unint64_t result = v12;
      break;
    default:
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      unint64_t result = 0;
      break;
  }
  return result;
}

void destroy for JSONError(uint64_t a1)
{
}

void *initializeWithCopy for JSONError(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (void *)a2[1];
  unint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_19F10C030(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for JSONError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (void *)a2[1];
  unint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_19F10C030(*a2, v4, v5);
  uint64_t v7 = *a1;
  uint64_t v8 = (void *)a1[1];
  unint64_t v9 = a1[2];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_19F10C0E0(v7, v8, v9);
  return a1;
}

void *assignWithTake for JSONError(void *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v5 = (void *)a1[1];
  unint64_t v4 = a1[2];
  long long v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_19F10C0E0(v3, v5, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x79 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 121);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 57) >> 4) | (8
                                                           * ((*(void *)(a1 + 16) >> 57) & 8 | *(void *)(a1 + 16) & 7))) ^ 0x7F;
  if (v3 >= 0x78) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JSONError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x78)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 121;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x79) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x79) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_19F1197AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16) >> 61;
  if (v1 == 7) {
    return (*(_DWORD *)a1 + 7);
  }
  else {
    return v1;
  }
}

uint64_t sub_19F1197C8(uint64_t result, uint64_t a2)
{
  if (a2 < 7)
  {
    *(void *)(result + 16) = *(void *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  }
  else
  {
    *(void *)unint64_t result = (a2 - 7);
    *(_OWORD *)(result + 8) = xmmword_19F25F980;
    *(void *)(result + 24) = 0;
  }
  return result;
}

JetEngine::SilverBulletJetPackAssetRequest::Environment __swiftcall SilverBulletJetPackAssetRequest.Environment.init(rawValue:)(JetEngine::SilverBulletJetPackAssetRequest::Environment rawValue)
{
  *uint64_t v1 = rawValue;
  return rawValue;
}

uint64_t SilverBulletJetPackAssetRequest.Environment.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SilverBulletJetPackAssetRequest.Environment.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SilverBulletJetPackAssetRequest.Environment.rawValue.modify())()
{
  return nullsub_1;
}

void __swiftcall SilverBulletJetPackAssetRequest.init(environment:path:sourcePolicy:)(JetEngine::SilverBulletJetPackAssetRequest *__return_ptr retstr, JetEngine::SilverBulletJetPackAssetRequest::Environment environment, Swift::String path, JetEngine::JetPackAssetRequestSourcePolicy sourcePolicy)
{
  unint64_t v4 = *(void **)(environment.rawValue._countAndFlagsBits + 8);
  JetEngine::JetPackAssetRequestSourcePolicy v5 = *(unsigned char *)path._object;
  retstr->environment.rawValue._uint64_t countAndFlagsBits = *(void *)environment.rawValue._countAndFlagsBits;
  retstr->environment.rawValue._uint64_t object = v4;
  retstr->path._uint64_t countAndFlagsBits = (uint64_t)environment.rawValue._object;
  retstr->path._uint64_t object = (void *)path._countAndFlagsBits;
  retstr->_sourcePolicy = v5;
}

void SilverBulletJetPackAssetRequest._sourcePolicy.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t SilverBulletJetPackAssetRequest._cacheKey.getter()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t SilverBulletJetPackAssetRequest.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t SilverBulletJetPackAssetRequest.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F119A4C()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_19F119ABC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t sub_19F119AC8()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F119B68()
{
  return sub_19F1DD73C();
}

uint64_t sub_19F119BF0()
{
  return sub_19F1DD78C();
}

BOOL _s9JetEngine012SilverBulletA16PackAssetRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (char v9 = sub_19F1DD44C(), result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6) {
      return v4 == v7;
    }
    char v12 = sub_19F1DD44C();
    BOOL result = 0;
    if (v12) {
      return v4 == v7;
    }
  }
  return result;
}

unint64_t sub_19F119D3C()
{
  unint64_t result = qword_1E9475120;
  if (!qword_1E9475120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475120);
  }
  return result;
}

unint64_t sub_19F119D90(uint64_t a1)
{
  unint64_t result = sub_19F119DB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19F119DB8()
{
  unint64_t result = qword_1E9475970;
  if (!qword_1E9475970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475970);
  }
  return result;
}

unint64_t sub_19F119E10()
{
  unint64_t result = qword_1E9475128;
  if (!qword_1E9475128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475128);
  }
  return result;
}

uint64_t initializeWithCopy for SilverBulletJetPackAssetRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SilverBulletJetPackAssetRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for SilverBulletJetPackAssetRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SilverBulletJetPackAssetRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SilverBulletJetPackAssetRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SilverBulletJetPackAssetRequest()
{
  return &type metadata for SilverBulletJetPackAssetRequest;
}

ValueMetadata *type metadata accessor for SilverBulletJetPackAssetRequest.Environment()
{
  return &type metadata for SilverBulletJetPackAssetRequest.Environment;
}

uint64_t sub_19F11A020(uint64_t a1)
{
  uint64_t v33 = sub_19F1DAEFC();
  uint64_t v3 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6) {
    return v7;
  }
  uint64_t v31 = v5;
  uint64_t v25 = v1;
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_19EFF65C0(0, v6, 0);
  uint64_t v7 = v35;
  uint64_t result = sub_19EF7E550(a1);
  uint64_t v10 = result;
  uint64_t v11 = 0;
  uint64_t v12 = a1 + 64;
  uint64_t v29 = a1 + 64;
  uint64_t v30 = v3 + 32;
  uint64_t v26 = a1 + 80;
  int64_t v27 = v6;
  uint64_t v32 = v3;
  uint64_t v28 = v9;
  uint64_t v13 = v31;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v16 = (unint64_t)v10 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_24;
    }
    uint64_t v34 = v11;
    uint64_t v17 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19F1DAECC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = v7;
    unint64_t v19 = *(void *)(v7 + 16);
    unint64_t v18 = *(void *)(v7 + 24);
    if (v19 >= v18 >> 1)
    {
      sub_19EFF65C0(v18 > 1, v19 + 1, 1);
      uint64_t v7 = v35;
    }
    *(void *)(v7 + 16) = v19 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v32 + 32))(v7+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v19, v13, v33);
    int64_t v14 = 1 << *(unsigned char *)(v17 + 32);
    if (v10 >= v14) {
      goto LABEL_25;
    }
    uint64_t v12 = v29;
    uint64_t v20 = *(void *)(v29 + 8 * v16);
    if ((v20 & (1 << v10)) == 0) {
      goto LABEL_26;
    }
    a1 = v17;
    LODWORD(v9) = v28;
    if (*(_DWORD *)(v17 + 36) != v28) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2 << (v10 & 0x3F));
    if (v21)
    {
      int64_t v14 = __clz(__rbit64(v21)) | v10 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v27;
    }
    else
    {
      unint64_t v22 = v16 + 1;
      unint64_t v23 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v27;
      if (v16 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v29 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v14 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v16)
          {
            unint64_t v24 = *(void *)(v26 + 8 * v16++);
            if (v24)
            {
              unint64_t v22 = v16 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v11 = v34 + 1;
    uint64_t v10 = v14;
    if (v34 + 1 == v15) {
      return v7;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_19F11A330(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v29 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v29) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v26 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v29) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v26 + 8 * v10);
      if (!v24)
      {
        int64_t v10 = v23 + 2;
        if (v23 + 2 >= v29) {
          goto LABEL_23;
        }
        unint64_t v24 = *(void *)(v26 + 8 * v10);
        if (!v24)
        {
          int64_t v10 = v23 + 3;
          if (v23 + 3 >= v29) {
            goto LABEL_23;
          }
          unint64_t v24 = *(void *)(v26 + 8 * v10);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v24 - 1) & v24;
    unint64_t v13 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_5:
    uint64_t v14 = 16 * v13;
    int64_t v15 = (uint64_t *)(*(void *)(a3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    unint64_t v18 = (uint64_t *)(*(void *)(a3 + 56) + v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    v28[3] = v11;
    v28[0] = v16;
    v28[1] = v17;
    v27[3] = v11;
    v27[0] = v19;
    v27[1] = v20;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    a1 = sub_19F11DF84(a1, a2, (uint64_t)v28, (uint64_t)v27);
    unint64_t v22 = v21;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v22;
  }
  int64_t v25 = v23 + 4;
  if (v25 >= v29)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v26 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

BOOL static Models.HTTPTemplateAction.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Models.HTTPTemplateAction.Error.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t Models.HTTPTemplateAction.Error.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t Models.HTTPTemplateAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v6 = (int *)type metadata accessor for Models.HTTPTemplateAction();
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NetRequest();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)&v45);
  v43[0] = v15;
  swift_bridgeObjectRetain();
  ActionMetrics.init(deserializing:using:)((uint64_t)&v45, v43, (uint64_t *)v44);
  if (v3)
  {
    sub_19EEC3418(a1);
    return swift_bridgeObjectRelease();
  }
  uint64_t v39 = 0;
  uint64_t v35 = v8;
  uint64_t v36 = v11;
  uint64_t v40 = v14;
  uint64_t v38 = *((void *)&v44[0] + 1);
  uint64_t v16 = *(void *)&v44[0];
  JSONObject.subscript.getter(0x6574656D61726170, 0xEA00000000007372, (uint64_t)&v45);
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_19F122F88((uint64_t)&v45, v15);
  uint64_t v17 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
  uint64_t v47 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_19F17A6BC(0xD00000000000001FLL, 0x800000019F2699A0, v15);
  swift_bridgeObjectRelease();
  if (v18)
  {
    sub_19EF5D2D4(v18);
    uint64_t v17 = v47;
  }
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9A0);
  *(void *)&long long v45 = v17;
  sub_19EEBDC00(&v45, v44);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v43[0] = v15;
  sub_19EE7DA20(v44, 0xD00000000000001FLL, 0x800000019F2699A0, isUniquelyReferenced_nonNull_native);
  uint64_t v20 = v43[0];
  swift_bridgeObjectRelease();
  JSONObject.subscript.getter(0x74736575716572, 0xE700000000000000, (uint64_t)&v45);
  *(void *)&v44[0] = v20;
  unint64_t v21 = v40;
  uint64_t v22 = v39;
  NetRequest.init(deserializing:using:)((uint64_t)&v45, (uint64_t *)v44, v40);
  if (v22)
  {
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  JSONObject.subscript.getter(0x4173736563637573, 0xED00006E6F697463, (uint64_t)v44);
  v43[0] = v15;
  static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)v44, v43, (uint64_t)&v45);
  sub_19EEC3418((uint64_t)v44);
  JSONObject.subscript.getter(0x416572756C696166, 0xED00006E6F697463, (uint64_t)v43);
  v42[0] = v15;
  static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)v43, v42, (uint64_t)v44);
  sub_19EEC3418((uint64_t)v43);
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t)v36;
  sub_19EE5C360((uint64_t)v21, (uint64_t)v36);
  sub_19EEC3ED8((uint64_t)&v45, (uint64_t)v43, qword_1E946D0B8);
  sub_19EEC3ED8((uint64_t)v44, (uint64_t)v42, qword_1E946D0B8);
  uint64_t v25 = v16;
  uint64_t v26 = (uint64_t)v35;
  *uint64_t v35 = v25;
  uint64_t v27 = v37;
  *(void *)(v26 + 8) = v38;
  *(void *)(v26 + 16) = v27;
  sub_19EE5C360(v24, v26 + v6[6]);
  uint64_t v28 = (uint64_t *)(v24 + *(int *)(v9 + 40));
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  swift_bridgeObjectRetain();
  sub_19EE5C208(v24);
  uint64_t v31 = (void *)(v26 + v6[7]);
  if (v29)
  {
    *uint64_t v31 = v30;
    v31[1] = v29;
    uint64_t v32 = (void *)(v26 + v6[8]);
    *uint64_t v32 = v30;
    v32[1] = v29;
  }
  else
  {
    *uint64_t v31 = 0;
    v31[1] = 0;
    uint64_t v33 = (void *)(v26 + v6[8]);
    *uint64_t v33 = 0;
    v33[1] = 0;
  }
  uint64_t v34 = v41;
  sub_19EEBDC4C((uint64_t)v43, v26 + v6[9], qword_1E946D0B8);
  sub_19EEBDC4C((uint64_t)v42, v26 + v6[10], qword_1E946D0B8);
  sub_19F11FC2C(v26, v34);
  swift_bridgeObjectRetain();
  sub_19EEC3418(a1);
  sub_19EEBD664((uint64_t)v44, qword_1E946D0B8);
  sub_19EEBD664((uint64_t)&v45, qword_1E946D0B8);
  return sub_19EE5C208((uint64_t)v21);
}

uint64_t type metadata accessor for Models.HTTPTemplateAction()
{
  uint64_t result = qword_1E946D438;
  if (!qword_1E946D438) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Models.HTTPTemplateAction.actionMetrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.successAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Models.HTTPTemplateAction();
  return sub_19EEC3ED8(v1 + *(int *)(v3 + 36), a1, qword_1E946D0B8);
}

uint64_t Models.HTTPTemplateAction.failureAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Models.HTTPTemplateAction();
  return sub_19EEC3ED8(v1 + *(int *)(v3 + 40), a1, qword_1E946D0B8);
}

uint64_t Models.HTTPTemplateAction.makeAction(with:actionMetrics:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v41 = a3;
  uint64_t v8 = sub_19F1DB34C();
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for NetRequest();
  MEMORY[0x1F4188790](v38);
  uint64_t v47 = (uint64_t)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = a2[1];
  uint64_t v39 = *a2;
  uint64_t v40 = v16;
  if (*(void *)(v14 + 16))
  {
    uint64_t v43 = v13;
    uint64_t v44 = v12;
    uint64_t v45 = v14;
    uint64_t v46 = v15;
    uint64_t v17 = (int *)type metadata accessor for Models.HTTPTemplateAction();
    long long v42 = *(_OWORD *)(v5 + v17[7]);
    uint64_t result = (uint64_t)sub_19F11AEC4((uint64_t)&v42);
  }
  else
  {
    uint64_t v43 = v13;
    uint64_t v44 = v12;
    uint64_t v45 = v14;
    uint64_t v46 = v15;
    uint64_t v17 = (int *)type metadata accessor for Models.HTTPTemplateAction();
    long long v42 = *(_OWORD *)(v5 + v17[8]);
    uint64_t result = sub_19F11B2B8((uint64_t)&v42);
  }
  if (!v4)
  {
    uint64_t v33 = result;
    uint64_t v35 = v19;
    type metadata accessor for Models.HTTPTemplateAction();
    uint64_t v20 = v17[6];
    uint64_t v34 = v5;
    uint64_t v21 = v5 + v20;
    sub_19EE5C360(v5 + v20, v47);
    uint64_t v43 = v13;
    uint64_t v44 = v12;
    uint64_t v45 = v14;
    uint64_t v46 = v15;
    sub_19F11B614(v21, (uint64_t)v10);
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 40))(v47, v10, v37);
    uint64_t v43 = v13;
    uint64_t v44 = v12;
    uint64_t v45 = v14;
    uint64_t v46 = v15;
    uint64_t v22 = v38;
    uint64_t v23 = sub_19F11BF60(*(void **)(v21 + *(int *)(v38 + 28)));
    uint64_t v24 = *(int *)(v22 + 28);
    uint64_t v25 = v47;
    swift_bridgeObjectRelease();
    *(void *)(v25 + v24) = v23;
    uint64_t v26 = (uint64_t *)(v25 + *(int *)(v22 + 40));
    swift_bridgeObjectRelease();
    uint64_t v27 = v35;
    *uint64_t v26 = v33;
    v26[1] = v27;
    uint64_t v28 = (int *)type metadata accessor for Models.HTTPAction();
    uint64_t v29 = v41;
    sub_19EE5C360(v25, (uint64_t)v41 + v28[5]);
    uint64_t v30 = v34;
    sub_19EEC3ED8(v34 + v17[9], (uint64_t)v29 + v28[6], qword_1E946D0B8);
    sub_19EEC3ED8(v30 + v17[10], (uint64_t)v29 + v28[7], qword_1E946D0B8);
    uint64_t v31 = v40;
    *uint64_t v29 = v39;
    v29[1] = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_19EE5C208(v25);
  }
  return result;
}

id *sub_19F11AEC4(uint64_t a1)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = *(void *)(v1 + 16);
  id v45 = *(id *)a1;
  uint64_t v46 = v7;
  uint64_t v9 = &v45;
  unint64_t v10 = sub_19F11C27C();
  if (!v2)
  {
    v35[1] = v6;
    uint64_t v11 = *(void *)(v8 + 64);
    _OWORD v35[2] = 0;
    uint64_t v36 = v8 + 64;
    uint64_t v12 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v13 = -1;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    unint64_t v14 = v13 & v11;
    int64_t v37 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v38 = (void *)v10;
    v35[0] = v37 - 1;
    swift_bridgeObjectRetain();
    int64_t v15 = 0;
    if (!v14) {
      goto LABEL_12;
    }
LABEL_10:
    unint64_t v18 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v19 = v18 | (v15 << 6);
LABEL_11:
    uint64_t v20 = *(void *)(v8 + 56);
    uint64_t v21 = (void *)(*(void *)(v8 + 48) + 16 * v19);
    uint64_t v22 = v21[1];
    *(void *)&long long v43 = *v21;
    *((void *)&v43 + 1) = v22;
    sub_19EEBDBA4(v20 + 32 * v19, (uint64_t)v44);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_19EEBDC4C((uint64_t)&v43, (uint64_t)&v45, &qword_1EB392770);
      uint64_t v26 = v46;
      if (!v46) {
        break;
      }
      id v16 = v45;
      sub_19EEBDC00(&v47, &v43);
      id v41 = v16;
      uint64_t v42 = v26;
      uint64_t v39 = 46;
      unint64_t v40 = 0xE100000000000000;
      sub_19EEC4910();
      uint64_t v17 = sub_19F1DCB5C();
      swift_bridgeObjectRelease();
      sub_19F11DCE0((uint64_t)&v43, v17);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
      if (v14) {
        goto LABEL_10;
      }
LABEL_12:
      int64_t v23 = v15 + 1;
      if (__OFADD__(v15, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
      }
      if (v23 < v37)
      {
        unint64_t v24 = *(void *)(v36 + 8 * v23);
        if (v24) {
          goto LABEL_15;
        }
        int64_t v25 = v15 + 2;
        ++v15;
        if (v23 + 1 < v37)
        {
          unint64_t v24 = *(void *)(v36 + 8 * v25);
          if (v24) {
            goto LABEL_18;
          }
          int64_t v15 = v23 + 1;
          if (v23 + 2 < v37)
          {
            unint64_t v24 = *(void *)(v36 + 8 * (v23 + 2));
            if (v24)
            {
              v23 += 2;
              goto LABEL_15;
            }
            int64_t v25 = v23 + 3;
            int64_t v15 = v23 + 2;
            if (v23 + 3 < v37)
            {
              unint64_t v24 = *(void *)(v36 + 8 * v25);
              if (v24)
              {
LABEL_18:
                int64_t v23 = v25;
LABEL_15:
                unint64_t v14 = (v24 - 1) & v24;
                unint64_t v19 = __clz(__rbit64(v24)) + (v23 << 6);
                int64_t v15 = v23;
                goto LABEL_11;
              }
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_36;
                }
                if (v23 >= v37) {
                  break;
                }
                unint64_t v24 = *(void *)(v36 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_15;
                }
              }
              int64_t v15 = v35[0];
            }
          }
        }
      }
      unint64_t v14 = 0;
      memset(v44, 0, sizeof(v44));
      long long v43 = 0u;
    }
    swift_release();
    uint64_t v27 = self;
    id v45 = 0;
    uint64_t v28 = v38;
    uint64_t v9 = (id *)objc_msgSend(v27, sel_dataWithJSONObject_options_error_, v38, 0, &v45);
    id v29 = v45;
    if (v9)
    {
      uint64_t v30 = sub_19F1DB40C();
      unint64_t v32 = v31;

      sub_19F1DBDCC();
      uint64_t v9 = (id *)sub_19F1DBD9C();

      sub_19EEA072C(v30, v32);
    }
    else
    {
      uint64_t v34 = v29;
      sub_19F1DB19C();

      swift_willThrow();
    }
  }
  return v9;
}

uint64_t sub_19F11B2B8(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return 0;
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = sub_19F11C5B0();
  if (v2) {
    return v3;
  }
  uint64_t v6 = (void *)v5;
  uint64_t v40 = v4 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v4 + 64);
  int64_t v41 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v9)
    {
      uint64_t v42 = (v9 - 1) & v9;
      int64_t v43 = v10;
      unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
    }
    else
    {
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_41;
      }
      if (v13 >= v41)
      {
LABEL_37:
        swift_release();
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_19F11A330(0, 0xE000000000000000, (uint64_t)v6);
        swift_bridgeObjectRelease_n();
        return v3;
      }
      unint64_t v14 = *(void *)(v40 + 8 * v13);
      int64_t v15 = v10 + 1;
      if (!v14)
      {
        int64_t v15 = v10 + 2;
        if (v10 + 2 >= v41) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v40 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v10 + 3;
          if (v10 + 3 >= v41) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v40 + 8 * v15);
          if (!v14)
          {
            uint64_t v16 = v10 + 4;
            if (v10 + 4 >= v41) {
              goto LABEL_37;
            }
            unint64_t v14 = *(void *)(v40 + 8 * v16);
            if (!v14)
            {
              while (1)
              {
                int64_t v15 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v41) {
                  goto LABEL_37;
                }
                unint64_t v14 = *(void *)(v40 + 8 * v15);
                ++v16;
                if (v14) {
                  goto LABEL_25;
                }
              }
            }
            int64_t v15 = v10 + 4;
          }
        }
      }
LABEL_25:
      uint64_t v42 = (v14 - 1) & v14;
      int64_t v43 = v15;
      unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    }
    uint64_t v17 = 16 * v12;
    uint64_t v18 = v4;
    unint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + v17);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v22 = (uint64_t *)(*(void *)(v4 + 56) + v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v27 = sub_19EEBD400(v21, v20);
    uint64_t v28 = v6[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (v6[3] >= v30)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v26) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_19EFBF548();
        if (v31) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      sub_19EE8EEDC(v30, isUniquelyReferenced_nonNull_native);
      unint64_t v32 = sub_19EEBD400(v21, v20);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_43;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_8:
        uint64_t v11 = (void *)(v6[7] + 16 * v27);
        swift_bridgeObjectRelease();
        *uint64_t v11 = v23;
        v11[1] = v24;
        goto LABEL_9;
      }
    }
    v6[(v27 >> 6) + 8] |= 1 << v27;
    uint64_t v34 = (uint64_t *)(v6[6] + 16 * v27);
    *uint64_t v34 = v21;
    v34[1] = v20;
    uint64_t v35 = (void *)(v6[7] + 16 * v27);
    *uint64_t v35 = v23;
    v35[1] = v24;
    uint64_t v36 = v6[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_40;
    }
    long long v6[2] = v38;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v18;
    int64_t v10 = v43;
    unint64_t v9 = v42;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F11B614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DAEFC();
  int64_t v108 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v100 = (char *)v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94717D8);
  MEMORY[0x1F4188790](v11 - 8);
  int64_t v13 = (char *)v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_19F1DB01C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v99 = (char *)v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = *v2;
  if (!*(void *)(v106 + 16))
  {
    uint64_t v19 = sub_19F1DB34C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a2, a1, v19);
  }
  sub_19F1DAF5C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_19EEBD664((uint64_t)v13, &qword_1E94717D8);
    sub_19F122170();
    swift_allocError();
    *uint64_t v17 = 0;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v99, v13, v14);
  uint64_t v20 = sub_19F1DAF3C();
  char v97 = v8;
  uint64_t v98 = v3;
  uint64_t v94 = a2;
  uint64_t v95 = v15;
  uint64_t v96 = v14;
  if (v20)
  {
    uint64_t v21 = *(void *)(v20 + 16);
    v93[1] = v20;
    if (v21)
    {
      uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v108 + 16);
      unint64_t v23 = v20 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
      uint64_t v102 = (void (**)(char *, uint64_t))(v108 + 8);
      unint64_t v103 = v22;
      v108 += 16;
      uint64_t v101 = *(void *)(v108 + 56);
      uint64_t v24 = (void *)MEMORY[0x1E4FBC868];
      int64_t v25 = v100;
      v22(v100, v23, v9);
      while (1)
      {
        uint64_t v28 = sub_19F1DAEDC();
        uint64_t v30 = v29;
        uint64_t v31 = sub_19F1DAEEC();
        if (v32)
        {
          uint64_t v104 = v21;
          int64_t v105 = v31;
          uint64_t v107 = v32;
          uint64_t v33 = v9;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v109 = v24;
          uint64_t v35 = v28;
          uint64_t v36 = v28;
          uint64_t v37 = v30;
          unint64_t v39 = sub_19EEBD400(v36, v30);
          uint64_t v40 = v24[2];
          BOOL v41 = (v38 & 1) == 0;
          uint64_t v42 = v40 + v41;
          if (__OFADD__(v40, v41))
          {
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
          char v43 = v38;
          if (v24[3] >= v42)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_19EFBF548();
            }
          }
          else
          {
            sub_19EE8EEDC(v42, isUniquelyReferenced_nonNull_native);
            unint64_t v44 = sub_19EEBD400(v35, v37);
            if ((v43 & 1) != (v45 & 1)) {
              goto LABEL_71;
            }
            unint64_t v39 = v44;
          }
          uint64_t v9 = v33;
          uint64_t v24 = v109;
          if (v43)
          {
            char v26 = (int64_t *)(v109[7] + 16 * v39);
            swift_bridgeObjectRelease();
            uint64_t v27 = v107;
            *char v26 = v105;
            v26[1] = v27;
          }
          else
          {
            v109[(v39 >> 6) + 8] |= 1 << v39;
            long long v50 = (uint64_t *)(v24[6] + 16 * v39);
            *long long v50 = v35;
            v50[1] = v37;
            unsigned int v51 = (int64_t *)(v24[7] + 16 * v39);
            uint64_t v52 = v107;
            *unsigned int v51 = v105;
            v51[1] = v52;
            uint64_t v53 = v24[2];
            BOOL v54 = __OFADD__(v53, 1);
            uint64_t v55 = v53 + 1;
            if (v54) {
              goto LABEL_70;
            }
            void v24[2] = v55;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int64_t v25 = v100;
          uint64_t v21 = v104;
        }
        else
        {
          swift_bridgeObjectRetain();
          unint64_t v46 = sub_19EEBD400(v28, v30);
          char v48 = v47;
          swift_bridgeObjectRelease();
          if (v48)
          {
            char v49 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v109 = v24;
            if ((v49 & 1) == 0)
            {
              sub_19EFBF548();
              uint64_t v24 = v109;
            }
            swift_bridgeObjectRelease();
            sub_19EF6CF54(v46, (uint64_t)v24);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        (*v102)(v25, v9);
        v23 += v101;
        if (!--v21) {
          break;
        }
        v103(v25, v23, v9);
      }
    }
    else
    {
      uint64_t v24 = (void *)MEMORY[0x1E4FBC868];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v56 = *(void *)(v106 + 64);
  uint64_t v104 = v106 + 64;
  uint64_t v57 = 1 << *(unsigned char *)(v106 + 32);
  uint64_t v58 = -1;
  if (v57 < 64) {
    uint64_t v58 = ~(-1 << v57);
  }
  unint64_t v59 = v58 & v56;
  int64_t v105 = (unint64_t)(v57 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v108)
  {
    if (v59)
    {
      uint64_t v107 = (v59 - 1) & v59;
      int64_t v108 = i;
      unint64_t v62 = __clz(__rbit64(v59)) | (i << 6);
      goto LABEL_51;
    }
    int64_t v63 = i + 1;
    if (__OFADD__(i, 1)) {
      goto LABEL_67;
    }
    if (v63 >= v105)
    {
LABEL_62:
      swift_release();
      uint64_t v87 = swift_bridgeObjectRetain();
      sub_19F11A020(v87);
      swift_bridgeObjectRelease_n();
      uint64_t v88 = v99;
      sub_19F1DAF4C();
      uint64_t v89 = (uint64_t)v97;
      sub_19F1DAF6C();
      uint64_t v90 = sub_19F1DB34C();
      uint64_t v91 = *(void *)(v90 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90) == 1)
      {
        sub_19EEBD664(v89, (uint64_t *)&unk_1EB392E50);
        sub_19F122170();
        swift_allocError();
        *uint64_t v92 = 0;
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v88, v96);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v95 + 8))(v88, v96);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 32))(v94, v89, v90);
      }
    }
    unint64_t v64 = *(void *)(v104 + 8 * v63);
    int64_t v65 = i + 1;
    if (!v64)
    {
      int64_t v65 = i + 2;
      if (i + 2 >= v105) {
        goto LABEL_62;
      }
      unint64_t v64 = *(void *)(v104 + 8 * v65);
      if (!v64)
      {
        int64_t v65 = i + 3;
        if (i + 3 >= v105) {
          goto LABEL_62;
        }
        unint64_t v64 = *(void *)(v104 + 8 * v65);
        if (!v64) {
          break;
        }
      }
    }
LABEL_50:
    uint64_t v107 = (v64 - 1) & v64;
    int64_t v108 = v65;
    unint64_t v62 = __clz(__rbit64(v64)) + (v65 << 6);
LABEL_51:
    uint64_t v67 = 16 * v62;
    uint64_t v68 = (uint64_t *)(*(void *)(v106 + 48) + v67);
    uint64_t v70 = *v68;
    uint64_t v69 = v68[1];
    uint64_t v71 = (uint64_t *)(*(void *)(v106 + 56) + v67);
    uint64_t v73 = *v71;
    uint64_t v72 = v71[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v109 = v24;
    unint64_t v76 = sub_19EEBD400(v70, v69);
    uint64_t v77 = v24[2];
    BOOL v78 = (v75 & 1) == 0;
    uint64_t v79 = v77 + v78;
    if (__OFADD__(v77, v78))
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    char v80 = v75;
    if (v24[3] >= v79)
    {
      if (v74)
      {
        uint64_t v24 = v109;
        if (v75) {
          goto LABEL_33;
        }
      }
      else
      {
        sub_19EFBF548();
        uint64_t v24 = v109;
        if (v80) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      sub_19EE8EEDC(v79, v74);
      unint64_t v81 = sub_19EEBD400(v70, v69);
      if ((v80 & 1) != (v82 & 1)) {
        goto LABEL_71;
      }
      unint64_t v76 = v81;
      uint64_t v24 = v109;
      if (v80)
      {
LABEL_33:
        uint64_t v61 = (void *)(v24[7] + 16 * v76);
        swift_bridgeObjectRelease();
        *uint64_t v61 = v73;
        v61[1] = v72;
        goto LABEL_34;
      }
    }
    v24[(v76 >> 6) + 8] |= 1 << v76;
    uint64_t v83 = (uint64_t *)(v24[6] + 16 * v76);
    *uint64_t v83 = v70;
    v83[1] = v69;
    uint64_t v84 = (void *)(v24[7] + 16 * v76);
    void *v84 = v73;
    v84[1] = v72;
    uint64_t v85 = v24[2];
    BOOL v54 = __OFADD__(v85, 1);
    uint64_t v86 = v85 + 1;
    if (v54) {
      goto LABEL_66;
    }
    void v24[2] = v86;
    swift_bridgeObjectRetain();
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v59 = v107;
  }
  uint64_t v66 = i + 4;
  if (i + 4 >= v105) {
    goto LABEL_62;
  }
  unint64_t v64 = *(void *)(v104 + 8 * v66);
  if (v64)
  {
    int64_t v65 = i + 4;
    goto LABEL_50;
  }
  while (1)
  {
    int64_t v65 = v66 + 1;
    if (__OFADD__(v66, 1)) {
      break;
    }
    if (v65 >= v105) {
      goto LABEL_62;
    }
    unint64_t v64 = *(void *)(v104 + 8 * v65);
    ++v66;
    if (v64) {
      goto LABEL_50;
    }
  }
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F11BF60(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v37 = v3 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v3 + 64);
  int64_t v38 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v39 = v3;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v40)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v40 = i;
      unint64_t v10 = v9 | (i << 6);
    }
    else
    {
      int64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_36;
      }
      if (v11 >= v38)
      {
LABEL_33:
        swift_release();
        return (uint64_t)a1;
      }
      unint64_t v12 = *(void *)(v37 + 8 * v11);
      int64_t v13 = i + 1;
      if (!v12)
      {
        int64_t v13 = i + 2;
        if (i + 2 >= v38) {
          goto LABEL_33;
        }
        unint64_t v12 = *(void *)(v37 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = i + 3;
          if (i + 3 >= v38) {
            goto LABEL_33;
          }
          unint64_t v12 = *(void *)(v37 + 8 * v13);
          if (!v12)
          {
            uint64_t v14 = i + 4;
            if (i + 4 >= v38) {
              goto LABEL_33;
            }
            unint64_t v12 = *(void *)(v37 + 8 * v14);
            if (!v12)
            {
              while (1)
              {
                int64_t v13 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_37;
                }
                if (v13 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v12 = *(void *)(v37 + 8 * v13);
                ++v14;
                if (v12) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = i + 4;
          }
        }
      }
LABEL_21:
      unint64_t v6 = (v12 - 1) & v12;
      int64_t v40 = v13;
      unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    uint64_t v15 = 16 * v10;
    uint64_t v16 = (uint64_t *)(*(void *)(v39 + 48) + v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = (uint64_t *)(*(void *)(v39 + 56) + v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = sub_19EEBD400(v18, v17);
    uint64_t v25 = a1[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      break;
    }
    char v28 = v23;
    if (a1[3] >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v23) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_19EFBF548();
        if (v28) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_19EE8EEDC(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_19EEBD400(v18, v17);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_38;
      }
      unint64_t v24 = v29;
      if (v28)
      {
LABEL_4:
        uint64_t v8 = (void *)(a1[7] + 16 * v24);
        swift_bridgeObjectRelease();
        void *v8 = v21;
        v8[1] = v20;
        goto LABEL_5;
      }
    }
    a1[(v24 >> 6) + 8] |= 1 << v24;
    uint64_t v31 = (uint64_t *)(a1[6] + 16 * v24);
    *uint64_t v31 = v18;
    v31[1] = v17;
    uint64_t v32 = (void *)(a1[7] + 16 * v24);
    *uint64_t v32 = v21;
    v32[1] = v20;
    uint64_t v33 = a1[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_35;
    }
    a1[2] = v35;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F11C250@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.HTTPTemplateAction.init(deserializing:using:)(a1, a2, a3);
}

unint64_t Models.HTTPTemplateAction.JSONBody.description.getter()
{
  return sub_19F11C530();
}

unint64_t sub_19F11C27C()
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_19F1DBDEC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v16[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DBDCC();
  uint64_t v4 = sub_19F1DBD8C();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15)
  {
    sub_19F122170();
    swift_allocError();
    *uint64_t v7 = 2;
    swift_willThrow();
  }
  else
  {
    uint64_t v8 = self;
    unint64_t v9 = (void *)sub_19F1DB3EC();
    v16[0] = 0;
    id v10 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v9, 1, v16);

    id v11 = v16[0];
    if (v10)
    {
      sub_19F1DCBEC();
      swift_unknownObjectRelease();
      sub_19EEBDBA4((uint64_t)v17, (uint64_t)v16);
      sub_19F122130();
      if (swift_dynamicCast())
      {
        sub_19EED5BFC(v4, v6);
        unint64_t v6 = v15;
      }
      else
      {
        sub_19F122170();
        swift_allocError();
        *int64_t v13 = 1;
        swift_willThrow();
        sub_19EED5BFC(v4, v6);
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
    }
    else
    {
      unint64_t v12 = v11;
      sub_19F1DB19C();

      swift_willThrow();
      sub_19EED5BFC(v4, v6);
    }
  }
  return v6;
}

unint64_t Models.HTTPTemplateAction.FormBody.description.getter()
{
  return sub_19F11C530();
}

unint64_t sub_19F11C530()
{
  return 0xD000000000000015;
}

uint64_t sub_19F11C5B0()
{
  uint64_t v39 = (void *)*v0;
  sub_19EEC4910();
  uint64_t v1 = *(void *)(sub_19F1DCB5C() + 16);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    unint64_t v5 = v3;
    uint64_t v6 = *v2;
    uint64_t v39 = (void *)*(v2 - 1);
    uint64_t v40 = v6;
    swift_bridgeObjectRetain();
    uint64_t v3 = &v39;
    uint64_t v7 = (void *)sub_19F1DCB5C();
    if (v7[2] < 2uLL)
    {
      swift_bridgeObjectRelease();
      sub_19F122170();
      swift_allocError();
      *uint64_t v35 = 2;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
    uint64_t v41 = v6;
    uint64_t v8 = v7[4];
    uint64_t v9 = v7[5];
    id v10 = (void *)v7[6];
    uint64_t v11 = v7[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = v10;
    uint64_t v40 = v11;
    uint64_t v12 = sub_19F1DCBAC();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    if (!v14)
    {
      swift_bridgeObjectRetain();
      unint64_t v26 = sub_19EEBD400(v8, v9);
      char v28 = v27;
      swift_bridgeObjectRelease();
      if (v28)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v39 = v5;
        uint64_t v3 = v5;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19EFBF548();
          uint64_t v3 = v39;
        }
        swift_bridgeObjectRelease();
        sub_19EF6CF54(v26, (uint64_t)v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v5;
      }
      goto LABEL_5;
    }
    uint64_t v37 = v1;
    uint64_t v38 = v14;
    uint64_t v15 = v12;
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = v5;
    uint64_t v17 = v8;
    unint64_t v19 = sub_19EEBD400(v8, v9);
    uint64_t v20 = v5[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (v5[3] >= v22)
    {
      if (v16)
      {
        uint64_t v3 = v39;
        if ((v18 & 1) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        sub_19EFBF548();
        uint64_t v3 = v39;
        if ((v23 & 1) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      sub_19EE8EEDC(v22, v16);
      unint64_t v24 = sub_19EEBD400(v17, v9);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_30;
      }
      unint64_t v19 = v24;
      uint64_t v3 = v39;
      if ((v23 & 1) == 0)
      {
LABEL_19:
        v3[(v19 >> 6) + 8] |= 1 << v19;
        char v30 = (uint64_t *)(v3[6] + 16 * v19);
        uint64_t *v30 = v17;
        v30[1] = v9;
        uint64_t v31 = (uint64_t *)(v3[7] + 16 * v19);
        *uint64_t v31 = v15;
        v31[1] = v38;
        uint64_t v32 = v3[2];
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_29;
        }
        uint64_t v3[2] = v34;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    uint64_t v4 = (uint64_t *)(v3[7] + 16 * v19);
    swift_bridgeObjectRelease();
    *uint64_t v4 = v15;
    v4[1] = v38;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v37;
LABEL_5:
    v2 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease_n();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t Models.HTTPTemplateAction.Parameter.Target.init(rawValue:)@<X0>(char *a1@<X8>)
{
  return sub_19F11CD20(a1);
}

uint64_t Models.HTTPTemplateAction.Parameter.Target.rawValue.getter()
{
  uint64_t result = 0x79726575516C7275;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726564616568;
      break;
    case 2:
      uint64_t result = 0x79646F426E6F736ALL;
      break;
    case 3:
      uint64_t result = 0x79646F426D726F66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F11CA3C(unsigned __int8 *a1, char *a2)
{
  return sub_19F039B10(*a1, *a2);
}

uint64_t sub_19F11CA48()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F11CB10()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F11CBC0()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F11CC84@<X0>(char *a1@<X8>)
{
  return Models.HTTPTemplateAction.Parameter.Target.init(rawValue:)(a1);
}

void sub_19F11CC90(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x79726575516C7275;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x726564616568;
      goto LABEL_3;
    case 2:
      unsigned int v4 = 1852797802;
      goto LABEL_6;
    case 3:
      unsigned int v4 = 1836216166;
LABEL_6:
      *a1 = v4 | 0x79646F4200000000;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t Models.HTTPTemplateAction.Parameter.InputType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  return sub_19F11CD20(a1);
}

uint64_t sub_19F11CD20@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 4;
  if (v2 < 4) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t Models.HTTPTemplateAction.Parameter.InputType.rawValue.getter()
{
  uint64_t result = 1954047348;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C69616D65;
      break;
    case 2:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 3:
      uint64_t result = 0x506C616D69636564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F11CE08(unsigned __int8 *a1, char *a2)
{
  return sub_19F039C80(*a1, *a2);
}

uint64_t sub_19F11CE14()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F11CEF0()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F11CFB4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F11D08C@<X0>(char *a1@<X8>)
{
  return Models.HTTPTemplateAction.Parameter.InputType.init(rawValue:)(a1);
}

void sub_19F11D098(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1954047348;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6C69616D65;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D754E656E6F6870;
      a1[1] = 0xEB00000000726562;
      break;
    case 3:
      *a1 = 0x506C616D69636564;
      a1[1] = 0xEA00000000006461;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t Models.HTTPTemplateAction.Parameter.init(key:target:inputType:title:isRequired:maximumLength:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  char v10 = *a3;
  char v11 = *a4;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = v10;
  *(unsigned char *)(a9 + 17) = v11;
  *(void *)(a9 + 24) = a5;
  *(void *)(a9 + 32) = a6;
  *(unsigned char *)(a9 + 40) = a7;
  *(void *)(a9 + 48) = a8;
  *(unsigned char *)(a9 + 56) = a10 & 1;
  return result;
}

uint64_t Models.HTTPTemplateAction.Parameter.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRelease();
  JSONObject.subscript.getter(7955819, 0xE300000000000000, (uint64_t)v43);
  sub_19EEC3ED8((uint64_t)v43, (uint64_t)v40, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = v41;
  if (!v41)
  {
    sub_19EEBD664((uint64_t)v40, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v43);
    goto LABEL_12;
  }
  uint64_t v5 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  uint64_t v8 = v7;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  sub_19EEC3418((uint64_t)v43);
  if (!v8)
  {
LABEL_12:
    sub_19EF5B580();
    swift_allocError();
    *unint64_t v24 = 7955819;
    unint64_t v14 = 0xE300000000000000;
LABEL_16:
    v24[1] = v14;
    void v24[2] = 0x20000001EF14A7B8uLL;
    v24[3] = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  JSONObject.subscript.getter(0x746567726174, 0xE600000000000000, (uint64_t)v43);
  sub_19EEC3ED8((uint64_t)v43, (uint64_t)v40, (uint64_t *)&unk_1E946FD20);
  uint64_t v9 = v41;
  if (!v41)
  {
    sub_19EEBD664((uint64_t)v40, (uint64_t *)&unk_1E946FD20);
    goto LABEL_14;
  }
  uint64_t v10 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  uint64_t v12 = v11;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  if (!v12)
  {
LABEL_14:
    sub_19EEC3418((uint64_t)v43);
    goto LABEL_15;
  }
  Models.HTTPTemplateAction.Parameter.Target.init(rawValue:)((char *)v37);
  int v13 = LOBYTE(v37[0]);
  sub_19EEC3418((uint64_t)v43);
  if (v13 == 4)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    *unint64_t v24 = 0x746567726174;
    unint64_t v14 = 0xE600000000000000;
    goto LABEL_16;
  }
  unint64_t v14 = 0xE900000000000065;
  JSONObject.subscript.getter(0x7079547475706E69, 0xE900000000000065, (uint64_t)v43);
  sub_19EEC3ED8((uint64_t)v43, (uint64_t)v40, (uint64_t *)&unk_1E946FD20);
  uint64_t v15 = v41;
  if (!v41)
  {
    sub_19EEBD664((uint64_t)v40, (uint64_t *)&unk_1E946FD20);
    goto LABEL_18;
  }
  int v45 = v13;
  uint64_t v16 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  uint64_t v18 = v17;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  if (!v18)
  {
LABEL_18:
    sub_19EEC3418((uint64_t)v43);
    goto LABEL_19;
  }
  Models.HTTPTemplateAction.Parameter.InputType.init(rawValue:)((char *)v37);
  int v19 = LOBYTE(v37[0]);
  sub_19EEC3418((uint64_t)v43);
  if (v19 == 4)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    *unint64_t v24 = 0x7059547475706E69;
    goto LABEL_16;
  }
  int v44 = v19;
  JSONObject.subscript.getter(0x656C746974, 0xE500000000000000, (uint64_t)v43);
  sub_19EEC3ED8((uint64_t)v43, (uint64_t)v40, (uint64_t *)&unk_1E946FD20);
  uint64_t v20 = v41;
  if (v41)
  {
    uint64_t v21 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    uint64_t v35 = v23;
    uint64_t v36 = v22;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  }
  else
  {
    sub_19EEBD664((uint64_t)v40, (uint64_t *)&unk_1E946FD20);
    uint64_t v35 = 0;
    uint64_t v36 = 0;
  }
  sub_19EEC3418((uint64_t)v43);
  JSONObject.subscript.getter(0x7269757165527369, 0xEA00000000006465, (uint64_t)v40);
  sub_19EEC3ED8((uint64_t)v40, (uint64_t)v37, (uint64_t *)&unk_1E946FD20);
  uint64_t v26 = v38;
  if (!v38)
  {
    sub_19EEBD664((uint64_t)v37, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v40);
    goto LABEL_25;
  }
  uint64_t v27 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  char v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v26, v27);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
  sub_19EEC3418((uint64_t)v40);
  if (v28 == 2)
  {
LABEL_25:
    char v29 = 0;
    goto LABEL_26;
  }
  char v29 = v28 & 1;
LABEL_26:
  JSONObject.subscript.getter(0x4C6D756D6978616DLL, 0xED00006874676E65, (uint64_t)v40);
  sub_19EEC3ED8((uint64_t)v40, (uint64_t)v37, (uint64_t *)&unk_1E946FD20);
  uint64_t v30 = v38;
  if (v38)
  {
    uint64_t v31 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 40))(v30, v31);
    char v34 = v33 & 1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
  }
  else
  {
    sub_19EEBD664((uint64_t)v37, (uint64_t *)&unk_1E946FD20);
    uint64_t v32 = 0;
    char v34 = 1;
  }
  sub_19EEC3418(a1);
  uint64_t result = sub_19EEC3418((uint64_t)v40);
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v45;
  *(unsigned char *)(a2 + 17) = v44;
  *(void *)(a2 + 24) = v36;
  *(void *)(a2 + 32) = v35;
  *(unsigned char *)(a2 + 40) = v29;
  *(void *)(a2 + 48) = v32;
  *(unsigned char *)(a2 + 56) = v34;
  return result;
}

uint64_t Models.HTTPTemplateAction.Parameter.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void Models.HTTPTemplateAction.Parameter.target.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

void Models.HTTPTemplateAction.Parameter.inputType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

uint64_t Models.HTTPTemplateAction.Parameter.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.HTTPTemplateAction.Parameter.isRequired.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t Models.HTTPTemplateAction.Parameter.maximumLength.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_19F11D770()
{
  uint64_t result = 7955819;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746567726174;
      break;
    case 2:
      uint64_t result = 0x7079547475706E69;
      break;
    case 3:
      uint64_t result = 0x656C746974;
      break;
    case 4:
      uint64_t result = 0x7269757165527369;
      break;
    case 5:
      uint64_t result = 0x4C6D756D6978616DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F11D83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F121DE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F11D864(uint64_t a1)
{
  unint64_t v2 = sub_19F11FC90();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F11D8A0(uint64_t a1)
{
  unint64_t v2 = sub_19F11FC90();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F11D8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Models.HTTPTemplateAction.Parameter.init(deserializing:using:)(a1, a2);
}

uint64_t Models.HTTPTemplateAction.Substitutions.urlQuery.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.Substitutions.urlQuery.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Models.HTTPTemplateAction.Substitutions.urlQuery.modify())()
{
  return nullsub_1;
}

uint64_t Models.HTTPTemplateAction.Substitutions.headers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.Substitutions.headers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Models.HTTPTemplateAction.Substitutions.headers.modify())()
{
  return nullsub_1;
}

uint64_t Models.HTTPTemplateAction.Substitutions.jsonBody.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.Substitutions.jsonBody.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Models.HTTPTemplateAction.Substitutions.jsonBody.modify())()
{
  return nullsub_1;
}

uint64_t Models.HTTPTemplateAction.Substitutions.formBody.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.Substitutions.formBody.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Models.HTTPTemplateAction.Substitutions.formBody.modify())()
{
  return nullsub_1;
}

uint64_t Models.HTTPTemplateAction.Substitutions.init(urlQuery:headers:jsonBody:formBody:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_19EE8F204(MEMORY[0x1E4FBC860]);
  sub_19EE8F204(v10);
  sub_19EEBF898(v10);
  sub_19EE8F204(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t Models.HTTPTemplateAction.Substitutions.setParameter(value:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a3;
  uint64_t v4 = *(void *)(a3 + 8);
  switch(*(unsigned char *)(a3 + 16))
  {
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v12[0] = v3[1];
      v3[1] = 0x8000000000000000;
      sub_19EE8ED54(a1, a2, v5, v4, isUniquelyReferenced_nonNull_native);
      v3[1] = v12[0];
      goto LABEL_6;
    case 2:
      void v12[3] = MEMORY[0x1E4FBB1A0];
      v12[0] = a1;
      v12[1] = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_19EE7D94C((uint64_t)v12, v5, v4);
    case 3:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v10 = swift_isUniquelyReferenced_nonNull_native();
      v12[0] = v3[3];
      v3[3] = 0x8000000000000000;
      sub_19EE8ED54(a1, a2, v5, v4, v10);
      v3[3] = v12[0];
      goto LABEL_6;
    default:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v8 = swift_isUniquelyReferenced_nonNull_native();
      v12[0] = *v3;
      *uint64_t v3 = 0x8000000000000000;
      sub_19EE8ED54(a1, a2, v5, v4, v8);
      *uint64_t v3 = v12[0];
LABEL_6:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19F11DCE0(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (void *)result;
    uint64_t v6 = v3 - 1;
    if (v3 != 1)
    {
      uint64_t v21 = (void *)result;
      swift_bridgeObjectRetain();
      id v7 = v2;
      uint64_t v20 = v4;
      char v8 = (uint64_t *)(v4 + 40);
      uint64_t v19 = v6;
      while (1)
      {
        uint64_t v11 = *(v8 - 1);
        uint64_t v12 = *v8;
        *(void *)&v23[0] = v11;
        *((void *)&v23[0] + 1) = v12;
        swift_bridgeObjectRetain_n();
        id v13 = objc_msgSend(v7, sel___swift_objectForKeyedSubscript_, sub_19F1DD62C());
        swift_unknownObjectRelease();
        if (v13)
        {
          sub_19F1DCBEC();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v23, 0, sizeof(v23));
        }
        sub_19EEBDC4C((uint64_t)v23, (uint64_t)&v24, &qword_1EB393260);
        if (v26)
        {
          sub_19F122130();
          char v14 = swift_dynamicCast();
          swift_bridgeObjectRelease();
          if (v14)
          {

            id v7 = v22;
            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_19EEBD664((uint64_t)&v24, &qword_1EB393260);
        }
        id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA60]), sel_init);
        uint64_t v24 = v11;
        uint64_t v25 = v12;
        swift_bridgeObjectRetain();
        id v10 = v9;
        objc_msgSend(v7, sel___swift_setObject_forKeyedSubscript_, v10, sub_19F1DD62C());
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        id v7 = v10;
LABEL_6:
        v8 += 2;
        if (!--v6)
        {
          uint64_t v4 = v20;
          swift_bridgeObjectRelease();
          uint64_t v5 = v21;
          uint64_t v6 = v19;
          goto LABEL_15;
        }
      }
    }
    id v7 = v2;
LABEL_15:
    uint64_t v15 = v4 + 16 * v6;
    uint64_t v17 = *(void *)(v15 + 32);
    uint64_t v16 = *(void *)(v15 + 40);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_19F1DD42C();
    uint64_t v24 = v17;
    uint64_t v25 = v16;
    swift_bridgeObjectRetain();
    objc_msgSend(v7, sel___swift_setObject_forKeyedSubscript_, v18, sub_19F1DD62C());
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_19F11DF84(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_19F1DAE3C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEBDBA4(a3, (uint64_t)v23);
  sub_19EEBDBA4(a4, (uint64_t)v24);
  sub_19EEBDBA4((uint64_t)v23, (uint64_t)v21);
  sub_19EEBDBA4((uint64_t)v24, (uint64_t)v22);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_19EEBD664((uint64_t)v23, &qword_1E946CEB8);
    uint64_t v17 = v22;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v13 = v19;
  uint64_t v12 = v20;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  sub_19EEBDBA4((uint64_t)v23, (uint64_t)v21);
  sub_19EEBDBA4((uint64_t)v24, (uint64_t)v22);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)v23, &qword_1E946CEB8);
    uint64_t v17 = v21;
    goto LABEL_11;
  }
  uint64_t v15 = v19;
  uint64_t v14 = v20;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  v21[0] = a1;
  v21[1] = a2;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v16 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (v16) {
    sub_19F1DBEFC();
  }
  uint64_t v19 = v15;
  uint64_t v20 = v14;
  sub_19F1DAE0C();
  sub_19EEC4910();
  sub_19F1DCB9C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  uint64_t v19 = v13;
  uint64_t v20 = v12;
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19EEBD664((uint64_t)v23, &qword_1E946CEB8);
  return v21[0];
}

uint64_t sub_19F11E23C()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F11E29C()
{
  return sub_19F1DC0EC();
}

uint64_t sub_19F11E2EC()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F11E34C()
{
  return sub_19F1DC0EC();
}

uint64_t Models.HTTPTemplateAction.Parameter.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475130);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v23 = *(unsigned __int8 *)(v1 + 16);
  int v19 = *(unsigned __int8 *)(v1 + 17);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v17 = *(void *)(v1 + 32);
  uint64_t v18 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 40);
  uint64_t v14 = *(void *)(v1 + 48);
  int v15 = *(unsigned __int8 *)(v1 + 56);
  int v16 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F11FC90();
  sub_19F1DD8FC();
  LOBYTE(v21) = 0;
  uint64_t v8 = v20;
  sub_19F1DD26C();
  if (!v8)
  {
    char v9 = v19;
    uint64_t v10 = v17;
    uint64_t v11 = v18;
    char v12 = v16;
    LOBYTE(v21) = v23;
    char v24 = 1;
    sub_19F11FCE4();
    sub_19F1DD2AC();
    LOBYTE(v21) = v9;
    char v24 = 2;
    sub_19F11FD38();
    sub_19F1DD2AC();
    uint64_t v21 = v11;
    uint64_t v22 = v10;
    char v24 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475150);
    sub_19F11FD8C();
    sub_19F1DD2AC();
    LOBYTE(v21) = v12;
    char v24 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475168);
    sub_19EE78558(&qword_1E9475170, &qword_1E9475168);
    sub_19F1DD2AC();
    uint64_t v21 = v14;
    LOBYTE(v22) = v15;
    char v24 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475178);
    sub_19F11FE2C();
    sub_19F1DD2AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Models.HTTPTemplateAction.Parameter.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475190);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F11FC90();
  sub_19F1DD8AC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    LOBYTE(v21) = 0;
    uint64_t v10 = sub_19F1DD18C();
    uint64_t v12 = v11;
    char v24 = 1;
    sub_19F11FECC();
    swift_bridgeObjectRetain();
    sub_19F1DD1BC();
    int v23 = v21;
    char v24 = 2;
    sub_19F11FF20();
    sub_19F1DD1BC();
    int v20 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475150);
    char v24 = 3;
    sub_19F11FF74();
    sub_19F1DD1BC();
    uint64_t v18 = v21;
    int v19 = a2;
    uint64_t v13 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475168);
    char v24 = 4;
    sub_19EE78558(&qword_1E94751B8, &qword_1E9475168);
    swift_bridgeObjectRetain();
    sub_19F1DD1BC();
    HIDWORD(v17) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475178);
    char v24 = 5;
    sub_19F120014();
    sub_19F1DD1BC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v14 = v21;
    char v15 = v22;
    int v16 = v19;
    *int v19 = v10;
    v16[1] = v12;
    *((unsigned char *)v16 + 16) = v23;
    *((unsigned char *)v16 + 17) = v20;
    void v16[3] = v18;
    id v16[4] = v13;
    *((unsigned char *)v16 + 40) = BYTE4(v17);
    v16[6] = v14;
    *((unsigned char *)v16 + 56) = v15;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F11EAB4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Models.HTTPTemplateAction.Parameter.init(from:)(a1, a2);
}

uint64_t sub_19F11EACC(void *a1)
{
  return Models.HTTPTemplateAction.Parameter.encode(to:)(a1);
}

uint64_t sub_19F11EAE4()
{
  uint64_t result = 0x654D6E6F69746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574656D61726170;
      break;
    case 2:
      uint64_t result = 0x74736575716572;
      break;
    case 3:
      uint64_t result = 0x4173736563637573;
      break;
    case 4:
      uint64_t result = 0x416572756C696166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F11EBA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F121B58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F11EBD0(uint64_t a1)
{
  unint64_t v2 = sub_19F1200B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F11EC0C(uint64_t a1)
{
  unint64_t v2 = sub_19F1200B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Models.HTTPTemplateAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v56 = type metadata accessor for Models.HTTPTemplateAction();
  MEMORY[0x1F4188790](v56);
  uint64_t v55 = (uint64_t *)((char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for NetRequest();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v44 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94751D0);
  uint64_t v57 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  unint64_t v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_19F1200B4();
  uint64_t v14 = (uint64_t)v60;
  sub_19F1DD8AC();
  if (v14)
  {
    int v16 = v59;
  }
  else
  {
    BOOL v54 = v6;
    uint64_t v53 = v4;
    uint64_t v60 = v9;
    uint64_t v15 = v58;
    v69[0] = 0;
    sub_19F046530();
    sub_19F1DD17C();
    if (v70[0]) {
      uint64_t v18 = v70[0];
    }
    else {
      uint64_t v18 = MEMORY[0x1E4FBC860];
    }
    if (v70[0]) {
      uint64_t v19 = v70[1];
    }
    else {
      uint64_t v19 = MEMORY[0x1E4FBC868];
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94751E0);
    v69[0] = 1;
    sub_19F120108(&qword_1E94751E8, (void (*)(void))sub_19F120178);
    sub_19F1DD1BC();
    int v16 = v59;
    uint64_t v52 = v18;
    uint64_t v51 = v19;
    uint64_t v50 = v70[0];
    __swift_project_boxed_opaque_existential_1(v59, v59[3]);
    uint64_t v20 = sub_19F1DD89C();
    uint64_t v49 = 0xD000000000000023;
    uint64_t v48 = 0x800000019F26A630;
    sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v20);
    swift_bridgeObjectRelease();
    v69[0] = 3;
    decodeActionModel<A, B>(using:container:forKey:)((uint64_t)v70);
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    uint64_t v21 = sub_19F1DD89C();
    sub_19F0D720C(v49, v48, v21);
    swift_bridgeObjectRelease();
    LOBYTE(v68) = 4;
    decodeActionModel<A, B>(using:container:forKey:)((uint64_t)v69);
    LOBYTE(v61) = 2;
    sub_19F1DD11C();
    uint64_t v48 = v67;
    uint64_t v49 = v66;
    char v47 = __swift_project_boxed_opaque_existential_1(v65, v66);
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    sub_19F1DD89C();
    uint64_t v22 = swift_bridgeObjectRetain();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v22);
    uint64_t v23 = v61;
    uint64_t v24 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
    uint64_t v71 = v24;
    swift_bridgeObjectRetain();
    uint64_t v45 = 0x800000019F2699A0;
    uint64_t v25 = sub_19F17A6BC(0xD00000000000001FLL, 0x800000019F2699A0, v23);
    uint64_t v46 = v23;
    swift_bridgeObjectRelease();
    if (v25)
    {
      sub_19EF5D2D4(v25);
      uint64_t v24 = v71;
    }
    uint64_t v26 = v15;
    uint64_t v27 = (int *)v56;
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9A0);
    *(void *)&long long v61 = v24;
    sub_19EEBDC00(&v61, v64);
    uint64_t v28 = v46;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v63 = v28;
    sub_19EE7DA20(v64, 0xD00000000000001FLL, v45, isUniquelyReferenced_nonNull_native);
    uint64_t v30 = v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v61 = v30;
    uint64_t v31 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0((uint64_t *)&v61);
    Decoder.withUserInfo(_:)(v31, v49, v48, &v68);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
    sub_19EEC4154((uint64_t)&v68, (uint64_t)v65);
    uint64_t v32 = (uint64_t)v60;
    NetRequest.init(from:)(v65, (uint64_t)v60);
    uint64_t v33 = (uint64_t)v54;
    uint64_t v58 = v10;
    sub_19EE5C360(v32, (uint64_t)v54);
    sub_19EEC3ED8((uint64_t)v70, (uint64_t)v65, qword_1E946D0B8);
    sub_19EEC3ED8((uint64_t)v69, (uint64_t)&v61, qword_1E946D0B8);
    uint64_t v34 = v33;
    uint64_t v35 = (uint64_t)v55;
    uint64_t v36 = v51;
    void *v55 = v52;
    *(void *)(v35 + 8) = v36;
    *(void *)(v35 + 16) = v50;
    sub_19EE5C360(v34, v35 + v27[6]);
    uint64_t v37 = (uint64_t *)(v34 + *(int *)(v53 + 40));
    uint64_t v39 = *v37;
    uint64_t v38 = v37[1];
    swift_bridgeObjectRetain();
    sub_19EE5C208(v34);
    uint64_t v40 = (void *)(v35 + v27[7]);
    if (v38)
    {
      void *v40 = v39;
      v40[1] = v38;
      uint64_t v41 = (void *)(v35 + v27[8]);
      void *v41 = v39;
      v41[1] = v38;
    }
    else
    {
      void *v40 = 0;
      v40[1] = 0;
      uint64_t v42 = (void *)(v35 + v27[8]);
      void *v42 = 0;
      v42[1] = 0;
    }
    uint64_t v43 = v57;
    sub_19EEBDC4C((uint64_t)v65, v35 + v27[9], qword_1E946D0B8);
    sub_19EEBDC4C((uint64_t)&v61, v35 + v27[10], qword_1E946D0B8);
    sub_19F11FC2C(v35, v26);
    swift_bridgeObjectRetain();
    sub_19EE5C208((uint64_t)v60);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
    sub_19EEBD664((uint64_t)v69, qword_1E946D0B8);
    sub_19EEBD664((uint64_t)v70, qword_1E946D0B8);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v58);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
}

uint64_t Models.HTTPTemplateAction.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94751F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1200B4();
  sub_19F1DD8FC();
  long long v35 = *v1;
  LOBYTE(v32[0]) = 0;
  sub_19F046118();
  uint64_t v7 = v29;
  sub_19F1DD2AC();
  if (v7) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v29 = v4;
  *(void *)&long long v35 = *((void *)v1 + 2);
  LOBYTE(v32[0]) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94751E0);
  sub_19F120108(&qword_1E9475200, (void (*)(void))sub_19F1201CC);
  sub_19F1DD2AC();
  uint64_t v26 = v3;
  uint64_t v27 = v1;
  uint64_t v9 = a1[3];
  uint64_t v28 = v6;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v10 = sub_19F1DD8EC();
  sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for Models.HTTPTemplateAction();
  uint64_t v12 = (uint64_t)v27 + *(int *)(v11 + 36);
  LOBYTE(v35) = 3;
  encodeActionModel<A, B>(_:using:container:forKey:)(v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_19F1DD8EC();
  sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t)v27 + *(int *)(v11 + 40);
  LOBYTE(v35) = 4;
  encodeActionModel<A, B>(_:using:container:forKey:)(v14);
  uint64_t v25 = v11;
  LOBYTE(v35) = 2;
  sub_19F1DD20C();
  uint64_t v23 = v34;
  uint64_t v24 = v33;
  uint64_t v22 = __swift_project_boxed_opaque_existential_1(v32, v33);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8EC();
  uint64_t v15 = swift_bridgeObjectRetain();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v15);
  uint64_t v16 = v35;
  uint64_t v17 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
  uint64_t v37 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_19F17A6BC(0xD00000000000001FLL, 0x800000019F2699A0, v16);
  swift_bridgeObjectRelease();
  if (v18)
  {
    sub_19EF5D2D4(v18);
    uint64_t v17 = v37;
  }
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9A0);
  *(void *)&long long v35 = v17;
  sub_19EEBDC00(&v35, v31);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v30 = v16;
  sub_19EE7DA20(v31, 0xD00000000000001FLL, 0x800000019F2699A0, isUniquelyReferenced_nonNull_native);
  uint64_t v20 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v35 = v20;
  uint64_t v21 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0((uint64_t *)&v35);
  sub_19F13D4CC(v21, v24, v23, (uint64_t **)&v35);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  NetRequest.encode(to:)(&v35);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v35);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v26);
}

uint64_t sub_19F11FA9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.HTTPTemplateAction.init(from:)(a1, a2);
}

uint64_t sub_19F11FAB4(void *a1)
{
  return Models.HTTPTemplateAction.encode(to:)(a1);
}

BOOL _s9JetEngine6ModelsO18HTTPTemplateActionV9ParameterV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2 = *(unsigned char *)(a1 + 16);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 17);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  int v6 = *(unsigned __int8 *)(a1 + 40);
  char v7 = *(unsigned char *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 17);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  int v11 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v16 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a1 + 48);
  char v18 = *(unsigned char *)(a2 + 56);
  char v19 = *(unsigned char *)(a1 + 56);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_19F1DD44C(), result = 0, (v12 & 1) != 0))
  {
    if ((sub_19F039B10(v2, v7) & 1) == 0 || (sub_19F039C80(v3, v8) & 1) == 0) {
      return 0;
    }
    if (v5)
    {
      if (!v9) {
        return 0;
      }
      if (v4 == v10 && v5 == v9)
      {
        if (v6 != v11) {
          return 0;
        }
        goto LABEL_16;
      }
      char v14 = sub_19F1DD44C();
      BOOL result = 0;
      if ((v14 & 1) == 0) {
        return result;
      }
LABEL_15:
      if ((v6 ^ v11)) {
        return result;
      }
LABEL_16:
      if ((v19 & 1) == 0)
      {
        char v15 = v18;
        if (v17 != v16) {
          char v15 = 1;
        }
        return (v15 & 1) == 0;
      }
      return (v18 & 1) != 0;
    }
    BOOL result = 0;
    if (!v9) {
      goto LABEL_15;
    }
  }
  return result;
}

uint64_t sub_19F11FC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Models.HTTPTemplateAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_19F11FC90()
{
  unint64_t result = qword_1E9475138;
  if (!qword_1E9475138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475138);
  }
  return result;
}

unint64_t sub_19F11FCE4()
{
  unint64_t result = qword_1E9475140;
  if (!qword_1E9475140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475140);
  }
  return result;
}

unint64_t sub_19F11FD38()
{
  unint64_t result = qword_1E9475148;
  if (!qword_1E9475148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475148);
  }
  return result;
}

unint64_t sub_19F11FD8C()
{
  unint64_t result = qword_1E9475158;
  if (!qword_1E9475158)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9475150);
    sub_19EE78558(&qword_1E9475160, &qword_1EB392310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475158);
  }
  return result;
}

unint64_t sub_19F11FE2C()
{
  unint64_t result = qword_1E9475180;
  if (!qword_1E9475180)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9475178);
    sub_19EE78558(&qword_1E9475188, &qword_1E946F920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475180);
  }
  return result;
}

unint64_t sub_19F11FECC()
{
  unint64_t result = qword_1E9475198;
  if (!qword_1E9475198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475198);
  }
  return result;
}

unint64_t sub_19F11FF20()
{
  unint64_t result = qword_1E94751A0;
  if (!qword_1E94751A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94751A0);
  }
  return result;
}

unint64_t sub_19F11FF74()
{
  unint64_t result = qword_1E94751A8;
  if (!qword_1E94751A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9475150);
    sub_19EE78558((unint64_t *)&qword_1E94751B0, &qword_1EB392310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94751A8);
  }
  return result;
}

unint64_t sub_19F120014()
{
  unint64_t result = qword_1E94751C0;
  if (!qword_1E94751C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9475178);
    sub_19EE78558(&qword_1E94751C8, &qword_1E946F920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94751C0);
  }
  return result;
}

unint64_t sub_19F1200B4()
{
  unint64_t result = qword_1E94751D8;
  if (!qword_1E94751D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94751D8);
  }
  return result;
}

uint64_t sub_19F120108(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E94751E0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19F120178()
{
  unint64_t result = qword_1E94751F0;
  if (!qword_1E94751F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94751F0);
  }
  return result;
}

unint64_t sub_19F1201CC()
{
  unint64_t result = qword_1E9475208;
  if (!qword_1E9475208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475208);
  }
  return result;
}

unint64_t sub_19F120224()
{
  unint64_t result = qword_1E9475210;
  if (!qword_1E9475210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475210);
  }
  return result;
}

unint64_t sub_19F12027C()
{
  unint64_t result = qword_1E9475218;
  if (!qword_1E9475218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475218);
  }
  return result;
}

unint64_t sub_19F1202D4()
{
  unint64_t result = qword_1E9475220;
  if (!qword_1E9475220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475220);
  }
  return result;
}

uint64_t sub_19F120328@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F120334(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_19F120378@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 40);
  return result;
}

unsigned char *sub_19F120384(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 40) = *result;
  return result;
}

uint64_t sub_19F120390@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 56);
  *(void *)a2 = *(void *)(result + 48);
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_19F1203A4(uint64_t result, uint64_t a2)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(a2 + 48) = *(void *)result;
  *(unsigned char *)(a2 + 56) = v2;
  return result;
}

uint64_t *_s18HTTPTemplateActionVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    char v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    char v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    int v11 = (char *)a2 + v9;
    uint64_t v12 = sub_19F1DB34C();
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(v10, v11, v12);
    uint64_t v13 = (int *)type metadata accessor for NetRequest();
    uint64_t v14 = v13[5];
    char v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    uint64_t v18 = *(void *)v16;
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)char v15 = v18;
    *((void *)v15 + 1) = v17;
    *(void *)&v10[v13[6]] = *(void *)&v11[v13[6]];
    *(void *)&v10[v13[7]] = *(void *)&v11[v13[7]];
    *(void *)&v10[v13[8]] = *(void *)&v11[v13[8]];
    uint64_t v19 = v13[9];
    uint64_t v20 = &v10[v19];
    uint64_t v21 = &v11[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    v20[16] = v21[16];
    uint64_t v23 = v13[10];
    uint64_t v24 = &v10[v23];
    uint64_t v25 = &v11[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    *(void *)&v10[v13[11]] = *(void *)&v11[v13[11]];
    uint64_t v27 = a3[7];
    uint64_t v28 = a3[8];
    uint64_t v29 = (uint64_t *)((char *)v7 + v27);
    uint64_t v30 = (uint64_t *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = (uint64_t *)((char *)v7 + v28);
    uint64_t v33 = (uint64_t *)((char *)a2 + v28);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = a3[9];
    uint64_t v36 = (char *)v7 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = *(uint64_t *)((char *)a2 + v35 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38)
    {
      uint64_t v39 = *((void *)v37 + 4);
      *((void *)v36 + 3) = v38;
      *((void *)v36 + 4) = v39;
      (**(void (***)(char *, char *, uint64_t))(v38 - 8))(v36, v37, v38);
    }
    else
    {
      long long v40 = *((_OWORD *)v37 + 1);
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v40;
      *((void *)v36 + 4) = *((void *)v37 + 4);
    }
    uint64_t v41 = a3[10];
    uint64_t v42 = (char *)v7 + v41;
    uint64_t v43 = (char *)a2 + v41;
    uint64_t v44 = *(uint64_t *)((char *)a2 + v41 + 24);
    if (v44)
    {
      uint64_t v45 = *((void *)v43 + 4);
      *((void *)v42 + 3) = v44;
      *((void *)v42 + 4) = v45;
      (**(void (***)(void))(v44 - 8))();
    }
    else
    {
      long long v46 = *((_OWORD *)v43 + 1);
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v46;
      *((void *)v42 + 4) = *((void *)v43 + 4);
    }
  }
  return v7;
}

uint64_t _s18HTTPTemplateActionVwxx(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for NetRequest();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[9];
  if (*(void *)(v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v6);
  }
  uint64_t result = a1 + a2[10];
  if (*(void *)(result + 24)) {
    return __swift_destroy_boxed_opaque_existential_1Tm(result);
  }
  return result;
}

void *_s18HTTPTemplateActionVwcp(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_19F1DB34C();
  long long v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46(v8, v9, v10);
  int v11 = (int *)type metadata accessor for NetRequest();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
  *(void *)&v8[v11[7]] = *(void *)&v9[v11[7]];
  *(void *)&v8[v11[8]] = *(void *)&v9[v11[8]];
  uint64_t v17 = v11[9];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  unsigned char v18[16] = v19[16];
  uint64_t v21 = v11[10];
  uint64_t v22 = &v8[v21];
  uint64_t v23 = &v9[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  *(void *)&v8[v11[11]] = *(void *)&v9[v11[11]];
  uint64_t v25 = a3[7];
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)((char *)a1 + v25);
  uint64_t v28 = (void *)((char *)a2 + v25);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = (void *)((char *)a1 + v26);
  uint64_t v31 = (void *)((char *)a2 + v26);
  uint64_t v32 = v31[1];
  void *v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = a3[9];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = *(void *)((char *)a2 + v33 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36)
  {
    uint64_t v37 = *((void *)v35 + 4);
    *((void *)v34 + 3) = v36;
    *((void *)v34 + 4) = v37;
    (**(void (***)(char *, char *, uint64_t))(v36 - 8))(v34, v35, v36);
  }
  else
  {
    long long v38 = *((_OWORD *)v35 + 1);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v38;
    *((void *)v34 + 4) = *((void *)v35 + 4);
  }
  uint64_t v39 = a3[10];
  long long v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = *(void *)((char *)a2 + v39 + 24);
  if (v42)
  {
    uint64_t v43 = *((void *)v41 + 4);
    *((void *)v40 + 3) = v42;
    *((void *)v40 + 4) = v43;
    (**(void (***)(void))(v42 - 8))();
  }
  else
  {
    long long v44 = *((_OWORD *)v41 + 1);
    *(_OWORD *)long long v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v44;
    *((void *)v40 + 4) = *((void *)v41 + 4);
  }
  return a1;
}

void *_s18HTTPTemplateActionVwca(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for NetRequest();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[8]] = *(void *)&v8[v10[8]];
  uint64_t v14 = v10[9];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  *(void *)uint64_t v15 = *(void *)&v8[v14];
  *((void *)v15 + 1) = *(void *)&v8[v14 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[16] = v16[16];
  uint64_t v17 = v10[10];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (uint64_t)a1 + v26;
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v29 = *(void *)((char *)a2 + v26 + 24);
  if (*(void *)((char *)a1 + v26 + 24))
  {
    if (v29)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v27, v28);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(v27);
  }
  else if (v29)
  {
    *(void *)(v27 + 24) = v29;
    *(void *)(v27 + 32) = v28[4];
    (**(void (***)(uint64_t, char *))(v29 - 8))(v27, (char *)v28);
    goto LABEL_8;
  }
  long long v30 = *(_OWORD *)v28;
  long long v31 = *((_OWORD *)v28 + 1);
  *(void *)(v27 + 32) = v28[4];
  *(_OWORD *)uint64_t v27 = v30;
  *(_OWORD *)(v27 + 16) = v31;
LABEL_8:
  uint64_t v32 = a3[10];
  uint64_t v33 = (uint64_t)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *((void *)v34 + 3);
  if (!*(void *)((char *)a1 + v32 + 24))
  {
    if (v35)
    {
      *(void *)(v33 + 24) = v35;
      *(void *)(v33 + 32) = *((void *)v34 + 4);
      (**(void (***)(uint64_t, char *))(v35 - 8))(v33, v34);
      return a1;
    }
LABEL_14:
    long long v36 = *(_OWORD *)v34;
    long long v37 = *((_OWORD *)v34 + 1);
    *(void *)(v33 + 32) = *((void *)v34 + 4);
    *(_OWORD *)uint64_t v33 = v36;
    *(_OWORD *)(v33 + 16) = v37;
    return a1;
  }
  if (!v35)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v33);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v33, (uint64_t *)v34);
  return a1;
}

uint64_t _s18HTTPTemplateActionVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for NetRequest();
  *(_OWORD *)(v7 + v10[5]) = *(_OWORD *)(v8 + v10[5]);
  *(void *)(v7 + v10[6]) = *(void *)(v8 + v10[6]);
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  *(void *)(v7 + v10[8]) = *(void *)(v8 + v10[8]);
  uint64_t v11 = v10[9];
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v7 + v10[10]) = *(_OWORD *)(v8 + v10[10]);
  *(void *)(v7 + v10[11]) = *(void *)(v8 + v10[11]);
  uint64_t v14 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v15 = a3[9];
  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  return a1;
}

void *_s18HTTPTemplateActionVwta(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for NetRequest();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[8]] = *(void *)&v8[v10[8]];
  uint64_t v16 = v10[9];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  uint64_t v19 = *(void *)&v8[v16 + 8];
  *(void *)uint64_t v17 = *(void *)&v8[v16];
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v17[16] = v18[16];
  uint64_t v20 = v10[10];
  uint64_t v21 = &v7[v20];
  long long v22 = &v8[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[7];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[8];
  long long v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *long long v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[9];
  uint64_t v36 = (uint64_t)a1 + v35;
  long long v37 = (char *)a2 + v35;
  if (*(void *)((char *)a1 + v35 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v36);
  }
  long long v38 = *((_OWORD *)v37 + 1);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(void *)(v36 + 32) = *((void *)v37 + 4);
  uint64_t v39 = a3[10];
  long long v40 = (char *)a1 + v39;
  if (*(void *)((char *)a1 + v39 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1 + v39);
  }
  long long v41 = *(_OWORD *)((char *)a2 + v39 + 16);
  *(_OWORD *)long long v40 = *(_OWORD *)((char *)a2 + v39);
  *((_OWORD *)v40 + 1) = v41;
  *((void *)v40 + 4) = *(void *)((char *)a2 + v39 + 32);
  return a1;
}

uint64_t _s18HTTPTemplateActionVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F121080);
}

uint64_t sub_19F121080(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for NetRequest();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t _s18HTTPTemplateActionVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F121144);
}

void *sub_19F121144(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for NetRequest();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_19F1211EC()
{
  uint64_t result = type metadata accessor for NetRequest();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s18HTTPTemplateActionV5ErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F121374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.Error()
{
  return &type metadata for Models.HTTPTemplateAction.Error;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.JSONBody()
{
  return &type metadata for Models.HTTPTemplateAction.JSONBody;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.FormBody()
{
  return &type metadata for Models.HTTPTemplateAction.FormBody;
}

uint64_t _s18HTTPTemplateActionV9ParameterVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18HTTPTemplateActionV9ParameterVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18HTTPTemplateActionV9ParameterVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  return a1;
}

uint64_t _s18HTTPTemplateActionV9ParameterVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.Parameter()
{
  return &type metadata for Models.HTTPTemplateAction.Parameter;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.Parameter.Target()
{
  return &type metadata for Models.HTTPTemplateAction.Parameter.Target;
}

unsigned char *_s18HTTPTemplateActionV9ParameterV6TargetOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F121668);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.Parameter.InputType()
{
  return &type metadata for Models.HTTPTemplateAction.Parameter.InputType;
}

void *_s18HTTPTemplateActionV13SubstitutionsVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.Substitutions()
{
  return &type metadata for Models.HTTPTemplateAction.Substitutions;
}

unsigned char *_s18HTTPTemplateActionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F12180CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s18HTTPTemplateActionV10CodingKeysOMa()
{
  return &_s18HTTPTemplateActionV10CodingKeysON;
}

unsigned char *_s18HTTPTemplateActionV9ParameterV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F121910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s18HTTPTemplateActionV9ParameterV10CodingKeysOMa()
{
  return &_s18HTTPTemplateActionV9ParameterV10CodingKeysON;
}

unint64_t sub_19F12194C()
{
  unint64_t result = qword_1E9475228;
  if (!qword_1E9475228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475228);
  }
  return result;
}

unint64_t sub_19F1219A4()
{
  unint64_t result = qword_1E9475230;
  if (!qword_1E9475230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475230);
  }
  return result;
}

unint64_t sub_19F1219FC()
{
  unint64_t result = qword_1E9475238;
  if (!qword_1E9475238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475238);
  }
  return result;
}

unint64_t sub_19F121A54()
{
  unint64_t result = qword_1E9475240;
  if (!qword_1E9475240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475240);
  }
  return result;
}

unint64_t sub_19F121AAC()
{
  unint64_t result = qword_1E9475248;
  if (!qword_1E9475248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475248);
  }
  return result;
}

unint64_t sub_19F121B04()
{
  unint64_t result = qword_1E9475250;
  if (!qword_1E9475250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475250);
  }
  return result;
}

uint64_t sub_19F121B58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4173736563637573 && a2 == 0xED00006E6F697463 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x416572756C696166 && a2 == 0xED00006E6F697463)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_19F121DE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746567726174 && a2 == 0xE600000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7079547475706E69 && a2 == 0xE900000000000065 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7269757165527369 && a2 == 0xEA00000000006465 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4C6D756D6978616DLL && a2 == 0xED00006874676E65)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_19F122088()
{
  unint64_t result = qword_1E9475258;
  if (!qword_1E9475258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475258);
  }
  return result;
}

unint64_t sub_19F1220DC()
{
  unint64_t result = qword_1E9475260;
  if (!qword_1E9475260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475260);
  }
  return result;
}

unint64_t sub_19F122130()
{
  unint64_t result = qword_1E9475268;
  if (!qword_1E9475268)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9475268);
  }
  return result;
}

unint64_t sub_19F122170()
{
  unint64_t result = qword_1E9475270;
  if (!qword_1E9475270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475270);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickLocationMetricsFieldsProvider()
{
  return &type metadata for ClickLocationMetricsFieldsProvider;
}

uint64_t sub_19F1221D8(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v70 = a5;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D098);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_19EF91BE4(0xD000000000000028, 0x800000019F26EF00, v16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v63 = a6;
    swift_bridgeObjectRetain();
    sub_19EF90958(0xD000000000000029, 0x800000019F26EF30, v16, (uint64_t)v15);
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_19F1DB5AC();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19) == 1)
    {
      swift_release();
      return sub_19EEBD664((uint64_t)v15, &qword_1E946D098);
    }
    uint64_t v62 = a3;
    uint64_t v60 = sub_19F1DB58C();
    uint64_t v61 = v21;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v19);
    uint64_t v22 = a1[3];
    uint64_t v23 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v22);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    if (*(void *)(v24 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_19EEBD400(v62, a4);
      if (v26)
      {
        sub_19EEBDBA4(*(void *)(v24 + 56) + 32 * v25, (uint64_t)&v67);
      }
      else
      {
        long long v67 = 0u;
        long long v68 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v67 = 0u;
      long long v68 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = *((void *)&v68 + 1);
    sub_19EEBD664((uint64_t)&v67, &qword_1EB393260);
    if (v27)
    {
      uint64_t v59 = v6;
      uint64_t v28 = a4;
      if (qword_1E946FC40 != -1) {
        swift_once();
      }
      sub_19F1DD95C();
      uint64_t v29 = *((void *)&v68 + 1);
      uint64_t v30 = v69;
      __swift_project_boxed_opaque_existential_1(&v67, *((uint64_t *)&v68 + 1));
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v31 = swift_allocObject();
      long long v58 = xmmword_19F24EAD0;
      *(_OWORD *)(v31 + 16) = xmmword_19F24EAD0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v32 = swift_allocObject();
      uint64_t v33 = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)(v32 + 16) = v58;
      v66[3] = v33;
      v66[0] = 0xD00000000000006ELL;
      v66[1] = 0x800000019F2732E0;
      long long v64 = 0u;
      long long v65 = 0u;
      sub_19EEC3E70((uint64_t)v66, (uint64_t)&v64);
      *(unsigned char *)(v32 + 64) = 0;
      long long v34 = v65;
      *(_OWORD *)(v32 + 32) = v64;
      *(_OWORD *)(v32 + 48) = v34;
      *(void *)(v31 + 32) = v32;
      Logger.warning(_:)(v31, v29, v30);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v67);
      char v35 = _s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0();
      a4 = v28;
      uint64_t v7 = v59;
      if ((v35 & 1) == 0)
      {
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v36 = v61;
    uint64_t v37 = sub_19F10AA3C(v60, v61);
    if (!*(void *)(v37 + 16))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if ((_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    uint64_t v38 = a1[3];
    uint64_t v39 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v38);
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v38, v39);
    if (*(void *)(v40 + 16))
    {
      uint64_t v41 = v63;
      swift_bridgeObjectRetain();
      unint64_t v42 = sub_19EEBD400(v70, v41);
      if (v43)
      {
        sub_19EEBDBA4(*(void *)(v40 + 56) + 32 * v42, (uint64_t)&v67);
      }
      else
      {
        long long v67 = 0u;
        long long v68 = 0u;
      }
      swift_bridgeObjectRelease();
      uint64_t v36 = v61;
    }
    else
    {
      long long v67 = 0u;
      long long v68 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v68 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
      if (swift_dynamicCast())
      {
        unint64_t v44 = v64;
LABEL_30:
        *((void *)&v68 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
        *(void *)&long long v67 = v37;
        sub_19EEBDC00(&v67, &v64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v66[0] = v44;
        sub_19EE7DA20(&v64, v62, a4, isUniquelyReferenced_nonNull_native);
        uint64_t v46 = v66[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *((void *)&v68 + 1) = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v67 = v60;
        *((void *)&v67 + 1) = v36;
        sub_19EEBDC00(&v67, &v64);
        char v47 = swift_isUniquelyReferenced_nonNull_native();
        v66[0] = v46;
        sub_19EE7DA20(&v64, 0xD000000000000015, 0x800000019F2732C0, v47);
        uint64_t v48 = v66[0];
        swift_bridgeObjectRelease();
        *((void *)&v68 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
        *(void *)&long long v67 = v48;
        uint64_t v49 = a1[3];
        uint64_t v50 = a1[4];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v49);
        (*(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 16))(&v67, v70, v63, v49, v50);
        if (v7)
        {
          swift_bridgeObjectRelease();
LABEL_42:
          swift_release();
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v67);
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v67);
LABEL_33:
        uint64_t v51 = a1[3];
        uint64_t v52 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v51);
        uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 24))(v51, v52);
        if (*(void *)(v53 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v54 = sub_19EEBD400(v62, a4);
          if (v55)
          {
            sub_19EEBDBA4(*(void *)(v53 + 56) + 32 * v54, (uint64_t)&v67);
          }
          else
          {
            long long v67 = 0u;
            long long v68 = 0u;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          long long v67 = 0u;
          long long v68 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v68 + 1))
        {
          swift_bridgeObjectRelease();
          swift_release();
          return sub_19EEBD664((uint64_t)&v67, &qword_1EB393260);
        }
        sub_19EEBD664((uint64_t)&v67, &qword_1EB393260);
        *((void *)&v68 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
        *(void *)&long long v67 = v37;
        uint64_t v56 = a1[3];
        uint64_t v57 = a1[4];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v56);
        (*(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 16))(&v67, v62, a4, v56, v57);
        goto LABEL_42;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)&v67, &qword_1EB393260);
    }
    unint64_t v44 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_19F122928(void *a1, uint64_t *a2)
{
  return sub_19F1221D8(a1, a2, *v2, v2[1], v2[2], v2[3]);
}

uint64_t sub_19F122948(uint64_t a1, uint64_t a2)
{
  sub_19EEC3ED8(a1, (uint64_t)&v27, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = *((void *)&v28 + 1);
  if (!*((void *)&v28 + 1))
  {
    sub_19EEBD664((uint64_t)&v27, (uint64_t *)&unk_1E946FD20);
    goto LABEL_7;
  }
  uint64_t v5 = v29;
  __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v27);
  if (v6)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
    return MEMORY[0x1E4FBC860];
  }
  sub_19EEC3ED8(a1, (uint64_t)v21, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = v22;
  if (!v22)
  {
    sub_19EEBD664((uint64_t)v21, (uint64_t *)&unk_1E946FD20);
    long long v24 = 0u;
    long long v25 = 0u;
    uint64_t v26 = 0;
    goto LABEL_9;
  }
  uint64_t v8 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 120))(&v24, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  if (!*((void *)&v25 + 1))
  {
LABEL_9:
    sub_19EEBD664((uint64_t)&v24, &qword_1E946FA88);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475290);
    sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, a2, (uint64_t)&v27);
    swift_bridgeObjectRelease();
    sub_19EEC3ED8((uint64_t)&v27, (uint64_t)&v24, qword_1E946D938);
    uint64_t v14 = *((void *)&v25 + 1);
    if (*((void *)&v25 + 1))
    {
      uint64_t v15 = v26;
      __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
      sub_19EF5B580();
      uint64_t v16 = (void *)swift_allocError();
      uint64_t v17 = MEMORY[0x1E4FBC860];
      *uint64_t v18 = v13;
      v18[1] = v17;
      v18[2] = 0;
      void v18[3] = 0;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v15 + 8))(v13, v16, v14, v15);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v24, qword_1E946D938);
    }
    sub_19EEC3418(a1);
    sub_19EEBD664((uint64_t)&v27, qword_1E946D938);
    return MEMORY[0x1E4FBC860];
  }
  long long v27 = v24;
  long long v28 = v25;
  uint64_t v29 = v26;
  uint64_t v9 = sub_19EEC589C((uint64_t)&v27, (uint64_t)&v24);
  MEMORY[0x1F4188790](v9);
  v20[2] = a2;
  uint64_t v10 = *((void *)&v25 + 1);
  uint64_t v11 = v26;
  __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
  uint64_t v12 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), void *, ValueMetadata *, uint64_t, uint64_t))(v11 + 56))(sub_19F125204, v20, &type metadata for JSONBridgingConfiguration.ModelDescriptor, v10, v11);
  sub_19EEC5764((uint64_t)&v24);
  swift_bridgeObjectRelease();
  sub_19EEC3418(a1);
  sub_19EEC5764((uint64_t)&v27);
  return v12;
}

uint64_t sub_19F122C68(uint64_t a1, uint64_t a2)
{
  sub_19EEC3ED8(a1, (uint64_t)&v27, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = *((void *)&v28 + 1);
  if (!*((void *)&v28 + 1))
  {
    sub_19EEBD664((uint64_t)&v27, (uint64_t *)&unk_1E946FD20);
    goto LABEL_7;
  }
  uint64_t v5 = v29;
  __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v27);
  if (v6)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
    return MEMORY[0x1E4FBC860];
  }
  sub_19EEC3ED8(a1, (uint64_t)v21, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = v22;
  if (!v22)
  {
    sub_19EEBD664((uint64_t)v21, (uint64_t *)&unk_1E946FD20);
    long long v24 = 0u;
    long long v25 = 0u;
    uint64_t v26 = 0;
    goto LABEL_9;
  }
  uint64_t v8 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 120))(&v24, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  if (!*((void *)&v25 + 1))
  {
LABEL_9:
    sub_19EEBD664((uint64_t)&v24, &qword_1E946FA88);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475278);
    sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, a2, (uint64_t)&v27);
    swift_bridgeObjectRelease();
    sub_19EEC3ED8((uint64_t)&v27, (uint64_t)&v24, qword_1E946D938);
    uint64_t v14 = *((void *)&v25 + 1);
    if (*((void *)&v25 + 1))
    {
      uint64_t v15 = v26;
      __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
      sub_19EF5B580();
      uint64_t v16 = (void *)swift_allocError();
      uint64_t v17 = MEMORY[0x1E4FBC860];
      *uint64_t v18 = v13;
      v18[1] = v17;
      v18[2] = 0;
      void v18[3] = 0;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v15 + 8))(v13, v16, v14, v15);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v24, qword_1E946D938);
    }
    sub_19EEC3418(a1);
    sub_19EEBD664((uint64_t)&v27, qword_1E946D938);
    return MEMORY[0x1E4FBC860];
  }
  long long v27 = v24;
  long long v28 = v25;
  uint64_t v29 = v26;
  uint64_t v9 = sub_19EEC589C((uint64_t)&v27, (uint64_t)&v24);
  MEMORY[0x1F4188790](v9);
  v20[2] = a2;
  uint64_t v10 = *((void *)&v25 + 1);
  uint64_t v11 = v26;
  __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
  uint64_t v12 = (*(uint64_t (**)(uint64_t (*)(uint64_t), void *, ValueMetadata *, uint64_t, uint64_t))(v11 + 56))(sub_19F125170, v20, &type metadata for Models.Menu.Child, v10, v11);
  sub_19EEC5764((uint64_t)&v24);
  swift_bridgeObjectRelease();
  sub_19EEC3418(a1);
  sub_19EEC5764((uint64_t)&v27);
  return v12;
}

uint64_t sub_19F122F88(uint64_t a1, uint64_t a2)
{
  sub_19EEC3ED8(a1, (uint64_t)&v27, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = *((void *)&v28 + 1);
  if (!*((void *)&v28 + 1))
  {
    sub_19EEBD664((uint64_t)&v27, (uint64_t *)&unk_1E946FD20);
    goto LABEL_7;
  }
  uint64_t v5 = v29;
  __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v27);
  if (v6)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
    return MEMORY[0x1E4FBC860];
  }
  sub_19EEC3ED8(a1, (uint64_t)v21, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = v22;
  if (!v22)
  {
    sub_19EEBD664((uint64_t)v21, (uint64_t *)&unk_1E946FD20);
    long long v24 = 0u;
    long long v25 = 0u;
    uint64_t v26 = 0;
    goto LABEL_9;
  }
  uint64_t v8 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 120))(&v24, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  if (!*((void *)&v25 + 1))
  {
LABEL_9:
    sub_19EEBD664((uint64_t)&v24, &qword_1E946FA88);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94751E0);
    sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, a2, (uint64_t)&v27);
    swift_bridgeObjectRelease();
    sub_19EEC3ED8((uint64_t)&v27, (uint64_t)&v24, qword_1E946D938);
    uint64_t v14 = *((void *)&v25 + 1);
    if (*((void *)&v25 + 1))
    {
      uint64_t v15 = v26;
      __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
      sub_19EF5B580();
      uint64_t v16 = (void *)swift_allocError();
      uint64_t v17 = MEMORY[0x1E4FBC860];
      *uint64_t v18 = v13;
      v18[1] = v17;
      v18[2] = 0;
      void v18[3] = 0;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v15 + 8))(v13, v16, v14, v15);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v24, qword_1E946D938);
    }
    sub_19EEC3418(a1);
    sub_19EEBD664((uint64_t)&v27, qword_1E946D938);
    return MEMORY[0x1E4FBC860];
  }
  long long v27 = v24;
  long long v28 = v25;
  uint64_t v29 = v26;
  uint64_t v9 = sub_19EEC589C((uint64_t)&v27, (uint64_t)&v24);
  MEMORY[0x1F4188790](v9);
  v20[2] = a2;
  uint64_t v10 = *((void *)&v25 + 1);
  uint64_t v11 = v26;
  __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
  uint64_t v12 = (*(uint64_t (**)(double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>), void *, ValueMetadata *, uint64_t, uint64_t))(v11 + 56))(sub_19F12518C, v20, &type metadata for Models.HTTPTemplateAction.Parameter, v10, v11);
  sub_19EEC5764((uint64_t)&v24);
  swift_bridgeObjectRelease();
  sub_19EEC3418(a1);
  sub_19EEC5764((uint64_t)&v27);
  return v12;
}

uint64_t sub_19F1232A8(uint64_t a1, uint64_t a2)
{
  sub_19EEC3ED8(a1, (uint64_t)&v27, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = *((void *)&v28 + 1);
  if (!*((void *)&v28 + 1))
  {
    sub_19EEBD664((uint64_t)&v27, (uint64_t *)&unk_1E946FD20);
    goto LABEL_7;
  }
  uint64_t v5 = v29;
  __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v27);
  if (v6)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
    return MEMORY[0x1E4FBC860];
  }
  sub_19EEC3ED8(a1, (uint64_t)v21, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = v22;
  if (!v22)
  {
    sub_19EEBD664((uint64_t)v21, (uint64_t *)&unk_1E946FD20);
    long long v24 = 0u;
    long long v25 = 0u;
    uint64_t v26 = 0;
    goto LABEL_9;
  }
  uint64_t v8 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 120))(&v24, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  if (!*((void *)&v25 + 1))
  {
LABEL_9:
    sub_19EEBD664((uint64_t)&v24, &qword_1E946FA88);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475298);
    sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, a2, (uint64_t)&v27);
    swift_bridgeObjectRelease();
    sub_19EEC3ED8((uint64_t)&v27, (uint64_t)&v24, qword_1E946D938);
    uint64_t v14 = *((void *)&v25 + 1);
    if (*((void *)&v25 + 1))
    {
      uint64_t v15 = v26;
      __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
      sub_19EF5B580();
      uint64_t v16 = (void *)swift_allocError();
      uint64_t v17 = MEMORY[0x1E4FBC860];
      *uint64_t v18 = v13;
      v18[1] = v17;
      v18[2] = 0;
      void v18[3] = 0;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v15 + 8))(v13, v16, v14, v15);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v24, qword_1E946D938);
    }
    sub_19EEC3418(a1);
    sub_19EEBD664((uint64_t)&v27, qword_1E946D938);
    return MEMORY[0x1E4FBC860];
  }
  long long v27 = v24;
  long long v28 = v25;
  uint64_t v29 = v26;
  uint64_t v9 = sub_19EEC589C((uint64_t)&v27, (uint64_t)&v24);
  MEMORY[0x1F4188790](v9);
  v20[2] = a2;
  uint64_t v10 = *((void *)&v25 + 1);
  uint64_t v11 = v26;
  __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
  uint64_t v12 = (*(uint64_t (**)(double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>), void *, ValueMetadata *, uint64_t, uint64_t))(v11 + 56))(sub_19F125220, v20, &type metadata for MetricsEventLinterDeResolutionRule, v10, v11);
  sub_19EEC5764((uint64_t)&v24);
  swift_bridgeObjectRelease();
  sub_19EEC3418(a1);
  sub_19EEC5764((uint64_t)&v27);
  return v12;
}

uint64_t static JSNetworkPerformanceMetrics.metrics(fromJson:)()
{
  JSONObject.subscript.getter(0xD000000000000013, 0x800000019F26DAB0, (uint64_t)v2);
  unint64_t v0 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  return sub_19EE964AC((uint64_t)v2, v0);
}

uint64_t static JSNetworkPerformanceMetrics.metrics(fromResult:)(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_19EE60278(v1);

  return v2;
}

uint64_t sub_19F12365C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v12);
  sub_19EEC3ED8((uint64_t)v12, (uint64_t)v9, (uint64_t *)&unk_1E946FD20);
  uint64_t v3 = v10;
  if (!v10)
  {
    swift_bridgeObjectRetain();
    sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1E946FD20);
    goto LABEL_5;
  }
  uint64_t v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 104);
  swift_bridgeObjectRetain();
  char v6 = v5(v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  if (v6)
  {
LABEL_5:
    char v7 = 1;
    goto LABEL_6;
  }
  char v7 = 0;
LABEL_6:
  sub_19EEC3418((uint64_t)v12);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t sub_19F12374C(uint64_t a1, uint64_t a2)
{
  sub_19EEC355C(a1, (uint64_t)v4);
  swift_bridgeObjectRetain();
  return sub_19F177064(v4, a2);
}

double sub_19F1237B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v4);
  swift_bridgeObjectRetain();
  return sub_19F1774FC((uint64_t)v4, a2);
}

double sub_19F123814@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  return sub_19F178134((uint64_t)v6, a2, a3);
}

uint64_t sub_19F123878()
{
  uint64_t v0 = sub_19EE7CC40();
  id v1 = (void *)sub_19EEBF898(MEMORY[0x1E4FBC860]);
  if (qword_1E946DE20 != -1) {
LABEL_24:
  }
    swift_once();
  uint64_t v2 = *((void *)off_1E946DDF8 + 2);
  if (!v2)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  uint64_t v3 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  while (1)
  {
    if (!*(void *)(v0 + 16)) {
      goto LABEL_5;
    }
    uint64_t v5 = *(v3 - 1);
    uint64_t v4 = *v3;
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_19EEBD400(v5, v4);
    if (v7) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_5:
    v3 += 2;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  sub_19EEBDBA4(*(void *)(v0 + 56) + 32 * v6, (uint64_t)v23);
  sub_19EEBDC00(v23, v24);
  sub_19EEBDBA4((uint64_t)v24, (uint64_t)v23);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v10 = sub_19EEBD400(v5, v4);
  uint64_t v11 = v1[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  char v14 = v9;
  if (v1[3] >= v13)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v9 & 1) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      sub_19EE7DBE0();
      if ((v14 & 1) == 0) {
        goto LABEL_17;
      }
    }
    goto LABEL_15;
  }
  sub_19EEBD714(v13, isUniquelyReferenced_nonNull_native);
  unint64_t v15 = sub_19EEBD400(v5, v4);
  if ((v14 & 1) == (v16 & 1))
  {
    unint64_t v10 = v15;
    if ((v14 & 1) == 0)
    {
LABEL_17:
      v1[(v10 >> 6) + 8] |= 1 << v10;
      uint64_t v18 = (uint64_t *)(v1[6] + 16 * v10);
      *uint64_t v18 = v5;
      v18[1] = v4;
      sub_19EEBDC00(v23, (_OWORD *)(v1[7] + 32 * v10));
      uint64_t v19 = v1[2];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        goto LABEL_23;
      }
      v1[2] = v21;
      swift_bridgeObjectRetain();
      goto LABEL_19;
    }
LABEL_15:
    uint64_t v17 = (_OWORD *)(v1[7] + 32 * v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
    sub_19EEBDC00(v23, v17);
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    goto LABEL_5;
  }
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

__n128 JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:modelConstructionStartTime:modelConstructionEndTime:connectionStartTime:connectionEndTime:domainLookupStartTime:domainLookupEndTime:fetchStartTime:secureConnectionStartTime:connectionReused:requestMessageSize:responseMessageSize:statusCode:edgeNodeCacheStatus:environmentDataCenter:isLowDataMode:appleTimingApp:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37,long long a38,__n128 a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11 & 1;
  *(unsigned char *)(a9 + 73) = a12;
  *(void *)(a9 + 80) = a13;
  *(unsigned char *)(a9 + 88) = a14 & 1;
  *(void *)(a9 + 96) = a15;
  *(unsigned char *)(a9 + 104) = a16 & 1;
  *(void *)(a9 + 112) = a17;
  *(unsigned char *)(a9 + 120) = a18 & 1;
  *(void *)(a9 + 128) = a19;
  *(unsigned char *)(a9 + 136) = a20 & 1;
  *(void *)(a9 + 144) = a21;
  *(unsigned char *)(a9 + 152) = a22 & 1;
  *(void *)(a9 + 160) = a23;
  *(unsigned char *)(a9 + 168) = a24 & 1;
  *(void *)(a9 + 176) = a25;
  *(unsigned char *)(a9 + 184) = a26 & 1;
  *(void *)(a9 + 192) = a27;
  *(unsigned char *)(a9 + 200) = a28 & 1;
  *(void *)(a9 + 208) = a29;
  *(unsigned char *)(a9 + 216) = a30 & 1;
  *(void *)(a9 + 224) = a31;
  *(unsigned char *)(a9 + 232) = a32 & 1;
  *(unsigned char *)(a9 + 233) = a33;
  *(void *)(a9 + 240) = a34;
  *(unsigned char *)(a9 + 248) = a35 & 1;
  *(void *)(a9 + 256) = a36;
  *(unsigned char *)(a9 + 264) = a37 & 1;
  *(void *)(a9 + 304) = a40;
  *(void *)(a9 + 312) = a41;
  *(unsigned char *)(a9 + 320) = a42;
  *(void *)(a9 + 328) = a43;
  *(void *)(a9 + 336) = a44;
  __n128 result = a39;
  *(_OWORD *)(a9 + 272) = a38;
  *(__n128 *)(a9 + 288) = a39;
  return result;
}

uint64_t JSNetworkPerformanceMetrics.clientCorrelationKey.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSNetworkPerformanceMetrics.clientCorrelationKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.clientCorrelationKey.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.pageURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSNetworkPerformanceMetrics.pageURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.pageURL.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.requestStartTime.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t JSNetworkPerformanceMetrics.requestStartTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.requestStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.responseStartTime.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t JSNetworkPerformanceMetrics.responseStartTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.responseStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.responseEndTime.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t JSNetworkPerformanceMetrics.responseEndTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 64) = result;
  *(unsigned char *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.responseEndTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.responseWasCached.getter()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t JSNetworkPerformanceMetrics.responseWasCached.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 73) = result;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.responseWasCached.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.parseStartTime.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t JSNetworkPerformanceMetrics.parseStartTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 80) = result;
  *(unsigned char *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.parseStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.parseEndTime.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t JSNetworkPerformanceMetrics.parseEndTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 96) = result;
  *(unsigned char *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.parseEndTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.modelConstructionStartTime.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t JSNetworkPerformanceMetrics.modelConstructionStartTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 112) = result;
  *(unsigned char *)(v2 + 120) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.modelConstructionStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.modelConstructionEndTime.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t JSNetworkPerformanceMetrics.modelConstructionEndTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 128) = result;
  *(unsigned char *)(v2 + 136) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.modelConstructionEndTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.connectionStartTime.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t JSNetworkPerformanceMetrics.connectionStartTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 144) = result;
  *(unsigned char *)(v2 + 152) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.connectionStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.connectionEndTime.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t JSNetworkPerformanceMetrics.connectionEndTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 160) = result;
  *(unsigned char *)(v2 + 168) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.connectionEndTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.domainLookupStartTime.getter()
{
  return *(void *)(v0 + 176);
}

uint64_t JSNetworkPerformanceMetrics.domainLookupStartTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 176) = result;
  *(unsigned char *)(v2 + 184) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.domainLookupStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.domainLookupEndTime.getter()
{
  return *(void *)(v0 + 192);
}

uint64_t JSNetworkPerformanceMetrics.domainLookupEndTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 192) = result;
  *(unsigned char *)(v2 + 200) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.domainLookupEndTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.fetchStartTime.getter()
{
  return *(void *)(v0 + 208);
}

uint64_t JSNetworkPerformanceMetrics.fetchStartTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 208) = result;
  *(unsigned char *)(v2 + 216) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.fetchStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.secureConnectionStartTime.getter()
{
  return *(void *)(v0 + 224);
}

uint64_t JSNetworkPerformanceMetrics.secureConnectionStartTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 224) = result;
  *(unsigned char *)(v2 + 232) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.secureConnectionStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.connectionReused.getter()
{
  return *(unsigned __int8 *)(v0 + 233);
}

uint64_t JSNetworkPerformanceMetrics.connectionReused.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 233) = result;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.connectionReused.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.requestMessageSize.getter()
{
  return *(void *)(v0 + 240);
}

uint64_t JSNetworkPerformanceMetrics.requestMessageSize.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 240) = result;
  *(unsigned char *)(v2 + 248) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.requestMessageSize.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.responseMessageSize.getter()
{
  return *(void *)(v0 + 256);
}

uint64_t JSNetworkPerformanceMetrics.responseMessageSize.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 256) = result;
  *(unsigned char *)(v2 + 264) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.responseMessageSize.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.statusCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 272);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSNetworkPerformanceMetrics.statusCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 272) = a1;
  *(void *)(v2 + 280) = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.statusCode.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.edgeNodeCacheStatus.getter()
{
  uint64_t v1 = *(void *)(v0 + 288);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSNetworkPerformanceMetrics.edgeNodeCacheStatus.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 288) = a1;
  *(void *)(v2 + 296) = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.edgeNodeCacheStatus.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.environmentDataCenter.getter()
{
  uint64_t v1 = *(void *)(v0 + 304);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSNetworkPerformanceMetrics.environmentDataCenter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 304) = a1;
  *(void *)(v2 + 312) = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.environmentDataCenter.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.isLowDataMode.getter()
{
  return *(unsigned __int8 *)(v0 + 320);
}

uint64_t JSNetworkPerformanceMetrics.isLowDataMode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 320) = result;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.isLowDataMode.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.appleTimingApp.getter()
{
  uint64_t v1 = *(void *)(v0 + 328);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSNetworkPerformanceMetrics.appleTimingApp.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 328) = a1;
  *(void *)(v2 + 336) = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.appleTimingApp.modify())()
{
  return nullsub_1;
}

void sub_19F124414()
{
  off_1E946DDF8 = &unk_1EF150098;
}

unint64_t JSNetworkPerformanceMetrics.jsRepresentation(in:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_19EE7CC40();
  id v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  uint64_t v5 = sub_19F1DD62C();
  id v6 = objc_msgSend(self, sel_valueWithObject_inContext_, v5, v4);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v6;
  return result;
}

uint64_t sub_19F1244E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return JSNetworkPerformanceMetrics.init(deserializing:using:)(a1, a2);
}

unint64_t sub_19F12450C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return JSNetworkPerformanceMetrics.jsRepresentation(in:)(a1, a2);
}

JSValue __swiftcall JSNetworkPerformanceMetrics.makeValue(in:)(JSContext in)
{
  sub_19EE7CC40();
  uint64_t v2 = in.super.isa;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  uint64_t v3 = sub_19F1DD62C();
  id v4 = objc_msgSend(self, sel_valueWithObject_inContext_, v3, v2);
  swift_unknownObjectRelease();

  if (v4) {
    return (JSValue)v4;
  }
  __break(1u);
  return result;
}

unint64_t static JSNetworkPerformanceMetrics.property.getter()
{
  return 0xD000000000000013;
}

void *JSNetworkPerformanceMetrics.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v5);
  sub_19EEBF898(MEMORY[0x1E4FBC860]);
  JSNetworkPerformanceMetrics.init(deserializing:using:)((uint64_t)v5, __src);
  sub_19EEC3418(a1);
  return memcpy(a2, __src, 0x158uLL);
}

double JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11 & 1;
  *(unsigned char *)(a9 + 73) = a12;
  *(void *)(a9 + 80) = a13;
  *(unsigned char *)(a9 + 88) = a14 & 1;
  *(void *)(a9 + 96) = a15;
  *(unsigned char *)(a9 + 104) = a16 & 1;
  *(void *)(a9 + 112) = 0;
  *(unsigned char *)(a9 + 120) = 1;
  *(void *)(a9 + 128) = 0;
  *(unsigned char *)(a9 + 136) = 1;
  *(void *)(a9 + 144) = 0;
  *(unsigned char *)(a9 + 152) = 1;
  *(void *)(a9 + 160) = 0;
  *(unsigned char *)(a9 + 168) = 1;
  *(void *)(a9 + 176) = 0;
  *(unsigned char *)(a9 + 184) = 1;
  *(void *)(a9 + 192) = 0;
  *(unsigned char *)(a9 + 200) = 1;
  *(void *)(a9 + 208) = 0;
  *(unsigned char *)(a9 + 216) = 1;
  *(void *)(a9 + 224) = 0;
  *(unsigned char *)(a9 + 232) = 1;
  *(unsigned char *)(a9 + 233) = 2;
  *(void *)(a9 + 240) = 0;
  *(unsigned char *)(a9 + 248) = 1;
  *(void *)(a9 + 256) = 0;
  *(unsigned char *)(a9 + 264) = 1;
  double result = 0.0;
  *(_OWORD *)(a9 + 272) = 0u;
  *(_OWORD *)(a9 + 288) = 0u;
  *(_OWORD *)(a9 + 304) = 0u;
  *(unsigned char *)(a9 + 320) = 2;
  *(void *)(a9 + 328) = 0;
  *(void *)(a9 + 336) = 0;
  return result;
}

double JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:modelConstructionStartTime:modelConstructionEndTime:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11 & 1;
  *(unsigned char *)(a9 + 73) = a12;
  *(void *)(a9 + 80) = a13;
  *(unsigned char *)(a9 + 88) = a14 & 1;
  *(void *)(a9 + 96) = a15;
  *(unsigned char *)(a9 + 104) = a16 & 1;
  *(void *)(a9 + 112) = a17;
  *(unsigned char *)(a9 + 120) = a18 & 1;
  *(void *)(a9 + 128) = a19;
  *(unsigned char *)(a9 + 136) = a20 & 1;
  *(void *)(a9 + 144) = 0;
  *(unsigned char *)(a9 + 152) = 1;
  *(void *)(a9 + 160) = 0;
  *(unsigned char *)(a9 + 168) = 1;
  *(void *)(a9 + 176) = 0;
  *(unsigned char *)(a9 + 184) = 1;
  *(void *)(a9 + 192) = 0;
  *(unsigned char *)(a9 + 200) = 1;
  *(void *)(a9 + 208) = 0;
  *(unsigned char *)(a9 + 216) = 1;
  *(void *)(a9 + 224) = 0;
  *(unsigned char *)(a9 + 232) = 1;
  *(unsigned char *)(a9 + 233) = 2;
  *(void *)(a9 + 240) = 0;
  *(unsigned char *)(a9 + 248) = 1;
  *(void *)(a9 + 256) = 0;
  *(unsigned char *)(a9 + 264) = 1;
  double result = 0.0;
  *(_OWORD *)(a9 + 272) = 0u;
  *(_OWORD *)(a9 + 288) = 0u;
  *(_OWORD *)(a9 + 304) = 0u;
  *(unsigned char *)(a9 + 320) = 2;
  *(void *)(a9 + 328) = 0;
  *(void *)(a9 + 336) = 0;
  return result;
}

__n128 JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:modelConstructionStartTime:modelConstructionEndTime:primaryDataConnectionStartTime:primaryDataConnectionEndTime:primaryDataDomainLookupStartTime:primaryDataDomainLookupEndTime:primaryDataFetchStartTime:primaryDataSecureConnectionStartTime:primaryDataConnectionReused:primaryDataRequestMessageSize:primaryDataResponseMessageSize:primaryDataStatusCode:primaryDataEdgeNodeCacheStatus:primaryDataEnvironmentDataCenter:isLowDataMode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37,long long a38,__n128 a39,uint64_t a40,uint64_t a41,char a42)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11 & 1;
  *(unsigned char *)(a9 + 73) = a12;
  *(void *)(a9 + 80) = a13;
  *(unsigned char *)(a9 + 88) = a14 & 1;
  *(void *)(a9 + 96) = a15;
  *(unsigned char *)(a9 + 104) = a16 & 1;
  *(void *)(a9 + 112) = a17;
  *(unsigned char *)(a9 + 120) = a18 & 1;
  *(void *)(a9 + 128) = a19;
  *(unsigned char *)(a9 + 136) = a20 & 1;
  *(void *)(a9 + 144) = a21;
  *(unsigned char *)(a9 + 152) = a22 & 1;
  *(void *)(a9 + 160) = a23;
  *(unsigned char *)(a9 + 168) = a24 & 1;
  *(void *)(a9 + 176) = a25;
  *(unsigned char *)(a9 + 184) = a26 & 1;
  *(void *)(a9 + 192) = a27;
  *(unsigned char *)(a9 + 200) = a28 & 1;
  *(void *)(a9 + 208) = a29;
  *(unsigned char *)(a9 + 216) = a30 & 1;
  *(void *)(a9 + 224) = a31;
  *(unsigned char *)(a9 + 232) = a32 & 1;
  *(unsigned char *)(a9 + 233) = a33;
  *(void *)(a9 + 240) = a34;
  *(unsigned char *)(a9 + 248) = a35 & 1;
  *(void *)(a9 + 256) = a36;
  *(unsigned char *)(a9 + 264) = a37 & 1;
  *(void *)(a9 + 304) = a40;
  *(void *)(a9 + 312) = a41;
  *(unsigned char *)(a9 + 320) = a42;
  __n128 result = a39;
  *(_OWORD *)(a9 + 272) = a38;
  *(__n128 *)(a9 + 288) = a39;
  *(void *)(a9 + 328) = 0;
  *(void *)(a9 + 336) = 0;
  return result;
}

__n128 JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:modelConstructionStartTime:modelConstructionEndTime:primaryDataConnectionStartTime:primaryDataConnectionEndTime:primaryDataDomainLookupStartTime:primaryDataDomainLookupEndTime:primaryDataFetchStartTime:primaryDataSecureConnectionStartTime:primaryDataConnectionReused:primaryDataRequestMessageSize:primaryDataResponseMessageSize:primaryDataStatusCode:primaryDataEdgeNodeCacheStatus:primaryDataEnvironmentDataCenter:isLowDataMode:primaryDataAppleTimingApp:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37,long long a38,__n128 a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11 & 1;
  *(unsigned char *)(a9 + 73) = a12;
  *(void *)(a9 + 80) = a13;
  *(unsigned char *)(a9 + 88) = a14 & 1;
  *(void *)(a9 + 96) = a15;
  *(unsigned char *)(a9 + 104) = a16 & 1;
  *(void *)(a9 + 112) = a17;
  *(unsigned char *)(a9 + 120) = a18 & 1;
  *(void *)(a9 + 128) = a19;
  *(unsigned char *)(a9 + 136) = a20 & 1;
  *(void *)(a9 + 144) = a21;
  *(unsigned char *)(a9 + 152) = a22 & 1;
  *(void *)(a9 + 160) = a23;
  *(unsigned char *)(a9 + 168) = a24 & 1;
  *(void *)(a9 + 176) = a25;
  *(unsigned char *)(a9 + 184) = a26 & 1;
  *(void *)(a9 + 192) = a27;
  *(unsigned char *)(a9 + 200) = a28 & 1;
  *(void *)(a9 + 208) = a29;
  *(unsigned char *)(a9 + 216) = a30 & 1;
  *(void *)(a9 + 224) = a31;
  *(unsigned char *)(a9 + 232) = a32 & 1;
  *(unsigned char *)(a9 + 233) = a33;
  *(void *)(a9 + 240) = a34;
  *(unsigned char *)(a9 + 248) = a35 & 1;
  *(void *)(a9 + 256) = a36;
  *(unsigned char *)(a9 + 264) = a37 & 1;
  *(void *)(a9 + 304) = a40;
  *(void *)(a9 + 312) = a41;
  *(unsigned char *)(a9 + 320) = a42;
  *(void *)(a9 + 328) = a43;
  *(void *)(a9 + 336) = a44;
  __n128 result = a39;
  *(_OWORD *)(a9 + 272) = a38;
  *(__n128 *)(a9 + 288) = a39;
  return result;
}

uint64_t sub_19F124CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  uint64_t result = sub_19F176870((uint64_t)v6, a2);
  *a3 = result;
  return result;
}

uint64_t assignWithCopy for JSNetworkPerformanceMetrics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v7 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v11;
  uint64_t v12 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v12;
  uint64_t v13 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v13;
  uint64_t v14 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v14;
  uint64_t v15 = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = v15;
  uint64_t v16 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = v16;
  *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
  uint64_t v17 = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 240) = v17;
  uint64_t v18 = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 256) = v18;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JSNetworkPerformanceMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  uint64_t v7 = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 240) = v7;
  uint64_t v8 = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 256) = v8;
  uint64_t v9 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  uint64_t v12 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for JSNetworkPerformanceMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 344) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 344) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_19F125170(uint64_t a1)
{
  return sub_19F12374C(a1, *(void *)(v1 + 16));
}

double sub_19F12518C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F1237B0(a1, a2);
}

uint64_t sub_19F1251A8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_19F12365C(a1, a2);
}

double sub_19F1251C4(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_19F25B660;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(void *)(a1 + 336) = 0;
  return result;
}

uint64_t sub_19F125204@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19F124CE8(a1, *(void *)(v2 + 16), a2);
}

double sub_19F125220@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F123814(a1, *(void *)(v2 + 16), a2);
}

uint64_t JSONArray.count.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t JSONArray.subscript.getter(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
}

uint64_t JSONArray.map<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, a3, v7, v8);
}

void sub_19F125380(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = *a1;
  id v4 = sub_19EFC4F68(v3);
  char v6 = v5;

  *(void *)(a2 + 24) = &type metadata for DirectValue;
  *(void *)(a2 + 32) = &off_1EF13A528;
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v6;
}

uint64_t JSONArray.isEmpty.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

uint64_t JSONArray.objects.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t JSONArray.bridgedPrimitiveValues<A>()(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(a1, v3, v4);
}

uint64_t JSONArray.flatMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, a2, a3, v7, v8);
}

uint64_t JSONArray.filter(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 64))(a1, a2, v5, v6);
}

uint64_t JSONArray.reduce<A>(_:nextResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4[3];
  uint64_t v10 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 72))(a1, a2, a3, a4, v9, v10);
}

uint64_t JSONArray.contains(where:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 88))(a1, a2, v5, v6) & 1;
}

uint64_t assignWithTake for JSONArray(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_19F125730()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void *InMemoryMetricsEventRecorder.__allocating_init(historySize:)(uint64_t a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  v2[3] = MEMORY[0x1E4FBC860];
  void v2[4] = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  v2[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94752A0);
  uint64_t v3 = swift_allocObject();
  v2[5] = sub_19EE992B8(v3);
  return v2;
}

void *InMemoryMetricsEventRecorder.init(historySize:)(uint64_t a1)
{
  uint64_t v2 = v1;
  v2[3] = MEMORY[0x1E4FBC860];
  void v2[4] = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  v2[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94752A0);
  uint64_t v4 = swift_allocObject();
  v2[5] = sub_19EE992B8(v4);
  return v2;
}

uint64_t InMemoryMetricsEventRecorder.onEventRecorded.getter()
{
  return swift_retain();
}

uint64_t InMemoryMetricsEventRecorder.eventsSnapshot.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel_unlock);
  return v2;
}

Swift::Void __swiftcall InMemoryMetricsEventRecorder.record(_:on:)(JetEngine::LintedMetricsEvent _, Swift::String_optional on)
{
  uint64_t countAndFlagsBits = on.value._countAndFlagsBits;
  rawValue = _.issues._rawValue;
  uint64_t v5 = *(void *)_.fields._rawValue;
  uint64_t v6 = *((void *)_.fields._rawValue + 1);
  uint64_t v7 = *(void **)(v2 + 32);
  objc_msgSend(v7, sel_lock, on.value._countAndFlagsBits, on.value._object);
  sub_19F1259C0(v2, (uint64_t)rawValue, countAndFlagsBits, v5, v6);
  objc_msgSend(v7, sel_unlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EFCC194((uint64_t)rawValue, countAndFlagsBits, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_19F1259C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = a1 + 24;
  swift_beginAccess();
  uint64_t v11 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 24) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v11 = sub_19F09EB6C(0, v11[2] + 1, 1, v11);
    *(void *)uint64_t v10 = v11;
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t v11 = sub_19F09EB6C((void *)(v13 > 1), v14 + 1, 1, v11);
    *(void *)uint64_t v10 = v11;
  }
  _OWORD v11[2] = v14 + 1;
  uint64_t v15 = &v11[4 * v14];
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = a4;
  v15[7] = a5;
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t result = swift_endAccess();
  uint64_t v18 = *(void *)(v16 + 16);
  uint64_t v19 = *(void *)(a1 + 16);
  int64_t v20 = v18 - v19;
  if (__OFSUB__(v18, v19))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v20 < 1) {
    return result;
  }
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v10 + 16) < (unint64_t)v20)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  sub_19F166218(0, v20);
  return swift_endAccess();
}

uint64_t InMemoryMetricsEventRecorder.flush()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391BD8);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return v0;
}

uint64_t InMemoryMetricsEventRecorder.deinit()
{
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t InMemoryMetricsEventRecorder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19F125C04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = *(void **)(v6 + 32);
  objc_msgSend(v9, sel_lock);
  sub_19F1259C0(v6, a2, a3, v7, v8);
  objc_msgSend(v9, sel_unlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EFCC194(a2, a3, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F125CE4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391BD8);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return v0;
}

uint64_t type metadata accessor for InMemoryMetricsEventRecorder()
{
  return self;
}

uint64_t method lookup function for InMemoryMetricsEventRecorder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InMemoryMetricsEventRecorder);
}

uint64_t dispatch thunk of InMemoryMetricsEventRecorder.__allocating_init(historySize:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_19F125D98@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_bridgeObjectRetain();
    sub_19F12799C(a3);
    uint64_t result = sub_19F021FCC(a1, a3);
    *a4 = result;
    a4[1] = v9;
    a4[2] = v10;
    return result;
  }
  sub_19EFA6878();
  swift_allocError();
  unint64_t v13 = v12;
  uint64_t v14 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (!v14) {
    sub_19F199C68((unint64_t)"JetEngine/CompoundError.swift", 0x1DuLL, 2, 0x15uLL);
  }
  *unint64_t v13 = a2;
  return swift_willThrow();
}

void sub_19F125E9C(void *a1, void *a2, uint64_t a3)
{
  id v7 = _s9JetEngine19RunLoopWorkerThreadC7currentACSgvgZ_0();
  if (v7)
  {
    id v8 = v7;
    sub_19EF5F608(a2, (uint64_t)v23);
    if (v3)
    {
      swift_release();
    }
    else
    {
      uint64_t v10 = *MEMORY[0x1E4F4DA98];
      if (*MEMORY[0x1E4F4DA98])
      {
        uint64_t v11 = v24;
        int64_t v12 = *(void *)(v24 + 16);
        unint64_t v13 = *(void **)(a3 + OBJC_IVAR____TtC9JetEngine16JSPlatformObject_process);
        uint64_t v14 = *(void *)(a3 + OBJC_IVAR____TtC9JetEngine16JSPlatformObject_bag);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v15 = sub_19F126DC0(0, v12, v10, v11, v10);
        swift_bridgeObjectRelease();
        swift_unknownObjectRetain();
        sub_19F12799C((uint64_t)v23);
        id v16 = v13;
        uint64_t v17 = sub_19F1272E8(v15, v14, (uint64_t)v23, (uint64_t)v16);

        sub_19F0227E8((uint64_t)v23);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v17;
        long long v19 = v23[0];
        *(_OWORD *)(v18 + 40) = v23[1];
        long long v20 = v25;
        *(_OWORD *)(v18 + 56) = v24;
        *(_OWORD *)(v18 + 72) = v20;
        uint64_t v21 = v26;
        *(_OWORD *)(v18 + 24) = v19;
        *(void *)(v18 + 88) = v21;
        *(void *)(v18 + 96) = v8;
        JSPromise.init(in:executor:)(a1, (uint64_t)sub_19F127A50, v18, &v22);
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000002CLL;
    *(void *)(v9 + 8) = 0x800000019F2735D0;
    *(void *)(v9 + 16) = 0;
    *(unsigned char *)(v9 + 24) = 1;
    *(void *)(v9 + 32) = 0;
    *(unsigned char *)(v9 + 40) = 1;
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_OWORD *)(v9 + 80) = 0u;
    *(void *)(v9 + 96) = 0;
    swift_willThrow();
  }
}

uint64_t sub_19F1260D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  long long v13 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v12 + 64) = v13;
  *(void *)(v12 + 80) = *(void *)(a5 + 64);
  long long v14 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v12 + 32) = v14;
  sub_19F12799C(a5);
  sub_19F107828(a4, sub_19F127AC4, v12);
  swift_release();
  sub_19EF960B0(a2, (uint64_t)&v21);
  uint64_t v15 = swift_allocObject();
  long long v16 = v22;
  *(_OWORD *)(v15 + 16) = v21;
  *(_OWORD *)(v15 + 32) = v16;
  *(void *)(v15 + 48) = v23[0];
  *(void *)(v15 + 56) = a1;
  sub_19EF960B0(a3, (uint64_t)v26);
  uint64_t v17 = swift_allocObject();
  long long v18 = v26[1];
  *(_OWORD *)(v17 + 16) = v26[0];
  *(_OWORD *)(v17 + 32) = v18;
  *(void *)(v17 + 48) = v27;
  *(void *)(v17 + 56) = a1;
  void v25[3] = type metadata accessor for RunLoopWorkerThread();
  v25[4] = &protocol witness table for RunLoopWorkerThread;
  v25[0] = a6;
  *(void *)&long long v21 = sub_19F127AE4;
  *((void *)&v21 + 1) = v15;
  *(void *)&long long v22 = sub_19F127B34;
  *((void *)&v22 + 1) = v17;
  sub_19EEC4154((uint64_t)v25, (uint64_t)v23);
  char v24 = 0;
  id v19 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19EF56DFC((uint64_t)&v21);
  sub_19EEBD664((uint64_t)&v21, (uint64_t *)&unk_1E9470F70);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
}

void sub_19F1262B0(uint64_t a1, void *a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
  sub_19F020938(a3, &v29);
  uint64_t v6 = *((void *)&v30 + 1);
  uint64_t v7 = v31;
  __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
  uint64_t v17 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 16))(a3, v6, v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
  *(void *)(v5 + 56) = sub_19EE8FF40();
  *(void *)(v5 + 32) = v17;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v18.super.Class isa = JSReference.unwrap()().super.isa;
  if (v19.super.isa)
  {
    swift_bridgeObjectRelease();
    if (qword_1E946E1C0 != -1) {
      swift_once();
    }
    id v8 = (void *)qword_1E9498A98;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19F24EB80;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
    uint64_t v28 = v11;
    v27[0] = 0xD00000000000002DLL;
    v27[1] = 0x800000019F273630;
    long long v29 = 0u;
    long long v30 = 0u;
    id v12 = v8;
    sub_19EEC3E70((uint64_t)v27, (uint64_t)&v29);
    *(unsigned char *)(v10 + 64) = 0;
    long long v13 = v30;
    *(_OWORD *)(v10 + 32) = v29;
    *(_OWORD *)(v10 + 48) = v13;
    *(void *)(v9 + 32) = v10;
    swift_getErrorValue();
    uint64_t v28 = v26;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v27);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(boxed_opaque_existential_2Tm, v25, v26);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19F24EAD0;
    sub_19EEBCD00((uint64_t)v27, (uint64_t)v24);
    long long v29 = 0u;
    long long v30 = 0u;
    sub_19EEC3E70((uint64_t)v24, (uint64_t)&v29);
    *(unsigned char *)(v15 + 64) = 0;
    long long v16 = v30;
    *(_OWORD *)(v15 + 32) = v29;
    *(_OWORD *)(v15 + 48) = v16;
    *(void *)(v9 + 40) = v15;
    sub_19EEBD664((uint64_t)v27, &qword_1EB393260);
    *(void *)&long long v29 = v12;
    LOBYTE(v27[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    Class isa = v18.super.isa;
    id v21 = [(objc_class *)v18.super.isa context];
    if (v21)
    {
      long long v22 = v21;
      uint64_t v23 = isa;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_19F126610(void *a1, void *a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  id v7 = a1;
  sub_19EFC7938(a1, (uint64_t)&v44);
  long long v33 = v44;
  uint64_t v34 = v45;
  LOBYTE(v35) = BYTE8(v45);
  uint64_t v36 = v46;
  char v37 = v47;
  uint64_t v38 = v48;
  uint64_t v39 = v49;
  uint64_t v40 = v50;
  uint64_t v41 = v51;
  uint64_t v28 = (void *)v52;
  long long v42 = v52;
  uint64_t v43 = v53;
  JSError.jsRepresentation(in:)(a3, v30);
  uint64_t v26 = a2;
  uint64_t v27 = v6;
  uint64_t v9 = v31;
  uint64_t v8 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  uint64_t v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 16))(a3, v9, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *(void *)(v27 + 56) = sub_19EE8FF40();
  *(void *)(v27 + 32) = v19;
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  v20.super.Class isa = JSReference.unwrap()().super.isa;
  if (v21.super.isa)
  {
    swift_bridgeObjectRelease();
    if (qword_1E946E1C0 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)qword_1E9498A98;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19F24EB80;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v12 + 16) = xmmword_19F24EAD0;
    uint64_t v35 = v13;
    *(void *)&long long v33 = 0xD00000000000002CLL;
    *((void *)&v33 + 1) = 0x800000019F273600;
    long long v44 = 0u;
    long long v45 = 0u;
    id v14 = v10;
    sub_19EEC3E70((uint64_t)&v33, (uint64_t)&v44);
    *(unsigned char *)(v12 + 64) = 0;
    long long v15 = v45;
    *(_OWORD *)(v12 + 32) = v44;
    *(_OWORD *)(v12 + 48) = v15;
    *(void *)(v11 + 32) = v12;
    swift_getErrorValue();
    uint64_t v35 = v29;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v33);
    (*(void (**)(uint64_t *))(*(void *)(v29 - 8) + 16))(boxed_opaque_existential_2Tm);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_19F24EAD0;
    sub_19EEBCD00((uint64_t)&v33, (uint64_t)v30);
    long long v44 = 0u;
    long long v45 = 0u;
    sub_19EEC3E70((uint64_t)v30, (uint64_t)&v44);
    *(unsigned char *)(v17 + 64) = 0;
    long long v18 = v45;
    *(_OWORD *)(v17 + 32) = v44;
    *(_OWORD *)(v17 + 48) = v18;
    *(void *)(v11 + 40) = v17;
    sub_19EEBD664((uint64_t)&v33, &qword_1EB393260);
    *(void *)&long long v44 = v14;
    LOBYTE(v33) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v33);
    swift_bridgeObjectRelease();
  }
  else
  {
    Class isa = v20.super.isa;
    id v23 = [(objc_class *)v20.super.isa context];
    if (v23)
    {
      char v24 = v23;
      uint64_t v25 = isa;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for JSPlatformUnavailableObject()
{
  return self;
}

void sub_19F126CA0(void *a1)
{
}

void sub_19F126CC4(void *a1)
{
}

void sub_19F126CE8(void *a1)
{
}

void sub_19F126D0C(void *a1)
{
}

void sub_19F126D30(void *a1)
{
}

void sub_19F126D54(void *a1)
{
}

void sub_19F126D78(void *a1)
{
}

void sub_19F126D9C(void *a1)
{
}

uint64_t sub_19F126DC0(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a3;
  int64_t v7 = a1;
  int64_t v8 = 0;
  int64_t v9 = a1;
  while (1)
  {
    BOOL v10 = v9 <= a2;
    if (a3 > 0) {
      BOOL v10 = v9 >= a2;
    }
    if (v10) {
      break;
    }
    BOOL v11 = __OFADD__(v9, a3);
    v9 += a3;
    if (v11) {
      int64_t v9 = (v9 >> 63) ^ 0x8000000000000000;
    }
    BOOL v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_19EFF64B0(0, v8, 0);
  uint64_t result = v46;
  if (v8)
  {
    uint64_t v41 = *(void *)(a4 + 16);
    uint64_t v40 = a4 + 32;
    int64_t v13 = a2;
    while (1)
    {
      BOOL v14 = v7 <= v13;
      if (v6 > 0) {
        BOOL v14 = v7 >= v13;
      }
      if (v14) {
        break;
      }
      if (__OFADD__(v7, v6)) {
        int64_t v15 = ((v7 + v6) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v15 = v7 + v6;
      }
      if (__OFADD__(v7, a5)) {
        goto LABEL_77;
      }
      if (v7 + a5 >= v41) {
        uint64_t v16 = v41;
      }
      else {
        uint64_t v16 = v7 + a5;
      }
      uint64_t v17 = v16 - v7;
      if (v16 < v7) {
        goto LABEL_78;
      }
      if (v7 < 0) {
        goto LABEL_79;
      }
      uint64_t v44 = result;
      uint64_t v18 = v6;
      sub_19F1DD53C();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v19 = swift_dynamicCastClass();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = MEMORY[0x1E4FBC860];
      }
      uint64_t v20 = *(void *)(v19 + 16);
      swift_release();
      if (v20 == v17)
      {
        JSValue v21 = (void *)swift_dynamicCastClass();
        uint64_t v6 = v18;
        int64_t v13 = a2;
        if (!v21)
        {
          swift_bridgeObjectRelease();
          JSValue v21 = (void *)MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        JSValue v21 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v6 = v18;
        int64_t v13 = a2;
        if (v16 != v7)
        {
          if (v17 < 1)
          {
            if (v17 < 0) {
              goto LABEL_83;
            }
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
            JSValue v21 = (void *)swift_allocObject();
            int64_t v24 = _swift_stdlib_malloc_size(v21);
            uint64_t v25 = v24 - 32;
            if (v24 < 32) {
              uint64_t v25 = v24 - 17;
            }
            void v21[2] = v17;
            void v21[3] = 2 * (v25 >> 4);
          }
          if (v40 + 16 * v7 < (unint64_t)&v21[2 * v17 + 4] && (unint64_t)(v21 + 4) < v40 + 16 * v16) {
            goto LABEL_83;
          }
          swift_arrayInitWithCopy();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = v44;
      unint64_t v23 = *(void *)(v44 + 16);
      unint64_t v22 = *(void *)(v44 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_19EFF64B0(v22 > 1, v23 + 1, 1);
        int64_t v13 = a2;
        uint64_t result = v44;
      }
      *(void *)(result + 16) = v23 + 1;
      *(void *)(result + 8 * v23 + 32) = v21;
      int64_t v7 = v15;
      if (!--v8) {
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
  }
  else
  {
    int64_t v15 = v7;
    int64_t v13 = a2;
LABEL_43:
    BOOL v26 = v15 <= v13;
    if (v6 > 0) {
      BOOL v26 = v15 >= v13;
    }
    if (v26) {
      return result;
    }
    uint64_t v45 = a4 + 32;
    while (1)
    {
      int64_t v27 = __OFADD__(v15, v6) ? ((v15 + v6) >> 63) ^ 0x8000000000000000 : v15 + v6;
      if (__OFADD__(v15, a5)) {
        break;
      }
      if (v15 + a5 >= *(void *)(a4 + 16)) {
        uint64_t v28 = *(void *)(a4 + 16);
      }
      else {
        uint64_t v28 = v15 + a5;
      }
      uint64_t v29 = v28 - v15;
      if (v28 < v15) {
        goto LABEL_81;
      }
      if (v15 < 0) {
        goto LABEL_82;
      }
      uint64_t v30 = result;
      sub_19F1DD53C();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v31 = swift_dynamicCastClass();
      if (!v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = MEMORY[0x1E4FBC860];
      }
      uint64_t v32 = *(void *)(v31 + 16);
      swift_release();
      if (v32 == v29)
      {
        long long v33 = (void *)swift_dynamicCastClass();
        if (!v33)
        {
          swift_bridgeObjectRelease();
          long long v33 = (void *)MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        long long v33 = (void *)MEMORY[0x1E4FBC860];
        if (v28 != v15)
        {
          if (v29 < 1)
          {
            if (v29 < 0) {
              goto LABEL_83;
            }
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
            long long v33 = (void *)swift_allocObject();
            int64_t v38 = _swift_stdlib_malloc_size(v33);
            uint64_t v39 = v38 - 32;
            if (v38 < 32) {
              uint64_t v39 = v38 - 17;
            }
            v33[2] = v29;
            v33[3] = 2 * (v39 >> 4);
          }
          if (v45 + 16 * v15 < (unint64_t)&v33[2 * v29 + 4] && (unint64_t)(v33 + 4) < v45 + 16 * v28) {
            goto LABEL_83;
          }
          swift_arrayInitWithCopy();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = v30;
      uint64_t v47 = v30;
      unint64_t v35 = *(void *)(v30 + 16);
      unint64_t v34 = *(void *)(v30 + 24);
      int64_t v36 = a2;
      if (v35 >= v34 >> 1)
      {
        sub_19EFF64B0(v34 > 1, v35 + 1, 1);
        int64_t v36 = a2;
        uint64_t result = v47;
      }
      *(void *)(result + 16) = v35 + 1;
      *(void *)(result + 8 * v35 + 32) = v33;
      BOOL v37 = v27 <= v36;
      if (v6 > 0) {
        BOOL v37 = v27 >= v36;
      }
      int64_t v15 = v27;
      if (v37) {
        return result;
      }
    }
  }
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F1272E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_19F1DCE6C();
    uint64_t v8 = a1 + 32;
    uint64_t v25 = *(void *)(a3 + 48);
    sub_19F127B40(a3 + 56, (uint64_t)v35);
    char v24 = *(unsigned char *)(a3 + 40);
    do
    {
      id v15 = objc_allocWithZone(MEMORY[0x1E4F4DCF0]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v16 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      uint64_t v17 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      id v18 = objc_msgSend(v15, sel_initWithBag_caller_keyProfile_, a2, v16, v17);

      swift_unknownObjectRelease();
      objc_msgSend(v18, sel_setVersion_, v25);
      sub_19F127B40((uint64_t)v35, (uint64_t)v36);
      if (v36[1]) {
        uint64_t v19 = (void *)sub_19F1DBD4C();
      }
      else {
        uint64_t v19 = 0;
      }
      objc_msgSend(v18, sel_setPlatform_, v19);

      objc_msgSend(v18, sel_setClientInfo_, a4);
      uint64_t v20 = (void *)sub_19F1DC14C();
      if (v24)
      {
        id v9 = objc_msgSend(v18, sel_performLookupWithBundleIdentifiers_itemIdentifiers_, v20, 0);

        __swift_instantiateConcreteTypeFromMangledName(&qword_1E94752B8);
        uint64_t v10 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
        uint64_t v11 = swift_allocObject();
        *(_DWORD *)(v11 + 16) = 0;
        *(void *)(v10 + 16) = v11;
        *(void *)(v10 + 24) = MEMORY[0x1E4FBC860];
        *(unsigned char *)(v10 + 32) = 0;
        uint64_t v32 = (void (*)(void *))sub_19F127BA8;
        uint64_t v33 = v10;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v29 = 1107296256;
        uint64_t v30 = sub_19EE530EC;
        uint64_t v31 = &block_descriptor_34;
        uint64_t v12 = _Block_copy(&aBlock);
        swift_retain_n();
        swift_release();
        objc_msgSend(v9, sel_addSuccessBlock_, v12);
        _Block_release(v12);
        uint64_t v32 = sub_19F127BAC;
        uint64_t v33 = v10;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v29 = 1107296256;
        uint64_t v30 = sub_19EEA60B4;
        int64_t v13 = &block_descriptor_19;
      }
      else
      {
        id v9 = objc_msgSend(v18, sel_performLookupWithBundleIdentifiers_itemIdentifiers_, 0, v20);

        __swift_instantiateConcreteTypeFromMangledName(&qword_1E94752B8);
        uint64_t v21 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
        uint64_t v22 = swift_allocObject();
        *(_DWORD *)(v22 + 16) = 0;
        *(void *)(v21 + 16) = v22;
        *(void *)(v21 + 24) = MEMORY[0x1E4FBC860];
        *(unsigned char *)(v21 + 32) = 0;
        uint64_t v32 = (void (*)(void *))sub_19F127BB0;
        uint64_t v33 = v21;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v29 = 1107296256;
        uint64_t v30 = sub_19EE530EC;
        uint64_t v31 = &block_descriptor_23_0;
        unint64_t v23 = _Block_copy(&aBlock);
        swift_retain_n();
        swift_release();
        objc_msgSend(v9, sel_addSuccessBlock_, v23);
        _Block_release(v23);
        uint64_t v32 = sub_19F127BB4;
        uint64_t v33 = v21;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v29 = 1107296256;
        uint64_t v30 = sub_19EEA60B4;
        int64_t v13 = &block_descriptor_27_2;
      }
      uint64_t v31 = v13;
      BOOL v14 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v9, sel_addErrorBlock_, v14);

      _Block_release(v14);
      swift_bridgeObjectRelease();

      sub_19F1DCE3C();
      sub_19F1DCE7C();
      sub_19F1DCE8C();
      sub_19F1DCE4C();
      v8 += 8;
      --v5;
    }
    while (v5);
    return v34;
  }
  return result;
}

uint64_t sub_19F1277F8()
{
  id v0 = objc_msgSend(self, sel_currentContext);
  if (v0)
  {
    uint64_t v1 = v0;
    sub_19EF600C0();
    uint64_t v2 = (void *)swift_allocError();
    *(void *)uint64_t v3 = 0xD000000000000024;
    *(void *)(v3 + 8) = 0x800000019F273580;
    *(void *)(v3 + 16) = 0;
    *(unsigned char *)(v3 + 24) = 1;
    *(void *)(v3 + 32) = 0;
    *(unsigned char *)(v3 + 40) = 1;
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
    *(_OWORD *)(v3 + 80) = 0u;
    *(void *)(v3 + 96) = 0;
    swift_willThrow();
    id v4 = objc_msgSend(v1, sel_exceptionHandler);
    if (v4)
    {
      uint64_t v5 = (void (**)(void, void, void))v4;
      _Block_copy(v4);
      id v6 = sub_19F035668(v2, v1);
      ((void (**)(void, void *, id))v5)[2](v5, v1, v6);
      _Block_release(v5);
      _Block_release(v5);
    }
    id v7 = objc_msgSend(self, sel_valueWithUndefinedInContext_, v1);
    if (v7)
    {
      id v8 = v7;

      return (uint64_t)v8;
    }
    __break(1u);
  }
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19F12799C(uint64_t a1)
{
  return a1;
}

uint64_t sub_19F1279F0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_19F127A50(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_19F1260D4(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, *(void *)(v3 + 96));
}

uint64_t sub_19F127A74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_19F127AC4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_19F125D98(a1, a2, v3 + 16, a3);
}

void sub_19F127AE4(uint64_t a1)
{
  sub_19F1262B0(a1, (void *)(v1 + 16), *(void **)(v1 + 56));
}

uint64_t objectdestroy_12Tm_0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_19F127B34(void *a1)
{
  sub_19F126610(a1, (void *)(v1 + 16), *(void **)(v1 + 56));
}

uint64_t sub_19F127B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for MigrationMetricsIDService(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 56);
  return swift_release();
}

uint64_t initializeWithCopy for MigrationMetricsIDService(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void **)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v8 = v7;
  id v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v5;
  swift_unknownObjectRetain();
  v9(a1 + 56, a2 + 56, v8);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MigrationMetricsIDService(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  long long v4 = *(void **)(a2 + 40);
  uint64_t v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v4;
  id v6 = v4;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

__n128 __swift_memcpy105_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for MigrationMetricsIDService(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  long long v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for MigrationMetricsIDService(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 105)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MigrationMetricsIDService(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MigrationMetricsIDService()
{
  return &type metadata for MigrationMetricsIDService;
}

void sub_19F127EF8(void *a1)
{
}

void sub_19F127F1C(void *a1)
{
}

void sub_19F127F40(void *a1)
{
}

void sub_19F127F64(void *a1)
{
}

void sub_19F127F88(void *a1)
{
}

void sub_19F127FAC(void *a1)
{
}

void sub_19F127FD0(void *a1)
{
}

void sub_19F127FF4(void *a1)
{
}

void sub_19F128018(void *a1)
{
}

void sub_19F12803C(void *a1)
{
}

void sub_19F128060(void *a1)
{
}

void sub_19F128084(void *a1)
{
}

void sub_19F1280A8(void *a1)
{
}

void sub_19F1280CC(void *a1)
{
}

void sub_19F1280F0(void *a1)
{
}

void sub_19F128114(void *a1)
{
}

void sub_19F128138(uint64_t a1, void *a2)
{
  long long v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_19F1281A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 1104) = a8;
  *(void *)(v8 + 1096) = a7;
  *(void *)(v8 + 1088) = a6;
  *(unsigned char *)(v8 + 329) = a5;
  *(void *)(v8 + 1080) = a4;
  *(void *)(v8 + 1072) = a3;
  *(void *)(v8 + 1064) = a2;
  *(void *)(v8 + 1056) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5C0);
  *(void *)(v8 + 1112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for MTMetricsIdentifier();
  *(void *)(v8 + 1120) = v9;
  *(void *)(v8 + 1128) = *(void *)(v9 - 8);
  *(void *)(v8 + 1136) = swift_task_alloc();
  *(void *)(v8 + 1144) = swift_task_alloc();
  *(void *)(v8 + 1152) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  *(void *)(v8 + 1160) = swift_task_alloc();
  *(void *)(v8 + 1168) = swift_task_alloc();
  uint64_t v10 = sub_19F1DB57C();
  *(void *)(v8 + 1176) = v10;
  *(void *)(v8 + 1184) = *(void *)(v10 - 8);
  *(void *)(v8 + 1192) = swift_task_alloc();
  *(void *)(v8 + 1200) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F128378, 0, 0);
}

uint64_t sub_19F128378()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 + 1104);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 1184);
    uint64_t v3 = *(void *)(v0 + 1176);
    uint64_t v4 = *(void *)(v0 + 1168);
    uint64_t v5 = *(void *)(v0 + 1088);
    uint64_t v6 = swift_allocObject();
    *(void *)(v0 + 1208) = v6;
    *(void *)(v6 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D4F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
    *(unsigned char *)(inited + 32) = 5;
    *(void *)(inited + 64) = MEMORY[0x1E4FBB550];
    *(void *)(inited + 40) = 0;
    *(unsigned char *)(inited + 72) = 6;
    uint64_t v8 = sub_19F1DC2EC();
    *(void *)(inited + 104) = sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
    *(void *)(inited + 80) = v8;
    uint64_t v9 = (void *)sub_19EFB5354(inited);
    sub_19EF87BFC(v5, v4);
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    *(void *)(v0 + 1216) = v10;
    *(void *)(v0 + 1224) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    if (v10(v4, 1, v3) == 1)
    {
      sub_19EEBD664(*(void *)(v0 + 1168), qword_1EB3923B0);
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 1200);
      uint64_t v21 = *(void *)(v0 + 1184);
      uint64_t v22 = *(void *)(v0 + 1176);
      (*(void (**)(uint64_t, void, uint64_t))(v21 + 32))(v20, *(void *)(v0 + 1168), v22);
      *(void *)(v0 + 776) = v22;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 752));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v21 + 16))(boxed_opaque_existential_2Tm, v20, v22);
      sub_19EEBDC00((_OWORD *)(v0 + 752), (_OWORD *)(v0 + 656));
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v27 = v9;
      sub_19EFBC79C((_OWORD *)(v0 + 656), 0, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }
    *(void *)(v0 + 1232) = v9;
    uint64_t v25 = *(void *)(v0 + 1096);
    sub_19F12A190(v6, *(void *)(v0 + 1080));
    swift_bridgeObjectRetain();
    *(void *)(v0 + 1240) = sub_19EF7D438(v25, v1, v9);
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1F4188298](sub_19F1287C0, 0, 0);
  }
  else
  {
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v11 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 840) = v14;
    *(void *)(v0 + 816) = 0xD000000000000038;
    *(void *)(v0 + 824) = 0x800000019F272710;
    *(_OWORD *)(v0 + 576) = 0u;
    *(_OWORD *)(v0 + 592) = 0u;
    id v15 = v11;
    sub_19EEC3E70(v0 + 816, v0 + 576);
    *(unsigned char *)(v0 + 608) = 0;
    *(unsigned char *)(v13 + 64) = 0;
    long long v16 = *(_OWORD *)(v0 + 592);
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(v0 + 576);
    *(_OWORD *)(v13 + 48) = v16;
    *(void *)(v12 + 32) = v13;
    id v27 = v15;
    char v26 = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v26);
    swift_bridgeObjectRelease();

    unint64_t v17 = sub_19EE78050(MEMORY[0x1E4FBC860]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v18(v17);
  }
}

uint64_t sub_19F1287C0()
{
  *(void *)(v0 + 80) = v0;
  *(void *)(v0 + 120) = v0 + 1048;
  *(void *)(v0 + 88) = sub_19F128888;
  *(void *)(v0 + 256) = swift_continuation_init();
  *(unsigned char *)(v0 + 328) = 1;
  sub_19EF52E34(v0 + 256);
  sub_19EEBD664(v0 + 256, &qword_1E946D620);
  return MEMORY[0x1F41881E8](v0 + 80);
}

uint64_t sub_19F128888()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 1248) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F1298E4;
  }
  else
  {
    *(void *)(v1 + 1256) = *(void *)(v1 + 1048);
    swift_release();
    uint64_t v3 = sub_19F1289B4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F1289B4()
{
  uint64_t v128 = v0;
  uint64_t v1 = *(void *)(v0 + 1104);
  uint64_t v2 = *(void *)(v0 + 1096);
  uint64_t v3 = *(void *)(v0 + 1056);
  v127[0] = 1;
  sub_19F156620(v2, v1, v127, v3, (uint64_t)&v123);
  uint64_t v4 = v124;
  if (!v124)
  {
    swift_bridgeObjectRelease();
LABEL_93:
    swift_release();
    uint64_t v81 = *(void *)(v0 + 1256);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v82 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v82(v81);
  }
  uint64_t v5 = *(void *)(v0 + 1056);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v119 = v6;
  id v121 = v123;
  if (v125)
  {
    if (v6)
    {
      uint64_t v104 = v126;
      uint64_t v7 = 0;
      uint64_t v106 = v5 + 32;
      uint64_t v8 = *(void *)(v125 + 16);
      uint64_t v109 = v125;
      unint64_t v103 = (void *)(v125 + 56);
      while (1)
      {
        if (v8)
        {
          uint64_t v9 = v106 + 72 * v7;
          uint64_t v11 = *(void *)v9;
          uint64_t v10 = *(void *)(v9 + 8);
          char v114 = *(unsigned char *)(v9 + 40);
          double v112 = *(double *)(v9 + 32);
          uint64_t v113 = *(void *)(v9 + 56);
          uint64_t v116 = *(void *)(v9 + 64);
          if (*(void *)(v109 + 32) == *(void *)v9 && *(void *)(v109 + 40) == v10) {
            goto LABEL_43;
          }
          uint64_t v13 = sub_19F1DD44C();
          if (v13) {
            goto LABEL_43;
          }
          if (v8 != 1) {
            break;
          }
        }
LABEL_5:
        if (++v7 == v119) {
          goto LABEL_92;
        }
      }
      long long v16 = v103;
      uint64_t v17 = 1;
      while (1)
      {
        uint64_t v18 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (*(v16 - 1) == v11 && *v16 == v10) {
          goto LABEL_43;
        }
        uint64_t v13 = sub_19F1DD44C();
        if (v13) {
          goto LABEL_43;
        }
        ++v17;
        v16 += 2;
        if (v18 == v8) {
          goto LABEL_5;
        }
      }
      __break(1u);
LABEL_140:
      __break(1u);
      return MEMORY[0x1F4188298](v13, v14, v15);
    }
    goto LABEL_92;
  }
  if (!v6)
  {
LABEL_92:
    sub_19F0CD664((uint64_t)v121, v4);
    swift_bridgeObjectRelease();
    goto LABEL_93;
  }
  uint64_t v104 = v126;
  uint64_t v20 = 0;
  uint64_t v110 = v5 + 32;
  uint64_t v21 = (uint64_t)v123;
  while (1)
  {
    uint64_t v22 = v110 + 72 * v20;
    unint64_t v23 = *(void **)(v22 + 48);
    if (!v23) {
      goto LABEL_25;
    }
    uint64_t v24 = v23[2];
    if (!v24) {
      goto LABEL_25;
    }
    uint64_t v11 = *(void *)v22;
    uint64_t v10 = *(void *)(v22 + 8);
    char v114 = *(unsigned char *)(v22 + 40);
    double v112 = *(double *)(v22 + 32);
    uint64_t v113 = *(void *)(v22 + 56);
    uint64_t v116 = *(void *)(v22 + 64);
    if (v23[4] == v21 && v4 == v23[5]) {
      break;
    }
    uint64_t v13 = sub_19F1DD44C();
    uint64_t v21 = (uint64_t)v121;
    if (v13) {
      break;
    }
    if (v24 != 1)
    {
      char v26 = v23 + 7;
      uint64_t v27 = 1;
      do
      {
        uint64_t v28 = v27 + 1;
        if (__OFADD__(v27, 1)) {
          goto LABEL_140;
        }
        if (*(v26 - 1) == v21 && v4 == *v26) {
          goto LABEL_43;
        }
        uint64_t v13 = sub_19F1DD44C();
        uint64_t v21 = (uint64_t)v121;
        if (v13) {
          goto LABEL_43;
        }
        ++v27;
        v26 += 2;
      }
      while (v28 != v24);
    }
LABEL_25:
    if (++v20 == v119) {
      goto LABEL_92;
    }
  }
LABEL_43:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v30 = *(void **)(v0 + 1064);
  sub_19F0CD664((uint64_t)v121, v4);
  uint64_t v31 = v30[3];
  uint64_t v32 = v30[4];
  __swift_project_boxed_opaque_existential_1(v30, v31);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v32 + 8))(&v123, v31, v32);
  uint64_t v33 = (uint64_t)v123;
  *(void *)(v0 + 1264) = v123;
  if (!v33)
  {
    swift_bridgeObjectRelease();
    sub_19F0CD664(v11, v10);
    goto LABEL_93;
  }
  uint64_t v120 = v0 + 329;
  uint64_t v34 = *(unsigned __int8 *)(v0 + 329);
  uint64_t v35 = *(void *)(v0 + 1072);
  id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD78]), sel_init, v104);
  *(void *)(v0 + 1272) = v36;
  BOOL v37 = (void *)v33;
  objc_msgSend(v36, sel_setAccount_, v33);
  objc_msgSend(v36, sel_setClientInfo_, v35);
  id v38 = v36;
  uint64_t v39 = (void *)sub_19F1DBD4C();
  objc_msgSend(v38, sel_setDomain_, v39);

  objc_msgSend(v38, sel_setIsActiveITunesAccountRequired_, v34);
  if (v114)
  {
    if (v116)
    {
      if (v113 == 0x796C696164 && v116 == 0xE500000000000000)
      {
        sub_19F0CD664(v11, v10);
        objc_msgSend(v38, sel_setResetInterval_, 86400.0, 0xE500000000000000);
      }
      else
      {
        char v40 = sub_19F1DD44C();
        sub_19F0CD664(v11, v10);
        if (v40) {
          objc_msgSend(v38, sel_setResetInterval_, 86400.0, v116);
        }
      }
    }
    else
    {
      sub_19F0CD664(v11, v10);
    }
  }
  else
  {
    sub_19F0CD664(v11, v10);
    objc_msgSend(v38, sel_setResetInterval_, v112, v116);
  }
  uint64_t v41 = v38;
  long long v42 = (void *)sub_19F1DBD4C();
  uint64_t v43 = self;
  id v44 = objc_msgSend(v43, sel_keyWithName_crossDeviceSync_, v42, 0);
  *(void *)(v0 + 1280) = v44;

  uint64_t v45 = (void *)sub_19F1DBD4C();
  id v46 = objc_msgSend(v43, sel_keyWithName_crossDeviceSync_, v45, 1);
  *(void *)(v0 + 1288) = v46;

  id v47 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v48 = (void *)sub_19F1DBD4C();
  unsigned int v49 = objc_msgSend(v47, sel_BOOLForKey_, v48);

  if (v49)
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v41, sel_reset);

    goto LABEL_93;
  }
  long long v111 = v37;
  uint64_t v117 = v0 + 456;
  uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1216);
  uint64_t v51 = *(void *)(v0 + 1176);
  uint64_t v52 = *(void *)(v0 + 1160);
  uint64_t v53 = *(void *)(v0 + 1088);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_19F250E90;
  *(void *)(v54 + 32) = v44;
  *(void *)(v54 + 40) = v46;
  uint64_t v123 = (void *)v54;
  sub_19F1DC17C();
  sub_19EEBDC10(0, (unint64_t *)&qword_1E946E1F8);
  uint64_t v108 = v0;
  id v122 = v41;
  id v55 = v44;
  id v105 = v46;
  uint64_t v56 = (void *)sub_19F1DC14C();
  swift_bridgeObjectRelease();
  sub_19EF87BFC(v53, v52);
  uint64_t v107 = v55;
  if (v50(v52, 1, v51) == 1)
  {
    uint64_t v57 = *(void *)(v0 + 1160);
    sub_19F1DB55C();
    sub_19EEBD664(v57, qword_1EB3923B0);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 1184) + 32))(*(void *)(v0 + 1192), *(void *)(v0 + 1160), *(void *)(v0 + 1176));
  }
  long long v58 = (void *)v0;
  uint64_t v59 = v0 + 416;
  uint64_t v60 = (_OWORD *)(v0 + 880);
  uint64_t v61 = *(void *)(v0 + 1192);
  uint64_t v62 = *(void *)(v0 + 1184);
  uint64_t v63 = v58[147];
  long long v64 = (void *)sub_19F1DB4DC();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
  id v65 = objc_msgSend(v122, sel_generateEventFieldsForKeys_date_, v56, v64);

  uint64_t v66 = sub_19F1DBB3C();
  v58[120] = 0x644972657375;
  v58[121] = 0xE600000000000000;
  sub_19F1DCC8C();
  if (*(void *)(v66 + 16) && (unint64_t v67 = sub_19EE77500(v117), (v68 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v66 + 56) + 32 * v67, (uint64_t)v60);
  }
  else
  {
    _OWORD *v60 = 0u;
    v60[1] = 0u;
  }
  sub_19EE7760C(v117);
  if (*(void *)(v108 + 904))
  {
    int v69 = swift_dynamicCast();
    uint64_t v70 = *(void *)(v108 + 1024);
    if (!v69) {
      uint64_t v70 = 0;
    }
    uint64_t v115 = v70;
    if (v69) {
      uint64_t v71 = *(void *)(v108 + 1032);
    }
    else {
      uint64_t v71 = 0;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v60, &qword_1EB393260);
    uint64_t v115 = 0;
    uint64_t v71 = 0;
  }
  uint64_t v72 = v108 + 536;
  uint64_t v73 = (_OWORD *)(v108 + 720);
  uint64_t v74 = *(void *)(v108 + 1256);
  *(void *)(v108 + 992) = 0x644972657375;
  *(void *)(v108 + 1000) = 0xE600000000000000;
  sub_19F1DCC8C();
  uint64_t v118 = v74;
  if (*(void *)(v74 + 16) && (unint64_t v75 = sub_19EE77500(v59), (v76 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v108 + 1256) + 56) + 32 * v75, v108 + 720);
  }
  else
  {
    *uint64_t v73 = 0u;
    *(_OWORD *)(v108 + 736) = 0u;
  }
  sub_19EE7760C(v59);
  if (!*(void *)(v108 + 744))
  {
    sub_19EEBD664((uint64_t)v73, &qword_1EB393260);
    if (v71) {
      goto LABEL_88;
    }
LABEL_91:
    int v80 = 1;
    goto LABEL_98;
  }
  int v77 = swift_dynamicCast();
  if (v77) {
    uint64_t v78 = *(void *)(v108 + 1008);
  }
  else {
    uint64_t v78 = 0;
  }
  if (v77) {
    uint64_t v79 = *(void *)(v108 + 1016);
  }
  else {
    uint64_t v79 = 0;
  }
  if (!v71)
  {
    if (v79)
    {
      int v80 = 0;
      goto LABEL_97;
    }
    goto LABEL_91;
  }
  if (!v79)
  {
LABEL_88:
    int v80 = 0;
    goto LABEL_97;
  }
  if (v115 == v78 && v71 == v79)
  {
    swift_bridgeObjectRelease();
    int v80 = 1;
  }
  else
  {
    int v80 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
  }
LABEL_97:
  swift_bridgeObjectRelease();
LABEL_98:
  uint64_t v84 = v108 + 496;
  uint64_t v85 = (_OWORD *)(v108 + 688);
  *(unsigned char *)(v120 + 1) = v80 & 1;
  *(void *)(v108 + 912) = 0x6449746E65696C63;
  *(void *)(v108 + 920) = 0xE800000000000000;
  sub_19F1DCC8C();
  if (*(void *)(v66 + 16) && (unint64_t v86 = sub_19EE77500(v72), (v87 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(v66 + 56) + 32 * v86, v108 + 688);
  }
  else
  {
    *uint64_t v85 = 0u;
    *(_OWORD *)(v108 + 704) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_19EE7760C(v72);
  uint64_t v0 = v108;
  if (*(void *)(v108 + 712))
  {
    int v88 = v80;
    int v89 = swift_dynamicCast();
    if (v89) {
      uint64_t v90 = *(void *)(v108 + 928);
    }
    else {
      uint64_t v90 = 0;
    }
    if (v89) {
      uint64_t v91 = *(void *)(v108 + 936);
    }
    else {
      uint64_t v91 = 0;
    }
  }
  else
  {
    int v88 = v80;
    sub_19EEBD664((uint64_t)v85, &qword_1EB393260);
    uint64_t v90 = 0;
    uint64_t v91 = 0;
  }
  *(void *)(v108 + 944) = 0x6449746E65696C63;
  *(void *)(v108 + 952) = 0xE800000000000000;
  sub_19F1DCC8C();
  if (*(void *)(v118 + 16) && (unint64_t v92 = sub_19EE77500(v84), (v93 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(*(void *)(v108 + 1256) + 56) + 32 * v92, v108 + 784);
  }
  else
  {
    *(_OWORD *)(v108 + 784) = 0u;
    *(_OWORD *)(v108 + 800) = 0u;
  }
  sub_19EE7760C(v84);
  if (!*(void *)(v108 + 808))
  {
    sub_19EEBD664(v108 + 784, &qword_1EB393260);
    if (v91) {
      goto LABEL_130;
    }
LABEL_131:
    if ((v88 & 1) == 0) {
      goto LABEL_132;
    }
    goto LABEL_134;
  }
  int v94 = swift_dynamicCast();
  if (v94) {
    uint64_t v95 = *(void *)(v108 + 976);
  }
  else {
    uint64_t v95 = 0;
  }
  if (v94) {
    uint64_t v96 = *(void *)(v108 + 984);
  }
  else {
    uint64_t v96 = 0;
  }
  if (!v91)
  {
    if (v96) {
      goto LABEL_130;
    }
    goto LABEL_131;
  }
  if (!v96)
  {
LABEL_130:
    swift_bridgeObjectRelease();
    char v97 = 0;
    goto LABEL_136;
  }
  if (v90 != v95 || v91 != v96)
  {
    int v98 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v88 & v98 & 1) == 0)
    {
      char v97 = (v88 ^ 1) & v98;
      goto LABEL_136;
    }
LABEL_134:
    swift_bridgeObjectRelease();

    goto LABEL_93;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v88) {
    goto LABEL_134;
  }
LABEL_132:
  char v97 = 1;
LABEL_136:
  *(unsigned char *)(v120 + 2) = v97 & 1;
  uint64_t v99 = *(void *)(v108 + 1232);
  uint64_t v100 = *(void *)(v108 + 1104);
  uint64_t v101 = *(void *)(v108 + 1096);
  sub_19F12A190(*(void *)(v108 + 1208), *(void *)(v108 + 1080));
  uint64_t v102 = swift_allocObject();
  *(_OWORD *)(v102 + 16) = xmmword_19F250E90;
  LOBYTE(v123) = 0;
  *(void *)(v102 + 32) = sub_19EF7CF24(v101, v100, (unsigned __int8 *)&v123, v99);
  LOBYTE(v123) = 1;
  *(void *)(v102 + 40) = sub_19EF7CF24(v101, v100, (unsigned __int8 *)&v123, v99);
  uint64_t v123 = (void *)v102;
  sub_19F1DC17C();
  *(void *)(v108 + 1296) = sub_19F1071A4((uint64_t)v123, sub_19EF7CCB8, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = (uint64_t)sub_19F1299E4;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  return MEMORY[0x1F4188298](v13, v14, v15);
}

uint64_t sub_19F1298E4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F1299E4()
{
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 1040;
  *(void *)(v0 + 24) = sub_19F129AAC;
  *(void *)(v0 + 336) = swift_continuation_init();
  *(unsigned char *)(v0 + 408) = 1;
  sub_19EF556BC(v0 + 336);
  sub_19EEBD664(v0 + 336, (uint64_t *)&unk_1E946D610);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_19F129AAC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 1304) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F129F5C;
  }
  else
  {
    *(void *)(v1 + 1312) = *(void *)(v1 + 1040);
    swift_release();
    uint64_t v3 = sub_19F129BD8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F129BD8()
{
  if ((*(unsigned char *)(v0 + 330) & 1) == 0)
  {
    if (*(void *)(*(void *)(v0 + 1312) + 16))
    {
      unint64_t v1 = sub_19EFB6CB0(0);
      if (v2)
      {
        uint64_t v3 = *(void *)(v0 + 1152);
        uint64_t v4 = *(void *)(v0 + 1144);
        uint64_t v5 = *(void *)(v0 + 1120);
        sub_19EF7DB10(*(void *)(*(void *)(v0 + 1312) + 56) + *(void *)(*(void *)(v0 + 1128) + 72) * v1, v4);
        sub_19EF7E42C(v4, v3);
        if (*(unsigned char *)(v3 + *(int *)(v5 + 32)))
        {
          uint64_t v6 = *(void *)(v0 + 1288);
          id v7 = *(id *)(v0 + 1272);
          swift_bridgeObjectRetain();
          uint64_t v8 = (void *)sub_19F1DBD4C();
          swift_bridgeObjectRelease();
          uint64_t v9 = (void *)sub_19F1DB4DC();
          objc_msgSend(v7, sel__setIdentifier_withStartedDate_forKey_, v8, v9, v6);
        }
        sub_19EF7E490(*(void *)(v0 + 1152));
      }
    }
  }
  if (*(unsigned char *)(v0 + 331) == 1)
  {
    uint64_t v10 = *(void **)(v0 + 1288);
    uint64_t v11 = *(void **)(v0 + 1280);
    uint64_t v12 = *(void **)(v0 + 1264);

    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    if (*(void *)(*(void *)(v0 + 1312) + 16))
    {
      uint64_t v13 = 1;
      unint64_t v14 = sub_19EFB6CB0(1);
      if (v15)
      {
        sub_19EF7DB10(*(void *)(*(void *)(v0 + 1312) + 56) + *(void *)(*(void *)(v0 + 1128) + 72) * v14, *(void *)(v0 + 1112));
        uint64_t v13 = 0;
      }
    }
    else
    {
      uint64_t v13 = 1;
    }
    uint64_t v16 = *(void *)(v0 + 1128);
    uint64_t v17 = *(void *)(v0 + 1120);
    uint64_t v18 = *(void *)(v0 + 1112);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v18, v13, 1, v17);
    swift_bridgeObjectRelease();
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v17);
    uint64_t v20 = *(void **)(v0 + 1288);
    uint64_t v21 = *(void **)(v0 + 1280);
    uint64_t v22 = *(void **)(v0 + 1272);
    unint64_t v23 = *(void **)(v0 + 1264);
    if (v19 == 1)
    {
      uint64_t v24 = *(void *)(v0 + 1112);

      sub_19EEBD664(v24, &qword_1E946D5C0);
    }
    else
    {
      uint64_t v25 = *(void *)(v0 + 1136);
      sub_19EF7E42C(*(void *)(v0 + 1112), v25);
      id v26 = v22;
      swift_bridgeObjectRetain();
      uint64_t v27 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      uint64_t v28 = (void *)sub_19F1DB4DC();
      objc_msgSend(v26, sel__setIdentifier_withStartedDate_forKey_, v27, v28, v21);

      sub_19EF7E490(v25);
    }
    swift_release();
  }
  uint64_t v29 = *(void *)(v0 + 1256);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v30(v29);
}

uint64_t sub_19F129F5C()
{
  uint64_t v15 = v0;

  swift_release();
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  unint64_t v1 = *(void **)(v0 + 1288);
  char v2 = *(void **)(v0 + 1280);
  uint64_t v3 = *(void **)(v0 + 1272);
  uint64_t v4 = *(void **)(v0 + 1264);
  uint64_t v5 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  *(void *)(v0 + 872) = v8;
  *(void *)(v0 + 848) = 0xD000000000000022;
  *(void *)(v0 + 856) = 0x800000019F272770;
  *(_OWORD *)(v0 + 616) = 0u;
  *(_OWORD *)(v0 + 632) = 0u;
  id v9 = v5;
  sub_19EEC3E70(v0 + 848, v0 + 616);
  *(unsigned char *)(v0 + 648) = 0;
  *(unsigned char *)(v7 + 64) = 0;
  long long v10 = *(_OWORD *)(v0 + 632);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v7 + 48) = v10;
  *(void *)(v6 + 32) = v7;
  char v14 = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v14);
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v11 = *(void *)(v0 + 1256);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v12(v11);
}

void *sub_19F12A190(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + 16);
  char v2 = *(void **)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = v2;
  }
  else
  {
    type metadata accessor for MTStandardIDServiceWrapper();
    uint64_t v4 = (void *)swift_allocObject();
    id v6 = objc_allocWithZone((Class)JESoftLinkedMTStandardIDService);
    swift_unknownObjectRetain();
    v4[2] = objc_msgSend(v6, sel_initWithAMSBag_, a2);
    void v4[3] = a2;
    uint64_t v4[4] = 0;
    swift_beginAccess();
    *uint64_t v3 = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_19F12A254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[5] = a3;
  v4[6] = v3;
  void v4[3] = a1;
  uint64_t v4[4] = a2;
  return MEMORY[0x1F4188298](sub_19F12A278, 0, 0);
}

uint64_t sub_19F12A278()
{
  uint64_t v1 = *(void *)(v0[6] + 48);
  v0[7] = v1;
  v0[2] = v1;
  char v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *char v2 = v0;
  v2[1] = sub_19F12A318;
  return sub_19F04E600();
}

uint64_t sub_19F12A318(uint64_t a1)
{
  *(void *)(*(void *)v1 + 72) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19F12A418, 0, 0);
}

uint64_t sub_19F12A418()
{
  uint64_t v1 = v0[9];
  if (v1)
  {
    uint64_t v2 = v0[6];
    uint64_t v3 = v0[4];
    uint64_t v4 = *(void *)(v2 + 40);
    char v5 = *(unsigned char *)(v2 + 104);
    char v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9475330 + dword_1E9475330);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v6 = (void *)swift_task_alloc();
    v0[10] = v6;
    *id v6 = v0;
    v6[1] = sub_19F12A584;
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[7];
    uint64_t v9 = v0[5];
    uint64_t v10 = v0[3];
    return v14(v1, v7, v4, v8, v5, v9, v10, v3);
  }
  else
  {
    sub_19F05003C();
    swift_allocError();
    *uint64_t v12 = 1;
    swift_willThrow();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_19F12A584(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    char v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_19F12A72C, 0, 0);
  }
}

uint64_t sub_19F12A72C()
{
  uint64_t v8 = v0;
  uint64_t v1 = v0[12];
  if (*(void *)(sub_19F04D454(v0[11]) + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392F20);
    uint64_t v2 = sub_19F1DD06C();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v7 = v2;
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_19F050144(v3, 1, &v7);
  if (v1)
  {
    return swift_unexpectedError();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
    id v6 = (uint64_t (*)(uint64_t))v0[1];
    return v6(v5);
  }
}

uint64_t sub_19F12A83C(uint64_t a1)
{
  *(void *)(v2 + 1568) = v1;
  *(void *)(v2 + 1560) = a1;
  return MEMORY[0x1F4188298](sub_19F12A860, 0, 0);
}

uint64_t sub_19F12A860()
{
  uint64_t v1 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1560);
  sub_19F12BE4C(v1, v0 + 1336);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 1576) = v3;
  long long v4 = *(_OWORD *)(v0 + 1416);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v0 + 1400);
  *(_OWORD *)(v3 + 96) = v4;
  *(_OWORD *)(v3 + 105) = *(_OWORD *)(v0 + 1425);
  long long v5 = *(_OWORD *)(v0 + 1352);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 1336);
  *(_OWORD *)(v3 + 32) = v5;
  long long v6 = *(_OWORD *)(v0 + 1384);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v0 + 1368);
  *(_OWORD *)(v3 + 64) = v6;
  *(void *)(v3 + 128) = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_asyncLet_begin();
  sub_19F12BE4C(v1, v0 + 1448);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 1584) = v7;
  long long v8 = *(_OWORD *)(v0 + 1528);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(v0 + 1512);
  *(_OWORD *)(v7 + 96) = v8;
  *(_OWORD *)(v7 + 105) = *(_OWORD *)(v0 + 1537);
  long long v9 = *(_OWORD *)(v0 + 1464);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v0 + 1448);
  *(_OWORD *)(v7 + 32) = v9;
  long long v10 = *(_OWORD *)(v0 + 1496);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(v0 + 1480);
  *(_OWORD *)(v7 + 64) = v10;
  *(void *)(v7 + 128) = v2;
  swift_bridgeObjectRetain();
  swift_asyncLet_begin();
  return MEMORY[0x1F41881E0](v0 + 16, v11, sub_19F12AA00, v0 + 1296);
}

uint64_t sub_19F12AA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3 + 656;
  uint64_t v5 = v3 + 1296;
  *(void *)(v3 + 1592) = v2;
  if (v2) {
    return MEMORY[0x1F41881D0](v4, a2, sub_19F12AB38, v5);
  }
  else {
    return MEMORY[0x1F41881E0](v4, a2, sub_19F12AA38, v5);
  }
}

uint64_t sub_19F12AA38(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 1600) = v2;
  if (v2) {
    uint64_t v4 = sub_19F12AC00;
  }
  else {
    uint64_t v4 = sub_19F12AA70;
  }
  return MEMORY[0x1F41881D0](v3 + 656, a2, v4, v3 + 1296);
}

uint64_t sub_19F12AA70()
{
  return MEMORY[0x1F4188298](sub_19F12AA8C, 0, 0);
}

uint64_t sub_19F12AA8C(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41881D0](v2 + 16, a2, sub_19F12AAA8, v2 + 656);
}

uint64_t sub_19F12AAA8()
{
  return MEMORY[0x1F4188298](sub_19F12AAC4, 0, 0);
}

uint64_t sub_19F12AAC4()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F12AB38()
{
  return MEMORY[0x1F4188298](sub_19F12AB54, 0, 0);
}

uint64_t sub_19F12AB54(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41881D0](v2 + 16, a2, sub_19F12AB70, v2 + 656);
}

uint64_t sub_19F12AB70()
{
  return MEMORY[0x1F4188298](sub_19F12AB8C, 0, 0);
}

uint64_t sub_19F12AB8C()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F12AC00()
{
  return MEMORY[0x1F4188298](sub_19F12AC1C, 0, 0);
}

uint64_t sub_19F12AC1C(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41881D0](v2 + 16, a2, sub_19F12AC38, v2 + 656);
}

uint64_t sub_19F12AC38()
{
  return MEMORY[0x1F4188298](sub_19F12AC54, 0, 0);
}

uint64_t sub_19F12AC54()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F12ACC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 160) = a2;
  *(void *)(v3 + 168) = a3;
  return MEMORY[0x1F4188298](sub_19F12ACE8, 0, 0);
}

uint64_t sub_19F12ACE8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 160) + 96);
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_19EF9EC80(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = (void *)sub_19F1DC14C();
  id v5 = objc_msgSend(v3, sel_resetIDForTopics_, v4);

  id v6 = v5;
  sub_19F020170(v6);
  *(void *)(v0 + 176) = sub_19F12C234((uint64_t)nullsub_1, 0);
  swift_release();

  swift_release();
  return MEMORY[0x1F4188298](sub_19F12ADF4, 0, 0);
}

uint64_t sub_19F12ADF4()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[3] = sub_19F12AEB0;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EE7EC80(v2);
  sub_19EEBD664(v2, &qword_1E946FBE0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F12AEB0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1)
  {
    swift_willThrow();
    uint64_t v2 = sub_19F12B030;
  }
  else
  {
    uint64_t v2 = sub_19F12AFCC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F12AFCC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F12B030()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F12B094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x1F4188298](sub_19F12B0B4, 0, 0);
}

uint64_t sub_19F12B0B4()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 40) + **(int **)(v3 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19EF8D3A8;
  uint64_t v5 = v0[3];
  return v7(v5, v2, v3);
}

uint64_t sub_19F12B1C0()
{
  *(void *)(v1 + 1560) = v0;
  return MEMORY[0x1F4188298](sub_19F12B1E0, 0, 0);
}

uint64_t sub_19F12B1E0()
{
  uint64_t v1 = *(void *)(v0 + 1560);
  sub_19F12BE4C(v1, v0 + 1336);
  uint64_t v2 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 1568) = v2;
  long long v3 = *(_OWORD *)(v0 + 1416);
  v2[5] = *(_OWORD *)(v0 + 1400);
  v2[6] = v3;
  *(_OWORD *)((char *)v2 + 105) = *(_OWORD *)(v0 + 1425);
  long long v4 = *(_OWORD *)(v0 + 1352);
  v2[1] = *(_OWORD *)(v0 + 1336);
  v2[2] = v4;
  long long v5 = *(_OWORD *)(v0 + 1384);
  v2[3] = *(_OWORD *)(v0 + 1368);
  void v2[4] = v5;
  swift_asyncLet_begin();
  sub_19F12BE4C(v1, v0 + 1448);
  id v6 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 1576) = v6;
  long long v7 = *(_OWORD *)(v0 + 1528);
  v6[5] = *(_OWORD *)(v0 + 1512);
  v6[6] = v7;
  *(_OWORD *)((char *)v6 + 105) = *(_OWORD *)(v0 + 1537);
  long long v8 = *(_OWORD *)(v0 + 1464);
  v6[1] = *(_OWORD *)(v0 + 1448);
  long long v6[2] = v8;
  long long v9 = *(_OWORD *)(v0 + 1496);
  void v6[3] = *(_OWORD *)(v0 + 1480);
  v6[4] = v9;
  swift_asyncLet_begin();
  return MEMORY[0x1F41881E0](v0 + 16, v10, sub_19F12B34C, v0 + 1296);
}

uint64_t sub_19F12B34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3 + 656;
  uint64_t v5 = v3 + 1296;
  *(void *)(v3 + 1584) = v2;
  if (v2) {
    return MEMORY[0x1F41881D0](v4, a2, sub_19F12B480, v5);
  }
  else {
    return MEMORY[0x1F41881E0](v4, a2, sub_19F12B384, v5);
  }
}

uint64_t sub_19F12B384(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 1592) = v2;
  if (v2) {
    uint64_t v4 = sub_19F12B544;
  }
  else {
    uint64_t v4 = sub_19F12B3BC;
  }
  return MEMORY[0x1F41881D0](v3 + 656, a2, v4, v3 + 1296);
}

uint64_t sub_19F12B3BC()
{
  return MEMORY[0x1F4188298](sub_19F12B3D8, 0, 0);
}

uint64_t sub_19F12B3D8(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41881D0](v2 + 16, a2, sub_19F12B3F4, v2 + 656);
}

uint64_t sub_19F12B3F4()
{
  return MEMORY[0x1F4188298](sub_19F12B410, 0, 0);
}

uint64_t sub_19F12B410()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F12B480()
{
  return MEMORY[0x1F4188298](sub_19F12B49C, 0, 0);
}

uint64_t sub_19F12B49C(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41881D0](v2 + 16, a2, sub_19F12B4B8, v2 + 656);
}

uint64_t sub_19F12B4B8()
{
  return MEMORY[0x1F4188298](sub_19F12B4D4, 0, 0);
}

uint64_t sub_19F12B4D4()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F12B544()
{
  return MEMORY[0x1F4188298](sub_19F12B560, 0, 0);
}

uint64_t sub_19F12B560(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41881D0](v2 + 16, a2, sub_19F12B57C, v2 + 656);
}

uint64_t sub_19F12B57C()
{
  return MEMORY[0x1F4188298](sub_19F12B598, 0, 0);
}

uint64_t sub_19F12B598()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F12B608(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 160) = a2;
  return MEMORY[0x1F4188298](sub_19F12B628, 0, 0);
}

uint64_t sub_19F12B628()
{
  uint64_t v1 = *(void *)(v0[20] + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FC80);
  uint64_t v2 = swift_allocObject();
  v0[21] = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = v4;
  *(unsigned char *)(v2 + 32) = 0;
  uint64_t v5 = *(void **)(v1 + 16);
  v0[14] = sub_19EF7270C;
  v0[15] = v2;
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 1107296256;
  v0[12] = sub_19F128138;
  v0[13] = &block_descriptor_35;
  id v6 = _Block_copy(v0 + 10);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performMaintenanceWithCompletion_, v6);
  _Block_release(v6);
  return MEMORY[0x1F4188298](sub_19F12B77C, 0, 0);
}

uint64_t sub_19F12B77C()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[3] = sub_19F12B838;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EE7EC80(v2);
  sub_19EEBD664(v2, &qword_1E946FBE0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F12B838()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1)
  {
    swift_willThrow();
    uint64_t v2 = sub_19F12B9B8;
  }
  else
  {
    uint64_t v2 = sub_19F12B954;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F12B954()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F12B9B8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F12BA1C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return MEMORY[0x1F4188298](sub_19F12BA3C, 0, 0);
}

uint64_t sub_19F12BA3C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v2);
  id v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 48) + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19F12BB40;
  return v6(v2, v3);
}

uint64_t sub_19F12BB40()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F12BC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_19EE19904;
  v8[5] = a3;
  v8[6] = v3;
  _OWORD v8[3] = a1;
  void v8[4] = a2;
  return MEMORY[0x1F4188298](sub_19F12A278, 0, 0);
}

uint64_t sub_19F12BCF4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE17780;
  v4[196] = v1;
  v4[195] = a1;
  return MEMORY[0x1F4188298](sub_19F12A860, 0, 0);
}

uint64_t sub_19F12BDA4()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_19EEB8A6C;
  v2[195] = v0;
  return MEMORY[0x1F4188298](sub_19F12B1E0, 0, 0);
}

uint64_t sub_19F12BE4C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19F12BE88()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_19EE17780;
  v2[20] = v0 + 16;
  return MEMORY[0x1F4188298](sub_19F12B628, 0, 0);
}

uint64_t sub_19F12BF38()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_19EEB8A6C;
  v2[2] = v0 + 16;
  return MEMORY[0x1F4188298](sub_19F12BA3C, 0, 0);
}

uint64_t sub_19F12BFE4()
{
  uint64_t v2 = v0 + 16;
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_19EE17780;
  v4[20] = v2;
  v4[21] = v3;
  return MEMORY[0x1F4188298](sub_19F12ACE8, 0, 0);
}

uint64_t objectdestroy_23Tm()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 136, 7);
}

uint64_t sub_19F12C0F8()
{
  uint64_t v2 = v0 + 16;
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[2] = v2;
  void v4[3] = v3;
  v4[1] = sub_19EE17780;
  return MEMORY[0x1F4188298](sub_19F12B0B4, 0, 0);
}

void sub_19F12C1A8(uint64_t *a1, void (*a2)(uint64_t *))
{
  uint64_t v2 = *a1;
  a2(&v2);
  sub_19EE7EE30();
}

uint64_t sub_19F12C234(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = &type metadata for SyncTaskScheduler;
  uint64_t v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FC80);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = 0;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  _OWORD v7[3] = a2;
  void v7[4] = v4;
  v9[0] = sub_19F12C3BC;
  v9[1] = v7;
  long long v9[2] = sub_19F12C3C8;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF53344((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1EB3909E8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19F12C37C()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_19F12C3BC(uint64_t *a1)
{
  sub_19F12C1A8(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_19F12C3CC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t BaseObjectGraph._injectIfAvailable<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  void v4[3] = a2;
  return MEMORY[0x1F4188298](sub_19EE40730, 0, 0);
}

uint64_t sub_19F12C434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[83] = a4;
  v4[82] = a3;
  v4[81] = a2;
  v4[80] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CFF8);
  v4[84] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for _ResolvedDependency();
  v4[85] = v5;
  v4[86] = *(void *)(v5 - 8);
  v4[87] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D060);
  v4[88] = v6;
  v4[89] = *(void *)(v6 - 8);
  v4[90] = swift_task_alloc();
  v4[91] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D068);
  v4[92] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D4D8);
  v4[93] = v7;
  v4[94] = *(void *)(v7 - 8);
  v4[95] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  v4[96] = swift_task_alloc();
  v4[97] = swift_task_alloc();
  v4[98] = swift_task_alloc();
  v4[99] = swift_task_alloc();
  v4[100] = swift_task_alloc();
  v4[101] = swift_task_alloc();
  uint64_t v8 = sub_19F1DB85C();
  v4[102] = v8;
  v4[103] = *(void *)(v8 - 8);
  v4[104] = swift_task_alloc();
  v4[105] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F12C70C, 0, 0);
}

uint64_t sub_19F12C70C()
{
  uint64_t v92 = v0;
  if (qword_1E946E608 == -1) {
    goto LABEL_2;
  }
  while (1)
  {
    swift_once();
LABEL_2:
    uint64_t v81 = (long long *)(v0 + 96);
    uint64_t v84 = (long long *)(v0 + 136);
    uint64_t v87 = v0 + 216;
    uint64_t v1 = (_OWORD *)(v0 + 336);
    uint64_t v2 = v0 + 496;
    uint64_t v83 = v0 + 296;
    uint64_t v3 = sub_19F1DB89C();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    sub_19F1DB82C();
    uint64_t v4 = sub_19F1DB87C();
    os_signpost_type_t v5 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v6 = *(void *)(v0 + 832);
      uint64_t v7 = *(void *)(v0 + 824);
      uint64_t v8 = *(void *)(v0 + 816);
      long long v9 = *(void (**)(uint64_t, void, uint64_t))(v7 + 16);
      v9(v6, *(void *)(v0 + 840), v8);
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      os_signpost_id_t v11 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v4, v5, v11, "ResolveDependencies", "", v10, 2u);
      uint64_t v12 = v10;
      uint64_t v2 = v0 + 496;
      MEMORY[0x19F3C9470](v12, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    }
    else
    {
      uint64_t v13 = *(void *)(v0 + 824);

      long long v9 = *(void (**)(uint64_t, void, uint64_t))(v13 + 16);
    }
    char v14 = (uint64_t *)(v0 + 16);
    uint64_t v15 = v0 + 56;
    uint64_t v16 = *(void *)(v0 + 664);
    uint64_t v89 = *(void *)(v0 + 656);
    v9(*(void *)(v0 + 832), *(void *)(v0 + 840), *(void *)(v0 + 816));
    sub_19F1DB8EC();
    swift_allocObject();
    *(void *)(v0 + 848) = sub_19F1DB8DC();
    uint64_t v85 = v16 + 64;
    uint64_t v17 = -1;
    uint64_t v18 = -1 << *(unsigned char *)(v16 + 32);
    if (-v18 < 64) {
      uint64_t v17 = ~(-1 << -(char)v18);
    }
    unint64_t v19 = v17 & *(void *)(v16 + 64);
    unint64_t v20 = (unint64_t)(63 - v18) >> 6;
    unint64_t v78 = v20 - 1;
    swift_bridgeObjectRetain();
    uint64_t v80 = v16 + 112;
    int64_t v88 = v20;
    unint64_t v21 = v20 - 6;
    unint64_t v22 = 0;
    unint64_t v79 = v21;
    unint64_t v23 = (long long *)(v0 + 256);
    uint64_t v86 = v16;
    if (v19) {
      break;
    }
LABEL_12:
    int64_t v26 = v22 + 1;
    if (!__OFADD__(v22, 1))
    {
      if (v26 >= v88)
      {
        unint64_t v28 = v22;
      }
      else
      {
        unint64_t v27 = *(void *)(v85 + 8 * v26);
        if (v27)
        {
LABEL_15:
          unint64_t v19 = (v27 - 1) & v27;
          unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
          unint64_t v22 = v26;
          goto LABEL_11;
        }
        int64_t v54 = v22 + 2;
        unint64_t v28 = v22 + 1;
        if ((uint64_t)(v22 + 2) < v88)
        {
          unint64_t v27 = *(void *)(v85 + 8 * v54);
          if (v27)
          {
LABEL_35:
            int64_t v26 = v54;
            goto LABEL_15;
          }
          unint64_t v28 = v22 + 2;
          if ((uint64_t)(v22 + 3) < v88)
          {
            unint64_t v27 = *(void *)(v85 + 8 * (v22 + 3));
            if (v27)
            {
              int64_t v26 = v22 + 3;
              goto LABEL_15;
            }
            int64_t v54 = v22 + 4;
            unint64_t v28 = v22 + 3;
            if ((uint64_t)(v22 + 4) < v88)
            {
              unint64_t v27 = *(void *)(v85 + 8 * v54);
              if (v27) {
                goto LABEL_35;
              }
              int64_t v26 = v22 + 5;
              unint64_t v28 = v22 + 4;
              if ((uint64_t)(v22 + 5) < v88)
              {
                unint64_t v27 = *(void *)(v85 + 8 * v26);
                if (v27) {
                  goto LABEL_15;
                }
                while (v79 != v22)
                {
                  unint64_t v27 = *(void *)(v80 + 8 * v22++);
                  if (v27)
                  {
                    int64_t v26 = v22 + 5;
                    goto LABEL_15;
                  }
                }
                unint64_t v28 = v78;
              }
            }
          }
        }
      }
      unint64_t v19 = 0;
      *(void *)(v15 + 32) = 0;
      unint64_t v22 = v28;
      *(_OWORD *)uint64_t v15 = 0u;
      *(_OWORD *)(v15 + 16) = 0u;
      goto LABEL_18;
    }
    __break(1u);
  }
  while (1)
  {
    unint64_t v24 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    unint64_t v25 = v24 | (v22 << 6);
LABEL_11:
    *(void *)uint64_t v15 = *(void *)(*(void *)(v16 + 48) + 8 * v25);
    sub_19EEBDBA4(*(void *)(v16 + 56) + 32 * v25, v0 + 64);
LABEL_18:
    sub_19EEBDC4C(v15, (uint64_t)v14, &qword_1EB390808);
    uint64_t v29 = *v14;
    if (!*v14) {
      break;
    }
    sub_19EEBDC00((_OWORD *)(v0 + 24), v1);
    if (*(void *)(v89 + 16) && (unint64_t v90 = v22, sub_19EEAB4C0(v29), (v30 & 1) != 0))
    {
      sub_19EEBDBA4((uint64_t)v1, v2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D050);
      if (swift_dynamicCast())
      {
        uint64_t v31 = *(void *)(v0 + 808);
        uint64_t v32 = *(void *)(v0 + 800);
        sub_19EEBB420(v23, v87);
        uint64_t v33 = sub_19F1DC37C();
        uint64_t v34 = *(void *)(v33 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v31, 1, 1, v33);
        sub_19EEC4154(v87, (uint64_t)v84);
        uint64_t v35 = (void *)swift_allocObject();
        _OWORD v35[2] = 0;
        void v35[3] = 0;
        v35[4] = v29;
        sub_19EEBB420(v84, (uint64_t)(v35 + 5));
        sub_19EEC3ED8(v31, v32, (uint64_t *)&unk_1EB392830);
        int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33);
        uint64_t v37 = *(void *)(v0 + 800);
        if (v36 == 1)
        {
          sub_19EEBD664(*(void *)(v0 + 800), (uint64_t *)&unk_1EB392830);
        }
        else
        {
          sub_19F1DC36C();
          (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v33);
        }
        uint64_t v16 = v86;
        if (v35[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v45 = sub_19F1DC2FC();
          uint64_t v47 = v46;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v45 = 0;
          uint64_t v47 = 0;
        }
        unint64_t v23 = (long long *)(v0 + 256);
        uint64_t v1 = (_OWORD *)(v0 + 336);
        uint64_t v2 = v0 + 496;
        uint64_t v55 = **(void **)(v0 + 648);
        uint64_t v56 = v47 | v45;
        if (v47 | v45)
        {
          uint64_t v56 = v0 + 464;
          *(void *)(v0 + 464) = 0;
          *(void *)(v0 + 472) = 0;
          *(void *)(v0 + 480) = v45;
          *(void *)(v0 + 488) = v47;
        }
        uint64_t v57 = *(void *)(v0 + 808);
        *(void *)(v0 + 552) = 1;
        *(void *)(v0 + 560) = v56;
        *(void *)(v0 + 568) = v55;
        swift_task_create();
        swift_release();
        sub_19EEBD664(v57, (uint64_t *)&unk_1EB392830);
        __swift_destroy_boxed_opaque_existential_1Tm(v87);
        goto LABEL_55;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D4F8);
      if (swift_dynamicCast())
      {
        uint64_t v38 = *(void *)(v0 + 792);
        uint64_t v39 = *(void *)(v0 + 784);
        sub_19EEBB420((long long *)(v0 + 176), v83);
        uint64_t v40 = sub_19F1DC37C();
        uint64_t v41 = *(void *)(v40 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v38, 1, 1, v40);
        sub_19EEC4154(v83, (uint64_t)v81);
        long long v42 = (void *)swift_allocObject();
        _OWORD v42[2] = 0;
        void v42[3] = 0;
        v42[4] = v29;
        sub_19EEBB420(v81, (uint64_t)(v42 + 5));
        sub_19EEC3ED8(v38, v39, (uint64_t *)&unk_1EB392830);
        int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40);
        uint64_t v44 = *(void *)(v0 + 784);
        if (v43 == 1)
        {
          sub_19EEBD664(*(void *)(v0 + 784), (uint64_t *)&unk_1EB392830);
        }
        else
        {
          sub_19F1DC36C();
          (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v40);
        }
        uint64_t v16 = v86;
        if (v42[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v58 = sub_19F1DC2FC();
          uint64_t v60 = v59;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v58 = 0;
          uint64_t v60 = 0;
        }
        uint64_t v1 = (_OWORD *)(v0 + 336);
        char v14 = (uint64_t *)(v0 + 16);
        uint64_t v2 = v0 + 496;
        uint64_t v61 = **(void **)(v0 + 648);
        uint64_t v62 = v60 | v58;
        if (v60 | v58)
        {
          uint64_t v62 = v0 + 400;
          *(void *)(v0 + 400) = 0;
          *(void *)(v0 + 408) = 0;
          *(void *)(v0 + 416) = v58;
          *(void *)(v0 + 424) = v60;
        }
        uint64_t v63 = *(void *)(v0 + 792);
        *(void *)(v0 + 576) = 1;
        *(void *)(v0 + 584) = v62;
        *(void *)(v0 + 592) = v61;
        swift_task_create();
        swift_release();
        sub_19EEBD664(v63, (uint64_t *)&unk_1EB392830);
        __swift_destroy_boxed_opaque_existential_1Tm(v83);
        __swift_destroy_boxed_opaque_existential_1Tm(v0 + 336);
        unint64_t v23 = (long long *)(v0 + 256);
        goto LABEL_56;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D058);
      if (swift_dynamicCast())
      {
        uint64_t v48 = *(void *)(v0 + 776);
        uint64_t v49 = *(void *)(v0 + 768);
        uint64_t v50 = sub_19F1DC37C();
        uint64_t v51 = *(void *)(v50 - 8);
        long long v82 = *(_OWORD *)(v0 + 600);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v48, 1, 1, v50);
        uint64_t v52 = swift_allocObject();
        *(void *)(v52 + 16) = 0;
        *(void *)(v52 + 24) = 0;
        *(void *)(v52 + 32) = v29;
        *(_OWORD *)(v52 + 40) = v82;
        sub_19EEC3ED8(v48, v49, (uint64_t *)&unk_1EB392830);
        LODWORD(v49) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50);
        swift_unknownObjectRetain();
        uint64_t v53 = *(void *)(v0 + 768);
        if (v49 == 1)
        {
          sub_19EEBD664(*(void *)(v0 + 768), (uint64_t *)&unk_1EB392830);
        }
        else
        {
          sub_19F1DC36C();
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v53, v50);
        }
        uint64_t v16 = v86;
        unint64_t v23 = (long long *)(v0 + 256);
        if (*(void *)(v52 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v64 = sub_19F1DC2FC();
          uint64_t v66 = v65;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v64 = 0;
          uint64_t v66 = 0;
        }
        uint64_t v2 = v0 + 496;
        uint64_t v67 = **(void **)(v0 + 648);
        uint64_t v68 = v66 | v64;
        if (v66 | v64)
        {
          uint64_t v68 = v0 + 432;
          *(void *)(v0 + 432) = 0;
          *(void *)(v0 + 440) = 0;
          *(void *)(v0 + 448) = v64;
          *(void *)(v0 + 456) = v66;
        }
        uint64_t v69 = *(void *)(v0 + 776);
        *(void *)(v0 + 528) = 1;
        *(void *)(v0 + 536) = v68;
        *(void *)(v0 + 544) = v67;
        swift_task_create();
        swift_unknownObjectRelease();
        swift_release();
        sub_19EEBD664(v69, (uint64_t *)&unk_1EB392830);
        uint64_t v1 = (_OWORD *)(v0 + 336);
LABEL_55:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
        char v14 = (uint64_t *)(v0 + 16);
LABEL_56:
        uint64_t v15 = v0 + 56;
        goto LABEL_57;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
      uint64_t v16 = v86;
LABEL_57:
      __swift_destroy_boxed_opaque_existential_1Tm(v2);
      unint64_t v22 = v90;
      if (!v19) {
        goto LABEL_12;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
      if (!v19) {
        goto LABEL_12;
      }
    }
  }
  uint64_t v70 = *(void *)(v0 + 664);
  swift_release();
  *(void *)(v0 + 632) = v70;
  uint64_t v71 = swift_bridgeObjectRetain();
  sub_19EE6997C(v71, &v91);
  uint64_t v72 = MEMORY[0x1E4FBC860];
  if (v91) {
    uint64_t v73 = v91;
  }
  else {
    uint64_t v73 = (void (*)(uint64_t))MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  sub_19F1DC48C();
  *(void *)(v0 + 872) = v73;
  *(void *)(v0 + 856) = v72;
  uint64_t v74 = (void *)swift_task_alloc();
  *(void *)(v0 + 864) = v74;
  *uint64_t v74 = v0;
  v74[1] = sub_19F12D378;
  uint64_t v75 = *(void *)(v0 + 744);
  uint64_t v76 = *(void *)(v0 + 736);
  return MEMORY[0x1F4187E48](v76, 0, 0, v75, v0 + 624);
}

uint64_t sub_19F12D378()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_19F12DAD4;
  }
  else
  {
    uint64_t v1 = sub_19F12D49C;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_19F12D49C()
{
  uint64_t v59 = v0;
  uint64_t v2 = *(void *)(v0 + 736);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 712) + 48))(v2, 1, *(void *)(v0 + 704)) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 872);
    uint64_t v4 = *(void *)(v0 + 856);
    uint64_t v5 = *(void *)(v0 + 848);
    uint64_t v6 = *(void *)(v0 + 840);
    uint64_t v7 = *(void *)(v0 + 824);
    uint64_t v57 = *(void *)(v0 + 816);
    uint64_t v8 = *(void *)(v0 + 656);
    uint64_t v9 = *(void *)(v0 + 640);
    (*(void (**)(void))(*(void *)(v0 + 752) + 8))();
    v58[3] = &type metadata for AsyncObjectGraphMetrics;
    v58[0] = v3;
    sub_19EEA98CC((uint64_t)v58, (uint64_t)&type metadata for AsyncObjectGraphMetrics);
    sub_19F08C20C(v4, (void *)(v0 + 632), v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19F12F398(v5, v8);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v57);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  uint64_t v12 = *(void *)(v0 + 728);
  uint64_t v13 = *(void *)(v0 + 720);
  sub_19EEBDC4C(v2, v12, &qword_1E946D060);
  sub_19EEC3ED8(v12, v13, &qword_1E946D060);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v14 = **(void ***)(v0 + 720);
    id v15 = v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *(void **)(v0 + 856);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v17 = sub_19F09E398(0, v17[2] + 1, 1, *(void **)(v0 + 856));
    }
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      uint64_t v17 = sub_19F09E398((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    long long v17[2] = v19 + 1;
    v17[v19 + 4] = v14;

    uint64_t v20 = 1;
  }
  else
  {
    sub_19EEA80F4(*(void *)(v0 + 720), *(void *)(v0 + 672));
    uint64_t v20 = 0;
    uint64_t v17 = *(void **)(v0 + 856);
  }
  uint64_t v21 = *(void *)(v0 + 688);
  uint64_t v22 = *(void *)(v0 + 680);
  uint64_t v23 = *(void *)(v0 + 672);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v23, v20, 1, v22);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v22) == 1)
  {
    uint64_t v24 = *(void *)(v0 + 672);
    sub_19EEBD664(*(void *)(v0 + 728), &qword_1E946D060);
    sub_19EEBD664(v24, &qword_1E946CFF8);
LABEL_31:
    *(void *)(v0 + 856) = v17;
    uint64_t v56 = (void *)swift_task_alloc();
    *(void *)(v0 + 864) = v56;
    *uint64_t v56 = v0;
    v56[1] = sub_19F12D378;
    uint64_t v43 = *(void *)(v0 + 744);
    uint64_t v40 = *(_OWORD **)(v0 + 736);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v44 = v0 + 624;
    return MEMORY[0x1F4187E48](v40, v41, v42, v43, v44);
  }
  uint64_t v25 = v0 + 368;
  int64_t v26 = *(uint64_t **)(v0 + 696);
  sub_19EEA80F4(*(void *)(v0 + 672), (uint64_t)v26);
  uint64_t v27 = *v26;
  sub_19EEBDBA4((uint64_t)(v26 + 1), v0 + 368);
  unint64_t v28 = *(void **)(v0 + 632);
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 616) = v28;
  unint64_t v31 = sub_19EEAB4C0(v27);
  uint64_t v32 = v28[2];
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
LABEL_35:
    unint64_t v28 = sub_19EEA81CC(0, v28[2] + 1, 1, v28);
LABEL_28:
    unint64_t v52 = v28[2];
    unint64_t v51 = v28[3];
    if (v52 >= v51 >> 1) {
      unint64_t v28 = sub_19EEA81CC((void *)(v51 > 1), v52 + 1, 1, v28);
    }
    uint64_t v53 = *(void *)(v0 + 728);
    uint64_t v54 = *(void *)(v0 + 696);
    v28[2] = v52 + 1;
    uint64_t v55 = &v28[3 * v52];
    v55[4] = v25;
    v55[5] = v27;
    v55[6] = v1;
    sub_19EEA8098(v54);
    sub_19EEBD664(v53, &qword_1E946D060);
    *(void *)(v0 + 872) = v28;
    goto LABEL_31;
  }
  char v35 = v30;
  if (v28[3] >= v34)
  {
    if ((v29 & 1) == 0) {
      sub_19EEAA4B8();
    }
LABEL_23:
    uint64_t v38 = *(void **)(v0 + 616);
    if (v35)
    {
      uint64_t v39 = (_OWORD *)(v38[7] + 32 * v31);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
      sub_19EEBDC00((_OWORD *)(v0 + 368), v39);
    }
    else
    {
      v38[(v31 >> 6) + 8] |= 1 << v31;
      *(void *)(v38[6] + 8 * v31) = v27;
      uint64_t v40 = sub_19EEBDC00((_OWORD *)(v0 + 368), (_OWORD *)(v38[7] + 32 * v31));
      uint64_t v45 = v38[2];
      BOOL v46 = __OFADD__(v45, 1);
      uint64_t v47 = v45 + 1;
      if (v46)
      {
        __break(1u);
        return MEMORY[0x1F4187E48](v40, v41, v42, v43, v44);
      }
      v38[2] = v47;
    }
    *(void *)(v0 + 632) = v38;
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_19F1DD98C();
    uint64_t v27 = v48;
    sub_19F1DAE6C();
    uint64_t v1 = v49;
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = *(void **)(v0 + 872);
    if (v50) {
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  sub_19EEAB99C(v34, v29);
  unint64_t v36 = sub_19EEAB4C0(v27);
  if ((v35 & 1) == (v37 & 1))
  {
    unint64_t v31 = v36;
    goto LABEL_23;
  }
  return sub_19F1DD65C();
}

uint64_t sub_19F12DAD4()
{
  uint64_t v1 = v0[106];
  uint64_t v2 = v0[105];
  uint64_t v3 = v0[103];
  uint64_t v4 = v0[102];
  uint64_t v5 = v0[82];
  (*(void (**)(void, void))(v0[94] + 8))(v0[95], v0[93]);
  swift_bridgeObjectRelease();
  sub_19F12F398(v1, v5);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_19F12DC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[83] = a4;
  v4[82] = a3;
  v4[81] = a2;
  v4[80] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CFF8);
  v4[84] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for _ResolvedDependency();
  v4[85] = v5;
  v4[86] = *(void *)(v5 - 8);
  v4[87] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D060);
  v4[88] = v6;
  v4[89] = *(void *)(v6 - 8);
  v4[90] = swift_task_alloc();
  v4[91] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D068);
  v4[92] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D4D8);
  v4[93] = v7;
  v4[94] = *(void *)(v7 - 8);
  v4[95] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  v4[96] = swift_task_alloc();
  v4[97] = swift_task_alloc();
  v4[98] = swift_task_alloc();
  v4[99] = swift_task_alloc();
  v4[100] = swift_task_alloc();
  v4[101] = swift_task_alloc();
  uint64_t v8 = sub_19F1DB85C();
  v4[102] = v8;
  v4[103] = *(void *)(v8 - 8);
  v4[104] = swift_task_alloc();
  v4[105] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F12DF4C, 0, 0);
}

uint64_t sub_19F12DF4C()
{
  uint64_t v100 = v0;
  if (qword_1E946E608 != -1) {
LABEL_80:
  }
    swift_once();
  unint64_t v90 = (long long *)(v0 + 136);
  uint64_t v93 = v0 + 216;
  uint64_t v1 = (_OWORD *)(v0 + 336);
  uint64_t v2 = v0 + 496;
  uint64_t v89 = v0 + 296;
  uint64_t v86 = (long long *)(v0 + 96);
  uint64_t v3 = sub_19F1DB89C();
  __swift_project_value_buffer(v3, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  sub_19F1DB82C();
  uint64_t v4 = sub_19F1DB87C();
  os_signpost_type_t v5 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v6 = *(void *)(v0 + 832);
    uint64_t v7 = *(void *)(v0 + 824);
    uint64_t v8 = *(void *)(v0 + 816);
    uint64_t v9 = *(void (**)(uint64_t, void, uint64_t))(v7 + 16);
    v9(v6, *(void *)(v0 + 840), v8);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    os_signpost_id_t v11 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v4, v5, v11, "ResolveDependencies", "", v10, 2u);
    uint64_t v12 = v10;
    uint64_t v2 = v0 + 496;
    MEMORY[0x19F3C9470](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v13 = v9;
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 824);

    uint64_t v13 = *(void (**)(void, void, void))(v14 + 16);
  }
  id v15 = (uint64_t *)(v0 + 16);
  uint64_t v16 = v0 + 56;
  uint64_t v17 = *(void *)(v0 + 664);
  uint64_t v18 = *(void *)(v0 + 656);
  v13(*(void *)(v0 + 832), *(void *)(v0 + 840), *(void *)(v0 + 816));
  sub_19F1DB8EC();
  swift_allocObject();
  uint64_t v19 = v18;
  *(void *)(v0 + 848) = sub_19F1DB8DC();
  uint64_t v94 = v17 + 64;
  uint64_t v20 = -1 << *(unsigned char *)(v17 + 32);
  if (-v20 < 64) {
    uint64_t v21 = ~(-1 << -(char)v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & *(void *)(v17 + 64);
  unint64_t v23 = (unint64_t)(63 - v20) >> 6;
  uint64_t v97 = v19 + 56;
  unint64_t v83 = v23 - 1;
  swift_bridgeObjectRetain();
  unint64_t v24 = 0;
  int64_t v95 = v23;
  unint64_t v84 = v23 - 6;
  uint64_t v85 = v17 + 112;
  uint64_t v92 = v0 + 336;
  uint64_t v91 = v17;
  uint64_t v96 = v19;
  while (1)
  {
    if (v22)
    {
      unint64_t v26 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v98 = v24;
      unint64_t v27 = v26 | (v24 << 6);
LABEL_13:
      *(void *)uint64_t v16 = *(void *)(*(void *)(v17 + 48) + 8 * v27);
      sub_19EEBDBA4(*(void *)(v17 + 56) + 32 * v27, v0 + 64);
      goto LABEL_20;
    }
    int64_t v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_80;
    }
    if (v28 >= v95)
    {
      unint64_t v30 = v24;
    }
    else
    {
      unint64_t v29 = *(void *)(v94 + 8 * v28);
      if (v29) {
        goto LABEL_17;
      }
      int64_t v50 = v24 + 2;
      unint64_t v30 = v24 + 1;
      if ((uint64_t)(v24 + 2) < v95)
      {
        unint64_t v29 = *(void *)(v94 + 8 * v50);
        if (v29) {
          goto LABEL_35;
        }
        unint64_t v30 = v24 + 2;
        if ((uint64_t)(v24 + 3) < v95)
        {
          unint64_t v29 = *(void *)(v94 + 8 * (v24 + 3));
          if (v29)
          {
            int64_t v28 = v24 + 3;
            goto LABEL_17;
          }
          int64_t v50 = v24 + 4;
          unint64_t v30 = v24 + 3;
          if ((uint64_t)(v24 + 4) < v95)
          {
            unint64_t v29 = *(void *)(v94 + 8 * v50);
            if (v29)
            {
LABEL_35:
              int64_t v28 = v50;
LABEL_17:
              unint64_t v22 = (v29 - 1) & v29;
              unint64_t v27 = __clz(__rbit64(v29)) + (v28 << 6);
              unint64_t v98 = v28;
              goto LABEL_13;
            }
            int64_t v28 = v24 + 5;
            unint64_t v30 = v24 + 4;
            if ((uint64_t)(v24 + 5) < v95)
            {
              unint64_t v29 = *(void *)(v94 + 8 * v28);
              if (v29) {
                goto LABEL_17;
              }
              while (v84 != v24)
              {
                unint64_t v29 = *(void *)(v85 + 8 * v24++);
                if (v29)
                {
                  int64_t v28 = v24 + 5;
                  goto LABEL_17;
                }
              }
              unint64_t v30 = v83;
            }
          }
        }
      }
    }
    unint64_t v22 = 0;
    *(void *)(v16 + 32) = 0;
    unint64_t v98 = v30;
    *(_OWORD *)uint64_t v16 = 0u;
    *(_OWORD *)(v16 + 16) = 0u;
LABEL_20:
    sub_19EEBDC4C(v16, (uint64_t)v15, &qword_1EB390808);
    uint64_t v31 = *v15;
    if (!*v15) {
      break;
    }
    sub_19EEBDC00((_OWORD *)(v0 + 24), v1);
    if (!*(void *)(v19 + 16)) {
      goto LABEL_9;
    }
    sub_19F1DD72C();
    sub_19F1DD73C();
    uint64_t v32 = sub_19F1DD78C();
    uint64_t v19 = v96;
    uint64_t v33 = -1 << *(unsigned char *)(v96 + 32);
    unint64_t v34 = v32 & ~v33;
    if (((*(void *)(v97 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
      goto LABEL_9;
    }
    uint64_t v35 = *(void *)(v96 + 48);
    if (*(void *)(v35 + 8 * v34) != v31)
    {
      uint64_t v36 = ~v33;
      while (1)
      {
        unint64_t v34 = (v34 + 1) & v36;
        if (((*(void *)(v97 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
          break;
        }
        if (*(void *)(v35 + 8 * v34) == v31) {
          goto LABEL_27;
        }
      }
LABEL_9:
      uint64_t v25 = (uint64_t)v1;
      goto LABEL_10;
    }
LABEL_27:
    sub_19EEBDBA4((uint64_t)v1, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D050);
    if (swift_dynamicCast())
    {
      uint64_t v37 = *(void *)(v0 + 808);
      uint64_t v38 = *(void *)(v0 + 800);
      sub_19EEBB420((long long *)(v0 + 256), v93);
      uint64_t v39 = sub_19F1DC37C();
      uint64_t v40 = *(void *)(v39 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v37, 1, 1, v39);
      sub_19EEC4154(v93, (uint64_t)v90);
      uint64_t v41 = (void *)swift_allocObject();
      v41[2] = 0;
      v41[3] = 0;
      v41[4] = v31;
      sub_19EEBB420(v90, (uint64_t)(v41 + 5));
      sub_19EEC3ED8(v37, v38, (uint64_t *)&unk_1EB392830);
      int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39);
      uint64_t v43 = *(void *)(v0 + 800);
      if (v42 == 1)
      {
        sub_19EEBD664(*(void *)(v0 + 800), (uint64_t *)&unk_1EB392830);
      }
      else
      {
        sub_19F1DC36C();
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v43, v39);
      }
      uint64_t v17 = v91;
      if (v41[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v51 = sub_19F1DC2FC();
        uint64_t v53 = v52;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v51 = 0;
        uint64_t v53 = 0;
      }
      uint64_t v1 = (_OWORD *)(v0 + 336);
      uint64_t v2 = v0 + 496;
      uint64_t v60 = **(void **)(v0 + 648);
      uint64_t v61 = v53 | v51;
      if (v53 | v51)
      {
        uint64_t v61 = v0 + 464;
        *(void *)(v0 + 464) = 0;
        *(void *)(v0 + 472) = 0;
        *(void *)(v0 + 480) = v51;
        *(void *)(v0 + 488) = v53;
      }
      uint64_t v16 = v0 + 56;
      uint64_t v62 = *(void *)(v0 + 808);
      *(void *)(v0 + 552) = 1;
      *(void *)(v0 + 560) = v61;
      *(void *)(v0 + 568) = v60;
      swift_task_create();
      swift_release();
      sub_19EEBD664(v62, (uint64_t *)&unk_1EB392830);
      __swift_destroy_boxed_opaque_existential_1Tm(v93);
      __swift_destroy_boxed_opaque_existential_1Tm(v92);
      id v15 = (uint64_t *)(v0 + 16);
      uint64_t v19 = v96;
      uint64_t v25 = v0 + 496;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D4F8);
      if (swift_dynamicCast())
      {
        uint64_t v44 = *(void *)(v0 + 792);
        uint64_t v87 = *(void *)(v0 + 784);
        sub_19EEBB420((long long *)(v0 + 176), v89);
        uint64_t v45 = sub_19F1DC37C();
        uint64_t v46 = *(void *)(v45 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v44, 1, 1, v45);
        sub_19EEC4154(v89, (uint64_t)v86);
        uint64_t v47 = (void *)swift_allocObject();
        long long v47[2] = 0;
        v47[3] = 0;
        v47[4] = v31;
        sub_19EEBB420(v86, (uint64_t)(v47 + 5));
        sub_19EEC3ED8(v44, v87, (uint64_t *)&unk_1EB392830);
        int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v87, 1, v45);
        uint64_t v49 = *(void *)(v0 + 784);
        if (v48 == 1)
        {
          sub_19EEBD664(*(void *)(v0 + 784), (uint64_t *)&unk_1EB392830);
        }
        else
        {
          sub_19F1DC36C();
          (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v49, v45);
        }
        if (v47[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v63 = sub_19F1DC2FC();
          uint64_t v65 = v64;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v63 = 0;
          uint64_t v65 = 0;
        }
        uint64_t v1 = (_OWORD *)(v0 + 336);
        uint64_t v66 = **(void **)(v0 + 648);
        uint64_t v67 = v65 | v63;
        if (v65 | v63)
        {
          uint64_t v67 = v0 + 400;
          *(void *)(v0 + 400) = 0;
          *(void *)(v0 + 408) = 0;
          *(void *)(v0 + 416) = v63;
          *(void *)(v0 + 424) = v65;
        }
        uint64_t v16 = v0 + 56;
        uint64_t v68 = *(void *)(v0 + 792);
        *(void *)(v0 + 576) = 1;
        *(void *)(v0 + 584) = v67;
        *(void *)(v0 + 592) = v66;
        swift_task_create();
        swift_release();
        sub_19EEBD664(v68, (uint64_t *)&unk_1EB392830);
        __swift_destroy_boxed_opaque_existential_1Tm(v89);
        __swift_destroy_boxed_opaque_existential_1Tm(v92);
        id v15 = (uint64_t *)(v0 + 16);
        uint64_t v2 = v0 + 496;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D058);
        if (swift_dynamicCast())
        {
          uint64_t v54 = *(void *)(v0 + 776);
          uint64_t v55 = *(void *)(v0 + 768);
          uint64_t v56 = sub_19F1DC37C();
          long long v88 = *(_OWORD *)(v0 + 600);
          uint64_t v57 = *(void *)(v56 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v54, 1, 1, v56);
          uint64_t v58 = swift_allocObject();
          *(void *)(v58 + 16) = 0;
          *(void *)(v58 + 24) = 0;
          *(void *)(v58 + 32) = v31;
          *(_OWORD *)(v58 + 40) = v88;
          sub_19EEC3ED8(v54, v55, (uint64_t *)&unk_1EB392830);
          LODWORD(v55) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56);
          swift_unknownObjectRetain();
          uint64_t v59 = *(void *)(v0 + 768);
          if (v55 == 1)
          {
            sub_19EEBD664(v59, (uint64_t *)&unk_1EB392830);
          }
          else
          {
            sub_19F1DC36C();
            (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v56);
          }
          uint64_t v17 = v91;
          if (*(void *)(v58 + 16))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            uint64_t v69 = sub_19F1DC2FC();
            uint64_t v71 = v70;
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v69 = 0;
            uint64_t v71 = 0;
          }
          uint64_t v1 = (_OWORD *)(v0 + 336);
          uint64_t v2 = v0 + 496;
          uint64_t v72 = **(void **)(v0 + 648);
          uint64_t v73 = v71 | v69;
          if (v71 | v69)
          {
            uint64_t v73 = v0 + 432;
            *(void *)(v0 + 432) = 0;
            *(void *)(v0 + 440) = 0;
            *(void *)(v0 + 448) = v69;
            *(void *)(v0 + 456) = v71;
          }
          uint64_t v74 = *(void *)(v0 + 776);
          *(void *)(v0 + 528) = 1;
          *(void *)(v0 + 536) = v73;
          *(void *)(v0 + 544) = v72;
          swift_task_create();
          swift_unknownObjectRelease();
          swift_release();
          sub_19EEBD664(v74, (uint64_t *)&unk_1EB392830);
          __swift_destroy_boxed_opaque_existential_1Tm(v92);
          id v15 = (uint64_t *)(v0 + 16);
          uint64_t v16 = v0 + 56;
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
          uint64_t v17 = v91;
        }
      }
      uint64_t v19 = v96;
      uint64_t v25 = v2;
    }
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm(v25);
    unint64_t v24 = v98;
  }
  uint64_t v75 = *(void *)(v0 + 664);
  swift_release();
  *(void *)(v0 + 632) = v75;
  uint64_t v76 = swift_bridgeObjectRetain();
  sub_19EE6997C(v76, &v99);
  uint64_t v77 = MEMORY[0x1E4FBC860];
  if (v99) {
    unint64_t v78 = v99;
  }
  else {
    unint64_t v78 = (void (*)(uint64_t))MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  sub_19F1DC48C();
  *(void *)(v0 + 872) = v78;
  *(void *)(v0 + 856) = v77;
  unint64_t v79 = (void *)swift_task_alloc();
  *(void *)(v0 + 864) = v79;
  void *v79 = v0;
  v79[1] = sub_19F12EC3C;
  uint64_t v80 = *(void *)(v0 + 744);
  uint64_t v81 = *(void *)(v0 + 736);
  return MEMORY[0x1F4187E48](v81, 0, 0, v80, v0 + 624);
}

uint64_t sub_19F12EC3C()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_19F12DAD4;
  }
  else
  {
    uint64_t v1 = sub_19F12ED60;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_19F12ED60()
{
  uint64_t v59 = v0;
  uint64_t v2 = *(void *)(v0 + 736);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 712) + 48))(v2, 1, *(void *)(v0 + 704)) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 872);
    uint64_t v4 = *(void *)(v0 + 856);
    uint64_t v5 = *(void *)(v0 + 848);
    uint64_t v6 = *(void *)(v0 + 840);
    uint64_t v7 = *(void *)(v0 + 824);
    uint64_t v57 = *(void *)(v0 + 816);
    uint64_t v8 = *(void *)(v0 + 656);
    uint64_t v9 = *(void *)(v0 + 640);
    (*(void (**)(void))(*(void *)(v0 + 752) + 8))();
    v58[3] = &type metadata for AsyncObjectGraphMetrics;
    v58[0] = v3;
    sub_19EEA98CC((uint64_t)v58, (uint64_t)&type metadata for AsyncObjectGraphMetrics);
    sub_19F08C20C(v4, (void *)(v0 + 632), v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19F12F398(v5, v8);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v57);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  uint64_t v12 = *(void *)(v0 + 728);
  uint64_t v13 = *(void *)(v0 + 720);
  sub_19EEBDC4C(v2, v12, &qword_1E946D060);
  sub_19EEC3ED8(v12, v13, &qword_1E946D060);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = **(void ***)(v0 + 720);
    id v15 = v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *(void **)(v0 + 856);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v17 = sub_19F09E398(0, v17[2] + 1, 1, *(void **)(v0 + 856));
    }
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      uint64_t v17 = sub_19F09E398((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    long long v17[2] = v19 + 1;
    v17[v19 + 4] = v14;

    uint64_t v20 = 1;
  }
  else
  {
    sub_19EEA80F4(*(void *)(v0 + 720), *(void *)(v0 + 672));
    uint64_t v20 = 0;
    uint64_t v17 = *(void **)(v0 + 856);
  }
  uint64_t v21 = *(void *)(v0 + 688);
  uint64_t v22 = *(void *)(v0 + 680);
  uint64_t v23 = *(void *)(v0 + 672);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v23, v20, 1, v22);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v22) == 1)
  {
    uint64_t v24 = *(void *)(v0 + 672);
    sub_19EEBD664(*(void *)(v0 + 728), &qword_1E946D060);
    sub_19EEBD664(v24, &qword_1E946CFF8);
LABEL_31:
    *(void *)(v0 + 856) = v17;
    uint64_t v56 = (void *)swift_task_alloc();
    *(void *)(v0 + 864) = v56;
    *uint64_t v56 = v0;
    v56[1] = sub_19F12EC3C;
    uint64_t v43 = *(void *)(v0 + 744);
    uint64_t v40 = *(_OWORD **)(v0 + 736);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v44 = v0 + 624;
    return MEMORY[0x1F4187E48](v40, v41, v42, v43, v44);
  }
  uint64_t v25 = v0 + 368;
  unint64_t v26 = *(uint64_t **)(v0 + 696);
  sub_19EEA80F4(*(void *)(v0 + 672), (uint64_t)v26);
  uint64_t v27 = *v26;
  sub_19EEBDBA4((uint64_t)(v26 + 1), v0 + 368);
  int64_t v28 = *(void **)(v0 + 632);
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 616) = v28;
  unint64_t v31 = sub_19EEAB4C0(v27);
  uint64_t v32 = v28[2];
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
LABEL_35:
    int64_t v28 = sub_19EEA81CC(0, v28[2] + 1, 1, v28);
LABEL_28:
    unint64_t v52 = v28[2];
    unint64_t v51 = v28[3];
    if (v52 >= v51 >> 1) {
      int64_t v28 = sub_19EEA81CC((void *)(v51 > 1), v52 + 1, 1, v28);
    }
    uint64_t v53 = *(void *)(v0 + 728);
    uint64_t v54 = *(void *)(v0 + 696);
    v28[2] = v52 + 1;
    uint64_t v55 = &v28[3 * v52];
    v55[4] = v25;
    v55[5] = v27;
    v55[6] = v1;
    sub_19EEA8098(v54);
    sub_19EEBD664(v53, &qword_1E946D060);
    *(void *)(v0 + 872) = v28;
    goto LABEL_31;
  }
  char v35 = v30;
  if (v28[3] >= v34)
  {
    if ((v29 & 1) == 0) {
      sub_19EEAA4B8();
    }
LABEL_23:
    uint64_t v38 = *(void **)(v0 + 616);
    if (v35)
    {
      uint64_t v39 = (_OWORD *)(v38[7] + 32 * v31);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
      sub_19EEBDC00((_OWORD *)(v0 + 368), v39);
    }
    else
    {
      v38[(v31 >> 6) + 8] |= 1 << v31;
      *(void *)(v38[6] + 8 * v31) = v27;
      uint64_t v40 = sub_19EEBDC00((_OWORD *)(v0 + 368), (_OWORD *)(v38[7] + 32 * v31));
      uint64_t v45 = v38[2];
      BOOL v46 = __OFADD__(v45, 1);
      uint64_t v47 = v45 + 1;
      if (v46)
      {
        __break(1u);
        return MEMORY[0x1F4187E48](v40, v41, v42, v43, v44);
      }
      v38[2] = v47;
    }
    *(void *)(v0 + 632) = v38;
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_19F1DD98C();
    uint64_t v27 = v48;
    sub_19F1DAE6C();
    uint64_t v1 = v49;
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    int64_t v28 = *(void **)(v0 + 872);
    if (v50) {
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  sub_19EEAB99C(v34, v29);
  unint64_t v36 = sub_19EEAB4C0(v27);
  if ((v35 & 1) == (v37 & 1))
  {
    unint64_t v31 = v36;
    goto LABEL_23;
  }
  return sub_19F1DD65C();
}

uint64_t sub_19F12F398(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_19F1DB8AC();
  uint64_t v24 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_19F1DB85C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v22[-v11];
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_19F1DB89C();
  __swift_project_value_buffer(v13, (uint64_t)qword_1E9498AC0);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_19F1DB87C();
  sub_19F1DB8CC();
  int v23 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    uint64_t v15 = v24;
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v24 + 88))(v5, v3) == *MEMORY[0x1E4FBD340])
    {
      char v16 = 0;
      uint64_t v17 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v5, v3);
      uint64_t v17 = "count=%ld";
      char v16 = 1;
    }
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v9, v12, v6);
    uint64_t v19 = swift_slowAlloc();
    *(unsigned char *)uint64_t v19 = 0;
    *(unsigned char *)(v19 + 1) = v16;
    *(_WORD *)(v19 + 2) = 2048;
    uint64_t v25 = *(void *)(a2 + 16);
    sub_19F1DCB3C();
    swift_bridgeObjectRelease();
    os_signpost_id_t v20 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v14, (os_signpost_type_t)v23, v20, "ResolveDependencies", v17, (uint8_t *)v19, 0xCu);
    MEMORY[0x19F3C9470](v19, -1, -1);

    uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
    v21(v12, v6);
    return ((uint64_t (*)(unsigned char *, uint64_t))v21)(v9, v6);
  }
  else
  {
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t sub_19F12F6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return MEMORY[0x1F4188298](sub_19EE37188, 0, 0);
}

uint64_t sub_19F12F71C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19F12F734(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 24) = v3;
  *(void *)(v4 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F12F794()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*sub_19F12F7E0())()
{
  return j__swift_endAccess_0;
}

void *sub_19F12F834()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_19EF9EB98(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_19F12F870(uint64_t a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *v1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10[0] = v2;
  sub_19F0735A4(v3, (uint64_t)sub_19EEAAC7C, 0, isUniquelyReferenced_nonNull_native, (uint64_t)v10);
  uint64_t v6 = v10[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = v1[4];
  uint64_t v11 = v1[3];
  uint64_t v12 = v7;
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  uint64_t v8 = v11;
  uint64_t v11 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v4 + 96))(v8, v12, &v11);
}

uint64_t sub_19F12F9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EE2FB5C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))DependencyDictionary.remove<A>(dependenciesFor:), (uint64_t)sub_19EECD7EC, 1528835360, 0xE400000000000000);
}

unint64_t sub_19F12FA0C(uint64_t a1, uint64_t a2)
{
  void v17[3] = 0;
  v17[4] = 0xE000000000000000;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  v17[0] = 0xD000000000000015;
  v17[1] = 0x800000019F269430;
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  unint64_t v18 = 0xD000000000000015;
  unint64_t v19 = 0x800000019F269430;
  v17[0] = *(void *)(v2 + 16);
  if (DependencyDictionary.types<A>(compatibleWith:)(a1, a2)[2])
  {
    long long v17[2] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708D8);
    sub_19EF4B32C();
    sub_19F1DBCCC();
    swift_bridgeObjectRelease();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v17, " Did you mean ");
    HIBYTE(v17[1]) = -18;
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_19EF9EB98(v5);
    swift_bridgeObjectRelease();
    v17[0] = (uint64_t)v6;
    swift_retain();
    sub_19F131770(v17);
    swift_release();
    int64_t v7 = *(void *)(v17[0] + 16);
    if (v7)
    {
      uint64_t v16 = MEMORY[0x1E4FBC860];
      sub_19EEA1364(0, v7, 0);
      uint64_t v8 = 0;
      uint64_t v9 = v16;
      do
      {
        v17[0] = 60;
        v17[1] = 0xE100000000000000;
        sub_19F1DD98C();
        sub_19F1DBEFC();
        swift_bridgeObjectRelease();
        sub_19F1DBEFC();
        uint64_t v10 = v17[0];
        uint64_t v11 = v17[1];
        unint64_t v13 = *(void *)(v16 + 16);
        unint64_t v12 = *(void *)(v16 + 24);
        if (v13 >= v12 >> 1) {
          sub_19EEA1364(v12 > 1, v13 + 1, 1);
        }
        ++v8;
        *(void *)(v16 + 16) = v13 + 1;
        unint64_t v14 = v16 + 16 * v13;
        *(void *)(v14 + 32) = v10;
        *(void *)(v14 + 40) = v11;
      }
      while (v7 != v8);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v9 = MEMORY[0x1E4FBC860];
    }
    v17[0] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
    sub_19EEA5E10((unint64_t *)&qword_1EB3931E0, &qword_1EB3931D8);
    sub_19F1DBCCC();
    swift_bridgeObjectRelease();
    strcpy((char *)v17, " Candidates: ");
    HIWORD(v17[1]) = -4864;
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t sub_19F12FE4C@<X0>(void *a1@<X8>)
{
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  uint64_t result = sub_19F1DBEFC();
  *a1 = 60;
  a1[1] = 0xE100000000000000;
  return result;
}

void sub_19F12FEC0(uint64_t a1, uint64_t a2)
{
}

void BaseObjectGraph.required<A>(_:)()
{
}

uint64_t sub_19F12FF5C()
{
  uint64_t v1 = sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CF10);
  sub_19EEA5E10(&qword_1E946CF08, &qword_1E946CF10);
  sub_19EEC4910();
  sub_19F1DC0AC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return v1;
}

uint64_t sub_19F1300CC()
{
  return sub_19F12FF5C();
}

uint64_t BaseObjectGraph._dependencyPersonality<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_19F070694(a1, a2, a3);
}

uint64_t BaseObjectGraph.dependencies<A>(compatibleWith:)()
{
  return sub_19F070CD8();
}

uint64_t sub_19F130158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[5] = a3;
  v4[6] = a4;
  void v4[3] = a1;
  uint64_t v4[4] = a2;
  return MEMORY[0x1F4188298](sub_19EE302BC, 0, 0);
}

uint64_t sub_19F13017C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BaseObjectGraph._withDependenciesResolved<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[5] = a3;
  v4[6] = v3;
  void v4[3] = a1;
  uint64_t v4[4] = a2;
  v4[7] = *v3;
  uint64_t v5 = sub_19F1DCD1C();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = sub_19F1DCF2C();
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F1302D0, 0, 0);
}

uint64_t sub_19F1302D0()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MEMORY[0x19F3C6370](v0[4], v0[5]);
  swift_getWitnessTable();
  sub_19F1DD0CC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_19EE6D228();
  swift_getWitnessTable();
  uint64_t v6 = sub_19F1DC61C();
  v0[13] = v6;
  uint64_t v7 = swift_task_alloc();
  v0[14] = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[15] = v8;
  void *v8 = v0;
  v8[1] = sub_19F1304A0;
  uint64_t v9 = v0[6];
  v8[6] = v4;
  v8[7] = v9;
  void v8[4] = &unk_1E9475388;
  v8[5] = v7;
  _OWORD v8[3] = v0 + 2;
  return MEMORY[0x1F4188298](sub_19EE37188, 0, 0);
}

uint64_t sub_19F1304A0()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F13063C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_19F1305C4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F1305C4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_19F13063C()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F1306C8(uint64_t a1, uint64_t a2, void *a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  v3[11] = *a3;
  return MEMORY[0x1F4188298](sub_19F130714, 0, 0);
}

uint64_t sub_19F130714()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = (void *)v0[10];
  swift_beginAccess();
  v0[12] = v1[3];
  v0[13] = v1[4];
  uint64_t v3 = v1[2];
  v0[14] = v3;
  v0[7] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D060);
  uint64_t v5 = swift_task_alloc();
  v0[15] = v5;
  *(void *)(v5 + 16) = v0 + 7;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946CF50);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[16] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_19F13086C;
  return MEMORY[0x1F4188080](v0 + 5, v4, v6, 0, 0, &unk_1E94753C0, v5, v4);
}

uint64_t sub_19F13086C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F130A70;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_19F130988;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F130988()
{
  uint64_t v9 = v0;
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 104);
  if (*(unsigned char *)(v0 + 48))
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v6 = *(void **)(v0 + 64);
    swift_bridgeObjectRelease();
    uint64_t v8 = v1;
    *uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v5 + 96))(v4, v2, &v8);
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_19F130A70()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F130AE8(uint64_t a1, void *a2)
{
  v2[7] = a1;
  v2[8] = a2;
  v2[9] = *a2;
  return MEMORY[0x1F4188298](sub_19EE28954, 0, 0);
}

uint64_t sub_19F130B30()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s9JetEngine15BaseObjectGraphC10injectSyncyxxmAA0G10DependencyRzlF_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_19F1DCAAC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v13 - v9;
  v13[1] = *(void *)(v3 + 16);
  DependencyDictionary.subscript.getter(a1, a2, (uint64_t)v13 - v9);
  uint64_t v11 = *(void *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_19F12FEC0(a1, a2);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v10, a2);
}

uint64_t _s9JetEngine15BaseObjectGraphC21injectIfAvailableSyncyxSgxmAA0I10DependencyRzlF_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DependencyDictionary.subscript.getter(a1, a2, a3);
}

uint64_t BaseObjectGraph.injectSyncThrowing<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F130D84(a1, a2, a3);
}

{
  return sub_19F130D84(a1, a2, a3);
}

uint64_t BaseObjectGraph.injectIfAvailableSyncThrowing<A>(_:)()
{
  return sub_19F130F48();
}

{
  return sub_19F130F48();
}

uint64_t sub_19F130D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = sub_19F1DCAAC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v14[-v10];
  uint64_t v15 = a2;
  uint64_t v16 = v3;
  uint64_t v17 = a1;
  uint64_t result = sub_19EE8D1C8();
  if (!v4)
  {
    uint64_t v13 = *(void *)(a2 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, a2) == 1)
    {
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      sub_19F12FEC0(a1, a2);
    }
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a3, v11, a2);
  }
  return result;
}

uint64_t sub_19F130F48()
{
  return sub_19EE8D1C8();
}

uint64_t BaseObjectGraph.injectAsyncThrowing<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  void v4[3] = a2;
  uint64_t v7 = sub_19F1DCAAC();
  v4[6] = v7;
  v4[7] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v4[8] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v4[9] = v9;
  *uint64_t v9 = v4;
  void v9[4] = a3;
  v9[5] = v3;
  long long v9[2] = v8;
  void v9[3] = a2;
  v9[1] = sub_19F1310D0;
  return MEMORY[0x1F4188298](sub_19F13132C, 0, 0);
}

uint64_t sub_19F1310D0()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F0CC3E0;
  }
  else {
    uint64_t v2 = sub_19F1311E4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F1311E4()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[4];
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v6 = v0[6];
    uint64_t v7 = v0[7];
    uint64_t v8 = v0[3];
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
    sub_19F12FEC0(v8, v2);
  }
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[2], v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t BaseObjectGraph.injectIfAvailableAsyncThrowing<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  void v4[3] = a2;
  return MEMORY[0x1F4188298](sub_19F13132C, 0, 0);
}

uint64_t sub_19F13132C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = sub_19F1DCAAC();
  *uint64_t v3 = v0;
  v3[1] = sub_19F131434;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  void v3[6] = v4;
  v3[7] = v5;
  void v3[4] = &unk_1E94753A8;
  void v3[5] = v2;
  v3[3] = v6;
  return MEMORY[0x1F4188298](sub_19EE37188, 0, 0);
}

uint64_t sub_19F131434()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F1330FC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_19F131570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[5] = a3;
  v4[6] = a4;
  void v4[3] = a1;
  uint64_t v4[4] = a2;
  return MEMORY[0x1F4188298](sub_19F131594, 0, 0);
}

uint64_t sub_19F131594()
{
  v0[2] = *(void *)(v0[4] + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_19F13163C;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  return sub_19EE301FC(v4, v2, v3);
}

uint64_t sub_19F13163C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F1330F8, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_19F131770(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_19F02C4BC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_19F131CF0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_19F1317DC(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_19EE17780;
  v6[9] = v5;
  v6[10] = v4;
  v6[8] = a1;
  v6[11] = *v4;
  return MEMORY[0x1F4188298](sub_19F130714, 0, 0);
}

uint64_t sub_19F1318C0@<X0>(uint64_t a1@<X8>)
{
  return sub_19F1318D8(a1);
}

uint64_t sub_19F1318D8@<X0>(uint64_t a1@<X8>)
{
  return sub_19F071028(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t sub_19F13190C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 24);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_19EE17780;
  *(void *)(v5 + 48) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 24) = a1;
  return MEMORY[0x1F4188298](sub_19F131594, 0, 0);
}

uint64_t sub_19F1319D0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 32);
  *a2 = *(void *)(v3 + 24);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for BaseObjectGraph(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BaseObjectGraph);
}

uint64_t dispatch thunk of BaseObjectGraph.__allocating_init(name:dependencies:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of BaseObjectGraph.performAsCurrent<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of BaseObjectGraph.performAsCurrent<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 112)
                                                                   + **(int **)(*(void *)v4 + 112));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_19EEB8A6C;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BaseObjectGraph.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of BaseObjectGraph.name.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of BaseObjectGraph.availableCandidates.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of BaseObjectGraph.adding(uniqueDependenciesOf:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of BaseObjectGraph.subtracting<A>(dependenciesFor:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of BaseObjectGraph.subtracting(dependencyFor:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of BaseObjectGraph.errorDescription<A>(forNoMemberSatisfying:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of BaseObjectGraph.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_19F131CF0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_19F1DD2CC();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_152;
    }
    if (v4) {
      return sub_19F1324B8(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_160;
  }
  uint64_t v107 = result;
  unint64_t v103 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    long long v111 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v4 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      int64_t v95 = v11;
      uint64_t v106 = v9;
      if (v12 >= 2)
      {
        uint64_t v96 = *v103;
        do
        {
          unint64_t v97 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v96) {
            goto LABEL_159;
          }
          unint64_t v98 = v95;
          uint64_t v99 = *(void *)&v95[16 * v97 + 32];
          uint64_t v100 = *(void *)&v95[16 * v12 + 24];
          sub_19F1325C8((char *)(v96 + 8 * v99), (char *)(v96 + 8 * *(void *)&v95[16 * v12 + 16]), v96 + 8 * v100, v111);
          if (v2) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v98 = sub_19F132CBC((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_149;
          }
          uint64_t v101 = &v98[16 * v97 + 32];
          *(void *)uint64_t v101 = v99;
          *((void *)v101 + 1) = v100;
          unint64_t v102 = *((void *)v98 + 2);
          if (v12 > v102) {
            goto LABEL_150;
          }
          memmove(&v98[16 * v12 + 16], &v98[16 * v12 + 32], 16 * (v102 - v12));
          int64_t v95 = v98;
          *((void *)v98 + 2) = v102 - 1;
          unint64_t v12 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = MEMORY[0x1E4FBC860];
    uint64_t v113 = v1;
  }
  else
  {
    uint64_t v113 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_19F1DC1DC();
    *(void *)(v8 + 16) = v7;
    uint64_t v106 = v8;
    long long v111 = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v104 = *a1 + 16;
  uint64_t v112 = *a1;
  uint64_t v105 = *a1 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v110 = v4;
  while (2)
  {
    uint64_t v13 = v10++;
    uint64_t v109 = v13;
    if (v10 >= v4) {
      goto LABEL_45;
    }
    uint64_t v14 = sub_19F1DD98C();
    uint64_t v16 = v15;
    int v18 = 0;
    if (v14 != sub_19F1DD98C() || v16 != v17) {
      int v18 = sub_19F1DD44C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v13 + 2;
    uint64_t v4 = v110;
    if (v13 + 2 >= v110) {
      goto LABEL_36;
    }
    uint64_t v20 = v104 + 8 * v13;
    while (1)
    {
      uint64_t v22 = sub_19F1DD98C();
      uint64_t v24 = v23;
      if (v22 == sub_19F1DD98C() && v24 == v25)
      {
        swift_bridgeObjectRelease_n();
        if (v18)
        {
          uint64_t v13 = v109;
          uint64_t v4 = v110;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      int v21 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 ^ v21)) {
        break;
      }
LABEL_25:
      ++v10;
      v20 += 8;
      uint64_t v4 = v110;
      if (v110 == v10)
      {
        uint64_t v10 = v110;
        goto LABEL_35;
      }
    }
    uint64_t v4 = v110;
LABEL_35:
    uint64_t v13 = v109;
LABEL_36:
    if (v18)
    {
LABEL_37:
      if (v10 < v13) {
        goto LABEL_153;
      }
      if (v13 < v10)
      {
        uint64_t v27 = (uint64_t *)(v105 + 8 * v10);
        uint64_t v28 = v10;
        uint64_t v29 = v13;
        char v30 = (uint64_t *)(v112 + 8 * v13);
        do
        {
          if (v29 != --v28)
          {
            if (!v112) {
              goto LABEL_158;
            }
            uint64_t v31 = *v30;
            uint64_t *v30 = *v27;
            *uint64_t v27 = v31;
          }
          ++v29;
          --v27;
          ++v30;
        }
        while (v29 < v28);
      }
    }
LABEL_45:
    if (v10 >= v4) {
      goto LABEL_54;
    }
    if (__OFSUB__(v10, v13)) {
      goto LABEL_151;
    }
    if (v10 - v13 >= v107)
    {
LABEL_54:
      uint64_t v33 = v112;
      if (v10 < v13) {
        goto LABEL_146;
      }
      goto LABEL_55;
    }
    if (__OFADD__(v13, v107)) {
      goto LABEL_154;
    }
    if (v13 + v107 >= v4) {
      uint64_t v32 = v4;
    }
    else {
      uint64_t v32 = v13 + v107;
    }
    if (v32 >= v13)
    {
      if (v10 == v32) {
        goto LABEL_54;
      }
      uint64_t v85 = (uint64_t *)(v105 + 8 * v10);
      uint64_t v33 = v112;
      uint64_t v108 = v32;
      do
      {
        uint64_t v86 = v13;
        uint64_t v87 = v85;
        while (1)
        {
          uint64_t v88 = sub_19F1DD98C();
          uint64_t v90 = v89;
          if (v88 == sub_19F1DD98C() && v90 == v91) {
            break;
          }
          char v93 = sub_19F1DD44C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v93 & 1) == 0) {
            goto LABEL_103;
          }
          if (!v112) {
            goto LABEL_156;
          }
          uint64_t v94 = *v87;
          *uint64_t v87 = v87[1];
          v87[1] = v94;
          --v87;
          if (v10 == ++v86) {
            goto LABEL_103;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_103:
        ++v10;
        ++v85;
        uint64_t v13 = v109;
      }
      while (v10 != v108);
      uint64_t v10 = v108;
      if (v108 < v109) {
        goto LABEL_146;
      }
LABEL_55:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_19F132908(0, *((void *)v11 + 2) + 1, 1, v11);
      }
      unint64_t v35 = *((void *)v11 + 2);
      unint64_t v34 = *((void *)v11 + 3);
      unint64_t v12 = v35 + 1;
      if (v35 >= v34 >> 1) {
        uint64_t v11 = sub_19F132908((char *)(v34 > 1), v35 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v12;
      unint64_t v36 = v11 + 32;
      char v37 = &v11[16 * v35 + 32];
      *(void *)char v37 = v13;
      *((void *)v37 + 1) = v10;
      if (v35)
      {
        while (2)
        {
          unint64_t v38 = v12 - 1;
          if (v12 >= 4)
          {
            uint64_t v43 = &v36[16 * v12];
            uint64_t v44 = *((void *)v43 - 8);
            uint64_t v45 = *((void *)v43 - 7);
            BOOL v49 = __OFSUB__(v45, v44);
            uint64_t v46 = v45 - v44;
            if (v49) {
              goto LABEL_135;
            }
            uint64_t v48 = *((void *)v43 - 6);
            uint64_t v47 = *((void *)v43 - 5);
            BOOL v49 = __OFSUB__(v47, v48);
            uint64_t v41 = v47 - v48;
            char v42 = v49;
            if (v49) {
              goto LABEL_136;
            }
            unint64_t v50 = v12 - 2;
            unint64_t v51 = &v36[16 * v12 - 32];
            uint64_t v53 = *(void *)v51;
            uint64_t v52 = *((void *)v51 + 1);
            BOOL v49 = __OFSUB__(v52, v53);
            uint64_t v54 = v52 - v53;
            if (v49) {
              goto LABEL_138;
            }
            BOOL v49 = __OFADD__(v41, v54);
            uint64_t v55 = v41 + v54;
            if (v49) {
              goto LABEL_141;
            }
            if (v55 >= v46)
            {
              uint64_t v73 = &v36[16 * v38];
              uint64_t v75 = *(void *)v73;
              uint64_t v74 = *((void *)v73 + 1);
              BOOL v49 = __OFSUB__(v74, v75);
              uint64_t v76 = v74 - v75;
              if (v49) {
                goto LABEL_145;
              }
              BOOL v66 = v41 < v76;
            }
            else
            {
LABEL_73:
              if (v42) {
                goto LABEL_137;
              }
              unint64_t v50 = v12 - 2;
              uint64_t v56 = &v36[16 * v12 - 32];
              uint64_t v58 = *(void *)v56;
              uint64_t v57 = *((void *)v56 + 1);
              BOOL v59 = __OFSUB__(v57, v58);
              uint64_t v60 = v57 - v58;
              char v61 = v59;
              if (v59) {
                goto LABEL_140;
              }
              uint64_t v62 = &v36[16 * v38];
              uint64_t v64 = *(void *)v62;
              uint64_t v63 = *((void *)v62 + 1);
              BOOL v49 = __OFSUB__(v63, v64);
              uint64_t v65 = v63 - v64;
              if (v49) {
                goto LABEL_143;
              }
              if (__OFADD__(v60, v65)) {
                goto LABEL_144;
              }
              if (v60 + v65 < v41) {
                goto LABEL_85;
              }
              BOOL v66 = v41 < v65;
            }
            if (v66) {
              unint64_t v38 = v50;
            }
          }
          else
          {
            if (v12 == 3)
            {
              uint64_t v40 = *((void *)v11 + 4);
              uint64_t v39 = *((void *)v11 + 5);
              BOOL v49 = __OFSUB__(v39, v40);
              uint64_t v41 = v39 - v40;
              char v42 = v49;
              goto LABEL_73;
            }
            uint64_t v67 = *((void *)v11 + 4);
            uint64_t v68 = *((void *)v11 + 5);
            BOOL v49 = __OFSUB__(v68, v67);
            uint64_t v60 = v68 - v67;
            char v61 = v49;
LABEL_85:
            if (v61) {
              goto LABEL_139;
            }
            uint64_t v69 = &v36[16 * v38];
            uint64_t v71 = *(void *)v69;
            uint64_t v70 = *((void *)v69 + 1);
            BOOL v49 = __OFSUB__(v70, v71);
            uint64_t v72 = v70 - v71;
            if (v49) {
              goto LABEL_142;
            }
            if (v72 < v60) {
              goto LABEL_15;
            }
          }
          unint64_t v77 = v38 - 1;
          if (v38 - 1 >= v12)
          {
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
            goto LABEL_155;
          }
          uint64_t v78 = v33;
          if (!v33) {
            goto LABEL_157;
          }
          unint64_t v79 = v11;
          uint64_t v80 = &v36[16 * v77];
          uint64_t v81 = *(void *)v80;
          long long v82 = &v36[16 * v38];
          uint64_t v83 = *((void *)v82 + 1);
          sub_19F1325C8((char *)(v78 + 8 * *(void *)v80), (char *)(v78 + 8 * *(void *)v82), v78 + 8 * v83, v111);
          if (v113) {
            goto LABEL_115;
          }
          if (v83 < v81) {
            goto LABEL_132;
          }
          if (v38 > *((void *)v79 + 2)) {
            goto LABEL_133;
          }
          *(void *)uint64_t v80 = v81;
          *(void *)&v36[16 * v77 + 8] = v83;
          unint64_t v84 = *((void *)v79 + 2);
          if (v38 >= v84) {
            goto LABEL_134;
          }
          uint64_t v11 = v79;
          unint64_t v12 = v84 - 1;
          memmove(&v36[16 * v38], v82 + 16, 16 * (v84 - 1 - v38));
          *((void *)v79 + 2) = v84 - 1;
          uint64_t v33 = v112;
          if (v84 <= 2) {
            goto LABEL_15;
          }
          continue;
        }
      }
      unint64_t v12 = 1;
LABEL_15:
      uint64_t v4 = v110;
      if (v10 >= v110)
      {
        uint64_t v2 = v113;
        uint64_t v9 = v106;
        goto LABEL_118;
      }
      continue;
    }
    break;
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_19F1DCFBC();
  __break(1u);
  return result;
}

uint64_t sub_19F1324B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v17 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_6:
    uint64_t v8 = v17;
    uint64_t v9 = (uint64_t *)v7;
    while (1)
    {
      uint64_t v10 = sub_19F1DD98C();
      uint64_t v12 = v11;
      if (v10 == sub_19F1DD98C() && v12 == v13)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        v7 += 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v15 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      uint64_t v16 = *v9;
      uint64_t result = v9[1];
      *uint64_t v9 = result;
      v9[1] = v16;
      --v9;
      if (v4 == ++v8) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_19F1325C8(char *a1, char *__src, unint64_t a3, char *a4)
{
  unint64_t v36 = a1;
  uint64_t v5 = __src;
  uint64_t v6 = __src - a1;
  uint64_t v7 = __src - a1 + 7;
  if (__src - a1 >= 0) {
    uint64_t v7 = __src - a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 3;
  unint64_t v35 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7) {
      goto LABEL_54;
    }
    if (a4 != __src || &__src[8 * v11] <= a4) {
      memmove(a4, __src, 8 * v11);
    }
    int v21 = &a4[8 * v11];
    unint64_t v34 = v21;
    unint64_t v36 = v5;
    if (a1 >= v5 || v9 < 8)
    {
LABEL_53:
      sub_19F132AC0((void **)&v36, (const void **)&v35, &v34);
      return 1;
    }
    uint64_t v22 = (char *)(a3 - 8);
    uint64_t v23 = v5;
    while (1)
    {
      uint64_t v24 = v22 + 8;
      v23 -= 8;
      uint64_t v25 = sub_19F1DD98C();
      uint64_t v27 = v26;
      if (v25 == sub_19F1DD98C() && v27 == v28) {
        break;
      }
      char v30 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0) {
        goto LABEL_46;
      }
      if (v24 != v5 || v22 >= v5) {
        *(void *)uint64_t v22 = *(void *)v23;
      }
      unint64_t v36 = v23;
LABEL_51:
      if (v23 > a1)
      {
        v22 -= 8;
        uint64_t v5 = v23;
        if (v21 > a4) {
          continue;
        }
      }
      goto LABEL_53;
    }
    swift_bridgeObjectRelease_n();
LABEL_46:
    unint64_t v34 = v21 - 8;
    if (v24 < v21 || v22 >= v21 || v24 != v21) {
      *(void *)uint64_t v22 = *((void *)v21 - 1);
    }
    uint64_t v23 = v5;
    v21 -= 8;
    goto LABEL_51;
  }
  if (v6 >= -7)
  {
    if (a4 != a1 || &a1[8 * v8] <= a4) {
      memmove(a4, a1, 8 * v8);
    }
    unint64_t v34 = &a4[8 * v8];
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      uint64_t v12 = a4;
      uint64_t v13 = a1;
      while (1)
      {
        uint64_t v14 = sub_19F1DD98C();
        uint64_t v16 = v15;
        if (v14 == sub_19F1DD98C() && v16 == v17) {
          break;
        }
        char v19 = sub_19F1DD44C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0) {
          goto LABEL_23;
        }
        uint64_t v20 = v5 + 8;
        if (v13 < v5 || v13 >= v20 || v13 != v5) {
          *(void *)uint64_t v13 = *(void *)v5;
        }
LABEL_26:
        v13 += 8;
        if (v12 < &a4[8 * v8])
        {
          uint64_t v5 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        unint64_t v36 = v13;
        goto LABEL_53;
      }
      swift_bridgeObjectRelease_n();
LABEL_23:
      if (v13 != v12) {
        *(void *)uint64_t v13 = *(void *)v12;
      }
      v12 += 8;
      unint64_t v35 = v12;
      uint64_t v20 = v5;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

char *sub_19F132908(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D4D0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_19F132A04(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 63;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -64)
  {
    uint64_t result = (char *)sub_19F1DD07C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
    {
      return (char *)memmove(result, v3, v7 << 6);
    }
  }
  return result;
}

char *sub_19F132AC0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_19F1DD07C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_19F132B7C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_19F1DB57C();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_19F1DD07C();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_19F132CBC(uint64_t a1)
{
  return sub_19F132908(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19F132CD0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = *a3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19EEB8A6C;
  return sub_19F12DC74(a1, a2, v8, a4);
}

uint64_t sub_19F132D88(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(uint64_t **)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_19EE17780;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_1E94753B8 + dword_1E94753B8);
  return v9(a1, a2, v7, v6);
}

uint64_t sub_19F132E54(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EE17780;
  return sub_19F0727D4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19F132F20(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_19EE17780;
  return sub_19F072558(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t objectdestroy_33Tm_0()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19F133028(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_19EE17780;
  return sub_19F072364(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t OpenIntentModel.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = MEMORY[0x1E4FBC868];
  uint64_t v5 = (char *)a3 + *(int *)(type metadata accessor for OpenIntentModel() + 36);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v6(v5, a1, a2);
}

uint64_t type metadata accessor for OpenIntentModel()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t OpenIntentModel.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t OpenIntentModel.kind.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 32))(*(void *)(a1 + 16));
}

uint64_t OpenIntentModel.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, v2 + *(int *)(v8 + 36), v3, v5);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t OpenIntentModel<>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v4 = a2;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v10;
  *(void *)&long long v33 = *v10;
  swift_bridgeObjectRetain();
  sub_19EF6B168(0xD000000000000027, 0x800000019F269EF0, v36);
  sub_19EEBD664((uint64_t)v36, &qword_1EB393260);
  uint64_t v12 = v33;
  uint64_t v29 = a1;
  sub_19EEC355C(a1, (uint64_t)v36);
  JSONObject.dictionary.getter((uint64_t)&v30);
  if (*((void *)&v31 + 1))
  {
    v26[1] = v26;
    long long v33 = v30;
    long long v34 = v31;
    uint64_t v35 = v32;
    MEMORY[0x1F4188790](v13);
    v26[-2] = v12;
    uint64_t v27 = v4;
    uint64_t v14 = a4;
    uint64_t v15 = v7;
    uint64_t v16 = *((void *)&v34 + 1);
    uint64_t v17 = v35;
    __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
    int v18 = *(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>), void *, void, ValueMetadata *, void, uint64_t, uint64_t))(v17 + 48);
    uint64_t v19 = v37;
    uint64_t v20 = v17;
    uint64_t v7 = v15;
    a4 = v14;
    uint64_t v4 = v27;
    uint64_t v21 = v18(sub_19EECA854, &v26[-4], MEMORY[0x1E4FBB1A0], &type metadata for ScalarDictionary.Value, MEMORY[0x1E4FBB1B0], v16, v20);
    uint64_t v37 = v19;
    swift_bridgeObjectRelease();
    sub_19EEC3418((uint64_t)v36);
    sub_19EEC05FC((uint64_t)&v33);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)&v30, &qword_1E946F740);
    sub_19EEC3418((uint64_t)v36);
    uint64_t v21 = MEMORY[0x1E4FBC868];
  }
  *a4 = v21;
  uint64_t v22 = v29;
  sub_19EEC355C(v29, (uint64_t)v36);
  *(void *)&long long v33 = v11;
  uint64_t v23 = v37;
  (*(void (**)(_OWORD *, long long *, uint64_t))(v28 + 8))(v36, &v33, v4);
  sub_19EEC3418(v22);
  if (v23) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v25 = type metadata accessor for OpenIntentModel();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))((char *)a4 + *(int *)(v25 + 36), v9, v4);
}

uint64_t sub_19F133600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  return OpenIntentModel<>.init(deserializing:using:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

void OpenIntentModel<>.jsRepresentation(in:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v25 = *v4;
  swift_bridgeObjectRetain();
  ScalarDictionary.jsRepresentation(in:)(a1, v22);
  if (v5)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = a4;
    uint64_t v11 = v23;
    uint64_t v10 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    uint64_t v12 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 16))(a1, v11, v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)(*(uint64_t (**)(void *, void))(*(void *)(a3 + 8) + 16))(a1, *(void *)(a2 + 16));
    JSValue.propertyNames.getter();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = v14 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = (void *)sub_19F1DBD4C();
        id v18 = objc_msgSend(v12, sel_valueForProperty_, v17);

        if (!v18) {
          break;
        }
        v16 += 16;
        id v19 = v18;
        uint64_t v20 = (void *)sub_19F1DBD4C();
        swift_bridgeObjectRelease();
        objc_msgSend(v13, sel_setValue_forProperty_, v19, v20);

        if (!--v15) {
          goto LABEL_7;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_7:
      swift_bridgeObjectRelease();
      void v21[3] = sub_19EE8FF40();
      void v21[4] = &protocol witness table for JSValue;

      *uint64_t v21 = v13;
    }
  }
}

long long *OpenIntentModel<>.makeValue(in:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_19F133924(a1, v3, *(void *)(a2 + 16), a3);
}

long long *sub_19F133924(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for OpenIntentModel();
  OpenIntentModel<>.jsRepresentation(in:)(a1, v7, a4, &v28);
  if (v4)
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
    id v12 = v10;
    uint64_t v27 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v13._uint64_t countAndFlagsBits = 0x69747265766E6F43;
    v13._uint64_t object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    v26[3] = swift_getMetatypeMetadata();
    v26[0] = v7;
    sub_19EEBCD00((uint64_t)v26, (uint64_t)v25);
    long long v23 = 0u;
    long long v24 = 0u;
    sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
    LOBYTE(v30) = 0;
    long long v28 = v23;
    long long v29 = v24;
    uint64_t v14 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_19EEC3F3C(0, v14[2] + 1, 1, v14);
    }
    unint64_t v16 = v14[2];
    unint64_t v15 = v14[3];
    if (v16 >= v15 >> 1) {
      uint64_t v14 = sub_19EEC3F3C((void *)(v15 > 1), v16 + 1, 1, v14);
    }
    uint64_t v14[2] = v16 + 1;
    uint64_t v17 = &v14[5 * v16];
    long long v18 = v28;
    long long v19 = v29;
    *((unsigned char *)v17 + 64) = v30;
    *((_OWORD *)v17 + 2) = v18;
    *((_OWORD *)v17 + 3) = v19;
    uint64_t v27 = v14;
    sub_19EEBD664((uint64_t)v26, &qword_1EB393260);
    v20._uint64_t object = (void *)0x800000019F269F20;
    v20._uint64_t countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    *(void *)(v11 + 32) = v27;
    *(void *)&long long v28 = v12;
    LOBYTE(v23) = 1;
    uint64_t v22 = &v28;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v23);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    uint64_t v8 = *((void *)&v29 + 1);
    uint64_t v9 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
    uint64_t v22 = (long long *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 16))(a1, v8, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
  }
  return v22;
}

void sub_19F133BD0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
}

long long *sub_19F133BEC(void *a1, uint64_t a2, uint64_t a3)
{
  return OpenIntentModel<>.makeValue(in:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t OpenIntentModel<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v28 = a3;
  uint64_t v22 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OpenIntentModel();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v20 - v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_19F1DD89C();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v11);
  v25[0] = v26[0];
  swift_bridgeObjectRetain();
  sub_19EF6B168(0xD000000000000027, 0x800000019F269EF0, v27);
  sub_19EEBD664((uint64_t)v27, &qword_1EB393260);
  swift_bridgeObjectRelease();
  uint64_t v12 = v25[0];
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v26[0] = v12;
  uint64_t v15 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v26);
  Decoder.withUserInfo(_:)(v15, v13, v14, v27);
  swift_bridgeObjectRelease();
  sub_19EEC4154((uint64_t)v27, (uint64_t)v26);
  sub_19EEC4154((uint64_t)v26, (uint64_t)v25);
  uint64_t v16 = sub_19EF6A4D4(v25);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  *uint64_t v10 = v16;
  sub_19EEC4154((uint64_t)v27, (uint64_t)v26);
  uint64_t v17 = v24;
  sub_19F1DC59C();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)v10 + *(int *)(v8 + 36), v7, a2);
    uint64_t v19 = v21;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v21 + 16))(v23, v10, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v19 + 8))(v10, v8);
  }
}

uint64_t OpenIntentModel<>.encode(to:)(void *a1)
{
  uint64_t result = sub_19F1DBC7C();
  if (!v2)
  {
    uint64_t v5 = *v1;
    swift_bridgeObjectRetain();
    sub_19EF6ABF8(a1, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19F133F34@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return OpenIntentModel<>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t sub_19F133F58(void *a1)
{
  return OpenIntentModel<>.encode(to:)(a1);
}

uint64_t _OpaqueIntentModelBody.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v14);
  ScalarDictionary.init(deserializing:using:)((uint64_t)v14, &v15);
  if (!v2)
  {
    uint64_t v5 = v15;
    if (*(void *)(v15 + 16))
    {
      unint64_t v6 = sub_19EEBD400(0x646E696B24, 0xE500000000000000);
      if (v7)
      {
        uint64_t v8 = *(void *)(v5 + 56) + 24 * v6;
        if (*(unsigned char *)(v8 + 16) == 3)
        {
          uint64_t v10 = *(void *)v8;
          uint64_t v9 = *(void *)(v8 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t result = sub_19EEC3418(a1);
          *a2 = v10;
          a2[1] = v9;
          return result;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = type metadata accessor for _OpaqueIntentModelBody() | 0x2000000000000000;
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v13 = xmmword_19F25CA80;
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = 0;
    swift_willThrow();
  }
  return sub_19EEC3418(a1);
}

uint64_t _OpaqueIntentModelBody.kind.getter()
{
  uint64_t v0 = sub_19EEBCFB4();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t _OpaqueIntentModelBody.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(self, sel_valueWithNewObjectInContext_, a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v3;
  return result;
}

JSValue __swiftcall _OpaqueIntentModelBody.makeValue(in:)(JSContext in)
{
  result.super.Class isa = (Class)objc_msgSend(self, sel_valueWithNewObjectInContext_, in.super.isa);
  if (!result.super.isa) {
    __break(1u);
  }
  return result;
}

uint64_t sub_19F1341A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_19F13421C()
{
  return 1684957547;
}

uint64_t sub_19F13422C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F1341A4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19F134260@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EF4F19C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_19F134290(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_19F1342E4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_19F134338@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return _OpaqueIntentModelBody.init(deserializing:using:)(a1, a2);
}

unint64_t sub_19F134358@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return _OpaqueIntentModelBody.jsRepresentation(in:)(a1, a2);
}

id sub_19F134370(uint64_t a1)
{
  id result = objc_msgSend(self, sel_valueWithNewObjectInContext_, a1);
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t _OpaqueIntentModelBody<>.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = sub_19F1DD89C();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v4);
  v18[0] = v19[0];
  swift_bridgeObjectRetain();
  sub_19EF6B168(0xD000000000000027, 0x800000019F269EF0, v20);
  sub_19EEBD664((uint64_t)v20, &qword_1EB393260);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v7 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v19);
  Decoder.withUserInfo(_:)(v7, v5, v6, v20);
  swift_bridgeObjectRelease();
  sub_19EEC4154((uint64_t)v20, (uint64_t)v19);
  sub_19EEC4154((uint64_t)v19, (uint64_t)v18);
  uint64_t v8 = sub_19EF6A4D4(v18);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  if (*(void *)(v8 + 16)
    && (unint64_t v9 = sub_19EEBD400(0x646E696B24, 0xE500000000000000), (v10 & 1) != 0)
    && (uint64_t v11 = *(void *)(v8 + 56) + 24 * v9, *(unsigned char *)(v11 + 16) == 3))
  {
    uint64_t v13 = *(void *)v11;
    uint64_t v12 = *(void *)(v11 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
    *a2 = v13;
    a2[1] = v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EB0);
    *(void *)(v16 + 24) = &type metadata for OpenCodingKey;
    *(void *)(v16 + 32) = sub_19EF6EA7C();
    *(_OWORD *)uint64_t v16 = xmmword_19F25CA80;
    *(unsigned char *)(v16 + 16) = 1;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    sub_19F1DD86C();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, *MEMORY[0x1E4FBBA68], v14);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t _OpaqueIntentModelBody<>.encode(to:)(void *a1)
{
  type metadata accessor for _OpaqueIntentModelBody.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_19F1DD2BC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - v5;
  uint64_t v7 = *v1;
  v9[0] = v1[1];
  v9[1] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8FC();
  sub_19F1DD26C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_19F1347A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return _OpaqueIntentModelBody<>.init(from:)(a1, a2);
}

uint64_t sub_19F1347BC(void *a1)
{
  return _OpaqueIntentModelBody<>.encode(to:)(a1);
}

uint64_t type metadata accessor for _OpaqueIntentModelBody()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _OpaqueIntentModelBody.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F134804()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_19F134828(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_19F13489C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_19F1348D8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_19F134A78(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x19F134CD4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

unsigned char *sub_19F134CFC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F134D98);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F134DC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F134DDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F134DF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F134E14(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_19F135F18(a1, (uint64_t)sub_19F136948, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t Bag.ValueOverride.init(deserializing:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v5);
  unint64_t v6 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  Bag.ValueOverride.init(deserializing:using:)((uint64_t)v5, a2);
  return sub_19EEC3418(a1);
}

uint64_t Bag.ValueOverride.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  size_t v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  JSONObject.subscript.getter(1701869940, 0xE400000000000000, (uint64_t)v71);
  sub_19EEBF040((uint64_t)v71, (uint64_t)&v68);
  uint64_t v11 = *((void *)&v69 + 1);
  if (!*((void *)&v69 + 1))
  {
    sub_19EEBD664((uint64_t)&v68, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v71);
    goto LABEL_12;
  }
  uint64_t v60 = v8;
  char v61 = a2;
  uint64_t v12 = v70;
  __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
  uint64_t v15 = v14;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
  sub_19EEC3418((uint64_t)v71);
  if (!v15)
  {
LABEL_12:
    uint64_t v25 = (unsigned char *)a1;
    uint64_t v26 = type metadata accessor for Bag.ValueOverride() | 0x2000000000000000;
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v27 = xmmword_19F24F060;
    *(void *)(v27 + 16) = v26;
    *(void *)(v27 + 24) = 0;
    swift_willThrow();
    uint64_t v28 = v25;
    return sub_19EEC3418((uint64_t)v28);
  }
  uint64_t v72 = a1;
  JSONObject.subscript.getter(0x65756C6176, 0xE500000000000000, (uint64_t)v71);
  sub_19EEBF040((uint64_t)v71, (uint64_t)&v68);
  uint64_t v16 = *((void *)&v69 + 1);
  if (!*((void *)&v69 + 1))
  {
    sub_19EEBD664((uint64_t)&v68, (uint64_t *)&unk_1E946FD20);
    goto LABEL_14;
  }
  uint64_t v17 = v70;
  __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
  LOBYTE(v17) = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 104))(v16, v17);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
  if (v17)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v29 = type metadata accessor for Bag.ValueOverride() | 0x2000000000000000;
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v30 = xmmword_19F260940;
LABEL_15:
    *(void *)(v30 + 16) = v29;
    *(void *)(v30 + 24) = 0;
LABEL_54:
    swift_willThrow();
    sub_19EEC3418(v72);
    uint64_t v28 = v71;
    return sub_19EEC3418((uint64_t)v28);
  }
  if (v13 == 0x676E69727473 && v15 == 0xE600000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19EEBF040((uint64_t)v71, (uint64_t)&v68);
    uint64_t v18 = *((void *)&v69 + 1);
    if (*((void *)&v69 + 1))
    {
      uint64_t v19 = v70;
      __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
      uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
      uint64_t v22 = v21;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
      if (v22)
      {
        sub_19EEC3418(v72);
        sub_19EEC3418((uint64_t)v71);
        uint64_t v23 = v61;
        *char v61 = v20;
        v23[1] = v22;
        type metadata accessor for Bag.ValueOverride();
        return swift_storeEnumTagMultiPayload();
      }
      goto LABEL_53;
    }
    goto LABEL_51;
  }
  if (v13 == 0x7961727261 && v15 == 0xE500000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19EEBF040((uint64_t)v71, (uint64_t)v62);
    uint64_t v31 = v63;
    uint64_t v32 = v61;
    if (v63)
    {
      uint64_t v33 = v64;
      __swift_project_boxed_opaque_existential_1(v62, v63);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v33 + 120))(&v65, v31, v33);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v62);
      if (*((void *)&v66 + 1))
      {
        long long v68 = v65;
        long long v69 = v66;
        uint64_t v34 = v67;
        uint64_t v70 = v67;
        uint64_t v35 = *((void *)&v66 + 1);
        __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v66 + 1));
        uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 40))(MEMORY[0x1E4FBC840] + 8, v35, v34);
        sub_19EEC5764((uint64_t)&v68);
        if (v36)
        {
          sub_19EEC3418(v72);
          sub_19EEC3418((uint64_t)v71);
          *uint64_t v32 = v36;
          type metadata accessor for Bag.ValueOverride();
          return swift_storeEnumTagMultiPayload();
        }
        goto LABEL_53;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)v62, (uint64_t *)&unk_1E946FD20);
      long long v65 = 0u;
      long long v66 = 0u;
      uint64_t v67 = 0;
    }
    uint64_t v37 = &qword_1E946FA88;
    goto LABEL_25;
  }
  if (v13 == 1819242338 && v15 == 0xE400000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19EEBF040((uint64_t)v71, (uint64_t)&v68);
    uint64_t v39 = *((void *)&v69 + 1);
    if (*((void *)&v69 + 1))
    {
      uint64_t v40 = v70;
      __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
      char v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 88))(v39, v40);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
      if (v41 != 2)
      {
        sub_19EEC3418(v72);
        sub_19EEC3418((uint64_t)v71);
        *(unsigned char *)char v61 = v41 & 1;
        type metadata accessor for Bag.ValueOverride();
        return swift_storeEnumTagMultiPayload();
      }
      goto LABEL_53;
    }
    goto LABEL_51;
  }
  if (v13 == 0x616E6F6974636964 && v15 == 0xEA00000000007972 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    JSONObject.dictionary.getter((uint64_t)&v65);
    if (!*((void *)&v66 + 1))
    {
      uint64_t v37 = &qword_1E946F740;
LABEL_25:
      unint64_t v38 = (char *)&v65;
LABEL_52:
      sub_19EEBD664((uint64_t)v38, v37);
      goto LABEL_53;
    }
    long long v68 = v65;
    long long v69 = v66;
    uint64_t v42 = v67;
    uint64_t v70 = v67;
    uint64_t v43 = *((void *)&v66 + 1);
    __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v66 + 1));
    uint64_t v44 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v42 + 32))(MEMORY[0x1E4FBB960], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB968], v43, v42);
    sub_19EEC05FC((uint64_t)&v68);
    if (v44)
    {
LABEL_50:
      sub_19EEC3418(v72);
      sub_19EEC3418((uint64_t)v71);
      *char v61 = v44;
      type metadata accessor for Bag.ValueOverride();
      return swift_storeEnumTagMultiPayload();
    }
LABEL_53:
    uint64_t v51 = type metadata accessor for Bag.ValueOverride() | 0x4000000000000000;
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v52 = xmmword_19F260940;
    uint64_t v53 = MEMORY[0x1E4FBC860];
    *(void *)(v52 + 16) = v51;
    *(void *)(v52 + 24) = v53;
    goto LABEL_54;
  }
  if (v13 == 0x656C62756F64 && v15 == 0xE600000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19EEBF040((uint64_t)v71, (uint64_t)&v68);
    uint64_t v45 = *((void *)&v69 + 1);
    if (*((void *)&v69 + 1))
    {
      uint64_t v46 = v70;
      __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
      uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 80))(v45, v46);
      LOBYTE(v46) = v47;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
      if ((v46 & 1) == 0) {
        goto LABEL_50;
      }
      goto LABEL_53;
    }
    goto LABEL_51;
  }
  if (v13 == 7630441 && v15 == 0xE300000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19EEBF040((uint64_t)v71, (uint64_t)&v68);
    uint64_t v48 = *((void *)&v69 + 1);
    if (*((void *)&v69 + 1))
    {
      uint64_t v49 = v70;
      __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
      uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 40))(v48, v49);
      LOBYTE(v49) = v50;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
      if ((v49 & 1) == 0) {
        goto LABEL_50;
      }
      goto LABEL_53;
    }
LABEL_51:
    uint64_t v37 = (uint64_t *)&unk_1E946FD20;
    unint64_t v38 = (char *)&v68;
    goto LABEL_52;
  }
  if ((v13 != 7107189 || v15 != 0xE300000000000000) && (sub_19F1DD44C() & 1) == 0)
  {
    unint64_t v29 = type metadata accessor for Bag.ValueOverride() | 0x8000000000000000;
    sub_19EF5B580();
    swift_allocError();
    *(void *)uint64_t v30 = v13;
    *(void *)(v30 + 8) = v15;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  sub_19EEBF040((uint64_t)v71, (uint64_t)&v68);
  uint64_t v54 = *((void *)&v69 + 1);
  if (!*((void *)&v69 + 1))
  {
    sub_19EEBD664((uint64_t)&v68, (uint64_t *)&unk_1E946FD20);
    goto LABEL_64;
  }
  uint64_t v55 = v70;
  __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
  (*(void (**)(uint64_t, uint64_t))(v55 + 24))(v54, v55);
  uint64_t v57 = v56;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
  if (!v57)
  {
LABEL_64:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v6, 1, 1, v7);
    goto LABEL_65;
  }
  sub_19F1DB2FC();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v6, 1, v7) == 1)
  {
LABEL_65:
    uint64_t v37 = (uint64_t *)&unk_1EB392E50;
    unint64_t v38 = v6;
    goto LABEL_52;
  }
  sub_19EEC3418(v72);
  sub_19EEC3418((uint64_t)v71);
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
  v58(v10, v6, v7);
  v58((char *)v61, v10, v7);
  type metadata accessor for Bag.ValueOverride();
  return swift_storeEnumTagMultiPayload();
}

id sub_19F135A14(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Bag.ValueOverride();
  MEMORY[0x1F4188790](v8);
  size_t v10 = (double *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_19F135E4C(v2, (uint64_t)v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = *(unsigned __int8 *)v10;
      uint64_t v15 = self;
      id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v14);
      id v17 = objc_msgSend(v15, sel_frozenBagValueWithKey_value_valueType_, a1, v16, 1);
      goto LABEL_7;
    case 2u:
      double v18 = *v10;
      uint64_t v19 = self;
      id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, v18);
      id v21 = objc_msgSend(v19, sel_frozenBagValueWithKey_value_valueType_, a1, v20, 2);

      return v21;
    case 3u:
      uint64_t v22 = *(void *)v10;
      uint64_t v23 = self;
      id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v22);
      id v17 = objc_msgSend(v23, sel_frozenBagValueWithKey_value_valueType_, a1, v16, 3);
      goto LABEL_7;
    case 4u:
      uint64_t v24 = self;
      id v16 = (id)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(v24, sel_frozenBagValueWithKey_value_valueType_, a1, v16, 4);
LABEL_7:
      id v21 = v17;

      return v21;
    case 5u:
      (*(void (**)(char *, double *, uint64_t))(v5 + 32))(v7, v10, v4);
      uint64_t v25 = self;
      uint64_t v26 = (void *)sub_19F1DB25C();
      id v21 = objc_msgSend(v25, sel_frozenBagValueWithKey_value_valueType_, a1, v26, 5);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return v21;
    case 6u:
      uint64_t v27 = self;
      uint64_t v12 = (void *)sub_19F1DBB1C();
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v27, sel_frozenBagValueWithKey_value_valueType_, a1, v12, 6);
      goto LABEL_10;
    default:
      uint64_t v11 = self;
      uint64_t v12 = (void *)sub_19F1DC14C();
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v11, sel_frozenBagValueWithKey_value_valueType_, a1, v12, 0);
LABEL_10:
      id v21 = v13;

      return v21;
  }
}

uint64_t sub_19F135E34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return Bag.ValueOverride.init(deserializing:using:)(a1, a2);
}

uint64_t sub_19F135E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Bag.ValueOverride();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F135EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946E830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F135F18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19EFCAA1C();
  if (!v7) {
    goto LABEL_24;
  }
  uint64_t v9 = (void *)v7;
  uint64_t v10 = v8;
  uint64_t v11 = (void *)*a5;
  unint64_t v13 = sub_19EFB6E64(v7);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v17 = v12;
  if (v11[3] >= v16)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v12) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_19EFC07A0();
      id v20 = (void *)*a5;
      if (v17) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v22 = 8 * v13;
    *(void *)(v20[6] + v22) = v9;
    *(void *)(v20[7] + v22) = v10;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    sub_19EFCAA1C();
    if (v26)
    {
      uint64_t v28 = v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v33 = (void *)*a5;
        unint64_t v35 = sub_19EFB6E64((uint64_t)v28);
        uint64_t v36 = v33[2];
        BOOL v37 = (v34 & 1) == 0;
        uint64_t v38 = v36 + v37;
        if (__OFADD__(v36, v37)) {
          goto LABEL_25;
        }
        char v39 = v34;
        if (v33[3] < v38)
        {
          sub_19EFBB6C4(v38, 1);
          unint64_t v40 = sub_19EFB6E64((uint64_t)v28);
          if ((v39 & 1) != (v41 & 1)) {
            goto LABEL_27;
          }
          unint64_t v35 = v40;
        }
        uint64_t v42 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v42[7];
          swift_unknownObjectRelease();
          *(void *)(v30 + 8 * v35) = v29;
        }
        else
        {
          v42[(v35 >> 6) + 8] |= 1 << v35;
          uint64_t v43 = 8 * v35;
          *(void *)(v42[6] + v43) = v28;
          *(void *)(v42[7] + v43) = v29;
          uint64_t v44 = v42[2];
          BOOL v24 = __OFADD__(v44, 1);
          uint64_t v45 = v44 + 1;
          if (v24) {
            goto LABEL_26;
          }
          _OWORD v42[2] = v45;
        }
        sub_19EFCAA1C();
        uint64_t v28 = v31;
        uint64_t v29 = v32;
      }
      while (v31);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    return swift_release();
  }
  sub_19EFBB6C4(v16, a4 & 1);
  unint64_t v18 = sub_19EFB6E64((uint64_t)v9);
  if ((v17 & 1) == (v19 & 1))
  {
    unint64_t v13 = v18;
    id v20 = (void *)*a5;
    if ((v17 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    swift_unknownObjectRelease();
    *(void *)(v21 + 8 * v13) = v10;
    goto LABEL_13;
  }
LABEL_27:
  type metadata accessor for AMSBagKey(0);
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F1361D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Bag.ValueOverride();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F13623C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Bag.ValueOverride();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *_s13ValueOverrideOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 6u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v10 = sub_19F1DB34C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s13ValueOverrideOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 4:
    case 6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 5:
      uint64_t v3 = sub_19F1DB34C();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *_s13ValueOverrideOwcp(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 6u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 4u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 5u:
      uint64_t v7 = sub_19F1DB34C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *_s13ValueOverrideOwca(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_19F13623C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 6u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 5u:
        uint64_t v6 = sub_19F1DB34C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *_s13ValueOverrideOwtk(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v6 = sub_19F1DB34C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s13ValueOverrideOwta(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_19F13623C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      uint64_t v6 = sub_19F1DB34C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_19F136948@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  *a2 = *(void *)a1;
  a2[1] = v3;
  id v4 = v2;
  return swift_unknownObjectRetain();
}

uint64_t BaseObjectGraph.injectIfAvailable<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_19EEB8A6C;
  return BaseObjectGraph._injectIfAvailable<A>(_:)(a1, a2, a3);
}

void BaseObjectGraph.injectIfAvailable<A>(_:)()
{
}

void BaseObjectGraph.inject<A>(_:)()
{
}

{
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F1DCFCC();
  __break(1u);
}

void sub_19F136A9C()
{
}

uint64_t *Promise.__allocating_init(task:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = Promise.__allocating_init()();
  uint64_t v8 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  void v9[3] = 0;
  void v9[4] = a1;
  v9[5] = a2;
  v9[6] = v7;
  swift_retain();
  sub_19EE9A0F8((uint64_t)v6, (uint64_t)aT, (uint64_t)v9);
  swift_release();
  return v7;
}

uint64_t LazyPromise.TaskOutcome.resolve.getter(uint64_t a1)
{
  return a1;
}

uint64_t LazyPromise.TaskOutcome.reject.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t LazyPromise.__allocating_init(task:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = &type metadata for SyncTaskScheduler;
  uint64_t v9 = &protocol witness table for SyncTaskScheduler;
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v5[2] = *(void *)(v2 + 80);
  v5[3] = a1;
  v5[4] = a2;
  return LazyPromise.__allocating_init(on:perform:)(&v7, (uint64_t)sub_19F1377A8, (uint64_t)v5);
}

uint64_t sub_19F136E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  unint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  void v18[3] = 0;
  v18[4] = a7;
  void v18[5] = a5;
  v18[6] = a6;
  v18[7] = a1;
  v18[8] = a2;
  v18[9] = a3;
  v18[10] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19EE9A0F8((uint64_t)v16, (uint64_t)aD_0, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_19F136F70(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = v15;
  v8[6] = v16;
  _OWORD v8[3] = a7;
  void v8[4] = a8;
  long long v8[2] = a6;
  v8[7] = *(void *)(v16 - 8);
  uint64_t v10 = swift_task_alloc();
  v8[8] = v10;
  unint64_t v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v8[9] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_19F1370B8;
  return v13(v10);
}

uint64_t sub_19F1370B8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F137264;
  }
  else {
    uint64_t v2 = sub_19F1371CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F1371CC()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_19F137264()
{
  uint64_t v1 = *(void **)(v0 + 80);
  (*(void (**)(void *))(v0 + 32))(v1);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F1372E0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  long long v6[2] = a6;
  uint64_t v8 = *(void *)(*(void *)a6 + 80);
  void v6[3] = v8;
  v6[4] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[5] = v9;
  char v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  v6[6] = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_19F137430;
  return v12(v9);
}

uint64_t sub_19F137430()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F1375D4;
  }
  else {
    uint64_t v2 = sub_19F137544;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F137544()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  Promise.resolve(_:)(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_19F1375D4()
{
  uint64_t v1 = *(void **)(v0 + 56);
  Promise.reject(_:)(v1);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13764C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F137694(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EE17780;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E9475518
                                                                                   + dword_1E9475518);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19F137770()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F1377A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19F136E24(a1, a2, a3, a4, v4[3], v4[4], v4[2]);
}

uint64_t type metadata accessor for LazyPromise.TaskOutcome()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F1377CC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

void sub_19F13781C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_19EEB8A6C;
  uint64_t v2 = (char *)&dword_1E94755B0 + dword_1E94755B0;
  __asm { BR              X9; sub_19F136F70 }
}

uint64_t OpaqueMetatype.description.getter()
{
  return sub_19F1DD98C();
}

uint64_t OpaqueMetatype.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t OpaqueMetatype.init(of:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  *a2 = DynamicType;
  return result;
}

uint64_t OpaqueMetatype.init<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_2Tm(v11);
  v8(a2, a3);
  __swift_project_boxed_opaque_existential_1(v11, AssociatedTypeWitness);
  uint64_t DynamicType = swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  *a4 = DynamicType;
  return result;
}

uint64_t OpaqueMetatype.hash(into:)()
{
  return sub_19F1DD73C();
}

BOOL static OpaqueMetatype.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t OpaqueMetatype.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F137AF0()
{
  return sub_19F1DD98C();
}

uint64_t sub_19F137AFC()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F137B44()
{
  return sub_19F1DD73C();
}

__n128 AppleServicesEncoder.init(_:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  a2[2] = *(_OWORD *)(a1 + 32);
  a2[3] = v2;
  long long v3 = *(_OWORD *)(a1 + 80);
  a2[4] = *(_OWORD *)(a1 + 64);
  a2[5] = v3;
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v5;
  return result;
}

uint64_t sub_19F137B8C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_19F137C1C()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

JetEngine::AppleServicesEncoder::SigningStyle_optional __swiftcall AppleServicesEncoder.SigningStyle.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_19F1DD0FC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t AppleServicesEncoder.SigningStyle.rawValue.getter()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746C7561666564;
      break;
    case 2:
      uint64_t result = 0x656D697270;
      break;
    case 3:
      uint64_t result = 0x6D726F6674616C70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F137D68(unsigned __int8 *a1, char *a2)
{
  return sub_19F03A6E8(*a1, *a2);
}

uint64_t sub_19F137D74()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F137E44()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F137EFC()
{
  return sub_19F1DD78C();
}

JetEngine::AppleServicesEncoder::SigningStyle_optional sub_19F137FC8(Swift::String *a1)
{
  return AppleServicesEncoder.SigningStyle.init(rawValue:)(*a1);
}

void sub_19F137FD4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x746C7561666564;
      goto LABEL_3;
    case 2:
      *a1 = 0x656D697270;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x6D726F6674616C70;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_19F138064()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F1380C4()
{
  return sub_19F1DC0EC();
}

id AppleServicesEncoder.Configuration.init(bag:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *a1;
  id v3 = objc_msgSend(self, sel_ams_sharedAccountStore);
  *(void *)(a2 + 32) = sub_19EEBDC10(0, qword_1EB392F30);
  *(void *)(a2 + 40) = &protocol witness table for ACAccountStore;
  *(void *)(a2 + 8) = v3;
  id result = objc_msgSend(self, sel_currentProcess);
  *(void *)(a2 + 48) = result;
  *(void *)(a2 + 56) = 0;
  *(_WORD *)(a2 + 64) = 1;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 72) = 0;
  return result;
}

uint64_t *AppleServicesEncoder.Configuration.withAccountProvider(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EE45C38(v2, a2);
  return __swift_assign_boxed_opaque_existential_1((uint64_t *)(a2 + 8), a1);
}

void AppleServicesEncoder.Configuration.withProcess(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EE45C38(v2, a2);
  objc_storeStrong((id *)(a2 + 48), a1);
}

uint64_t AppleServicesEncoder.Configuration.withMediaTokenService(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EE45C38(v2, a2);
  swift_unknownObjectRetain();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(a2 + 56) = a1;
  return result;
}

uint64_t AppleServicesEncoder.Configuration.withProtocolHandlingEnabled(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_19EE45C38(v2, a2);
  *(unsigned char *)(a2 + 64) = a1;
  return result;
}

uint64_t AppleServicesEncoder.Configuration.withAnonymityEnabled(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_19EE45C38(v2, a2);
  *(unsigned char *)(a2 + 65) = a1;
  return result;
}

uint64_t AppleServicesEncoder.Configuration.withAllowedSchemes(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EE45C38(v2, a2);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 72) = a1;
  return result;
}

uint64_t sub_19F13837C(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  swift_allocError();
  *uint64_t v2 = a1;
  id v3 = a1;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_19F1383F0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EE1C0A4;
  return AppleServicesEncoder.encodeRequest(fromContentsOf:)(a2);
}

uint64_t sub_19F138488(uint64_t a1)
{
  *(void *)&long long v5 = &type metadata for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty;
  sub_19EE6D228();
  sub_19F1DCC8C();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_19EE77500((uint64_t)v7), (v3 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v5);
  }
  else
  {
    long long v5 = 0u;
    long long v6 = 0u;
  }
  sub_19EE7760C((uint64_t)v7);
  if (*((void *)&v6 + 1))
  {
    sub_19EEBDC00(&v5, v8);
    sub_19EEBDBA4((uint64_t)v8, (uint64_t)v7);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      return v5 & 1;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v5, &qword_1EB393260);
    if (qword_1E946F730 != -1) {
      swift_once();
    }
    sub_19F1DD95C();
    if (v7[0]) {
      sub_19F199C14((uint64_t)"JetEngine/NetRequest.swift", 26, 2, 160);
    }
    return 0;
  }
  return result;
}

uint64_t sub_19F1385E4(uint64_t a1)
{
  *(void *)&long long v5 = &type metadata for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty;
  sub_19EE6D228();
  sub_19F1DCC8C();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_19EE77500((uint64_t)v7), (v3 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v5);
  }
  else
  {
    long long v5 = 0u;
    long long v6 = 0u;
  }
  sub_19EE7760C((uint64_t)v7);
  if (*((void *)&v6 + 1))
  {
    sub_19EEBDC00(&v5, v8);
    sub_19EEBDBA4((uint64_t)v8, (uint64_t)v7);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      return v5 & 1;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v5, &qword_1EB393260);
    if (qword_1E946F730 != -1) {
      swift_once();
    }
    sub_19F1DD95C();
    if (v7[0]) {
      sub_19F199BF8((uint64_t)"JetEngine/NetRequest.swift", 26, 2, 160);
    }
    return 0;
  }
  return result;
}

uint64_t sub_19F138740(uint64_t a1)
{
  *(void *)&long long v5 = &type metadata for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty;
  sub_19EE6D228();
  sub_19F1DCC8C();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_19EE77500((uint64_t)v7), (v3 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v5);
  }
  else
  {
    long long v5 = 0u;
    long long v6 = 0u;
  }
  sub_19EE7760C((uint64_t)v7);
  if (*((void *)&v6 + 1))
  {
    sub_19EEBDC00(&v5, v8);
    sub_19EEBDBA4((uint64_t)v8, (uint64_t)v7);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      return v5 & 1;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v5, &qword_1EB393260);
    if (qword_1E946F730 != -1) {
      swift_once();
    }
    sub_19F1DD95C();
    if (v7[0]) {
      sub_19F199308((uint64_t)"JetEngine/NetRequest.swift", 26, 2, 160);
    }
    return 0;
  }
  return result;
}

unint64_t sub_19F1388A0()
{
  unint64_t result = qword_1E94755D0;
  if (!qword_1E94755D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94755D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleServicesEncoder()
{
  return &type metadata for AppleServicesEncoder;
}

ValueMetadata *type metadata accessor for AppleServicesEncoder.Configuration()
{
  return &type metadata for AppleServicesEncoder.Configuration;
}

ValueMetadata *type metadata accessor for AppleServicesEncoder.FixUp()
{
  return &type metadata for AppleServicesEncoder.FixUp;
}

unint64_t sub_19F13895C()
{
  unint64_t result = qword_1E946E618;
  if (!qword_1E946E618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946E618);
  }
  return result;
}

uint64_t sub_19F1389B0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F1389F0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F138A00(void *a1)
{
  return sub_19F13837C(a1);
}

uint64_t StandardMetricsIDService.init(accountProvider:process:bag:topic:shouldMigrate:eventRecorder:resetInterval:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W5>, uint64_t a5@<X6>, uint64_t *a6@<X8>, double a7@<D0>)
{
  swift_bridgeObjectRelease();
  uint64_t v16 = *a3;
  sub_19EEC4154(a1, (uint64_t)v15);
  StandardMetricsIDService.init(bag:accountProvider:process:activeITunesAccountRequired:shouldMigrate:resetInterval:)(&v16, (uint64_t)v15, a2, 0, a4, a6, a7);
  __swift_destroy_boxed_opaque_existential_1Tm(a5);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t StandardMetricsIDService.init(bag:accountProvider:process:activeITunesAccountRequired:shouldMigrate:resetInterval:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t *a6@<X8>, double a7@<D0>)
{
  uint64_t v13 = *a1;
  sub_19EEC4154(a2, (uint64_t)v29);
  *((void *)&v30 + 1) = a3;
  *(void *)&long long v31 = v13;
  *((double *)&v31 + 1) = a7;
  char v32 = a4;
  if (a5)
  {
    char v14 = a4 & 1;
    sub_19EEC4154(a2, (uint64_t)&v26);
    BOOL v24 = &type metadata for AMSMetricsIDService;
    uint64_t v25 = &off_1EF1405B0;
    *(void *)&long long v23 = swift_allocObject();
    sub_19F0506C4((uint64_t)v29, v23 + 16);
    type metadata accessor for MTStandardIDServiceWrapper();
    uint64_t v15 = (void *)swift_allocObject();
    id v16 = objc_allocWithZone((Class)JESoftLinkedMTStandardIDService);
    swift_unknownObjectRetain_n();
    id v17 = a3;
    v15[2] = objc_msgSend(v16, sel_initWithAMSBag_, v13);
    uint64_t v15[3] = v13;
    v15[4] = 0;
    __swift_destroy_boxed_opaque_existential_1Tm(a2);
    sub_19F05081C((uint64_t)v29);
    a6[3] = (uint64_t)&type metadata for MigrationMetricsIDService;
    a6[4] = (uint64_t)&off_1EF145628;
    uint64_t v18 = swift_allocObject();
    *a6 = v18;
    sub_19EEBB420(&v26, v18 + 16);
    *(void *)(v18 + 56) = v17;
    *(void *)(v18 + 64) = v13;
    uint64_t result = sub_19EEBB420(&v23, v18 + 72);
    *(void *)(v18 + 112) = v15;
    *(unsigned char *)(v18 + 120) = v14;
  }
  else
  {
    uint64_t v27 = &type metadata for AMSMetricsIDService;
    uint64_t v28 = &off_1EF1405B0;
    uint64_t v20 = swift_allocObject();
    *(void *)&long long v26 = v20;
    long long v21 = v31;
    *(_OWORD *)(v20 + 48) = v30;
    *(_OWORD *)(v20 + 64) = v21;
    *(unsigned char *)(v20 + 80) = v32;
    long long v22 = v29[1];
    *(_OWORD *)(v20 + 16) = v29[0];
    *(_OWORD *)(v20 + 32) = v22;
    __swift_destroy_boxed_opaque_existential_1Tm(a2);
    return sub_19EEBB420(&v26, (uint64_t)a6);
  }
  return result;
}

uint64_t sub_19F138C90()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 81, 7);
}

uint64_t sub_19F138CD8()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  swift_release();
  return MEMORY[0x1F4186498](v0, 121, 7);
}

uint64_t StandardMetricsIDService.init(bag:accountProvider:process:shouldMigrate:perfEventRecorder:resetInterval:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>, double a7@<D0>)
{
  uint64_t v15 = *a1;
  sub_19EEC4154(a2, (uint64_t)v14);
  StandardMetricsIDService.init(bag:accountProvider:process:activeITunesAccountRequired:shouldMigrate:resetInterval:)(&v15, (uint64_t)v14, a3, 0, a4, a6, a7);
  sub_19F138DC8(a5);
  return __swift_destroy_boxed_opaque_existential_1Tm(a2);
}

uint64_t sub_19F138DC8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EC08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t StandardMetricsIDService.idFields(forTopic:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  uint64_t v3[2] = a1;
  return MEMORY[0x1F4188298](sub_19F138E4C, 0, 0);
}

uint64_t sub_19F138E4C()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19F138F54;
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return v8(v6, v5, v2, v3);
}

uint64_t sub_19F138F54(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t StandardMetricsIDService.idFields(forTopic:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  void v4[3] = a2;
  return MEMORY[0x1F4188298](sub_19F139078, 0, 0);
}

uint64_t sub_19F139078()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19F139184;
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  return v9(v7, v5, v6, v2, v3);
}

uint64_t sub_19F139184(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t StandardMetricsIDService.queryID(forTopic:withType:)(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 57) = *a3;
  return MEMORY[0x1F4188298](sub_19F1392B0, 0, 0);
}

uint64_t sub_19F1392B0()
{
  char v1 = *(unsigned char *)(v0 + 57);
  uint64_t v2 = *(void **)(v0 + 32);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  *(unsigned char *)(v0 + 56) = v1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 24) + **(int **)(v4 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19F1393D0;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  return v9(v7, v6, v0 + 56, v3, v4);
}

uint64_t sub_19F1393D0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 48) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return MEMORY[0x1F4188298](sub_19EF71B4C, 0, 0);
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t StandardMetricsIDService.queryID(forTopic:withType:on:)(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(unsigned char *)(v5 + 65) = *a3;
  return MEMORY[0x1F4188298](sub_19F13954C, 0, 0);
}

uint64_t sub_19F13954C()
{
  char v1 = *(unsigned char *)(v0 + 65);
  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  *(unsigned char *)(v0 + 64) = v1;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 32)
                                                                                     + **(int **)(v4 + 32));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19F139670;
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 16);
  return v10(v8, v6, v0 + 64, v7, v3, v4);
}

uint64_t sub_19F139670(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 56) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return MEMORY[0x1F4188298](sub_19F060F90, 0, 0);
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t StandardMetricsIDService.resetID(forTopics:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_19F1397E0, 0, 0);
}

uint64_t sub_19F1397E0()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 40) + **(int **)(v3 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19EF8D3A8;
  uint64_t v5 = v0[2];
  return v7(v5, v2, v3);
}

uint64_t StandardMetricsIDService.performMaintenance()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_19F139908, 0, 0);
}

uint64_t sub_19F139908()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 48) + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19F12BB40;
  return v6(v2, v3);
}

uint64_t sub_19F139A08(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  uint64_t v3[2] = a1;
  return MEMORY[0x1F4188298](sub_19F138E4C, 0, 0);
}

uint64_t sub_19F139A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  void v4[3] = a2;
  return MEMORY[0x1F4188298](sub_19F139078, 0, 0);
}

uint64_t sub_19F139A50(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 57) = *a3;
  return MEMORY[0x1F4188298](sub_19F1392B0, 0, 0);
}

uint64_t sub_19F139A7C(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(unsigned char *)(v5 + 65) = *a3;
  return MEMORY[0x1F4188298](sub_19F13954C, 0, 0);
}

uint64_t sub_19F139AA8(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_19F1397E0, 0, 0);
}

uint64_t sub_19F139AC8()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_19F139908, 0, 0);
}

ValueMetadata *type metadata accessor for StandardMetricsIDService()
{
  return &type metadata for StandardMetricsIDService;
}

void Dependency.init<A>(satisfying:with:)()
{
}

{
  sub_19F139B58();
}

{
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F1DCFCC();
  __break(1u);
}

void sub_19F139B58()
{
}

uint64_t destroy for JetPackAssetSQLiteRecord(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 48);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    return sub_19EEA072C(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for JetPackAssetSQLiteRecord(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = (uint64_t *)(a2 + 40);
  unint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
  }
  else
  {
    uint64_t v7 = *v5;
    sub_19EEA0784(*v5, v6);
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for JetPackAssetSQLiteRecord(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t *)(a2 + 10);
  unint64_t v6 = *((void *)a2 + 6);
  if (*(void *)(a1 + 48) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_19EEA0784(*v5, v6);
      uint64_t v9 = *(void *)(a1 + 40);
      unint64_t v10 = *(void *)(a1 + 48);
      *(void *)(a1 + 40) = v8;
      *(void *)(a1 + 48) = v6;
      sub_19EEA072C(v9, v10);
      return a1;
    }
    sub_19F139E00(a1 + 40);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
    return a1;
  }
  uint64_t v7 = *v5;
  sub_19EEA0784(*v5, v6);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v6;
  return a1;
}

uint64_t sub_19F139E00(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for JetPackAssetSQLiteRecord(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(a2 + 40);
  unint64_t v7 = *(void *)(a1 + 48);
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 48);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *(void *)(a1 + 40);
      *(void *)(a1 + 40) = *v6;
      *(void *)(a1 + 48) = v8;
      sub_19EEA072C(v9, v7);
      return a1;
    }
    sub_19F139E00(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackAssetSQLiteRecord(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JetPackAssetSQLiteRecord(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackAssetSQLiteRecord()
{
  return &type metadata for JetPackAssetSQLiteRecord;
}

uint64_t LocalizerDefaultValue.init(stringLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  *(unsigned char *)(a4 + 17) = 1;
  return result;
}

uint64_t LocalizerDefaultValue.description.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 16);
  if (*(unsigned char *)(v0 + 17))
  {
    uint64_t v4 = sub_19F1DCD2C();
    sub_19EFF2324(v1, v2, v3, 1);
    return v4;
  }
  else
  {
    sub_19EFF2334(*(void *)v0, *(void *)(v0 + 8), *(unsigned __int8 *)(v0 + 16), 0);
  }
  return v1;
}

unint64_t sub_19F13A074()
{
  unint64_t result = qword_1E9475640;
  if (!qword_1E9475640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475640);
  }
  return result;
}

uint64_t sub_19F13A0C8()
{
  return MEMORY[0x1E4FBBA08];
}

uint64_t sub_19F13A0D8()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 16);
  if (*(unsigned char *)(v0 + 17))
  {
    uint64_t v4 = sub_19F1DCD2C();
    sub_19EFF2324(v1, v2, v3, 1);
    return v4;
  }
  else
  {
    sub_19EFF2334(*(void *)v0, *(void *)(v0 + 8), *(unsigned __int8 *)(v0 + 16), 0);
  }
  return v1;
}

unint64_t sub_19F13A16C()
{
  unint64_t result = qword_1E9475648;
  if (!qword_1E9475648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475648);
  }
  return result;
}

uint64_t sub_19F13A1C0()
{
  return MEMORY[0x1E4FBBA20];
}

uint64_t sub_19F13A1CC()
{
  return MEMORY[0x1E4FBBA18];
}

__n128 sub_19F13A1D8@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  a2[1].n128_u8[1] = 1;
  return result;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for LocalizerDefaultValue()
{
  return &type metadata for LocalizerDefaultValue;
}

uint64_t destroy for LocalizerDefaultValue.Store(uint64_t a1)
{
  return sub_19EFF2324(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(unsigned char *)(a1 + 17));
}

uint64_t _s9JetEngine21LocalizerDefaultValueV5StoreOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 16);
  sub_19EFF2334(*(void *)a2, v4, v6, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v5;
  return a1;
}

uint64_t _s9JetEngine21LocalizerDefaultValueV5StoreOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 16);
  sub_19EFF2334(*(void *)a2, v4, v6, v5);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 17);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v10 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v5;
  sub_19EFF2324(v7, v8, v10, v9);
  return a1;
}

uint64_t _s9JetEngine21LocalizerDefaultValueV5StoreOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 17);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  sub_19EFF2324(v5, v6, v8, v7);
  return a1;
}

uint64_t _s9JetEngine21LocalizerDefaultValueV5StoreOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s9JetEngine21LocalizerDefaultValueV5StoreOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 17) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19F13A3F0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17);
}

uint64_t sub_19F13A3F8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 17) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LocalizerDefaultValue.Store()
{
  return &type metadata for LocalizerDefaultValue.Store;
}

uint64_t sub_19F13A418(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a6;
  char v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  char v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v7;
  *char v7 = v6;
  v7[1] = sub_19F13A4F8;
  return v9(v6 + 16);
}

uint64_t sub_19F13A4F8()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    unsigned __int8 v2 = sub_19F13A678;
  }
  else {
    unsigned __int8 v2 = sub_19F13A60C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F13A60C()
{
  sub_19F1ACEEC(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F13A678()
{
  uint64_t v1 = *(void **)(v0 + 40);
  sub_19F07CF48(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13A6E8()
{
  uint64_t v1 = *(void **)(v0 + 40);
  sub_19F07D7A8(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13A758(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a6;
  char v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  char v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v7;
  *char v7 = v6;
  v7[1] = sub_19F13A838;
  return v9(v6 + 16);
}

uint64_t sub_19F13A838()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    unsigned __int8 v2 = sub_19F13A9B4;
  }
  else {
    unsigned __int8 v2 = sub_19F13A94C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F13A94C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_19F1AD72C(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13A9B4()
{
  uint64_t v1 = *(void **)(v0 + 40);
  sub_19F07DA6C(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13AA24()
{
  uint64_t v1 = *(void **)(v0 + 48);
  sub_19F07DFD0(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13AA94()
{
  uint64_t v1 = *(void **)(v0 + 40);
  sub_19F07D23C(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13AB04(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 56) = a6;
  char v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  char v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 64) = v7;
  *char v7 = v6;
  v7[1] = sub_19F13ABE4;
  return v9(v6 + 16);
}

uint64_t sub_19F13ABE4()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    unsigned __int8 v2 = sub_19F13AD68;
  }
  else {
    unsigned __int8 v2 = sub_19F13ACF8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F13ACF8()
{
  sub_19F1AEC1C(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F13AD68()
{
  uint64_t v1 = *(void **)(v0 + 72);
  sub_19F07F3AC(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13ADD8()
{
  uint64_t v1 = *(void **)(v0 + 32);
  sub_19F07FC5C(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13AE48()
{
  uint64_t v1 = *(void **)(v0 + 128);
  sub_19F07FEDC(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13AEB8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 56) = a6;
  char v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  char v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 64) = v7;
  *char v7 = v6;
  v7[1] = sub_19F13AF98;
  return v9(v6 + 16);
}

uint64_t sub_19F13AF98()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    unsigned __int8 v2 = sub_19F13D1A0;
  }
  else {
    unsigned __int8 v2 = sub_19F13D1A8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F13B0AC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a6;
  char v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  char v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v7;
  *char v7 = v6;
  v7[1] = sub_19F13B18C;
  return v9(v6 + 40);
}

uint64_t sub_19F13B18C()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    unsigned __int8 v2 = sub_19F13B304;
  }
  else {
    unsigned __int8 v2 = sub_19F13B2A0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F13B2A0()
{
  sub_19F1B0014(*(unsigned char *)(v0 + 40));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F13B304()
{
  uint64_t v1 = *(void **)(v0 + 32);
  sub_19F07FC34(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13B374(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a6;
  char v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  char v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v7;
  *char v7 = v6;
  v7[1] = sub_19F13B454;
  return v9(v6 + 16);
}

uint64_t sub_19F13B454()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    unsigned __int8 v2 = sub_19F13B5D4;
  }
  else {
    unsigned __int8 v2 = sub_19F13B568;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F13B568()
{
  sub_19F1B3624(*(void *)(v0 + 16));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F13B5D4()
{
  uint64_t v1 = *(void **)(v0 + 40);
  sub_19F0816E8(v1);

  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13B644(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  long long v6[2] = a6;
  type metadata accessor for JSIntentResult();
  uint64_t v8 = swift_task_alloc();
  void v6[3] = v8;
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  char v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  *char v9 = v6;
  v9[1] = sub_19F13B758;
  return v11(v8);
}

uint64_t sub_19F13B758()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    unsigned __int8 v2 = sub_19F13B8F4;
  }
  else {
    unsigned __int8 v2 = sub_19F13B86C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F13B86C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_19F1B364C(v1);
  sub_19EE492E0(v1, (uint64_t (*)(void))type metadata accessor for JSIntentResult);
  swift_task_dealloc();
  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13B8F4()
{
  uint64_t v1 = *(void **)(v0 + 40);
  sub_19F081710(v1);

  swift_task_dealloc();
  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19F13B96C()
{
  uint64_t v1 = *(void **)(v0 + 40);
  sub_19F081CE8(v1);

  swift_task_dealloc();
  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

__n128 Bag.FetchConfiguration.init(profile:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  unint64_t v3 = a1[1].n128_u64[0];
  unint64_t v4 = a1[1].n128_u64[1];
  *a2 = *a1;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  a2[2].n128_u64[0] = 0;
  a2[2].n128_u8[8] = 0;
  return result;
}

uint64_t Bag.FetchConfiguration.profile.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Bag.FetchConfiguration.profile.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  *uint64_t v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*Bag.FetchConfiguration.profile.modify())()
{
  return nullsub_1;
}

uint64_t Bag.FetchConfiguration.withProfile(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = *(void **)(v2 + 32);
  char v7 = *(unsigned char *)(v2 + 40);
  *(void *)a2 = *a1;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = v7;
  id v8 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *Bag.FetchConfiguration.process.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void Bag.FetchConfiguration.process.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

uint64_t (*Bag.FetchConfiguration.process.modify())()
{
  return nullsub_1;
}

uint64_t Bag.FetchConfiguration.withProcess(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  char v6 = *(unsigned char *)(v2 + 40);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = a1;
  *(unsigned char *)(a2 + 40) = v6;
  id v7 = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Bag.FetchConfiguration.wantsAutomaticUpdates.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t Bag.FetchConfiguration.wantsAutomaticUpdates.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t (*Bag.FetchConfiguration.wantsAutomaticUpdates.modify())()
{
  return nullsub_1;
}

uint64_t Bag.FetchConfiguration.withWantsAutomaticUpdates(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2[1];
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  char v6 = (void *)v2[4];
  *(void *)a2 = *v2;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = a1;
  id v7 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F13BC84()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F13BCF0()
{
  uint64_t v1 = *(void **)(v0 + 376);
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t static Bag.fetchBag(forProfile:)(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v5;
  *(void *)(v9 + 32) = v8;
  *(void *)(v9 + 40) = v7;
  *(void *)(v9 + 48) = 0;
  *(unsigned char *)(v9 + 56) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391058);
  uint64_t v10 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  *(void *)(v10 + 16) = v11;
  *(void *)(v10 + 24) = v12;
  *(unsigned char *)(v10 + 32) = 0;
  uint64_t v13 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  char v14 = (void *)swift_allocObject();
  uint64_t v14[2] = 0;
  void v14[3] = 0;
  v14[4] = &unk_1E9475688;
  void v14[5] = v9;
  v14[6] = v10;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_19EE9A0F8((uint64_t)v4, (uint64_t)&unk_1E9475690, (uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v10;
}

uint64_t static Bag.fetchBag(forProfile:as:wantsAutomaticUpdates:)(uint64_t *a1, void *a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v11 = a1[3];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v10;
  *(void *)(v13 + 24) = v9;
  *(void *)(v13 + 32) = v12;
  *(void *)(v13 + 40) = v11;
  *(void *)(v13 + 48) = a2;
  *(unsigned char *)(v13 + 56) = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391058);
  uint64_t v14 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 16) = 0;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  *(void *)(v14 + 16) = v15;
  *(void *)(v14 + 24) = v16;
  *(unsigned char *)(v14 + 32) = 0;
  uint64_t v17 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  void v18[3] = 0;
  v18[4] = &unk_1E9475698;
  void v18[5] = v13;
  v18[6] = v14;
  id v19 = a2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v20 = v19;
  swift_retain();
  sub_19EE9A0F8((uint64_t)v8, (uint64_t)&unk_1E94756A0, (uint64_t)v18);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v14;
}

uint64_t static Bag.fetchBag(forProfile:wantsAutomaticUpdates:)(uint64_t *a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v9 = a1[3];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v7;
  *(void *)(v11 + 32) = v10;
  *(void *)(v11 + 40) = v9;
  *(void *)(v11 + 48) = 0;
  *(unsigned char *)(v11 + 56) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391058);
  uint64_t v12 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  *(void *)(v12 + 16) = v13;
  *(void *)(v12 + 24) = v14;
  *(unsigned char *)(v12 + 32) = 0;
  uint64_t v15 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = 0;
  void v16[3] = 0;
  id v16[4] = &unk_1E94756A8;
  v16[5] = v11;
  v16[6] = v12;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_19EE9A0F8((uint64_t)v6, (uint64_t)aV_0, (uint64_t)v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v12;
}

uint64_t Bag.withLatestChanges.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  v23[1] = &unk_1EF169658;
  uint64_t v5 = swift_dynamicCastObjCProtocolConditional();
  if (!v5)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_profile);
      uint64_t v9 = sub_19F1DBD7C();
      uint64_t v11 = v10;

      id v12 = objc_msgSend(v4, sel_profileVersion);
      uint64_t v13 = sub_19F1DBD7C();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();

      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v9;
      *(void *)(v16 + 24) = v11;
      *(void *)(v16 + 32) = v13;
      *(void *)(v16 + 40) = v15;
      *(void *)(v16 + 48) = 0;
      *(unsigned char *)(v16 + 56) = 0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391058);
      uint64_t v7 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
      uint64_t v17 = swift_allocObject();
      *(_DWORD *)(v17 + 16) = 0;
      uint64_t v18 = MEMORY[0x1E4FBC860];
      *(void *)(v7 + 16) = v17;
      *(void *)(v7 + 24) = v18;
      *(unsigned char *)(v7 + 32) = 0;
      uint64_t v19 = sub_19F1DC37C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v3, 1, 1, v19);
      id v20 = (void *)swift_allocObject();
      v20[2] = 0;
      uint64_t v20[3] = 0;
      void v20[4] = &unk_1E94756B8;
      void v20[5] = v16;
      v20[6] = v7;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_19EE9A0F8((uint64_t)v3, (uint64_t)&unk_1E94756C0, (uint64_t)v20);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release();
      return v7;
    }
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391058);
    uint64_t v7 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v21 = swift_allocObject();
    *(_DWORD *)(v21 + 16) = 0;
    *(void *)(v7 + 16) = v21;
    *(void *)(v7 + 24) = v4;
    *(unsigned char *)(v7 + 32) = 1;
    swift_unknownObjectRetain();
    return v7;
  }
  uint64_t v6 = (void *)v5;
  swift_unknownObjectRetain();
  if (!objc_msgSend(v6, sel_replacingSnapshotIfNeeded))
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  swift_getObjectType();
  sub_19F1BD3A8();
  uint64_t v7 = sub_19F13CE50((uint64_t)sub_19F13C63C, 0);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v7;
}

uint64_t sub_19F13C63C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_unknownObjectRetain();
}

uint64_t Bag.snapshot.getter()
{
  swift_getObjectType();
  sub_19F1BD3A8();
  uint64_t v0 = sub_19F13CE50((uint64_t)sub_19F13D188, 0);
  swift_release();
  return v0;
}

uint64_t Bag.withLatestChanges()(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 168) = a1;
  *(void *)(v2 + 176) = v3;
  return MEMORY[0x1F4188298](sub_19F13C6E0, 0, 0);
}

uint64_t sub_19F13C6E0()
{
  *(void *)(v0 + 184) = Bag.withLatestChanges.getter();
  return MEMORY[0x1F4188298](sub_19F13C754, 0, 0);
}

uint64_t sub_19F13C754()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F13C818;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF52E9C(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1EB3909D0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F13C818()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 192) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F002B68;
  }
  else
  {
    **(void **)(v1 + 168) = *(void *)(v1 + 160);
    uint64_t v3 = sub_19F002B04;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t Bag.snapshot()(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 168) = a1;
  *(void *)(v2 + 176) = v3;
  return MEMORY[0x1F4188298](sub_19F13C960, 0, 0);
}

uint64_t sub_19F13C960()
{
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_19F1BD3A8();
  *(void *)(v0 + 184) = sub_19F13CE50((uint64_t)sub_19F13D188, 0);
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4188298](sub_19F13CA18, 0, 0);
}

uint64_t sub_19F13CA18()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19F13CADC;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF52E9C(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1EB3909D0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F13CADC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 192) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F13D184;
  }
  else
  {
    **(void **)(v1 + 168) = *(void *)(v1 + 160);
    uint64_t v3 = sub_19F13D1A4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F13CC0C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EEB8A6C;
  return sub_19EEDBBA4(a1, (_OWORD *)(v1 + 16));
}

uint64_t sub_19F13CCB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EE17780;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E9475668
                                                                                   + dword_1E9475668);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19F13CDA4(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v4 = *a1;
  a2(&v3, &v4);
  sub_19EE34290(v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_19F13CE50(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = &type metadata for SyncTaskScheduler;
  uint64_t v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391058);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = 0;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  _OWORD v7[3] = a2;
  void v7[4] = v4;
  v9[0] = sub_19F13D138;
  v9[1] = v7;
  void v9[2] = sub_19F13D144;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF5700C((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1E946D6A0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

void _s18FetchConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t _s18FetchConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t _s18FetchConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s18FetchConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for Bag.FetchConfiguration()
{
  return &type metadata for Bag.FetchConfiguration;
}

uint64_t sub_19F13D138(uint64_t *a1)
{
  return sub_19F13CDA4(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

void sub_19F13D144(void *a1)
{
}

uint64_t sub_19F13D14C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F13D188@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_19F13C63C(a1, a2);
}

uint64_t static JetNWActivityDomain.jet.getter()
{
  return 45;
}

unint64_t sub_19F13D1BC()
{
  unint64_t result = qword_1E9475750;
  if (!qword_1E9475750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475750);
  }
  return result;
}

ValueMetadata *type metadata accessor for JetNWActivityDomain()
{
  return &type metadata for JetNWActivityDomain;
}

ValueMetadata *type metadata accessor for RemovePreferenceMigrationRule()
{
  return &type metadata for RemovePreferenceMigrationRule;
}

uint64_t sub_19F13D23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 32))(v4, ObjectType, a2);
  uint64_t v8 = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 32))(v4, v8, a4);
}

uint64_t static URLRequestEncoder.PropertyScope.allProperties.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = MEMORY[0x1E4FBC860];
  uint64_t v1 = sub_19EE5B9A4(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9A0);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_19F13D36C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = MEMORY[0x1E4FBC860];
  uint64_t v1 = sub_19EE5B9A4(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F9A0);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_19F13D400(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19EEB8A6C;
  return URLRequestEncoder.encodeRequest(fromContentsOf:)(a1, a2);
}

_UNKNOWN **sub_19F13D4A0()
{
  return &protocol witness table for URLRequestEncoder.PropertyScope;
}

ValueMetadata *type metadata accessor for URLRequestEncoder()
{
  return &type metadata for URLRequestEncoder;
}

ValueMetadata *type metadata accessor for URLRequestEncoder.PropertyScope()
{
  return &type metadata for URLRequestEncoder.PropertyScope;
}

uint64_t sub_19F13D4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  a4[3] = (uint64_t *)&type metadata for _Wrapped_Encoder;
  a4[4] = (uint64_t *)sub_19F13D58C();
  uint64_t v9 = (uint64_t *)swift_allocObject();
  *a4 = v9;
  v9[5] = a2;
  v9[6] = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v9 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, v4, a2);
  v9[7] = a1;
  return swift_bridgeObjectRetain();
}

unint64_t sub_19F13D58C()
{
  unint64_t result = qword_1E9475768;
  if (!qword_1E9475768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475768);
  }
  return result;
}

uint64_t sub_19F13D5E0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t destroy for _Wrapped_Encoder(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for _Wrapped_Encoder(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for _Wrapped_Encoder(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for _Wrapped_Encoder(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for _Wrapped_Encoder()
{
  return &type metadata for _Wrapped_Encoder;
}

uint64_t sub_19F13D758()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_19F1DD8FC();
}

uint64_t sub_19F13D7CC()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_19F1DD8BC();
}

uint64_t sub_19F13D814(uint64_t a1, uint64_t a2)
{
  return sub_19F13D844(a1, a2, MEMORY[0x1E4FBC5C8]);
}

uint64_t sub_19F13D82C(uint64_t a1, uint64_t a2)
{
  return sub_19F13D844(a1, a2, MEMORY[0x1E4FBC5D0]);
}

uint64_t sub_19F13D844(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  return a3(v5, v6);
}

uint64_t JetpackBundle.url(forResource:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v2;
  long long v8 = a1[1];
  v12[0] = *a1;
  v12[1] = v8;
  JetpackBundle.url(forOptionalResource:)((uint64_t)v12, (uint64_t)v7);
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
  }
  sub_19EE6293C((uint64_t)v7);
  sub_19F0748E8();
  swift_allocError();
  return swift_willThrow();
}

uint64_t JetpackBundle.init(bundleURL:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_19F1DB2DC();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
  uint64_t v5 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithPath_, v5);

  uint64_t v7 = sub_19F1DB34C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  *a2 = v6;
  return result;
}

uint64_t static JetpackBundleError.== infix(_:_:)()
{
  return 1;
}

uint64_t JetpackBundleError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JetpackBundleError.hashValue.getter()
{
  return sub_19F1DD78C();
}

id JetpackBundle.bundle.getter()
{
  return *v0;
}

uint64_t JetpackBundle.sourceFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  id v4 = (void *)sub_19F1DBD4C();
  uint64_t v5 = (void *)sub_19F1DBD4C();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_19F1DB2BC();

    uint64_t v7 = sub_19F1DB34C();
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = sub_19F1DB34C();
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }
  return v8(v10, v11, 1, v9);
}

void JetpackBundle.url(forOptionalResource:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *v2;
  if (v11)
  {
    if (v11 == 1)
    {
      id v14 = v13;
      uint64_t v15 = (void *)sub_19F1DBD4C();
      uint64_t v16 = (void *)sub_19F1DBD4C();
      id v17 = objc_msgSend(v14, sel_URLForResource_withExtension_, v15, v16);

      if (v17)
      {
        sub_19F1DB2BC();

        uint64_t v18 = sub_19F1DB34C();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 0, 1, v18);
      }
      else
      {
        uint64_t v24 = sub_19F1DB34C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
      }
      sub_19F0A8578((uint64_t)v10, a2);

      return;
    }
    uint64_t v19 = (void *)sub_19F1DBD4C();
    if (!v12) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v19 = 0;
    if (!v12)
    {
LABEL_8:
      id v20 = 0;
      goto LABEL_9;
    }
  }
  id v20 = (void *)sub_19F1DBD4C();
LABEL_9:
  id v21 = objc_msgSend(v13, sel_URLForResource_withExtension_, v19, v20);

  if (v21)
  {
    sub_19F1DB2BC();

    uint64_t v22 = sub_19F1DB34C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 0, 1, v22);
  }
  else
  {
    uint64_t v23 = sub_19F1DB34C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 1, 1, v23);
  }
  sub_19F0A8578((uint64_t)v7, a2);
}

unint64_t sub_19F13DEE8()
{
  unint64_t result = qword_1E9475770;
  if (!qword_1E9475770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475770);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JetpackBundleError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F13DFD8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackBundleError()
{
  return &type metadata for JetpackBundleError;
}

ValueMetadata *type metadata accessor for JetpackBundle()
{
  return &type metadata for JetpackBundle;
}

unint64_t destroy for JetpackBundle.Resource(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for JetpackBundle.Resource(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = a2[1];
  }
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
  }
  return a1;
}

void *assignWithCopy for JetpackBundle.Resource(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  int v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithTake for JetpackBundle.Resource(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = a2[1];
    }
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  long long v8 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v8;
  return a1;
}

uint64_t getEnumTagSinglePayload for JetpackBundle.Resource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_19F13E2B0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_19F13E2D4(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[2] = 0;
    result[3] = 0;
    *unint64_t result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackBundle.Resource()
{
  return &type metadata for JetpackBundle.Resource;
}

uint64_t sub_19F13E318(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for LocalizationError(uint64_t a1)
{
  return sub_19F13E340(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_19F13E340(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9JetEngine17LocalizationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_19F13E318(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LocalizationError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_19F13E318(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_19F13E340(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for LocalizationError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_19F13E340(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19F13E4D0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_19F13E4E8(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LocalizationError()
{
  return &type metadata for LocalizationError;
}

BOOL static JetPackAssetRequestSourcePolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetPackAssetRequestSourcePolicy.debugDescription.getter()
{
  uint64_t v1 = 0x6E4F65746F6D6572;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C6E4F6C61636F6CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x647261646E617473;
  }
}

uint64_t JetPackAssetRequestSourcePolicy.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JetPackAssetRequestSourcePolicy.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F13E600()
{
  unint64_t result = qword_1E9475778;
  if (!qword_1E9475778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475778);
  }
  return result;
}

uint64_t dispatch thunk of JetPackAssetRequest._cacheKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of JetPackAssetRequest._sourcePolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

JetEngine::OptionalLogger::Key __swiftcall OptionalLogger.Key.init(_:)(JetEngine::OptionalLogger::Key result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t OptionalLogger.Key.lookupName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OptionalLogger.Key.lookupName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OptionalLogger.Key.lookupName.modify())()
{
  return nullsub_1;
}

unsigned char *OptionalLogger.Key.encode(_:)@<X0>(unsigned char *result@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6775626564;
  switch(*result)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x676E696E726177;
      break;
    case 2:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1868983913;
      break;
    case 3:
      break;
    default:
      uint64_t v3 = 0x726F727265;
      break;
  }
  a2[3] = MEMORY[0x1E4FBB1A0];
  *a2 = v3;
  a2[1] = v2;
  return result;
}

char OptionalLogger.Key.decode(_:)@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_19EEBDBA4(a1, (uint64_t)v6);
  int v3 = swift_dynamicCast();
  if (v3) {
    LOBYTE(v3) = LogMessageLevel.init(name:)(v5);
  }
  else {
    *a2 = 4;
  }
  return v3;
}

unsigned char *sub_19F13E830@<X0>(unsigned char *result@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6775626564;
  switch(*result)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x676E696E726177;
      break;
    case 2:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1868983913;
      break;
    case 3:
      break;
    default:
      uint64_t v3 = 0x726F727265;
      break;
  }
  a2[3] = MEMORY[0x1E4FBB1A0];
  *a2 = v3;
  a2[1] = v2;
  return result;
}

char sub_19F13E8BC@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_19EEBDBA4(a1, (uint64_t)v6);
  int v3 = swift_dynamicCast();
  if (v3) {
    LOBYTE(v3) = LogMessageLevel.init(name:)(v5);
  }
  else {
    *a2 = 4;
  }
  return v3;
}

uint64_t static OptionalLogger.preferences.getter()
{
  if (qword_1EB390A70 != -1) {
    swift_once();
  }
  return swift_unknownObjectRetain();
}

uint64_t OptionalLogger.levelNameKey.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  *a1 = *(void *)(v1 + 56);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void OptionalLogger.defaultVerbosityLevel.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 72);
}

uint64_t OptionalLogger.verbosityLevel.getter@<X0>(unsigned char *a1@<X8>)
{
  if (qword_1EB390A70 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_1EB390A58;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void *)(v1 + 64);
  v8[0] = *(void *)(v1 + 56);
  v8[1] = v5;
  swift_bridgeObjectRetain();
  Preferences.subscript.getter((uint64_t)v8, ObjectType, (uint64_t)&type metadata for OptionalLogger.Key, v3, (uint64_t)&protocol witness table for OptionalLogger.Key, (uint64_t)&v9);
  uint64_t result = swift_bridgeObjectRelease();
  char v7 = v9;
  if (v9 == 4) {
    char v7 = *(unsigned char *)(v1 + 72);
  }
  *a1 = v7;
  return result;
}

uint64_t OptionalLogger.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OptionalLogger.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for OptionalLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OptionalLogger);
}

ValueMetadata *type metadata accessor for OptionalLogger.Key()
{
  return &type metadata for OptionalLogger.Key;
}

void static PageID.random.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_19F1DB5AC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DB59C();
  uint64_t v6 = sub_19F1DB58C();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  void v13[4] = v6;
  v13[5] = v8;
  void v13[2] = 45;
  void v13[3] = 0xE100000000000000;
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_19EEC4910();
  uint64_t v9 = sub_19F1DCB8C();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12) {
    sub_19F19F64C((unint64_t)"JetEngine/PageID.swift", 0x16uLL, 2, 0x39uLL);
  }
  *a1 = v9;
  a1[1] = v11;
}

JetEngine::PageID __swiftcall PageID.init(with:)(Swift::String with)
{
  uint64_t v2 = v1;
  sub_19EEC4910();
  uint64_t v3 = sub_19F1DCB8C();
  unint64_t v5 = v4;
  uint64_t v6 = swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8) {
    sub_19F19F64C((unint64_t)"JetEngine/PageID.swift", 0x16uLL, 2, 0x39uLL);
  }
  *uint64_t v2 = v3;
  v2[1] = v5;
  result.value._uint64_t object = v7;
  result.value._uint64_t countAndFlagsBits = v6;
  return result;
}

uint64_t PageID.init<A>(id:kind:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  sub_19F1DC0CC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19EEC4910();
  uint64_t v6 = sub_19F1DCB8C();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9) {
    sub_19F19F64C((unint64_t)"JetEngine/PageID.swift", 0x16uLL, 2, 0x39uLL);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  *a3 = v6;
  a3[1] = v8;
  return result;
}

void sub_19F13EE80(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_19F1DCDBC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = a1[1];
  unint64_t v11 = *(void *)(*a1 + 16);
  if (v10 == v11)
  {
    sub_19EFDD710(0x65756C6176, 0xE500000000000000, 1, a2);
    swift_bridgeObjectRelease();
    sub_19F1DCDAC();
    uint64_t v12 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v14 = v13;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v13, v9, v6);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x1E4FBBA78], v12);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (v10 >= v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = (void *)(*a1 + 32 * v10);
    uint64_t v16 = v15[4];
    uint64_t v17 = v15[5];
    uint64_t v18 = v15[6];
    uint64_t v19 = v15[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[1] = v10 + 1;
    uint64_t v20 = MEMORY[0x19F3C6140](v16, v17, v18, v19);
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    *a3 = v20;
    a3[1] = v22;
  }
}

uint64_t PageID.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_19F1DCDBC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  uint64_t v9 = sub_19F1DD45C();
  unint64_t v11 = v10;
  uint64_t v27 = v6;
  uint64_t v24 = 45;
  unint64_t v25 = 0xE100000000000000;
  MEMORY[0x1F4188790](v9);
  *(&v22 - 2) = (uint64_t)&v24;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_19EEA0B44(0x7FFFFFFFFFFFFFFFLL, 1, sub_19EEA0FE8, (uint64_t)(&v22 - 4), v9, v11);
  swift_bridgeObjectRelease();
  uint64_t v24 = v12;
  unint64_t v25 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = (void *)sub_19F1DD86C();
  sub_19F13EE80(&v24, v13, v23);
  uint64_t v15 = v23[1];
  uint64_t v22 = v23[0];
  unint64_t v16 = v25;
  unint64_t v17 = *(void *)(v12 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v16 == v17)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
    *a2 = v22;
    a2[1] = v15;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  if (v16 >= v17)
  {
    __break(1u);
  }
  else
  {
    unint64_t v25 = v16 + 1;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD86C();
    sub_19F1DCDAC();
    uint64_t v18 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v20 = v19;
    uint64_t v21 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v19, v8, v5);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x1E4FBBA78], v18);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t PageID.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  swift_bridgeObjectRetain();
  sub_19F1DD4DC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t PageID.debugDescription.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall PageID.isParent(of:)(JetEngine::ShelfID of)
{
  if (*(void *)of.parent.value._countAndFlagsBits == *v1
    && *(void *)(of.parent.value._countAndFlagsBits + 8) == v1[1])
  {
    return 1;
  }
  else
  {
    return sub_19F1DD44C();
  }
}

Swift::Bool __swiftcall PageID.isParent(of:)(JetEngine::ComponentID *of)
{
  if (of->parent.parent.value._countAndFlagsBits == *(void *)v1
    && of->parent.parent.value._object == *(void **)(v1 + 8))
  {
    return 1;
  }
  else
  {
    return sub_19F1DD44C();
  }
}

uint64_t PageID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t static PageID.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_19F1DD44C();
  }
}

uint64_t PageID.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F13F60C()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F13F658()
{
  return sub_19F1DBE9C();
}

uint64_t sub_19F13F660()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F13F6A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PageID.init(from:)(a1, a2);
}

uint64_t sub_19F13F6C0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  swift_bridgeObjectRetain();
  sub_19F1DD4DC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

unint64_t sub_19F13F76C()
{
  unint64_t result = qword_1E9475780;
  if (!qword_1E9475780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475780);
  }
  return result;
}

ValueMetadata *type metadata accessor for PageID()
{
  return &type metadata for PageID;
}

double static Models.ToastAction.defaultToastDuration.getter()
{
  return 1.5;
}

long long *Models.ToastAction.init(actionMetrics:icon:title:message:duration:)@<X0>(long long *result@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  long long v8 = *result;
  long long v9 = a2[2];
  long long v10 = a2[4];
  *(_OWORD *)(a7 + 64) = a2[3];
  *(_OWORD *)(a7 + 80) = v10;
  long long v11 = *a2;
  long long v12 = a2[1];
  *(_OWORD *)a7 = v8;
  *(_OWORD *)(a7 + 16) = v11;
  uint64_t v13 = *((void *)a2 + 10);
  *(_OWORD *)(a7 + 32) = v12;
  *(_OWORD *)(a7 + 48) = v9;
  *(void *)(a7 + 96) = v13;
  *(void *)(a7 + 104) = a3;
  *(void *)(a7 + 112) = a4;
  *(void *)(a7 + 120) = a5;
  *(void *)(a7 + 128) = a6;
  *(double *)(a7 + 136) = a8;
  return result;
}

uint64_t sub_19F13F80C()
{
  uint64_t result = 0x654D6E6F69746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1852793705;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 4:
      uint64_t result = 0x6E6F697461727564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F13F8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F140D6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F13F8E0(uint64_t a1)
{
  unint64_t v2 = sub_19F13FFB8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F13F91C(uint64_t a1)
{
  unint64_t v2 = sub_19F13FFB8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Models.ToastAction.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475788);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F13FFB8();
  sub_19F1DD8AC();
  if (!v2)
  {
    LOBYTE(v45) = 0;
    sub_19F046530();
    sub_19F1DD17C();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (*(void *)&v55[0]) {
      uint64_t v9 = *(void *)&v55[0];
    }
    uint64_t v40 = v9;
    if (*(void *)&v55[0]) {
      uint64_t v10 = *((void *)&v55[0] + 1);
    }
    else {
      uint64_t v10 = MEMORY[0x1E4FBC868];
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475798);
    LOBYTE(v41) = 1;
    sub_19EE78558(&qword_1E94757A0, &qword_1E9475798);
    sub_19F1DD17C();
    char v39 = a2;
    if (v45)
    {
      sub_19F0D09CC((uint64_t)&v45, (uint64_t)v55);
      sub_19EEBD664((uint64_t)&v45, &qword_1E9475798);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v45, &qword_1E94757A8);
      memset(v55, 0, sizeof(v55));
      uint64_t v56 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475150);
    LOBYTE(v41) = 2;
    sub_19F11FF74();
    sub_19F1DD17C();
    uint64_t v38 = v10;
    uint64_t v12 = (uint64_t)v45;
    uint64_t v13 = v46;
    BOOL v37 = v45;
    if (v46 == (void *)1) {
      uint64_t v12 = 0;
    }
    uint64_t v36 = v12;
    if (v46 == (void *)1) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = v46;
    }
    unint64_t v35 = v14;
    LOBYTE(v41) = 3;
    sub_19F1DD17C();
    char v34 = v13;
    v33[2] = v45;
    if (v46 == (void *)1) {
      uint64_t v15 = 0;
    }
    else {
      uint64_t v15 = v45;
    }
    v33[1] = v46;
    if (v46 == (void *)1) {
      unint64_t v16 = 0;
    }
    else {
      unint64_t v16 = v46;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472B10);
    LOBYTE(v41) = 4;
    sub_19F026A9C();
    sub_19F1DD17C();
    BOOL v37 = v16;
    double v17 = *(double *)&v45;
    int v18 = BYTE1(v46);
    LODWORD(v34) = BYTE1(v46) | v46;
    sub_19EEC3ED8((uint64_t)v55, (uint64_t)&v45, &qword_1E94757B0);
    if (v45)
    {
      sub_19EEBD664((uint64_t)v55, &qword_1E94757B0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      id v19 = v45;
      uint64_t v20 = v46;
      char v21 = v47;
      v43[0] = *(_DWORD *)v48;
      *(_DWORD *)((char *)v43 + 3) = *(_DWORD *)&v48[3];
      id v22 = v49;
      long long v23 = v50;
      long long v41 = v51;
      uint64_t v24 = v53;
      uint64_t v42 = v52;
      unint64_t v25 = v54;
    }
    else
    {
      long long v26 = (void *)*MEMORY[0x1E4F4DAF0];
      uint64_t v27 = (void *)*MEMORY[0x1E4F4DAD8];
      char v44 = 1;
      id v19 = v26;
      id v22 = v27;
      sub_19EEBD664((uint64_t)v55, &qword_1E94757B0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_19EEBD664((uint64_t)&v45, &qword_1E94757B0);
      uint64_t v20 = 0;
      long long v23 = 0uLL;
      uint64_t v24 = &_s12_EmptySourceVN;
      unint64_t v25 = &off_1EC30E250;
      char v21 = v44;
    }
    double v28 = 0.0;
    if (!v18) {
      double v28 = v17;
    }
    uint64_t v29 = v39;
    uint64_t v30 = v38;
    *char v39 = v40;
    v29[1] = v30;
    if (v34) {
      double v28 = 1.5;
    }
    _OWORD v29[2] = v19;
    v29[3] = v20;
    *((unsigned char *)v29 + 32) = v21;
    *(_DWORD *)((char *)v29 + 33) = v43[0];
    *((_DWORD *)v29 + 9) = *(_DWORD *)((char *)v43 + 3);
    v29[5] = v22;
    long long v31 = v41;
    *((_OWORD *)v29 + 3) = v23;
    *((_OWORD *)v29 + 4) = v31;
    v29[10] = v42;
    v29[11] = v24;
    uint64_t v32 = v36;
    v29[12] = v25;
    v29[13] = v32;
    v29[14] = v35;
    v29[15] = v15;
    v29[16] = v37;
    *((double *)v29 + 17) = v28;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_19F13FFB8()
{
  unint64_t result = qword_1E9475790;
  if (!qword_1E9475790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475790);
  }
  return result;
}

uint64_t sub_19F14000C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t Models.ToastAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v43);
  v42[0] = v6;
  swift_bridgeObjectRetain();
  ActionMetrics.init(deserializing:using:)((uint64_t)v43, v42, v45);
  if (v3)
  {
    sub_19EEC3418(a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v45[0];
    uint64_t v9 = v45[1];
    JSONObject.subscript.getter(1852793705, 0xE400000000000000, (uint64_t)v42);
    v39[0] = v6;
    MediaArtwork.init(deserializing:using:)((uint64_t)v42, v39, (uint64_t)v43);
    JSONObject.subscript.getter(0x656C746974, 0xE500000000000000, (uint64_t)v42);
    sub_19EEC3ED8((uint64_t)v42, (uint64_t)v39, (uint64_t *)&unk_1E946FD20);
    uint64_t v10 = v40;
    if (v40)
    {
      uint64_t v11 = v41;
      __swift_project_boxed_opaque_existential_1(v39, v40);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
      uint64_t v46 = v13;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
    }
    else
    {
      sub_19EEBD664((uint64_t)v39, (uint64_t *)&unk_1E946FD20);
      uint64_t v12 = 0;
      uint64_t v46 = 0;
    }
    sub_19EEC3418((uint64_t)v42);
    JSONObject.subscript.getter(0x6567617373656DLL, 0xE700000000000000, (uint64_t)v39);
    sub_19EEC3ED8((uint64_t)v39, (uint64_t)v36, (uint64_t *)&unk_1E946FD20);
    uint64_t v14 = v37;
    if (v37)
    {
      uint64_t v15 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
      uint64_t v32 = v16;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    }
    else
    {
      sub_19EEBD664((uint64_t)v36, (uint64_t *)&unk_1E946FD20);
      uint64_t v32 = 0;
    }
    sub_19EEC3418((uint64_t)v39);
    JSONObject.subscript.getter(0x6E6F697461727564, 0xE800000000000000, (uint64_t)v36);
    sub_19EEC3ED8((uint64_t)v36, (uint64_t)v33, (uint64_t *)&unk_1E946FD20);
    uint64_t v17 = v34;
    if (v34)
    {
      uint64_t v31 = v9;
      uint64_t v18 = v8;
      uint64_t v19 = v14;
      uint64_t v20 = v12;
      uint64_t v21 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      id v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 80);
      uint64_t v23 = v21;
      uint64_t v12 = v20;
      uint64_t v14 = v19;
      uint64_t v8 = v18;
      uint64_t v9 = v31;
      uint64_t v24 = v22(v17, v23);
      char v26 = v25;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
      sub_19EEC3418(a1);
      uint64_t result = sub_19EEC3418((uint64_t)v36);
      double v27 = *(double *)&v24;
      if (v26) {
        double v27 = 1.5;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)v33, (uint64_t *)&unk_1E946FD20);
      sub_19EEC3418(a1);
      uint64_t result = sub_19EEC3418((uint64_t)v36);
      double v27 = 1.5;
    }
    *(void *)a3 = v8;
    *(void *)(a3 + 8) = v9;
    long long v28 = v43[3];
    *(_OWORD *)(a3 + 48) = v43[2];
    *(_OWORD *)(a3 + 64) = v28;
    *(_OWORD *)(a3 + 80) = v43[4];
    uint64_t v29 = v44;
    long long v30 = v43[1];
    *(_OWORD *)(a3 + 16) = v43[0];
    *(_OWORD *)(a3 + 32) = v30;
    *(void *)(a3 + 96) = v29;
    *(void *)(a3 + 104) = v12;
    *(void *)(a3 + 112) = v46;
    *(void *)(a3 + 120) = v14;
    *(void *)(a3 + 128) = v32;
    *(double *)(a3 + 136) = v27;
  }
  return result;
}

uint64_t Models.ToastAction.actionMetrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Models.ToastAction.icon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19F0D09CC(v1 + 16, a1);
}

uint64_t Models.ToastAction.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.ToastAction.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

double Models.ToastAction.duration.getter()
{
  return *(double *)(v0 + 136);
}

uint64_t Models.ToastAction.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94757B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F13FFB8();
  sub_19F1DD8FC();
  long long v11 = *v3;
  v10[15] = 0;
  sub_19F046118();
  sub_19F1DD2AC();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_19F140640();
    sub_19F1DD2AC();
    LOBYTE(v11) = 2;
    sub_19F1DD21C();
    LOBYTE(v11) = 3;
    sub_19F1DD21C();
    LOBYTE(v11) = 4;
    sub_19F1DD28C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_19F140640()
{
  unint64_t result = qword_1E94757C0;
  if (!qword_1E94757C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94757C0);
  }
  return result;
}

uint64_t sub_19F140694@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Models.ToastAction.init(from:)(a1, a2);
}

uint64_t sub_19F1406AC(void *a1)
{
  return Models.ToastAction.encode(to:)(a1);
}

uint64_t sub_19F1406C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.ToastAction.init(deserializing:using:)(a1, a2, a3);
}

__n128 Models.ToastAction.init(actionMetrics:title:message:duration:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, __n128 *a6@<X8>, double a7@<D0>)
{
  uint64_t v16 = &_s12_EmptySourceVN;
  uint64_t v17 = &off_1EC30E250;
  MediaArtwork.init(_:)(&v15, (uint64_t)&a6[1]);
  __n128 result = *a1;
  *a6 = *a1;
  a6[6].n128_u64[1] = a2;
  a6[7].n128_u64[0] = a3;
  a6[7].n128_u64[1] = a4;
  a6[8].n128_u64[0] = a5;
  a6[8].n128_f64[1] = a7;
  return result;
}

uint64_t _s11ToastActionVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 64);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s11ToastActionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v8 = a2 + 64;
  long long v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v9;
  uint64_t v10 = v9;
  long long v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v6;
  id v13 = v7;
  v11(a1 + 64, v8, v10);
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  uint64_t v15 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v15;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11ToastActionVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void **)(a2 + 40);
  long long v9 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v8;
  id v10 = v8;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t _s11ToastActionVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 64);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t _s11ToastActionVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11ToastActionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Models.ToastAction()
{
  return &type metadata for Models.ToastAction;
}

unsigned char *_s11ToastActionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F140C2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11ToastActionV10CodingKeysOMa()
{
  return &_s11ToastActionV10CodingKeysON;
}

unint64_t sub_19F140C68()
{
  unint64_t result = qword_1E94757C8;
  if (!qword_1E94757C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94757C8);
  }
  return result;
}

unint64_t sub_19F140CC0()
{
  unint64_t result = qword_1E94757D0;
  if (!qword_1E94757D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94757D0);
  }
  return result;
}

unint64_t sub_19F140D18()
{
  unint64_t result = qword_1E94757D8;
  if (!qword_1E94757D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94757D8);
  }
  return result;
}

uint64_t sub_19F140D6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_19F140F98(uint64_t a1)
{
  v2[3] = a1;
  void v2[4] = v1;
  v2[5] = *v1;
  return MEMORY[0x1F4188298](sub_19F140FE0, 0, 0);
}

uint64_t sub_19F140FE0()
{
  long long v11 = v0;
  uint64_t v1 = *(void *)(v0[3] + 16);
  sub_19EE6D228();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_19F1DC5CC();
  if (v1)
  {
    int v3 = (uint64_t *)(v0[3] + 32);
    do
    {
      uint64_t v4 = *v3++;
      sub_19F043668(&v10, v4);
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v0[6] = v2;
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = swift_task_alloc();
  v0[7] = v7;
  *(void *)(v7 + 16) = v2;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  void *v8 = v0;
  v8[1] = sub_19F141130;
  return sub_19F12F6F4((uint64_t)(v0 + 2), (uint64_t)&unk_1E9475388, v7, v5);
}

uint64_t sub_19F141130()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F141254;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_19EECFD58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F141254()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t bootstrap(objects:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F1412E0, 0, 0);
}

uint64_t sub_19F1412E0()
{
  *(void *)(v0 + 32) = (*(uint64_t (**)(void))(v0 + 16))();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_19F141384;
  return BaseObjectGraph._withAllDependenciesResolved.getter();
}

uint64_t sub_19F141384(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_19F051520;
  }
  else
  {
    *(void *)(v4 + 56) = a1;
    uint64_t v5 = sub_19F1414AC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_19F1414AC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 56);
  return v1(v2);
}

uint64_t partialBootstrap(_:objects:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  uint64_t v3[2] = a1;
  return MEMORY[0x1F4188298](sub_19F141538, 0, 0);
}

uint64_t sub_19F141538()
{
  *(void *)(v0 + 40) = (*(uint64_t (**)(void))(v0 + 24))();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1E94757F0 + dword_1E94757F0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_19F1415F4;
  uint64_t v2 = *(void *)(v0 + 16);
  return v4(v2);
}

uint64_t sub_19F1415F4(uint64_t a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = swift_release();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t dispatch thunk of FrameworkBootstrap.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t JSIncident.IncidentType.displayName.getter()
{
  if (*v0) {
    return 0x20676E697373696DLL;
  }
  else {
    return 0x6570797420646162;
  }
}

uint64_t JSIncident.problemSummary.getter()
{
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  strcpy((char *)v2, "Encountered ");
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  uint64_t v0 = v2[0];
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  strcpy((char *)v2, "Recovered by ");
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

JetEngine::JSIncident::IncidentType_optional __swiftcall JSIncident.IncidentType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_19F1DD0FC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t JSIncident.IncidentType.rawValue.getter()
{
  if (*v0) {
    return 0x756C61566C6C756ELL;
  }
  else {
    return 0x65707954646162;
  }
}

uint64_t sub_19F141B1C(char *a1, char *a2)
{
  return sub_19F03B9F0(*a1, *a2);
}

uint64_t sub_19F141B28()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F141BB0()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F141C24()
{
  return sub_19F1DD78C();
}

JetEngine::JSIncident::IncidentType_optional sub_19F141CA8(Swift::String *a1)
{
  return JSIncident.IncidentType.init(rawValue:)(*a1);
}

void sub_19F141CB4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65707954646162;
  if (*v1) {
    uint64_t v2 = 0x756C61566C6C756ELL;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000065;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t JSIncident.RecoveryAction.sentenceFragment.getter()
{
  unint64_t v1 = 0xD000000000000015;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

JetEngine::JSIncident::RecoveryAction_optional __swiftcall JSIncident.RecoveryAction.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_19F1DD0FC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t JSIncident.RecoveryAction.rawValue.getter()
{
  return *(void *)&aCoercedvdefaul[8 * *v0];
}

uint64_t sub_19F141DD0(char *a1, char *a2)
{
  return sub_19F03BA9C(*a1, *a2);
}

uint64_t sub_19F141DDC()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F141E48()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F141E98()
{
  return sub_19F1DD78C();
}

JetEngine::JSIncident::RecoveryAction_optional sub_19F141F00(Swift::String *a1)
{
  return JSIncident.RecoveryAction.init(rawValue:)(*a1);
}

void sub_19F141F0C(void *a1@<X8>)
{
  *a1 = *(void *)&aCoercedvdefaul[8 * *v1];
  a1[1] = 0xEC00000065756C61;
}

uint64_t static JSIncident.property.getter()
{
  return 0x6E656469636E6924;
}

void sub_19F141F4C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v24);
  v22[0] = a2;
  swift_bridgeObjectRetain();
  sub_19F1421DC((uint64_t)v24, v22, (uint64_t)v26);
  if (v3)
  {
    if (qword_1E946E1C0 != -1) {
      swift_once();
    }
    uint64_t v6 = (void *)qword_1E9498A98;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_19F24EB80;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v8 + 16) = xmmword_19F24EAD0;
    uint64_t v25 = v9;
    v24[0] = 0xD000000000000032;
    v24[1] = 0x800000019F273AE0;
    memset(v26, 0, 32);
    id v10 = v6;
    sub_19EEC3E70((uint64_t)v24, (uint64_t)v26);
    *(unsigned char *)(v8 + 64) = 0;
    long long v11 = *(_OWORD *)&v26[16];
    *(_OWORD *)(v8 + 32) = *(_OWORD *)v26;
    *(_OWORD *)(v8 + 48) = v11;
    *(void *)(v7 + 32) = v8;
    swift_getErrorValue();
    uint64_t v12 = v22[4];
    uint64_t v13 = v23;
    uint64_t v25 = v23;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v24);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_2Tm, v12, v13);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19F24EAD0;
    sub_19EEC3ED8((uint64_t)v24, (uint64_t)v22, &qword_1EB393260);
    memset(v26, 0, 32);
    sub_19EEC3E70((uint64_t)v22, (uint64_t)v26);
    *(unsigned char *)(v15 + 64) = 0;
    long long v16 = *(_OWORD *)&v26[16];
    *(_OWORD *)(v15 + 32) = *(_OWORD *)v26;
    *(_OWORD *)(v15 + 48) = v16;
    *(void *)(v7 + 40) = v15;
    sub_19EEBD664((uint64_t)v24, &qword_1EB393260);
    *(void *)char v26 = v10;
    LOBYTE(v24[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)v24);
    swift_bridgeObjectRelease();

    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    long long v17 = *(_OWORD *)&v26[8];
    long long v18 = *(_OWORD *)&v26[24];
    uint64_t v19 = v27;
    uint64_t v20 = v29;
    uint64_t v21 = v30;
    *(void *)a3 = v26[0];
    *(_OWORD *)(a3 + 8) = v17;
    *(_OWORD *)(a3 + 24) = v18;
    *(void *)(a3 + 40) = v19;
    *(_OWORD *)(a3 + 48) = v28;
    *(void *)(a3 + 64) = v20;
    *(void *)(a3 + 72) = v21;
  }
}

uint64_t sub_19F1421DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(1701869940, 0xE400000000000000, (uint64_t)&v71);
  sub_19EEC3ED8((uint64_t)&v71, (uint64_t)v68, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = v69;
  if (!v69)
  {
    sub_19EEBD664((uint64_t)v68, (uint64_t *)&unk_1E946FD20);
    goto LABEL_7;
  }
  uint64_t v8 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  uint64_t v10 = v9;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  if (!v10)
  {
LABEL_7:
    sub_19EEC3418((uint64_t)&v71);
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    *uint64_t v13 = 1701869940;
    unint64_t v14 = 0xE400000000000000;
LABEL_8:
    v13[1] = v14;
    void v13[2] = 0x20000001EF139F08uLL;
    void v13[3] = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  uint64_t v11 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v11)
  {
    if (v11 == 1)
    {
      char v12 = 1;
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  char v12 = 0;
LABEL_10:
  sub_19EEC3418((uint64_t)&v71);
  JSONObject.subscript.getter(0x6465746365707865, 0xE800000000000000, (uint64_t)&v71);
  sub_19EEC3ED8((uint64_t)&v71, (uint64_t)v68, (uint64_t *)&unk_1E946FD20);
  uint64_t v16 = v69;
  if (!v69)
  {
    sub_19EEBD664((uint64_t)v68, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)&v71);
    goto LABEL_28;
  }
  uint64_t v17 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  uint64_t v20 = v19;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  sub_19EEC3418((uint64_t)&v71);
  if (!v20)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    *uint64_t v13 = 0x6465746365707865;
    unint64_t v14 = 0xE800000000000000;
    goto LABEL_8;
  }
  uint64_t v74 = v18;
  JSONObject.subscript.getter(0x6C6175746361, 0xE600000000000000, (uint64_t)&v71);
  sub_19EEC3ED8((uint64_t)&v71, (uint64_t)v68, (uint64_t *)&unk_1E946FD20);
  uint64_t v21 = v69;
  if (!v69)
  {
    sub_19EEBD664((uint64_t)v68, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)&v71);
    goto LABEL_30;
  }
  char v63 = v12;
  uint64_t v22 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
  uint64_t v25 = v24;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  sub_19EEC3418((uint64_t)&v71);
  if (!v25)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    *uint64_t v13 = 0x6C6175746361;
    unint64_t v14 = 0xE600000000000000;
    goto LABEL_8;
  }
  uint64_t v64 = v25;
  unint64_t v14 = 0xEA00000000006874;
  JSONObject.subscript.getter(0x61507463656A626FLL, 0xEA00000000006874, (uint64_t)&v71);
  sub_19EEC3ED8((uint64_t)&v71, (uint64_t)v68, (uint64_t *)&unk_1E946FD20);
  uint64_t v26 = v69;
  if (!v69)
  {
    sub_19EEBD664((uint64_t)v68, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)&v71);
    goto LABEL_32;
  }
  uint64_t v61 = v23;
  uint64_t v27 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
  uint64_t v30 = v29;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  sub_19EEC3418((uint64_t)&v71);
  if (!v30)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    uint64_t v53 = 0x61507463656A626FLL;
LABEL_40:
    *uint64_t v13 = v53;
    goto LABEL_8;
  }
  uint64_t v62 = v30;
  unint64_t v14 = 0xEC00000073656D61;
  JSONObject.subscript.getter(0x4E747865746E6F63, 0xEC00000073656D61, (uint64_t)v68);
  sub_19EEC3ED8((uint64_t)v68, (uint64_t)v65, (uint64_t *)&unk_1E946FD20);
  uint64_t v31 = v66;
  if (!v66)
  {
    sub_19EEBD664((uint64_t)v65, (uint64_t *)&unk_1E946FD20);
    long long v71 = 0u;
    long long v72 = 0u;
    uint64_t v73 = 0;
    sub_19EEC3418((uint64_t)v68);
    goto LABEL_34;
  }
  uint64_t v60 = v28;
  uint64_t v32 = v67;
  __swift_project_boxed_opaque_existential_1(v65, v66);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v32 + 120))(&v71, v31, v32);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
  uint64_t v33 = *((void *)&v72 + 1);
  sub_19EEC3418((uint64_t)v68);
  if (!v33)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)&v71, &qword_1E946FA88);
LABEL_35:
    sub_19EF5B580();
    swift_allocError();
    uint64_t v53 = 0x4E747865746E6F63;
    goto LABEL_40;
  }
  uint64_t v34 = v73;
  __swift_project_boxed_opaque_existential_1(&v71, v33);
  uint64_t v35 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v34 + 40))(MEMORY[0x1E4FBB1A0], v33, v34);
  sub_19EEC5764((uint64_t)&v71);
  if (!v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  unint64_t v14 = 0xEE006E6F69746341;
  JSONObject.subscript.getter(0x797265766F636572, 0xEE006E6F69746341, (uint64_t)&v71);
  sub_19EEC3ED8((uint64_t)&v71, (uint64_t)v68, (uint64_t *)&unk_1E946FD20);
  uint64_t v36 = v69;
  if (!v69)
  {
    sub_19EEBD664((uint64_t)v68, (uint64_t *)&unk_1E946FD20);
    goto LABEL_38;
  }
  uint64_t v59 = v35;
  uint64_t v37 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 24))(v36, v37);
  uint64_t v40 = v39;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  if (!v40)
  {
LABEL_38:
    sub_19EEC3418((uint64_t)&v71);
    goto LABEL_39;
  }
  v41._uint64_t countAndFlagsBits = v38;
  v41._uint64_t object = v40;
  JSIncident.RecoveryAction.init(rawValue:)(v41);
  int v42 = LOBYTE(v65[0]);
  sub_19EEC3418((uint64_t)&v71);
  if (v42 == 3)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    uint64_t v53 = 0x797265766F636572;
    goto LABEL_40;
  }
  char v58 = v42;
  JSONObject.subscript.getter(0x6B63617473, 0xE500000000000000, (uint64_t)&v71);
  sub_19EEC3ED8((uint64_t)&v71, (uint64_t)v68, (uint64_t *)&unk_1E946FD20);
  uint64_t v43 = v69;
  if (v69)
  {
    uint64_t v44 = v70;
    __swift_project_boxed_opaque_existential_1(v68, v69);
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 24))(v43, v44);
    unint64_t v47 = v46;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
    sub_19EEC3418((uint64_t)&v71);
    if (v47)
    {
      uint64_t v48 = sub_19EFC8F74(v45, v47);
      if (v3)
      {
        swift_bridgeObjectRelease();
        sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, v6, (uint64_t)&v71);
        swift_bridgeObjectRelease();
        sub_19EEC3ED8((uint64_t)&v71, (uint64_t)v68, qword_1E946D938);
        uint64_t v49 = v69;
        char v50 = v63;
        uint64_t v51 = v64;
        if (v69)
        {
          uint64_t v52 = v70;
          __swift_project_boxed_opaque_existential_1(v68, v69);
          (*(void (**)(void, void *, uint64_t, uint64_t))(v52 + 8))(MEMORY[0x1E4FBB1A0], v3, v49, v52);
          char v50 = v63;

          sub_19EEC3418(a1);
          sub_19EEBD664((uint64_t)&v71, qword_1E946D938);
          uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
        }
        else
        {

          sub_19EEC3418(a1);
          sub_19EEBD664((uint64_t)&v71, qword_1E946D938);
          uint64_t result = sub_19EEBD664((uint64_t)v68, qword_1E946D938);
        }
        uint64_t v43 = 0;
        uint64_t v54 = v74;
        uint64_t v55 = v61;
        uint64_t v56 = v62;
        char v57 = v58;
        goto LABEL_47;
      }
      uint64_t v43 = (uint64_t)v48;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v43 = 0;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v68, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)&v71);
    swift_bridgeObjectRelease();
  }
  uint64_t v54 = v74;
  uint64_t v55 = v61;
  sub_19EEC3418(a1);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v56 = v62;
  char v57 = v58;
  uint64_t v51 = v64;
  char v50 = v63;
LABEL_47:
  *(unsigned char *)a3 = v50;
  *(void *)(a3 + 8) = v54;
  *(void *)(a3 + 16) = v20;
  *(void *)(a3 + 24) = v55;
  *(void *)(a3 + 32) = v51;
  *(void *)(a3 + 40) = v60;
  *(void *)(a3 + 48) = v56;
  *(void *)(a3 + 56) = v59;
  *(unsigned char *)(a3 + 64) = v57;
  *(void *)(a3 + 72) = v43;
  return result;
}

void JSIncident.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t JSIncident.expected.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSIncident.actual.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSIncident.objectPath.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSIncident.contextNames.getter()
{
  return swift_bridgeObjectRetain();
}

void JSIncident.recoveryAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

uint64_t JSIncident.contextSummary.getter()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
  sub_19EE868D4();
  uint64_t v0 = sub_19F1DBCCC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t JSIncident.description.getter()
{
  if (*(void *)(*(void *)(v0 + 56) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
    sub_19EE868D4();
    sub_19F1DBCCC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
  }
  JSIncident.problemSummary.getter();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _s9JetEngine10JSIncidentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v25 = *(void *)(a1 + 40);
  uint64_t v26 = *(void *)(a1 + 32);
  uint64_t v5 = *(char *)(a1 + 64);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  BOOL v10 = *(unsigned char *)a1 == 0;
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v24 = *(void *)(a2 + 40);
  uint64_t v21 = *(void **)(a1 + 56);
  uint64_t v22 = *(void *)(a2 + 48);
  if (*(unsigned char *)a1) {
    uint64_t v11 = 0x756C61566C6C756ELL;
  }
  else {
    uint64_t v11 = 0x65707954646162;
  }
  if (v10) {
    unint64_t v12 = 0xE700000000000000;
  }
  else {
    unint64_t v12 = 0xE900000000000065;
  }
  if (*(unsigned char *)a2) {
    uint64_t v13 = 0x756C61566C6C756ELL;
  }
  else {
    uint64_t v13 = 0x65707954646162;
  }
  if (*(unsigned char *)a2) {
    unint64_t v14 = 0xE900000000000065;
  }
  else {
    unint64_t v14 = 0xE700000000000000;
  }
  uint64_t v18 = *(char *)(a2 + 64);
  uint64_t v19 = v5;
  uint64_t v20 = *(void **)(a2 + 56);
  if (v11 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v16 = 0;
    if ((v15 & 1) == 0) {
      return v16 & 1;
    }
  }
  if (v2 == v7 && v3 == v6 || (char v16 = 0, (sub_19F1DD44C() & 1) != 0))
  {
    if (v4 == v8 && v26 == v9 || (char v16 = 0, (sub_19F1DD44C() & 1) != 0))
    {
      if (v25 == v24 && v23 == v22 || (char v16 = 0, (sub_19F1DD44C() & 1) != 0))
      {
        if (sub_19EF636C0(v21, v20))
        {
          if (*(void *)&aCoercedvdefaul[8 * v19] == *(void *)&aCoercedvdefaul[8 * v18]) {
            char v16 = 1;
          }
          else {
            char v16 = sub_19F1DD44C();
          }
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v16 = 0;
        }
      }
    }
  }
  return v16 & 1;
}

unint64_t sub_19F143044()
{
  unint64_t result = qword_1E94757F8;
  if (!qword_1E94757F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94757F8);
  }
  return result;
}

unint64_t sub_19F14309C()
{
  unint64_t result = qword_1E9475800;
  if (!qword_1E9475800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475800);
  }
  return result;
}

uint64_t destroy for JSIncident()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSIncident(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSIncident(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JSIncident(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSIncident(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSIncident(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JSIncident.IncidentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F143494);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSIncident.IncidentType()
{
  return &type metadata for JSIncident.IncidentType;
}

unsigned char *storeEnumTagSinglePayload for JSIncident.RecoveryAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F143598);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSIncident.RecoveryAction()
{
  return &type metadata for JSIncident.RecoveryAction;
}

void sub_19F1435D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19F141F4C(a1, *(void *)(v2 + 16), a2);
}

uint64_t InMemoryJetPackLoader.init(signingPolicy:keyProvider:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  *a3 = *a1;
  return sub_19EEBDC4C(a2, (uint64_t)(a3 + 1), &qword_1EB392308);
}

uint64_t sub_19F14361C()
{
  uint64_t v0 = sub_19F1DC86C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DC83C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_19F1DBA3C();
  MEMORY[0x1F4188790](v5 - 8);
  sub_19EEA5F34();
  sub_19F1DBA2C();
  sub_19F1DC82C();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_19F1DC8AC();
  qword_1E946F8D8 = result;
  return result;
}

id static InMemoryJetPackLoader.sharedUnpackQueue.getter()
{
  if (qword_1E946F8E8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E946F8D8;
  return v0;
}

uint64_t InMemoryJetPackLoader.bundle(from:on:)(void *a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  unsigned int v6 = __swift_project_boxed_opaque_existential_1(a2, v4);
  return sub_19F14387C(a1, (uint64_t)v6, v2, v4, v5);
}

uint64_t sub_19F14387C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v14[3] = a4;
  v14[4] = a5;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_2Tm, a2, a4);
  type metadata accessor for BaseObjectGraph();
  uint64_t v10 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v13 = v10;
  swift_retain();
  swift_task_localValuePush();
  sub_19EE65118(a1, (uint64_t)v14, a3, &v13);
  swift_task_localValuePop();
  swift_release();
  uint64_t v11 = v13;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v11;
}

uint64_t sub_19F14399C()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  sub_19EECDEA8(v0[7], v0[8]);
  if (v0[12]) {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 9));
  }
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_19F1439EC()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_19F143A28(void *a1)
{
}

uint64_t sub_19F143A30()
{
  sub_19EECDEA8(v0[2], v0[3]);
  if (v0[7]) {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 4));
  }
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_19F143A7C(void *a1)
{
}

uint64_t sub_19F143A88()
{
  id v1 = objc_msgSend(*v0, sel_underlyingDictionary);
  uint64_t v2 = sub_19F1DBB3C();

  return v2;
}

unint64_t sub_19F143AEC(uint64_t a1)
{
  unint64_t result = sub_19F143B14();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19F143B14()
{
  unint64_t result = qword_1E9475810;
  if (!qword_1E9475810)
  {
    sub_19EF4D4A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475810);
  }
  return result;
}

uint64_t static IntentDispatchTimeout.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t sub_19F143B98(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IntentDispatchTimeout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for IntentDispatchTimeout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_19F143C14(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_19F143C30()
{
  id v1 = (uint64_t *)(v0 + 248);
  swift_release();
  uint64_t v2 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v3 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 168);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v5, v6) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
      uint64_t v7 = "";
    }
    id v1 = (uint64_t *)(v0 + 264);
    uint64_t v10 = *(void *)(v0 + 240);
    uint64_t v11 = *(void *)(v0 + 248);
    uint64_t v12 = *(void *)(v0 + 232);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 288))(*(void *)(v0 + 264), v11, v12);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v14, "Perform JetPack Request", v7, v13, 2u);
    MEMORY[0x19F3C9470](v13, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v9(v11, v12);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 240);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *(void *)(v0 + 272);
  uint64_t v16 = *(void *)(v0 + 232);
  v9(*v1, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_19F143E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[20] = a6;
  v7[21] = v6;
  v7[18] = a4;
  v7[19] = a5;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  uint64_t v8 = sub_19F1DB8AC();
  v7[22] = v8;
  v7[23] = *(void *)(v8 - 8);
  unsigned char v7[24] = swift_task_alloc();
  v7[25] = swift_task_alloc();
  uint64_t v9 = sub_19F1DB85C();
  v7[26] = v9;
  v7[27] = *(void *)(v9 - 8);
  v7[28] = swift_task_alloc();
  v7[29] = swift_task_alloc();
  v7[30] = swift_task_alloc();
  v7[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F143FE8, 0, 0);
}

uint64_t sub_19F143FE8()
{
  uint64_t v54 = v0;
  if (qword_1EB390CF0 != -1) {
    swift_once();
  }
  uint64_t v49 = v0 + 56;
  uint64_t v1 = sub_19F1DB89C();
  *(void *)(v0 + 256) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB390CD8);
  sub_19F1DB87C();
  sub_19F1DB82C();
  uint64_t v2 = sub_19F1DB87C();
  os_signpost_type_t v3 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 240);
    uint64_t v5 = *(void *)(v0 + 208);
    uint64_t v6 = *(void *)(v0 + 216);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    unint64_t v8 = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v4, *(void *)(v0 + 248), v5);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    os_signpost_id_t v10 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v10, "Perform JetPack Request", "", v9, 2u);
    MEMORY[0x19F3C9470](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 216);

    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    unint64_t v8 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v12 = (long long *)(v0 + 16);
  uint64_t v14 = *(void *)(v0 + 240);
  uint64_t v13 = *(void *)(v0 + 248);
  uint64_t v15 = *(void *)(v0 + 208);
  *(void *)(v0 + 264) = v7;
  *(void *)(v0 + 272) = v8;
  v7(v14, v13, v15);
  sub_19F1DB8EC();
  swift_allocObject();
  *(void *)(v0 + 280) = sub_19F1DB8DC();
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v16 = *(void *)(v0 + 128);
  uint64_t v17 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_19F24EAD0;
  id v48 = v17;
  char v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
  v19._uint64_t object = (void *)0x800000019F26F0A0;
  v19._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(void *)(v0 + 80) = &type metadata for SilverBulletJetPackAssetRequest;
  uint64_t v20 = swift_allocObject();
  *(void *)(v0 + 56) = v20;
  char v21 = *(unsigned char *)(v16 + 32);
  long long v22 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v16;
  *(_OWORD *)(v20 + 32) = v22;
  *(unsigned char *)(v20 + 48) = v21;
  sub_19EEC3ED8(v49, v0 + 88, &qword_1EB393260);
  *uint64_t v12 = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19EE4E86C(v16);
  sub_19EEC3E70(v0 + 88, v0 + 16);
  *(unsigned char *)(v0 + 48) = 0;
  long long v23 = *(_OWORD *)(v0 + 32);
  long long v51 = *v12;
  long long v52 = v23;
  char v53 = *(unsigned char *)(v0 + 48);
  uint64_t v24 = v50;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v24 = sub_19EEC3F3C(0, v50[2] + 1, 1, v50);
  }
  unint64_t v26 = v24[2];
  unint64_t v25 = v24[3];
  if (v26 >= v25 >> 1) {
    uint64_t v24 = sub_19EEC3F3C((void *)(v25 > 1), v26 + 1, 1, v24);
  }
  uint64_t v27 = *(void **)(v0 + 160);
  uint64_t v47 = *(void *)(v0 + 168);
  uint64_t v28 = *(void **)(v0 + 144);
  uint64_t v29 = *(void *)(v0 + 152);
  uint64_t v31 = *(void *)(v0 + 128);
  uint64_t v30 = *(void *)(v0 + 136);
  _OWORD v24[2] = v26 + 1;
  uint64_t v32 = &v24[5 * v26];
  long long v33 = v51;
  long long v34 = v52;
  *((unsigned char *)v32 + 64) = v53;
  *((_OWORD *)v32 + 2) = v33;
  *((_OWORD *)v32 + 3) = v34;
  char v50 = v24;
  sub_19EEBD664(v49, &qword_1EB393260);
  v35._uint64_t countAndFlagsBits = 0;
  v35._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  *(void *)(v18 + 32) = v24;
  *(void *)&long long v51 = v48;
  LOBYTE(v50) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v50);
  swift_bridgeObjectRelease();

  uint64_t v36 = swift_allocObject();
  *(void *)(v0 + 288) = v36;
  *(void *)(v36 + 16) = v47;
  long long v38 = *(_OWORD *)v31;
  long long v37 = *(_OWORD *)(v31 + 16);
  *(unsigned char *)(v36 + 56) = *(unsigned char *)(v31 + 32);
  *(_OWORD *)(v36 + 24) = v38;
  *(_OWORD *)(v36 + 40) = v37;
  *(void *)(v36 + 64) = v30;
  *(void *)(v36 + 72) = v28;
  *(void *)(v36 + 80) = v29;
  *(void *)(v36 + 88) = v27;
  sub_19EE4E86C(v31);
  swift_unknownObjectRetain();
  id v39 = v28;
  swift_unknownObjectRetain();
  id v40 = v27;
  swift_retain();
  uint64_t v41 = swift_task_alloc();
  *(void *)(v0 + 296) = v41;
  *(void *)uint64_t v41 = v0;
  *(void *)(v41 + 8) = sub_19F1444C8;
  uint64_t v42 = *(void *)(v0 + 168);
  uint64_t v44 = *(void *)(v0 + 120);
  uint64_t v43 = *(void *)(v0 + 128);
  *(void *)(v41 + 152) = v36;
  *(void *)(v41 + 160) = v42;
  *(void *)(v41 + 136) = v44;
  *(void *)(v41 + 144) = &unk_1E9475960;
  LOBYTE(v42) = *(unsigned char *)(v43 + 32);
  long long v45 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)(v41 + 16) = *(_OWORD *)v43;
  *(_OWORD *)(v41 + 32) = v45;
  *(unsigned char *)(v41 + 48) = v42;
  return MEMORY[0x1F4188298](sub_19F14D830, 0, 0);
}

uint64_t sub_19F1444C8()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F14482C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_19F1445E4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F1445E4()
{
  uint64_t v1 = (uint64_t *)(v0 + 232);
  uint64_t v2 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v3 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 184);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 176));
      uint64_t v7 = "";
    }
    uint64_t v1 = (uint64_t *)(v0 + 240);
    uint64_t v10 = *(void *)(v0 + 232);
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 216);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 264))(*(void *)(v0 + 240), v10, v12);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v14, "Perform JetPack Request", v7, v13, 2u);
    MEMORY[0x19F3C9470](v13, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 216);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *(void *)(v0 + 248);
  uint64_t v16 = *(void *)(v0 + 208);
  v9(*v1, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_19F14482C()
{
  uint64_t v1 = (uint64_t *)(v0 + 224);
  swift_release();
  uint64_t v2 = sub_19F1DB87C();
  sub_19F1DB8CC();
  os_signpost_type_t v3 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v4 = *(void *)(v0 + 184);
    uint64_t v5 = *(void *)(v0 + 192);
    uint64_t v6 = *(void *)(v0 + 176);
    swift_retain();
    sub_19F1DB8FC();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v5, v6) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
      uint64_t v7 = "";
    }
    uint64_t v1 = (uint64_t *)(v0 + 240);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *(void *)(v0 + 224);
    uint64_t v12 = *(void *)(v0 + 208);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 264))(*(void *)(v0 + 240), v11, v12);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v2, v3, v14, "Perform JetPack Request", v7, v13, 2u);
    MEMORY[0x19F3C9470](v13, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v9(v11, v12);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 216);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *(void *)(v0 + 248);
  uint64_t v16 = *(void *)(v0 + 208);
  v9(*v1, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_19F144A78()
{
  uint64_t v116 = v0;
  uint64_t v1 = (long long *)(v0 + 176);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(v0 + 808);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v105 = (void *)(v0 + 16);
  os_signpost_type_t v3 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  id v110 = v3;
  uint64_t v112 = sub_19EEC3F3C(0, 45, 0, MEMORY[0x1E4FBC860]);
  v5._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v5._uint64_t object = (void *)0x800000019F26F1B0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  uint64_t v6 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 520);
  *(void *)(v0 + 376) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 352));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
  sub_19EEC3ED8(v0 + 352, v0 + 416, &qword_1EB393260);
  *uint64_t v1 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19EEC3E70(v0 + 416, v0 + 176);
  *(unsigned char *)(v0 + 208) = 0;
  long long v9 = *(_OWORD *)(v0 + 192);
  long long v113 = *v1;
  long long v114 = v9;
  char v115 = *(unsigned char *)(v0 + 208);
  uint64_t v10 = v112;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_19EEC3F3C(0, v112[2] + 1, 1, v112);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  v10[2] = v12 + 1;
  uint64_t v13 = &v10[5 * v12];
  long long v14 = v113;
  long long v15 = v114;
  *((unsigned char *)v13 + 64) = v115;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  uint64_t v112 = v10;
  sub_19EEBD664(v0 + 352, &qword_1EB393260);
  v16._uint64_t countAndFlagsBits = 0;
  v16._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v4 + 32) = v10;
  *(void *)&long long v113 = v110;
  LOBYTE(v112) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v112);
  swift_bridgeObjectRelease();

  uint64_t v17 = *(void *)(v0 + 752);
  uint64_t v18 = *(void *)(v0 + 728);
  uint64_t v19 = *(void *)(v0 + 664);
  uint64_t v20 = *(void *)(v0 + 656);
  sub_19EEC4154(*(void *)(v0 + 568) + 56, (uint64_t)v105);
  sub_19EEC3ED8(v17, v18, &qword_1EB3911D0);
  uint64_t v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v108(v18, 1, v20) == 1)
  {
    int v21 = 4;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 688);
    sub_19EE7A014(*(void *)(v0 + 728), v22, type metadata accessor for JetPackAsset);
    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v24 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v105, v23);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v24 + 8))(&v113, v22, v23, v24);
    int v21 = v113;
    sub_19EE7A09C(v22, type metadata accessor for JetPackAsset);
  }
  unsigned int v106 = v21;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v105);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  unint64_t v25 = (long long *)(v0 + 216);
  uint64_t v26 = *(void *)(v0 + 752);
  uint64_t v27 = *(void *)(v0 + 720);
  uint64_t v28 = *(void *)(v0 + 656);
  uint64_t v29 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_19F24EAD0;
  id v31 = v29;
  uint64_t v112 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
  v32._uint64_t countAndFlagsBits = 0x7341646568636163;
  v32._uint64_t object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  sub_19EEC3ED8(v26, v27, &qword_1EB3911D0);
  unsigned int v33 = v108(v27, 1, v28);
  uint64_t v34 = *(void *)(v0 + 720);
  if (v33 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 720), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(void *)(v0 + 280) = *(void *)(v0 + 656);
    Swift::String v35 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19EE7A014(v34, (uint64_t)v35, type metadata accessor for JetPackAsset);
  }
  sub_19EEC3ED8(v0 + 256, v0 + 288, &qword_1EB393260);
  *unint64_t v25 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19EEC3E70(v0 + 288, v0 + 216);
  *(unsigned char *)(v0 + 248) = 0;
  long long v36 = *(_OWORD *)(v0 + 232);
  long long v113 = *v25;
  long long v114 = v36;
  char v115 = *(unsigned char *)(v0 + 248);
  long long v37 = v112;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v37 = sub_19EEC3F3C(0, v37[2] + 1, 1, v37);
  }
  unint64_t v39 = v37[2];
  unint64_t v38 = v37[3];
  if (v39 >= v38 >> 1) {
    long long v37 = sub_19EEC3F3C((void *)(v38 > 1), v39 + 1, 1, v37);
  }
  id v40 = (long long *)(v0 + 136);
  _OWORD v37[2] = v39 + 1;
  uint64_t v41 = &v37[5 * v39];
  long long v42 = v113;
  long long v43 = v114;
  *((unsigned char *)v41 + 64) = v115;
  *((_OWORD *)v41 + 2) = v42;
  *((_OWORD *)v41 + 3) = v43;
  uint64_t v112 = v37;
  sub_19EEBD664(v0 + 256, &qword_1EB393260);
  v44._uint64_t countAndFlagsBits = 0x3D73757461747320;
  v44._uint64_t object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v44);
  if (v106 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(void *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(unsigned char *)(v0 + 480) = v106;
  }
  sub_19EEC3ED8(v0 + 480, v0 + 384, &qword_1EB393260);
  long long *v40 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19EEC3E70(v0 + 384, v0 + 136);
  *(unsigned char *)(v0 + 168) = 0;
  long long v45 = *(_OWORD *)(v0 + 152);
  long long v113 = *v40;
  long long v114 = v45;
  char v115 = *(unsigned char *)(v0 + 168);
  unint64_t v46 = v112;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v46 = sub_19EEC3F3C(0, v46[2] + 1, 1, v46);
  }
  unint64_t v48 = v46[2];
  unint64_t v47 = v46[3];
  if (v48 >= v47 >> 1) {
    unint64_t v46 = sub_19EEC3F3C((void *)(v47 > 1), v48 + 1, 1, v46);
  }
  uint64_t v49 = *(void *)(v0 + 616);
  uint64_t v50 = *(void *)(v0 + 576);
  long long v46[2] = v48 + 1;
  long long v51 = &v46[5 * v48];
  long long v52 = v113;
  long long v53 = v114;
  *((unsigned char *)v51 + 64) = v115;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  uint64_t v112 = v46;
  sub_19EEBD664(v0 + 480, &qword_1EB393260);
  v54._uint64_t countAndFlagsBits = 0;
  v54._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(void *)(v30 + 32) = v112;
  *(void *)&long long v113 = v31;
  LOBYTE(v112) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v30, (JetEngine::LogMessageLevel)&v112);
  swift_bridgeObjectRelease();

  uint64_t v55 = *(int *)(v49 + 20);
  unsigned int v56 = *(unsigned __int8 *)(v50 + v55);
  if ((v56 | 2) == 2)
  {
    if (v106 != 4)
    {
      uint64_t v57 = *(void *)(v0 + 712);
      uint64_t v58 = *(void *)(v0 + 656);
      sub_19EEC3ED8(*(void *)(v0 + 752), v57, &qword_1EB3911D0);
      unsigned int v59 = v108(v57, 1, v58);
      uint64_t v60 = *(void *)(v0 + 712);
      if (v59 == 1)
      {
        sub_19EEBD664(v60, &qword_1EB3911D0);
      }
      else
      {
        sub_19EE7A014(v60, *(void *)(v0 + 680), type metadata accessor for JetPackAsset);
        if (v106 < 2)
        {
          uint64_t v61 = *(void *)(v0 + 648);
          uint64_t v62 = *(void *)(v0 + 576);
          char v63 = (void *)qword_1EB390E30;
          uint64_t v64 = swift_allocObject();
          *(_OWORD *)(v64 + 16) = xmmword_19F24EAD0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
          uint64_t v65 = swift_allocObject();
          *(_OWORD *)(v65 + 16) = xmmword_19F24EAD0;
          *(void *)(v0 + 472) = MEMORY[0x1E4FBB1A0];
          *(void *)(v0 + 448) = 0xD000000000000012;
          *(void *)(v0 + 456) = 0x800000019F26F1E0;
          *(_OWORD *)(v0 + 96) = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
          id v66 = v63;
          sub_19EEC3E70(v0 + 448, v0 + 96);
          *(unsigned char *)(v0 + 128) = 0;
          long long v67 = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v65 + 32) = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v65 + 48) = v67;
          *(unsigned char *)(v65 + 64) = *(unsigned char *)(v0 + 128);
          *(void *)(v64 + 32) = v65;
          *(void *)&long long v113 = v66;
          LOBYTE(v112) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v64, (JetEngine::LogMessageLevel)&v112);
          swift_bridgeObjectRelease();

          sub_19EE7A5E8(v62, v61, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
          uint64_t v68 = *(void *)(v0 + 648);
          if (v106 - 1 >= 2)
          {
            sub_19EE7A09C(v68, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
          }
          else
          {
            unsigned int v69 = *(unsigned __int8 *)(v68 + *(int *)(v49 + 20));
            sub_19EE7A09C(v68, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
            if (v69 < 2)
            {
              uint64_t v70 = *(void *)(v0 + 688);
              uint64_t v71 = *(void *)(v0 + 680);
              uint64_t v72 = *(void *)(v0 + 664);
              uint64_t v73 = *(void *)(v0 + 640);
              uint64_t v74 = *(void *)(v0 + 632);
              uint64_t v75 = *(void *)(v0 + 624);
              uint64_t v76 = *(void *)(v0 + 608);
              uint64_t v109 = *(void *)(v0 + 592);
              long long v111 = *(void **)(v0 + 600);
              uint64_t v107 = *(void **)(v0 + 584);
              uint64_t v77 = *(void *)(v0 + 576);
              uint64_t v78 = *(void *)(v0 + 568);
              uint64_t v79 = sub_19F1DC37C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v76, 1, 1, v79);
              sub_19EE7A5E8(v77, v73, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
              sub_19EE7A5E8(v71, v70, type metadata accessor for JetPackAsset);
              unint64_t v80 = (*(unsigned __int8 *)(v75 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
              unint64_t v81 = (v74 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v82 = (*(unsigned __int8 *)(v72 + 80) + v81 + 24) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
              uint64_t v83 = (void *)swift_allocObject();
              v83[2] = 0;
              v83[3] = 0;
              v83[4] = v78;
              sub_19EE7A014(v73, (uint64_t)v83 + v80, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
              unint64_t v84 = (void *)((char *)v83 + v81);
              void *v84 = v107;
              v84[1] = v109;
              v84[2] = v111;
              sub_19EE7A014(v70, (uint64_t)v83 + v82, type metadata accessor for JetPackAsset);
              swift_retain();
              id v85 = v107;
              swift_unknownObjectRetain();
              id v86 = v111;
              sub_19EE54490(v76, (uint64_t)&unk_1E94758F0, (uint64_t)v83);
              swift_release();
            }
          }
          uint64_t v100 = *(void *)(v0 + 680);
          uint64_t v101 = *(void *)(v0 + 560);
          sub_19EEBD664(*(void *)(v0 + 752), &qword_1EB3911D0);
          sub_19EE7A014(v100, v101, type metadata accessor for JetPackAsset);
          unint64_t v102 = *(void **)(v0 + 568);
          uint64_t v104 = v102[5];
          uint64_t v103 = v102[6];
          __swift_project_boxed_opaque_existential_1(v102 + 2, v104);
          (*(void (**)(uint64_t, uint64_t))(v103 + 56))(v104, v103);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v91 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_40;
        }
        sub_19EE7A09C(*(void *)(v0 + 680), type metadata accessor for JetPackAsset);
      }
    }
    unsigned int v56 = *(unsigned __int8 *)(v50 + v55);
  }
  if (v56 <= 1)
  {
    if (v106 == 3) {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 760))(*(void *)(v0 + 704), 1, 1, *(void *)(v0 + 656));
    }
    else {
      sub_19EEC3ED8(*(void *)(v0 + 752), *(void *)(v0 + 704), &qword_1EB3911D0);
    }
    char v93 = (void *)swift_task_alloc();
    *(void *)(v0 + 832) = v93;
    *char v93 = v0;
    v93[1] = sub_19F14730C;
    uint64_t v94 = *(void *)(v0 + 704);
    uint64_t v95 = *(void *)(v0 + 600);
    uint64_t v96 = *(void *)(v0 + 592);
    uint64_t v97 = *(void *)(v0 + 584);
    uint64_t v98 = *(void *)(v0 + 576);
    uint64_t v99 = *(void *)(v0 + 560);
    return sub_19F14BF78(v99, v98, v97, v96, v95, v94);
  }
  uint64_t v87 = *(void *)(v0 + 752);
  uint64_t v88 = *(void **)(v0 + 568);
  sub_19F06DFE8();
  swift_allocError();
  swift_willThrow();
  sub_19EEBD664(v87, &qword_1EB3911D0);
  uint64_t v89 = v88[5];
  uint64_t v90 = v88[6];
  __swift_project_boxed_opaque_existential_1(v88 + 2, v89);
  (*(void (**)(uint64_t, uint64_t))(v90 + 56))(v89, v90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v91 = *(uint64_t (**)(void))(v0 + 8);
LABEL_40:
  return v91();
}

uint64_t sub_19F14584C()
{
  *(void *)(*(void *)v1 + 824) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F146524;
  }
  else {
    uint64_t v2 = sub_19F145960;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F145960()
{
  uint64_t v99 = v0;
  sub_19EE7A09C(*(void *)(v0 + 696), type metadata accessor for JetPackAsset);
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 728);
  uint64_t v3 = *(void *)(v0 + 664);
  uint64_t v4 = *(void *)(v0 + 656);
  sub_19EEC4154(*(void *)(v0 + 568) + 56, v0 + 16);
  sub_19EEC3ED8(v1, v2, &qword_1EB3911D0);
  uint64_t v92 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v92(v2, 1, v4) == 1)
  {
    int v5 = 4;
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 688);
    sub_19EE7A014(*(void *)(v0 + 728), v6, type metadata accessor for JetPackAsset);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v7);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v8 + 8))(&v96, v6, v7, v8);
    int v5 = v96;
    sub_19EE7A09C(v6, type metadata accessor for JetPackAsset);
  }
  unsigned int v90 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  long long v9 = (long long *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 752);
  uint64_t v11 = *(void *)(v0 + 720);
  uint64_t v12 = *(void *)(v0 + 656);
  uint64_t v13 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19F24EAD0;
  id v15 = v13;
  uint64_t v95 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
  v16._uint64_t countAndFlagsBits = 0x7341646568636163;
  v16._uint64_t object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  sub_19EEC3ED8(v10, v11, &qword_1EB3911D0);
  unsigned int v17 = v92(v11, 1, v12);
  uint64_t v18 = *(void *)(v0 + 720);
  if (v17 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 720), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(void *)(v0 + 280) = *(void *)(v0 + 656);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19EE7A014(v18, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for JetPackAsset);
  }
  sub_19EEC3ED8(v0 + 256, v0 + 288, &qword_1EB393260);
  *long long v9 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19EEC3E70(v0 + 288, v0 + 216);
  *(unsigned char *)(v0 + 248) = 0;
  long long v20 = *(_OWORD *)(v0 + 232);
  long long v96 = *v9;
  long long v97 = v20;
  char v98 = *(unsigned char *)(v0 + 248);
  int v21 = v95;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v21 = sub_19EEC3F3C(0, v95[2] + 1, 1, v95);
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1) {
    int v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
  }
  uint64_t v24 = (long long *)(v0 + 136);
  void v21[2] = v23 + 1;
  unint64_t v25 = &v21[5 * v23];
  long long v26 = v96;
  long long v27 = v97;
  *((unsigned char *)v25 + 64) = v98;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  uint64_t v95 = v21;
  sub_19EEBD664(v0 + 256, &qword_1EB393260);
  v28._uint64_t countAndFlagsBits = 0x3D73757461747320;
  v28._uint64_t object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  if (v90 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(void *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(unsigned char *)(v0 + 480) = v90;
  }
  sub_19EEC3ED8(v0 + 480, v0 + 384, &qword_1EB393260);
  *uint64_t v24 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19EEC3E70(v0 + 384, v0 + 136);
  *(unsigned char *)(v0 + 168) = 0;
  long long v29 = *(_OWORD *)(v0 + 152);
  long long v96 = *v24;
  long long v97 = v29;
  char v98 = *(unsigned char *)(v0 + 168);
  uint64_t v30 = v95;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v30 = sub_19EEC3F3C(0, v95[2] + 1, 1, v95);
  }
  unint64_t v32 = v30[2];
  unint64_t v31 = v30[3];
  if (v32 >= v31 >> 1) {
    uint64_t v30 = sub_19EEC3F3C((void *)(v31 > 1), v32 + 1, 1, v30);
  }
  uint64_t v33 = *(void *)(v0 + 616);
  uint64_t v34 = *(void *)(v0 + 576);
  void v30[2] = v32 + 1;
  Swift::String v35 = &v30[5 * v32];
  long long v36 = v96;
  long long v37 = v97;
  *((unsigned char *)v35 + 64) = v98;
  *((_OWORD *)v35 + 2) = v36;
  *((_OWORD *)v35 + 3) = v37;
  uint64_t v95 = v30;
  sub_19EEBD664(v0 + 480, &qword_1EB393260);
  v38._uint64_t countAndFlagsBits = 0;
  v38._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  *(void *)(v14 + 32) = v30;
  *(void *)&long long v96 = v15;
  LOBYTE(v95) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v95);
  swift_bridgeObjectRelease();

  uint64_t v39 = *(int *)(v33 + 20);
  unsigned int v40 = *(unsigned __int8 *)(v34 + v39);
  if ((v40 | 2) == 2)
  {
    if (v90 != 4)
    {
      uint64_t v41 = *(void *)(v0 + 712);
      uint64_t v42 = *(void *)(v0 + 656);
      sub_19EEC3ED8(*(void *)(v0 + 752), v41, &qword_1EB3911D0);
      unsigned int v43 = v92(v41, 1, v42);
      uint64_t v44 = *(void *)(v0 + 712);
      if (v43 == 1)
      {
        sub_19EEBD664(v44, &qword_1EB3911D0);
      }
      else
      {
        sub_19EE7A014(v44, *(void *)(v0 + 680), type metadata accessor for JetPackAsset);
        if (v90 < 2)
        {
          uint64_t v45 = *(void *)(v0 + 648);
          uint64_t v46 = *(void *)(v0 + 576);
          unint64_t v47 = (void *)qword_1EB390E30;
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_19F24EAD0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
          uint64_t v49 = swift_allocObject();
          uint64_t v50 = MEMORY[0x1E4FBB1A0];
          *(_OWORD *)(v49 + 16) = xmmword_19F24EAD0;
          *(void *)(v0 + 472) = v50;
          *(void *)(v0 + 448) = 0xD000000000000012;
          *(void *)(v0 + 456) = 0x800000019F26F1E0;
          *(_OWORD *)(v0 + 96) = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
          id v51 = v47;
          sub_19EEC3E70(v0 + 448, v0 + 96);
          *(unsigned char *)(v0 + 128) = 0;
          long long v52 = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v49 + 32) = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v49 + 48) = v52;
          *(unsigned char *)(v49 + 64) = *(unsigned char *)(v0 + 128);
          *(void *)(v48 + 32) = v49;
          *(void *)&long long v96 = v51;
          LOBYTE(v95) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v48, (JetEngine::LogMessageLevel)&v95);
          swift_bridgeObjectRelease();

          sub_19EE7A5E8(v46, v45, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
          uint64_t v53 = *(void *)(v0 + 648);
          if (v90 - 1 >= 2)
          {
            sub_19EE7A09C(v53, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
          }
          else
          {
            unsigned int v54 = *(unsigned __int8 *)(v53 + *(int *)(v33 + 20));
            sub_19EE7A09C(v53, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
            if (v54 < 2)
            {
              uint64_t v55 = *(void *)(v0 + 688);
              uint64_t v56 = *(void *)(v0 + 680);
              uint64_t v57 = *(void *)(v0 + 664);
              uint64_t v58 = *(void *)(v0 + 640);
              uint64_t v59 = *(void *)(v0 + 632);
              uint64_t v60 = *(void *)(v0 + 624);
              uint64_t v61 = *(void *)(v0 + 608);
              uint64_t v93 = *(void *)(v0 + 592);
              uint64_t v94 = *(void **)(v0 + 600);
              uint64_t v91 = *(void **)(v0 + 584);
              uint64_t v62 = *(void *)(v0 + 576);
              uint64_t v63 = *(void *)(v0 + 568);
              uint64_t v64 = sub_19F1DC37C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v61, 1, 1, v64);
              sub_19EE7A5E8(v62, v58, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
              sub_19EE7A5E8(v56, v55, type metadata accessor for JetPackAsset);
              unint64_t v65 = (*(unsigned __int8 *)(v60 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
              unint64_t v66 = (v59 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v67 = (*(unsigned __int8 *)(v57 + 80) + v66 + 24) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
              uint64_t v68 = (void *)swift_allocObject();
              v68[2] = 0;
              void v68[3] = 0;
              void v68[4] = v63;
              sub_19EE7A014(v58, (uint64_t)v68 + v65, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
              unsigned int v69 = (void *)((char *)v68 + v66);
              *unsigned int v69 = v91;
              v69[1] = v93;
              v69[2] = v94;
              sub_19EE7A014(v55, (uint64_t)v68 + v67, type metadata accessor for JetPackAsset);
              swift_retain();
              id v70 = v91;
              swift_unknownObjectRetain();
              id v71 = v94;
              sub_19EE54490(v61, (uint64_t)&unk_1E94758F0, (uint64_t)v68);
              swift_release();
            }
          }
          uint64_t v85 = *(void *)(v0 + 680);
          uint64_t v86 = *(void *)(v0 + 560);
          sub_19EEBD664(*(void *)(v0 + 752), &qword_1EB3911D0);
          sub_19EE7A014(v85, v86, type metadata accessor for JetPackAsset);
          uint64_t v87 = *(void **)(v0 + 568);
          uint64_t v89 = v87[5];
          uint64_t v88 = v87[6];
          __swift_project_boxed_opaque_existential_1(v87 + 2, v89);
          (*(void (**)(uint64_t, uint64_t))(v88 + 56))(v89, v88);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_34;
        }
        sub_19EE7A09C(*(void *)(v0 + 680), type metadata accessor for JetPackAsset);
      }
    }
    unsigned int v40 = *(unsigned __int8 *)(v34 + v39);
  }
  if (v40 <= 1)
  {
    if (v90 == 3) {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 760))(*(void *)(v0 + 704), 1, 1, *(void *)(v0 + 656));
    }
    else {
      sub_19EEC3ED8(*(void *)(v0 + 752), *(void *)(v0 + 704), &qword_1EB3911D0);
    }
    uint64_t v78 = (void *)swift_task_alloc();
    *(void *)(v0 + 832) = v78;
    void *v78 = v0;
    v78[1] = sub_19F14730C;
    uint64_t v79 = *(void *)(v0 + 704);
    uint64_t v80 = *(void *)(v0 + 600);
    uint64_t v81 = *(void *)(v0 + 592);
    uint64_t v82 = *(void *)(v0 + 584);
    uint64_t v83 = *(void *)(v0 + 576);
    uint64_t v84 = *(void *)(v0 + 560);
    return sub_19F14BF78(v84, v83, v82, v81, v80, v79);
  }
  uint64_t v72 = *(void *)(v0 + 752);
  uint64_t v73 = *(void **)(v0 + 568);
  sub_19F06DFE8();
  swift_allocError();
  swift_willThrow();
  sub_19EEBD664(v72, &qword_1EB3911D0);
  uint64_t v74 = v73[5];
  uint64_t v75 = v73[6];
  __swift_project_boxed_opaque_existential_1(v73 + 2, v74);
  (*(void (**)(uint64_t, uint64_t))(v75 + 56))(v74, v75);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
LABEL_34:
  return v76();
}

uint64_t sub_19F146524()
{
  uint64_t v116 = v0;
  uint64_t v1 = (long long *)(v0 + 176);
  sub_19EE7A09C(*(void *)(v0 + 696), type metadata accessor for JetPackAsset);
  uint64_t v2 = *(void **)(v0 + 824);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v105 = (void *)(v0 + 16);
  uint64_t v3 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  id v110 = v3;
  uint64_t v112 = sub_19EEC3F3C(0, 45, 0, MEMORY[0x1E4FBC860]);
  v5._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v5._uint64_t object = (void *)0x800000019F26F1B0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  uint64_t v6 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 520);
  *(void *)(v0 + 376) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 352));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
  sub_19EEC3ED8(v0 + 352, v0 + 416, &qword_1EB393260);
  *uint64_t v1 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19EEC3E70(v0 + 416, v0 + 176);
  *(unsigned char *)(v0 + 208) = 0;
  long long v9 = *(_OWORD *)(v0 + 192);
  long long v113 = *v1;
  long long v114 = v9;
  char v115 = *(unsigned char *)(v0 + 208);
  uint64_t v10 = v112;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_19EEC3F3C(0, v112[2] + 1, 1, v112);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  v10[2] = v12 + 1;
  uint64_t v13 = &v10[5 * v12];
  long long v14 = v113;
  long long v15 = v114;
  *((unsigned char *)v13 + 64) = v115;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  uint64_t v112 = v10;
  sub_19EEBD664(v0 + 352, &qword_1EB393260);
  v16._uint64_t countAndFlagsBits = 0;
  v16._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v4 + 32) = v10;
  *(void *)&long long v113 = v110;
  LOBYTE(v112) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v112);
  swift_bridgeObjectRelease();

  uint64_t v17 = *(void *)(v0 + 752);
  uint64_t v18 = *(void *)(v0 + 728);
  uint64_t v19 = *(void *)(v0 + 664);
  uint64_t v20 = *(void *)(v0 + 656);
  sub_19EEC4154(*(void *)(v0 + 568) + 56, (uint64_t)v105);
  sub_19EEC3ED8(v17, v18, &qword_1EB3911D0);
  uint64_t v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v108(v18, 1, v20) == 1)
  {
    int v21 = 4;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 688);
    sub_19EE7A014(*(void *)(v0 + 728), v22, type metadata accessor for JetPackAsset);
    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v24 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v105, v23);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v24 + 8))(&v113, v22, v23, v24);
    int v21 = v113;
    sub_19EE7A09C(v22, type metadata accessor for JetPackAsset);
  }
  unsigned int v106 = v21;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v105);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  unint64_t v25 = (long long *)(v0 + 216);
  uint64_t v26 = *(void *)(v0 + 752);
  uint64_t v27 = *(void *)(v0 + 720);
  uint64_t v28 = *(void *)(v0 + 656);
  long long v29 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_19F24EAD0;
  id v31 = v29;
  uint64_t v112 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
  v32._uint64_t countAndFlagsBits = 0x7341646568636163;
  v32._uint64_t object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  sub_19EEC3ED8(v26, v27, &qword_1EB3911D0);
  unsigned int v33 = v108(v27, 1, v28);
  uint64_t v34 = *(void *)(v0 + 720);
  if (v33 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 720), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(void *)(v0 + 280) = *(void *)(v0 + 656);
    Swift::String v35 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19EE7A014(v34, (uint64_t)v35, type metadata accessor for JetPackAsset);
  }
  sub_19EEC3ED8(v0 + 256, v0 + 288, &qword_1EB393260);
  *unint64_t v25 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19EEC3E70(v0 + 288, v0 + 216);
  *(unsigned char *)(v0 + 248) = 0;
  long long v36 = *(_OWORD *)(v0 + 232);
  long long v113 = *v25;
  long long v114 = v36;
  char v115 = *(unsigned char *)(v0 + 248);
  long long v37 = v112;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v37 = sub_19EEC3F3C(0, v37[2] + 1, 1, v37);
  }
  unint64_t v39 = v37[2];
  unint64_t v38 = v37[3];
  if (v39 >= v38 >> 1) {
    long long v37 = sub_19EEC3F3C((void *)(v38 > 1), v39 + 1, 1, v37);
  }
  unsigned int v40 = (long long *)(v0 + 136);
  _OWORD v37[2] = v39 + 1;
  uint64_t v41 = &v37[5 * v39];
  long long v42 = v113;
  long long v43 = v114;
  *((unsigned char *)v41 + 64) = v115;
  *((_OWORD *)v41 + 2) = v42;
  *((_OWORD *)v41 + 3) = v43;
  uint64_t v112 = v37;
  sub_19EEBD664(v0 + 256, &qword_1EB393260);
  v44._uint64_t countAndFlagsBits = 0x3D73757461747320;
  v44._uint64_t object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v44);
  if (v106 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(void *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(unsigned char *)(v0 + 480) = v106;
  }
  sub_19EEC3ED8(v0 + 480, v0 + 384, &qword_1EB393260);
  long long *v40 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19EEC3E70(v0 + 384, v0 + 136);
  *(unsigned char *)(v0 + 168) = 0;
  long long v45 = *(_OWORD *)(v0 + 152);
  long long v113 = *v40;
  long long v114 = v45;
  char v115 = *(unsigned char *)(v0 + 168);
  uint64_t v46 = v112;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v46 = sub_19EEC3F3C(0, v46[2] + 1, 1, v46);
  }
  unint64_t v48 = v46[2];
  unint64_t v47 = v46[3];
  if (v48 >= v47 >> 1) {
    uint64_t v46 = sub_19EEC3F3C((void *)(v47 > 1), v48 + 1, 1, v46);
  }
  uint64_t v49 = *(void *)(v0 + 616);
  uint64_t v50 = *(void *)(v0 + 576);
  long long v46[2] = v48 + 1;
  id v51 = &v46[5 * v48];
  long long v52 = v113;
  long long v53 = v114;
  *((unsigned char *)v51 + 64) = v115;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  uint64_t v112 = v46;
  sub_19EEBD664(v0 + 480, &qword_1EB393260);
  v54._uint64_t countAndFlagsBits = 0;
  v54._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(void *)(v30 + 32) = v112;
  *(void *)&long long v113 = v31;
  LOBYTE(v112) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v30, (JetEngine::LogMessageLevel)&v112);
  swift_bridgeObjectRelease();

  uint64_t v55 = *(int *)(v49 + 20);
  unsigned int v56 = *(unsigned __int8 *)(v50 + v55);
  if ((v56 | 2) == 2)
  {
    if (v106 != 4)
    {
      uint64_t v57 = *(void *)(v0 + 712);
      uint64_t v58 = *(void *)(v0 + 656);
      sub_19EEC3ED8(*(void *)(v0 + 752), v57, &qword_1EB3911D0);
      unsigned int v59 = v108(v57, 1, v58);
      uint64_t v60 = *(void *)(v0 + 712);
      if (v59 == 1)
      {
        sub_19EEBD664(v60, &qword_1EB3911D0);
      }
      else
      {
        sub_19EE7A014(v60, *(void *)(v0 + 680), type metadata accessor for JetPackAsset);
        if (v106 < 2)
        {
          uint64_t v61 = *(void *)(v0 + 648);
          uint64_t v62 = *(void *)(v0 + 576);
          uint64_t v63 = (void *)qword_1EB390E30;
          uint64_t v64 = swift_allocObject();
          *(_OWORD *)(v64 + 16) = xmmword_19F24EAD0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
          uint64_t v65 = swift_allocObject();
          *(_OWORD *)(v65 + 16) = xmmword_19F24EAD0;
          *(void *)(v0 + 472) = MEMORY[0x1E4FBB1A0];
          *(void *)(v0 + 448) = 0xD000000000000012;
          *(void *)(v0 + 456) = 0x800000019F26F1E0;
          *(_OWORD *)(v0 + 96) = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
          id v66 = v63;
          sub_19EEC3E70(v0 + 448, v0 + 96);
          *(unsigned char *)(v0 + 128) = 0;
          long long v67 = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v65 + 32) = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v65 + 48) = v67;
          *(unsigned char *)(v65 + 64) = *(unsigned char *)(v0 + 128);
          *(void *)(v64 + 32) = v65;
          *(void *)&long long v113 = v66;
          LOBYTE(v112) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v64, (JetEngine::LogMessageLevel)&v112);
          swift_bridgeObjectRelease();

          sub_19EE7A5E8(v62, v61, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
          uint64_t v68 = *(void *)(v0 + 648);
          if (v106 - 1 >= 2)
          {
            sub_19EE7A09C(v68, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
          }
          else
          {
            unsigned int v69 = *(unsigned __int8 *)(v68 + *(int *)(v49 + 20));
            sub_19EE7A09C(v68, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
            if (v69 < 2)
            {
              uint64_t v70 = *(void *)(v0 + 688);
              uint64_t v71 = *(void *)(v0 + 680);
              uint64_t v72 = *(void *)(v0 + 664);
              uint64_t v73 = *(void *)(v0 + 640);
              uint64_t v74 = *(void *)(v0 + 632);
              uint64_t v75 = *(void *)(v0 + 624);
              uint64_t v76 = *(void *)(v0 + 608);
              uint64_t v109 = *(void *)(v0 + 592);
              long long v111 = *(void **)(v0 + 600);
              uint64_t v107 = *(void **)(v0 + 584);
              uint64_t v77 = *(void *)(v0 + 576);
              uint64_t v78 = *(void *)(v0 + 568);
              uint64_t v79 = sub_19F1DC37C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v76, 1, 1, v79);
              sub_19EE7A5E8(v77, v73, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
              sub_19EE7A5E8(v71, v70, type metadata accessor for JetPackAsset);
              unint64_t v80 = (*(unsigned __int8 *)(v75 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
              unint64_t v81 = (v74 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v82 = (*(unsigned __int8 *)(v72 + 80) + v81 + 24) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
              uint64_t v83 = (void *)swift_allocObject();
              v83[2] = 0;
              v83[3] = 0;
              v83[4] = v78;
              sub_19EE7A014(v73, (uint64_t)v83 + v80, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
              uint64_t v84 = (void *)((char *)v83 + v81);
              void *v84 = v107;
              v84[1] = v109;
              v84[2] = v111;
              sub_19EE7A014(v70, (uint64_t)v83 + v82, type metadata accessor for JetPackAsset);
              swift_retain();
              id v85 = v107;
              swift_unknownObjectRetain();
              id v86 = v111;
              sub_19EE54490(v76, (uint64_t)&unk_1E94758F0, (uint64_t)v83);
              swift_release();
            }
          }
          uint64_t v100 = *(void *)(v0 + 680);
          uint64_t v101 = *(void *)(v0 + 560);
          sub_19EEBD664(*(void *)(v0 + 752), &qword_1EB3911D0);
          sub_19EE7A014(v100, v101, type metadata accessor for JetPackAsset);
          unint64_t v102 = *(void **)(v0 + 568);
          uint64_t v104 = v102[5];
          uint64_t v103 = v102[6];
          __swift_project_boxed_opaque_existential_1(v102 + 2, v104);
          (*(void (**)(uint64_t, uint64_t))(v103 + 56))(v104, v103);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v91 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_40;
        }
        sub_19EE7A09C(*(void *)(v0 + 680), type metadata accessor for JetPackAsset);
      }
    }
    unsigned int v56 = *(unsigned __int8 *)(v50 + v55);
  }
  if (v56 <= 1)
  {
    if (v106 == 3) {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 760))(*(void *)(v0 + 704), 1, 1, *(void *)(v0 + 656));
    }
    else {
      sub_19EEC3ED8(*(void *)(v0 + 752), *(void *)(v0 + 704), &qword_1EB3911D0);
    }
    uint64_t v93 = (void *)swift_task_alloc();
    *(void *)(v0 + 832) = v93;
    *uint64_t v93 = v0;
    v93[1] = sub_19F14730C;
    uint64_t v94 = *(void *)(v0 + 704);
    uint64_t v95 = *(void *)(v0 + 600);
    uint64_t v96 = *(void *)(v0 + 592);
    uint64_t v97 = *(void *)(v0 + 584);
    uint64_t v98 = *(void *)(v0 + 576);
    uint64_t v99 = *(void *)(v0 + 560);
    return sub_19F14BF78(v99, v98, v97, v96, v95, v94);
  }
  uint64_t v87 = *(void *)(v0 + 752);
  uint64_t v88 = *(void **)(v0 + 568);
  sub_19F06DFE8();
  swift_allocError();
  swift_willThrow();
  sub_19EEBD664(v87, &qword_1EB3911D0);
  uint64_t v89 = v88[5];
  uint64_t v90 = v88[6];
  __swift_project_boxed_opaque_existential_1(v88 + 2, v89);
  (*(void (**)(uint64_t, uint64_t))(v90 + 56))(v89, v90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v91 = *(uint64_t (**)(void))(v0 + 8);
LABEL_40:
  return v91();
}

uint64_t sub_19F14730C()
{
  *(void *)(*(void *)v1 + 840) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F1475A0;
  }
  else {
    uint64_t v2 = sub_19F147420;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F147420()
{
  uint64_t v1 = v0[94];
  sub_19EEBD664(v0[88], &qword_1EB3911D0);
  sub_19EEBD664(v1, &qword_1EB3911D0);
  uint64_t v2 = (void *)v0[71];
  uint64_t v4 = v2[5];
  uint64_t v3 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v4, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_19F1475A0()
{
  uint64_t v1 = v0[94];
  uint64_t v2 = (void *)v0[71];
  uint64_t v3 = v2 + 2;
  sub_19EEBD664(v0[88], &qword_1EB3911D0);
  sub_19EEBD664(v1, &qword_1EB3911D0);
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[6];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_19F14771C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[80] = a7;
  v7[79] = a6;
  v7[78] = a5;
  v7[77] = a4;
  v7[76] = a3;
  v7[75] = a2;
  v7[74] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  v7[81] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for JetPackAsset(0);
  v7[82] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[83] = v9;
  v7[84] = *(void *)(v9 + 64);
  v7[85] = swift_task_alloc();
  v7[86] = swift_task_alloc();
  v7[87] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  v7[88] = swift_task_alloc();
  v7[89] = swift_task_alloc();
  v7[90] = swift_task_alloc();
  v7[91] = swift_task_alloc();
  v7[92] = swift_task_alloc();
  v7[93] = swift_task_alloc();
  v7[94] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F1478C4, 0, 0);
}

uint64_t sub_19F1478C4()
{
  sub_19F1DC45C();
  uint64_t v1 = *(void **)(v0 + 600);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
  uint64_t v4 = *(void *)(v0 + 752);
  uint64_t v5 = *(void *)(v0 + 664);
  uint64_t v6 = *(void *)(v0 + 656);
  uint64_t v7 = *(long long **)(v0 + 608);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  *(void *)(v0 + 760) = v8;
  *(void *)(v0 + 768) = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v8(v4, 1, 1, v6);
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v9);
  *(_OWORD *)(v0 + 536) = *v7;
  *(void *)(v0 + 776) = *((void *)v7 + 2);
  *(void *)(v0 + 784) = *((void *)v7 + 3);
  *(_OWORD *)(v0 + 568) = *v7;
  long long v15 = *v7;
  sub_19EE9CFFC(v0 + 536);
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 792) = *((void *)&v15 + 1);
  long long v14 = (uint64_t (*)(uint64_t, void, void, uint64_t, uint64_t))(*(void *)(v10 + 16) + **(int **)(v10 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 800) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_19F147BA8;
  uint64_t v12 = *(void *)(v0 + 744);
  return v14(v12, v15, *((void *)&v15 + 1), v9, v10);
}

uint64_t sub_19F147BA8()
{
  *(void *)(*(void *)v1 + 808) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_19F148BB0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_19F147CC4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_19F147CC4()
{
  uint64_t v116 = v0;
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 744);
  uint64_t v3 = *(void *)(v0 + 736);
  uint64_t v4 = *(void *)(v0 + 664);
  uint64_t v5 = *(void *)(v0 + 656);
  sub_19EEBD664(v1, &qword_1EB3911D0);
  sub_19EEBDC4C(v2, v1, &qword_1EB3911D0);
  sub_19EEC3ED8(v1, v3, &qword_1EB3911D0);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  uint64_t v7 = *(void *)(v0 + 736);
  if (v6 == 1)
  {
    sub_19EEBD664(v7, &qword_1EB3911D0);
LABEL_3:
    uint64_t v8 = *(void *)(v0 + 752);
    uint64_t v9 = *(void *)(v0 + 728);
    uint64_t v10 = *(void *)(v0 + 664);
    uint64_t v11 = *(void *)(v0 + 656);
    sub_19EEC4154(*(void *)(v0 + 600) + 56, v0 + 16);
    sub_19EEC3ED8(v8, v9, &qword_1EB3911D0);
    uint64_t v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (v108(v9, 1, v11) == 1)
    {
      int v12 = 4;
    }
    else
    {
      uint64_t v17 = *(void *)(v0 + 688);
      sub_19EE7A014(*(void *)(v0 + 728), v17, type metadata accessor for JetPackAsset);
      uint64_t v18 = *(void *)(v0 + 40);
      uint64_t v19 = *(void *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v18);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v19 + 8))(&v113, v17, v18, v19);
      int v12 = v113;
      sub_19EE7A09C(v17, type metadata accessor for JetPackAsset);
    }
    unsigned int v106 = v12;
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    if (qword_1EB390E38 != -1) {
      swift_once();
    }
    uint64_t v20 = (long long *)(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 752);
    uint64_t v22 = *(void *)(v0 + 720);
    uint64_t v23 = *(void *)(v0 + 656);
    uint64_t v24 = (void *)qword_1EB390E30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_19F24EAD0;
    id v26 = v24;
    uint64_t v112 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
    v27._uint64_t countAndFlagsBits = 0x7341646568636163;
    v27._uint64_t object = (void *)0xEC0000003D746573;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    sub_19EEC3ED8(v21, v22, &qword_1EB3911D0);
    unsigned int v28 = v108(v22, 1, v23);
    uint64_t v29 = *(void *)(v0 + 720);
    if (v28 == 1)
    {
      sub_19EEBD664(*(void *)(v0 + 720), &qword_1EB3911D0);
      *(_OWORD *)(v0 + 320) = 0u;
      *(_OWORD *)(v0 + 336) = 0u;
    }
    else
    {
      *(void *)(v0 + 344) = *(void *)(v0 + 656);
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 320));
      sub_19EE7A014(v29, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for JetPackAsset);
    }
    sub_19EEC3ED8(v0 + 320, v0 + 352, &qword_1EB393260);
    *uint64_t v20 = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    sub_19EEC3E70(v0 + 352, v0 + 176);
    *(unsigned char *)(v0 + 208) = 0;
    long long v31 = *(_OWORD *)(v0 + 192);
    long long v113 = *v20;
    long long v114 = v31;
    char v115 = *(unsigned char *)(v0 + 208);
    Swift::String v32 = v112;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v32 = sub_19EEC3F3C(0, v112[2] + 1, 1, v112);
    }
    unint64_t v34 = v32[2];
    unint64_t v33 = v32[3];
    if (v34 >= v33 >> 1) {
      Swift::String v32 = sub_19EEC3F3C((void *)(v33 > 1), v34 + 1, 1, v32);
    }
    Swift::String v35 = (long long *)(v0 + 136);
    v32[2] = v34 + 1;
    long long v36 = &v32[5 * v34];
    long long v37 = v113;
    long long v38 = v114;
    *((unsigned char *)v36 + 64) = v115;
    *((_OWORD *)v36 + 2) = v37;
    *((_OWORD *)v36 + 3) = v38;
    uint64_t v112 = v32;
    sub_19EEBD664(v0 + 320, &qword_1EB393260);
    v39._uint64_t countAndFlagsBits = 0x3D73757461747320;
    v39._uint64_t object = (void *)0xE800000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    if (v106 == 4)
    {
      *(_OWORD *)(v0 + 416) = 0u;
      *(_OWORD *)(v0 + 432) = 0u;
    }
    else
    {
      *(void *)(v0 + 440) = &type metadata for JetPackAssetCacheStatus;
      *(unsigned char *)(v0 + 416) = v106;
    }
    sub_19EEC3ED8(v0 + 416, v0 + 448, &qword_1EB393260);
    *Swift::String v35 = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_19EEC3E70(v0 + 448, v0 + 136);
    *(unsigned char *)(v0 + 168) = 0;
    long long v40 = *(_OWORD *)(v0 + 152);
    long long v113 = *v35;
    long long v114 = v40;
    char v115 = *(unsigned char *)(v0 + 168);
    uint64_t v41 = v112;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v41 = sub_19EEC3F3C(0, v112[2] + 1, 1, v112);
    }
    unint64_t v43 = v41[2];
    unint64_t v42 = v41[3];
    if (v43 >= v42 >> 1) {
      uint64_t v41 = sub_19EEC3F3C((void *)(v42 > 1), v43 + 1, 1, v41);
    }
    uint64_t v44 = *(void *)(v0 + 608);
    v41[2] = v43 + 1;
    long long v45 = &v41[5 * v43];
    long long v46 = v113;
    long long v47 = v114;
    *((unsigned char *)v45 + 64) = v115;
    *((_OWORD *)v45 + 2) = v46;
    *((_OWORD *)v45 + 3) = v47;
    uint64_t v112 = v41;
    sub_19EEBD664(v0 + 416, &qword_1EB393260);
    v48._uint64_t countAndFlagsBits = 0;
    v48._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    *(void *)(v25 + 32) = v41;
    *(void *)&long long v113 = v26;
    LOBYTE(v112) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v25, (JetEngine::LogMessageLevel)&v112);
    swift_bridgeObjectRelease();

    unsigned int v49 = *(unsigned __int8 *)(v44 + 32);
    if (v49 != 2)
    {
      if (v49 == 1)
      {
LABEL_33:
        if (v106 == 3) {
          (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 760))(*(void *)(v0 + 704), 1, 1, *(void *)(v0 + 656));
        }
        else {
          sub_19EEC3ED8(*(void *)(v0 + 752), *(void *)(v0 + 704), &qword_1EB3911D0);
        }
        long long v67 = (void *)swift_task_alloc();
        *(void *)(v0 + 832) = v67;
        void *v67 = v0;
        v67[1] = sub_19F14B1B4;
        uint64_t v68 = *(void *)(v0 + 704);
        uint64_t v69 = *(void *)(v0 + 640);
        uint64_t v70 = *(void *)(v0 + 632);
        uint64_t v71 = *(void *)(v0 + 624);
        uint64_t v72 = *(void *)(v0 + 616);
        uint64_t v73 = *(void *)(v0 + 608);
        uint64_t v74 = *(void *)(v0 + 592);
        sub_19F14CA94(v74, v73, v72, v71, v70, v69, v68);
        return;
      }
      if (*(unsigned char *)(v44 + 32)) {
        goto LABEL_51;
      }
    }
    if (v106 != 4)
    {
      uint64_t v50 = *(void *)(v0 + 712);
      uint64_t v51 = *(void *)(v0 + 656);
      sub_19EEC3ED8(*(void *)(v0 + 752), v50, &qword_1EB3911D0);
      unsigned int v52 = v108(v50, 1, v51);
      uint64_t v53 = *(void *)(v0 + 712);
      if (v52 != 1)
      {
        sub_19EE7A014(v53, *(void *)(v0 + 680), type metadata accessor for JetPackAsset);
        if (v106 < 2)
        {
          uint64_t v75 = (void *)qword_1EB390E30;
          uint64_t v76 = swift_allocObject();
          *(_OWORD *)(v76 + 16) = xmmword_19F24EAD0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
          uint64_t v77 = swift_allocObject();
          uint64_t v78 = MEMORY[0x1E4FBB1A0];
          *(_OWORD *)(v77 + 16) = xmmword_19F24EAD0;
          *(void *)(v0 + 504) = v78;
          *(void *)(v0 + 480) = 0xD000000000000012;
          *(void *)(v0 + 488) = 0x800000019F26F1E0;
          *(_OWORD *)(v0 + 96) = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
          id v79 = v75;
          sub_19EEC3E70(v0 + 480, v0 + 96);
          *(unsigned char *)(v0 + 128) = 0;
          long long v80 = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v77 + 32) = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v77 + 48) = v80;
          *(unsigned char *)(v77 + 64) = *(unsigned char *)(v0 + 128);
          *(void *)(v76 + 32) = v77;
          *(void *)&long long v113 = v79;
          LOBYTE(v112) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v76, (JetEngine::LogMessageLevel)&v112);
          swift_bridgeObjectRelease();

          if ((v49 | (v106 - 1)) <= 1u)
          {
            uint64_t v81 = *(void *)(v0 + 688);
            uint64_t v82 = *(void *)(v0 + 680);
            uint64_t v83 = *(void *)(v0 + 664);
            uint64_t v84 = *(void *)(v0 + 648);
            long long v111 = *(void **)(v0 + 640);
            uint64_t v85 = *(void *)(v0 + 632);
            id v86 = *(void **)(v0 + 624);
            uint64_t v87 = *(void *)(v0 + 616);
            uint64_t v88 = *(void *)(v0 + 608);
            uint64_t v107 = *(void *)(v0 + 600);
            uint64_t v89 = sub_19F1DC37C();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v84, 1, 1, v89);
            long long v90 = *(_OWORD *)(v88 + 16);
            long long v113 = *(_OWORD *)v88;
            long long v114 = v90;
            char v115 = *(unsigned char *)(v88 + 32);
            sub_19EE7A5E8(v82, v81, type metadata accessor for JetPackAsset);
            unint64_t v91 = (*(unsigned __int8 *)(v83 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
            uint64_t v92 = swift_allocObject();
            long long v93 = v114;
            *(_OWORD *)(v92 + 40) = v113;
            *(void *)(v92 + 16) = 0;
            *(void *)(v92 + 24) = 0;
            *(void *)(v92 + 32) = v107;
            *(_OWORD *)(v92 + 56) = v93;
            *(unsigned char *)(v92 + 72) = v115;
            *(void *)(v92 + 80) = v87;
            *(void *)(v92 + 88) = v86;
            *(void *)(v92 + 96) = v85;
            *(void *)(v92 + 104) = v111;
            sub_19EE7A014(v81, v92 + v91, type metadata accessor for JetPackAsset);
            sub_19EE4E86C(v88);
            swift_unknownObjectRetain();
            id v94 = v86;
            swift_unknownObjectRetain();
            id v95 = v111;
            swift_retain();
            sub_19EE54490(v84, (uint64_t)&unk_1E9475998, v92);
            swift_release();
          }
          uint64_t v96 = *(void *)(v0 + 680);
          uint64_t v97 = *(void *)(v0 + 592);
          sub_19EEBD664(*(void *)(v0 + 752), &qword_1EB3911D0);
          sub_19EE7A014(v96, v97, type metadata accessor for JetPackAsset);
          uint64_t v98 = *(void **)(v0 + 600);
          uint64_t v99 = v98[5];
          uint64_t v100 = v98[6];
          __swift_project_boxed_opaque_existential_1(v98 + 2, v99);
          (*(void (**)(uint64_t, uint64_t))(v100 + 56))(v99, v100);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v101 = *(void (**)(void))(v0 + 8);
          goto LABEL_52;
        }
        sub_19EE7A09C(*(void *)(v0 + 680), type metadata accessor for JetPackAsset);
        if (v49 <= 1) {
          goto LABEL_33;
        }
LABEL_51:
        uint64_t v102 = *(void *)(v0 + 752);
        uint64_t v103 = *(void **)(v0 + 600);
        sub_19F06DFE8();
        swift_allocError();
        swift_willThrow();
        sub_19EEBD664(v102, &qword_1EB3911D0);
        uint64_t v104 = v103[5];
        uint64_t v105 = v103[6];
        __swift_project_boxed_opaque_existential_1(v103 + 2, v104);
        (*(void (**)(uint64_t, uint64_t))(v105 + 56))(v104, v105);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v101 = *(void (**)(void))(v0 + 8);
LABEL_52:
        v101();
        return;
      }
      sub_19EEBD664(v53, &qword_1EB3911D0);
    }
    if (v49 <= 1) {
      goto LABEL_33;
    }
    goto LABEL_51;
  }
  sub_19EE7A014(v7, *(void *)(v0 + 696), type metadata accessor for JetPackAsset);
  if (qword_1EB390B70 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)(v0 + 808);
  uint64_t v14 = qword_1EB394EE0;
  long long v113 = *(_OWORD *)(v0 + 568);
  sub_19EE9CFFC(v0 + 536);
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)&v113 + 1);
  *(void *)(v0 + 552) = v113;
  *(void *)(v0 + 560) = v15;
  uint64_t v16 = *(void *)(v14 + 16);
  *(void *)(swift_task_alloc() + 16) = v0 + 552;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v16 + 24));
  sub_19EE7AE20((uint64_t *)(v16 + 16), &v113);
  os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 24));
  if (!v13)
  {
    char v54 = v113;
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if ((v54 & 1) == 0)
    {
      sub_19EE7A09C(*(void *)(v0 + 696), type metadata accessor for JetPackAsset);
      goto LABEL_3;
    }
    if (qword_1EB390E38 != -1) {
      swift_once();
    }
    uint64_t v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 760);
    uint64_t v55 = *(void *)(v0 + 752);
    uint64_t v56 = *(void *)(v0 + 656);
    uint64_t v57 = *(void **)(v0 + 600);
    uint64_t v58 = (void *)qword_1EB390E30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 408) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 384) = 0xD000000000000054;
    *(void *)(v0 + 392) = 0x800000019F26F200;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    id v61 = v58;
    sub_19EEC3E70(v0 + 384, v0 + 56);
    *(unsigned char *)(v0 + 88) = 0;
    *(unsigned char *)(v60 + 64) = 0;
    long long v62 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v60 + 32) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v60 + 48) = v62;
    *(void *)(v59 + 32) = v60;
    *(void *)&long long v113 = v61;
    LOBYTE(v112) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v59, (JetEngine::LogMessageLevel)&v112);
    swift_bridgeObjectRelease();

    sub_19EEBD664(v55, &qword_1EB3911D0);
    v109(v55, 1, 1, v56);
    uint64_t v63 = v57[5];
    uint64_t v64 = v57[6];
    __swift_project_boxed_opaque_existential_1(v57 + 2, v63);
    id v110 = (void (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 + 24) + **(int **)(v64 + 24));
    uint64_t v65 = (void *)swift_task_alloc();
    *(void *)(v0 + 816) = v65;
    void *v65 = v0;
    v65[1] = sub_19F1498AC;
    uint64_t v66 = *(void *)(v0 + 696);
    v110(v66, v63, v64);
  }
}

uint64_t sub_19F148BB0()
{
  uint64_t v108 = v0;
  uint64_t v1 = (long long *)(v0 + 216);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(v0 + 808);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v98 = (void *)(v0 + 16);
  uint64_t v3 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  id v103 = v3;
  uint64_t v104 = sub_19EEC3F3C(0, 45, 0, MEMORY[0x1E4FBC860]);
  v5._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v5._uint64_t object = (void *)0x800000019F26F1B0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  uint64_t v6 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 520);
  *(void *)(v0 + 312) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 288));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
  sub_19EEC3ED8(v0 + 288, v0 + 256, &qword_1EB393260);
  *uint64_t v1 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19EEC3E70(v0 + 256, v0 + 216);
  *(unsigned char *)(v0 + 248) = 0;
  long long v9 = *(_OWORD *)(v0 + 232);
  long long v105 = *v1;
  long long v106 = v9;
  char v107 = *(unsigned char *)(v0 + 248);
  uint64_t v10 = v104;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_19EEC3F3C(0, v104[2] + 1, 1, v104);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  v10[2] = v12 + 1;
  uint64_t v13 = &v10[5 * v12];
  long long v14 = v105;
  long long v15 = v106;
  *((unsigned char *)v13 + 64) = v107;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  uint64_t v104 = v10;
  sub_19EEBD664(v0 + 288, &qword_1EB393260);
  v16._uint64_t countAndFlagsBits = 0;
  v16._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v4 + 32) = v10;
  *(void *)&long long v105 = v103;
  LOBYTE(v104) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v104);
  swift_bridgeObjectRelease();

  uint64_t v17 = *(void *)(v0 + 752);
  uint64_t v18 = *(void *)(v0 + 728);
  uint64_t v19 = *(void *)(v0 + 664);
  uint64_t v20 = *(void *)(v0 + 656);
  sub_19EEC4154(*(void *)(v0 + 600) + 56, (uint64_t)v98);
  sub_19EEC3ED8(v17, v18, &qword_1EB3911D0);
  uint64_t v101 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v101(v18, 1, v20) == 1)
  {
    int v21 = 4;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 688);
    sub_19EE7A014(*(void *)(v0 + 728), v22, type metadata accessor for JetPackAsset);
    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v24 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v98, v23);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v24 + 8))(&v105, v22, v23, v24);
    int v21 = v105;
    sub_19EE7A09C(v22, type metadata accessor for JetPackAsset);
  }
  unsigned int v99 = v21;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v98);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v25 = (long long *)(v0 + 176);
  uint64_t v26 = *(void *)(v0 + 752);
  uint64_t v27 = *(void *)(v0 + 720);
  uint64_t v28 = *(void *)(v0 + 656);
  uint64_t v29 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_19F24EAD0;
  id v31 = v29;
  uint64_t v104 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
  v32._uint64_t countAndFlagsBits = 0x7341646568636163;
  v32._uint64_t object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  sub_19EEC3ED8(v26, v27, &qword_1EB3911D0);
  unsigned int v33 = v101(v27, 1, v28);
  uint64_t v34 = *(void *)(v0 + 720);
  if (v33 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 720), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 320) = 0u;
    *(_OWORD *)(v0 + 336) = 0u;
  }
  else
  {
    *(void *)(v0 + 344) = *(void *)(v0 + 656);
    Swift::String v35 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 320));
    sub_19EE7A014(v34, (uint64_t)v35, type metadata accessor for JetPackAsset);
  }
  sub_19EEC3ED8(v0 + 320, v0 + 352, &qword_1EB393260);
  *uint64_t v25 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19EEC3E70(v0 + 352, v0 + 176);
  *(unsigned char *)(v0 + 208) = 0;
  long long v36 = *(_OWORD *)(v0 + 192);
  long long v105 = *v25;
  long long v106 = v36;
  char v107 = *(unsigned char *)(v0 + 208);
  long long v37 = v104;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v37 = sub_19EEC3F3C(0, v37[2] + 1, 1, v37);
  }
  unint64_t v39 = v37[2];
  unint64_t v38 = v37[3];
  if (v39 >= v38 >> 1) {
    long long v37 = sub_19EEC3F3C((void *)(v38 > 1), v39 + 1, 1, v37);
  }
  long long v40 = (long long *)(v0 + 136);
  _OWORD v37[2] = v39 + 1;
  uint64_t v41 = &v37[5 * v39];
  long long v42 = v105;
  long long v43 = v106;
  *((unsigned char *)v41 + 64) = v107;
  *((_OWORD *)v41 + 2) = v42;
  *((_OWORD *)v41 + 3) = v43;
  uint64_t v104 = v37;
  sub_19EEBD664(v0 + 320, &qword_1EB393260);
  v44._uint64_t countAndFlagsBits = 0x3D73757461747320;
  v44._uint64_t object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v44);
  if (v99 == 4)
  {
    *(_OWORD *)(v0 + 416) = 0u;
    *(_OWORD *)(v0 + 432) = 0u;
  }
  else
  {
    *(void *)(v0 + 440) = &type metadata for JetPackAssetCacheStatus;
    *(unsigned char *)(v0 + 416) = v99;
  }
  sub_19EEC3ED8(v0 + 416, v0 + 448, &qword_1EB393260);
  long long *v40 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19EEC3E70(v0 + 448, v0 + 136);
  *(unsigned char *)(v0 + 168) = 0;
  long long v45 = *(_OWORD *)(v0 + 152);
  long long v105 = *v40;
  long long v106 = v45;
  char v107 = *(unsigned char *)(v0 + 168);
  long long v46 = v104;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v46 = sub_19EEC3F3C(0, v46[2] + 1, 1, v46);
  }
  unint64_t v48 = v46[2];
  unint64_t v47 = v46[3];
  if (v48 >= v47 >> 1) {
    long long v46 = sub_19EEC3F3C((void *)(v47 > 1), v48 + 1, 1, v46);
  }
  uint64_t v49 = *(void *)(v0 + 608);
  long long v46[2] = v48 + 1;
  uint64_t v50 = &v46[5 * v48];
  long long v51 = v105;
  long long v52 = v106;
  *((unsigned char *)v50 + 64) = v107;
  *((_OWORD *)v50 + 2) = v51;
  *((_OWORD *)v50 + 3) = v52;
  uint64_t v104 = v46;
  sub_19EEBD664(v0 + 416, &qword_1EB393260);
  v53._uint64_t countAndFlagsBits = 0;
  v53._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v53);
  *(void *)(v30 + 32) = v104;
  *(void *)&long long v105 = v31;
  LOBYTE(v104) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v30, (JetEngine::LogMessageLevel)&v104);
  swift_bridgeObjectRelease();

  unsigned int v54 = *(unsigned __int8 *)(v49 + 32);
  if (v54 != 2)
  {
    if (v54 == 1)
    {
LABEL_33:
      if (v99 == 3) {
        (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 760))(*(void *)(v0 + 704), 1, 1, *(void *)(v0 + 656));
      }
      else {
        sub_19EEC3ED8(*(void *)(v0 + 752), *(void *)(v0 + 704), &qword_1EB3911D0);
      }
      uint64_t v59 = (void *)swift_task_alloc();
      *(void *)(v0 + 832) = v59;
      void *v59 = v0;
      v59[1] = sub_19F14B1B4;
      uint64_t v60 = *(void *)(v0 + 704);
      uint64_t v61 = *(void *)(v0 + 640);
      uint64_t v62 = *(void *)(v0 + 632);
      uint64_t v63 = *(void *)(v0 + 624);
      uint64_t v64 = *(void *)(v0 + 616);
      uint64_t v65 = *(void *)(v0 + 608);
      uint64_t v66 = *(void *)(v0 + 592);
      return sub_19F14CA94(v66, v65, v64, v63, v62, v61, v60);
    }
    if (*(unsigned char *)(v49 + 32)) {
      goto LABEL_44;
    }
  }
  if (v99 == 4) {
    goto LABEL_32;
  }
  uint64_t v55 = *(void *)(v0 + 712);
  uint64_t v56 = *(void *)(v0 + 656);
  sub_19EEC3ED8(*(void *)(v0 + 752), v55, &qword_1EB3911D0);
  unsigned int v57 = v101(v55, 1, v56);
  uint64_t v58 = *(void *)(v0 + 712);
  if (v57 == 1)
  {
    sub_19EEBD664(v58, &qword_1EB3911D0);
LABEL_32:
    if (v54 <= 1) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
  sub_19EE7A014(v58, *(void *)(v0 + 680), type metadata accessor for JetPackAsset);
  if (v99 < 2)
  {
    uint64_t v68 = (void *)qword_1EB390E30;
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 504) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 480) = 0xD000000000000012;
    *(void *)(v0 + 488) = 0x800000019F26F1E0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    id v71 = v68;
    sub_19EEC3E70(v0 + 480, v0 + 96);
    *(unsigned char *)(v0 + 128) = 0;
    long long v72 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v70 + 32) = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v70 + 48) = v72;
    *(unsigned char *)(v70 + 64) = *(unsigned char *)(v0 + 128);
    *(void *)(v69 + 32) = v70;
    *(void *)&long long v105 = v71;
    LOBYTE(v104) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v69, (JetEngine::LogMessageLevel)&v104);
    swift_bridgeObjectRelease();

    if ((v54 | (v99 - 1)) <= 1u)
    {
      uint64_t v73 = *(void *)(v0 + 688);
      uint64_t v74 = *(void *)(v0 + 680);
      uint64_t v75 = *(void *)(v0 + 664);
      uint64_t v76 = *(void *)(v0 + 648);
      uint64_t v102 = *(void **)(v0 + 640);
      uint64_t v77 = *(void *)(v0 + 632);
      uint64_t v78 = *(void **)(v0 + 624);
      uint64_t v79 = *(void *)(v0 + 616);
      uint64_t v80 = *(void *)(v0 + 608);
      uint64_t v100 = *(void *)(v0 + 600);
      uint64_t v81 = sub_19F1DC37C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v76, 1, 1, v81);
      long long v82 = *(_OWORD *)(v80 + 16);
      long long v105 = *(_OWORD *)v80;
      long long v106 = v82;
      char v107 = *(unsigned char *)(v80 + 32);
      sub_19EE7A5E8(v74, v73, type metadata accessor for JetPackAsset);
      unint64_t v83 = (*(unsigned __int8 *)(v75 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
      uint64_t v84 = swift_allocObject();
      long long v85 = v106;
      *(_OWORD *)(v84 + 40) = v105;
      *(void *)(v84 + 16) = 0;
      *(void *)(v84 + 24) = 0;
      *(void *)(v84 + 32) = v100;
      *(_OWORD *)(v84 + 56) = v85;
      *(unsigned char *)(v84 + 72) = v107;
      *(void *)(v84 + 80) = v79;
      *(void *)(v84 + 88) = v78;
      *(void *)(v84 + 96) = v77;
      *(void *)(v84 + 104) = v102;
      sub_19EE7A014(v73, v84 + v83, type metadata accessor for JetPackAsset);
      sub_19EE4E86C(v80);
      swift_unknownObjectRetain();
      id v86 = v78;
      swift_unknownObjectRetain();
      id v87 = v102;
      swift_retain();
      sub_19EE54490(v76, (uint64_t)&unk_1E9475998, v84);
      swift_release();
    }
    uint64_t v88 = *(void *)(v0 + 680);
    uint64_t v89 = *(void *)(v0 + 592);
    sub_19EEBD664(*(void *)(v0 + 752), &qword_1EB3911D0);
    sub_19EE7A014(v88, v89, type metadata accessor for JetPackAsset);
    long long v90 = *(void **)(v0 + 600);
    uint64_t v91 = v90[5];
    uint64_t v92 = v90[6];
    __swift_project_boxed_opaque_existential_1(v90 + 2, v91);
    (*(void (**)(uint64_t, uint64_t))(v92 + 56))(v91, v92);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v93 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_45;
  }
  sub_19EE7A09C(*(void *)(v0 + 680), type metadata accessor for JetPackAsset);
  if (v54 <= 1) {
    goto LABEL_33;
  }
LABEL_44:
  uint64_t v94 = *(void *)(v0 + 752);
  id v95 = *(void **)(v0 + 600);
  sub_19F06DFE8();
  swift_allocError();
  swift_willThrow();
  sub_19EEBD664(v94, &qword_1EB3911D0);
  uint64_t v96 = v95[5];
  uint64_t v97 = v95[6];
  __swift_project_boxed_opaque_existential_1(v95 + 2, v96);
  (*(void (**)(uint64_t, uint64_t))(v97 + 56))(v96, v97);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v93 = *(uint64_t (**)(void))(v0 + 8);
LABEL_45:
  return v93();
}

uint64_t sub_19F1498AC()
{
  *(void *)(*(void *)v1 + 824) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F14A4A4;
  }
  else {
    uint64_t v2 = sub_19F1499C0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F1499C0()
{
  uint64_t v91 = v0;
  sub_19EE7A09C(*(void *)(v0 + 696), type metadata accessor for JetPackAsset);
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 728);
  uint64_t v3 = *(void *)(v0 + 664);
  uint64_t v4 = *(void *)(v0 + 656);
  sub_19EEC4154(*(void *)(v0 + 600) + 56, v0 + 16);
  sub_19EEC3ED8(v1, v2, &qword_1EB3911D0);
  long long v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v85(v2, 1, v4) == 1)
  {
    int v5 = 4;
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 688);
    sub_19EE7A014(*(void *)(v0 + 728), v6, type metadata accessor for JetPackAsset);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v7);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v8 + 8))(&v88, v6, v7, v8);
    int v5 = v88;
    sub_19EE7A09C(v6, type metadata accessor for JetPackAsset);
  }
  unsigned int v83 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  long long v9 = (long long *)(v0 + 176);
  uint64_t v10 = *(void *)(v0 + 752);
  uint64_t v11 = *(void *)(v0 + 720);
  uint64_t v12 = *(void *)(v0 + 656);
  uint64_t v13 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19F24EAD0;
  id v15 = v13;
  id v87 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
  v16._uint64_t countAndFlagsBits = 0x7341646568636163;
  v16._uint64_t object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  sub_19EEC3ED8(v10, v11, &qword_1EB3911D0);
  unsigned int v17 = v85(v11, 1, v12);
  uint64_t v18 = *(void *)(v0 + 720);
  if (v17 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 720), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 320) = 0u;
    *(_OWORD *)(v0 + 336) = 0u;
  }
  else
  {
    *(void *)(v0 + 344) = *(void *)(v0 + 656);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 320));
    sub_19EE7A014(v18, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for JetPackAsset);
  }
  sub_19EEC3ED8(v0 + 320, v0 + 352, &qword_1EB393260);
  *long long v9 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19EEC3E70(v0 + 352, v0 + 176);
  *(unsigned char *)(v0 + 208) = 0;
  long long v20 = *(_OWORD *)(v0 + 192);
  long long v88 = *v9;
  long long v89 = v20;
  char v90 = *(unsigned char *)(v0 + 208);
  int v21 = v87;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v21 = sub_19EEC3F3C(0, v87[2] + 1, 1, v87);
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1) {
    int v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
  }
  uint64_t v24 = (long long *)(v0 + 136);
  void v21[2] = v23 + 1;
  uint64_t v25 = &v21[5 * v23];
  long long v26 = v88;
  long long v27 = v89;
  *((unsigned char *)v25 + 64) = v90;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  id v87 = v21;
  sub_19EEBD664(v0 + 320, &qword_1EB393260);
  v28._uint64_t countAndFlagsBits = 0x3D73757461747320;
  v28._uint64_t object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  if (v83 == 4)
  {
    *(_OWORD *)(v0 + 416) = 0u;
    *(_OWORD *)(v0 + 432) = 0u;
  }
  else
  {
    *(void *)(v0 + 440) = &type metadata for JetPackAssetCacheStatus;
    *(unsigned char *)(v0 + 416) = v83;
  }
  sub_19EEC3ED8(v0 + 416, v0 + 448, &qword_1EB393260);
  *uint64_t v24 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19EEC3E70(v0 + 448, v0 + 136);
  *(unsigned char *)(v0 + 168) = 0;
  long long v29 = *(_OWORD *)(v0 + 152);
  long long v88 = *v24;
  long long v89 = v29;
  char v90 = *(unsigned char *)(v0 + 168);
  uint64_t v30 = v87;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v30 = sub_19EEC3F3C(0, v87[2] + 1, 1, v87);
  }
  unint64_t v32 = v30[2];
  unint64_t v31 = v30[3];
  if (v32 >= v31 >> 1) {
    uint64_t v30 = sub_19EEC3F3C((void *)(v31 > 1), v32 + 1, 1, v30);
  }
  uint64_t v33 = *(void *)(v0 + 608);
  void v30[2] = v32 + 1;
  uint64_t v34 = &v30[5 * v32];
  long long v35 = v88;
  long long v36 = v89;
  *((unsigned char *)v34 + 64) = v90;
  *((_OWORD *)v34 + 2) = v35;
  *((_OWORD *)v34 + 3) = v36;
  id v87 = v30;
  sub_19EEBD664(v0 + 416, &qword_1EB393260);
  v37._uint64_t countAndFlagsBits = 0;
  v37._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  *(void *)(v14 + 32) = v30;
  *(void *)&long long v88 = v15;
  LOBYTE(v87) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v87);
  swift_bridgeObjectRelease();

  unsigned int v38 = *(unsigned __int8 *)(v33 + 32);
  if (v38 != 2)
  {
    if (v38 == 1)
    {
LABEL_27:
      if (v83 == 3) {
        (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 760))(*(void *)(v0 + 704), 1, 1, *(void *)(v0 + 656));
      }
      else {
        sub_19EEC3ED8(*(void *)(v0 + 752), *(void *)(v0 + 704), &qword_1EB3911D0);
      }
      long long v43 = (void *)swift_task_alloc();
      *(void *)(v0 + 832) = v43;
      void *v43 = v0;
      v43[1] = sub_19F14B1B4;
      uint64_t v44 = *(void *)(v0 + 704);
      uint64_t v45 = *(void *)(v0 + 640);
      uint64_t v46 = *(void *)(v0 + 632);
      uint64_t v47 = *(void *)(v0 + 624);
      uint64_t v48 = *(void *)(v0 + 616);
      uint64_t v49 = *(void *)(v0 + 608);
      uint64_t v50 = *(void *)(v0 + 592);
      return sub_19F14CA94(v50, v49, v48, v47, v46, v45, v44);
    }
    if (*(unsigned char *)(v33 + 32)) {
      goto LABEL_38;
    }
  }
  if (v83 == 4) {
    goto LABEL_26;
  }
  uint64_t v39 = *(void *)(v0 + 712);
  uint64_t v40 = *(void *)(v0 + 656);
  sub_19EEC3ED8(*(void *)(v0 + 752), v39, &qword_1EB3911D0);
  unsigned int v41 = v85(v39, 1, v40);
  uint64_t v42 = *(void *)(v0 + 712);
  if (v41 == 1)
  {
    sub_19EEBD664(v42, &qword_1EB3911D0);
LABEL_26:
    if (v38 <= 1) {
      goto LABEL_27;
    }
    goto LABEL_38;
  }
  sub_19EE7A014(v42, *(void *)(v0 + 680), type metadata accessor for JetPackAsset);
  if (v83 < 2)
  {
    long long v52 = (void *)qword_1EB390E30;
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v54 = swift_allocObject();
    uint64_t v55 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v54 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 504) = v55;
    *(void *)(v0 + 480) = 0xD000000000000012;
    *(void *)(v0 + 488) = 0x800000019F26F1E0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    id v56 = v52;
    sub_19EEC3E70(v0 + 480, v0 + 96);
    *(unsigned char *)(v0 + 128) = 0;
    long long v57 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v54 + 32) = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v54 + 48) = v57;
    *(unsigned char *)(v54 + 64) = *(unsigned char *)(v0 + 128);
    *(void *)(v53 + 32) = v54;
    *(void *)&long long v88 = v56;
    LOBYTE(v87) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v53, (JetEngine::LogMessageLevel)&v87);
    swift_bridgeObjectRelease();

    if ((v38 | (v83 - 1)) <= 1u)
    {
      uint64_t v58 = *(void *)(v0 + 688);
      uint64_t v59 = *(void *)(v0 + 680);
      uint64_t v60 = *(void *)(v0 + 664);
      uint64_t v61 = *(void *)(v0 + 648);
      id v86 = *(void **)(v0 + 640);
      uint64_t v62 = *(void *)(v0 + 632);
      uint64_t v63 = *(void **)(v0 + 624);
      uint64_t v64 = *(void *)(v0 + 616);
      uint64_t v65 = *(void *)(v0 + 608);
      uint64_t v84 = *(void *)(v0 + 600);
      uint64_t v66 = sub_19F1DC37C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v61, 1, 1, v66);
      long long v67 = *(_OWORD *)(v65 + 16);
      long long v88 = *(_OWORD *)v65;
      long long v89 = v67;
      char v90 = *(unsigned char *)(v65 + 32);
      sub_19EE7A5E8(v59, v58, type metadata accessor for JetPackAsset);
      unint64_t v68 = (*(unsigned __int8 *)(v60 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      uint64_t v69 = swift_allocObject();
      long long v70 = v89;
      *(_OWORD *)(v69 + 40) = v88;
      *(void *)(v69 + 16) = 0;
      *(void *)(v69 + 24) = 0;
      *(void *)(v69 + 32) = v84;
      *(_OWORD *)(v69 + 56) = v70;
      *(unsigned char *)(v69 + 72) = v90;
      *(void *)(v69 + 80) = v64;
      *(void *)(v69 + 88) = v63;
      *(void *)(v69 + 96) = v62;
      *(void *)(v69 + 104) = v86;
      sub_19EE7A014(v58, v69 + v68, type metadata accessor for JetPackAsset);
      sub_19EE4E86C(v65);
      swift_unknownObjectRetain();
      id v71 = v63;
      swift_unknownObjectRetain();
      id v72 = v86;
      swift_retain();
      sub_19EE54490(v61, (uint64_t)&unk_1E9475998, v69);
      swift_release();
    }
    uint64_t v73 = *(void *)(v0 + 680);
    uint64_t v74 = *(void *)(v0 + 592);
    sub_19EEBD664(*(void *)(v0 + 752), &qword_1EB3911D0);
    sub_19EE7A014(v73, v74, type metadata accessor for JetPackAsset);
    uint64_t v75 = *(void **)(v0 + 600);
    uint64_t v76 = v75[5];
    uint64_t v77 = v75[6];
    __swift_project_boxed_opaque_existential_1(v75 + 2, v76);
    (*(void (**)(uint64_t, uint64_t))(v77 + 56))(v76, v77);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v78 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_39;
  }
  sub_19EE7A09C(*(void *)(v0 + 680), type metadata accessor for JetPackAsset);
  if (v38 <= 1) {
    goto LABEL_27;
  }
LABEL_38:
  uint64_t v79 = *(void *)(v0 + 752);
  uint64_t v80 = *(void **)(v0 + 600);
  sub_19F06DFE8();
  swift_allocError();
  swift_willThrow();
  sub_19EEBD664(v79, &qword_1EB3911D0);
  uint64_t v81 = v80[5];
  uint64_t v82 = v80[6];
  __swift_project_boxed_opaque_existential_1(v80 + 2, v81);
  (*(void (**)(uint64_t, uint64_t))(v82 + 56))(v81, v82);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v78 = *(uint64_t (**)(void))(v0 + 8);
LABEL_39:
  return v78();
}

uint64_t sub_19F14A4A4()
{
  uint64_t v108 = v0;
  uint64_t v1 = (long long *)(v0 + 216);
  sub_19EE7A09C(*(void *)(v0 + 696), type metadata accessor for JetPackAsset);
  uint64_t v2 = *(void **)(v0 + 824);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v98 = (void *)(v0 + 16);
  uint64_t v3 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  id v103 = v3;
  uint64_t v104 = sub_19EEC3F3C(0, 45, 0, MEMORY[0x1E4FBC860]);
  v5._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v5._uint64_t object = (void *)0x800000019F26F1B0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  uint64_t v6 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 520);
  *(void *)(v0 + 312) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 288));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
  sub_19EEC3ED8(v0 + 288, v0 + 256, &qword_1EB393260);
  *uint64_t v1 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19EEC3E70(v0 + 256, v0 + 216);
  *(unsigned char *)(v0 + 248) = 0;
  long long v9 = *(_OWORD *)(v0 + 232);
  long long v105 = *v1;
  long long v106 = v9;
  char v107 = *(unsigned char *)(v0 + 248);
  uint64_t v10 = v104;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_19EEC3F3C(0, v104[2] + 1, 1, v104);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  v10[2] = v12 + 1;
  uint64_t v13 = &v10[5 * v12];
  long long v14 = v105;
  long long v15 = v106;
  *((unsigned char *)v13 + 64) = v107;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  uint64_t v104 = v10;
  sub_19EEBD664(v0 + 288, &qword_1EB393260);
  v16._uint64_t countAndFlagsBits = 0;
  v16._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v4 + 32) = v10;
  *(void *)&long long v105 = v103;
  LOBYTE(v104) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v104);
  swift_bridgeObjectRelease();

  uint64_t v17 = *(void *)(v0 + 752);
  uint64_t v18 = *(void *)(v0 + 728);
  uint64_t v19 = *(void *)(v0 + 664);
  uint64_t v20 = *(void *)(v0 + 656);
  sub_19EEC4154(*(void *)(v0 + 600) + 56, (uint64_t)v98);
  sub_19EEC3ED8(v17, v18, &qword_1EB3911D0);
  uint64_t v101 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v101(v18, 1, v20) == 1)
  {
    int v21 = 4;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 688);
    sub_19EE7A014(*(void *)(v0 + 728), v22, type metadata accessor for JetPackAsset);
    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v24 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v98, v23);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v24 + 8))(&v105, v22, v23, v24);
    int v21 = v105;
    sub_19EE7A09C(v22, type metadata accessor for JetPackAsset);
  }
  unsigned int v99 = v21;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v98);
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v25 = (long long *)(v0 + 176);
  uint64_t v26 = *(void *)(v0 + 752);
  uint64_t v27 = *(void *)(v0 + 720);
  uint64_t v28 = *(void *)(v0 + 656);
  long long v29 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_19F24EAD0;
  id v31 = v29;
  uint64_t v104 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
  v32._uint64_t countAndFlagsBits = 0x7341646568636163;
  v32._uint64_t object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  sub_19EEC3ED8(v26, v27, &qword_1EB3911D0);
  unsigned int v33 = v101(v27, 1, v28);
  uint64_t v34 = *(void *)(v0 + 720);
  if (v33 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 720), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 320) = 0u;
    *(_OWORD *)(v0 + 336) = 0u;
  }
  else
  {
    *(void *)(v0 + 344) = *(void *)(v0 + 656);
    long long v35 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 320));
    sub_19EE7A014(v34, (uint64_t)v35, type metadata accessor for JetPackAsset);
  }
  sub_19EEC3ED8(v0 + 320, v0 + 352, &qword_1EB393260);
  *uint64_t v25 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19EEC3E70(v0 + 352, v0 + 176);
  *(unsigned char *)(v0 + 208) = 0;
  long long v36 = *(_OWORD *)(v0 + 192);
  long long v105 = *v25;
  long long v106 = v36;
  char v107 = *(unsigned char *)(v0 + 208);
  Swift::String v37 = v104;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v37 = sub_19EEC3F3C(0, v37[2] + 1, 1, v37);
  }
  unint64_t v39 = v37[2];
  unint64_t v38 = v37[3];
  if (v39 >= v38 >> 1) {
    Swift::String v37 = sub_19EEC3F3C((void *)(v38 > 1), v39 + 1, 1, v37);
  }
  uint64_t v40 = (long long *)(v0 + 136);
  _OWORD v37[2] = v39 + 1;
  unsigned int v41 = &v37[5 * v39];
  long long v42 = v105;
  long long v43 = v106;
  *((unsigned char *)v41 + 64) = v107;
  *((_OWORD *)v41 + 2) = v42;
  *((_OWORD *)v41 + 3) = v43;
  uint64_t v104 = v37;
  sub_19EEBD664(v0 + 320, &qword_1EB393260);
  v44._uint64_t countAndFlagsBits = 0x3D73757461747320;
  v44._uint64_t object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v44);
  if (v99 == 4)
  {
    *(_OWORD *)(v0 + 416) = 0u;
    *(_OWORD *)(v0 + 432) = 0u;
  }
  else
  {
    *(void *)(v0 + 440) = &type metadata for JetPackAssetCacheStatus;
    *(unsigned char *)(v0 + 416) = v99;
  }
  sub_19EEC3ED8(v0 + 416, v0 + 448, &qword_1EB393260);
  long long *v40 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19EEC3E70(v0 + 448, v0 + 136);
  *(unsigned char *)(v0 + 168) = 0;
  long long v45 = *(_OWORD *)(v0 + 152);
  long long v105 = *v40;
  long long v106 = v45;
  char v107 = *(unsigned char *)(v0 + 168);
  uint64_t v46 = v104;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v46 = sub_19EEC3F3C(0, v46[2] + 1, 1, v46);
  }
  unint64_t v48 = v46[2];
  unint64_t v47 = v46[3];
  if (v48 >= v47 >> 1) {
    uint64_t v46 = sub_19EEC3F3C((void *)(v47 > 1), v48 + 1, 1, v46);
  }
  uint64_t v49 = *(void *)(v0 + 608);
  long long v46[2] = v48 + 1;
  uint64_t v50 = &v46[5 * v48];
  long long v51 = v105;
  long long v52 = v106;
  *((unsigned char *)v50 + 64) = v107;
  *((_OWORD *)v50 + 2) = v51;
  *((_OWORD *)v50 + 3) = v52;
  uint64_t v104 = v46;
  sub_19EEBD664(v0 + 416, &qword_1EB393260);
  v53._uint64_t countAndFlagsBits = 0;
  v53._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v53);
  *(void *)(v30 + 32) = v104;
  *(void *)&long long v105 = v31;
  LOBYTE(v104) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v30, (JetEngine::LogMessageLevel)&v104);
  swift_bridgeObjectRelease();

  unsigned int v54 = *(unsigned __int8 *)(v49 + 32);
  if (v54 != 2)
  {
    if (v54 == 1)
    {
LABEL_33:
      if (v99 == 3) {
        (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 760))(*(void *)(v0 + 704), 1, 1, *(void *)(v0 + 656));
      }
      else {
        sub_19EEC3ED8(*(void *)(v0 + 752), *(void *)(v0 + 704), &qword_1EB3911D0);
      }
      uint64_t v59 = (void *)swift_task_alloc();
      *(void *)(v0 + 832) = v59;
      void *v59 = v0;
      v59[1] = sub_19F14B1B4;
      uint64_t v60 = *(void *)(v0 + 704);
      uint64_t v61 = *(void *)(v0 + 640);
      uint64_t v62 = *(void *)(v0 + 632);
      uint64_t v63 = *(void *)(v0 + 624);
      uint64_t v64 = *(void *)(v0 + 616);
      uint64_t v65 = *(void *)(v0 + 608);
      uint64_t v66 = *(void *)(v0 + 592);
      return sub_19F14CA94(v66, v65, v64, v63, v62, v61, v60);
    }
    if (*(unsigned char *)(v49 + 32)) {
      goto LABEL_44;
    }
  }
  if (v99 == 4) {
    goto LABEL_32;
  }
  uint64_t v55 = *(void *)(v0 + 712);
  uint64_t v56 = *(void *)(v0 + 656);
  sub_19EEC3ED8(*(void *)(v0 + 752), v55, &qword_1EB3911D0);
  unsigned int v57 = v101(v55, 1, v56);
  uint64_t v58 = *(void *)(v0 + 712);
  if (v57 == 1)
  {
    sub_19EEBD664(v58, &qword_1EB3911D0);
LABEL_32:
    if (v54 <= 1) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
  sub_19EE7A014(v58, *(void *)(v0 + 680), type metadata accessor for JetPackAsset);
  if (v99 < 2)
  {
    unint64_t v68 = (void *)qword_1EB390E30;
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 504) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 480) = 0xD000000000000012;
    *(void *)(v0 + 488) = 0x800000019F26F1E0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    id v71 = v68;
    sub_19EEC3E70(v0 + 480, v0 + 96);
    *(unsigned char *)(v0 + 128) = 0;
    long long v72 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v70 + 32) = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v70 + 48) = v72;
    *(unsigned char *)(v70 + 64) = *(unsigned char *)(v0 + 128);
    *(void *)(v69 + 32) = v70;
    *(void *)&long long v105 = v71;
    LOBYTE(v104) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v69, (JetEngine::LogMessageLevel)&v104);
    swift_bridgeObjectRelease();

    if ((v54 | (v99 - 1)) <= 1u)
    {
      uint64_t v73 = *(void *)(v0 + 688);
      uint64_t v74 = *(void *)(v0 + 680);
      uint64_t v75 = *(void *)(v0 + 664);
      uint64_t v76 = *(void *)(v0 + 648);
      uint64_t v102 = *(void **)(v0 + 640);
      uint64_t v77 = *(void *)(v0 + 632);
      uint64_t v78 = *(void **)(v0 + 624);
      uint64_t v79 = *(void *)(v0 + 616);
      uint64_t v80 = *(void *)(v0 + 608);
      uint64_t v100 = *(void *)(v0 + 600);
      uint64_t v81 = sub_19F1DC37C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v76, 1, 1, v81);
      long long v82 = *(_OWORD *)(v80 + 16);
      long long v105 = *(_OWORD *)v80;
      long long v106 = v82;
      char v107 = *(unsigned char *)(v80 + 32);
      sub_19EE7A5E8(v74, v73, type metadata accessor for JetPackAsset);
      unint64_t v83 = (*(unsigned __int8 *)(v75 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
      uint64_t v84 = swift_allocObject();
      long long v85 = v106;
      *(_OWORD *)(v84 + 40) = v105;
      *(void *)(v84 + 16) = 0;
      *(void *)(v84 + 24) = 0;
      *(void *)(v84 + 32) = v100;
      *(_OWORD *)(v84 + 56) = v85;
      *(unsigned char *)(v84 + 72) = v107;
      *(void *)(v84 + 80) = v79;
      *(void *)(v84 + 88) = v78;
      *(void *)(v84 + 96) = v77;
      *(void *)(v84 + 104) = v102;
      sub_19EE7A014(v73, v84 + v83, type metadata accessor for JetPackAsset);
      sub_19EE4E86C(v80);
      swift_unknownObjectRetain();
      id v86 = v78;
      swift_unknownObjectRetain();
      id v87 = v102;
      swift_retain();
      sub_19EE54490(v76, (uint64_t)&unk_1E9475998, v84);
      swift_release();
    }
    uint64_t v88 = *(void *)(v0 + 680);
    uint64_t v89 = *(void *)(v0 + 592);
    sub_19EEBD664(*(void *)(v0 + 752), &qword_1EB3911D0);
    sub_19EE7A014(v88, v89, type metadata accessor for JetPackAsset);
    char v90 = *(void **)(v0 + 600);
    uint64_t v91 = v90[5];
    uint64_t v92 = v90[6];
    __swift_project_boxed_opaque_existential_1(v90 + 2, v91);
    (*(void (**)(uint64_t, uint64_t))(v92 + 56))(v91, v92);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v93 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_45;
  }
  sub_19EE7A09C(*(void *)(v0 + 680), type metadata accessor for JetPackAsset);
  if (v54 <= 1) {
    goto LABEL_33;
  }
LABEL_44:
  uint64_t v94 = *(void *)(v0 + 752);
  id v95 = *(void **)(v0 + 600);
  sub_19F06DFE8();
  swift_allocError();
  swift_willThrow();
  sub_19EEBD664(v94, &qword_1EB3911D0);
  uint64_t v96 = v95[5];
  uint64_t v97 = v95[6];
  __swift_project_boxed_opaque_existential_1(v95 + 2, v96);
  (*(void (**)(uint64_t, uint64_t))(v97 + 56))(v96, v97);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v93 = *(uint64_t (**)(void))(v0 + 8);
LABEL_45:
  return v93();
}

uint64_t sub_19F14B1B4()
{
  *(void *)(*(void *)v1 + 840) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F14B42C;
  }
  else {
    uint64_t v2 = sub_19F14B2C8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F14B2C8()
{
  uint64_t v1 = v0[94];
  sub_19EEBD664(v0[88], &qword_1EB3911D0);
  sub_19EEBD664(v1, &qword_1EB3911D0);
  uint64_t v2 = (void *)v0[75];
  uint64_t v3 = v2[5];
  uint64_t v4 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_19F14B42C()
{
  uint64_t v1 = v0[94];
  uint64_t v2 = (void *)v0[75];
  uint64_t v3 = v2 + 2;
  sub_19EEBD664(v0[88], &qword_1EB3911D0);
  sub_19EEBD664(v1, &qword_1EB3911D0);
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[6];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_19F14B58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a8;
  v8[16] = v12;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  v8[17] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for JetPackAsset(0);
  v8[18] = v9;
  v8[19] = *(void *)(v9 - 8);
  v8[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F14B68C, 0, 0);
}

uint64_t sub_19F14B68C()
{
  uint64_t v19 = v0;
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  *(void *)(v0 + 80) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = 0xD000000000000020;
  *(void *)(v0 + 64) = 0x800000019F26F260;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  id v8 = v5;
  sub_19EEC3E70(v0 + 56, v0 + 16);
  *(unsigned char *)(v0 + 48) = 0;
  *(unsigned char *)(v7 + 64) = 0;
  long long v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v7 + 48) = v9;
  *(void *)(v6 + 32) = v7;
  char v18 = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v18);
  swift_bridgeObjectRelease();

  sub_19EE7A5E8(v4, v3, type metadata accessor for JetPackAsset);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_19F14B8B4;
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 104);
  return sub_19F14BF78(v11, v15, v16, v13, v14, v12);
}

uint64_t sub_19F14B8B4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 136);
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  sub_19EEBD664(v3, &qword_1EB3911D0);
  if (v0)
  {
    uint64_t v4 = sub_19F066E7C;
  }
  else
  {
    sub_19EE7A09C(*(void *)(v2 + 160), type metadata accessor for JetPackAsset);
    uint64_t v4 = sub_19F066E0C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19F14BA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[16] = v12;
  v8[17] = v13;
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[11] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  v8[18] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for JetPackAsset(0);
  v8[19] = v9;
  v8[20] = *(void *)(v9 - 8);
  v8[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F14BB14, 0, 0);
}

uint64_t sub_19F14BB14()
{
  uint64_t v20 = v0;
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v5 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  *(void *)(v0 + 80) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = 0xD000000000000020;
  *(void *)(v0 + 64) = 0x800000019F26F260;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  id v8 = v5;
  sub_19EEC3E70(v0 + 56, v0 + 16);
  *(unsigned char *)(v0 + 48) = 0;
  *(unsigned char *)(v7 + 64) = 0;
  long long v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v7 + 48) = v9;
  *(void *)(v6 + 32) = v7;
  char v19 = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v19);
  swift_bridgeObjectRelease();

  sub_19EE7A5E8(v4, v3, type metadata accessor for JetPackAsset);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_19F14BD3C;
  uint64_t v11 = *(void *)(v0 + 168);
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v15 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v17 = *(void *)(v0 + 96);
  return sub_19F14CA94(v11, v17, v15, v16, v13, v14, v12);
}

uint64_t sub_19F14BD3C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 144);
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  sub_19EEBD664(v3, &qword_1EB3911D0);
  if (v0)
  {
    uint64_t v4 = sub_19F14BF08;
  }
  else
  {
    sub_19EE7A09C(*(void *)(v2 + 168), type metadata accessor for JetPackAsset);
    uint64_t v4 = sub_19F14BE98;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19F14BE98()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F14BF08()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F14BF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[37] = a6;
  v7[38] = v6;
  v7[35] = a1;
  v7[36] = a2;
  uint64_t v11 = type metadata accessor for JetPackAsset(0);
  v7[39] = v11;
  unsigned char v7[40] = *(void *)(v11 - 8);
  v7[41] = swift_task_alloc();
  v7[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  v7[43] = swift_task_alloc();
  v7[31] = a3;
  v7[32] = a4;
  v7[33] = a5;
  return MEMORY[0x1F4188298](sub_19F14C098, 0, 0);
}

uint64_t sub_19F14C098()
{
  uint64_t v30 = v0;
  sub_19F1DC45C();
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v1 = (long long *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v5 = *(void *)(v0 + 296);
  uint64_t v6 = (void *)qword_1EB390E30;
  *(void *)(v0 + 352) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  id v25 = v6;
  uint64_t v26 = sub_19EEC3F3C(0, 51, 0, MEMORY[0x1E4FBC860]);
  v8._uint64_t object = (void *)0x800000019F26F290;
  v8._uint64_t countAndFlagsBits = 0xD000000000000032;
  LogMessage.StringInterpolation.appendLiteral(_:)(v8);
  sub_19EEC3ED8(v5, v2, &qword_1EB3911D0);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4);
  uint64_t v10 = *(void *)(v0 + 344);
  if (v9 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 344), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 128) = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
  }
  else
  {
    *(void *)(v0 + 152) = *(void *)(v0 + 312);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 128));
    sub_19EE7A014(v10, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for JetPackAsset);
  }
  sub_19EEC3ED8(v0 + 128, v0 + 96, &qword_1EB393260);
  *uint64_t v1 = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  sub_19EEC3E70(v0 + 96, v0 + 56);
  *(unsigned char *)(v0 + 88) = 0;
  long long v12 = *(_OWORD *)(v0 + 72);
  long long v27 = *v1;
  long long v28 = v12;
  char v29 = *(unsigned char *)(v0 + 88);
  uint64_t v13 = v26;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  void v13[2] = v15 + 1;
  uint64_t v16 = &v13[5 * v15];
  long long v17 = v27;
  long long v18 = v28;
  *((unsigned char *)v16 + 64) = v29;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  uint64_t v26 = v13;
  sub_19EEBD664(v0 + 128, &qword_1EB393260);
  v19._uint64_t countAndFlagsBits = 0;
  v19._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(void *)(v7 + 32) = v13;
  *(void *)&long long v27 = v25;
  LOBYTE(v26) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v26);
  swift_bridgeObjectRelease();

  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_19F14C41C;
  uint64_t v21 = *(void *)(v0 + 336);
  uint64_t v22 = *(void *)(v0 + 288);
  uint64_t v23 = *(void *)(v0 + 296);
  return URLJetPackAssetFetcher._fetch(_:candidate:)(v21, v22, v23);
}

uint64_t sub_19F14C41C()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F067808;
  }
  else {
    uint64_t v2 = sub_19F14C530;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F14C530()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[35];
  sub_19EE7A014(v0[42], v2, type metadata accessor for JetPackAsset);
  uint64_t v3 = *(int *)(v1 + 20);
  uint64_t v4 = v2 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 36) + v3;
  if ((*(unsigned char *)(v4 + 8) & 1) != 0 || *(double *)v4 != 0.0)
  {
    uint64_t v7 = (void *)v0[38];
    uint64_t v8 = v7[5];
    uint64_t v9 = v7[6];
    __swift_project_boxed_opaque_existential_1(v7 + 2, v8);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + **(int **)(v9 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[47] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_19F14C6E8;
    uint64_t v11 = v0[41];
    uint64_t v12 = v0[35];
    return v13(v11, v12, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_19F14C6E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_19F14C818;
  }
  else
  {
    sub_19EE7A09C(*(void *)(v2 + 328), type metadata accessor for JetPackAsset);
    uint64_t v3 = sub_19F067790;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F14C818()
{
  uint64_t v23 = v0;
  uint64_t v1 = (void *)qword_1EB390E30;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F24EAD0;
  id v3 = v1;
  Swift::String v19 = sub_19EEC3F3C(0, 35, 0, MEMORY[0x1E4FBC860]);
  v4._uint64_t object = (void *)0x800000019F26F2D0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v4);
  swift_getErrorValue();
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 232);
  *(void *)(v0 + 184) = v6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v5, v6);
  sub_19EEC3ED8(v0 + 160, v0 + 192, &qword_1EB393260);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19EEC3E70(v0 + 192, v0 + 16);
  *(unsigned char *)(v0 + 48) = 0;
  char v22 = 0;
  long long v8 = *(_OWORD *)(v0 + 32);
  long long v20 = *(_OWORD *)(v0 + 16);
  long long v21 = v8;
  uint64_t v9 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
  }
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  uint64_t v12 = *(void **)(v0 + 384);
  void v9[2] = v11 + 1;
  uint64_t v13 = &v9[5 * v11];
  long long v14 = v20;
  long long v15 = v21;
  *((unsigned char *)v13 + 64) = v22;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  Swift::String v19 = v9;
  sub_19EEBD664(v0 + 160, &qword_1EB393260);
  v16._uint64_t countAndFlagsBits = 0;
  v16._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v2 + 32) = v9;
  *(void *)&long long v20 = v3;
  LOBYTE(v19) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v2, (JetEngine::LogMessageLevel)&v19);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_19F14CA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v8 + 336) = a7;
  *(void *)(v8 + 344) = v7;
  *(void *)(v8 + 328) = a1;
  uint64_t v14 = type metadata accessor for JetPackAsset(0);
  *(void *)(v8 + 352) = v14;
  *(void *)(v8 + 360) = *(void *)(v14 - 8);
  *(void *)(v8 + 368) = swift_task_alloc();
  *(void *)(v8 + 376) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  *(void *)(v8 + 384) = swift_task_alloc();
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 32) = v15;
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(a2 + 32);
  *(void *)(v8 + 200) = a3;
  *(void *)(v8 + 208) = a4;
  *(void *)(v8 + 216) = a5;
  *(void *)(v8 + 224) = a6;
  return MEMORY[0x1F4188298](sub_19F14CBD4, 0, 0);
}

uint64_t sub_19F14CBD4()
{
  uint64_t v29 = v0;
  sub_19F1DC45C();
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v1 = (long long *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 360);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = (void *)qword_1EB390E30;
  *(void *)(v0 + 392) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
  id v24 = v6;
  id v25 = sub_19EEC3F3C(0, 51, 0, MEMORY[0x1E4FBC860]);
  v8._uint64_t object = (void *)0x800000019F26F290;
  v8._uint64_t countAndFlagsBits = 0xD000000000000032;
  LogMessage.StringInterpolation.appendLiteral(_:)(v8);
  sub_19EEC3ED8(v5, v2, &qword_1EB3911D0);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4);
  uint64_t v10 = *(void *)(v0 + 384);
  if (v9 == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 384), &qword_1EB3911D0);
    *(_OWORD *)(v0 + 168) = 0u;
    *(_OWORD *)(v0 + 184) = 0u;
  }
  else
  {
    *(void *)(v0 + 192) = *(void *)(v0 + 352);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 168));
    sub_19EE7A014(v10, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for JetPackAsset);
  }
  sub_19EEC3ED8(v0 + 168, v0 + 136, &qword_1EB393260);
  *uint64_t v1 = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_19EEC3E70(v0 + 136, v0 + 96);
  *(unsigned char *)(v0 + 128) = 0;
  long long v12 = *(_OWORD *)(v0 + 112);
  long long v26 = *v1;
  long long v27 = v12;
  char v28 = *(unsigned char *)(v0 + 128);
  uint64_t v13 = v25;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_19EEC3F3C(0, v25[2] + 1, 1, v25);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  void v13[2] = v15 + 1;
  Swift::String v16 = &v13[5 * v15];
  long long v17 = v26;
  long long v18 = v27;
  *((unsigned char *)v16 + 64) = v28;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  id v25 = v13;
  sub_19EEBD664(v0 + 168, &qword_1EB393260);
  v19._uint64_t countAndFlagsBits = 0;
  v19._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(void *)(v7 + 32) = v13;
  *(void *)&long long v26 = v24;
  LOBYTE(v25) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v25);
  swift_bridgeObjectRelease();

  long long v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v20;
  *long long v20 = v0;
  v20[1] = sub_19F14CF60;
  uint64_t v21 = *(void *)(v0 + 376);
  uint64_t v22 = *(void *)(v0 + 336);
  return SilverBulletJetPackAssetFetcher._fetch(_:candidate:)(v21, (long long *)(v0 + 16), v22);
}

uint64_t sub_19F14CF60()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F14D22C;
  }
  else {
    uint64_t v2 = sub_19F14D074;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F14D074()
{
  uint64_t v1 = v0[44];
  uint64_t v2 = v0[41];
  sub_19EE7A014(v0[47], v2, type metadata accessor for JetPackAsset);
  uint64_t v3 = *(int *)(v1 + 20);
  uint64_t v4 = v2 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 36) + v3;
  if ((*(unsigned char *)(v4 + 8) & 1) != 0 || *(double *)v4 != 0.0)
  {
    uint64_t v7 = (void *)v0[43];
    uint64_t v8 = v7[5];
    uint64_t v9 = v7[6];
    __swift_project_boxed_opaque_existential_1(v7 + 2, v8);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + **(int **)(v9 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[52] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_19F14D2AC;
    uint64_t v11 = v0[46];
    uint64_t v12 = v0[41];
    return v13(v11, v12, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_19F14D22C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F14D2AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_19F14D454;
  }
  else
  {
    sub_19EE7A09C(*(void *)(v2 + 368), type metadata accessor for JetPackAsset);
    uint64_t v3 = sub_19F14D3DC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F14D3DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F14D454()
{
  uint64_t v23 = v0;
  uint64_t v1 = (void *)qword_1EB390E30;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F24EAD0;
  id v3 = v1;
  Swift::String v19 = sub_19EEC3F3C(0, 35, 0, MEMORY[0x1E4FBC860]);
  v4._uint64_t object = (void *)0x800000019F26F2D0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v4);
  swift_getErrorValue();
  uint64_t v5 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 304);
  *(void *)(v0 + 256) = v6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 232));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v5, v6);
  sub_19EEC3ED8(v0 + 232, v0 + 264, &qword_1EB393260);
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  sub_19EEC3E70(v0 + 264, v0 + 56);
  *(unsigned char *)(v0 + 88) = 0;
  char v22 = 0;
  long long v8 = *(_OWORD *)(v0 + 72);
  long long v20 = *(_OWORD *)(v0 + 56);
  long long v21 = v8;
  uint64_t v9 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
  }
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  uint64_t v12 = *(void **)(v0 + 424);
  void v9[2] = v11 + 1;
  uint64_t v13 = &v9[5 * v11];
  long long v14 = v20;
  long long v15 = v21;
  *((unsigned char *)v13 + 64) = v22;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  Swift::String v19 = v9;
  sub_19EEBD664(v0 + 232, &qword_1EB393260);
  v16._uint64_t countAndFlagsBits = 0;
  v16._uint64_t object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(void *)(v2 + 32) = v9;
  *(void *)&long long v20 = v3;
  LOBYTE(v19) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v2, (JetEngine::LogMessageLevel)&v19);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_19F14D6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  uint64_t v5[2] = a1;
  return MEMORY[0x1F4188298](sub_19EE75870, 0, 0);
}

uint64_t sub_19F14D6FC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(os_unfair_lock_s **)(v0[6] + 96);
  *(void *)(swift_task_alloc() + 16) = v1;
  swift_retain();
  os_unfair_lock_lock(v2 + 6);
  sub_19EE75114((uint64_t)&v2[4]);
  os_unfair_lock_unlock(v2 + 6);
  swift_release();
  swift_release();
  swift_task_dealloc();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_19F14D7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 152) = a4;
  *(void *)(v5 + 160) = v4;
  *(void *)(v5 + 136) = a1;
  *(void *)(v5 + 144) = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 32) = v6;
  *(unsigned char *)(v5 + 48) = *(unsigned char *)(a2 + 32);
  return MEMORY[0x1F4188298](sub_19F14D830, 0, 0);
}

uint64_t sub_19F14D830()
{
  uint64_t v12 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 160) + 96);
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 144);
  *(void *)(v2 + 16) = v0 + 16;
  *(_OWORD *)(v2 + 24) = v3;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_19F153414((uint64_t *)(v1 + 16), &v11);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v4 = v11;
  *(void *)(v0 + 168) = v11;
  swift_release();
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v5;
  uint64_t v6 = type metadata accessor for JetPackAsset(0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  *uint64_t v5 = v0;
  v5[1] = sub_19F14D98C;
  uint64_t v8 = *(void *)(v0 + 136);
  uint64_t v9 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187D90](v8, v4, v6, v7, v9);
}

uint64_t sub_19F14D98C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F14DBBC;
  }
  else {
    uint64_t v2 = sub_19F14DAA0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_19F14DAA0()
{
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 48);
  *(void *)(v0 + 112) = *(void *)(v0 + 32);
  *(void *)(v0 + 120) = v3;
  *(unsigned char *)(v0 + 128) = v4;
  uint64_t v5 = *(os_unfair_lock_s **)(v2 + 96);
  *(void *)(swift_task_alloc() + 16) = v0 + 96;
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_19F1538B8();
  if (v1)
  {
    os_unfair_lock_unlock(v5 + 6);
  }
  else
  {
    os_unfair_lock_unlock(v5 + 6);
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v6 = *(void (**)(void))(v0 + 8);
    v6();
  }
}

uint64_t sub_19F14DBBC()
{
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  *(void *)(v0 + 72) = *(void *)(v0 + 32);
  *(void *)(v0 + 80) = v2;
  *(unsigned char *)(v0 + 88) = v3;
  char v4 = *(os_unfair_lock_s **)(v1 + 96);
  *(void *)(swift_task_alloc() + 16) = v0 + 56;
  swift_retain();
  os_unfair_lock_lock(v4 + 6);
  sub_19F153464();
  os_unfair_lock_unlock(v4 + 6);
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_19F14DCD8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  long long v11 = *(_OWORD *)(a2 + 16);
  long long v38 = *(_OWORD *)a2;
  long long v39 = v11;
  char v40 = *(unsigned char *)(a2 + 32);
  sub_19EE4E86C(a2);
  sub_19F119DB8();
  sub_19F1DCC8C();
  uint64_t v12 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v13 = sub_19EE77500((uint64_t)&v41), (v14 & 1) != 0))
  {
    uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    swift_retain();
    sub_19EE7760C((uint64_t)&v41);
    if (qword_1EB390E38 != -1) {
      swift_once();
    }
    Swift::String v16 = (void *)qword_1EB390E30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_19F24EAD0;
    id v18 = v16;
    Swift::String v37 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
    v19._uint64_t object = (void *)0x800000019F26F190;
    v19._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    void v36[3] = &type metadata for SilverBulletJetPackAssetRequest;
    uint64_t v20 = swift_allocObject();
    v36[0] = v20;
    long long v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v20 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v20 + 32) = v21;
    *(unsigned char *)(v20 + 48) = *(unsigned char *)(a2 + 32);
    sub_19EEC3ED8((uint64_t)v36, (uint64_t)v35, &qword_1EB393260);
    long long v38 = 0u;
    long long v39 = 0u;
    sub_19EE4E86C(a2);
    sub_19EEC3E70((uint64_t)v35, (uint64_t)&v38);
    char v43 = 0;
    long long v41 = v38;
    long long v42 = v39;
    char v22 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v22 = sub_19EEC3F3C(0, v22[2] + 1, 1, v22);
    }
    unint64_t v24 = v22[2];
    unint64_t v23 = v22[3];
    if (v24 >= v23 >> 1) {
      char v22 = sub_19EEC3F3C((void *)(v23 > 1), v24 + 1, 1, v22);
    }
    _OWORD v22[2] = v24 + 1;
    id v25 = &v22[5 * v24];
    long long v26 = v41;
    long long v27 = v42;
    *((unsigned char *)v25 + 64) = v43;
    *((_OWORD *)v25 + 2) = v26;
    *((_OWORD *)v25 + 3) = v27;
    Swift::String v37 = v22;
    sub_19EEBD664((uint64_t)v36, &qword_1EB393260);
    v28._uint64_t countAndFlagsBits = 0;
    v28._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    *(void *)(v17 + 32) = v37;
    *(void *)&long long v41 = v18;
    LOBYTE(v38) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v38);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19EE7760C((uint64_t)&v41);
    uint64_t v29 = sub_19F1DC37C();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 1, 1, v29);
    uint64_t v30 = (void *)swift_allocObject();
    void v30[2] = 0;
    void v30[3] = 0;
    v30[4] = a3;
    uint64_t v30[5] = a4;
    swift_retain();
    uint64_t v15 = sub_19EE76034((uint64_t)v10, (uint64_t)&unk_1E9475978, (uint64_t)v30);
    long long v31 = *(_OWORD *)(a2 + 16);
    long long v38 = *(_OWORD *)a2;
    long long v39 = v31;
    char v40 = *(unsigned char *)(a2 + 32);
    sub_19EE4E86C(a2);
    sub_19F1DCC8C();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v38 = *a1;
    *a1 = 0x8000000000000000;
    sub_19EE75ED0(v15, (uint64_t)&v41, isUniquelyReferenced_nonNull_native);
    *a1 = v38;
    swift_bridgeObjectRelease();
    sub_19EE7760C((uint64_t)&v41);
  }
  return v15;
}

uint64_t ValidatedJetPackAssetLocation._jetPackAssetStream(session:bag:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E50);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  uint64_t v17 = v4;
  uint64_t v18 = a2;
  uint64_t v19 = a1;
  type metadata accessor for JetPackAsset(0);
  (*(void (**)(unsigned char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBD120], v9);
  return sub_19F1DC55C();
}

uint64_t sub_19F14E228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ValidatedJetPackAssetLocations.URLLocation();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_19EE7A5E8(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ValidatedJetPackAssetLocations.URLLocation);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v19 = (v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + v20 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  sub_19EE7A014((uint64_t)v13, v22 + v18, (uint64_t (*)(void))type metadata accessor for ValidatedJetPackAssetLocations.URLLocation);
  uint64_t v23 = v26;
  *(void *)(v22 + v19) = v25;
  *(void *)(v22 + v20) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22 + v21, v9, v6);
  swift_unknownObjectRetain();
  swift_retain();
  sub_19EEAED68((uint64_t)v16, (uint64_t)&unk_1E9475890, v22);
  return swift_release();
}

uint64_t sub_19F14E4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v32 = a6;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v31 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  uint64_t v29 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a5;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v8);
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + v21 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = 0;
  *((void *)v23 + 3) = 0;
  uint64_t v24 = v32;
  *((void *)v23 + 4) = v28;
  *((void *)v23 + 5) = v24;
  (*(void (**)(char *, char *))(v11 + 32))(&v23[v19], v14);
  uint64_t v25 = v34;
  *(void *)&v23[v20] = v33;
  *(void *)&v23[v21] = v25;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v23[v22], v30, v29);
  swift_unknownObjectRetain();
  swift_retain();
  sub_19EEAED68((uint64_t)v17, (uint64_t)&unk_1E9475948, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_19F14E7D8(uint64_t a1)
{
  return sub_19F14E4F8(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_19F14E7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[6] = a6;
  v7[7] = a7;
  void v7[4] = a4;
  void v7[5] = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3909F8);
  v7[8] = v8;
  v7[9] = *(void *)(v8 - 8);
  v7[10] = swift_task_alloc();
  type metadata accessor for JetPackAsset(0);
  v7[11] = swift_task_alloc();
  v7[12] = swift_task_alloc();
  v7[13] = type metadata accessor for URLJetPackAssetRequest();
  v7[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F14E91C, 0, 0);
}

uint64_t sub_19F14E91C()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v1, v4, v5);
  *(unsigned char *)(v1 + *(int *)(v2 + 20)) = *(unsigned char *)(v4
                                                + *(int *)(type metadata accessor for ValidatedJetPackAssetLocations.URLLocation()
                                                         + 20));
  id v6 = objc_msgSend(self, sel_defaultSessionConfiguration);
  v0[15] = v6;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  swift_unknownObjectRetain();
  uint64_t v8 = (void *)sub_19F1DBD4C();
  id v9 = objc_msgSend(v7, sel_initWithContainerID_bag_, v8, v3);
  v0[16] = v9;

  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, id, uint64_t, id))((char *)&dword_1E94758A0 + dword_1E94758A0);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[17] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_19F14EAC0;
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[5];
  return v15(v12, v11, v6, v13, v9);
}

uint64_t sub_19F14EAC0()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F14ED44;
  }
  else {
    uint64_t v2 = sub_19F14EBD4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F14EBD4()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v8 = (void *)v0[16];
  uint64_t v9 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[8];
  sub_19EE7A5E8(v2, v0[11], type metadata accessor for JetPackAsset);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  sub_19F1DC4DC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v0[3] = 0;
  sub_19F1DC4EC();
  sub_19EE7A09C(v2, type metadata accessor for JetPackAsset);

  swift_unknownObjectRelease();
  sub_19EE7A09C(v9, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_19F14ED44()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void **)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);

  swift_unknownObjectRelease();
  sub_19EE7A09C(v3, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
  *(void *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  sub_19F1DC4EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_19F14EE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a8;
  v8[9] = v18;
  v8[6] = a6;
  v8[7] = a7;
  void v8[4] = a4;
  v8[5] = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3909F8);
  v8[10] = v10;
  v8[11] = *(void *)(v10 - 8);
  v8[12] = swift_task_alloc();
  type metadata accessor for JetPackAsset(0);
  v8[13] = swift_task_alloc();
  v8[14] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[15] = AssociatedTypeWitness;
  v8[16] = *(void *)(AssociatedTypeWitness - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  v8[19] = v12;
  v8[20] = *(void *)(v12 - 8);
  uint64_t v13 = swift_task_alloc();
  v8[21] = v13;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v18 + 24) + **(int **)(v18 + 24));
  uint64_t v14 = (void *)swift_task_alloc();
  v8[22] = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_19F14F100;
  return v16(v13, a8);
}

uint64_t sub_19F14F100()
{
  uint64_t v2 = (void *)*v1;
  v2[23] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F14F6E8, 0, 0);
  }
  else
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2[9] + 32)
                                                                              + **(int **)(v2[9] + 32));
    uint64_t v3 = (void *)swift_task_alloc();
    unsigned char v2[24] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_19F14F2D8;
    uint64_t v4 = v2[21];
    uint64_t v5 = v2[17];
    uint64_t v6 = v2[8];
    uint64_t v7 = v2[9];
    uint64_t v8 = v2[5];
    return v10(v5, v4, v8, v6, v7);
  }
}

uint64_t sub_19F14F2D8()
{
  uint64_t v2 = (void *)*v1;
  v2[25] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F14F7A4, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[26] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_19F14F458;
    uint64_t v4 = v2[21];
    uint64_t v5 = v2[17];
    uint64_t v6 = v2[18];
    uint64_t v7 = v2[14];
    uint64_t v8 = v2[15];
    return JetPackAssetSession.jetPack<A>(for:fetcher:)(v7, v4, v5, v8, v6);
  }
}

uint64_t sub_19F14F458()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F14F878;
  }
  else {
    uint64_t v2 = sub_19F14F56C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F14F56C()
{
  uint64_t v1 = v0[20];
  uint64_t v11 = v0[19];
  uint64_t v12 = v0[21];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v9 = v0[15];
  uint64_t v10 = v0[17];
  uint64_t v4 = v0[12];
  uint64_t v6 = v0[10];
  uint64_t v5 = v0[11];
  sub_19EE7A5E8(v3, v0[13], type metadata accessor for JetPackAsset);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  sub_19F1DC4DC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v0[3] = 0;
  sub_19F1DC4EC();
  sub_19EE7A09C(v3, type metadata accessor for JetPackAsset);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v10, v9);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_19F14F6E8()
{
  v0[2] = v0[23];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  sub_19F1DC4EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_19F14F7A4()
{
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  v0[2] = v0[25];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  sub_19F1DC4EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_19F14F878()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[19];
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[2] = v0[27];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  sub_19F1DC4EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t ValidatedJetPackAssetLocations.URLLocation.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ValidatedJetPackAssetLocations.URLLocation.init(_:requestConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for ValidatedJetPackAssetLocations.URLLocation();
  *(unsigned char *)(a4 + *(int *)(result + 20)) = 0;
  uint64_t v10 = (void *)(a4 + *(int *)(result + 24));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t ValidatedJetPackAssetLocations.URLLocation.init(_:sourcePolicy:requestConfiguration:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9 = *a2;
  uint64_t v10 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t result = type metadata accessor for ValidatedJetPackAssetLocations.URLLocation();
  *(unsigned char *)(a5 + *(int *)(result + 20)) = v9;
  uint64_t v12 = (void *)(a5 + *(int *)(result + 24));
  *uint64_t v12 = a3;
  v12[1] = a4;
  return result;
}

uint64_t ValidatedJetPackAssetLocations.URLLocation._buildRequest()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_19F14FB18, 0, 0);
}

uint64_t sub_19F14FB18()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v1, v2, v3);
  LOBYTE(v2) = *(unsigned char *)(v2 + *(int *)(type metadata accessor for ValidatedJetPackAssetLocations.URLLocation() + 20));
  *(unsigned char *)(v1 + *(int *)(type metadata accessor for URLJetPackAssetRequest() + 20)) = v2;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void ValidatedJetPackAssetLocations.URLLocation._buildFetcher(_:bag:)(uint64_t a1@<X1>, void *a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_defaultSessionConfiguration);
  id v5 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  swift_unknownObjectRetain();
  id v6 = v4;
  uint64_t v7 = (void *)sub_19F1DBD4C();
  id v8 = objc_msgSend(v5, sel_initWithContainerID_bag_, v7, a1);

  *a2 = v6;
  a2[1] = a1;
  a2[2] = v8;
}

uint64_t sub_19F14FC9C(uint64_t a1, uint64_t a2)
{
  v3[3] = v2;
  void v3[4] = a2;
  uint64_t v3[2] = a1;
  return MEMORY[0x1F4188298](sub_19F14FCC0, 0, 0);
}

uint64_t sub_19F14FCC0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, v1, v4);
  LOBYTE(v1) = *(unsigned char *)(v1 + *(int *)(v2 + 20));
  *(unsigned char *)(v3 + *(int *)(type metadata accessor for URLJetPackAssetRequest() + 20)) = v1;
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_19F14FD80(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(self, sel_defaultSessionConfiguration);
  id v7 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  swift_unknownObjectRetain();
  id v8 = (void *)sub_19F1DBD4C();
  id v9 = objc_msgSend(v7, sel_initWithContainerID_bag_, v8, a3);

  *a1 = v6;
  a1[1] = a3;
  a1[2] = v9;
  uint64_t v10 = *(uint64_t (**)(void))(v3 + 8);
  return sub_19EED02BC(v10);
}

uint64_t sub_19F14FE98(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = v2;
  uint64_t v12 = a2;
  uint64_t v13 = a1;
  type metadata accessor for JetPackAsset(0);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBD120], v5);
  return sub_19F1DC55C();
}

uint64_t sub_19F14FFC0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F15010C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_19F15010C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F15017C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  sub_19EEBD664(*(void *)(v0 + 256), (uint64_t *)&unk_1EB392E50);
  sub_19F152B30();
  swift_allocError();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_19F150294(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_19F1DBB3C();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t ValidatedJetPackAssetLocations.BagKeyLocation._buildRequest()(uint64_t a1)
{
  *(void *)(v2 + 72) = a1;
  uint64_t v3 = sub_19F1DB34C();
  *(void *)(v2 + 80) = v3;
  *(void *)(v2 + 88) = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 96) = v4;
  char v5 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(v2 + 120) = v5;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(unsigned char *)(v2 + 32) = v5;
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v1 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 104) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_19F150444;
  return ValidatedJetPackAssetLocations.BagKeyLocation.url()(v4);
}

uint64_t sub_19F150444()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F1505F8;
  }
  else {
    uint64_t v2 = sub_19F150558;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F150558()
{
  char v1 = *(unsigned char *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 72);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 88) + 32))(v2, *(void *)(v0 + 96), *(void *)(v0 + 80));
  *(unsigned char *)(v2 + *(int *)(type metadata accessor for URLJetPackAssetRequest() + 20)) = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_19F1505F8()
{
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ValidatedJetPackAssetLocations.BagKeyLocation._buildFetcher(_:bag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x1F4188298](sub_19F15067C, 0, 0);
}

uint64_t sub_19F15067C()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v1 = v0[3];
  id v3 = objc_msgSend(self, sel_defaultSessionConfiguration);
  id v4 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  swift_unknownObjectRetain();
  id v5 = v3;
  uint64_t v6 = (void *)sub_19F1DBD4C();
  id v7 = objc_msgSend(v4, sel_initWithContainerID_bag_, v6, v1);

  *uint64_t v2 = v5;
  v2[1] = v1;
  void v2[2] = v7;
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t ValidatedJetPackAssetLocations.BagKeyLocation._jetPackAssetStream(session:bag:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v9 = *(_OWORD *)(v2 + 16);
  v15[0] = *(_OWORD *)v2;
  v15[1] = v9;
  v15[2] = *(_OWORD *)(v2 + 32);
  uint64_t v16 = *(void *)(v2 + 48);
  uint64_t v12 = v15;
  uint64_t v13 = a2;
  uint64_t v14 = a1;
  type metadata accessor for JetPackAsset(0);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBD120], v5);
  return sub_19F1DC55C();
}

unint64_t sub_19F1508C4()
{
  unint64_t result = qword_1E946E138;
  if (!qword_1E946E138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946E138);
  }
  return result;
}

uint64_t sub_19F150918()
{
  v0[13] = v0[40];
  sub_19F1DC4EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_19F1509D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F150A54()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 240);
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  sub_19EE7A09C(v2, (uint64_t (*)(void))type metadata accessor for URLJetPackAssetRequest);
  if (v0) {
    uint64_t v3 = sub_19F150D74;
  }
  else {
    uint64_t v3 = sub_19F150B98;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F150B98()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 208);
  sub_19EE7A5E8(v1, *(void *)(v0 + 248), type metadata accessor for JetPackAsset);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  sub_19F1DC4DC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_19EE7A09C(v1, type metadata accessor for JetPackAsset);
  (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 288), *(void *)(v0 + 264));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_19F150CCC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F150D74()
{
  (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 288), *(void *)(v0 + 264));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F150E2C(uint64_t a1)
{
  *(void *)(v2 + 72) = a1;
  uint64_t v3 = sub_19F1DB34C();
  *(void *)(v2 + 80) = v3;
  *(void *)(v2 + 88) = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 96) = v4;
  char v5 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(v2 + 120) = v5;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(unsigned char *)(v2 + 32) = v5;
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v1 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 104) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_19F150444;
  return ValidatedJetPackAssetLocations.BagKeyLocation.url()(v4);
}

uint64_t sub_19F150F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  long long v6[2] = a1;
  void v6[3] = a3;
  v6[1] = sub_19EEB8A6C;
  return MEMORY[0x1F4188298](sub_19F15067C, 0, 0);
}

uint64_t dispatch thunk of ValidatedJetPackAssetLocation._buildRequest()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_19EE17780;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ValidatedJetPackAssetLocation._buildFetcher(_:bag:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 32) + **(int **)(a5 + 32));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_19EEB8A6C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ValidatedJetPackAssetLocation._jetPackAssetStream(session:bag:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

ValueMetadata *type metadata accessor for ValidatedJetPackAssetLocations()
{
  return &type metadata for ValidatedJetPackAssetLocations;
}

void *initializeBufferWithCopyOfBuffer for ValidatedJetPackAssetLocations.URLLocation(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_19F1DB34C();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    long long v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *long long v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for ValidatedJetPackAssetLocations.URLLocation(uint64_t a1)
{
  uint64_t v2 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for ValidatedJetPackAssetLocations.URLLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  long long v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ValidatedJetPackAssetLocations.URLLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  long long v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ValidatedJetPackAssetLocations.URLLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ValidatedJetPackAssetLocations.URLLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release();
  return a1;
}

uint64_t sub_19F1515EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_19F1516AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_19F1DB34C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t assignWithCopy for ValidatedJetPackAssetLocations.BagKeyLocation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = *(void **)(a2 + 8);
  int v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ValidatedJetPackAssetLocations.BagKeyLocation(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_19F151864(uint64_t a1)
{
  return sub_19F14E228(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_19F151870()
{
  uint64_t v1 = *(void *)(type metadata accessor for ValidatedJetPackAssetLocations.URLLocation() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v4 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v7 + 8) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  swift_unknownObjectRelease();
  uint64_t v11 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v3, v11);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  return MEMORY[0x1F4186498](v0, v9, v10);
}

uint64_t sub_19F151A20(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for ValidatedJetPackAssetLocations.URLLocation() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58) - 8) + 80);
  uint64_t v10 = v8 + v9 + 8;
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + v7);
  uint64_t v14 = v1 + v6;
  uint64_t v15 = *(void *)(v1 + v8);
  uint64_t v16 = v1 + (v10 & ~v9);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v17;
  *uint64_t v17 = v3;
  v17[1] = sub_19EEB8A6C;
  return sub_19F14E7E8(a1, v11, v12, v14, v13, v15, v16);
}

uint64_t sub_19F151BA8()
{
  v9[0] = MEMORY[0x1E4FBC860];
  v10[8] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DDC8);
  uint64_t v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  *(void *)(v1 + 16) = v2;
  sub_19EEBDC4C((uint64_t)v9, v1 + 24, (uint64_t *)&unk_1E946DD80);
  sub_19F020310(objc_msgSend(*(id *)(v0 + 16), sel_valuePromise));
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v5[2] = v1;
  v5[3] = v4;
  v5[4] = v3;
  unint64_t v6 = sub_19EEA5F34();
  swift_retain_n();
  swift_retain();
  uint64_t v7 = sub_19F1DC87C();
  uint64_t v11[3] = v6;
  v11[4] = &protocol witness table for OS_dispatch_queue;
  v11[0] = v7;
  v9[0] = sub_19F153728;
  v9[1] = v5;
  void v9[2] = sub_19F153780;
  void v9[3] = v1;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain();
  swift_retain();
  sub_19EF554A8((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1E946DDC0);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v1;
}

uint64_t sub_19F151D44()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E140);
  uint64_t v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 32) = 0;
  sub_19F020310(objc_msgSend(*(id *)(v0 + 16), sel_valuePromise));
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  unint64_t v6 = (void *)swift_allocObject();
  long long v6[2] = v1;
  void v6[3] = v5;
  v6[4] = v4;
  unint64_t v7 = sub_19EEA5F34();
  swift_retain_n();
  swift_retain();
  uint64_t v11[3] = v7;
  v11[4] = &protocol witness table for OS_dispatch_queue;
  v11[0] = sub_19F1DC87C();
  v9[0] = sub_19F153230;
  v9[1] = v6;
  void v9[2] = sub_19F153298;
  void v9[3] = v1;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain();
  swift_retain();
  sub_19EF554A8((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1E946DDC0);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v1;
}

void sub_19F151EC8(void *a1)
{
  swift_getErrorValue();
  if (sub_19EEA3A88(v4))
  {
    memset(v2, 0, sizeof(v2));
    long long v3 = xmmword_19F249000;
    sub_19F1B0B94((uint64_t)v2);
    sub_19EEBD664((uint64_t)v2, &qword_1E946F7B0);
  }
  else
  {
    sub_19F0804E4(a1);
  }
}

void sub_19F151F58(void *a1)
{
  swift_getErrorValue();
  if (sub_19EEA3A88(v2)) {
    sub_19F1B1138(0);
  }
  else {
    sub_19F08056C(a1);
  }
}

void sub_19F151FC4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getErrorValue();
  if (sub_19EEA3A88(v6[1]))
  {
    uint64_t v5 = sub_19F1DB34C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    sub_19EE43A50((uint64_t)v4);
    sub_19EEBD664((uint64_t)v4, (uint64_t *)&unk_1EB392E50);
  }
  else
  {
    sub_19F080804(a1);
  }
}

uint64_t sub_19F1520CC()
{
  uint64_t v1 = *(void *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);

  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, v5 + 24, v4);
}

uint64_t sub_19F1521E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v12 = *a6;
  uint64_t v13 = a6[1];
  uint64_t v14 = a6[2];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  void *v15 = v6;
  v15[1] = sub_19EE17780;
  return sub_19F14B58C(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_19F1522D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (int *)(type metadata accessor for JetPackAsset(0) - 8);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)v5 + 80);
  uint64_t v7 = (v4 + v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(*(void *)v5 + 64);
  uint64_t v9 = v2 | v6 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v10 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v3, v10);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v7);
  uint64_t v11 = v0 + v7 + v5[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v11 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  uint64_t v13 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v8, v9);
}

uint64_t sub_19F1524E8(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for JetPackAsset(0);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_19EE17780;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_1E94758E8
                                                                                       + dword_1E94758E8);
  return v12(a1, v8, v9, v10, (uint64_t)v1 + v6, (void *)((char *)v1 + v7));
}

uint64_t sub_19F152670@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19EE7F4A0(*a2, a2[1], *a1);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19F1526B0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 104) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19F1527B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v7 + 24) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v11 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v3, v11);

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  return MEMORY[0x1F4186498](v0, v9, v10);
}

uint64_t sub_19F152950()
{
  uint64_t v1 = *(void *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 88) & ~v2;
  unint64_t v4 = (((((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + v4 + 24) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  uint64_t v11 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v3, v11);
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  return MEMORY[0x1F4186498](v0, v9, v10);
}

unint64_t sub_19F152B30()
{
  unint64_t result = qword_1E9475938;
  if (!qword_1E9475938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9475938);
  }
  return result;
}

void sub_19F152B88(void *a1)
{
}

uint64_t sub_19F152B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 32) = v7;
  *(unsigned char *)(v4 + 48) = *(unsigned char *)(a3 + 32);
  uint64_t v8 = *a4;
  uint64_t v9 = a4[1];
  uint64_t v10 = a4[2];
  uint64_t v11 = a4[3];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 56) = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_19F152C78;
  return sub_19F14771C(a1, a2, v4 + 16, v8, v9, v10, v11);
}

uint64_t sub_19F152C78()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F152D6C()
{
  sub_19F119DB8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19F1DCC8C();
  sub_19EE755DC((uint64_t)v1);
  sub_19EE7760C((uint64_t)v1);
  return swift_release();
}

uint64_t sub_19F152E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  long long v10 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v6 + 32) = v10;
  *(unsigned char *)(v6 + 48) = *(unsigned char *)(a5 + 32);
  uint64_t v11 = *a6;
  uint64_t v12 = a6[1];
  uint64_t v13 = a6[2];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v6 + 56) = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_19F1538B4;
  return sub_19F14BA10(a1, a2, a3, a4, v6 + 16, v11, v12, v13);
}

uint64_t sub_19F152F10()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v12 = v9 + *(void *)(v7 + 64);
  uint64_t v10 = v3 | v8 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return MEMORY[0x1F4186498](v0, v12, v10);
}

uint64_t sub_19F153094(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = v1[4];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v7 = (*(void *)(*(void *)(v5 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E58) - 8) + 80);
  uint64_t v10 = v8 + v9 + 8;
  uint64_t v11 = v1[2];
  uint64_t v12 = v1[3];
  uint64_t v13 = *(void *)((char *)v1 + v7);
  uint64_t v14 = (uint64_t)v1 + v6;
  uint64_t v15 = *(void *)((char *)v1 + v8);
  uint64_t v16 = (uint64_t)v1 + (v10 & ~v9);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v17;
  *uint64_t v17 = v3;
  v17[1] = sub_19EE17780;
  return sub_19F14EE34(a1, v11, v12, v14, v13, v15, v16, v5);
}

uint64_t sub_19F153230(void *a1)
{
  (*(void (**)(uint64_t *__return_ptr, void))(v1 + 24))(&v3, *a1);
  sub_19F1B1138(v3);
  return swift_bridgeObjectRelease();
}

void sub_19F153298(void *a1)
{
}

uint64_t sub_19F1532A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_19F1532E0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_19F153348(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19EE17780;
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_1E9475958 + dword_1E9475958);
  return v6(a1, v4, v1 + 24, (uint64_t *)(v1 + 64));
}

uint64_t sub_19F153414@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v6 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v7 = v2[4];
  long long v8 = *(_OWORD *)(v6 + 16);
  v10[0] = *(_OWORD *)v6;
  v10[1] = v8;
  char v11 = *(unsigned char *)(v6 + 32);
  uint64_t result = sub_19F14DCD8(a1, (uint64_t)v10, v5, v7);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_19F153464()
{
  return sub_19F152D6C();
}

uint64_t sub_19F153484()
{
  uint64_t v1 = (int *)(type metadata accessor for JetPackAsset(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 112) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v3;
  __swift_destroy_boxed_opaque_existential_1Tm(v6);
  uint64_t v7 = v6 + v1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  uint64_t v9 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_19F153604(uint64_t a1)
{
  type metadata accessor for JetPackAsset(0);
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_19EE17780;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_1E9475990
                                                                                      + dword_1E9475990);
  return v8(a1, v4, v5, v6, (uint64_t)(v1 + 5), v1 + 10);
}

uint64_t sub_19F153728(void *a1)
{
  (*(void (**)(void *__return_ptr, void))(v1 + 24))(v3, *a1);
  sub_19F1B0B94((uint64_t)v3);
  return sub_19EEBD664((uint64_t)v3, &qword_1E946F7B0);
}

void sub_19F153780(void *a1)
{
}

unsigned char *storeEnumTagSinglePayload for ValidatedJetPackAssetLocations.BagKeyLocation.BagKeyLocationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F153824);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ValidatedJetPackAssetLocations.BagKeyLocation.BagKeyLocationError()
{
  return &type metadata for ValidatedJetPackAssetLocations.BagKeyLocation.BagKeyLocationError;
}

unint64_t sub_19F153860()
{
  unint64_t result = qword_1E94759B0;
  if (!qword_1E94759B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94759B0);
  }
  return result;
}

uint64_t sub_19F1538B8()
{
  return sub_19F153464();
}

uint64_t static DeepLinkRouterBuilder.buildOptional(_:)(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = a1;
  }
  else {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  return v1;
}

ValueMetadata *type metadata accessor for DeepLinkRouterBuilder()
{
  return &type metadata for DeepLinkRouterBuilder;
}

uint64_t _CodeByKind_OrNil.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a2, 1, 1, AssociatedTypeWitness);
  uint64_t v5 = sub_19F1DCAAC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(a2, a1, v5);
}

uint64_t _CodeByKind_OrNil.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_19F1DCAAC();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t _CodeByKind_OrNil.wrappedValue.setter(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_19F1DCAAC();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*_CodeByKind_OrNil.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t _CodeByKind_OrNil.description.getter()
{
  uint64_t v1 = v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_19F1DCAAC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v14 - v5;
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  double v9 = MEMORY[0x1F4188790](v8);
  char v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v6, v1, v3, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 7104878;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v6, AssociatedTypeWitness);
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_19F1DD40C();
    uint64_t v12 = v14[0];
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, AssociatedTypeWitness);
  }
  return v12;
}

uint64_t _CodeByKind_OrNil.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_19F1DCAAC();
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v24 = (uint64_t)&v22 - v10;
  type metadata accessor for CodeByKind();
  uint64_t v11 = sub_19F1DCAAC();
  uint64_t v23 = *(void *)(v11 - 8);
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(*(void *)(AssociatedTypeWitness - 8) + 56))(a4, 1, 1, AssociatedTypeWitness, v12);
  sub_19EEC4154(a1, (uint64_t)v27);
  swift_getWitnessTable();
  uint64_t v15 = v28;
  uint64_t v16 = sub_19F1DCADC();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    uint64_t v17 = type metadata accessor for _CodeByKind_OrNil();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a4, v17);
  }
  else
  {
    uint64_t v28 = a4;
    MEMORY[0x1F4188790](v16);
    *(&v22 - 2) = a2;
    *(&v22 - 1) = a3;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v20 = v24;
    sub_19EEA2774((void (*)(char *, char *))sub_19F154070, KeyPath, MEMORY[0x1E4FBC248], AssociatedTypeWitness, v21, v24);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v11);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 40))(v28, v20, v26);
  }
}

uint64_t type metadata accessor for _CodeByKind_OrNil()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F154070()
{
  return swift_getAtKeyPath();
}

uint64_t _CodeByKind_OrNil.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v23 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v24 = sub_19F1DCAAC();
  uint64_t v8 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = type metadata accessor for CodeByKind();
  uint64_t v12 = sub_19F1DCAAC();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v21 - v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(*(void *)(AssociatedTypeWitness - 8) + 56))(a4, 1, 1, AssociatedTypeWitness, v14);
  uint64_t v17 = v23;
  sub_19EEC4154(v23, (uint64_t)v27);
  swift_getWitnessTable();
  Optional<A>.init(_partiallyFrom:)(v27, v11, (uint64_t)v16);
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t KeyPath = swift_getKeyPath();
  sub_19EEA2774((void (*)(char *, char *))sub_19F154070, KeyPath, MEMORY[0x1E4FBC248], AssociatedTypeWitness, v19, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1Tm(v17);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(v22, v10, v24);
}

uint64_t _CodeByKind_OrNil.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_19F1DCAAC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v18[-v8];
  uint64_t v10 = type metadata accessor for CodeByKind();
  uint64_t v11 = sub_19F1DCAAC();
  uint64_t v17 = *(void *)(v11 - 8);
  double v12 = MEMORY[0x1F4188790](v11);
  double v14 = &v18[-v13];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v9, v3, v6, v12);
  uint64_t v19 = v5;
  uint64_t v20 = v4;
  sub_19EEA2774((void (*)(char *, char *))sub_19F155B4C, (uint64_t)v18, MEMORY[0x1E4FBC248], v10, v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_getWitnessTable();
  sub_19F1DCABC();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v14, v11);
}

uint64_t _CodeByKind_OrNil._partiallyEncode(to:)(void *a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_19F1DCAAC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = type metadata accessor for CodeByKind();
  uint64_t v10 = sub_19F1DCAAC();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  double v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, v2, v5, v12);
  uint64_t v21 = v4;
  uint64_t v22 = v3;
  sub_19EEA2774((void (*)(char *, char *))sub_19F1548B0, (uint64_t)v20, MEMORY[0x1E4FBC248], v9, v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t WitnessTable = swift_getWitnessTable();
  Optional<A>._partiallyEncode(to:)(v19, v10, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_19F1547B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, double))(v8 + 16))((char *)&v10 - v6, a1, v5);
  return CodeByKind.init(wrappedValue:)((uint64_t)v7, a2);
}

uint64_t sub_19F1548B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F1547B0(a1, a2);
}

uint64_t sub_19F1548D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return _CodeByKind_OrNil.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_19F1548F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return _CodeByKind_OrNil.init(_partiallyFrom:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_19F154900(uint64_t a1, uint64_t a2)
{
  return _CodeByKind_OrNil.encode(to:)(a1, a2);
}

BOOL static _CodeByKind_OrNil<>.== infix(_:_:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a5;
  uint64_t v44 = a1;
  long long v45 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  long long v38 = (char *)&v36 - v7;
  uint64_t v8 = sub_19F1DCAAC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v40 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v13);
  char v43 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v36 - v16;
  double v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v36 - v20;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v22((char *)&v36 - v20, v44, v8, v19);
  ((void (*)(char *, char *, uint64_t))v22)(v17, v45, v8);
  uint64_t v42 = TupleTypeMetadata2;
  uint64_t v23 = &v11[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(char *, char *, uint64_t))v22)(v11, v21, v8);
  long long v45 = v23;
  ((void (*)(char *, char *, uint64_t))v22)(v23, v17, v8);
  uint64_t v41 = v6;
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v44 = AssociatedTypeWitness;
  if (v24(v11, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v12 + 8);
    v25(v17, v8);
    v25(v21, v8);
    if (v24(v45, 1, v44) == 1)
    {
      v25(v11, v8);
      return 1;
    }
    goto LABEL_6;
  }
  uint64_t v37 = v12;
  ((void (*)(char *, char *, uint64_t))v22)(v43, v11, v8);
  uint64_t v26 = v44;
  unsigned int v27 = v24(v45, 1, v44);
  uint64_t v28 = v41;
  uint64_t v29 = (void (**)(char *, uint64_t))(v41 + 8);
  if (v27 == 1)
  {
    uint64_t v30 = *(void (**)(char *, uint64_t))(v37 + 8);
    v30(v17, v8);
    v30(v21, v8);
    (*v29)(v43, v26);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v42);
    return 0;
  }
  uint64_t v31 = v38;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v45, v26);
  uint64_t v32 = v43;
  LODWORD(v45) = sub_19F1DBD3C();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v26);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v37 + 8);
  v34(v17, v8);
  v34(v21, v8);
  v33(v32, v26);
  v34(v11, v8);
  return (v45 & 1) != 0;
}

BOOL sub_19F154DBC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  return static _CodeByKind_OrNil<>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8));
}

uint64_t _CodeByKind_OrNil<>.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  sub_19F1DCAAC();
  return sub_19F1DCACC();
}

uint64_t _CodeByKind_OrNil<>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F154E98()
{
  return _CodeByKind_OrNil<>.hashValue.getter();
}

uint64_t sub_19F154EA0()
{
  return _CodeByKind_OrNil<>.hash(into:)();
}

uint64_t sub_19F154EA8()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F154EFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F154F44()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_19F1DCAAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19F154FF0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v6 = *(void *)(v5 + 64);
  }
  else {
    size_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v6 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  else
  {
    uint64_t v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_19F155148(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, AssociatedTypeWitness);
  }
  return result;
}

void *sub_19F15521C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_19F15531C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    uint64_t v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

void *sub_19F155494(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_19F155594(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    uint64_t v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

uint64_t sub_19F15570C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!v6) {
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 > v7)
  {
    char v9 = 8 * v8;
    if (v8 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((a2 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v8 > 3) {
          int v12 = 0;
        }
        if (v8)
        {
          if (v8 > 3) {
            LODWORD(v8) = 4;
          }
          switch((int)v8)
          {
            case 2:
              LODWORD(v8) = *a1;
              break;
            case 3:
              LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v8) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v8) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v7 + (v8 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v6 < 2) {
    return 0;
  }
  unsigned int v14 = (*(uint64_t (**)(unsigned __int16 *))(v5 + 48))(a1);
  if (v14 >= 2) {
    return v14 - 1;
  }
  else {
    return 0;
  }
}

void sub_19F1558C8(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  if (a3 <= v9) {
    goto LABEL_12;
  }
  if (v10 <= 3)
  {
    unsigned int v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      int v6 = 4;
      if (v9 >= a2) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (v11 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v11 > 1;
    }
LABEL_12:
    if (v9 >= a2) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  int v6 = 1;
  if (v9 >= a2)
  {
LABEL_20:
    switch(v6)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        goto LABEL_24;
      default:
LABEL_24:
        if (a2)
        {
LABEL_25:
          if (v8 >= 2)
          {
            uint64_t v15 = *(void (**)(unsigned char *, void))(v7 + 56);
            v15(a1, a2 + 1);
          }
        }
        break;
    }
    return;
  }
LABEL_13:
  unsigned int v12 = ~v9 + a2;
  if (v10 < 4)
  {
    int v13 = (v12 >> (8 * v10)) + 1;
    if (v10)
    {
      int v14 = v12 & ~(-1 << (8 * v10));
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
  }
  else
  {
    bzero(a1, v10);
    *(_DWORD *)a1 = v12;
    int v13 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v10] = v13;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v13;
      break;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x19F155B24);
    case 4:
      *(_DWORD *)&a1[v10] = v13;
      break;
    default:
      return;
  }
}

uint64_t sub_19F155B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F1548B0(a1, a2);
}

id LookupBagContract.__allocating_init(_:)(uint64_t *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *a1;
  *(void *)&v3[OBJC_IVAR____TtC9JetEngine17LookupBagContract_backing] = v4;
  *(void *)&v3[OBJC_IVAR____TtC9JetEngine14URLBagContract_backing] = v4;
  uint64_t v5 = (objc_class *)type metadata accessor for MescalBagContract();
  int v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = v4;
  v10.receiver = v6;
  v10.super_class = v5;
  swift_unknownObjectRetain_n();
  uint64_t v7 = v3;
  *(void *)&v7[OBJC_IVAR____TtC9JetEngine14URLBagContract_mescalContract] = objc_msgSendSuper2(&v10, sel_init);

  v9.receiver = v7;
  v9.super_class = (Class)type metadata accessor for URLBagContract();
  return objc_msgSendSuper2(&v9, sel_init);
}

id LookupBagContract.init(_:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *(void *)&v1[OBJC_IVAR____TtC9JetEngine17LookupBagContract_backing] = *a1;
  *(void *)&v1[OBJC_IVAR____TtC9JetEngine14URLBagContract_backing] = v2;
  uint64_t v3 = (objc_class *)type metadata accessor for MescalBagContract();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  *(void *)&v4[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = v2;
  v8.receiver = v4;
  v8.super_class = v3;
  swift_unknownObjectRetain_n();
  uint64_t v5 = v1;
  *(void *)&v5[OBJC_IVAR____TtC9JetEngine14URLBagContract_mescalContract] = objc_msgSendSuper2(&v8, sel_init);

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for URLBagContract();
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_19F155D80()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9JetEngine17LookupBagContract_backing);
  uint64_t v2 = (void *)sub_19F1DBD4C();
  id v3 = objc_msgSend(v1, sel_URLForKey_, v2);

  return v3;
}

uint64_t sub_19F155DF0()
{
  return swift_unknownObjectRelease();
}

id LookupBagContract.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LookupBagContract();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for LookupBagContract()
{
  return self;
}

uint64_t method lookup function for LookupBagContract(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LookupBagContract);
}

uint64_t dispatch thunk of LookupBagContract.unpersonalizedLookupURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

unint64_t sub_19F155EB4()
{
  unint64_t result = qword_1E9475A30;
  if (!qword_1E9475A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475A30);
  }
  return result;
}

void *MutableStateRef.init(pointingTo:in:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

__n128 MutableStateRef.init(_:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t MutableStateRef<>.current.getter(void *a1, uint64_t a2)
{
  uint64_t v9 = *v2;
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  int v6 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = a1[2];
  swift_bridgeObjectRetain();
  v6(&v9, v5, a2, v7, v4);
  return swift_bridgeObjectRelease();
}

uint64_t MutableStateRef<>.reset()(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  double v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  objc_super v8 = (char *)&v12 - v7;
  uint64_t v9 = *v1;
  (*(void (**)(uint64_t, uint64_t, double))(v2 + 32))(v3, v2, v6);
  uint64_t v13 = v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(&v13, 0, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 40))(v8, v3, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
}

uint64_t MutableStateRef<>.performChanges(_:)(void (*a1)(char *), uint64_t a2, void *a3, uint64_t a4)
{
  v28[0] = a4;
  v28[1] = a2;
  uint64_t v29 = a1;
  uint64_t v6 = a3[3];
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v28 - v11;
  uint64_t v14 = *(void *)(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  double v16 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v18 = (char *)v28 - v17;
  uint64_t v19 = *v4;
  uint64_t v20 = v4[1];
  (*(void (**)(uint64_t, uint64_t, double))(v14 + 32))(v15, v14, v16);
  uint64_t v31 = v19;
  v33[0] = v19;
  v33[1] = v20;
  uint64_t v21 = a3;
  uint64_t v22 = v28[0];
  MutableStateRef<>.current.getter(v21, v28[0]);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  v29(v9);
  if ((sub_19F1DBD3C() & 1) == 0)
  {
    v33[0] = v31;
    uint64_t v29 = (void (*)(char *))v15;
    uint64_t v23 = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v25 = v23;
    uint64_t v15 = (uint64_t)v29;
    (*(void (**)(void *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v33, v9, v6, v22, v25, AssociatedConformanceWitness);
  }
  uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  v26(v9, v6);
  v26(v12, v6);
  sub_19F156420(v31, v20, (uint64_t)v18, v15, v6, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v18, AssociatedTypeWitness);
}

uint64_t sub_19F156420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  double v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v15 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v15 - v12, a3, AssociatedTypeWitness, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(a6 + 40))(v13, a4, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, AssociatedTypeWitness);
}

double _s9JetEngine8StateRefVyACyxq_GAA07MutablecD0Vyxq_GcfC_0@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = a1[1];
  uint64_t v5 = *a1;
  StateRef.init(pointingTo:in:)(&v5, v3, &v6);
  double result = *(double *)&v6;
  *a2 = v6;
  return result;
}

void *sub_19F1565A8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t type metadata accessor for MutableStateRef()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F156620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = a5;
  uint64_t v45 = *(void *)(a4 + 16);
  if (v45)
  {
    uint64_t v44 = a4 + 32;
    if (*a3) {
      uint64_t v6 = 0x6469746E65696C63;
    }
    else {
      uint64_t v6 = 0x646972657375;
    }
    if (*a3) {
      unint64_t v7 = 0xE800000000000000;
    }
    else {
      unint64_t v7 = 0xE600000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t v43 = v6;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(v44 + 72 * v8);
      uint64_t v11 = v10[1];
      uint64_t v46 = *v10;
      char v12 = *((unsigned char *)v10 + 16);
      uint64_t v13 = (void *)v10[3];
      uint64_t v48 = v10[4];
      char v47 = *((unsigned char *)v10 + 40);
      uint64_t v14 = v10[8];
      if (v12) {
        uint64_t v15 = 0x6469746E65696C63;
      }
      else {
        uint64_t v15 = 0x646972657375;
      }
      if (*((unsigned char *)v10 + 16)) {
        unint64_t v16 = 0xE800000000000000;
      }
      else {
        unint64_t v16 = 0xE600000000000000;
      }
      BOOL v17 = v15 == v6 && v16 == v7;
      long long v49 = *((_OWORD *)v10 + 3);
      if (v17)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v18 = sub_19F1DD44C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0) {
          goto LABEL_9;
        }
      }
      uint64_t v19 = v13[2];
      if (v19)
      {
        BOOL v20 = v13[4] == a1 && v13[5] == a2;
        if (v20 || (sub_19F1DD44C() & 1) != 0)
        {
LABEL_30:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_19EFF6410(0, *(void *)(v9 + 16) + 1, 1);
          }
          long long v21 = v49;
          unint64_t v23 = *(void *)(v9 + 16);
          unint64_t v22 = *(void *)(v9 + 24);
          if (v23 >= v22 >> 1)
          {
            sub_19EFF6410(v22 > 1, v23 + 1, 1);
            long long v21 = v49;
          }
          *(void *)(v9 + 16) = v23 + 1;
          uint64_t v24 = v9 + 72 * v23;
          *(void *)(v24 + 32) = v46;
          *(void *)(v24 + 40) = v11;
          *(unsigned char *)(v24 + 48) = v12;
          *(void *)(v24 + 56) = v13;
          *(void *)(v24 + 64) = v48;
          *(unsigned char *)(v24 + 72) = v47;
          *(_OWORD *)(v24 + 80) = v21;
          *(void *)(v24 + 96) = v14;
          goto LABEL_10;
        }
        if (v19 != 1)
        {
          if (v13[6] == a1 && v13[7] == a2) {
            goto LABEL_30;
          }
          uint64_t result = sub_19F1DD44C();
          uint64_t v27 = a1;
          uint64_t v28 = a2;
          if (result) {
            goto LABEL_30;
          }
          if (v19 != 2)
          {
            uint64_t v29 = v13 + 9;
            uint64_t v30 = 2;
            while (!__OFADD__(v30, 1))
            {
              if (*(v29 - 1) == v27 && *v29 == v28) {
                goto LABEL_30;
              }
              uint64_t v40 = v30 + 1;
              uint64_t result = sub_19F1DD44C();
              uint64_t v27 = a1;
              uint64_t v28 = a2;
              if (result) {
                goto LABEL_30;
              }
              v29 += 2;
              ++v30;
              if (v40 == v19) {
                goto LABEL_9;
              }
            }
            __break(1u);
            return result;
          }
        }
      }
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t v6 = v43;
      if (++v8 == v45)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = a5;
        if (!*(void *)(v9 + 16)) {
          goto LABEL_56;
        }
LABEL_52:
        uint64_t v32 = *(void *)(v9 + 40);
        char v33 = *(unsigned char *)(v9 + 48);
        uint64_t v35 = *(void *)(v9 + 56);
        uint64_t v34 = *(void *)(v9 + 64);
        char v36 = *(unsigned char *)(v9 + 72);
        uint64_t v37 = *(void *)(v9 + 96);
        long long v38 = *(_OWORD *)(v9 + 80);
        *(void *)uint64_t v5 = *(void *)(v9 + 32);
        *(void *)(v5 + 8) = v32;
        *(unsigned char *)(v5 + 16) = v33;
        *(void *)(v5 + 24) = v35;
        *(void *)(v5 + 32) = v34;
        *(unsigned char *)(v5 + 40) = v36;
        *(_OWORD *)(v5 + 48) = v38;
        *(void *)(v5 + 64) = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return swift_release();
      }
    }
  }
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
    goto LABEL_52;
  }
LABEL_56:
  uint64_t result = swift_release();
  *(void *)(v5 + 64) = 0;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  return result;
}

JetEngine::MetricsIdentifierType_optional __swiftcall MetricsIdentifierType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_19F1DD0FC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t MetricsIdentifierType.rawValue.getter()
{
  if (*v0) {
    return 0x6469746E65696C63;
  }
  else {
    return 0x646972657375;
  }
}

uint64_t sub_19F156AC0(char *a1, char *a2)
{
  return sub_19F0397C4(*a1, *a2);
}

unint64_t sub_19F156AD0()
{
  unint64_t result = qword_1E946D5C8;
  if (!qword_1E946D5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946D5C8);
  }
  return result;
}

uint64_t sub_19F156B24()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F156BA4()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F156C10()
{
  return sub_19F1DD78C();
}

JetEngine::MetricsIdentifierType_optional sub_19F156C8C(Swift::String *a1)
{
  return MetricsIdentifierType.init(rawValue:)(*a1);
}

void sub_19F156C98(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x646972657375;
  if (*v1) {
    uint64_t v2 = 0x6469746E65696C63;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19F156CD4()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F156D34()
{
  return sub_19F1DC0EC();
}

unsigned char *storeEnumTagSinglePayload for MetricsIdentifierType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F156E50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsIdentifierType()
{
  return &type metadata for MetricsIdentifierType;
}

ValueMetadata *type metadata accessor for MetricsIdentifierSchemes()
{
  return &type metadata for MetricsIdentifierSchemes;
}

uint64_t sub_19F156E98(unsigned __int8 *a1, char *a2)
{
  return sub_19F03A4DC(*a1, *a2);
}

uint64_t sub_19F156EA4()
{
  return sub_19F1875BC();
}

uint64_t sub_19F156EAC()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F156FA8()
{
  return sub_19EFB621C();
}

uint64_t sub_19F156FB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F1592D8();
  *a1 = result;
  return result;
}

void sub_19F156FE0(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x63617073656D616ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701869940;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x736369706F74;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      *(void *)a1 = 0x6E6170736566696CLL;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 4:
      strcpy((char *)a1, "correlations");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 5:
      *(void *)a1 = 0x6E6F697461746F72;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_19F1570BC()
{
  uint64_t result = 0x63617073656D616ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 0x736369706F74;
      break;
    case 3:
      uint64_t result = 0x6E6170736566696CLL;
      break;
    case 4:
      uint64_t result = 0x74616C6572726F63;
      break;
    case 5:
      uint64_t result = 0x6E6F697461746F72;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F157184@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F1592D8();
  *a1 = result;
  return result;
}

uint64_t sub_19F1571AC(uint64_t a1)
{
  unint64_t v2 = sub_19F158F00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F1571E8(uint64_t a1)
{
  unint64_t v2 = sub_19F158F00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F157224()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19F158FA8((unint64_t *)&qword_1EB3927A0, &qword_1EB3927A8, (void (*)(void))sub_19EE868D4);
  uint64_t result = sub_19F1DBCCC();
  qword_1E946DB68 = result;
  unk_1E946DB70 = v1;
  return result;
}

uint64_t sub_19F1572E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DD30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F158F00();
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v47) = 0;
  uint64_t v10 = sub_19F1DD18C();
  uint64_t v12 = v11;
  char v51 = 1;
  sub_19F158F54();
  swift_bridgeObjectRetain();
  sub_19F1DD1BC();
  uint64_t v45 = v10;
  uint64_t v46 = v12;
  int v50 = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
  char v51 = 2;
  sub_19F159068(&qword_1E946DD18);
  sub_19F1DD1BC();
  char v51 = 4;
  uint64_t v44 = v47;
  swift_bridgeObjectRetain();
  sub_19F1DD17C();
  uint64_t v13 = v47;
  LOBYTE(v47) = 5;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_19F1DD13C();
  uint64_t v15 = v46;
  uint64_t v42 = v14;
  uint64_t v43 = v13;
  LOBYTE(v47) = 3;
  uint64_t v17 = v16;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_19F1DD15C();
  int v39 = v19;
  uint64_t v40 = v18;
  uint64_t v41 = v17;
  uint64_t v20 = qword_1E946DCD0;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_1E946DB68;
  uint64_t v22 = unk_1E946DB70;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v23 = swift_allocObject();
  uint64_t v38 = v23;
  *(_OWORD *)(v23 + 16) = xmmword_19F24EB80;
  *(void *)(v23 + 32) = v21;
  uint64_t v36 = v22;
  uint64_t v24 = v45;
  *(void *)(v23 + 40) = v22;
  *(void *)(v23 + 48) = v24;
  *(void *)(v23 + 56) = v15;
  uint64_t v47 = v23;
  uint64_t v48 = sub_19EE4D858;
  uint64_t v49 = 0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927A8);
  sub_19F158FA8((unint64_t *)&qword_1EB3927A0, &qword_1EB3927A8, (void (*)(void))sub_19EE868D4);
  uint64_t v37 = sub_19F1DBCCC();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB392A90 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_19EF6ECA0(v37, v26);
  char v29 = v28;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v30 = v40;
  uint64_t v31 = v41;
  if ((v29 & 1) == 0) {
    uint64_t v30 = v27;
  }
  char v32 = v29 & v39;
  uint64_t v33 = v46;
  *(void *)a2 = v45;
  *(void *)(a2 + 8) = v33;
  *(unsigned char *)(a2 + 16) = v50;
  uint64_t v34 = v43;
  *(void *)(a2 + 24) = v44;
  *(void *)(a2 + 32) = v30;
  *(unsigned char *)(a2 + 40) = v32 & 1;
  uint64_t v35 = v42;
  *(void *)(a2 + 48) = v34;
  *(void *)(a2 + 56) = v35;
  *(void *)(a2 + 64) = v31;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F157928()
{
  uint64_t v1 = *(void *)(v0 + 24);
  char v2 = *(unsigned char *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  sub_19F1DD73C();
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  if (v2)
  {
    sub_19F1DD74C();
    if (v3) {
      goto LABEL_7;
    }
  }
  else
  {
    sub_19F1DD74C();
    sub_19F1DD76C();
    if (v3)
    {
LABEL_7:
      sub_19F1DD74C();
      sub_19F1DD73C();
      uint64_t v7 = *(void *)(v3 + 16);
      if (v7)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = v3 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_19F1DBE9C();
          swift_bridgeObjectRelease();
          v8 += 16;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease();
      }
      if (v4) {
        goto LABEL_12;
      }
      return sub_19F1DD74C();
    }
  }
  sub_19F1DD74C();
  if (!v4) {
    return sub_19F1DD74C();
  }
LABEL_12:
  sub_19F1DD74C();
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F157B50(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475A58);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v20 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v16 = *(void *)(v1 + 32);
  uint64_t v17 = v7;
  int v15 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  v13[1] = *(void *)(v1 + 56);
  uint64_t v14 = v8;
  v13[0] = *(void *)(v1 + 64);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F158F00();
  sub_19F1DD8FC();
  LOBYTE(v19) = 0;
  uint64_t v9 = v18;
  sub_19F1DD26C();
  if (!v9)
  {
    uint64_t v10 = v17;
    LOBYTE(v19) = v20;
    char v21 = 1;
    sub_19F159014();
    sub_19F1DD2AC();
    uint64_t v19 = v10;
    char v21 = 2;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
    sub_19F159068(&qword_1E9475A68);
    sub_19F1DD2AC();
    uint64_t v18 = v11;
    LOBYTE(v19) = 3;
    sub_19F1DD23C();
    uint64_t v19 = v14;
    char v21 = 4;
    sub_19F1DD25C();
    LOBYTE(v19) = 5;
    sub_19F1DD21C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_19F157E0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F1572E0(a1, a2);
}

uint64_t sub_19F157E24(void *a1)
{
  return sub_19F157B50(a1);
}

uint64_t sub_19F157E3C()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F157EB4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F157F28@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  long long v40 = *((_OWORD *)a1 + 3);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v49 = (void *)a1[6];
  uint64_t v50 = v5;
  uint64_t v41 = a1[8];
  uint64_t v42 = a1[3];
  char v39 = *((unsigned char *)a1 + 16);
  uint64_t v38 = a1[4];
  char v37 = *((unsigned char *)a1 + 40);
  if (!(void)v40)
  {
    if (!v5) {
      goto LABEL_48;
    }
    uint64_t v20 = 0;
    uint64_t v36 = a2 + 32;
    while (1)
    {
      uint64_t v21 = v36 + 72 * v20;
      uint64_t v12 = *(void **)(v21 + 48);
      if (v12)
      {
        uint64_t v22 = v12[2];
        if (v22)
        {
          uint64_t v9 = *(void *)v21;
          uint64_t v10 = *(void *)(v21 + 8);
          char v31 = *(unsigned char *)(v21 + 16);
          uint64_t v34 = *(void *)(v21 + 24);
          char v46 = *(unsigned char *)(v21 + 40);
          uint64_t v47 = *(void *)(v21 + 32);
          uint64_t v48 = *(void *)(v21 + 56);
          uint64_t v32 = *(void *)(v21 + 64);
          if (v12[4] == v4 && v12[5] == v3) {
            goto LABEL_44;
          }
          uint64_t result = sub_19F1DD44C();
          if (result) {
            goto LABEL_44;
          }
          if (v22 != 1) {
            break;
          }
        }
      }
LABEL_23:
      if (++v20 == v50) {
        goto LABEL_48;
      }
    }
    uint64_t v24 = v12 + 7;
    uint64_t v25 = 1;
    while (1)
    {
      uint64_t v26 = v25 + 1;
      if (__OFADD__(v25, 1))
      {
LABEL_52:
        __break(1u);
        return result;
      }
      if (*(v24 - 1) == v4 && *v24 == v3) {
        break;
      }
      uint64_t result = sub_19F1DD44C();
      if (result) {
        break;
      }
      v24 += 2;
      ++v25;
      if (v26 == v22) {
        goto LABEL_23;
      }
    }
LABEL_44:
    uint64_t v43 = v4;
    swift_bridgeObjectRetain();
    uint64_t v28 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = v32;
    swift_bridgeObjectRetain();
    if (v31) {
      goto LABEL_42;
    }
LABEL_45:
    uint64_t result = swift_bridgeObjectRelease();
    char v30 = 0;
LABEL_46:
    *(void *)a3 = v9;
    *(void *)(a3 + 8) = v10;
    *(unsigned char *)(a3 + 16) = v30;
    *(void *)(a3 + 24) = v28;
    *(void *)(a3 + 32) = v47;
    *(unsigned char *)(a3 + 40) = v46;
    *(void *)(a3 + 48) = v12;
    *(void *)(a3 + 56) = v48;
    *(void *)(a3 + 64) = v13;
    return result;
  }
  if (!v5) {
    goto LABEL_48;
  }
  uint64_t v6 = 0;
  uint64_t v35 = a2 + 32;
  uint64_t v7 = v49[2];
  uint64_t v43 = *a1;
  uint64_t v44 = a1[1];
  while (1)
  {
    if (!v7) {
      goto LABEL_4;
    }
    uint64_t v8 = v35 + 72 * v6;
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    char v33 = *(unsigned char *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 24);
    char v46 = *(unsigned char *)(v8 + 40);
    uint64_t v12 = *(void **)(v8 + 48);
    uint64_t v47 = *(void *)(v8 + 32);
    uint64_t v48 = *(void *)(v8 + 56);
    uint64_t v13 = *(void *)(v8 + 64);
    if (v49[4] == *(void *)v8 && v49[5] == v10) {
      break;
    }
    uint64_t result = sub_19F1DD44C();
    if (result) {
      break;
    }
    if (v7 != 1)
    {
      uint64_t v16 = v49 + 7;
      uint64_t v17 = 1;
      while (1)
      {
        uint64_t v18 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (*(v16 - 1) == v9 && *v16 == v10) {
          goto LABEL_41;
        }
        uint64_t result = sub_19F1DD44C();
        if (result) {
          goto LABEL_41;
        }
        v16 += 2;
        ++v17;
        if (v18 == v7) {
          goto LABEL_4;
        }
      }
      __break(1u);
      goto LABEL_52;
    }
LABEL_4:
    ++v6;
    uint64_t v4 = v43;
    uint64_t v3 = v44;
    if (v6 == v50) {
      goto LABEL_48;
    }
  }
LABEL_41:
  swift_bridgeObjectRetain();
  uint64_t v28 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = v44;
  if ((v33 & 1) == 0) {
    goto LABEL_45;
  }
LABEL_42:
  char v29 = sub_19F1DD44C();
  uint64_t result = swift_bridgeObjectRelease();
  if (v29)
  {
    char v30 = 1;
    goto LABEL_46;
  }
  sub_19F0CD664(v9, v10);
  uint64_t v4 = v43;
LABEL_48:
  *(void *)a3 = v4;
  *(void *)(a3 + 8) = v3;
  *(unsigned char *)(a3 + 16) = v39;
  *(void *)(a3 + 24) = v42;
  *(void *)(a3 + 32) = v38;
  *(unsigned char *)(a3 + 40) = v37;
  *(_OWORD *)(a3 + 48) = v40;
  *(void *)(a3 + 64) = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F1582FC(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475A38);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F158970();
  sub_19F1DD8FC();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DD08);
  sub_19F158FA8(&qword_1E9475A40, &qword_1E946DD08, (void (*)(void))sub_19F158A18);
  sub_19F1DD2AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19F158484()
{
  return 0x73656D65686373;
}

uint64_t sub_19F15849C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73656D65686373 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_19F1DD44C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19F158534(uint64_t a1)
{
  unint64_t v2 = sub_19F158970();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F158570(uint64_t a1)
{
  unint64_t v2 = sub_19F158970();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_19F1585AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_19F1587C0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_19F1585D8(void *a1)
{
  return sub_19F1582FC(a1, *v1);
}

BOOL sub_19F1585F4(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 24);
  double v4 = *(double *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  uint64_t v6 = *(void **)(a1 + 48);
  uint64_t v22 = *(void *)(a1 + 56);
  uint64_t v23 = *(void *)(a1 + 64);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v8 = *(void **)(a2 + 24);
  double v9 = *(double *)(a2 + 32);
  int v10 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v11 = *(void **)(a2 + 48);
  uint64_t v21 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v13 = sub_19F1DD44C(), result = 0, (v13 & 1) != 0))
  {
    if (v2) {
      uint64_t v15 = 0x6469746E65696C63;
    }
    else {
      uint64_t v15 = 0x646972657375;
    }
    if (v2) {
      unint64_t v16 = 0xE800000000000000;
    }
    else {
      unint64_t v16 = 0xE600000000000000;
    }
    if (v7) {
      uint64_t v17 = 0x6469746E65696C63;
    }
    else {
      uint64_t v17 = 0x646972657375;
    }
    if (v7) {
      unint64_t v18 = 0xE800000000000000;
    }
    else {
      unint64_t v18 = 0xE600000000000000;
    }
    if (v15 == v17 && v16 == v18)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v19 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v19 & 1) == 0) {
        return result;
      }
    }
    if ((sub_19EF636C0(v3, v8) & 1) == 0) {
      return 0;
    }
    if (v5)
    {
      if (!v10) {
        return 0;
      }
    }
    else
    {
      if (v4 == v9) {
        char v20 = v10;
      }
      else {
        char v20 = 1;
      }
      if (v20) {
        return 0;
      }
    }
    if (v6)
    {
      if (!v11 || (sub_19EF636C0(v6, v11) & 1) == 0) {
        return 0;
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v23) {
      return v12 && (v22 == v21 && v23 == v12 || (sub_19F1DD44C() & 1) != 0);
    }
    return !v12;
  }
  return result;
}

void *sub_19F1587C0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946DD38);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F158970();
  sub_19F1DD8AC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DD08);
    sub_19F158FA8(&qword_1E946DD10, &qword_1E946DD08, (void (*)(void))sub_19F1589C4);
    sub_19F1DD1BC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    int v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_19F158970()
{
  unint64_t result = qword_1E946DCE0;
  if (!qword_1E946DCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DCE0);
  }
  return result;
}

unint64_t sub_19F1589C4()
{
  unint64_t result = qword_1E946DCD8;
  if (!qword_1E946DCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DCD8);
  }
  return result;
}

unint64_t sub_19F158A18()
{
  unint64_t result = qword_1E9475A48;
  if (!qword_1E9475A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475A48);
  }
  return result;
}

unint64_t sub_19F158A6C()
{
  unint64_t result = qword_1E946DCA0;
  if (!qword_1E946DCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DCA0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MetricsIdentifierSchemes.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F158B5CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsIdentifierSchemes.CodingKeys()
{
  return &type metadata for MetricsIdentifierSchemes.CodingKeys;
}

uint64_t destroy for MetricsIdentifierScheme()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsIdentifierScheme(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MetricsIdentifierScheme(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MetricsIdentifierScheme(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MetricsIdentifierScheme()
{
  return &type metadata for MetricsIdentifierScheme;
}

unint64_t sub_19F158DA4()
{
  unint64_t result = qword_1E9475A50;
  if (!qword_1E9475A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475A50);
  }
  return result;
}

unint64_t sub_19F158DFC()
{
  unint64_t result = qword_1E946DCF0;
  if (!qword_1E946DCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DCF0);
  }
  return result;
}

unint64_t sub_19F158E54()
{
  unint64_t result = qword_1E946DCE8;
  if (!qword_1E946DCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DCE8);
  }
  return result;
}

unint64_t sub_19F158EAC()
{
  unint64_t result = qword_1E946CF20;
  if (!qword_1E946CF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CF20);
  }
  return result;
}

unint64_t sub_19F158F00()
{
  unint64_t result = qword_1E946DCB0;
  if (!qword_1E946DCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DCB0);
  }
  return result;
}

unint64_t sub_19F158F54()
{
  unint64_t result = qword_1E946DCA8;
  if (!qword_1E946DCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DCA8);
  }
  return result;
}

uint64_t sub_19F158FA8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19F159014()
{
  unint64_t result = qword_1E9475A60;
  if (!qword_1E9475A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475A60);
  }
  return result;
}

uint64_t sub_19F159068(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB3931D8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MetricsIdentifierScheme.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F159198);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsIdentifierScheme.CodingKeys()
{
  return &type metadata for MetricsIdentifierScheme.CodingKeys;
}

unint64_t sub_19F1591D4()
{
  unint64_t result = qword_1E9475A70;
  if (!qword_1E9475A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475A70);
  }
  return result;
}

unint64_t sub_19F15922C()
{
  unint64_t result = qword_1E946DCC0;
  if (!qword_1E946DCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DCC0);
  }
  return result;
}

unint64_t sub_19F159284()
{
  unint64_t result = qword_1E946DCB8;
  if (!qword_1E946DCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DCB8);
  }
  return result;
}

uint64_t sub_19F1592D8()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t AsyncObjectGraphError.errors.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t AsyncObjectGraphError.errorDescription.getter()
{
  uint64_t v1 = *v0;
  int64_t v2 = *(void *)(*v0 + 16);
  if (!v2) {
    return 0xD000000000000036;
  }
  if (v2 == 1)
  {
    int v3 = *(void **)(v1 + 32);
    swift_getErrorValue();
    id v4 = v3;
    uint64_t v5 = sub_19F1DD6AC();
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EEA1364(0, v2, 0);
    uint64_t v6 = 0;
    do
    {
      int v7 = *(void **)(v1 + 8 * v6 + 32);
      swift_getErrorValue();
      id v8 = v7;
      uint64_t v9 = sub_19F1DD6AC();
      uint64_t v11 = v10;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_19EEA1364(0, *(void *)(v16 + 16) + 1, 1);
      }
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_19EEA1364(v12 > 1, v13 + 1, 1);
      }
      ++v6;
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
    }
    while (v2 != v6);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
    sub_19EE868D4();
    uint64_t v5 = sub_19F1DBCCC();
    swift_release();
  }
  return v5;
}

uint64_t AsyncObjectGraphError.errorUserInfo.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    uint64_t result = sub_19F1DBD7C();
    *(void *)(inited + 32) = result;
    *(void *)(inited + 40) = v6;
    if (!*(void *)(v1 + 16))
    {
      __break(1u);
      return result;
    }
    swift_getErrorValue();
    *(void *)(inited + 72) = v9;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *))(*(void *)(v9 - 8) + 16))(boxed_opaque_existential_2Tm);
    return sub_19EEBF898(inited);
  }
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    *(void *)(inited + 32) = sub_19F1DBD7C();
    *(void *)(inited + 40) = v8;
    *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471DB0);
    *(void *)(inited + 48) = v1;
    swift_bridgeObjectRetain();
    return sub_19EEBF898(inited);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  return sub_19EEBF898(v3);
}

uint64_t sub_19F159694(uint64_t a1)
{
  unint64_t v2 = sub_19F159720();
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_19F1596D0(uint64_t a1)
{
  unint64_t v2 = sub_19F159720();
  return MEMORY[0x1F40E6E10](a1, v2);
}

ValueMetadata *type metadata accessor for AsyncObjectGraphError()
{
  return &type metadata for AsyncObjectGraphError;
}

unint64_t sub_19F159720()
{
  unint64_t result = qword_1E9475A78;
  if (!qword_1E9475A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475A78);
  }
  return result;
}

unint64_t JetPackageWriterError.errorDescription.getter()
{
  unint64_t v1 = 0xD000000000000020;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000023;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000021;
  }
}

BOOL static JetPackageWriter.Step.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetPackageWriter.Step.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JetPackageWriter.init(encryption:compression:serialization:versionIdentifier:keyIdentifier:keyURL:)@<X0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  char v8 = *a2;
  *(unsigned char *)a7 = *a1;
  *(unsigned char *)(a7 + 1) = v8;
  *(void *)(a7 + 8) = a3;
  *(void *)(a7 + 16) = a4;
  *(_WORD *)(a7 + 24) = a5;
  *(unsigned char *)(a7 + 26) = BYTE2(a5) & 1;
  uint64_t v9 = a7 + *(int *)(type metadata accessor for JetPackageWriter() + 36);
  return sub_19F0A8578(a6, v9);
}

uint64_t type metadata accessor for JetPackageWriter()
{
  uint64_t result = qword_1E9475A98;
  if (!qword_1E9475A98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *JetPackageWriter.writePackage(to:source:artifactStoreURL:progressCallback:)(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t), void (*a4)(id *, double), uint64_t a5)
{
  uint64_t v11 = sub_19F1DB34C();
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v15 + 16))(v14, a1, v12);
  uint64_t v16 = type metadata accessor for FileOutputStream();
  swift_allocObject();
  uint64_t result = sub_19F04B378((uint64_t)v14);
  if (!v5)
  {
    void v19[3] = v16;
    v19[4] = &off_1EF13E820;
    v19[0] = result;
    swift_retain();
    sub_19F159A44((uint64_t)v19, a2, a3, a4, a5);
    swift_release();
    return (void *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  }
  return result;
}

uint64_t sub_19F159A44(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t), void (*a4)(id *, double), uint64_t a5)
{
  uint64_t v122 = a5;
  uint64_t v125 = a4;
  uint64_t v129 = a3;
  id v121 = (ValueMetadata *)a2;
  uint64_t v115 = a1;
  uint64_t v142 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v114 = (uint64_t)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FileArtifact();
  MEMORY[0x1F4188790](v7 - 8);
  id v110 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v116 = (char *)&v105 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v120 = (uint64_t)&v105 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v128 = (char *)&v105 - v14;
  uint64_t v15 = sub_19F1DB5AC();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_19F1DB34C();
  uint64_t v19 = *(void *)(v130 - 8);
  MEMORY[0x1F4188790](v130);
  long long v111 = (char *)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v112 = (char *)&v105 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v123 = (char *)&v105 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v126 = (char *)&v105 - v26;
  MEMORY[0x1F4188790](v27);
  char v29 = (char *)&v105 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v105 - v31;
  sub_19F1DB59C();
  sub_19F1DB58C();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v34 = (void (*)(id *, double))(v16 + 8);
  char v33 = v35;
  uint64_t v127 = v15;
  v35(v18, v15);
  sub_19F1DB26C();
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(self, sel_defaultManager);
  char v37 = (void *)sub_19F1DB25C();
  v134[0] = 0;
  LODWORD(v15) = objc_msgSend(v36, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v37, 0, 0, v134);

  id v38 = v134[0];
  if (v15)
  {
    uint64_t v40 = v19 + 16;
    char v39 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v117 = v32;
    uint64_t v41 = v32;
    uint64_t v42 = v19;
    uint64_t v43 = v130;
    uint64_t v129 = v39;
    v39(v29, (uint64_t)v41, v130);
    id v44 = v38;
    sub_19F1DB59C();
    sub_19F1DB58C();
    uint64_t v109 = v18;
    long long v106 = v33;
    v33(v18, v127);
    uint64_t v45 = v126;
    sub_19F1DB26C();
    swift_bridgeObjectRelease();
    char v46 = *(void (**)(char *, uint64_t))(v42 + 8);
    char v107 = v29;
    uint64_t v118 = v42 + 8;
    long long v113 = v46;
    v46(v29, v43);
    uint64_t v105 = v42;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
    uint64_t v48 = (uint64_t)v128;
    uint64_t v108 = v47;
    v47(v128, v45, v43);
    uint64_t v49 = v125;
    if (v125)
    {
      LOBYTE(v134[0]) = 0;
      v125(v134, 0.0);
    }
    uint64_t v50 = (uint64_t)v123;
    v129(v123, v48, v43);
    uint64_t v51 = v40;
    uint64_t v52 = type metadata accessor for FileOutputStream();
    swift_allocObject();
    uint64_t v53 = v124;
    unsigned int v54 = sub_19F04B378(v50);
    if (v53)
    {
      uint64_t v55 = v48;
    }
    else
    {
      uint64_t v124 = v51;
      uint64_t v135 = v52;
      v136 = &off_1EF13E820;
      v134[0] = v54;
      sub_19F0AA640((uint64_t)v121, (uint64_t)v134, 0x19000uLL);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v134);
      if (v49)
      {
        LOBYTE(v134[0]) = 0;
        v49(v134, 1.0);
      }
      uint64_t v59 = v120;
      sub_19F15B998(v48, v120);
      uint64_t v60 = (unsigned char *)v119;
      uint64_t v61 = v109;
      if ((*(unsigned char *)(v119 + 1) & 1) == 0)
      {
        uint64_t v70 = v107;
        uint64_t v71 = v130;
        v129(v107, (uint64_t)v117, v130);
        sub_19F1DB59C();
        sub_19F1DB58C();
        v106(v61, v127);
        long long v72 = v126;
        sub_19F1DB26C();
        swift_bridgeObjectRelease();
        v113(v70, v71);
        uint64_t v73 = v116;
        v108(v116, v72, v71);
        sub_19F1DB2DC();
        uint64_t v123 = v74;
        id v121 = (ValueMetadata *)type metadata accessor for FileInputStream();
        swift_allocObject();
        uint64_t v75 = sub_19F04BB08();
        uint64_t v140 = v121;
        v141 = &off_1EF13D8C8;
        *(void *)&long long v138 = v75;
        uint64_t v79 = (uint64_t)v112;
        v129(v112, (uint64_t)v73, v71);
        swift_allocObject();
        uint64_t v80 = sub_19F04B378(v79);
        uint64_t v133 = &off_1EF13E820;
        uint64_t v132 = v52;
        *(void *)&long long v131 = v80;
        sub_19EEBB420(&v138, (uint64_t)v134);
        sub_19EEBB420(&v131, (uint64_t)v137);
        uint64_t v85 = swift_allocObject();
        uint64_t v49 = v125;
        uint64_t v86 = v122;
        *(void *)(v85 + 16) = v125;
        *(void *)(v85 + 24) = v86;
        sub_19EE47F40((uint64_t)v49);
        sub_19EFC5BEC((void (*)(uint64_t, double))sub_19F15BCC0);
        uint64_t v48 = (uint64_t)v128;
        sub_19F092024((uint64_t)v134);
        swift_release();
        uint64_t v104 = (uint64_t)v73;
        uint64_t v59 = v120;
        sub_19F15BC1C(v104, v120);
        uint64_t v60 = (unsigned char *)v119;
      }
      uint64_t v62 = v130;
      uint64_t v63 = v105;
      if (*v60)
      {
        unsigned __int8 v64 = 1;
LABEL_15:
        unsigned __int8 v65 = *(unsigned char *)(v119 + 1);
        long long v67 = *(void **)(v119 + 8);
        uint64_t v66 = *(void **)(v119 + 16);
        if (*(unsigned char *)(v119 + 26)) {
          __int16 v68 = 0;
        }
        else {
          __int16 v68 = *(_WORD *)(v119 + 24);
        }
        sub_19EEC4154(v115, (uint64_t)&v138);
        type metadata accessor for JetPackageFormatWriter();
        uint64_t inited = swift_initStackObject();
        *(unsigned char *)(inited + 56) = 0;
        sub_19EEBB420(&v138, inited + 16);
        LOBYTE(v134[0]) = 0;
        *(_WORD *)((char *)v134 + 1) = v65;
        *(_WORD *)((char *)v134 + 3) = v64;
        v134[1] = v67;
        v134[2] = v66;
        LOWORD(v135) = v68;
        v136 = 0;
        v137[0] = 0;
        v137[1] = 0xF000000000000000;
        swift_bridgeObjectRetain();
        sub_19F031F6C((char *)v134);
        sub_19F1DB2DC();
        uint64_t v83 = type metadata accessor for FileInputStream();
        swift_allocObject();
        uint64_t v84 = (void *)sub_19F04BB08();
        uint64_t v135 = v83;
        v136 = &off_1EF13D8C8;
        v134[0] = v84;
        __swift_project_boxed_opaque_existential_1(v134, v83);
        if (off_1EF13D8D0())
        {
          while (1)
          {
            uint64_t v95 = v135;
            uint64_t v96 = v136;
            __swift_project_boxed_opaque_existential_1(v134, v135);
            uint64_t v97 = ((uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))v96[3])(0x20000, v95, v96);
            unint64_t v99 = v98;
            if ((*(unsigned char *)(inited + 56) & 1) == 0) {
              break;
            }
            uint64_t v100 = *(void *)(inited + 40);
            uint64_t v101 = *(void *)(inited + 48);
            __swift_project_boxed_opaque_existential_1((void *)(inited + 16), v100);
            (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v101 + 8))(v97, v99, v100, v101);
            sub_19EEA072C(v97, v99);
            uint64_t v102 = v135;
            id v103 = v136;
            __swift_project_boxed_opaque_existential_1(v134, v135);
            if ((((uint64_t (*)(uint64_t, _UNKNOWN **))v103[1])(v102, v103) & 1) == 0) {
              goto LABEL_30;
            }
          }
          sub_19F0324E0();
          swift_allocError();
          swift_willThrow();
          sub_19EEA072C(v97, v99);
        }
LABEL_30:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v134);
        swift_bridgeObjectRelease();
        swift_release();
        sub_19F033400(0, 0, 0xF000000000000000);
        sub_19F091FC8((uint64_t)v128);
        uint64_t v55 = v120;
        goto LABEL_7;
      }
      uint64_t v76 = (uint64_t)&v60[*(int *)(type metadata accessor for JetPackageWriter() + 36)];
      uint64_t v77 = v114;
      sub_19EE628D4(v76, v114);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v77, 1, v62) != 1)
      {
        uint64_t v125 = v34;
        v108(v111, (char *)v77, v130);
        uint64_t v81 = sub_19F1DB36C();
        long long v82 = v117;
        uint64_t v140 = &type metadata for CommonCryptoPackageEncryption;
        v141 = &off_1EF147BE8;
        *(void *)&long long v138 = v81;
        *((void *)&v138 + 1) = v87;
        uint64_t v139 = 0x20000;
        sub_19EEBB420(&v138, (uint64_t)v134);
        uint64_t v88 = v130;
        v129(v107, (uint64_t)v82, v130);
        uint64_t v89 = v109;
        sub_19F1DB59C();
        sub_19F1DB58C();
        v106(v89, v127);
        char v90 = v126;
        uint64_t v91 = v107;
        sub_19F1DB26C();
        swift_bridgeObjectRelease();
        uint64_t v92 = v91;
        long long v93 = v113;
        v113(v92, v88);
        uint64_t v94 = (uint64_t)v110;
        v108(v110, v90, v88);
        if (v49)
        {
          LOBYTE(v138) = 2;
          v49((id *)&v138, 0.0);
          sub_19F15B9FC(v134, v59, v94);
          LOBYTE(v138) = 2;
          v49((id *)&v138, 1.0);
          v113(v111, v88);
        }
        else
        {
          sub_19F15B9FC(v134, v59, v94);
          v93(v111, v88);
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v134);
        sub_19F15BC1C(v94, v59);
        unsigned __int8 v64 = *(unsigned char *)v119;
        goto LABEL_15;
      }
      sub_19EE6293C(v77);
      sub_19F15AB7C();
      swift_allocError();
      unsigned char *v78 = 2;
      swift_willThrow();
      sub_19F091FC8(v48);
      uint64_t v55 = v59;
    }
LABEL_7:
    sub_19F091FC8(v55);
    uint64_t v56 = v117;
    sub_19F15B7B0();
    return ((uint64_t (*)(char *, uint64_t))v113)(v56, v130);
  }
  id v58 = v134[0];
  sub_19F1DB19C();

  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v32, v130);
}

unint64_t sub_19F15AB24()
{
  unint64_t result = qword_1E9475A80;
  if (!qword_1E9475A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475A80);
  }
  return result;
}

unint64_t sub_19F15AB7C()
{
  unint64_t result = qword_1E9475A88;
  if (!qword_1E9475A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475A88);
  }
  return result;
}

unint64_t sub_19F15ABD4()
{
  unint64_t result = qword_1E9475A90;
  if (!qword_1E9475A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475A90);
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageWriterError()
{
  return &type metadata for JetPackageWriterError;
}

void *initializeBufferWithCopyOfBuffer for JetPackageWriter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    *(unsigned char *)(a1 + 26) = *((unsigned char *)a2 + 26);
    uint64_t v9 = sub_19F1DB34C();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for JetPackageWriter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for JetPackageWriter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_19F1DB34C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for JetPackageWriter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __int16 v6 = *(_WORD *)(a2 + 24);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(_WORD *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_19F1DB34C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for JetPackageWriter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (void *)(a1 + v4);
  __int16 v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for JetPackageWriter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_19F1DB34C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackageWriter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F15B46C);
}

uint64_t sub_19F15B46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 36);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for JetPackageWriter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F15B540);
}

uint64_t sub_19F15B540(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_19F15B5EC()
{
  sub_19EE23F8C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *_s9JetEngine21JetPackageWriterErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F15B778);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageWriter.Step()
{
  return &type metadata for JetPackageWriter.Step;
}

void sub_19F15B7B0()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  unint64_t v1 = (void *)sub_19F1DB25C();
  id v7 = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, &v7);

  id v3 = v7;
  if (v2)
  {
    id v4 = v3;
  }
  else
  {
    id v5 = v7;
    unsigned int v6 = (void *)sub_19F1DB19C();

    swift_willThrow();
    id v7 = 0;
    uint64_t v8 = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DB34C();
    sub_19F091F70();
    sub_19F1DD2EC();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    swift_getErrorValue();
    sub_19F1DD6AC();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F0E88E4((uint64_t)v7, v8);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_19F15B998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FileArtifact();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F15B9FC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FileArtifact();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F15B998(a2, (uint64_t)v12);
  sub_19F1DB2DC();
  uint64_t v13 = type metadata accessor for FileInputStream();
  swift_allocObject();
  uint64_t v14 = sub_19F04BB08();
  if (v3) {
    return sub_19F091FC8((uint64_t)v12);
  }
  void v19[3] = v13;
  v19[4] = &off_1EF13D8C8;
  v19[0] = v14;
  sub_19F091FC8((uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v20, v6);
  uint64_t v16 = type metadata accessor for FileOutputStream();
  swift_allocObject();
  uint64_t v17 = sub_19F04B378((uint64_t)v9);
  void v18[3] = v16;
  v18[4] = &off_1EF13E820;
  v18[0] = v17;
  sub_19F17197C((uint64_t)v19, (uint64_t)v18);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
}

uint64_t sub_19F15BC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FileArtifact();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F15BC80()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F15BCC0()
{
  unint64_t v1 = *(uint64_t (**)(char *))(v0 + 16);
  if (v1)
  {
    char v3 = 1;
    return v1(&v3);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfigBaseFieldsProvider()
{
  return &type metadata for ConfigBaseFieldsProvider;
}

uint64_t sub_19F15BD1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  v3[31] = a1;
  v3[32] = v4;
  uint64_t v5 = v2[1];
  v3[33] = *v2;
  v3[34] = v5;
  return MEMORY[0x1F4188298](sub_19EE3F12C, 0, 0);
}

uint64_t sub_19F15BD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1 + 40;
  uint64_t v3 = a2 + 40;
  sub_19EE77E34(a1, a2);
  return sub_19EEBDBA4(v2, v3);
}

uint64_t sub_19F15BD8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v39 = a1;
  uint64_t v40 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v41 = v8;
  uint64_t v42 = 0;
  uint64_t v43 = v11 & v9;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19EFCA0A0((uint64_t)&v35);
  if (!*((void *)&v36 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    return swift_release();
  }
  while (1)
  {
    long long v32 = v35;
    long long v33 = v36;
    uint64_t v34 = v37;
    sub_19EEBDC00(&v38, v31);
    uint64_t v13 = *a5;
    unint64_t v15 = sub_19EE77500((uint64_t)&v32);
    uint64_t v16 = *(void *)(v13 + 16);
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    char v19 = v14;
    if (*(void *)(v13 + 24) >= v18)
    {
      if (a4)
      {
        if (v14) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_19EFBD530();
        if (v19) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_19EE77768(v18, a4 & 1);
      unint64_t v20 = sub_19EE77500((uint64_t)&v32);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_22;
      }
      unint64_t v15 = v20;
      if (v19)
      {
LABEL_6:
        sub_19EEBDBA4((uint64_t)v31, (uint64_t)v30);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
        sub_19EE7760C((uint64_t)&v32);
        uint64_t v12 = (_OWORD *)(*(void *)(*a5 + 56) + 32 * v15);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
        sub_19EEBDC00(v30, v12);
        goto LABEL_7;
      }
    }
    uint64_t v22 = (void *)*a5;
    *(void *)(*a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    uint64_t v23 = v22[6] + 40 * v15;
    long long v24 = v32;
    long long v25 = v33;
    *(void *)(v23 + 32) = v34;
    *(_OWORD *)uint64_t v23 = v24;
    *(_OWORD *)(v23 + 16) = v25;
    sub_19EEBDC00(v31, (_OWORD *)(v22[7] + 32 * v15));
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_21;
    }
    _OWORD v22[2] = v28;
LABEL_7:
    sub_19EFCA0A0((uint64_t)&v35);
    a4 = 1;
    if (!*((void *)&v36 + 1)) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

Swift::Void __swiftcall IntervalSignpost.emitBeginTrace(_:_:_:_:)(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4)
{
}

Swift::Void __swiftcall IntervalSignpost.emitEndTrace(_:)(Swift::String a1)
{
  v5[1] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = 0;
  v5[0] = 0;
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  unint64_t v1 = (void *)sub_19F1DBD4C();
  JESignpostArgumentsFromString(v1, v5, &v4, &v3, &v2);

  JESignpostEmitTrace();
}

uint64_t IntervalSignpost.init(component:beginEvent:endEvent:)@<X0>(uint64_t result@<X0>, int a2@<W1>, int a3@<W2>, _DWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t ImpulseSignpost.init(component:event:)@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ImpulseSignpost.component.getter()
{
  return *v0;
}

uint64_t ImpulseSignpost.event.getter()
{
  return *(unsigned int *)(v0 + 4);
}

Swift::Void __swiftcall ImpulseSignpost.emitTrace(_:_:_:_:)(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4)
{
}

Swift::Void __swiftcall ImpulseSignpost.emitTrace(_:)(Swift::String a1)
{
  v5[1] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = 0;
  v5[0] = 0;
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  unint64_t v1 = (void *)sub_19F1DBD4C();
  JESignpostArgumentsFromString(v1, v5, &v4, &v3, &v2);

  JESignpostEmitTrace();
}

uint64_t IntervalSignpost.component.getter()
{
  return *v0;
}

uint64_t IntervalSignpost.beginEvent.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t IntervalSignpost.endEvent.getter()
{
  return *(unsigned int *)(v0 + 8);
}

Swift::Void __swiftcall IntervalSignpost.emitEndTrace(_:_:_:_:)(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4)
{
}

ValueMetadata *type metadata accessor for ImpulseSignpost()
{
  return &type metadata for ImpulseSignpost;
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for IntervalSignpost(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for IntervalSignpost(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for IntervalSignpost()
{
  return &type metadata for IntervalSignpost;
}

uint64_t sub_19F15C224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_19EEBDBA4(a3, (uint64_t)v17);
  if (*(void *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_19EEBD400(a1, a2);
    if (v12)
    {
      sub_19EEBDBA4(*(void *)(a4 + 56) + 32 * v11, (uint64_t)&v15);
    }
    else
    {
      long long v15 = 0u;
      long long v16 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  char v13 = sub_19F15C304(v17, &v15, a5, a6);
  sub_19EEBD664((uint64_t)&v15, &qword_1EB393260);
  sub_19EEBD664((uint64_t)v17, &qword_1EB393260);
  return v13 & 1;
}

uint64_t sub_19F15C304(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  sub_19EEBCD00(a1, (uint64_t)&v49);
  if (!v50) {
    goto LABEL_7;
  }
  sub_19EEBDC00(&v49, &v53);
  sub_19EEBCD00(a2, (uint64_t)&v49);
  if (!v50)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v53);
LABEL_7:
    sub_19EEBD664((uint64_t)&v49, &qword_1EB393260);
    unsigned __int8 v7 = 0;
    return v7 & 1;
  }
  sub_19EEBDC00(&v49, v52);
  sub_19EEBDBA4((uint64_t)&v53, (uint64_t)&v49);
  sub_19EEBDBA4((uint64_t)v52, (uint64_t)v51);
  sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
  if (swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB392280);
      unsigned __int8 v7 = sub_19F1DCA1C();

LABEL_50:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v53);
      goto LABEL_51;
    }
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v53);
    unsigned __int8 v7 = v38 ^ v43 ^ 1;
LABEL_51:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v49);
    return v7 & 1;
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v53);
    unsigned __int8 v7 = *(double *)&v38 == *(double *)&v43;
    goto LABEL_51;
  }
  unint64_t v8 = MEMORY[0x1E4FBB1A0];
  if (swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      if (v38 == v43) {
        unsigned __int8 v7 = 1;
      }
      else {
        unsigned __int8 v7 = sub_19F1DD44C();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
  if (!swift_dynamicCast())
  {
LABEL_36:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    if (swift_dynamicCast())
    {
      if (swift_dynamicCast())
      {
        if (a4 < a3)
        {
          swift_bridgeObjectRetain();
          uint64_t v13 = swift_bridgeObjectRetain();
          char v14 = sub_19EFA9A90(v13, v38);
          swift_bridgeObjectRelease();
          uint64_t v15 = swift_bridgeObjectRelease();
          if (v14)
          {
            MEMORY[0x1F4188790](v15);
            unsigned __int8 v7 = sub_19EFAA2BC(v38, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_19EFAA4A8);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unsigned __int8 v7 = 0;
          }
          goto LABEL_50;
        }
LABEL_53:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v53);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v49);
        unsigned __int8 v7 = 0;
        return v7 & 1;
      }
      swift_bridgeObjectRelease();
    }
    if (qword_1EB393168 != -1) {
      goto LABEL_63;
    }
    goto LABEL_43;
  }
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  if (a4 >= a3) {
    goto LABEL_53;
  }
  unint64_t v9 = *(void *)(v48 + 16);
  unint64_t v10 = *(void *)(v42 + 16);
  uint64_t v31 = v42 + 32;
  uint64_t v32 = v48 + 32;
  uint64_t v34 = v48;
  swift_bridgeObjectRetain();
  uint64_t v33 = v42;
  swift_bridgeObjectRetain();
  unint64_t v8 = 0;
  unint64_t v11 = 0;
  while (1)
  {
    if (v11 == v9)
    {
      long long v43 = 0u;
      long long v44 = 0u;
      unint64_t v11 = v9;
      if (v8 == v10) {
        goto LABEL_26;
      }
      goto LABEL_29;
    }
    if (v11 >= *(void *)(v34 + 16)) {
      break;
    }
    sub_19EEBDBA4(v32 + 32 * v11++, (uint64_t)&v43);
    if (v8 == v10)
    {
LABEL_26:
      long long v46 = 0u;
      long long v47 = 0u;
      unint64_t v8 = v10;
      goto LABEL_31;
    }
LABEL_29:
    if (v8 >= *(void *)(v33 + 16)) {
      goto LABEL_62;
    }
    sub_19EEBDBA4(v31 + 32 * v8++, (uint64_t)&v46);
LABEL_31:
    sub_19EE87718((uint64_t)&v43, (uint64_t)&v38);
    sub_19EE87718((uint64_t)&v46, (uint64_t)&v40);
    if (!*((void *)&v39 + 1))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41)
      {
        sub_19EEBD664((uint64_t)&v40, &qword_1EB393260);
        goto LABEL_58;
      }
      unsigned __int8 v7 = 1;
LABEL_59:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    if (!v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v38);
LABEL_58:
      unsigned __int8 v7 = 0;
      goto LABEL_59;
    }
    sub_19EEBDC00(&v38, v45);
    sub_19EEBDC00(&v40, v37);
    sub_19EEBDBA4((uint64_t)v45, (uint64_t)v36);
    sub_19EEBDBA4((uint64_t)v37, (uint64_t)v35);
    char v12 = sub_19F15C304(v36, v35, a3, a4 + 1);
    sub_19EEBD664((uint64_t)v35, &qword_1EB393260);
    sub_19EEBD664((uint64_t)v36, &qword_1EB393260);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    if ((v12 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_58;
    }
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  swift_once();
LABEL_43:
  long long v16 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_19F24EB80;
  id v18 = v16;
  *(void *)&v37[0] = sub_19EEC3F3C(0, 64, 0, MEMORY[0x1E4FBC860]);
  v19._uint64_t object = (void *)0x800000019F273CC0;
  v19._uint64_t countAndFlagsBits = 0xD000000000000034;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  __swift_project_boxed_opaque_existential_1(&v53, v54);
  uint64_t DynamicType = swift_getDynamicType();
  *((void *)&v47 + 1) = swift_getMetatypeMetadata();
  *(void *)&long long v46 = DynamicType;
  sub_19EEBCD00((uint64_t)&v46, (uint64_t)v45);
  long long v43 = 0u;
  long long v44 = 0u;
  sub_19EEC3E70((uint64_t)v45, (uint64_t)&v43);
  LOBYTE(v40) = 0;
  long long v38 = v43;
  long long v39 = v44;
  char v21 = *(void **)&v37[0];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v21 = sub_19EEC3F3C(0, v21[2] + 1, 1, v21);
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1) {
    char v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
  }
  void v21[2] = v23 + 1;
  long long v24 = &v21[5 * v23];
  long long v25 = v38;
  long long v26 = v39;
  *((unsigned char *)v24 + 64) = v40;
  *((_OWORD *)v24 + 2) = v25;
  *((_OWORD *)v24 + 3) = v26;
  *(void *)&v37[0] = v21;
  sub_19EEBD664((uint64_t)&v46, &qword_1EB393260);
  v27._uint64_t countAndFlagsBits = 0x756F662073617720;
  v27._uint64_t object = (void *)0xEB000000002E646ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  *(void *)(v17 + 32) = *(void *)&v37[0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_19F24EAD0;
  *((void *)&v44 + 1) = v8;
  *(void *)&long long v43 = 0xD000000000000059;
  *((void *)&v43 + 1) = 0x800000019F273D00;
  long long v38 = 0u;
  long long v39 = 0u;
  sub_19EEC3E70((uint64_t)&v43, (uint64_t)&v38);
  *(unsigned char *)(v28 + 64) = 0;
  long long v29 = v39;
  *(_OWORD *)(v28 + 32) = v38;
  *(_OWORD *)(v28 + 48) = v29;
  *(void *)(v17 + 40) = v28;
  *(void *)&long long v38 = v18;
  LOBYTE(v43) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v43);

  swift_bridgeObjectRelease();
  unsigned __int8 v7 = _isStructurallyEqual(_:to:with:at:)(&v53, v52, a3, 0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v53);
  sub_19EEBD664((uint64_t)&v49, &qword_1E946CEB8);
  return v7 & 1;
}

void *StateRef.init(pointingTo:in:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

__n128 StateRef.init(_:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t StateRef<>.current.getter(void *a1, uint64_t a2)
{
  uint64_t v9 = *v2;
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v6 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = a1[2];
  swift_bridgeObjectRetain();
  v6(&v9, v5, a2, v7, v4);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for StateRef()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for InvalidFileEncodingError()
{
  return &type metadata for InvalidFileEncodingError;
}

id Net.jsExport.getter()
{
  sub_19EEC4154(v0, (uint64_t)v6);
  unint64_t v1 = (objc_class *)type metadata accessor for JSNetObject();
  id v2 = objc_allocWithZone(v1);
  sub_19EEC4154((uint64_t)v6, (uint64_t)v2 + OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
  v5.receiver = v2;
  v5.super_class = v1;
  id v3 = objc_msgSendSuper2(&v5, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v3;
}

uint64_t Net.init<A, B>(encoder:fetcher:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  a5[3] = type metadata accessor for _NetGuts();
  a5[4] = (uint64_t)&off_1EF14BBD0;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a5);
  return sub_19EF59718(a1, a2, a3, a4, (uint64_t)boxed_opaque_existential_2Tm);
}

uint64_t Net.fetch(contentsOf:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  uint64_t v3[2] = a1;
  return MEMORY[0x1F4188298](sub_19F15CE80, 0, 0);
}

uint64_t sub_19F15CE80()
{
  unint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19F15D854;
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  return v8(v5, v6, v2, v3);
}

uint64_t Net.jsRepresentation(in:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_19EEC4154(v2, (uint64_t)v9);
  uint64_t v4 = (objc_class *)type metadata accessor for JSNetObject();
  id v5 = objc_allocWithZone(v4);
  sub_19EEC4154((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
  v8.receiver = v5;
  v8.super_class = v4;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  a1[3] = v4;
  a1[4] = &off_1EF13A798;
  *a1 = v6;
  return result;
}

uint64_t sub_19F15D024@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_19EEC4154(v2, (uint64_t)v9);
  uint64_t v4 = (objc_class *)type metadata accessor for JSNetObject();
  id v5 = objc_allocWithZone(v4);
  sub_19EEC4154((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
  v8.receiver = v5;
  v8.super_class = v4;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  a1[3] = v4;
  a1[4] = &off_1EF13A798;
  *a1 = v6;
  return result;
}

ValueMetadata *type metadata accessor for Net()
{
  return &type metadata for Net;
}

uint64_t sub_19F15D0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  uint64_t v3[2] = a1;
  return MEMORY[0x1F4188298](sub_19EE2B1BC, 0, 0);
}

uint64_t sub_19F15D0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  uint64_t v3[2] = a1;
  return MEMORY[0x1F4188298](sub_19EE1C940, 0, 0);
}

uint64_t sub_19F15D118(void *a1, void *a2, void *a3)
{
  id v6 = a1;
  sub_19EFC7938(a1, (uint64_t)&v31);
  uint64_t v7 = v40;
  objc_super v8 = v41;
  if (a2)
  {
    id v22 = a2;
    uint64_t v26 = v38;
    uint64_t v27 = v39;
    uint64_t v9 = v31;
    uint64_t v10 = v33;
    char v11 = v34;
    uint64_t v12 = v35;
    char v13 = v36;
    long long v24 = v41;
    uint64_t v14 = v43;
    uint64_t v15 = v37;
    uint64_t v23 = v42;
    uint64_t v16 = v32;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_19F24EAD0;
    uint64_t v31 = v9;
    uint64_t v32 = v16;
    uint64_t v33 = v10;
    char v34 = v11;
    uint64_t v35 = v12;
    char v36 = v13;
    uint64_t v37 = v15;
    uint64_t v38 = v26;
    uint64_t v39 = v27;
    uint64_t v40 = v7;
    uint64_t v41 = v24;
    uint64_t v42 = v23;
    uint64_t v43 = v14;
    JSError.jsRepresentation(in:)(a3, &v28);
    uint64_t v17 = v29;
    uint64_t v18 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, v29);
    uint64_t v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 16))(a3, v17, v18);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
    *(void *)(v25 + 56) = sub_19EEBDC10(0, (unint64_t *)&qword_1EB392790);
    *(void *)(v25 + 32) = v19;
    unint64_t v20 = (void *)sub_19F1DC14C();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19F15D5D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for NetRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_19F15D70C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F15D754()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F15D79C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F15D7DC(void *a1)
{
  return sub_19F15D118(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_19F15D7E4()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t type metadata accessor for RenamePreferenceMigrationRule()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_19F15D874@<X0>(void *result@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = result[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  *a3 = *result;
  a3[1] = v3;
  a3[2] = v4;
  a3[3] = v5;
  return result;
}

uint64_t sub_19F15D888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a4;
  uint64_t v33 = a3;
  uint64_t v8 = *(void *)(a5 + 16);
  uint64_t v9 = sub_19F1DCAAC();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v31 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v5;
  uint64_t v19 = v5[1];
  uint64_t v20 = v5[3];
  uint64_t v27 = v5[2];
  uint64_t v28 = v20;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v29 = v18;
  uint64_t v38 = v18;
  uint64_t v39 = v19;
  swift_bridgeObjectRetain();
  uint64_t v30 = ObjectType;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  Preferences.subscript.getter(&v38, ObjectType, v8, a2, (uint64_t)v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v8) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v14, v37);
  }
  uint64_t v23 = v31;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v31, v14, v8);
  uint64_t v24 = swift_getObjectType();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v23, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v8);
  uint64_t v38 = v27;
  uint64_t v39 = v28;
  swift_bridgeObjectRetain();
  sub_19F089130((uint64_t)v11, &v38, v24, v8, v32);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
  uint64_t v40 = type metadata accessor for PreferenceKey();
  uint64_t v41 = &protocol witness table for PreferenceKey<A>;
  uint64_t v38 = v29;
  uint64_t v39 = v19;
  uint64_t v25 = v35;
  uint64_t v26 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v35 + 32);
  swift_bridgeObjectRetain();
  v26(&v38, v30, v25);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v38);
}

uint64_t sub_19F15DBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19F15D888(a1, a2, a3, a4, a5);
}

BOOL sub_19F15DBC8()
{
  uint64_t v1 = MEMORY[0x19F3C95C0](v0 + 56);
  if (v1) {
    swift_unknownObjectRelease();
  }
  return v1 != 0;
}

uint64_t sub_19F15DC04(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v1 + 7);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t result = MEMORY[0x19F3C95C0](v6);
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = v1[6];
    uint64_t v17 = v1[5];
    uint64_t v16 = __swift_project_boxed_opaque_existential_1(v1 + 2, v17);
    uint64_t v12 = v1[8];
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v14 = (char *)swift_allocObject();
    *((void *)v14 + 2) = *(void *)(v3 + 80);
    *((void *)v14 + 3) = v4;
    *((void *)v14 + 4) = v10;
    *((void *)v14 + 5) = v12;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], v8, v4);
    uint64_t v15 = *(void (**)(uint64_t (*)(), char *, uint64_t, uint64_t))(v11 + 8);
    swift_unknownObjectRetain();
    swift_retain();
    v15(sub_19F15E284, v14, v17, v11);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_19F15DDE0(uint64_t a1)
{
  double v2 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, double))(v3 + 16))((char *)v7 - v4, v5, v2);
  v7[1] = a1;
  swift_unknownObjectRetain();
  swift_setAtReferenceWritableKeyPath();
  return swift_unknownObjectRelease();
}

uint64_t sub_19F15DEF4()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t sub_19F15DF24()
{
  sub_19F15DEF4();
  return swift_deallocClassInstance();
}

BOOL sub_19F15DF58()
{
  return sub_19F15DBC8();
}

uint64_t sub_19F15DF80(uint64_t a1)
{
  return sub_19F15DC04(a1);
}

uint64_t EventEmitter.addObserver<A>(on:target:property:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for PropertyEventObserver();
  sub_19EEC4154(a1, (uint64_t)v14);
  swift_allocObject();
  *(void *)&v14[0] = sub_19F15E0F8(v14, a2, a3);
  uint64_t v11 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24);
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  v11(v14, v10, WitnessTable, a4, a5);
  return swift_release();
}

uint64_t type metadata accessor for PropertyEventObserver()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F15E0F8(long long *a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  sub_19EEBB420(a1, v3 + 16);
  swift_unknownObjectWeakAssign();
  *(void *)(v3 + 64) = a3;
  return v3;
}

uint64_t sub_19F15E160()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19F15E1BC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19F15E284()
{
  return sub_19F15DDE0(*(void *)(v0 + 32));
}

uint64_t static PipelinePhase<>.fetchJSIndex(urlSession:urlEncoder:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t (**a3)(uint64_t a1)@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946FC70);
  swift_allocObject();
  id v6 = a1;
  id v7 = a2;
  uint64_t v8 = sub_19EE992B8(v7);
  type metadata accessor for JSRemoteIndexFetcher();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v7;
  *(void *)(v9 + 32) = 0;
  *(void *)(v9 + 40) = 0;
  *(void *)(v9 + 48) = 4;
  *(unsigned char *)(v9 + 56) = 1;
  *(void *)(v9 + 64) = v8;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_19F15E3E8;
  *(void *)(result + 24) = v9;
  *a3 = sub_19F15E81C;
  a3[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t type metadata accessor for JSRemoteIndexFetcher()
{
  return self;
}

void *sub_19F15E3C4(uint64_t a1)
{
  return sub_19F15E3EC(a1);
}

void *sub_19F15E3EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v23 = a1;
  uint64_t v24 = sub_19F1DB34C();
  uint64_t v3 = *(void *)(v24 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v24);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_19F1DB26C();
  long long v9 = *(_OWORD *)(v1 + 48);
  long long v10 = *(_OWORD *)(v1 + 16);
  long long v26 = *(_OWORD *)(v1 + 32);
  long long v27 = v9;
  long long v25 = v10;
  uint64_t v28 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)*((void *)&v10 + 1);
  sub_19F07A920((uint64_t)v8, *((void **)&v10 + 1), *((uint64_t *)&v26 + 1), v9, SBYTE8(v9));
  uint64_t v12 = swift_allocObject();
  long long v13 = v26;
  long long v14 = v27;
  *(_OWORD *)(v12 + 16) = v25;
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = v14;
  *(void *)(v12 + 64) = v28;
  uint64_t v15 = (void *)v25;
  sub_19EEBDC4C((uint64_t)&v26, (uint64_t)v29, &qword_1E946F508);
  id v16 = v15;
  id v17 = v11;
  sub_19EE9D054((uint64_t)v29);
  swift_retain();
  sub_19F15E684((uint64_t)sub_19EF848E0, v12);
  swift_release();
  swift_release();
  uint64_t v18 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v23, v24);
  unint64_t v19 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v20 + v19, v5, v18);
  swift_retain();
  char v21 = sub_19F15E824((uint64_t)sub_19F15EB24, v20);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v18);
  return v21;
}

uint64_t sub_19F15E684(uint64_t a1, uint64_t a2)
{
  long long v13 = &type metadata for SyncTaskScheduler;
  long long v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392210);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = 0;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  _OWORD v7[3] = a2;
  void v7[4] = v4;
  sub_19EEBB420(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19F15F0F4;
  v9[1] = v7;
  void v9[2] = sub_19F020918;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF53824((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1E946F9D0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19F15E7E4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F15E81C(uint64_t a1)
{
  return sub_19F06F46C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void *sub_19F15E824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470FB0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = &type metadata for SyncTaskScheduler;
  id v16 = &protocol witness table for SyncTaskScheduler;
  *uint64_t v6 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736F0);
  uint64_t v7 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  void v7[2] = v8;
  sub_19EEBDC4C((uint64_t)v6, (uint64_t)v7 + *(void *)(*v7 + 96), (uint64_t *)&unk_1E9470FB0);
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  long long v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  void v9[3] = a2;
  void v9[4] = v7;
  sub_19EEBB420(v13, (uint64_t)(v9 + 5));
  v11[0] = sub_19F15EB98;
  v11[1] = v9;
  long long v11[2] = sub_19F15EBAC;
  uint64_t v11[3] = v7;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v12);
  unsigned char v12[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EE24580((uint64_t)v11);
  sub_19EEBD664((uint64_t)v11, (uint64_t *)&unk_1EB3918A0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19F15EA08()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19F15EA58()
{
  uint64_t v1 = sub_19F1DB34C();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void *sub_19F15EB24(void **a1)
{
  uint64_t v3 = *(void *)(sub_19F1DB34C() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *a1;
  return sub_19F15EBB4(v5, v4);
}

uint64_t sub_19F15EB98(uint64_t *a1)
{
  return sub_19F15FAC0(*a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

uint64_t sub_19F15EBAC(uint64_t a1)
{
  return sub_19F161EA4(a1, v1);
}

void *sub_19F15EBB4(void *a1, uint64_t a2)
{
  v30[0] = a2;
  v35[5] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470FB0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (void *)((char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for JSPackageIndex();
  double v11 = MEMORY[0x1F4188790](v10 - 8);
  long long v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a1, sel_data, v11);
  uint64_t v15 = sub_19F1DB40C();
  unint64_t v17 = v16;

  if (qword_1E946FBB8 != -1) {
    swift_once();
  }
  if (sub_19EE7C7FC(qword_1E9498B08, unk_1E9498B10, v15, v17))
  {
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9E8]), sel_init);
    unint64_t v19 = &qword_1EB392CF0;
LABEL_9:
    uint64_t v34 = sub_19EEBDC10(0, v19);
    *(void *)&long long v33 = v18;
    goto LABEL_10;
  }
  if (qword_1E946FBD0 != -1) {
    swift_once();
  }
  if (sub_19EE7C7FC(qword_1E9498B18, unk_1E9498B20, v15, v17))
  {
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C978]), sel_init);
    unint64_t v19 = (unint64_t *)&qword_1EB391C00;
    goto LABEL_9;
  }
  uint64_t v24 = self;
  long long v25 = (void *)sub_19F1DB3EC();
  id v31 = 0;
  id v26 = objc_msgSend(v24, sel_JSONObjectWithData_options_error_, v25, 4, &v31);

  id v27 = v31;
  if (!v26)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_19F1DB19C();

    swift_willThrow();
    sub_19EEA072C(v15, v17);
    *uint64_t v5 = v29;
    goto LABEL_11;
  }
  sub_19F1DCBEC();
  swift_unknownObjectRelease();
LABEL_10:
  sub_19EEBDC00(&v33, v32);
  void v35[3] = &type metadata for FoundationValue;
  v35[4] = &off_1EF13D8F8;
  v35[0] = swift_allocObject();
  sub_19EEBDBA4((uint64_t)v32, v35[0] + 16);
  sub_19EEA072C(v15, v17);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  unint64_t v20 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  sub_19EEC355C((uint64_t)v35, (uint64_t)v32);
  *(void *)&long long v33 = v20;
  (*(void (**)(char *, void, uint64_t))(v7 + 16))(v9, v30[0], v6);
  JSPackageIndex.init(deserializing:using:from:)((uint64_t)v32, (uint64_t)v9, (uint64_t)v13);
  sub_19EEC3418((uint64_t)v35);
  sub_19F15F08C((uint64_t)v13, (uint64_t)v5);
LABEL_11:
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94736F0);
  char v21 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 16) = 0;
  void v21[2] = v22;
  sub_19EEBDC4C((uint64_t)v5, (uint64_t)v21 + *(void *)(*v21 + 96), (uint64_t *)&unk_1E9470FB0);
  return v21;
}

uint64_t sub_19F15F054()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F15F08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSPackageIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F15F0F4(uint64_t a1)
{
  return sub_19F15F104(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

uint64_t sub_19F15F104(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2();
  v8[0] = sub_19F161E74;
  v8[1] = a4;
  void v8[2] = sub_19F161E7C;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EE24580((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1EB3918A0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F1BC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2();
  v8[0] = sub_19F161E94;
  v8[1] = a4;
  void v8[2] = sub_19F0DEF4C;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EE65B6C((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, qword_1EB3918C0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F274(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  v11[0] = a1;
  v11[1] = a2;
  a3(v11);
  v9[0] = sub_19F161E8C;
  v9[1] = a5;
  void v9[2] = sub_19F161E90;
  void v9[3] = a5;
  sub_19EEC4154(a6, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  sub_19EF541E8((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1E9470FA8);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F334(char a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v10 = a1 & 1;
  a2(&v10);
  v8[0] = sub_19F161E84;
  v8[1] = a4;
  void v8[2] = sub_19F0B420C;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EF54C24((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, &qword_1E946D1C0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F3F8(long long *a1, void (*a2)(long long *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *((void *)a1 + 2);
  uint64_t v8 = *((void *)a1 + 3);
  char v9 = *((unsigned char *)a1 + 64);
  uint64_t v10 = *((void *)a1 + 11);
  long long v15 = *a1;
  uint64_t v16 = v7;
  uint64_t v17 = v8;
  long long v11 = a1[3];
  long long v18 = a1[2];
  long long v19 = v11;
  char v20 = v9;
  long long v21 = *(long long *)((char *)a1 + 72);
  uint64_t v22 = v10;
  a2(&v15);
  v13[0] = sub_19F161EBC;
  v13[1] = a4;
  long long v13[2] = sub_19F161EAC;
  void v13[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v14);
  unsigned char v14[40] = 0;
  swift_retain_n();
  sub_19EEA8C4C((uint64_t)v13);
  sub_19EEBD664((uint64_t)v13, (uint64_t *)&unk_1EB3912D0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F4E4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2();
  v8[0] = sub_19F161E80;
  v8[1] = a4;
  void v8[2] = sub_19F0DECC8;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EF53B38((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, &qword_1E946FC00);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F59C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2();
  v8[0] = sub_19F161E70;
  v8[1] = a4;
  void v8[2] = sub_19F0DEE9C;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EF56448((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1E9476570);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F654(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  v11[0] = a1;
  v11[1] = a2;
  a3(v11);
  v9[0] = sub_19F161E60;
  v9[1] = a5;
  void v9[2] = sub_19F161E6C;
  void v9[3] = a5;
  sub_19EEC4154(a6, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  sub_19EF54018((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1E9470FA0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F714(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2();
  v8[0] = sub_19F161EC0;
  v8[1] = a4;
  void v8[2] = sub_19F161EB0;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EF56720((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, &qword_1E9473830);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F7CC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = a1;
  a2(&v10);
  v8[0] = sub_19F161EBC;
  v8[1] = a4;
  void v8[2] = sub_19F161EAC;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EEA8C4C((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1EB3912D0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F88C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  v12[0] = a1;
  v12[1] = a2;
  _OWORD v12[2] = a3;
  a4(v12);
  v10[0] = sub_19EEAFBE8;
  v10[1] = a6;
  _OWORD v10[2] = sub_19F161E5C;
  void v10[3] = a6;
  sub_19EEC4154(a7, (uint64_t)v11);
  v11[40] = 0;
  swift_retain_n();
  sub_19EEA8C4C((uint64_t)v10);
  sub_19EEBD664((uint64_t)v10, (uint64_t *)&unk_1EB3912D0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15F950(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2();
  v8[0] = sub_19F161E50;
  v8[1] = a4;
  void v8[2] = sub_19F161E58;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EF56944((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, &qword_1E946E3E0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15FA08(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2();
  v8[0] = sub_19F161E44;
  v8[1] = a4;
  void v8[2] = sub_19F0DED98;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EF56720((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, &qword_1E9473830);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15FAC0(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = a1;
  a2(&v10);
  v8[0] = sub_19F161EB4;
  v8[1] = a4;
  void v8[2] = sub_19F161EB8;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EF56448((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1E9476570);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19F15FB80(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = a1;
  a2(&v10);
  v8[0] = sub_19F161E40;
  v8[1] = a4;
  void v8[2] = sub_19F161EA8;
  _OWORD v8[3] = a4;
  sub_19EEC4154(a5, (uint64_t)v9);
  unsigned char v9[40] = 0;
  swift_retain_n();
  sub_19EE6EBE4((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, &qword_1EB3912C0);
  swift_release();
  return swift_release_n();
}

void sub_19F15FC40(void *a1)
{
}

void sub_19F15FC64(void *a1)
{
}

void sub_19F15FC88(void *a1)
{
}

void sub_19F15FCAC(void *a1)
{
}

void sub_19F15FCD0(void *a1)
{
}

uint64_t sub_19F15FCF4()
{
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_19F15FD34()
{
  uint64_t result = sub_19F1DBD4C();
  qword_1E9475BF8 = result;
  return result;
}

id static ReloadableJSStack.didReloadJSStackNotification.getter()
{
  if (qword_1E9470218 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E9475BF8;
  return v0;
}

uint64_t ReloadableJSStack.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  void v6[3] = a2;
  v6[4] = v5;
  v6[1] = sub_19EE19904;
  void v6[2] = a1;
  v6[5] = *v5;
  return MEMORY[0x1F4188298](sub_19F15FF08, 0, 0);
}

uint64_t ReloadableJSStack.init(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  uint64_t v3[2] = a1;
  void v3[5] = *v2;
  return MEMORY[0x1F4188298](sub_19F15FF08, 0, 0);
}

uint64_t sub_19F15FF08()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (int *)v0[2];
  *(_DWORD *)(v0[4] + 24) = -1;
  v0[6] = type metadata accessor for StackContainer();
  uint64_t v3 = swift_allocObject();
  v0[7] = v3;
  swift_retain();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = v2;
  *(void *)(v3 + 120) = v1;
  uint64_t v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19F160028;
  return v6();
}

uint64_t sub_19F160028(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 72) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + 56);
  if (v1)
  {
    swift_release();
    swift_defaultActor_destroy();
    swift_release();
    swift_deallocPartialClassInstance();
    uint64_t v6 = sub_19F160280;
    uint64_t v7 = 0;
  }
  else
  {
    *(void *)(v5 + 128) = a1;
    uint64_t v6 = sub_19F1601A8;
    uint64_t v7 = v5;
  }
  return MEMORY[0x1F4188298](v6, v7, 0);
}

uint64_t sub_19F1601A8()
{
  swift_release();
  return MEMORY[0x1F4188298](sub_19F160210, 0, 0);
}

uint64_t sub_19F160210()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[4];
  swift_release();
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v4 = v0[4];
  return v3(v4);
}

uint64_t sub_19F160280()
{
  swift_release();
  swift_deallocPartialClassInstance();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for StackContainer()
{
  return self;
}

uint64_t ReloadableJSStack.deinit()
{
  int v1 = *(_DWORD *)(v0 + 24);
  if (v1 != -1) {
    notify_cancel(v1);
  }
  swift_release();
  return v0;
}

uint64_t ReloadableJSStack.__deallocating_deinit()
{
  int v1 = *(_DWORD *)(v0 + 24);
  if (v1 != -1) {
    notify_cancel(v1);
  }
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ReloadableJSStack.dispatcher<A, B>(for:asPartOf:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  void v2[4] = *v1;
  return MEMORY[0x1F4188298](sub_19F1603E0, 0, 0);
}

uint64_t sub_19F1603E0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[2];
  void v2[3] = v0[4];
  void v2[4] = &protocol witness table for ReloadableJSStack;
  *uint64_t v2 = v1;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  swift_retain();
  return v4();
}

uint64_t *ReloadableJSStack.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a1;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v11 - 8);
  long long v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v14 = *a2;
  uint64_t v15 = *(void *)(v4 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475C28);
  uint64_t v16 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(v16 + 16) = v17;
  *(void *)(v16 + 24) = v18;
  *(unsigned char *)(v16 + 32) = 0;
  uint64_t v19 = sub_19F1DC37C();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 1, 1, v19);
  char v20 = (void *)swift_allocObject();
  v20[2] = 0;
  uint64_t v20[3] = 0;
  void v20[4] = &unk_1E9475C20;
  void v20[5] = v15;
  v20[6] = v16;
  swift_retain();
  swift_retain();
  sub_19EE9A0F8((uint64_t)v13, (uint64_t)&unk_1E9475C30, (uint64_t)v20);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v28, a3);
  unint64_t v21 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v22 = (v9 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a3;
  *(void *)(v23 + 24) = a4;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v8 + 32))(v23 + v21, v10, a3);
  *(void *)(v23 + v22) = v14;
  type metadata accessor for JSStack();
  swift_getAssociatedTypeWitness();
  uint64_t v24 = type metadata accessor for Promise();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v30 = &type metadata for SyncTaskScheduler;
  id v31 = &protocol witness table for SyncTaskScheduler;
  swift_bridgeObjectRetain();
  id v26 = Promise.flatMap<A>(on:_:)((uint64_t)v29, (uint64_t)sub_19F161700, v23, v24, WitnessTable);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  return v26;
}

uint64_t sub_19F160794(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F1607B0, a2, 0);
}

uint64_t sub_19F1607B0()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24) + 128);
  swift_retain();
  return MEMORY[0x1F4188298](sub_19F161EC4, 0, 0);
}

uint64_t sub_19F160824(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  void v4[3] = v1;
  v4[1] = sub_19EE17780;
  return MEMORY[0x1F4188298](sub_19F1607B0, v1, 0);
}

uint64_t sub_19F1608D4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EE17780;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E94756F0
                                                                                   + dword_1E94756F0);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t ReloadableJSStack.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  void v6[2] = a1;
  void v6[3] = a2;
  return MEMORY[0x1F4188298](sub_19F1609D8, 0, 0);
}

uint64_t sub_19F1609D8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 16);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x1F4188298](sub_19F1609FC, v1, 0);
}

uint64_t sub_19F1609FC()
{
  v0[9] = *(void *)(v0[8] + 128);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_19F160AB4;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  return JSStack.dispatch<A>(_:objectGraph:)(v6, v4, v5, v2, v3);
}

uint64_t sub_19F160AB4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19F160BF0, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_19F160BF0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *ReloadableJSStack.performRequest(_:)(long long *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = a1[1];
  long long v17 = *a1;
  long long v18 = v6;
  long long v19 = a1[2];
  uint64_t v20 = *((void *)a1 + 6);
  uint64_t v7 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475C28);
  uint64_t v8 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 16) = 0;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *(void *)(v8 + 16) = v9;
  *(void *)(v8 + 24) = v10;
  *(unsigned char *)(v8 + 32) = 0;
  uint64_t v11 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = 0;
  void v12[3] = 0;
  void v12[4] = &unk_1E9475C48;
  void v12[5] = v7;
  void v12[6] = v8;
  swift_retain();
  swift_retain();
  sub_19EE9A0F8((uint64_t)v5, (uint64_t)&unk_1E9475C50, (uint64_t)v12);
  swift_release();
  uint64_t v13 = swift_allocObject();
  long long v14 = v18;
  *(_OWORD *)(v13 + 16) = v17;
  *(_OWORD *)(v13 + 32) = v14;
  *(_OWORD *)(v13 + 48) = v19;
  *(void *)(v13 + 64) = v20;
  sub_19F161B98((uint64_t)&v17);
  uint64_t v15 = sub_19F1619BC((uint64_t)sub_19F161970, v13);
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_19F160E48(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19F160E64, a2, 0);
}

uint64_t sub_19F160E64()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24) + 128);
  swift_retain();
  return MEMORY[0x1F4188298](sub_19F160ED8, 0, 0);
}

uint64_t sub_19F160ED8()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ReloadableJSStack.performRequest(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 216) = a1;
  *(void *)(v3 + 224) = v2;
  type metadata accessor for JSResponse();
  *(void *)(v3 + 232) = swift_task_alloc();
  *(_OWORD *)(v3 + 240) = *(_OWORD *)a2;
  *(void *)(v3 + 256) = *(void *)(a2 + 16);
  *(_OWORD *)(v3 + 264) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(v3 + 153) = *(unsigned char *)(a2 + 40);
  *(void *)(v3 + 280) = *(void *)(a2 + 48);
  return MEMORY[0x1F4188298](sub_19F160FBC, 0, 0);
}

uint64_t sub_19F160FBC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 224) + 16);
  *(void *)(v0 + 288) = v1;
  return MEMORY[0x1F4188298](sub_19F160FE0, v1, 0);
}

uint64_t sub_19F160FE0()
{
  *(void *)(v0 + 296) = *(void *)(*(void *)(v0 + 288) + 128);
  swift_retain();
  return MEMORY[0x1F4188298](sub_19F161054, 0, 0);
}

uint64_t sub_19F161054()
{
  char v1 = *(unsigned char *)(v0 + 153);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 280);
  long long v4 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 176) = v4;
  *(void *)(v0 + 192) = v3;
  *(unsigned char *)(v0 + 200) = v1;
  *(void *)(v0 + 208) = v2;
  *(void *)(v0 + 304) = JSStack.performRequest(_:)(v0 + 160);
  return MEMORY[0x1F4188298](sub_19F1610E4, 0, 0);
}

uint64_t sub_19F1610E4()
{
  char v1 = v0 + 2;
  uint64_t v2 = v0[29];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_19F1611A8;
  v0[10] = swift_continuation_init();
  uint64_t v3 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v3 + 72) = 1;
  sub_19EE6EBE4(v3);
  sub_19EEBD664(v3, &qword_1EB3912C0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19F1611A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 312) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19F161348;
  }
  else
  {
    sub_19F161BE4(*(void *)(v1 + 232), *(void *)(v1 + 216));
    uint64_t v3 = sub_19F1612D0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F1612D0()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F161348()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F1613C0(uint64_t a1)
{
  long long v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  void v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_19EEB8A6C;
  v5[4] = *v4;
  return MEMORY[0x1F4188298](sub_19F1603E0, 0, 0);
}

uint64_t sub_19F161498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *v5;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  void v13[6] = a5;
  v13[7] = v12;
  void v13[4] = a3;
  v13[5] = a4;
  long long v13[2] = a1;
  void v13[3] = a2;
  v13[1] = sub_19EE17780;
  return MEMORY[0x1F4188298](sub_19F1609D8, 0, 0);
}

uint64_t *sub_19F161570(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return ReloadableJSStack.dispatch<A>(intent:jsonContext:)(a1, a2, a3, a4);
}

void *sub_19F161594(long long *a1)
{
  return ReloadableJSStack.performRequest(_:)(a1);
}

uint64_t sub_19F1615B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19EE17780;
  return ReloadableJSStack.performRequest(_:)(a1, a2);
}

uint64_t sub_19F161664()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

uint64_t *sub_19F161700()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = *(void *)(v0 + ((*(void *)(*(void *)(v1 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return JSStack.dispatch<A>(intent:jsonContext:)(v0 + v3, &v5, v1, v2);
}

uint64_t sub_19F16179C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  void v4[3] = v1;
  v4[1] = sub_19EEB8A6C;
  return MEMORY[0x1F4188298](sub_19F160E64, v1, 0);
}

uint64_t sub_19F16184C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EEB8A6C;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E94756F0
                                                                                   + dword_1E94756F0);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19F161928()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void *sub_19F161970()
{
  long long v1 = *(_OWORD *)(v0 + 32);
  v3[0] = *(_OWORD *)(v0 + 16);
  v3[1] = v1;
  uint64_t v3[2] = *(_OWORD *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 64);
  return JSStack.performRequest(_:)((uint64_t)v3);
}

void *sub_19F1619BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3921E0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = &type metadata for SyncTaskScheduler;
  uint64_t v16 = &protocol witness table for SyncTaskScheduler;
  *uint64_t v6 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392200);
  uint64_t v7 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  void v7[2] = v8;
  sub_19F161D78((uint64_t)v6, (uint64_t)v7 + *(void *)(*v7 + 96));
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  void v9[3] = a2;
  void v9[4] = v7;
  sub_19EEBB420(v13, (uint64_t)(v9 + 5));
  v11[0] = sub_19F161E28;
  v11[1] = v9;
  void v11[2] = sub_19F161E3C;
  uint64_t v11[3] = v7;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v12);
  unsigned char v12[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF57298((uint64_t)v11);
  sub_19EEBD664((uint64_t)v11, (uint64_t *)&unk_1E9470F90);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19F161B98(uint64_t a1)
{
  return a1;
}

uint64_t sub_19F161BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ReloadableJSStack()
{
  return self;
}

uint64_t method lookup function for ReloadableJSStack(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ReloadableJSStack);
}

uint64_t dispatch thunk of ReloadableJSStack.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 96) + **(int **)(v2 + 96));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_19F01B558;
  return v8(a1, a2);
}

uint64_t sub_19F161D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3921E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F161DE0()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19F161E28(uint64_t *a1)
{
  return sub_19F15FB80(*a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

void sub_19F161E44(uint64_t a1)
{
}

void sub_19F161E50(void **a1)
{
}

void sub_19F161E60(uint64_t *a1)
{
}

void sub_19F161E74(void **a1)
{
}

void sub_19F161E84(char *a1)
{
}

void sub_19F161E94(void **a1)
{
}

uint64_t sub_19F161EC8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t OperationID.init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_19F1DB21C();
  uint64_t v3 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return v2;
}

uint64_t OperationID.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  sub_19F1DC0CC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t OperationID.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_19F1DD45C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v3;
}

uint64_t OperationID.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t OperationID.rawValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t sub_19F162158@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  uint64_t v5 = sub_19F1DD45C();
  uint64_t v7 = v6;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  *a2 = v5;
  a2[1] = v7;
  return result;
}

JetEngine::OperationID __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> OperationID.init(_:)(JSValue a1)
{
  if ([(objc_class *)a1.super.isa isString]
    && (id v2 = [(objc_class *)a1.super.isa toString]) != 0)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_19F1DBD7C();
    uint64_t v6 = v5;

    uint64_t v7 = v4;
    uint64_t v8 = v6;
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v10 = v9;
    uint64_t v11 = a1.super.isa;
    JSError.init(badValue:expected:)(v11, v10);
    swift_willThrow();
  }
  result.rawValue._uint64_t object = v8;
  result.rawValue._uint64_t countAndFlagsBits = v7;
  return result;
}

void sub_19F1622FC(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (objc_msgSend(a1, sel_isString)
    && (id v4 = objc_msgSend(a1, sel_toString)) != 0)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_19F1DBD7C();
    uint64_t v8 = v7;

    *a2 = v6;
    a2[1] = v8;
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v10 = v9;
    id v11 = a1;
    JSError.init(badValue:expected:)(v11, v10);
    swift_willThrow();
  }
}

unint64_t OperationID.jsRepresentation(in:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  swift_bridgeObjectRetain();
  id v6 = a1;
  uint64_t v7 = sub_19F1DD62C();
  id v8 = objc_msgSend(self, sel_valueWithObject_inContext_, v7, v6, a2, a3);
  swift_unknownObjectRelease();

  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a4[4] = result;
  *a4 = v8;
  return result;
}

JSValue __swiftcall OperationID.makeValue(in:)(JSContext in)
{
  uint64_t v8 = v1;
  uint64_t v9 = v2;
  swift_bridgeObjectRetain();
  id v4 = in.super.isa;
  uint64_t v5 = sub_19F1DD62C();
  id v6 = objc_msgSend(self, sel_valueWithObject_inContext_, v5, v4, v8, v9);
  swift_unknownObjectRelease();

  if (v6) {
    return (JSValue)v6;
  }
  __break(1u);
  return result;
}

unint64_t sub_19F162530@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v9 = *v2;
  uint64_t v10 = v2[1];
  swift_bridgeObjectRetain();
  id v5 = a1;
  uint64_t v6 = sub_19F1DD62C();
  id v7 = objc_msgSend(self, sel_valueWithObject_inContext_, v6, v5, v9, v10);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CE88);
  unint64_t result = sub_19EF606C0();
  a2[4] = result;
  *a2 = v7;
  return result;
}

void sub_19F1625F0(void *a1)
{
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1];
  swift_bridgeObjectRetain();
  id v3 = a1;
  uint64_t v4 = sub_19F1DD62C();
  id v5 = objc_msgSend(self, sel_valueWithObject_inContext_, v4, v3, v6, v7);
  swift_unknownObjectRelease();

  if (!v5) {
    __break(1u);
  }
}

uint64_t EmptyActionImplementation.perform(_:asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DBF8);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return v0;
}

_UNKNOWN **sub_19F1626F4()
{
  return &protocol witness table for EmptyAction;
}

uint64_t sub_19F162700()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DBF8);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return v0;
}

uint64_t type metadata accessor for EmptyActionImplementation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t JSONTypeCluster.tryToMakeInstance(ofKind:byDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *a3;
  sub_19EEC3ED8(a2, (uint64_t)v20, (uint64_t *)&unk_1E946FD20);
  uint64_t v12 = v21;
  if (!v21)
  {
    sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E946FD20);
    goto LABEL_5;
  }
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 104))(v12, v13);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  if (v14)
  {
LABEL_5:
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    long long v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
    uint64_t v18 = a6;
    uint64_t v19 = 1;
    return v17(v18, v19, 1, AssociatedTypeWitness);
  }
  v20[0] = v11;
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(a5 + 24))(a1, a2, v20, a4, a5);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  uint64_t v18 = a6;
  uint64_t v19 = 0;
  return v17(v18, v19, 1, AssociatedTypeWitness);
}

uint64_t JSONTypeCluster.makeInstances(ofKind:byDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *a3;
  void v8[2] = a4;
  _OWORD v8[3] = a5;
  v8[5] = a1;
  v8[6] = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return JSONArray.map<A>(_:)((uint64_t)sub_19F162AF0, (uint64_t)v8, AssociatedTypeWitness);
}

uint64_t sub_19F162AF0(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[5];
  uint64_t v7 = v1[6];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t))(v4 + 24))(v5, a1, &v7, v3);
}

uint64_t JSONTypeCluster.tryToMakeInstances(ofKind:byDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *a3;
  void v8[2] = a4;
  _OWORD v8[3] = a5;
  v8[5] = a1;
  v8[6] = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return JSONArray.compactMap<A>(_:)((uint64_t)sub_19F162EE8, (uint64_t)v8, AssociatedTypeWitness);
}

uint64_t sub_19F162BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v27, (uint64_t *)&unk_1E946FD20);
  uint64_t v13 = v28;
  if (!v28)
  {
    sub_19EEBD664((uint64_t)v27, (uint64_t *)&unk_1E946FD20);
    goto LABEL_7;
  }
  uint64_t v30 = a6;
  uint64_t v14 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 104);
  uint64_t v16 = v14;
  a6 = v30;
  char v17 = v15(v13, v16);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  if (v17)
  {
LABEL_7:
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a6, 1, 1, AssociatedTypeWitness);
  }
  v27[0] = a3;
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(a5 + 24))(a2, a1, v27, a4, a5);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, a3, (uint64_t)v27);
    swift_bridgeObjectRelease();
    sub_19EEC3ED8((uint64_t)v27, (uint64_t)v24, qword_1E946D938);
    uint64_t v18 = v25;
    if (v25)
    {
      uint64_t v19 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      uint64_t v20 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v19 + 8))(v20, v6, v18, v19);

      sub_19EEBD664((uint64_t)v27, qword_1E946D938);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    }
    else
    {
      sub_19EEBD664((uint64_t)v27, qword_1E946D938);

      sub_19EEBD664((uint64_t)v24, qword_1E946D938);
      uint64_t v20 = swift_getAssociatedTypeWitness();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  }
  else
  {
    uint64_t v23 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a6, 0, 1, v23);
  }
}

uint64_t sub_19F162EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F162BC8(a1, v2[5], v2[6], v2[2], v2[3], a2);
}

uint64_t dispatch thunk of JSONTypeCluster.makeInstance(ofKind:byDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t *assignWithCopy for JetPackSigningPolicy(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_19EE5A23C(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_19EECDEA8(v5, v6);
  return a1;
}

uint64_t *assignWithTake for JetPackSigningPolicy(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_19EECDEA8(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackSigningPolicy(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if ((~*(void *)(a1 + 8) & 0x3000000000000000) != 0) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for JetPackSigningPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(_OWORD *)unint64_t result = xmmword_19F262940;
    }
  }
  return result;
}

uint64_t sub_19F163044(uint64_t a1)
{
  if (((*(void *)(a1 + 8) >> 60) & 2) != 0) {
    return (*(_DWORD *)a1 + 2);
  }
  else {
    return (*(void *)(a1 + 8) >> 60) & 3;
  }
}

uint64_t sub_19F163064(uint64_t result)
{
  *(void *)(result + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

void *JSBoundReference.__allocating_init(value:ownedBy:)(void *a1, void *a2)
{
  return JSBoundReference.init(value:ownedBy:)(a1, a2);
}

void *JSBoundReference.init(value:ownedBy:)(void *a1, void *a2)
{
  int v3 = v2;
  uint64_t v6 = sub_19F1DB5AC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for JSWeakReference();
  swift_allocObject();
  id v10 = a2;
  id v11 = JSWeakReference.init(_:)(v10);
  if (v11)
  {
    id v12 = v11;
    sub_19F1DB59C();
    uint64_t v13 = sub_19F1DB58C();
    uint64_t v15 = v14;
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v3[2] = v13;
    _OWORD v3[3] = v15;
    void v3[4] = v12;
    swift_retain();
    uint64_t v16 = (void *)sub_19F1DBD4C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F251B70;
    uint64_t v18 = sub_19F1DBD7C();
    uint64_t v19 = MEMORY[0x1E4FBB390];
    *(void *)(inited + 32) = v18;
    *(void *)(inited + 40) = v20;
    *(void *)(inited + 72) = v19;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 80) = sub_19F1DBD7C();
    *(void *)(inited + 88) = v21;
    *(void *)(inited + 120) = v19;
    *(unsigned char *)(inited + 96) = 0;
    *(void *)(inited + 128) = sub_19F1DBD7C();
    *(void *)(inited + 136) = v22;
    *(void *)(inited + 168) = v19;
    *(unsigned char *)(inited + 144) = 1;
    *(void *)(inited + 176) = sub_19F1DBD7C();
    *(void *)(inited + 184) = v23;
    *(void *)(inited + 216) = sub_19EE8FF40();
    *(void *)(inited + 192) = a1;
    id v24 = a1;
    sub_19EEBF898(inited);
    uint64_t v25 = (void *)sub_19F1DBB1C();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_defineProperty_descriptor_, v16, v25);
    swift_release();
  }
  else
  {

    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t JSBoundReference.deinit()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t Object = JSWeakGetObject();
  if (Object)
  {
    id v3 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, Object, *(void *)(v1 + 16));
    if (v3)
    {
      unint64_t v4 = v3;
      uint64_t v5 = (void *)sub_19F1DBD4C();
      objc_msgSend(v4, sel_deleteProperty_, v5);
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

id JSBoundReference.owner.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  id result = (id)JSWeakGetObject();
  if (result) {
    return objc_msgSend(self, sel_valueWithJSValueRef_inContext_, result, *(void *)(v1 + 16));
  }
  return result;
}

uint64_t JSBoundReference.__deallocating_deinit()
{
  JSBoundReference.deinit();
  return swift_deallocClassInstance();
}

void JSBoundReference.referent.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t Object = JSWeakGetObject();
  if (Object)
  {
    id v3 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, Object, *(void *)(v1 + 16));
    if (v3)
    {
      unint64_t v4 = v3;
      uint64_t v5 = (void *)sub_19F1DBD4C();
      id v6 = objc_msgSend(v4, sel_valueForProperty_, v5);

      if (v6) {
      else
      }
        __break(1u);
    }
  }
}

void sub_19F163560()
{
}

uint64_t type metadata accessor for JSBoundReference()
{
  return self;
}

uint64_t method lookup function for JSBoundReference(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for JSBoundReference);
}

uint64_t dispatch thunk of JSBoundReference.__allocating_init(value:ownedBy:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

id sub_19F163758(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t (*a7)(void *, id, id, id, id, id))
{
  uint64_t v13 = self;
  id v14 = a3;
  id v15 = a4;
  id v16 = a5;
  id v17 = a6;
  id v18 = a1;
  id v19 = objc_msgSend(v13, sel_currentContext);
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = v14;
    id v22 = v15;
    id v23 = v16;
    id v24 = v17;
    id v25 = v18;
    uint64_t v26 = (void *)a7(v20, v21, v22, v23, v24, v25);

    return v26;
  }
  else
  {
    id result = (id)sub_19F1DCFCC();
    __break(1u);
  }
  return result;
}

void sub_19F163BD4(void *a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v48 = a5;
  id v49 = a1;
  id v50 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v45 - v11;
  uint64_t v13 = sub_19F1DB57C();
  uint64_t v53 = *(void *)(v13 - 8);
  double v14 = MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a2, sel_isString, v14)
    || (id v17 = objc_msgSend(a2, sel_toString)) == 0)
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v25 = v24;
    id v26 = a2;
    uint64_t v27 = v25;
LABEL_11:
    JSError.init(badValue:expected:)(v26, v27);
    swift_willThrow();
    return;
  }
  id v18 = v17;
  uint64_t v46 = sub_19F1DBD7C();
  uint64_t v20 = v19;

  if ((objc_msgSend(a3, sel_isDate) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v12, 1, 1, v13);
LABEL_10:
    swift_bridgeObjectRelease();
    sub_19EF87C64((uint64_t)v12);
    sub_19EF600C0();
    swift_allocError();
    uint64_t v29 = v28;
    id v26 = a3;
    uint64_t v27 = v29;
    goto LABEL_11;
  }
  uint64_t v47 = v20;
  id v21 = objc_msgSend(a3, sel_toDate);
  uint64_t v22 = v53;
  if (v21)
  {
    id v23 = v21;
    sub_19F1DB54C();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v9, 0, 1, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v9, 1, 1, v13);
  }
  sub_19EF5F380((uint64_t)v9, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v13) == 1) {
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v12, v13);
  id v30 = v50;
  if (objc_msgSend(v50, sel_isString)
    && (id v31 = objc_msgSend(v30, sel_toString)) != 0)
  {
    uint64_t v32 = v31;
    uint64_t v33 = sub_19F1DBD7C();
    uint64_t v35 = v34;

    uint64_t v36 = *(void *)(v48 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
    uint64_t v37 = *(void *)(v48 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 40);
    __swift_project_boxed_opaque_existential_1((void *)(v48 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), v36);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 128))(v46, v47, v16, v33, v35, v36, v37);
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v38;
    uint64_t v52 = v40;
    id v41 = v49;
    uint64_t v42 = sub_19F1DD62C();
    id v43 = objc_msgSend(self, sel_valueWithObject_inContext_, v42, v41);
    swift_unknownObjectRelease();

    if (v43) {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v13);
    }
    else {
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(v30, v44);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v13);
  }
}

id sub_19F1640A8(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t (*a6)(void *, id, id, id, id))
{
  uint64_t v11 = self;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a1;
  id v16 = objc_msgSend(v11, sel_currentContext);
  if (v16)
  {
    id v17 = v16;
    id v18 = v12;
    id v19 = v13;
    id v20 = v14;
    id v21 = v15;
    uint64_t v22 = (void *)a6(v17, v18, v19, v20, v21);

    return v22;
  }
  else
  {
    id result = (id)sub_19F1DCFCC();
    __break(1u);
  }
  return result;
}

void sub_19F164204(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v28 - v10;
  uint64_t v12 = sub_19F1DB57C();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  id v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a2, sel_isDate, v14))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_7:
    sub_19EF87C64((uint64_t)v11);
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(a2, v20);
    swift_willThrow();
    return;
  }
  uint64_t v29 = a3;
  id v17 = a1;
  id v18 = objc_msgSend(a2, sel_toDate);
  if (v18)
  {
    id v19 = v18;
    sub_19F1DB54C();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v8, 1, 1, v12);
  }
  sub_19EF5F380((uint64_t)v8, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    goto LABEL_7;
  }
  id v21 = v17;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
  uint64_t v22 = *(void *)(v29 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
  uint64_t v23 = *(void *)(v29 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v29 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), v22);
  LOBYTE(v28[0]) = 0;
  v28[0] = (*(uint64_t (**)(char *, void *, uint64_t, uint64_t))(v23 + 136))(v16, v28, v22, v23);
  v28[1] = v24;
  id v25 = v21;
  uint64_t v26 = sub_19F1DD62C();
  id v27 = objc_msgSend(self, sel_valueWithObject_inContext_, v26, v25);
  swift_unknownObjectRelease();

  if (v27) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  else {
    __break(1u);
  }
}

id sub_19F164568(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(void *, id, id))
{
  uint64_t v7 = self;
  id v8 = a3;
  id v9 = a1;
  id v10 = objc_msgSend(v7, sel_currentContext);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = v8;
    id v13 = v9;
    double v14 = (void *)a4(v11, v12, v13);

    return v14;
  }
  else
  {
    id result = (id)sub_19F1DCFCC();
    __break(1u);
  }
  return result;
}

unint64_t sub_19F1646BC(void *a1)
{
  if ((objc_msgSend(a1, sel_isNull) & 1) != 0
    || (objc_msgSend(a1, sel_isUndefined) & 1) != 0)
  {
    return 0;
  }
  id v4 = objc_msgSend(a1, sel_toDictionary);
  if (!v4
    || (v5 = v4, uint64_t v6 = sub_19F1DBB3C(), v5, v2 = sub_19F031F14(v6), swift_bridgeObjectRelease(), !v2))
  {
    sub_19EF600C0();
    swift_allocError();
    unint64_t v2 = v7;
    JSError.init(badValue:expected:)(a1, v7);
    swift_willThrow();
  }
  return v2;
}

void sub_19F1647CC(void *a1, id a2, void *a3, uint64_t a4, void *a5)
{
  if (objc_msgSend(a2, sel_isString)
    && (id v11 = objc_msgSend(a2, sel_toString)) != 0)
  {
    id v12 = v11;
    uint64_t v13 = sub_19F1DBD7C();
    uint64_t v15 = v14;

    unint64_t v16 = sub_19F1646BC(a3);
    if (v5)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v18 = v16;
      uint64_t v32 = v13;
      __swift_project_boxed_opaque_existential_1((void *)(a4 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), *(void *)(a4 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24));
      if ((objc_msgSend(a5, sel_isString) & 1) != 0
        && (id v19 = objc_msgSend(a5, sel_toString)) != 0)
      {
        uint64_t v20 = v19;
        uint64_t v21 = v15;
        uint64_t v22 = sub_19F1DBD7C();
        uint64_t v24 = v23;
      }
      else
      {
        uint64_t v21 = v15;
        uint64_t v22 = 0;
        uint64_t v24 = 0;
      }
      LOBYTE(v31[0]) = 0;
      uint64_t v25 = sub_19EEC4410(v32, v21, v18, v22, v24, v31);
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v31[0] = v25;
      v31[1] = v27;
      id v28 = a1;
      uint64_t v29 = sub_19F1DD62C();
      id v30 = objc_msgSend(self, sel_valueWithObject_inContext_, v29, v28);
      swift_unknownObjectRelease();

      if (!v30) {
        __break(1u);
      }
    }
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(a2, v17);
    swift_willThrow();
  }
}

void sub_19F1649F4(void *a1, id a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  if (!objc_msgSend(a2, sel_isNumber)
    || (id v12 = objc_msgSend(a2, sel_toNumber)) == 0)
  {
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(a2, v15);
    swift_willThrow();
    return;
  }
  id v42 = v12;
  id v13 = objc_msgSend(a3, sel_isUndefined);
  if (v13)
  {
    uint64_t v14 = 0;
  }
  else
  {
    if ((objc_msgSend(a3, sel_isNumber) & 1) == 0)
    {
      sub_19EF600C0();
      swift_allocError();
      uint64_t v37 = v36;
      id v34 = a3;
LABEL_22:
      uint64_t v35 = v37;
      goto LABEL_23;
    }
    uint64_t v14 = (int)objc_msgSend(a3, sel_toInt32);
  }
  unsigned int v40 = objc_msgSend(a4, sel_isUndefined);
  if (v40)
  {
    uint64_t v16 = 0;
    goto LABEL_12;
  }
  if ((objc_msgSend(a4, sel_isNumber) & 1) == 0)
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v37 = v38;
    id v34 = a4;
    goto LABEL_22;
  }
  uint64_t v16 = (int)objc_msgSend(a4, sel_toInt32);
LABEL_12:
  uint64_t v17 = v14;
  if ((objc_msgSend(a5, sel_isUndefined) & 1) == 0)
  {
    if (objc_msgSend(a5, sel_isString))
    {
      id v27 = objc_msgSend(a5, sel_toString);
      if (v27)
      {
        id v28 = v27;
        uint64_t v29 = sub_19F1DBD7C();
        rawValue = v30;

        v31._uint64_t countAndFlagsBits = v29;
        v31._uint64_t object = rawValue;
        LocalizerContext.init(rawValue:)(v31);
        char v18 = v41[0];
        if (LOBYTE(v41[0]) != 6) {
          goto LABEL_14;
        }
      }
    }
    sub_19EF600C0();
    swift_allocError();
    uint64_t v33 = v32;
    id v34 = a5;
    uint64_t v35 = v33;
LABEL_23:
    JSError.init(badValue:expected:)(v34, v35);
    swift_willThrow();

    return;
  }
  char v18 = 0;
LABEL_14:
  id v19 = (void *)(a6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  uint64_t v20 = *(void *)(a6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
  uint64_t v21 = v19[5];
  __swift_project_boxed_opaque_existential_1(v19, v20);
  LOBYTE(v41[0]) = v18;
  id v22 = v42;
  v41[0] = (*(uint64_t (**)(id, uint64_t, id, uint64_t, void, void *, uint64_t, uint64_t))(v21 + 64))(v42, v17, v13, v16, v40, v41, v20, v21);
  v41[1] = v23;
  id v24 = a1;
  uint64_t v25 = sub_19F1DD62C();
  id v26 = objc_msgSend(self, sel_valueWithObject_inContext_, v25, v24);
  swift_unknownObjectRelease();

  if (v26) {
  else
  }
    __break(1u);
}

void sub_19F164D5C(void *a1, id a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  if (!objc_msgSend(a2, sel_isNumber)
    || (id v12 = objc_msgSend(a2, sel_toNumber)) == 0)
  {
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(a2, v15);
    swift_willThrow();
    return;
  }
  id v42 = v12;
  id v13 = objc_msgSend(a3, sel_isUndefined);
  if (v13)
  {
    uint64_t v14 = 0;
  }
  else
  {
    if ((objc_msgSend(a3, sel_isNumber) & 1) == 0)
    {
      sub_19EF600C0();
      swift_allocError();
      uint64_t v37 = v36;
      id v34 = a3;
LABEL_22:
      uint64_t v35 = v37;
      goto LABEL_23;
    }
    uint64_t v14 = (int)objc_msgSend(a3, sel_toInt32);
  }
  unsigned int v40 = objc_msgSend(a4, sel_isUndefined);
  if (v40)
  {
    uint64_t v16 = 0;
    goto LABEL_12;
  }
  if ((objc_msgSend(a4, sel_isNumber) & 1) == 0)
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v37 = v38;
    id v34 = a4;
    goto LABEL_22;
  }
  uint64_t v16 = (int)objc_msgSend(a4, sel_toInt32);
LABEL_12:
  uint64_t v17 = v14;
  if ((objc_msgSend(a5, sel_isUndefined) & 1) == 0)
  {
    if (objc_msgSend(a5, sel_isString))
    {
      id v27 = objc_msgSend(a5, sel_toString);
      if (v27)
      {
        id v28 = v27;
        uint64_t v29 = sub_19F1DBD7C();
        rawValue = v30;

        v31._uint64_t countAndFlagsBits = v29;
        v31._uint64_t object = rawValue;
        LocalizerContext.init(rawValue:)(v31);
        char v18 = v41[0];
        if (LOBYTE(v41[0]) != 6) {
          goto LABEL_14;
        }
      }
    }
    sub_19EF600C0();
    swift_allocError();
    uint64_t v33 = v32;
    id v34 = a5;
    uint64_t v35 = v33;
LABEL_23:
    JSError.init(badValue:expected:)(v34, v35);
    swift_willThrow();

    return;
  }
  char v18 = 0;
LABEL_14:
  id v19 = (void *)(a6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  uint64_t v20 = *(void *)(a6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
  uint64_t v21 = v19[5];
  __swift_project_boxed_opaque_existential_1(v19, v20);
  LOBYTE(v41[0]) = v18;
  id v22 = v42;
  v41[0] = (*(uint64_t (**)(id, uint64_t, id, uint64_t, void, void *, uint64_t, uint64_t))(v21 + 72))(v42, v17, v13, v16, v40, v41, v20, v21);
  v41[1] = v23;
  id v24 = a1;
  uint64_t v25 = sub_19F1DD62C();
  id v26 = objc_msgSend(self, sel_valueWithObject_inContext_, v25, v24);
  swift_unknownObjectRelease();

  if (v26) {
  else
  }
    __break(1u);
}

id sub_19F1650C4(void *a1, id a2, id a3, uint64_t a4)
{
  id v6 = a2;
  if ((objc_msgSend(a2, sel_isNumber) & 1) == 0) {
    goto LABEL_6;
  }
  signed int v8 = objc_msgSend(v6, sel_toInt32);
  if (objc_msgSend(a3, sel_isUndefined))
  {
    char v9 = 0;
  }
  else
  {
    if ((objc_msgSend(a3, sel_isString) & 1) == 0) {
      goto LABEL_10;
    }
    id v19 = objc_msgSend(a3, sel_toString);
    if (!v19) {
      goto LABEL_10;
    }
    uint64_t v20 = v19;
    uint64_t v21 = sub_19F1DBD7C();
    uint64_t v23 = v22;

    v24._uint64_t countAndFlagsBits = v21;
    v24._uint64_t object = v23;
    LocalizerContext.init(rawValue:)(v24);
    char v9 = v28[0];
    if (LOBYTE(v28[0]) == 6)
    {
LABEL_10:
      sub_19EF600C0();
      swift_allocError();
      uint64_t v26 = v25;
      id v17 = a3;
      uint64_t v18 = v26;
      goto LABEL_11;
    }
  }
  uint64_t v10 = v8;
  id v11 = (void *)(a4 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  uint64_t v12 = *(void *)(a4 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
  id v6 = (id)v11[5];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  LOBYTE(v28[0]) = v9;
  v28[0] = (*((uint64_t (**)(uint64_t, void *, uint64_t, id))v6 + 10))(v10, v28, v12, v6);
  v28[1] = v13;
  id v14 = a1;
  uint64_t v15 = sub_19F1DD62C();
  a3 = objc_msgSend(self, sel_valueWithObject_inContext_, v15, v14);
  swift_unknownObjectRelease();

  if (!a3)
  {
    __break(1u);
LABEL_6:
    sub_19EF600C0();
    swift_allocError();
    a3 = v16;
    id v17 = v6;
    uint64_t v18 = (uint64_t)a3;
LABEL_11:
    JSError.init(badValue:expected:)(v17, v18);
    swift_willThrow();
  }
  return a3;
}

void sub_19F165300(void *a1, id a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v41 = a1;
  if (objc_msgSend(a2, sel_isString)
    && (id v11 = objc_msgSend(a2, sel_toString)) != 0
    || objc_msgSend(a3, sel_isString)
    && (id v11 = objc_msgSend(a3, sel_toString)) != 0)
  {
    uint64_t v12 = sub_19F1DBD7C();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  unsigned __int8 v15 = objc_msgSend(a3, sel_isNumber);
  id v16 = a3;
  if ((v15 & 1) == 0)
  {
    if (!objc_msgSend(a2, sel_isNumber))
    {
      if (v14)
      {
        swift_bridgeObjectRelease();
        sub_19EF600C0();
        swift_allocError();
        uint64_t v21 = v20;
        id v22 = a2;
        uint64_t v23 = v21;
LABEL_16:
        JSError.init(badValue:expected:)(v22, v23);
        swift_willThrow();
        return;
      }
LABEL_15:
      sub_19EF600C0();
      swift_allocError();
      uint64_t v25 = v24;
      id v22 = a3;
      uint64_t v23 = v25;
      goto LABEL_16;
    }
    id v16 = a2;
  }
  unsigned int v17 = objc_msgSend(v16, sel_toInt32);
  if (!v14) {
    goto LABEL_15;
  }
  signed int v18 = v17;
  unint64_t v19 = sub_19F1646BC(a4);
  if (v6)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v26 = v19;
    __swift_project_boxed_opaque_existential_1((void *)(a5 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), *(void *)(a5 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24));
    uint64_t v38 = v18;
    if ((objc_msgSend(a6, sel_isString) & 1) != 0
      && (id v27 = objc_msgSend(a6, sel_toString, v18)) != 0)
    {
      id v28 = v27;
      uint64_t v29 = sub_19F1DBD7C();
      uint64_t v31 = v30;
    }
    else
    {
      uint64_t v29 = 0;
      uint64_t v31 = 0;
    }
    LOBYTE(v40[0]) = 0;
    uint64_t v32 = sub_19EE8E8DC(v38, v12, v14, v26, v29, v31, (char *)v40);
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40[0] = v32;
    v40[1] = v34;
    id v35 = v41;
    uint64_t v36 = sub_19F1DD62C();
    id v37 = objc_msgSend(self, sel_valueWithObject_inContext_, v36, v35);
    swift_unknownObjectRelease();

    if (!v37) {
      __break(1u);
    }
  }
}

void sub_19F165608(void *a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v50 = a5;
  id v51 = a1;
  id v52 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v7 - 8);
  char v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v47 - v11;
  uint64_t v13 = sub_19F1DB57C();
  uint64_t v54 = *(void *)(v13 - 8);
  double v14 = MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a2, sel_isString, v14)
    || (id v17 = objc_msgSend(a2, sel_toString)) == 0)
  {
    sub_19EF600C0();
    swift_allocError();
    uint64_t v25 = v24;
    id v26 = a2;
    uint64_t v27 = v25;
LABEL_11:
    JSError.init(badValue:expected:)(v26, v27);
    swift_willThrow();
    return;
  }
  signed int v18 = v17;
  uint64_t v48 = sub_19F1DBD7C();
  uint64_t v20 = v19;

  if ((objc_msgSend(a3, sel_isDate) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v12, 1, 1, v13);
LABEL_10:
    swift_bridgeObjectRelease();
    sub_19EF87C64((uint64_t)v12);
    sub_19EF600C0();
    swift_allocError();
    uint64_t v29 = v28;
    id v26 = a3;
    uint64_t v27 = v29;
    goto LABEL_11;
  }
  uint64_t v49 = v20;
  id v21 = objc_msgSend(a3, sel_toDate);
  uint64_t v22 = v54;
  if (v21)
  {
    uint64_t v23 = v21;
    sub_19F1DB54C();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v9, 0, 1, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v9, 1, 1, v13);
  }
  sub_19EF5F380((uint64_t)v9, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v13) == 1) {
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v12, v13);
  id v30 = v52;
  if (objc_msgSend(v52, sel_isUndefined))
  {
    char v31 = 0;
  }
  else
  {
    if ((objc_msgSend(v30, sel_isString) & 1) == 0) {
      goto LABEL_19;
    }
    id v40 = objc_msgSend(v30, sel_toString);
    if (!v40) {
      goto LABEL_19;
    }
    id v41 = v40;
    uint64_t v42 = sub_19F1DBD7C();
    uint64_t v44 = v43;

    v45._uint64_t countAndFlagsBits = v42;
    uint64_t v22 = v54;
    v45._uint64_t object = v44;
    LocalizerContext.init(rawValue:)(v45);
    char v31 = v53[0];
    if (LOBYTE(v53[0]) == 6)
    {
LABEL_19:
      sub_19EF600C0();
      swift_allocError();
      JSError.init(badValue:expected:)(v30, v46);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v13);
      swift_bridgeObjectRelease();
      return;
    }
  }
  uint64_t v32 = *(void *)(v50 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
  uint64_t v33 = *(void *)(v50 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v50 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), v32);
  LOBYTE(v53[0]) = v31;
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t, char *, void *, uint64_t, uint64_t))(v33 + 120))(v48, v49, v16, v53, v32, v33);
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  v53[0] = v34;
  v53[1] = v36;
  id v37 = v51;
  uint64_t v38 = sub_19F1DD62C();
  id v39 = objc_msgSend(self, sel_valueWithObject_inContext_, v38, v37);
  swift_unknownObjectRelease();

  if (v39) {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v13);
  }
  else {
    __break(1u);
  }
}

uint64_t DiscardOnError.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t static DiscardOnError<A>.== infix(_:_:)()
{
  return sub_19F1DBD3C() & 1;
}

uint64_t DiscardOnError.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DiscardOnError.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DiscardOnError.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t DiscardOnError.description.getter()
{
  return 0;
}

uint64_t DiscardOnError<A>.init()()
{
  return sub_19F1DD2FC();
}

uint64_t sub_19F165C50()
{
  return static DiscardOnError<A>.== infix(_:_:)();
}

uint64_t DiscardOnError<A>.hash(into:)()
{
  return sub_19F1DBC9C();
}

uint64_t DiscardOnError<A>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F165CBC()
{
  return DiscardOnError<A>.hashValue.getter();
}

uint64_t sub_19F165CC4()
{
  return DiscardOnError<A>.hash(into:)();
}

uint64_t sub_19F165CCC()
{
  return sub_19F1DD78C();
}

Swift::Void __swiftcall DiscardOnErrorLogUnsupportedDecoderError()()
{
  if (qword_1E9470220 != -1) {
    swift_once();
  }
  if (objc_msgSend((id)qword_1E9475C88, sel_compareWithValue_andExchangeWithValue_, 0, 1))
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v0 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_19F24DBC0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_19F24EAD0;
    uint64_t v3 = MEMORY[0x1E4FBB1A0];
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = 0xD00000000000004FLL;
    unint64_t v13 = 0x800000019F274250;
    long long v10 = 0u;
    long long v11 = 0u;
    id v4 = v0;
    sub_19EEC3E70((uint64_t)&v12, (uint64_t)&v10);
    *(unsigned char *)(v2 + 64) = 0;
    long long v5 = v11;
    *(_OWORD *)(v2 + 32) = v10;
    *(_OWORD *)(v2 + 48) = v5;
    *(void *)(v1 + 32) = v2;
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
    uint64_t v14 = v3;
    unint64_t v12 = 0xD000000000000051;
    unint64_t v13 = 0x800000019F2742A0;
    long long v10 = 0u;
    long long v11 = 0u;
    sub_19EEC3E70((uint64_t)&v12, (uint64_t)&v10);
    *(unsigned char *)(v6 + 64) = 0;
    long long v7 = v11;
    *(_OWORD *)(v6 + 32) = v10;
    *(_OWORD *)(v6 + 48) = v7;
    *(void *)(v1 + 40) = v6;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_19F24EAD0;
    uint64_t v14 = v3;
    unint64_t v12 = 0xD000000000000048;
    unint64_t v13 = 0x800000019F274300;
    long long v10 = 0u;
    long long v11 = 0u;
    sub_19EEC3E70((uint64_t)&v12, (uint64_t)&v10);
    *(unsigned char *)(v8 + 64) = 0;
    long long v9 = v11;
    *(_OWORD *)(v8 + 32) = v10;
    *(_OWORD *)(v8 + 48) = v9;
    *(void *)(v1 + 48) = v8;
    *(void *)&long long v10 = v4;
    LOBYTE(v12) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v1, (JetEngine::LogMessageLevel)&v12);

    swift_bridgeObjectRelease();
  }
}

uint64_t DiscardOnError<A>.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void))(a3 + 8))(a1, *(void *)(a2 + 16));
}

uint64_t sub_19F165F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DiscardOnError<A>.encode(to:)(a1, a2, *(void *)(a3 - 8));
}

id sub_19F165FAC()
{
  id result = objc_msgSend(objc_allocWithZone((Class)_JEAtomicFlag), sel_initWithInitialValue_, 0);
  qword_1E9475C88 = (uint64_t)result;
  return result;
}

uint64_t sub_19F165FE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F16602C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void PageHistoryFieldProvider.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t PageHistoryFieldProvider.deinit()
{
  swift_release();
  return v0;
}

void sub_19F1661DC(void *a1)
{
}

uint64_t method lookup function for PageHistoryFieldProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PageHistoryFieldProvider);
}

uint64_t sub_19F166218(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_19F09EB6C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9473BF0);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    id v16 = (char *)&v4[4 * a2 + 4];
    if (a1 != a2 || &v4[4 * a1 + 4] >= (void *)&v16[32 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[4 * a1 + 4], v16, 32 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F16638C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_19EE9D7F8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    id v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F1664F8(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_19EE91FA0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    id v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

_OWORD *_isStructurallyEqual(_:to:with:at:)(void *a1, void *a2, unint64_t a3, unint64_t a4)
{
  unint64_t v82 = a4;
  unint64_t v83 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E3C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  int64_t v11 = (char *)&v72 - v10;
  MEMORY[0x1F4188790](v12);
  BOOL v14 = (char *)&v72 - v13;
  uint64_t v15 = sub_19F1DD7FC();
  uint64_t v81 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v72 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v72 - v22;
  sub_19EEBDBA4((uint64_t)a1, (uint64_t)&v84);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E620);
  uint64_t v24 = MEMORY[0x1E4FBC840] + 8;
  if (swift_dynamicCast())
  {
    sub_19EEBB420(&v87, (uint64_t)&v90);
    uint64_t v25 = *((void *)&v91 + 1);
    uint64_t v26 = v92;
    uint64_t v27 = __swift_project_boxed_opaque_existential_1(&v90, *((uint64_t *)&v91 + 1));
    char v28 = sub_19F16775C((uint64_t)v27, (uint64_t)a2, v25, v24, v26);
LABEL_5:
    BOOL v32 = v28;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v90);
    return (_OWORD *)v32;
  }
  *(void *)&long long v89 = 0;
  long long v87 = 0u;
  long long v88 = 0u;
  sub_19EEBD664((uint64_t)&v87, &qword_1E946DEC0);
  sub_19EEBDBA4((uint64_t)a1, (uint64_t)&v84);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DE28);
  if (swift_dynamicCast())
  {
    sub_19EEBB420(&v87, (uint64_t)&v90);
    uint64_t v29 = *((void *)&v91 + 1);
    uint64_t v30 = v92;
    char v31 = __swift_project_boxed_opaque_existential_1(&v90, *((uint64_t *)&v91 + 1));
    char v28 = sub_19F1679F0((uint64_t)v31, (uint64_t)a2, v29, MEMORY[0x1E4FBC840] + 8, v30);
    goto LABEL_5;
  }
  *(void *)&long long v89 = 0;
  long long v87 = 0u;
  long long v88 = 0u;
  sub_19EEBD664((uint64_t)&v87, qword_1E946DE30);
  if (v82 >= v83)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t DynamicType = swift_getDynamicType();
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    return (_OWORD *)(DynamicType == swift_getDynamicType());
  }
  uint64_t v80 = v11;
  sub_19EEBDBA4((uint64_t)a1, (uint64_t)&v90);
  sub_19F1DD7AC();
  sub_19EEBDBA4((uint64_t)a2, (uint64_t)&v90);
  sub_19F1DD7AC();
  uint64_t v34 = sub_19F1DD7BC();
  if (v34 != sub_19F1DD7BC()
    || (sub_19F1DD7EC(),
        uint64_t v79 = sub_19F1DCF9C(),
        swift_release(),
        sub_19F1DD7EC(),
        uint64_t v35 = sub_19F1DCF9C(),
        swift_release(),
        v79 != v35))
  {
    Swift::String v45 = *(void (**)(char *, uint64_t))(v81 + 8);
    v45(v20, v15);
    v45(v23, v15);
    return 0;
  }
  uint64_t v36 = (void *)sub_19F1DD7EC();
  uint64_t v37 = v36[2];
  uint64_t v79 = v36[3];
  uint64_t v73 = v36;
  uint64_t v38 = (void (*)(char *, uint64_t))v36[4];
  uint64_t v78 = v36[5];
  uint64_t ObjectType = (long long *)swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v74 = v37;
  uint64_t v76 = (_OWORD *)sub_19F1DCD3C();
  swift_getObjectType();
  uint64_t v75 = v38;
  uint64_t result = (_OWORD *)sub_19F1DCD3C();
  if (v76 == result)
  {
    LODWORD(v79) = sub_19F1DCD4C();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v39 = v81;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v17, v20, v15);
    if ((v79 & 1) == 0)
    {
      uint64_t v75 = *(void (**)(char *, uint64_t))(v39 + 8);
      v75(v17, v15);
      goto LABEL_19;
    }
    id v40 = (void *)sub_19F1DD7EC();
    uint64_t v41 = v40[2];
    uint64_t v79 = v40[3];
    uint64_t v73 = v40;
    uint64_t v42 = (void (*)(char *, uint64_t))v40[4];
    uint64_t v78 = v40[5];
    uint64_t ObjectType = (long long *)swift_getObjectType();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v74 = v41;
    uint64_t v76 = (_OWORD *)sub_19F1DCD3C();
    swift_getObjectType();
    uint64_t v75 = v42;
    uint64_t result = (_OWORD *)sub_19F1DCD3C();
    if (v76 == result)
    {
      LODWORD(v79) = sub_19F1DCD4C();
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      id v43 = *(void (**)(char *, uint64_t))(v81 + 8);
      v43(v17, v15);
      if (v79)
      {
        v43(v20, v15);
        v43(v23, v15);
        return (_OWORD *)1;
      }
      uint64_t v75 = v43;
LABEL_19:
      sub_19F1DD7DC();
      uint64_t v46 = sub_19F1DD7CC();
      uint64_t v78 = *(void *)(v46 - 8);
      uint64_t v47 = *(uint64_t (**)(char *, uint64_t))(v78 + 48);
      uint64_t v79 = v46;
      int v48 = v47(v14, 1);
      sub_19EEBD664((uint64_t)v14, &qword_1E946E3C8);
      if (v48 == 1)
      {
        uint64_t v49 = a1[3];
        uint64_t v50 = __swift_project_boxed_opaque_existential_1(a1, v49);
        if (*(void *)(*(void *)(v49 - 8) + 64))
        {
          MEMORY[0x1F4188790](v50);
          *(&v72 - 2) = (uint64_t)v23;
          requirementFailure(_:file:line:)(sub_19F168264, (uint64_t)(&v72 - 4), (uint64_t)"JetEngine/StructuralEquality.swift", 34, 2, 67);
          id v51 = v75;
          v75(v20, v15);
          v51(v23, v15);
          return 0;
        }
        else
        {
          uint64_t v63 = v75;
          v75(v20, v15);
          v63(v23, v15);
          return (_OWORD *)1;
        }
      }
      uint64_t v52 = (uint64_t)v80;
      sub_19F1DD7DC();
      uint64_t v53 = v79;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v47)(v52, 1, v79) != 1)
      {
        uint64_t v54 = (uint64_t)v80;
        sub_19F16826C((uint64_t)v80, (uint64_t)v8);
        uint64_t v55 = v78;
        if ((*(unsigned int (**)(char *, uint64_t))(v78 + 88))(v8, v53) == *MEMORY[0x1E4FBC3F0])
        {
          sub_19EEBDBA4((uint64_t)a1, (uint64_t)&v90);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390A60);
          if (swift_dynamicCast())
          {
            sub_19EEBDBA4((uint64_t)a2, (uint64_t)&v90);
            if (swift_dynamicCast())
            {
              id v56 = objc_allocWithZone(MEMORY[0x1E4F1C9E8]);
              unsigned int v57 = (void *)sub_19F1DBB1C();
              swift_bridgeObjectRelease();
              id v58 = objc_msgSend(v56, sel_initWithDictionary_, v57);

              uint64_t v54 = (uint64_t)v80;
              uint64_t v59 = (void *)sub_19F1DBB1C();
              swift_bridgeObjectRelease();
              unsigned __int8 v60 = objc_msgSend(v58, sel_isEqualToDictionary_, v59);

              uint64_t v61 = v20;
              uint64_t v62 = v75;
              v75(v61, v15);
              if ((v60 & 1) == 0)
              {
LABEL_49:
                v62(v23, v15);
                uint64_t v69 = v54;
LABEL_50:
                sub_19EEBD664(v69, &qword_1E946E3C8);
                return 0;
              }
LABEL_46:
              sub_19EEBD664(v54, &qword_1E946E3C8);
              v62(v23, v15);
              return (_OWORD *)1;
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v71 = v20;
          uint64_t v62 = v75;
          v75(v71, v15);
          goto LABEL_49;
        }
        (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v53);
      }
      sub_19F1DD7EC();
      sub_19F1DD7EC();
      uint64_t v64 = sub_19F1DCF3C();
      swift_release();
      uint64_t v79 = sub_19F1DCF3C();
      swift_release();
      uint64_t v78 = v64;
      sub_19F1DD08C();
      if (*((void *)&v86 + 1))
      {
        uint64_t ObjectType = &v91;
        uint64_t v76 = v94;
        ++v82;
        while (1)
        {
          long long v87 = v84;
          long long v88 = v85;
          long long v89 = v86;
          sub_19F1DD08C();
          if (!*((void *)&v86 + 1)) {
            break;
          }
          long long v93 = v84;
          v94[0] = v85;
          v94[1] = v86;
          long long v90 = v87;
          long long v91 = v88;
          long long v92 = v89;
          long long v65 = v87;
          long long v66 = v84;
          sub_19EEBDC00(ObjectType, &v88);
          long long v84 = v66;
          sub_19EEBDC00(v76, &v85);
          if (*((void *)&v65 + 1))
          {
            if (!*((void *)&v66 + 1) || v65 != v66 && (sub_19F1DD44C() & 1) == 0)
            {
LABEL_42:
              sub_19EEBD664((uint64_t)&v84, &qword_1E9474868);
              sub_19EEBD664((uint64_t)&v87, &qword_1E9474868);
LABEL_43:
              swift_release();
              swift_release();
              __int16 v68 = v75;
              v75(v20, v15);
              v68(v23, v15);
              uint64_t v69 = (uint64_t)v80;
              goto LABEL_50;
            }
          }
          else if (*((void *)&v66 + 1))
          {
            goto LABEL_42;
          }
          char v67 = _isStructurallyEqual(_:to:with:at:)(&v88, &v85, v83, v82);
          sub_19EEBD664((uint64_t)&v84, &qword_1E9474868);
          sub_19EEBD664((uint64_t)&v87, &qword_1E9474868);
          if ((v67 & 1) == 0) {
            goto LABEL_43;
          }
          sub_19F1DD08C();
          if (!*((void *)&v86 + 1)) {
            goto LABEL_45;
          }
        }
        sub_19EEBD664((uint64_t)&v87, &qword_1E9474868);
      }
LABEL_45:
      sub_19EEBD664((uint64_t)&v84, &qword_1E9475C90);
      swift_release();
      swift_release();
      uint64_t v70 = v20;
      uint64_t v62 = v75;
      v75(v70, v15);
      uint64_t v54 = (uint64_t)v80;
      goto LABEL_46;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Array<A>._isEqual(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v31 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v37 = sub_19F1DCAAC();
  uint64_t v33 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v20 = MEMORY[0x19F3C6510](a2, a3, v17);
  uint64_t v35 = a1;
  if (v20 != MEMORY[0x19F3C6510](a1, a3)) {
    return 0;
  }
  uint64_t v38 = a2;
  uint64_t v21 = sub_19F1DC27C();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x19F3C6340](&v39, v21, WitnessTable);
  uint64_t v38 = v39;
  sub_19F1DD01C();
  sub_19F1DCFEC();
  uint64_t v23 = sub_19F1DD00C();
  uint64_t v24 = (void (**)(char *, char *, uint64_t))(v33 + 32);
  uint64_t v33 = TupleTypeMetadata2 - 8;
  uint64_t v34 = v23;
  uint64_t v25 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v31 = a4 + 8;
  uint64_t v32 = a4;
  uint64_t v26 = (void (**)(char *, uint64_t))(v8 + 8);
  while (1)
  {
    uint64_t v27 = v36;
    sub_19F1DCFFC();
    (*v24)(v19, v27, v37);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v19, 1, TupleTypeMetadata2) == 1)break; {
    (*v25)(v13, &v19[*(int *)(TupleTypeMetadata2 + 48)], a3);
    }
    sub_19F1DC2DC();
    char v28 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v10, a3);
    uint64_t v29 = *v26;
    (*v26)(v10, a3);
    v29(v13, a3);
    if ((v28 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_19F16775C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v25[1] = a5;
  uint64_t v8 = sub_19F1DCAAC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v25 - v10;
  MEMORY[0x1F4188790](v12);
  BOOL v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a3 - 8);
  double v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16))(v14, a2, a4, v17);
  int v21 = swift_dynamicCast();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v21)
  {
    v22(v11, 0, 1, a3);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v11, a3);
    char v23 = sub_19F1DBD3C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, a3);
  }
  else
  {
    v22(v11, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_19F1679F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v26[1] = a1;
  uint64_t v9 = sub_19F1DCAAC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v26 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a3 - 8);
  double v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v21 + 16))(v15, a2, a4, v18);
  int v22 = swift_dynamicCast();
  char v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v22)
  {
    v23(v12, 0, 1, a3);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v12, a3);
    char v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 8))(v20, a3, a5);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, a3);
  }
  else
  {
    v23(v12, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_19F167C94()
{
  return 0;
}

uint64_t sub_19F167D30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return Array<A>._isEqual(to:)(*a1, *v3, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

uint64_t Optional<A>._isEqual(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v33 = a3;
  uint64_t v5 = a2;
  uint64_t v35 = a1;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v32 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v31 = (char *)&v31 - v10;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v36 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v16 = *(void *)(TupleTypeMetadata2 - 8);
  double v17 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v21 = (char *)&v31 + *(int *)(v20 + 48) - v18;
  uint64_t v34 = v12;
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v22((char *)&v31 - v18, v4, v5, v17);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v21, v35, v5);
  uint64_t v35 = v7;
  char v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v23(v19, 1, v6) == 1)
  {
    char v24 = 1;
    if (v23(v21, 1, v6) == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v22)(v36, v19, v5);
    if (v23(v21, 1, v6) != 1)
    {
      uint64_t v25 = v35;
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      uint64_t v27 = v31;
      v26(v31, v36, v6);
      char v28 = v32;
      v26(v32, v21, v6);
      char v24 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v28, v6);
      uint64_t v29 = *(void (**)(char *, uint64_t))(v25 + 8);
      v29(v28, v6);
      v29(v27, v6);
LABEL_8:
      uint64_t v16 = v34;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v6);
  }
  char v24 = 0;
  uint64_t v5 = TupleTypeMetadata2;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v5);
  return v24 & 1;
}

uint64_t sub_19F1680C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Optional<A>._isEqual(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t _AsEquatable.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t _AsEquatable.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t static _AsEquatable.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 8))(a2, a3, a4) & 1;
}

uint64_t sub_19F168180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static _AsEquatable.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t _EquatableForJetOnly._equatable.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t sub_19F168264()
{
  return sub_19F167C94();
}

uint64_t sub_19F16826C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of _EquatableForJetOnly._isEqual(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_19F1682E8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_19F168444(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19F16865CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for _AsEquatable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F16869C(unint64_t a1)
{
  unint64_t v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeuint64_t Object = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_19F16B950(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)(v6 + 16) = v8;
      sub_19F1DC17C();
      return v11;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F168780@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19F1687B0(a1, (uint64_t (*)(uint64_t))sub_19F16BA58, a2);
}

uint64_t sub_19F168798@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19F1687B0(a1, (uint64_t (*)(uint64_t))sub_19F16BA80, a2);
}

uint64_t sub_19F1687B0@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = a2(v7);
  }
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8 - 1;
    uint64_t v10 = v7 + 8 * a1;
    uint64_t v12 = *(void *)(v10 + 32);
    uint64_t v11 = v10 + 32;
    *a3 = v12;
    uint64_t v13 = v8 - 1 - a1;
    if (v13 >= 0)
    {
      uint64_t result = (uint64_t)memmove((void *)v11, (const void *)(v11 + 8), 8 * v13);
      *(void *)(v7 + 16) = v9;
      *unint64_t v3 = v7;
      return result;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F168898@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_19F16BA94(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    unint64_t v8 = &v5[5 * a1];
    long long v9 = *((_OWORD *)v8 + 3);
    *(_OWORD *)a2 = *((_OWORD *)v8 + 2);
    *(_OWORD *)(a2 + 16) = v9;
    *(void *)(a2 + 32) = v8[8];
    if ((uint64_t)(v7 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(v8 + 4, v8 + 9, 40 * (v7 - a1));
      void v5[2] = v7;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

id sub_19F16898C(void *a1)
{
  uint64_t v2 = a1;
  id result = objc_msgSend(a1, sel_toString);
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_19F1DBD7C();
    uint64_t v7 = v6;

    unint64_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC9JetEngine14JSNotifyObject_observersByName);
    swift_beginAccess();
    uint64_t v9 = *v8;
    if (*(void *)(v9 + 16) && (unint64_t v10 = sub_19EEBD400(v5, v7), (v11 & 1) != 0))
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        uint64_t v14 = v12 + 32;
        uint64_t v50 = v2;
        while (1)
        {
          sub_19EF960B0(v14, (uint64_t)v58);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
          uint64_t v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = xmmword_19F24EAD0;
          *(void *)(v15 + 56) = sub_19EE8FF40();
          *(void *)(v15 + 32) = v2;
          __swift_project_boxed_opaque_existential_1(v58, v58[3]);
          id v16 = v2;
          v17.super.Class isa = JSReference.unwrap()().super.isa;
          if (v18.super.isa) {
            break;
          }
          Class isa = v17.super.isa;
          id result = [(objc_class *)v17.super.isa context];
          if (!result)
          {
            __break(1u);
            goto LABEL_30;
          }
          uint64_t v35 = result;
          uint64_t v36 = (void *)sub_19F1DC14C();
          id v37 = [isa callWithArguments:v36];

          if (!v37)
          {
            sub_19EF600C0();
            uint64_t v19 = (void *)swift_allocError();
            *(void *)uint64_t v49 = 0xD000000000000017;
            *(void *)(v49 + 8) = 0x800000019F26B680;
            *(void *)(v49 + 16) = 0;
            *(unsigned char *)(v49 + 24) = 1;
            *(void *)(v49 + 32) = 0;
            *(unsigned char *)(v49 + 40) = 1;
            *(_OWORD *)(v49 + 48) = 0u;
            *(_OWORD *)(v49 + 64) = 0u;
            *(_OWORD *)(v49 + 80) = 0u;
            *(void *)(v49 + 96) = 0;
            swift_willThrow();
            swift_bridgeObjectRelease();

            goto LABEL_8;
          }
          id v38 = objc_msgSend(v35, sel_exception);
          if (v38)
          {
            uint64_t v39 = v38;
            objc_msgSend(v35, sel_setException_, 0);
            sub_19EF600C0();
            uint64_t v19 = (void *)swift_allocError();
            uint64_t v41 = v40;
            id v42 = v39;
            JSError.init(_:)(v42, v41);
            swift_willThrow();
            swift_bridgeObjectRelease();

            goto LABEL_8;
          }

          swift_bridgeObjectRelease();
LABEL_23:

          sub_19EE92E78((uint64_t)v58);
          v14 += 40;
          if (!--v13) {
            return (id)swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v19 = v18.super.isa;
LABEL_8:
        if (qword_1E946E1C0 != -1) {
          swift_once();
        }
        uint64_t v20 = (void *)qword_1E9498A98;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_19F24EB80;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_19F24EAD0;
        uint64_t v57 = MEMORY[0x1E4FBB1A0];
        v56[0] = 0xD000000000000028;
        v56[1] = 0x800000019F274440;
        long long v54 = 0u;
        long long v55 = 0u;
        Class isa = v20;
        sub_19EEC3E70((uint64_t)v56, (uint64_t)&v54);
        *(unsigned char *)(v22 + 64) = 0;
        long long v24 = v55;
        *(_OWORD *)(v22 + 32) = v54;
        *(_OWORD *)(v22 + 48) = v24;
        *(void *)(v21 + 32) = v22;
        swift_getErrorValue();
        uint64_t v25 = v52;
        uint64_t v26 = v53;
        uint64_t v57 = v53;
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v56);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(boxed_opaque_existential_2Tm, v25, v26);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_19F24EAD0;
        sub_19EEBCD00((uint64_t)v56, (uint64_t)v51);
        long long v54 = 0u;
        long long v55 = 0u;
        sub_19EEC3E70((uint64_t)v51, (uint64_t)&v54);
        *(unsigned char *)(v28 + 64) = 0;
        long long v29 = v55;
        *(_OWORD *)(v28 + 32) = v54;
        *(_OWORD *)(v28 + 48) = v29;
        *(void *)(v21 + 40) = v28;
        sub_19EEBD664((uint64_t)v56, &qword_1EB393260);
        os_log_type_t v30 = sub_19F1DC7CC();
        if (os_log_type_enabled(isa, v30))
        {
          if (qword_1EB391C98 != -1) {
            swift_once();
          }
          uint64_t v31 = (unsigned char *)(qword_1EB391C90 + 16);
          uint64_t v32 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
          swift_retain();
          os_unfair_lock_lock(v32);
          sub_19EEC4E5C(v31, &v54);
          os_unfair_lock_unlock(v32);
          int v33 = v54;
          swift_release();
          if (v33 == 2) {
            char has_internal_content = os_variant_has_internal_content();
          }
          else {
            char has_internal_content = v33 & 1;
          }
          char v43 = has_internal_content ^ 1;
          uint64_t v44 = swift_allocObject();
          *(unsigned char *)(v44 + 16) = v43;
          *(void *)&long long v54 = v21;
          *((void *)&v54 + 1) = sub_19EE175B0;
          *(void *)&long long v55 = v44;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393220);
          sub_19EEC6824();
          uint64_t v45 = sub_19F1DBCCC();
          uint64_t v47 = v46;
          swift_release();
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393160);
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_19F24EAD0;
          *(void *)(v48 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v48 + 64) = sub_19EEC67D0();
          *(void *)(v48 + 32) = v45;
          *(void *)(v48 + 40) = v47;
          sub_19F1DB7EC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v2 = v50;
        }
        else
        {
          swift_bridgeObjectRelease();
        }

        goto LABEL_23;
      }
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (id)swift_endAccess();
    }
  }
  else
  {
LABEL_30:
    __break(1u);
  }
  return result;
}

uint64_t sub_19F16901C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v43 = type metadata accessor for JSNotifyObject();
  v42[0] = a3;
  uint64_t v8 = type metadata accessor for JSConditionalReference();
  uint64_t v9 = swift_allocObject();
  sub_19EEBDBA4((uint64_t)v42, (uint64_t)&v41);
  sub_19EE8FF40();
  id v10 = a2;
  char v11 = a3;
  if (swift_dynamicCast())
  {

    sub_19F19C844((unint64_t)"JetEngine/JSConditionalReference.swift", 0x26uLL, 2, 0x1AuLL);
  }
  id v12 = objc_msgSend(self, sel_managedValueWithValue_andOwner_, v10, v42[0]);
  if (!v12)
  {
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v13 = v12;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
  *(void *)(v9 + 16) = v13;

  uint64_t v43 = v8;
  uint64_t v44 = &protocol witness table for JSConditionalReference;
  v42[0] = v9;
  JSCallable.init(_:)(v42, (uint64_t)&v45);
  if (!*((void *)&v46 + 1))
  {
    sub_19EEBD664((uint64_t)&v45, &qword_1EB390B68);
    sub_19EF600C0();
    swift_allocError();
    uint64_t v31 = v30;
    JSError.init(badValue:expected:)(v10, v30);
    swift_willThrow();
    return v31;
  }
  v48[0] = v45;
  v48[1] = v46;
  uint64_t v49 = v47;
  id v14 = objc_msgSend(a4, sel_toString);
  if (!v14) {
    goto LABEL_24;
  }
  uint64_t v15 = v14;
  uint64_t v16 = sub_19F1DBD7C();
  uint64_t v18 = v17;

  sub_19EF960B0((uint64_t)v48, (uint64_t)&v45);
  uint64_t v19 = &v11[OBJC_IVAR____TtC9JetEngine14JSNotifyObject_observersByName];
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = *(void **)v19;
  uint64_t v21 = v41;
  *(void *)uint64_t v19 = 0x8000000000000000;
  unint64_t v23 = sub_19EEBD400(v16, v18);
  uint64_t v24 = v21[2];
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
    goto LABEL_22;
  }
  char v27 = v22;
  if (v21[3] >= v26)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_19EFC0B10();
    }
LABEL_13:
    *(void *)uint64_t v19 = v41;
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void **)v19;
    swift_bridgeObjectRetain();
    if ((v27 & 1) == 0)
    {
      sub_19EFBD318(v23, v16, v18, MEMORY[0x1E4FBC860], v32);
      swift_bridgeObjectRetain();
    }
    uint64_t v19 = (char *)v32[7];
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void **)&v19[8 * v23];
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v19[8 * v23] = v21;
    if (v33)
    {
LABEL_16:
      unint64_t v35 = v21[2];
      unint64_t v34 = v21[3];
      if (v35 >= v34 >> 1)
      {
        uint64_t v21 = sub_19F09ECCC((void *)(v34 > 1), v35 + 1, 1, v21);
        *(void *)&v19[8 * v23] = v21;
      }
      void v21[2] = v35 + 1;
      uint64_t v36 = &v21[5 * v35];
      long long v37 = v45;
      long long v38 = v46;
      v36[8] = v47;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      swift_endAccess();
      swift_bridgeObjectRelease();
      id v39 = objc_msgSend(self, sel_valueWithUndefinedInContext_, a1);
      if (v39)
      {
        uint64_t v31 = (uint64_t)v39;
        sub_19EE92E78((uint64_t)v48);
        return v31;
      }
      goto LABEL_25;
    }
LABEL_22:
    uint64_t v21 = sub_19F09ECCC(0, v21[2] + 1, 1, v21);
    *(void *)&v19[8 * v23] = v21;
    goto LABEL_16;
  }
  sub_19EFBB9E4(v26, isUniquelyReferenced_nonNull_native);
  unint64_t v28 = sub_19EEBD400(v16, v18);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

id sub_19F169554(void *a1, uint64_t a2)
{
  id result = objc_msgSend(a1, sel_toString);
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_19F1DBD7C();
    uint64_t v9 = v8;

    id v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC9JetEngine14JSNotifyObject_observersByName);
    swift_beginAccess();
    uint64_t v11 = *v10;
    if (*(void *)(*v10 + 16))
    {
      unint64_t v12 = sub_19EEBD400(v7, v9);
      if (v13)
      {
        uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void *)(v30 + 16);
        if (!v14) {
          return (id)swift_bridgeObjectRelease();
        }
        uint64_t v15 = (void *)(v30 + 32);
        swift_bridgeObjectRetain();
        unint64_t v16 = 0;
        while (1)
        {
          uint64_t v17 = v15[3];
          uint64_t v18 = v15[4];
          __swift_project_boxed_opaque_existential_1(v15, v17);
          uint64_t v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
          if (v19)
          {
            uint64_t v20 = v19;
            unsigned __int8 v21 = objc_msgSend(v19, sel_isEqualToObject_, a2);

            if (v21) {
              break;
            }
          }
          ++v16;
          v15 += 5;
          if (v14 == v16) {
            return (id)swift_bridgeObjectRelease_n();
          }
        }
        swift_bridgeObjectRelease();
        sub_19F168898(v16, (uint64_t)v29);
        sub_19EE92E78((uint64_t)v29);
        id result = objc_msgSend(a1, sel_toString);
        if (!result) {
          goto LABEL_16;
        }
        char v22 = result;
        uint64_t v23 = sub_19F1DBD7C();
        uint64_t v25 = v24;

        uint64_t v26 = v30;
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v28 = *v10;
        *id v10 = 0x8000000000000000;
        sub_19EFBCE98(v26, v23, v25, isUniquelyReferenced_nonNull_native);
        *id v10 = v28;
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    return (id)swift_endAccess();
  }
  else
  {
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_19F16987C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t DeferredLazy.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DeferredLazy.init()();
  return v0;
}

uint64_t DeferredLazy.value(or:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DeferredLazy.value(or:)(a1, a2, a3);
}

{
  void *v3;
  uint64_t v5;

  return sub_19F169B38((char *)(v3[2] + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3[2] + 16)), v3[2] + ((*(unsigned int *)(*(void *)v3[2] + 48) + 3) & 0x1FFFFFFFCLL), a1, a2, *(void *)(*v3 + 80), &v5, a3);
}

uint64_t DeferredLazy.valueIfLoaded.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19F169A04(*(void *)(v1 + 16) + *(void *)(*MEMORY[0x1E4FBBAB0] + **(void **)(v1 + 16) + 16), a1);
}

Swift::Void __swiftcall DeferredLazy.removeValue()()
{
  sub_19F169DB4(v0[2] + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v0[2] + 16), v0[2] + ((*(unsigned int *)(*(void *)v0[2] + 48) + 3) & 0x1FFFFFFFCLL), *(void *)(*v0 + 80));
}

uint64_t sub_19F169A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v4 = sub_19F1DCAAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return os_unfair_recursive_lock_unlock();
}

uint64_t sub_19F169B38@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v25 = a6;
  uint64_t v26 = a4;
  char v27 = a3;
  uint64_t v28 = a7;
  uint64_t v11 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  char v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_19F1DCAAC();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v23 - v16;
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v24 = a1;
  v18(v17, a1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, a5) == 1)
  {
    v23[1] = a2;
    uint64_t v19 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    uint64_t v20 = v19(v17, v14);
    v27(v20);
    if (v7)
    {
      uint64_t result = os_unfair_recursive_lock_unlock();
      *uint64_t v25 = v7;
      return result;
    }
    char v22 = v24;
    v19(v24, v14);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v22, v13, a5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, a5);
  }
  else
  {
    char v13 = v17;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v28, v13, a5);
  return os_unfair_recursive_lock_unlock();
}

uint64_t sub_19F169DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_19F1DCAAC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - v7;
  os_unfair_recursive_lock_lock_with_options();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(v8, 1, 1, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(a1, v8, v5);
  return os_unfair_recursive_lock_unlock();
}

uint64_t DeferredLazy.deinit()
{
  swift_release();
  return v0;
}

uint64_t DeferredLazy.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for DeferredLazy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DeferredLazy);
}

uint64_t dispatch thunk of DeferredLazy.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_19F169F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946E118);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  uint64_t v10 = sub_19F1DD3FC();
  if (v10)
  {
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
  }
  else
  {
    uint64_t v11 = swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v12, v8, a2);
  }
  *(void *)(v9 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E0F0);
  *(void *)(v9 + 64) = sub_19EEA5E10(&qword_1E946E0E8, &qword_1E946E0F0);
  *(void *)(v9 + 32) = v11;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v9;
  return result;
}

unint64_t _ErrorTraverser.Iterator.next()()
{
  uint64_t v4 = (void *)*v0;
  if (!*(void *)(*v0 + 16)) {
    return 0;
  }
  uint64_t v5 = v0;
  while (1)
  {
    unint64_t v6 = v4[2];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v5 = v4;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (!v6) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v4 = sub_19F16B368(v4);
      *uint64_t v5 = v4;
      if (!v6)
      {
LABEL_11:
        __break(1u);
        return 0;
      }
    }
    unint64_t v8 = v4[2];
    if (v6 > v8)
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    unint64_t v3 = (unint64_t)(v4 + 4);
    uint64_t v9 = (uint64_t)&v4[5 * v6 - 1];
    uint64_t v1 = *(void *)(v9 + 24);
    int64_t v2 = *(void *)(v9 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v9, v1);
    sub_19F1DCB2C();
    *uint64_t v5 = v4;
    unint64_t v6 = v13;
    if ((void)v13) {
      break;
    }
    unint64_t v8 = v4[2];
    if (!v8) {
      goto LABEL_19;
    }
    *uint64_t v5 = v4;
    unint64_t v6 = v8 - 1;
    __swift_destroy_boxed_opaque_existential_1Tm(v3 + 40 * (v8 - 1));
    v4[2] = v6;
    *uint64_t v5 = v4;
    if (!v6) {
      return v6;
    }
  }
  uint64_t v10 = (void *)sub_19F1DB18C();
  id v11 = objc_msgSend(v10, sel_underlyingErrors);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  uint64_t v1 = sub_19F1DC16C();

  if (*(void *)(v1 + 16))
  {
    unint64_t v3 = v4[2];
    unint64_t v8 = v4[3];
    int64_t v2 = v3 + 1;
    if (v3 < v8 >> 1)
    {
LABEL_15:
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946E100);
      uint64_t v15 = sub_19EEA5E10(&qword_1E946E0F8, (uint64_t *)&unk_1E946E100);
      long long v13 = (unint64_t)v1;
      v4[2] = v2;
      sub_19EEBB420(&v13, (uint64_t)&v4[5 * v3 + 4]);
      *uint64_t v5 = v4;
      return v6;
    }
LABEL_20:
    uint64_t v4 = sub_19F09D3A0((void *)(v8 > 1), v2, 1, v4);
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_19F16A314@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = _ErrorTraverser.Iterator.next()();
  *a1 = result;
  return result;
}

uint64_t _ErrorTraverser.init(startingWith:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t _ErrorTraverser.allSatisfy(_:)(_OWORD *a1, uint64_t a2)
{
  return sub_19F16A3F8(a1, a2, (uint64_t)sub_19F16B37C, MEMORY[0x1E4FBB250]);
}

uint64_t _ErrorPredicate.callAsFunction(_:)()
{
  return (*v0)() & 1;
}

uint64_t _ErrorTraverser.contains(_:)(_OWORD *a1, uint64_t a2)
{
  return sub_19F16A3F8(a1, a2, (uint64_t)sub_19F16B37C, MEMORY[0x1E4FBB288]);
}

uint64_t sub_19F16A3F8(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _OWORD *, uint64_t, uint64_t))
{
  v9[1] = *a1;
  uint64_t WitnessTable = swift_getWitnessTable();
  return a4(a3, v9, a2, WitnessTable) & 1;
}

uint64_t _ErrorTraverser.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  double v4 = MEMORY[0x1F4188790](a1);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v6, v4);
  return sub_19F169F64((uint64_t)v6, v3, a2);
}

uint64_t sub_19F16A540@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _ErrorTraverser.makeIterator()(a1, a2);
  double v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t sub_19F16A5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1179A0(v2, a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
  return v4;
}

uint64_t sub_19F16A610()
{
  uint64_t v0 = sub_19F1DB76C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E110);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24DBC0;
  sub_19F1DB74C();
  sub_19F1DB78C();
  sub_19F16BB4C(&qword_1E946DF80, MEMORY[0x1E4F27DE0]);
  uint64_t v5 = sub_19F1DAF0C();
  uint64_t v7 = v6;
  uint64_t v25 = sub_19F16BB4C(&qword_1E946DF78, MEMORY[0x1E4F27DB8]);
  sub_19F1DC0CC();
  uint64_t v8 = v26;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v5;
  _OWORD v9[3] = v7;
  void v9[4] = v8;
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t v23 = v1 + 8;
  uint64_t v24 = v10;
  v10(v3, v0);
  *(void *)(v4 + 32) = sub_19F16BB94;
  *(void *)(v4 + 40) = v9;
  sub_19F1DB71C();
  uint64_t v11 = sub_19F1DAF0C();
  uint64_t v13 = v12;
  sub_19F1DC0CC();
  uint64_t v14 = v26;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v11;
  _OWORD v15[3] = v13;
  v15[4] = v14;
  uint64_t v16 = v24;
  v24(v3, v0);
  *(void *)(v4 + 48) = sub_19F16BB94;
  *(void *)(v4 + 56) = v15;
  sub_19F1DB73C();
  uint64_t v17 = sub_19F1DAF0C();
  uint64_t v19 = v18;
  sub_19F1DC0CC();
  uint64_t v20 = v26;
  unsigned __int8 v21 = (void *)swift_allocObject();
  void v21[2] = v17;
  void v21[3] = v19;
  void v21[4] = v20;
  uint64_t result = v16(v3, v0);
  *(void *)(v4 + 64) = sub_19F16BB94;
  *(void *)(v4 + 72) = v21;
  qword_1E946DFC0 = v4;
  return result;
}

uint64_t _ErrorPredicate.init<A, B>(domain:code:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t (**a3)()@<X8>)
{
  uint64_t v6 = sub_19F1DAF0C();
  uint64_t v8 = v7;
  sub_19F1DC0CC();
  uint64_t v9 = (uint64_t (*)())swift_allocObject();
  *((void *)v9 + 2) = v6;
  *((void *)v9 + 3) = v8;
  *((void *)v9 + 4) = v11;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  *a3 = sub_19F16B408;
  a3[1] = v9;
  return result;
}

void *sub_19F16A9E8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E110);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_19F24DBC0;
  uint64_t v1 = sub_19F1DBD7C();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v1;
  void v4[3] = v3;
  uint64_t v4[4] = 206;
  *(void *)(v0 + 32) = sub_19F16BB94;
  *(void *)(v0 + 40) = v4;
  uint64_t v5 = sub_19F1DBD7C();
  uint64_t v7 = v6;
  uint64_t result = (void *)swift_allocObject();
  result[2] = v5;
  result[3] = v7;
  result[4] = 1;
  *(void *)(v0 + 48) = sub_19F16BB94;
  *(void *)(v0 + 56) = result;
  *(void *)(v0 + 64) = sub_19F16B0A4;
  *(void *)(v0 + 72) = 0;
  qword_1E946DFD0 = v0;
  return result;
}

uint64_t _ErrorPredicate.init<A>(domain:code:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>)
{
  sub_19F1DC0CC();
  uint64_t v10 = (uint64_t (*)())swift_allocObject();
  *((void *)v10 + 2) = a1;
  *((void *)v10 + 3) = a2;
  *((void *)v10 + 4) = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a3, a4);
  *a5 = sub_19F16BB94;
  a5[1] = v10;
  return result;
}

uint64_t (*_ErrorPredicate.init<A>(type:test:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (**a5)(void *a1)@<X8>))(void *a1)
{
  uint64_t result = (uint64_t (*)(void *))swift_allocObject();
  *((void *)result + 2) = a3;
  *((void *)result + 3) = a4;
  *((void *)result + 4) = a1;
  *((void *)result + 5) = a2;
  *a5 = sub_19F16B44C;
  a5[1] = result;
  return result;
}

uint64_t sub_19F16AC1C()
{
  if (qword_1E946DFC8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E946DFC0;
  if (qword_1E946DFE0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_19EF5D99C(v1);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v0;
  qword_1E946DFA0 = (uint64_t)sub_19F16BB44;
  unk_1E946DFA8 = result;
  return result;
}

uint64_t _ErrorPredicate.init<A>(anyOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t a1)@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_19F16B45C;
  a4[1] = (uint64_t (*)(uint64_t))v10;
  return result;
}

uint64_t static _ErrorPredicate.noConnection.getter@<X0>(void *a1@<X8>)
{
  if (qword_1E946DFB8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1E946DFA8;
  *a1 = qword_1E946DFA0;
  a1[1] = v2;
  return swift_retain();
}

uint64_t (*_ErrorPredicate.init(domain:code:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>))()
{
  uint64_t result = (uint64_t (*)())swift_allocObject();
  *((void *)result + 2) = a1;
  *((void *)result + 3) = a2;
  *((void *)result + 4) = a3;
  *a4 = sub_19F16BB94;
  a4[1] = result;
  return result;
}

uint64_t sub_19F16AEC0()
{
  uint64_t v0 = (void *)sub_19F1DB18C();
  uint64_t v1 = (void *)sub_19F1DBD4C();
  uint64_t IsEqual = AMSErrorIsEqual();

  return IsEqual;
}

uint64_t _ErrorPredicate.init<A>(allOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t a1)@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_19F16B48C;
  a4[1] = (uint64_t (*)(uint64_t))v10;
  return result;
}

uint64_t sub_19F16B008(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v2 - 1;
    uint64_t v6 = a2 + 40;
    do
    {
      uint64_t v7 = v5;
      uint64_t v8 = *(uint64_t (**)(uint64_t))(v6 - 8);
      swift_retain();
      LOBYTE(v2) = v8(a1);
      swift_release();
      if (v2) {
        break;
      }
      uint64_t v5 = v7 - 1;
      v6 += 16;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t sub_19F16B0A4(void *a1)
{
  id v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t result = v4;
    if (v4)
    {
      swift_bridgeObjectRelease();
      return (v3 & 1) == 0;
    }
  }
  return result;
}

uint64_t sub_19F16B114(void *a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_19F1DCAAC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v20 - v9;
  uint64_t v11 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = a1;
  id v15 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  char v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v16)
  {
    v17(v10, 0, 1, a4);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, a4);
    char v18 = a2(v14);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, a4);
  }
  else
  {
    v17(v10, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    char v18 = 0;
  }
  return v18 & 1;
}

void *sub_19F16B32C(void *a1)
{
  return sub_19F09CEF4(0, a1[2], 0, a1);
}

void *sub_19F16B340(void *a1)
{
  return sub_19F09D150(0, a1[2], 0, a1);
}

void *sub_19F16B354(void *a1)
{
  return sub_19F09D38C(0, a1[2], 0, a1);
}

void *sub_19F16B368(void *a1)
{
  return sub_19F09D3A0(0, a1[2], 0, a1);
}

uint64_t sub_19F16B37C(void *a1)
{
  return sub_19F16B398(a1) & 1;
}

uint64_t sub_19F16B398(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1) & 1;
}

uint64_t sub_19F16B3D0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F16B408()
{
  return sub_19F16AEC0();
}

uint64_t sub_19F16B414()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F16B44C(void *a1)
{
  return sub_19F16B114(a1, *(uint64_t (**)(char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16));
}

uint64_t sub_19F16B45C(uint64_t a1)
{
  return sub_19F16B4B8(a1, (uint64_t)sub_19F16BBB4, MEMORY[0x1E4FBB288]);
}

uint64_t sub_19F16B48C(uint64_t a1)
{
  return sub_19F16B4B8(a1, (uint64_t)sub_19F16BAD0, MEMORY[0x1E4FBB250]);
}

uint64_t sub_19F16B4B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void *))
{
  v4[2] = a1;
  return a3(a2, v4) & 1;
}

uint64_t sub_19F16B544()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F16B560(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_19F16B6BC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19F16B8D4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        char v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for _ErrorTraverser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _ErrorTraverser.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for _ErrorPredicate()
{
  return &type metadata for _ErrorPredicate;
}

void *sub_19F16B93C(void *a1)
{
  return sub_19F09D644(0, a1[2], 0, a1);
}

void sub_19F16B950(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_19F1DD03C();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x19F3C7070);
}

void *sub_19F16B9CC(void *a1)
{
  return sub_19F09D97C(0, a1[2], 0, a1);
}

void *sub_19F16B9E0(void *a1)
{
  return sub_19EEA1060(0, a1[2], 0, a1);
}

void *sub_19F16B9F4(void *a1)
{
  return sub_19F09E230(0, a1[2], 0, a1);
}

void *sub_19F16BA08(void *a1)
{
  return sub_19F09E370(0, a1[2], 0, a1);
}

void *sub_19F16BA1C(void *a1)
{
  return sub_19EE9D7F8(0, a1[2], 0, a1);
}

void *sub_19F16BA30(void *a1)
{
  return sub_19F09E4A8(0, a1[2], 0, a1);
}

void *sub_19F16BA44(void *a1)
{
  return sub_19EED8120(0, a1[2], 0, a1);
}

void *sub_19F16BA58(void *a1)
{
  return sub_19F09E970(0, a1[2], 0, a1);
}

void *sub_19F16BA6C(void *a1)
{
  return sub_19F09E984(0, a1[2], 0, a1);
}

void *sub_19F16BA80(void *a1)
{
  return sub_19F09EB44(0, a1[2], 0, a1);
}

void *sub_19F16BA94(void *a1)
{
  return sub_19F09ECCC(0, a1[2], 0, a1);
}

void *sub_19F16BAA8(void *a1)
{
  return sub_19F09EF00(0, a1[2], 0, a1);
}

void *sub_19F16BABC(void *a1)
{
  return sub_19F09EF14(0, a1[2], 0, a1);
}

uint64_t sub_19F16BAD0(uint64_t (**a1)(void))
{
  return (*a1)(*(void *)(v1 + 16)) & 1;
}

uint64_t sub_19F16BB0C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F16BB44(uint64_t a1)
{
  return sub_19F16B008(a1, *(void *)(v1 + 16));
}

uint64_t sub_19F16BB4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19F16BBB4(uint64_t (**a1)(void))
{
  return sub_19F16BAD0(a1) & 1;
}

uint64_t sub_19F16BBD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F178858(a1, *a2, a3);
}

uint64_t sub_19F16BBD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_19F176870(a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F16BC04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F178658(a1, *a2, a3);
}

double sub_19F16BC10@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&double result = sub_19F17A0EC(a1, *a2, a3).n128_u64[0];
  return result;
}

unint64_t sub_19F16BC18@<X0>(uint64_t a1@<X0>, id *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_19F17B848(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

void ExpressibleByJSON<>.init(deserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v7 = sub_19F1DCDCC();
  uint64_t v20 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  BOOL v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unsigned int v12 = (char *)&v19 - v11;
  JSONObject.decode<A>(_:using:)(a3, a2);
  if (v3)
  {
    id v21 = v3;
    id v13 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {

      uint64_t v14 = v20;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v12, v9, v7);
      sub_19EF5B580();
      swift_allocError();
      char v16 = v15;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D900);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_19F24EAD0;
      *(void *)(v17 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v18, v12, v7);
      uint64_t *v16 = a3;
      v16[1] = v17;
      v16[2] &= 0xFFFFFFFFFFFFFF8uLL;
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_19EEC3418(a1);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v7);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_19EEC3418(a1);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
  }
}

unint64_t sub_19F16BEB8@<X0>(uint64_t a1@<X0>, void **a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_19F179EFC(a1, *a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

double sub_19F16BEE4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F179288(a1, *a2, a3);
}

double sub_19F16BEEC@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EECBBB8(a1, *a2, a3);
}

double sub_19F16BEF4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F1796A0(a1, *a2, a3);
}

double sub_19F16BEFC@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EEC64C0(a1, *a2, a3);
}

void sub_19F16BF04(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
}

double sub_19F16BF20@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F179AD0(a1, *a2, a3);
}

double sub_19F16BF28@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F178134(a1, *a2, a3);
}

uint64_t sub_19F16BF30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F177724(a1, *a2, a3);
}

uint64_t sub_19F16BF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_19F178334(a1);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_19F16BF68@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_19F1767AC(a1, a2);
}

double sub_19F16BF70@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F178A54(a1, *a2, a3);
}

unint64_t sub_19F16BF78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_19F179D10(a1, *a2);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5 & 1;
  return result;
}

double sub_19F16BFAC@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __n128 *a3@<X8>)
{
  *(void *)&double result = sub_19F1798A0(a1, *a2, a3).n128_u64[0];
  return result;
}

double sub_19F16BFB4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F17947C(a1, *a2, a3);
}

uint64_t sub_19F16BFBC(uint64_t a1, void *a2)
{
  return sub_19EEC61AC(a1, *a2);
}

uint64_t sub_19F16BFC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F1780B4(a1, *a2, a3);
}

uint64_t sub_19F16BFCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F1774BC(a1, *a2, a3);
}

double sub_19F16BFD4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F1774FC(a1, a2);
}

uint64_t sub_19F16BFDC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19F178530(a1, a2);
}

uint64_t sub_19F16BFE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F1780F4(a1, *a2, a3);
}

void sub_19F16BFEC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_19F16C008@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_19F176C50(a1, *a2, a3);
}

double sub_19F16C010@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&double result = sub_19F177A30(a1, *a2, a3).n128_u64[0];
  return result;
}

uint64_t dispatch thunk of ExpressibleByJSON.init(tryDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_19F16C02C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F179CD0(a1, *a2, a3);
}

double sub_19F16C034@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F178E70(a1, a2);
}

double sub_19F16C03C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F178C48(a1, *a2, a3);
}

double sub_19F16C044@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&double result = sub_19F177E9C(a1, *a2, a3).n128_u64[0];
  return result;
}

double sub_19F16C04C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F177C5C(a1, *a2, a3);
}

double sub_19F16C054@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F179088(a1, *a2, a3);
}

void sub_19F16C05C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
}

double sub_19F16C078@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F176A54(a1, *a2, a3);
}

uint64_t sub_19F16C080@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F177064(a1, *a2, a3);
}

double sub_19F16C088@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&double result = sub_19F177278(a1, *a2, a3).n128_u64[0];
  return result;
}

double sub_19F16C090@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_19F176E40(a1, *a2, a3);
}

uint64_t CookieProvider.init(accountProvider:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EEBB420(a1, a2);
}

ValueMetadata *type metadata accessor for CookieProvider()
{
  return &type metadata for CookieProvider;
}

unsigned char *storeEnumTagSinglePayload for ImpressionsSnapshotMetricsFieldsProvider(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F16C17CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsSnapshotMetricsFieldsProvider()
{
  return &type metadata for ImpressionsSnapshotMetricsFieldsProvider;
}

uint64_t sub_19F16C1B4(uint64_t a1, uint64_t *a2)
{
  *(void *)&long long v32 = a1;
  uint64_t v5 = sub_19F1DB57C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  char v10 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_19EF91884(0xD000000000000026, 0x800000019F26AC20, v9);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t ObjectType = swift_getObjectType();
    LOBYTE(v35[0]) = v10;
    sub_19F1DB56C();
    (*(void (**)(long long *__return_ptr, void *, char *, uint64_t, uint64_t))(v13 + 56))(&v33, v35, v8, ObjectType, v13);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v31 = *((void *)&v33 + 1);
    uint64_t v15 = v33;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
    *((void *)&v34 + 1) = v16;
    *(void *)&long long v33 = v15;
    uint64_t v18 = *(void *)(v32 + 24);
    uint64_t v17 = *(void *)(v32 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v32, v18);
    uint64_t v19 = *(void (**)(long long *, uint64_t, unint64_t, uint64_t, uint64_t))(v17 + 16);
    v35[5] = v15;
    swift_bridgeObjectRetain();
    v19(&v33, 0x6973736572706D69, 0xEB00000000736E6FLL, v18, v17);
    if (!v3)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
      *((void *)&v34 + 1) = v16;
      *(void *)&long long v33 = v31;
      uint64_t v27 = *(void *)(v32 + 24);
      uint64_t v28 = *(void *)(v32 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v32, v27);
      char v29 = *(void (**)(long long *, uint64_t, unint64_t, uint64_t, uint64_t))(v28 + 16);
      swift_bridgeObjectRetain();
      v29(&v33, 0x4363696D616E7964, 0xEE007365676E6168, v27, v28);
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
  }
  else
  {
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v20 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v21 = swift_allocObject();
    long long v32 = xmmword_19F24EAD0;
    *(_OWORD *)(v21 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v22 + 16) = v32;
    void v35[3] = v23;
    v35[0] = 0xD000000000000037;
    v35[1] = 0x800000019F274500;
    long long v33 = 0u;
    long long v34 = 0u;
    id v24 = v20;
    sub_19EEC3E70((uint64_t)v35, (uint64_t)&v33);
    *(unsigned char *)(v22 + 64) = 0;
    long long v25 = v34;
    *(_OWORD *)(v22 + 32) = v33;
    *(_OWORD *)(v22 + 48) = v25;
    *(void *)(v21 + 32) = v22;
    *(void *)&long long v33 = v24;
    LOBYTE(v35[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v21, (JetEngine::LogMessageLevel)v35);

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19F16C55C(uint64_t a1, uint64_t *a2)
{
  return sub_19F16C1B4(a1, a2);
}

uint64_t sub_19F16C574(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DC3CC();
  uint64_t v5 = sub_19F1DCAAC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  uint64_t v8 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v4);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
  return v6(a2, 0, 1, v4);
}

uint64_t sub_19F16C670(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = sub_19F1DC38C();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v6, a1, v3, v9);
  sub_19F1DC3CC();
  sub_19F1DC3BC();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t _AsyncChannel.Receiver.next()(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return MEMORY[0x1F4188298](sub_19F16C85C, 0, 0);
}

uint64_t sub_19F16C85C()
{
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  uint64_t v2 = sub_19F1DC3FC();
  *uint64_t v1 = v0;
  v1[1] = sub_19F16C93C;
  uint64_t v3 = *(void *)(v0 + 40);
  return MEMORY[0x1F4187D60](v3, v2);
}

uint64_t sub_19F16C93C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t _AsyncChannel.Receiver.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = sub_19F1DC3CC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v4 = sub_19F1DC3FC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t _AsyncChannel.Receiver.__deallocating_deinit()
{
  return sub_19F16D558((void (*)(void))_AsyncChannel.Receiver.deinit);
}

uint64_t sub_19F16CB3C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19EE4AA60;
  v5[5] = a1;
  v5[6] = v4;
  v5[7] = *v4;
  return MEMORY[0x1F4188298](sub_19F16C85C, 0, 0);
}

uint64_t static _AsyncChannel.BufferingPolicy.bufferingNewest(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F16CC2C(a1, MEMORY[0x1E4FBD018], a2);
}

uint64_t static _AsyncChannel.BufferingPolicy.bufferingOldest(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F16CC2C(a1, MEMORY[0x1E4FBD020], a2);
}

uint64_t sub_19F16CC2C@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_19F1DC3AC();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v12 - v9;
  *(uint64_t *)((char *)&v12 - v9) = a1;
  (*(void (**)(char *, void, uint64_t, double))(v7 + 104))((char *)&v12 - v9, *a2, v6, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v10, v6);
}

uint64_t static _AsyncChannel.BufferingPolicy.unbounded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_19F1DC3AC();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  (*(void (**)(char *, void, uint64_t, double))(v3 + 104))((char *)&v8 - v5, *MEMORY[0x1E4FBD028], v2, v4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v6, v2);
}

void *_AsyncChannel.__allocating_init(bufferingPolicy:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_19F16DA74(a1);
  uint64_t v3 = type metadata accessor for _AsyncChannel.BufferingPolicy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return v2;
}

void *_AsyncChannel.init(bufferingPolicy:)(uint64_t a1)
{
  uint64_t v2 = sub_19F16DA74(a1);
  uint64_t v3 = type metadata accessor for _AsyncChannel.BufferingPolicy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return v2;
}

id _AsyncChannel.yield(_:)(uint64_t a1)
{
  uint64_t v3 = (void *)v1[2];
  objc_msgSend(v3, sel_lock);
  double v4 = (void *)((char *)v1 + *(void *)(*v1 + 112));
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for _AsyncChannel.WeakReceiver();
  sub_19F1DC27C();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_19F1DC72C();
  swift_endAccess();
  v15[0] = *v4;
  swift_getWitnessTable();
  if (sub_19F1DC6AC())
  {
    swift_beginAccess();
    swift_retain();
    sub_19F16C670(a1);
    swift_release();
    return objc_msgSend(v3, sel_unlock);
  }
  objc_msgSend(v3, sel_unlock);
  uint64_t v7 = *v4;
  uint64_t v8 = swift_bridgeObjectRetain();
  if (!MEMORY[0x19F3C6550](v8, v5)) {
    return (id)swift_bridgeObjectRelease();
  }
  uint64_t v9 = 0;
  for (uint64_t i = v7 + 32; ; i += 8)
  {
    char v11 = sub_19F1DC1FC();
    sub_19F1DC19C();
    if ((v11 & 1) == 0) {
      break;
    }
    uint64_t v12 = *(void *)(v5 - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v12 + 16))(v15, i, v5);
    uint64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_12;
    }
LABEL_8:
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v14, v15, v5);
    if (swift_weakLoadStrong())
    {
      sub_19F16C670(a1);
      swift_release();
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v5);
    ++v9;
    if (v13 == MEMORY[0x19F3C6550](v7, v5)) {
      return (id)swift_bridgeObjectRelease();
    }
  }
  v14[0] = sub_19F1DCD5C();
  uint64_t v12 = *(void *)(v5 - 8);
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v15, v14, v5);
  swift_unknownObjectRelease();
  uint64_t v13 = v9 + 1;
  if (!__OFADD__(v9, 1)) {
    goto LABEL_8;
  }
LABEL_12:
  __break(1u);
  return (id)swift_bridgeObjectRelease();
}

uint64_t _AsyncChannel.makeAsyncIterator()()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_19F103628();
  type metadata accessor for _AsyncChannel.Receiver();
  withLock<A, B>(_:_:)(v1, (void (*)(id))sub_19F16DBD0);
  return v3;
}

uint64_t sub_19F16D328@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  type metadata accessor for _AsyncChannel.Receiver();
  uint64_t v5 = (uint64_t)a1 + *(void *)(v4 + 96);
  swift_allocObject();
  *a2 = sub_19F16D5F4(v5);
  swift_beginAccess();
  sub_19F1DD63C();
  swift_endAccess();
  swift_retain();
  sub_19F0D2750();
  swift_beginAccess();
  type metadata accessor for _AsyncChannel.WeakReceiver();
  sub_19F1DC27C();
  sub_19F1DC23C();
  return swift_endAccess();
}

id *_AsyncChannel.deinit()
{
  uint64_t v1 = (char *)v0 + *((void *)*v0 + 12);
  uint64_t v2 = type metadata accessor for _AsyncChannel.BufferingPolicy();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _AsyncChannel.__deallocating_deinit()
{
  return sub_19F16D558((void (*)(void))_AsyncChannel.deinit);
}

uint64_t sub_19F16D558(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_19F16D5B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = _AsyncChannel.makeAsyncIterator()();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_19F16D5F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v31 = a1;
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = sub_19F1DC3FC();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v35 = (char *)&v28 - v5;
  uint64_t v6 = sub_19F1DC3CC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v34 = (char *)&v28 - v8;
  uint64_t v30 = sub_19F1DC3AC();
  uint64_t v9 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  char v11 = (char *)&v28 - v10;
  uint64_t v12 = sub_19F1DC40C();
  uint64_t v32 = *(void *)(v12 - 8);
  uint64_t v33 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = sub_19F1DCAAC();
  uint64_t v29 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v28 - v20;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v7 + 56))((char *)&v28 - v20, 1, 1, v6, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v31, v30);
  uint64_t v38 = v3;
  id v39 = v21;
  nullsub_1(v3);
  uint64_t v22 = v29;
  sub_19F1DC41C();
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v17, v21, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v17, 1, v6) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v17, v15);
    __break(1u);
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    id v24 = v34;
    v23(v34, v17, v6);
    v23((char *)(v2 + *(void *)(*(void *)v2 + 88)), v24, v6);
    long long v25 = v35;
    uint64_t v26 = v33;
    sub_19F1DC3DC();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v26);
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v2 + *(void *)(*(void *)v2 + 96), v25, v37);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v15);
    return v2;
  }
  return result;
}

void *sub_19F16DA74(uint64_t a1)
{
  uint64_t v2 = v1;
  void v2[2] = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  uint64_t v4 = (char *)v2 + *(void *)(*v2 + 96);
  uint64_t v5 = type metadata accessor for _AsyncChannel.BufferingPolicy();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v4, a1, v5);
  type metadata accessor for _AsyncChannel.Receiver();
  swift_allocObject();
  *(void *)((char *)v2 + *(void *)(*v2 + 104)) = sub_19F16D5F4(a1);
  type metadata accessor for _AsyncChannel.WeakReceiver();
  *(void *)((char *)v2 + *(void *)(*v2 + 112)) = sub_19F1DC1CC();
  return v2;
}

uint64_t type metadata accessor for _AsyncChannel.BufferingPolicy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _AsyncChannel.WeakReceiver()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F16DBD0@<X0>(uint64_t *a1@<X8>)
{
  return sub_19F16D328(v1, a1);
}

uint64_t type metadata accessor for _AsyncChannel.Receiver()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F16DC04()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F16DC20()
{
  uint64_t result = sub_19F1DC3AC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for _AsyncChannel()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for _AsyncChannel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _AsyncChannel);
}

uint64_t dispatch thunk of _AsyncChannel.__allocating_init(bufferingPolicy:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_19F16DD24()
{
  uint64_t result = sub_19F1DC3CC();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_19F1DC3FC();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for _AsyncChannel.Receiver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _AsyncChannel.Receiver);
}

uint64_t sub_19F16DE14()
{
  uint64_t result = sub_19F1DC3AC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19F16DEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DC3AC();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_19F16DF14(uint64_t a1)
{
  uint64_t v2 = sub_19F1DC3AC();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_19F16DF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DC3AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_19F16DFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DC3AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_19F16E04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DC3AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_19F16E0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DC3AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_19F16E11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F16E130);
}

uint64_t sub_19F16E130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DC3AC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_19F16E1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F16E1B4);
}

uint64_t sub_19F16E1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DC3AC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_19F16E228(uint64_t a1)
{
  return sub_19F16C574(a1, *(void *)(v1 + 24));
}

uint64_t AppleServicesFetcherInstrumented.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t AppleServicesFetcherInstrumented.fetch(contentsOf:)(uint64_t a1)
{
  *(void *)(v2 + 232) = *(void *)a1;
  *(_OWORD *)(v2 + 240) = *(_OWORD *)(a1 + 8);
  *(unsigned char *)(v2 + 153) = *(unsigned char *)(a1 + 24);
  *(void *)(v2 + 256) = *v1;
  return MEMORY[0x1F4188298](sub_19EE40838, 0, 0);
}

uint64_t sub_19F16E274()
{
  uint64_t v1 = *(void **)(v0 + 280);
  swift_release();

  swift_unknownObjectRelease();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t static ActionDispatcher.Builder.buildBlock(_:)(uint64_t a1)
{
  void v2[3] = a1;
  ActionDispatcher.init()(v2);
  type metadata accessor for ActionDispatcher();
  sub_19F1DC27C();
  swift_getWitnessTable();
  return sub_19F1DC08C();
}

uint64_t sub_19F16E3B4(uint64_t a1, uint64_t a2)
{
  return ActionDispatcher.add(contentsOf:)(a2);
}

void static ActionDispatcher.Builder.buildExpression<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  ActionDispatcher.init()(v8);
  uint64_t v6 = type metadata accessor for ActionDispatcher();
  ActionDispatcher.adding<A>(_:)(a1, v6, a2, a3);
  id v7 = (id)v8[2];
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t static ActionDispatcher.Builder.buildOptional(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)a1[2];
  if (*a1)
  {
    *a2 = v2;
    a2[1] = v3;
    a2[2] = (uint64_t)v4;
  }
  else
  {
    ActionDispatcher.init()(a2);
  }
  return sub_19EE6D340(v2, v3, v4);
}

uint64_t _s9JetEngine16ActionDispatcherV7BuilderO11buildEither5firstACyxGAH_tFZ_0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  id v4 = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t ActionDispatcher.init(implementations:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t type metadata accessor for ActionDispatcher.Builder()
{
  return __swift_instantiateGenericMetadata();
}

unsigned __int8 *sub_19F16E5A0(uint64_t a1)
{
  __linep[4] = *(char **)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_19F1DAE3C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)__linecapp - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946EB28);
  sub_19F1DB2AC();
  uint64_t v6 = (FILE *)v30;
  if (!(void)v30)
  {
    if (qword_1EB392AA8 != -1) {
      swift_once();
    }
    char v11 = (void *)qword_1EB392860;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19F24EAD0;
    id v13 = v11;
    uint64_t v26 = sub_19EEC3F3C(0, 29, 0, MEMORY[0x1E4FBC860]);
    v14._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v14._uint64_t object = (void *)0x800000019F2745E0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t v15 = (char *)sub_19F1DB34C();
    __linep[3] = v15;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)__linep);
    (*(void (**)(uint64_t *, uint64_t, char *))(*((void *)v15 - 1) + 16))(boxed_opaque_existential_2Tm, a1, v15);
    sub_19EEBCD00((uint64_t)__linep, (uint64_t)v29);
    *(_OWORD *)__linecapp = 0u;
    long long v28 = 0u;
    sub_19EEC3E70((uint64_t)v29, (uint64_t)__linecapp);
    char v32 = 0;
    long long v30 = *(_OWORD *)__linecapp;
    long long v31 = v28;
    uint64_t v17 = v26;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
    }
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      uint64_t v17 = sub_19EEC3F3C((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    long long v17[2] = v19 + 1;
    uint64_t v20 = &v17[5 * v19];
    long long v21 = v30;
    long long v22 = v31;
    *((unsigned char *)v20 + 64) = v32;
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v22;
    uint64_t v26 = v17;
    sub_19EEBCB4C((uint64_t)__linep);
    v23._uint64_t countAndFlagsBits = 0;
    v23._uint64_t object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *(void *)(v12 + 32) = v26;
    *(void *)&long long v30 = v13;
    LOBYTE(__linecapp[0]) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)__linecapp);

    swift_bridgeObjectRelease();
    return 0;
  }
  __linecapp[0] = 0;
  __linep[0] = 0;
  if (getline(__linep, __linecapp, (FILE *)v30) == -1)
  {
LABEL_24:
    fclose(v6);
    if (__linep[0]) {
      MEMORY[0x19F3C9470](__linep[0], -1, -1);
    }
    return 0;
  }
  while (1)
  {
    id v7 = (unsigned __int8 *)__linep[0];
    if (!__linep[0])
    {
      fclose(v6);
      return v7;
    }
    int64_t v8 = __linecapp[0];
    if (((unint64_t)"ceProvider.swift" & 0x1000000000000000) != 0)
    {
      int64_t v10 = sub_19F1DBF4C();
    }
    else
    {
      if (((unint64_t)"ceProvider.swift" & 0x2000000000000000) == 0)
      {
        if ((uint64_t)__linecapp[0] >= 21) {
          uint64_t v9 = 21;
        }
        else {
          uint64_t v9 = __linecapp[0];
        }
        goto LABEL_13;
      }
      int64_t v10 = (0x800000019F2745C0 >> 56) & 0xF;
    }
    uint64_t v9 = v10 >= v8 ? v8 : v10;
LABEL_13:
    if (sub_19EFA9F04(0xD000000000000015, 0x800000019F2745C0, v7, v9)) {
      break;
    }
    if (getline(__linep, __linecapp, v6) == -1) {
      goto LABEL_24;
    }
  }
  if (((unint64_t)"ceProvider.swift" & 0x1000000000000000) != 0) {
    sub_19F1DBF4C();
  }
  *(void *)&long long v30 = sub_19F1DBF1C();
  *((void *)&v30 + 1) = v25;
  sub_19F1DAE2C();
  sub_19EEC4910();
  id v7 = (unsigned __int8 *)sub_19F1DCB7C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  fclose(v6);
  if (__linep[0]) {
    MEMORY[0x19F3C9470](__linep[0], -1, -1);
  }
  return v7;
}

uint64_t JSSourceProvider.supportsBytecodeCaching.getter()
{
  return 0;
}

uint64_t JSSourceProvider.isUsingBytecodeCache.getter()
{
  return 0;
}

void sub_19F16EA48()
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSSourceProvider.cacheBytecode()()
{
}

uint64_t dispatch thunk of JSSourceProvider.evaluate(against:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of JSSourceProvider.supportsBytecodeCaching.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of JSSourceProvider.isUsingBytecodeCache.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of JSSourceProvider.cacheBytecode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

FILE *sub_19F16EB38@<X0>(const char *a1@<X0>, FILE **a2@<X8>)
{
  uint64_t result = fopen(a1, "r");
  *a2 = result;
  return result;
}

uint64_t sub_19F16EB70(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_19F1DAE3C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  unint64_t v21 = a2;
  unint64_t v18 = 0xD000000000000015;
  unint64_t v19 = 0x800000019F2745C0;
  sub_19F16ED40();
  sub_19F16ED94();
  sub_19F1DBCAC();
  uint64_t v8 = 0;
  if (v16) {
    return v8;
  }
  uint64_t result = v15;
  uint64_t v10 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v10 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v10 >= v15 >> 14)
  {
    uint64_t v14 = sub_19F1DC00C();
    unint64_t v15 = v11;
    uint64_t v16 = v12;
    uint64_t v17 = v13;
    sub_19F1DAE1C();
    sub_19F16EDE8();
    uint64_t v8 = sub_19F1DCB7C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    return v8;
  }
  __break(1u);
  return result;
}

unint64_t sub_19F16ED40()
{
  unint64_t result = qword_1E946DC60;
  if (!qword_1E946DC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DC60);
  }
  return result;
}

unint64_t sub_19F16ED94()
{
  unint64_t result = qword_1E9475F58;
  if (!qword_1E9475F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475F58);
  }
  return result;
}

unint64_t sub_19F16EDE8()
{
  unint64_t result = qword_1E9475F60;
  if (!qword_1E9475F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475F60);
  }
  return result;
}

uint64_t sub_19F16EE3C(unint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v49 = sub_19F1DB5AC();
  unint64_t v2 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v48 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_19F1DD03C();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      long long v46 = (void (**)(char *, uint64_t))(v2 + 8);
      unint64_t v47 = a1 & 0xC000000000000001;
      uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v6 = 4;
      unint64_t v45 = a1;
      do
      {
        if (v47) {
          id v7 = (id)MEMORY[0x19F3C7060](v6 - 4, a1);
        }
        else {
          id v7 = *(id *)(a1 + 8 * v6);
        }
        unint64_t v2 = (unint64_t)v7;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        uint64_t v50 = v6 - 3;
        uint64_t v8 = v48;
        sub_19F1DB59C();
        uint64_t v9 = sub_19F1DB58C();
        uint64_t v11 = v10;
        (*v46)(v8, v49);
        a1 = (unint64_t)(id)v2;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v52 = v5;
        unint64_t v2 = sub_19EEBD400(v9, v11);
        uint64_t v14 = v5[2];
        BOOL v15 = (v13 & 1) == 0;
        uint64_t v16 = v14 + v15;
        if (__OFADD__(v14, v15)) {
          goto LABEL_29;
        }
        char v17 = v13;
        if (v5[3] >= v16)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v5 = v52;
            if (v13) {
              goto LABEL_17;
            }
          }
          else
          {
            sub_19EFC0CCC();
            uint64_t v5 = v52;
            if (v17) {
              goto LABEL_17;
            }
          }
        }
        else
        {
          sub_19EFBBCFC(v16, isUniquelyReferenced_nonNull_native);
          unint64_t v18 = sub_19EEBD400(v9, v11);
          if ((v17 & 1) != (v19 & 1))
          {
            uint64_t result = sub_19F1DD65C();
            __break(1u);
            return result;
          }
          unint64_t v2 = v18;
          uint64_t v5 = v52;
          if (v17)
          {
LABEL_17:
            uint64_t v20 = v5[7];
            uint64_t v21 = 8 * v2;

            *(void *)(v20 + v21) = a1;
            goto LABEL_21;
          }
        }
        v5[(v2 >> 6) + 8] |= 1 << v2;
        long long v22 = (uint64_t *)(v5[6] + 16 * v2);
        *long long v22 = v9;
        v22[1] = v11;
        *(void *)(v5[7] + 8 * v2) = a1;
        uint64_t v23 = v5[2];
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v23 + 1;
        if (v24) {
          goto LABEL_30;
        }
        void v5[2] = v25;
        swift_bridgeObjectRetain();
LABEL_21:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = qword_1E94701F8;
        id v27 = (id)a1;
        if (v26 != -1) {
          swift_once();
        }
        char v28 = -[_JEAtomicFlag currentValue](qword_1E94747A8);
        a1 = v45;
        if (v28)
        {
          if (qword_1E9470200 != -1) {
            swift_once();
          }
          uint64_t v29 = qword_1E9498BA0;
          swift_retain();
          sub_19F02C504(v27, v29);

          swift_release();
        }
        else
        {
        }
        ++v6;
      }
      while (v50 != v4);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_19EF786BC();
  uint64_t v31 = *(void *)(v30 + 16);
  if (v31)
  {
    char v32 = *(void **)&v44[OBJC_IVAR____TtC9JetEngine24AMSMetricsWithInspection_urlSession];
    uint64_t v33 = (uint64_t *)(v30 + 48);
    do
    {
      uint64_t v34 = *(v33 - 2);
      uint64_t v35 = *(v33 - 1);
      uint64_t v36 = *v33;
      v33 += 3;
      swift_bridgeObjectRetain();
      uint64_t v37 = swift_bridgeObjectRetain();
      unint64_t v38 = sub_19EF4CD94(v37);
      swift_bridgeObjectRelease();
      sub_19F1BB5E4(v38, v32, v34, v35, v36);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      --v31;
    }
    while (v31);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19EEBDC10(0, (unint64_t *)&qword_1E946F790);
  id v39 = (void *)sub_19F1DC14C();
  v51.receiver = v44;
  v51.super_class = ObjectType;
  id v40 = objc_msgSendSuper2(&v51, sel_promiseForEnqueueingEvents_, v39);

  return (uint64_t)v40;
}

void sub_19F16F3C8()
{
}

uint64_t InMemoryJetPackResourceBundle.contentsOfDirectory(atPath:)(void **a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_19EE8698C(v2, v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t InMemoryJetPackResourceBundle.inMemorySource(fromPath:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v47 = a2;
  uint64_t v46 = type metadata accessor for JSSource();
  MEMORY[0x1F4188790](v46);
  uint64_t v6 = (uint64_t *)((char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v40 - v11;
  MEMORY[0x1F4188790](v13);
  BOOL v15 = (char *)&v40 - v14;
  uint64_t v16 = sub_19F1DBDEC();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v17 = *a1;
  uint64_t v18 = *v3;
  if (!*(void *)(*v3 + 16)) {
    goto LABEL_7;
  }
  char v19 = (void *)swift_bridgeObjectRetain();
  uint64_t v20 = sub_19EEA1658(v19);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_19F16F8E8();
    swift_allocError();
    *uint64_t v33 = v17;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  unint64_t v45 = v9;
  long long v22 = (uint64_t *)(*(void *)(v18 + 56) + 16 * v20);
  uint64_t v23 = *v22;
  unint64_t v24 = v22[1];
  sub_19EEA0784(*v22, v24);
  swift_bridgeObjectRelease();
  sub_19F1DBDCC();
  uint64_t v25 = sub_19F1DBD9C();
  if (v26)
  {
    uint64_t v41 = v26;
    uint64_t v42 = v25;
    unint64_t v43 = v24;
    uint64_t v27 = type metadata accessor for InMemoryJetPackResourceBundle();
    sub_19EE628D4((uint64_t)v3 + *(int *)(v27 + 24), (uint64_t)v12);
    uint64_t v28 = sub_19F1DB34C();
    uint64_t v29 = *(void *)(v28 - 8);
    int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v12, 1, v28);
    uint64_t v44 = v23;
    if (v30 == 1)
    {
      sub_19EE6293C((uint64_t)v12);
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v31(v15, 1, 1, v28);
      uint64_t v32 = (uint64_t)v45;
    }
    else
    {
      uint64_t v32 = (uint64_t)v45;
      if (*(void *)(v17 + 16))
      {
        uint64_t v48 = v17;
        swift_bridgeObjectRetain();
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
        sub_19EE868D4();
        sub_19F1DBCCC();
        swift_bridgeObjectRelease();
      }
      sub_19F1DB26C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v28);
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v31(v15, 0, 1, v28);
    }
    sub_19EE628D4((uint64_t)v15, v32);
    uint64_t v36 = v46;
    uint64_t v35 = v47;
    v47[3] = v46;
    v35[4] = (uint64_t)&protocol witness table for JSSource;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v35);
    uint64_t v38 = (uint64_t)v6 + *(int *)(v36 + 20);
    v31((char *)v38, 1, 1, v28);
    uint64_t v39 = v41;
    *uint64_t v6 = v42;
    v6[1] = v39;
    sub_19EE62024(v32, v38);
    sub_19EF968BC((uint64_t)v6, (uint64_t)boxed_opaque_existential_2Tm);
    sub_19EEA072C(v44, v43);
    return sub_19EE6293C((uint64_t)v15);
  }
  else
  {
    sub_19F0A11F0();
    swift_allocError();
    swift_willThrow();
    return sub_19EEA072C(v23, v24);
  }
}

unint64_t sub_19F16F8E8()
{
  unint64_t result = qword_1E9475F78;
  if (!qword_1E9475F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475F78);
  }
  return result;
}

void *assignWithCopy for InMemoryJetPackResourceBundle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for InMemoryJetPackResourceBundle(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for InMemoryJetPackResourceBundle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for InMemoryJetPackResourceBundle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F16FDA4);
}

uint64_t sub_19F16FDA4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for InMemoryJetPackResourceBundle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F16FE6C);
}

void *sub_19F16FE6C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstraintTreatmentFilter()
{
  return &type metadata for ConstraintTreatmentFilter;
}

uint64_t JetPackDataStreamSource.init(data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for JetPackDataStreamSource() + 24);
  uint64_t v7 = sub_19F1DB34C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  a3[3] = 0;
  return result;
}

uint64_t type metadata accessor for JetPackDataStreamSource()
{
  uint64_t result = qword_1E946F9E8;
  if (!qword_1E946F9E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t JetPackDataStreamSource.init(data:dataSourceURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v6 = type metadata accessor for JetPackDataStreamSource();
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v7 = (uint64_t)a4 + *(int *)(v6 + 24);
  return sub_19F0A8578(a3, v7);
}

uint64_t JetPackDataStreamSource.makeStream()()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  id v3 = objc_allocWithZone(MEMORY[0x1E4F71968]);
  sub_19EEA0784(v1, v2);
  uint64_t v4 = (void *)sub_19F1DB3EC();
  id v5 = objc_msgSend(v3, sel_initWithData_, v4);
  sub_19EEA072C(v1, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C80);
  uint64_t v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  *(void *)(v6 + 16) = v7;
  *(void *)(v6 + 24) = v5;
  *(unsigned char *)(v6 + 32) = 1;
  return v6;
}

uint64_t sub_19F170114(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 24);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    if (qword_1EB390B70 != -1) {
      uint64_t result = swift_once();
    }
    uint64_t v6 = v3;
    uint64_t v7 = v2;
    uint64_t v4 = *(os_unfair_lock_s **)(qword_1EB394EE0 + 16);
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v4 + 6);
    sub_19F170D54((uint64_t)v5);
    os_unfair_lock_unlock(v4 + 6);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}