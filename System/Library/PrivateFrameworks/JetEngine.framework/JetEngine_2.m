void SetCost(unsigned int *a1, uint64_t a2, int a3, float *a4)
{
  uint64_t v6;
  unsigned int *v7;
  unint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int v11;
  double v12;
  unsigned int *v13;
  uint64_t v14;
  double v16;
  float v17;
  float v18;
  float v19;
  uint64_t v20;
  unsigned int v21;
  double v22;
  float v23;
  float v24;

  v6 = a2;
  v7 = a1;
  v8 = 0;
  if (!a2) {
    goto LABEL_5;
  }
  v9 = a1;
  v10 = a2;
  do
  {
    v11 = *v9++;
    v8 += v11;
    --v10;
  }
  while (v10);
  if (v8 > 0xFF)
  {
    v12 = log2((double)v8);
    if (a3) {
      goto LABEL_13;
    }
  }
  else
  {
LABEL_5:
    v12 = kBrotliLog2Table[v8];
    if (a3) {
      goto LABEL_13;
    }
  }
  if (v6)
  {
    v13 = v7;
    v14 = v6;
    do
    {
      if (!*v13++) {
        ++v8;
      }
      --v14;
    }
    while (v14);
  }
LABEL_13:
  if (v8 > 0xFF)
  {
    v16 = log2((double)v8);
    if (!v6) {
      return;
    }
  }
  else
  {
    v16 = kBrotliLog2Table[v8];
    if (!v6) {
      return;
    }
  }
  v17 = v12;
  v18 = v16;
  v19 = v18 + 2.0;
  do
  {
    v21 = *v7++;
    v20 = v21;
    if (v21)
    {
      if (v20 > 0xFF) {
        v22 = log2((double)v20);
      }
      else {
        v22 = kBrotliLog2Table[v20];
      }
      v23 = v22;
      v24 = v17 - v23;
      *a4 = v24;
      if (v24 < 1.0) {
        *a4 = 1.0;
      }
    }
    else
    {
      *a4 = v19;
    }
    ++a4;
    --v6;
  }
  while (v6);
}

void sub_19EF1EE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

Class __getMTStandardIDServiceClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!MetricsKitLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __MetricsKitLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_1E59B5508;
    uint64_t v5 = 0;
    MetricsKitLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!MetricsKitLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_8:
      __getMTStandardIDServiceClass_block_invoke_cold_1();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("MTStandardIDService");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  getMTStandardIDServiceClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __MetricsKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  MetricsKitLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t BrotliBuildCodeLengthsHuffmanTable(uint64_t result, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t v3 = 0;
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  int v4 = a3[1] - 1;
  int v5 = v4 + a3[2] + a3[3];
  v34[2] = v4 + a3[2];
  v34[3] = v5;
  int v6 = v5 + a3[4];
  int v7 = v6 + a3[5];
  v34[4] = v6;
  v34[5] = v7;
  v34[0] = 17;
  v34[1] = v4;
  uint64_t v8 = a2 + 17;
  do
  {
    uint64_t v9 = *(unsigned __int8 *)(v8 + v3);
    uint64_t v10 = (int)v34[v9];
    v35[v10] = v3 + 17;
    v34[v9] = v10 - 1;
    uint64_t v11 = *(unsigned __int8 *)(v8 + v3 - 1);
    uint64_t v12 = (int)v34[v11];
    v34[v11] = v12 - 1;
    uint64_t v13 = *(unsigned __int8 *)(v8 + v3 - 2);
    uint64_t v14 = (int)v34[v13];
    v35[v12] = v3 + 16;
    v35[v14] = v3 + 15;
    v34[v13] = v14 - 1;
    uint64_t v15 = *(unsigned __int8 *)(v8 + v3 - 3);
    uint64_t v16 = (int)v34[v15];
    v34[v15] = v16 - 1;
    uint64_t v17 = *(unsigned __int8 *)(v8 + v3 - 4);
    uint64_t v18 = (int)v34[v17];
    v35[v16] = v3 + 14;
    v35[v18] = v3 + 13;
    v34[v17] = v18 - 1;
    uint64_t v19 = *(unsigned __int8 *)(v8 + v3 - 5);
    uint64_t v20 = (int)v34[v19];
    v34[v19] = v20 - 1;
    v35[v20] = v3 + 12;
    v3 -= 6;
  }
  while (v3 != -18);
  if (v34[0])
  {
    unint64_t v21 = 0;
    LODWORD(v22) = 0;
    int v23 = 2;
    unint64_t v24 = 0x8000000000000000;
    for (uint64_t i = 1; i != 6; ++i)
    {
      int v26 = a3[i];
      if (a3[i])
      {
        uint64_t v27 = -v23;
        uint64_t v22 = (int)v22;
        do
        {
          int v28 = i | (v35[v22] << 16);
          unint64_t v29 = result - 4 * v23 + 4 * __rbit64(v21);
          uint64_t v30 = 32;
          do
          {
            *(_DWORD *)(v29 + 4 * v30) = v28;
            BOOL v31 = __OFADD__(v30, v27);
            v30 += v27;
          }
          while (!((v30 < 0) ^ v31 | (v30 == 0)));
          ++v22;
          v21 += v24;
          --v26;
        }
        while (v26);
      }
      v23 *= 2;
      v24 >>= 1;
    }
  }
  else
  {
    uint64_t v32 = 0;
    int32x4_t v33 = vdupq_n_s32(v35[0] << 16);
    do
    {
      *(int32x4_t *)(result + v32) = v33;
      v32 += 16;
    }
    while (v32 != 128);
  }
  return result;
}

uint64_t BrotliBuildHuffmanTable(char *__src, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = -1;
  do
    int v9 = *(__int16 *)(a3 + 2 * v8--);
  while (v9 == -1);
  unint64_t v10 = 0;
  int v11 = v8 + 17;
  uint64_t v12 = 1;
  uint64_t v13 = (1 << a2);
  if (v11 >= a2) {
    int v14 = a2;
  }
  else {
    int v14 = v11;
  }
  if (v11 >= a2) {
    int v15 = 1 << a2;
  }
  else {
    int v15 = 1 << v11;
  }
  uint64_t v16 = v14;
  int v17 = 2;
  unint64_t v18 = 0x8000000000000000;
  do
  {
    int v19 = *(unsigned __int16 *)(a4 + 2 * v12);
    if (*(_WORD *)(a4 + 2 * v12))
    {
      int v20 = v12 - 16;
      do
      {
        int v20 = *(unsigned __int16 *)(a3 + 2 * v20);
        unint64_t v21 = &__src[4 * __rbit64(v10)];
        int v22 = v15;
        do
        {
          *(_DWORD *)&v21[4 * (v22 - v17)] = v12 | (v20 << 16);
          v22 -= v17;
        }
        while (v22 > 0);
        v10 += v18;
        --v19;
      }
      while (v19);
    }
    v17 *= 2;
    v18 >>= 1;
  }
  while (v12++ < v16);
  if (v13 != v15)
  {
    do
    {
      memcpy(&__src[4 * v15], __src, 4 * v15);
      BOOL v24 = v13 == 2 * v15;
      v15 *= 2;
    }
    while (!v24);
  }
  if (v11 > a2)
  {
    unint64_t v25 = 0;
    uint64_t v26 = a2;
    uint64_t v27 = v11;
    char v28 = a2 + 1;
    uint64_t v29 = a4 + 2 * a2 + 2;
    unint64_t v30 = 0x8000000000000000;
    int v31 = 2;
    uint64_t v32 = __src;
    int v33 = 1 << a2;
    do
    {
      uint64_t v34 = v26 + 1;
      if (*(_WORD *)(a4 + 2 * (v26 + 1)))
      {
        int v35 = v26 - 15;
        do
        {
          if (!v25)
          {
            unsigned __int8 v36 = v26 + 1;
            if (v26 <= 13)
            {
              uint64_t v37 = 0;
              int v38 = 1 << (v34 - a2);
              while (1)
              {
                int v39 = v38 - *(unsigned __int16 *)(v29 + 2 * v37);
                if (v39 < 1) {
                  break;
                }
                int v38 = 2 * v39;
                ++v37;
                if (v26 + v37 >= 14)
                {
                  unsigned __int8 v36 = 15;
                  goto LABEL_30;
                }
              }
              unsigned __int8 v36 = v28 + v37;
            }
LABEL_30:
            v32 += 4 * v33;
            int v33 = 1 << (v36 - a2);
            uint64_t v13 = (v33 + v13);
            unint64_t v40 = __rbit64(v10);
            v10 += 0x8000000000000000 >> (a2 - 1);
            *(_DWORD *)&__src[4 * v40] = v36 | ((((v32 - __src) >> 2) - v40) << 16);
          }
          int v35 = *(unsigned __int16 *)(a3 + 2 * v35);
          v41 = &v32[4 * __rbit64(v25)];
          int v42 = v33;
          do
          {
            *(_DWORD *)&v41[4 * (v42 - v31)] = (v34 - a2) | (v35 << 16);
            v42 -= v31;
          }
          while (v42 > 0);
          v25 += v30;
          __int16 v43 = *(_WORD *)(a4 + 2 * v34) - 1;
          *(_WORD *)(a4 + 2 * v34) = v43;
        }
        while (v43);
      }
      v31 *= 2;
      v30 >>= 1;
      ++v28;
      v29 += 2;
      ++v26;
    }
    while (v34 < v27);
  }
  return v13;
}

uint64_t BrotliBuildSimpleHuffmanTable(int *__src, char a2, unsigned __int16 *a3, int a4)
{
  unsigned int v5 = 1;
  uint64_t v6 = (1 << a2);
  switch(a4)
  {
    case 0:
      *__src = *a3 << 16;
      unsigned int v5 = 1;
      break;
    case 1:
      unsigned int v7 = a3[1];
      unsigned int v8 = *a3;
      if (v7 <= v8)
      {
        *__src = (v7 << 16) | 1;
        int v9 = (*a3 << 16) | 1;
      }
      else
      {
        *__src = (v8 << 16) | 1;
        int v9 = (a3[1] << 16) | 1;
      }
      __src[1] = v9;
      unsigned int v5 = 2;
      break;
    case 2:
      *__src = (*a3 << 16) | 1;
      __src[2] = (*a3 << 16) | 1;
      unsigned int v10 = a3[2];
      unsigned int v11 = a3[1];
      if (v10 > v11)
      {
        __src[1] = (v11 << 16) | 2;
        int v12 = (a3[2] << 16) | 2;
        goto LABEL_21;
      }
      __src[1] = (v10 << 16) | 2;
      int v19 = a3[1];
      goto LABEL_20;
    case 3:
      uint64_t v13 = 0;
      uint64_t v14 = 2;
      do
      {
        uint64_t v15 = v13++;
        unsigned __int16 v16 = a3[v15];
        uint64_t v17 = v14;
        do
        {
          unsigned int v18 = *(unsigned __int16 *)((char *)a3 + v17);
          if (v18 < v16)
          {
            *(unsigned __int16 *)((char *)a3 + v17) = v16;
            a3[v15] = v18;
            unsigned __int16 v16 = v18;
          }
          v17 += 2;
        }
        while (v17 != 8);
        v14 += 2;
      }
      while (v13 != 3);
      *__src = (*a3 << 16) | 2;
      __src[2] = (a3[1] << 16) | 2;
      __src[1] = (a3[2] << 16) | 2;
      int v19 = a3[3];
LABEL_20:
      int v12 = (v19 << 16) | 2;
LABEL_21:
      __src[3] = v12;
      unsigned int v5 = 4;
      break;
    case 4:
      unsigned int v20 = a3[3];
      unsigned int v21 = a3[2];
      if (v20 < v21)
      {
        a3[3] = v21;
        a3[2] = v20;
      }
      *__src = (*a3 << 16) | 1;
      __src[1] = (a3[1] << 16) | 2;
      __src[2] = (*a3 << 16) | 1;
      __src[3] = (a3[2] << 16) | 3;
      __src[4] = (*a3 << 16) | 1;
      __src[5] = (a3[1] << 16) | 2;
      __src[6] = (*a3 << 16) | 1;
      __src[7] = (a3[3] << 16) | 3;
      unsigned int v5 = 8;
      break;
    default:
      break;
  }
  while (v5 != v6)
  {
    memcpy(&__src[v5], __src, 4 * v5);
    v5 *= 2;
  }
  return v6;
}

unint64_t BrotliStoreHuffmanTree(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  uint64_t v33 = 0;
  v37[0] = 0;
  v37[1] = 0;
  __int16 v38 = 0;
  uint64_t v35 = 0;
  memset(v34, 0, sizeof(v34));
  BrotliWriteHuffmanTree(a1, a2, &v33, (uint64_t)v40, (uint64_t)v39);
  uint64_t v8 = v33;
  if (v33)
  {
    int v9 = v40;
    do
    {
      unsigned int v10 = *v9++;
      ++*((_DWORD *)v34 + v10);
      --v8;
    }
    while (v8);
  }
  uint64_t v11 = 0;
  int v12 = 0;
  uint64_t v13 = 0;
  while (!*((_DWORD *)v34 + v13))
  {
LABEL_8:
    if (++v13 == 18) {
      goto LABEL_11;
    }
  }
  if (!v12)
  {
    int v12 = 1;
    uint64_t v11 = v13;
    goto LABEL_8;
  }
  int v12 = 2;
LABEL_11:
  unint64_t v14 = 18;
  BrotliCreateHuffmanTree((uint64_t)v34, 18, 5, a3, (uint64_t)v37);
  unint64_t result = (unint64_t)BrotliConvertBitDepthsToSymbols((unsigned __int8 *)v37, 18, (uint64_t)v36);
  if (v12 >= 2)
  {
    uint64_t v16 = 0x11u;
    while (!*((unsigned char *)v37 + BrotliStoreHuffmanTreeOfHuffmanTreeToBitMask_kStorageOrder[v16]))
    {
      if (--v16 == -1)
      {
        unint64_t v14 = 0;
        goto LABEL_17;
      }
    }
    unint64_t v14 = v16 + 1;
  }
LABEL_17:
  uint64_t v17 = 2;
  if (!BYTE3(v37[0])) {
    uint64_t v17 = 3;
  }
  if (BYTE1(v37[0]) | BYTE2(v37[0])) {
    unint64_t v18 = 0;
  }
  else {
    unint64_t v18 = v17;
  }
  unint64_t v19 = *a4;
  *(void *)(a5 + (*a4 >> 3)) = (v18 << (*a4 & 7)) | *(unsigned __int8 *)(a5 + (*a4 >> 3));
  unint64_t v20 = v19 + 2;
  *a4 = v20;
  unint64_t v21 = v14 - v18;
  if (v14 > v18)
  {
    int v22 = &BrotliStoreHuffmanTreeOfHuffmanTreeToBitMask_kStorageOrder[v18];
    do
    {
      unsigned int v23 = *v22++;
      uint64_t v24 = *((unsigned __int8 *)v37 + v23);
      uint64_t v25 = BrotliStoreHuffmanTreeOfHuffmanTreeToBitMask_kHuffmanBitLengthHuffmanCodeBitLengths[v24];
      unint64_t result = v20 & 7;
      *(void *)(a5 + (v20 >> 3)) = ((unint64_t)BrotliStoreHuffmanTreeOfHuffmanTreeToBitMask_kHuffmanBitLengthHuffmanCodeSymbols[v24] << (v20 & 7)) | *(unsigned __int8 *)(a5 + (v20 >> 3));
      v20 += v25;
      *a4 = v20;
      --v21;
    }
    while (v21);
  }
  if (v12 == 1) {
    *((unsigned char *)v37 + v11) = 0;
  }
  uint64_t v26 = v33;
  if (v33)
  {
    uint64_t v27 = v39;
    char v28 = v40;
    while (1)
    {
      unsigned int v30 = *v28++;
      unsigned int v29 = v30;
      uint64_t v31 = *((unsigned __int8 *)v37 + v30);
      unint64_t result = *(unsigned __int8 *)(a5 + (v20 >> 3));
      *(void *)(a5 + (v20 >> 3)) = ((unint64_t)(unsigned __int16)v36[v30] << (v20 & 7)) | result;
      v20 += v31;
      *a4 = v20;
      if (v30 == 16) {
        break;
      }
      if (v29 == 17)
      {
        uint64_t v32 = 3;
LABEL_33:
        unint64_t result = v20 & 7;
        *(void *)(a5 + (v20 >> 3)) = ((unint64_t)*v27 << (v20 & 7)) | *(unsigned __int8 *)(a5 + (v20 >> 3));
        v20 += v32;
        *a4 = v20;
      }
      ++v27;
      if (!--v26) {
        return result;
      }
    }
    uint64_t v32 = 2;
    goto LABEL_33;
  }
  return result;
}

unint64_t BrotliBuildAndStoreHuffmanTreeFast(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, uint64_t a6, unint64_t *a7, uint64_t a8)
{
  uint64_t v90 = *MEMORY[0x1E4F143B8];
  long long v88 = 0u;
  long long v89 = 0u;
  if (!a3) {
    goto LABEL_9;
  }
  uint64_t v10 = result;
  unint64_t v11 = 0;
  unint64_t v12 = 0;
  do
  {
    uint64_t v13 = *(unsigned int *)(a2 + 4 * v12);
    if (v13)
    {
      if (v11 <= 3) {
        *((void *)&v88 + v11) = v12;
      }
      ++v11;
      a3 -= v13;
    }
    ++v12;
  }
  while (a3);
  unint64_t v14 = v11 - 1;
  if (v11 <= 1)
  {
LABEL_9:
    unint64_t v15 = *a7;
    *(void *)(a8 + (*a7 >> 3)) = (1 << (*a7 & 7)) | *(unsigned __int8 *)(a8 + (*a7 >> 3));
    v15 += 4;
    *a7 = v15;
    uint64_t v16 = v88;
    *(void *)(a8 + (v15 >> 3)) = ((void)v88 << (v15 & 7)) | *(unsigned __int8 *)(a8 + (v15 >> 3));
    *a7 = v15 + a4;
    a5[v16] = 0;
    *(_WORD *)(a6 + 2 * v16) = 0;
    return result;
  }
  bzero(a5, v12);
  unsigned int v17 = 1;
  do
  {
    if (v12)
    {
      unint64_t v18 = v12 - 1;
      uint64_t v19 = v10;
      do
      {
        unsigned int v20 = *(_DWORD *)(a2 + 4 * v18);
        if (v20)
        {
          if (v20 < v17) {
            unsigned int v20 = v17;
          }
          *(_DWORD *)uint64_t v19 = v20;
          *(_WORD *)(v19 + 4) = -1;
          *(_WORD *)(v19 + 6) = v18;
          v19 += 8;
        }
        --v18;
      }
      while (v18 != -1);
    }
    else
    {
      uint64_t v19 = v10;
    }
    unint64_t v21 = (v19 - v10) << 29;
    unint64_t v22 = (int)((v19 - v10) >> 3);
    if (((unint64_t)(v19 - v10) >> 3) > 0xCuLL)
    {
      uint64_t v28 = 2 * (HIDWORD(v21) < 0x39);
      do
      {
        unint64_t v29 = kBrotliShellGaps[v28];
        if (v29 < v22)
        {
          uint64_t v30 = 0;
          unint64_t v31 = kBrotliShellGaps[v28];
          do
          {
            uint64_t v32 = *(void *)(v10 + 8 * v31);
            unint64_t v33 = v31;
            if (v31 >= v29)
            {
              uint64_t v34 = v30;
              unint64_t v35 = v31;
              while (*(_DWORD *)(v10 + v34) > v32)
              {
                unint64_t v33 = v35 - v29;
                *(void *)(v10 + 8 * v35) = *(void *)(v10 + v34);
                v34 -= 8 * v29;
                unint64_t v35 = v33;
                if (v33 < v29) {
                  goto LABEL_40;
                }
              }
              unint64_t v33 = v35;
            }
LABEL_40:
            *(void *)(v10 + 8 * v33) = v32;
            ++v31;
            v30 += 8;
          }
          while (v31 != v22);
        }
        ++v28;
      }
      while (v28 != 6);
    }
    else if (v21 >> 33)
    {
      uint64_t v23 = 0;
      if (v22 <= 2) {
        unint64_t v22 = 2;
      }
      for (uint64_t i = 1; i != v22; ++i)
      {
        uint64_t v25 = *(void *)(v10 + 8 * i);
        uint64_t v26 = v23;
        uint64_t v27 = i;
        do
        {
          if (*(_DWORD *)(v10 + v26) <= v25) {
            break;
          }
          *(void *)(v10 + 8 * v27) = *(void *)(v10 + v26);
          v26 -= 8;
          --v27;
        }
        while (v27);
        *(void *)(v10 + 8 * v27) = v25;
        v23 += 8;
      }
    }
    unint64_t v36 = (unint64_t)(v19 - v10) >> 3;
    *(void *)uint64_t v19 = -1;
    *(void *)(v19 + 8) = -1;
    if ((int)v36 >= 2)
    {
      int v37 = 0;
      int v38 = v36 + 1;
      int v39 = (void *)(v19 + 16);
      unsigned int v40 = v36 + 1;
      do
      {
        unsigned int v41 = *(_DWORD *)(v10 + 8 * v37);
        unsigned int v42 = *(_DWORD *)(v10 + 8 * v38);
        BOOL v43 = v41 > v42;
        if (v41 > v42) {
          int v44 = v37;
        }
        else {
          int v44 = v37 + 1;
        }
        if (v43) {
          int v45 = v38 + 1;
        }
        else {
          int v45 = v38;
        }
        if (v43) {
          int v46 = v38;
        }
        else {
          int v46 = v37;
        }
        unsigned int v47 = *(_DWORD *)(v10 + 8 * v44);
        unsigned int v48 = *(_DWORD *)(v10 + 8 * v45);
        BOOL v49 = v47 > v48;
        if (v47 > v48) {
          int v37 = v44;
        }
        else {
          int v37 = v44 + 1;
        }
        if (v49) {
          int v38 = v45 + 1;
        }
        else {
          int v38 = v45;
        }
        if (v49) {
          int v44 = v45;
        }
        *((_DWORD *)v39 - 2) = *(_DWORD *)(v10 + 8 * v44) + *(_DWORD *)(v10 + 8 * v46);
        *((_WORD *)v39 - 2) = v46;
        *((_WORD *)v39 - 1) = v44;
        *v39++ = -1;
        --v40;
      }
      while (v40 > 2);
    }
    v17 *= 2;
  }
  while (!BrotliSetDepth(2 * (int)v36 - 1, v10, (uint64_t)a5, 14));
  unint64_t result = (unint64_t)BrotliConvertBitDepthsToSymbols(a5, v12, a6);
  if (v11 <= 4)
  {
    uint64_t v50 = 0;
    unint64_t v51 = *a7;
    *(void *)(a8 + (*a7 >> 3)) = (1 << (*a7 & 7)) | *(unsigned __int8 *)(a8 + (*a7 >> 3));
    *a7 = v51 + 2;
    *(void *)(a8 + ((v51 + 2) >> 3)) = (v14 << ((v51 + 2) & 7)) | *(unsigned __int8 *)(a8 + ((v51 + 2) >> 3));
    unint64_t v52 = v51 + 4;
    *a7 = v52;
    v53 = (char *)&v88 + 8;
    do
    {
      uint64_t v54 = v50 + 1;
      if (v50 + 1 < v11)
      {
        uint64_t v55 = *((void *)&v88 + v50);
        v56 = (uint64_t *)v53;
        unint64_t v57 = v14;
        do
        {
          uint64_t v58 = *v56;
          unint64_t result = a5[v55];
          if (a5[*v56] < result)
          {
            uint64_t *v56 = v55;
            *((void *)&v88 + v50) = v58;
            uint64_t v55 = v58;
          }
          ++v56;
          --v57;
        }
        while (v57);
      }
      --v14;
      v53 += 8;
      ++v50;
    }
    while (v54 != v11);
    unint64_t v59 = v52 >> 3;
    if (v11 == 3)
    {
      uint64_t v75 = *((void *)&v88 + 1);
      *(void *)(a8 + v59) = ((void)v88 << (v52 & 7)) | *(unsigned __int8 *)(a8 + v59);
      uint64_t v61 = a4;
      unint64_t v76 = v52 + a4;
      *a7 = v76;
      *(void *)(a8 + (v76 >> 3)) = (v75 << (v76 & 7)) | *(unsigned __int8 *)(a8 + (v76 >> 3));
      unint64_t v62 = v76 + a4;
      *a7 = v62;
      *(void *)(a8 + (v62 >> 3)) = ((void)v89 << (v62 & 7)) | *(unsigned __int8 *)(a8 + (v62 >> 3));
    }
    else
    {
      if (v11 != 2)
      {
        long long v78 = v88;
        *(void *)(a8 + v59) = ((void)v88 << (v52 & 7)) | *(unsigned __int8 *)(a8 + v59);
        unint64_t v79 = v52 + a4;
        *a7 = v79;
        *(void *)(a8 + (v79 >> 3)) = (*((void *)&v78 + 1) << (v79 & 7)) | *(unsigned __int8 *)(a8 + (v79 >> 3));
        unint64_t v80 = v79 + a4;
        *a7 = v80;
        uint64_t v81 = *((void *)&v89 + 1);
        *(void *)(a8 + (v80 >> 3)) = ((void)v89 << (v80 & 7)) | *(unsigned __int8 *)(a8 + (v80 >> 3));
        unint64_t v82 = v80 + a4;
        *a7 = v82;
        *(void *)(a8 + (v82 >> 3)) = (v81 << (v82 & 7)) | *(unsigned __int8 *)(a8 + (v82 >> 3));
        unint64_t v83 = v82 + a4;
        *a7 = v83;
        *(void *)(a8 + (v83 >> 3)) = ((unint64_t)(a5[v78] == 1) << (v83 & 7)) | *(unsigned __int8 *)(a8 + (v83 >> 3));
        unint64_t v77 = v83 + 1;
        goto LABEL_100;
      }
      uint64_t v60 = *((void *)&v88 + 1);
      *(void *)(a8 + v59) = ((void)v88 << (v52 & 7)) | *(unsigned __int8 *)(a8 + v59);
      uint64_t v61 = a4;
      unint64_t v62 = v52 + a4;
      *a7 = v62;
      *(void *)(a8 + (v62 >> 3)) = (v60 << (v62 & 7)) | *(unsigned __int8 *)(a8 + (v62 >> 3));
    }
    unint64_t v77 = v62 + v61;
LABEL_100:
    *a7 = v77;
    return result;
  }
  unint64_t v63 = *a7;
  *(void *)(a8 + (*a7 >> 3)) = (0xFF55555554 << (*a7 & 7)) | *(unsigned __int8 *)(a8 + (*a7 >> 3));
  unint64_t v64 = v63 + 40;
  *a7 = v64;
  if (v12)
  {
    unint64_t v65 = 0;
    uint64_t v66 = 8;
    do
    {
      uint64_t v67 = a5[v65];
      if (v65 + 1 >= v12)
      {
        ++v65;
        unint64_t result = 1;
        if (!v67) {
          goto LABEL_93;
        }
      }
      else
      {
        uint64_t v68 = 0;
        unint64_t result = v12 - v65;
        while (a5[v65 + 1 + v68] == v67)
        {
          if (v12 - v65 - 1 == ++v68) {
            goto LABEL_92;
          }
        }
        unint64_t result = v68 + 1;
LABEL_92:
        v65 += result;
        if (!v67)
        {
LABEL_93:
          uint64_t v74 = kZeroRepsDepth[result];
          unint64_t result = (kZeroRepsBits[result] << (v64 & 7)) | *(unsigned __int8 *)(a8 + (v64 >> 3));
          *(void *)(a8 + (v64 >> 3)) = result;
          v64 += v74;
          goto LABEL_94;
        }
      }
      if (v66 != v67)
      {
        uint64_t v69 = kCodeLengthDepth[v67];
        *(void *)(a8 + (v64 >> 3)) = ((unint64_t)kCodeLengthBits[v67] << (v64 & 7)) | *(unsigned __int8 *)(a8 + (v64 >> 3));
        v64 += v69;
        *a7 = v64;
        --result;
      }
      if (result <= 2)
      {
        if (result)
        {
          uint64_t v70 = kCodeLengthDepth[v67];
          uint64_t v71 = kCodeLengthBits[v67];
          do
          {
            *(void *)(a8 + (v64 >> 3)) = (v71 << (v64 & 7)) | *(unsigned __int8 *)(a8 + (v64 >> 3));
            v64 += v70;
            *a7 = v64;
            --result;
          }
          while (result);
        }
        goto LABEL_95;
      }
      unint64_t v72 = result - 3;
      uint64_t v73 = kNonZeroRepsDepth[v72];
      unint64_t result = (kNonZeroRepsBits[v72] << (v64 & 7)) | *(unsigned __int8 *)(a8 + (v64 >> 3));
      *(void *)(a8 + (v64 >> 3)) = result;
      v64 += v73;
      uint64_t v66 = v67;
LABEL_94:
      *a7 = v64;
      uint64_t v67 = v66;
LABEL_95:
      uint64_t v66 = v67;
    }
    while (v65 < v12);
  }
  return result;
}

uint64_t BrotliStoreMetaBlock(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7, uint64_t a8, unsigned int *a9, unsigned int a10, uint64_t a11, uint64_t a12, unint64_t *a13, unint64_t *a14, uint64_t a15)
{
  LODWORD(v103) = a6;
  uint64_t v17 = a15;
  uint64_t v19 = a9[16];
  uint64_t v18 = a9[17];
  int v94 = a8;
  StoreCompressedMetaBlockHeader(a8, a4, a14, a15);
  uint64_t v20 = BrotliAllocate(a1);
  uint64_t v21 = BrotliAllocate(a1);
  uint64_t v22 = v21;
  unint64_t v24 = a13[2];
  uint64_t v23 = (unsigned int *)a13[3];
  unint64_t v25 = *a13;
  unint64_t v26 = a13[1];
  *(void *)uint64_t v21 = 256;
  *(void *)(v21 + 8) = v25;
  *(void *)(v21 + 16) = v24;
  *(void *)(v21 + 24) = v23;
  *(void *)(v21 + 32) = v26;
  *(_OWORD *)(v21 + 40) = xmmword_19F249000;
  *(void *)(v21 + 912) = 0;
  if (v26) {
    uint64_t v27 = *v23;
  }
  else {
    uint64_t v27 = 0;
  }
  *(void *)(v21 + 920) = v27;
  *(void *)(v21 + 928) = 0;
  *(void *)(v21 + 944) = 0;
  *(void *)(v21 + 936) = 0;
  unint64_t v29 = a13[8];
  uint64_t v28 = (unsigned int *)a13[9];
  unint64_t v30 = a13[6];
  unint64_t v31 = a13[7];
  *(void *)(v21 + 952) = 704;
  *(void *)(v21 + 960) = v30;
  *(void *)(v21 + 968) = v29;
  *(void *)(v21 + 976) = v28;
  *(void *)(v21 + 984) = v31;
  *(_OWORD *)(v21 + 992) = xmmword_19F249000;
  *(void *)(v21 + 1864) = 0;
  if (v31) {
    uint64_t v32 = *v28;
  }
  else {
    uint64_t v32 = 0;
  }
  v96 = (void *)(v21 + 952);
  *(void *)(v21 + 1872) = v32;
  v95 = (void *)(v21 + 1904);
  *(void *)(v21 + 1880) = 0;
  *(void *)(v21 + 1896) = 0;
  *(void *)(v21 + 1888) = 0;
  unint64_t v34 = a13[14];
  unint64_t v33 = (unsigned int *)a13[15];
  unint64_t v35 = a13[12];
  unint64_t v36 = a13[13];
  *(void *)(v21 + 1904) = v18;
  *(void *)(v21 + 1912) = v35;
  *(void *)(v21 + 1920) = v34;
  *(void *)(v21 + 1928) = v33;
  *(void *)(v21 + 1936) = v36;
  *(void *)(v21 + 1944) = 1;
  *(void *)(v21 + 1952) = 0;
  *(void *)(v21 + 2816) = 0;
  if (v36) {
    uint64_t v37 = *v33;
  }
  else {
    uint64_t v37 = 0;
  }
  *(void *)(v21 + 2824) = v37;
  *(void *)(v21 + 2832) = 0;
  *(void *)(v21 + 2848) = 0;
  *(void *)(v21 + 2840) = 0;
  BuildAndStoreBlockSwitchEntropyCodes(v21, v20, a14, a15);
  BuildAndStoreBlockSwitchEntropyCodes((uint64_t)v96, v20, a14, a15);
  BuildAndStoreBlockSwitchEntropyCodes((uint64_t)v95, v20, a14, a15);
  unint64_t v38 = *a14;
  *(void *)(a15 + (*a14 >> 3)) = ((unint64_t)a9[14] << (*a14 & 7)) | *(unsigned __int8 *)(a15 + (*a14 >> 3));
  *a14 = v38 + 2;
  *(void *)(a15 + ((v38 + 2) >> 3)) = ((unint64_t)(a9[15] >> a9[14]) << ((v38 + 2) & 7)) | *(unsigned __int8 *)(a15 + ((v38 + 2) >> 3));
  unint64_t v39 = v38 + 6;
  *a14 = v38 + 6;
  if (*a13)
  {
    unint64_t v40 = 0;
    do
    {
      *(void *)(a15 + (v39 >> 3)) = ((unint64_t)a10 << (v39 & 7)) | *(unsigned __int8 *)(a15 + (v39 >> 3));
      v39 += 2;
      *a14 = v39;
      ++v40;
    }
    while (v40 < *a13);
  }
  unint64_t v41 = a13[19];
  if (v41) {
    EncodeContextMap(a1, (char *)(v22 + 2856), (unsigned int *)a13[18], v41, a13[23], v20, a14, a15);
  }
  else {
    StoreTrivialContextMap((unsigned char *)(v22 + 2856), a13[23], 6uLL, v20, a14, a15);
  }
  unint64_t v42 = a13[21];
  if (v42) {
    EncodeContextMap(a1, (char *)(v22 + 2856), (unsigned int *)a13[20], v42, a13[27], v20, a14, a15);
  }
  else {
    StoreTrivialContextMap((unsigned char *)(v22 + 2856), a13[27], 2uLL, v20, a14, a15);
  }
  unint64_t v43 = a13[22];
  unint64_t v44 = a13[23];
  if (*(void *)v22 * v44)
  {
    *(void *)(v22 + 936) = BrotliAllocate(a1);
    uint64_t v45 = BrotliAllocate(a1);
  }
  else
  {
    uint64_t v45 = 0;
    *(void *)(v22 + 936) = 0;
  }
  *(void *)(v22 + 944) = v45;
  if (v44)
  {
    for (uint64_t i = 0; i != v44; ++i)
    {
      BuildAndStoreHuffmanTree(v43, *(void *)v22, 256, v20, (unsigned char *)(*(void *)(v22 + 936) + *(void *)v22 * i), *(void *)(v22 + 944) + 2 * *(void *)v22 * i, a14, a15);
      v43 += 1040;
    }
  }
  unint64_t v47 = a13[24];
  unint64_t v48 = a13[25];
  if (*v96 * v48)
  {
    *(void *)(v22 + 1888) = BrotliAllocate(a1);
    uint64_t v49 = BrotliAllocate(a1);
  }
  else
  {
    uint64_t v49 = 0;
    *(void *)(v22 + 1888) = 0;
  }
  *(void *)(v22 + 1896) = v49;
  if (v48)
  {
    for (uint64_t j = 0; j != v48; ++j)
    {
      BuildAndStoreHuffmanTree(v47, *(void *)(v22 + 952), 704, v20, (unsigned char *)(*(void *)(v22 + 1888) + *(void *)(v22 + 952) * j), *(void *)(v22 + 1896) + 2 * *(void *)(v22 + 952) * j, a14, a15);
      v47 += 2832;
    }
  }
  unint64_t v51 = a13[26];
  unint64_t v52 = a13[27];
  if (*v95 * v52)
  {
    *(void *)(v22 + 2840) = BrotliAllocate(a1);
    uint64_t v53 = a1;
    uint64_t v54 = BrotliAllocate(a1);
  }
  else
  {
    uint64_t v53 = a1;
    uint64_t v54 = 0;
    *(void *)(v22 + 2840) = 0;
  }
  *(void *)(v22 + 2848) = v54;
  if (v52)
  {
    for (uint64_t k = 0; k != v52; ++k)
    {
      BuildAndStoreHuffmanTree(v51, *(void *)(v22 + 1904), v19, v20, (unsigned char *)(*(void *)(v22 + 2840) + *(void *)(v22 + 1904) * k), *(void *)(v22 + 2848) + 2 * *(void *)(v22 + 1904) * k, a14, a15);
      v51 += 2192;
    }
  }
  uint64_t v93 = v53;
  BrotliFree(v53);
  uint64_t v56 = a2;
  unint64_t v57 = a14;
  if (a12)
  {
    uint64_t v58 = 0;
    uint64_t v103 = v103;
    uint64_t v59 = a7;
    do
    {
      uint64_t v60 = (unsigned int *)(a11 + 16 * v58);
      uint64_t v62 = *v60;
      unsigned int v61 = v60[1];
      uint64_t v63 = v60[2];
      unint64_t v97 = *((unsigned __int16 *)v60 + 7);
      uint64_t v99 = *((unsigned __int16 *)v60 + 6);
      StoreSymbol(v96, v99, v57, v17);
      LOWORD(v64) = v62;
      if (v62 >= 6)
      {
        if (v62 > 0x81)
        {
          if (v62 > 0x841)
          {
            __int16 v66 = 22;
            if (v62 >= 0x5842) {
              __int16 v66 = 23;
            }
            LOWORD(v64) = 21;
            if (v62 >> 1 >= 0xC21) {
              LOWORD(v64) = v66;
            }
          }
          else
          {
            LODWORD(v64) = (__clz(v62 - 66) ^ 0x1F) + 10;
          }
        }
        else
        {
          unsigned int v65 = (__clz(v62 - 2) ^ 0x1F) - 1;
          unint64_t v64 = 2 * v65 + ((unint64_t)(v62 - 2) >> v65) + 2;
        }
      }
      uint64_t v67 = (v61 & 0x1FFFFFF) + (char)(HIBYTE(v61) & 0x80 | (v61 >> 25));
      uint64_t v101 = v61 & 0x1FFFFFF;
      if (v67 > 9)
      {
        uint64_t v69 = a5;
        if (v67 > 0x85)
        {
          LODWORD(v68) = (__clz(v67 - 70) ^ 0x1F) + 12;
          if (v67 > 0x845) {
            LOWORD(v68) = 23;
          }
        }
        else
        {
          unsigned int v70 = (__clz(v67 - 6) ^ 0x1F) - 1;
          unint64_t v68 = 2 * v70 + ((unint64_t)(v67 - 6) >> v70) + 4;
        }
      }
      else
      {
        LOWORD(v68) = v61 + (char)(HIBYTE(v61) & 0x80 | (v61 >> 25)) - 2;
        uint64_t v69 = a5;
      }
      uint64_t v71 = (unsigned __int16)v64;
      unsigned int v72 = kBrotliInsExtra[v71];
      uint64_t v73 = (unsigned __int16)v68;
      unint64_t v74 = ((unint64_t)(v67 - *(_DWORD *)((char *)&kBrotliCopyBase + v73 * 4)) << v72) | (v62 - *(_DWORD *)((char *)&kBrotliInsBase + v71 * 4));
      uint64_t v75 = kBrotliCopyExtra[v73] + v72;
      unint64_t v76 = *v57;
      *(void *)(v17 + (*v57 >> 3)) = (v74 << (*(unsigned char *)v57 & 7)) | *(unsigned __int8 *)(v17 + (*v57 >> 3));
      *unint64_t v57 = v76 + v75;
      uint64_t v102 = v58;
      uint64_t v98 = v63;
      if (a13[19])
      {
        unint64_t v77 = v57;
        uint64_t v78 = v69;
        uint64_t v79 = v59;
        uint64_t v80 = v22;
        uint64_t v81 = v103;
        if (v62)
        {
          do
          {
            uint64_t v79 = v81;
            uint64_t v82 = (_kBrotliContextLookupTable[512 * a10 + 256 + v59] | _kBrotliContextLookupTable[512 * a10 + v81]);
            uint64_t v81 = *(unsigned __int8 *)(a2 + (a3 & v78));
            StoreSymbolWithContext((void *)v22, v81, v82, a13[18], v57, a15, 6);
            ++a3;
            uint64_t v59 = v79;
            --v62;
          }
          while (v62);
        }
      }
      else
      {
        if (v62)
        {
          do
          {
            StoreSymbol((void *)v22, *(unsigned __int8 *)(v56 + (a3++ & v69)), v57, v17);
            --v62;
          }
          while (v62);
        }
        uint64_t v79 = v59;
        unint64_t v77 = v57;
        uint64_t v80 = v22;
        uint64_t v81 = v103;
      }
      uint64_t v103 = v81;
      a3 += v101;
      unint64_t v83 = v77;
      uint64_t v17 = a15;
      uint64_t v56 = a2;
      uint64_t v22 = v80;
      unint64_t v57 = v83;
      if (v101)
      {
        uint64_t v79 = *(unsigned __int8 *)(a2 + ((a3 - 2) & a5));
        uint64_t v103 = *(unsigned __int8 *)(a2 + ((a3 - 1) & a5));
        if (v99 >= 0x80)
        {
          uint64_t v84 = v97 & 0x3FF;
          if (a13[21])
          {
            unsigned int v85 = v99 >> 6;
            if (v99 >> 6 != 4 && v85 != 2 && v85 != 7 || (v99 & 7u) >= 3) {
              uint64_t v89 = 3;
            }
            else {
              uint64_t v89 = v99 & 7;
            }
            StoreSymbolWithContext(v95, v84, v89, a13[20], v57, a15, 2);
          }
          else
          {
            StoreSymbol(v95, v84, v83, a15);
          }
          unint64_t v90 = *v57;
          *(void *)(a15 + (*v57 >> 3)) = (v98 << (*v57 & 7)) | *(unsigned __int8 *)(a15 + (*v57 >> 3));
          *unint64_t v57 = v90 + (v97 >> 10);
        }
      }
      uint64_t v58 = v102 + 1;
      uint64_t v59 = v79;
    }
    while (v102 + 1 != a12);
  }
  BrotliFree(v93);
  *(void *)(v22 + 2840) = 0;
  BrotliFree(v93);
  *(void *)(v22 + 2848) = 0;
  BrotliFree(v93);
  *(void *)(v22 + 1888) = 0;
  BrotliFree(v93);
  *(void *)(v22 + 1896) = 0;
  BrotliFree(v93);
  *(void *)(v22 + 936) = 0;
  BrotliFree(v93);
  *(void *)(v22 + 944) = 0;
  uint64_t result = BrotliFree(v93);
  if (v94)
  {
    unsigned int v92 = *(_DWORD *)v57 + 7;
    *unint64_t v57 = v92 & 0xFFFFFFF8;
    *(unsigned char *)(v17 + (v92 >> 3)) = 0;
  }
  return result;
}

uint64_t StoreCompressedMetaBlockHeader(uint64_t result, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v4 = *a3;
  *(void *)(a4 + (*a3 >> 3)) = ((uint64_t)(int)result << (*(unsigned char *)a3 & 7)) | *(unsigned __int8 *)(a4 + (*a3 >> 3));
  unint64_t v5 = v4 + 1;
  *a3 = v4 + 1;
  if (result)
  {
    *(void *)(a4 + (v5 >> 3)) = *(unsigned __int8 *)(a4 + (v5 >> 3));
    *a3 = v4 + 2;
    if (a2 == 1 || (unsigned int v6 = __clz(a2 - 1) ^ 0x1F, v6 <= 0xE)) {
      uint64_t v7 = 4;
    }
    else {
      uint64_t v7 = (v6 + 4) >> 2;
    }
    *(void *)(a4 + ((v4 + 2) >> 3)) = ((v7 - 4) << ((v4 + 2) & 7)) | *(unsigned __int8 *)(a4 + ((v4 + 2) >> 3));
    unint64_t v10 = v4 + 4;
    *a3 = v10;
    *(void *)(a4 + (v10 >> 3)) = ((a2 - 1) << (v10 & 7)) | *(unsigned __int8 *)(a4 + (v10 >> 3));
    unint64_t v11 = v10 + 4 * v7;
  }
  else
  {
    if (a2 == 1 || (unsigned int v8 = __clz(a2 - 1) ^ 0x1F, v8 <= 0xE)) {
      uint64_t v9 = 4;
    }
    else {
      uint64_t v9 = (v8 + 4) >> 2;
    }
    *(void *)(a4 + (v5 >> 3)) = ((v9 - 4) << (v5 & 7)) | *(unsigned __int8 *)(a4 + (v5 >> 3));
    unint64_t v12 = v4 + 3;
    *a3 = v12;
    *(void *)(a4 + (v12 >> 3)) = ((a2 - 1) << (v12 & 7)) | *(unsigned __int8 *)(a4 + (v12 >> 3));
    unint64_t v13 = v12 + 4 * v9;
    *a3 = v13;
    *(void *)(a4 + (v13 >> 3)) = *(unsigned __int8 *)(a4 + (v13 >> 3));
    unint64_t v11 = v13 + 1;
  }
  *a3 = v11;
  return result;
}

unint64_t BuildAndStoreBlockSwitchEntropyCodes(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = *(unsigned int **)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  unint64_t v10 = *(void *)(a1 + 8);
  uint64_t v9 = *(unsigned __int8 **)(a1 + 16);
  __memset_chk();
  memset(v38, 0, sizeof(v38));
  uint64_t v39 = 0;
  if (v8)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 1;
    do
    {
      uint64_t v14 = v9[v11];
      if (v11)
      {
        if (v12 == v14) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = v14 + 2;
        }
        if (v13 + 1 == v14) {
          uint64_t v15 = 1;
        }
        ++v40[v15];
      }
      unsigned int v16 = v7[v11];
      if (v16 <= 0x2F0) {
        uint64_t v17 = 14;
      }
      else {
        uint64_t v17 = 20;
      }
      if (v16 <= 0x28) {
        uint64_t v18 = 0;
      }
      else {
        uint64_t v18 = 7;
      }
      if (v16 <= 0xB0) {
        uint64_t v19 = v18;
      }
      else {
        uint64_t v19 = v17;
      }
      uint64_t v20 = (unsigned __int16 *)((char *)&_kBrotliPrefixCodeRanges + 4 * v19 + 4);
      do
      {
        unsigned int v21 = v19;
        if (v19 == 25) {
          break;
        }
        ++v19;
        unsigned int v22 = *v20;
        v20 += 2;
      }
      while (v16 >= v22);
      ++*((_DWORD *)v38 + v21);
      ++v11;
      uint64_t v12 = v13;
      uint64_t v13 = v14;
    }
    while (v11 != v8);
  }
  unint64_t result = StoreVarLenUint8(v10 - 1, a3, a4);
  if (v10 >= 2)
  {
    BuildAndStoreHuffmanTree((unint64_t)v40, v10 + 2, v10 + 2, a2, (unsigned char *)(a1 + 56), a1 + 314, a3, a4);
    unint64_t result = BuildAndStoreHuffmanTree((unint64_t)v38, 0x1AuLL, 26, a2, (unsigned char *)(a1 + 830), a1 + 856, a3, a4);
    unsigned int v24 = *v7;
    uint64_t v25 = *(void *)(a1 + 40);
    *(void *)(a1 + 40) = *v9;
    *(void *)(a1 + 48) = v25;
    uint64_t v26 = 14;
    if (v24 > 0x2F0) {
      uint64_t v26 = 20;
    }
    uint64_t v27 = 7;
    if (v24 <= 0x28) {
      uint64_t v27 = 0;
    }
    if (v24 <= 0xB0) {
      uint64_t v28 = v27;
    }
    else {
      uint64_t v28 = v26;
    }
    unint64_t v29 = (unsigned __int16 *)((char *)&_kBrotliPrefixCodeRanges + 4 * v28 + 4);
    do
    {
      unsigned int v30 = v28;
      if (v28 == 25) {
        break;
      }
      ++v28;
      unsigned int v31 = *v29;
      v29 += 2;
    }
    while (v24 >= v31);
    uint64_t v32 = (unsigned __int16 *)((char *)&_kBrotliPrefixCodeRanges + 4 * v30);
    uint64_t v33 = *((unsigned __int8 *)v32 + 2);
    uint64_t v34 = v24 - *v32;
    uint64_t v35 = *(unsigned __int8 *)(a1 + 40 + v30 + 790);
    unint64_t v36 = *a3;
    *(void *)(a4 + (*a3 >> 3)) = ((unint64_t)*(unsigned __int16 *)(a1 + 40 + 2 * v30 + 816) << (*(unsigned char *)a3 & 7)) | *(unsigned __int8 *)(a4 + (*a3 >> 3));
    *a3 = v36 + v35;
    *(void *)(a4 + ((v36 + v35) >> 3)) = (v34 << ((v36 + v35) & 7)) | *(unsigned __int8 *)(a4 + ((v36 + v35) >> 3));
    *a3 = v36 + v35 + v33;
  }
  return result;
}

unint64_t StoreTrivialContextMap(unsigned char *a1, unint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  unint64_t result = StoreVarLenUint8(a2 - 1, a5, a6);
  if (a2 >= 2)
  {
    uint64_t v25 = a4;
    unint64_t v13 = a3 - 1;
    unint64_t v14 = a3 - 1 + a2;
    uint64_t v15 = a1 + 1088;
    unsigned int v16 = a1 + 1360;
    bzero(a1, 4 * v14);
    unint64_t v17 = *a5;
    *(void *)(a6 + (*a5 >> 3)) = (1 << (*a5 & 7)) | *(unsigned __int8 *)(a6 + (*a5 >> 3));
    *a5 = v17 + 1;
    *(void *)(a6 + ((v17 + 1) >> 3)) = ((a3 - 2) << ((v17 + 1) & 7)) | *(unsigned __int8 *)(a6 + ((v17 + 1) >> 3));
    *a5 = v17 + 5;
    *(_DWORD *)&a1[4 * a3 - 4] = a2;
    *(_DWORD *)a1 = 1;
    if (v14 > a3) {
      memset_pattern16(&a1[4 * a3], &unk_19F22A1E0, 4 * a2 - 4);
    }
    unint64_t result = BuildAndStoreHuffmanTree((unint64_t)a1, a3 - 1 + a2, a3 - 1 + a2, v25, a1 + 1088, (uint64_t)(a1 + 1360), a5, a6);
    uint64_t v18 = 0;
    unint64_t v19 = *a5;
    do
    {
      uint64_t v20 = v13 + v18;
      if (!v18) {
        uint64_t v20 = 0;
      }
      uint64_t v21 = v15[v20];
      *(void *)(a6 + (v19 >> 3)) = ((unint64_t)*(unsigned __int16 *)&v16[2 * v20] << (v19 & 7)) | *(unsigned __int8 *)(a6 + (v19 >> 3));
      unint64_t v22 = v19 + v21;
      *a5 = v22;
      uint64_t v23 = v15[v13];
      *(void *)(a6 + (v22 >> 3)) = ((unint64_t)*(unsigned __int16 *)&v16[2 * v13] << (v22 & 7)) | *(unsigned __int8 *)(a6 + (v22 >> 3));
      unint64_t v24 = v22 + v23;
      *a5 = v24;
      *(void *)(a6 + (v24 >> 3)) = ((unint64_t)~(-1 << (a3 - 1)) << (v24 & 7)) | *(unsigned __int8 *)(a6 + (v24 >> 3));
      unint64_t v19 = v24 + v13;
      *a5 = v24 + v13;
      ++v18;
    }
    while (a2 != v18);
    *(void *)(a6 + (v19 >> 3)) = (1 << (v19 & 7)) | *(unsigned __int8 *)(a6 + (v19 >> 3));
    *a5 = v24 + a3;
  }
  return result;
}

uint64_t EncodeContextMap(uint64_t a1, char *a2, unsigned int *a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t *a7, uint64_t a8)
{
  *(void *)&v61[255] = *MEMORY[0x1E4F143B8];
  uint64_t result = StoreVarLenUint8(a5 - 1, a7, a8);
  if (a5 == 1) {
    return result;
  }
  uint64_t v17 = BrotliAllocate(a1);
  unsigned int v18 = *a3;
  uint64_t v58 = a5;
  uint64_t v59 = a6;
  if (a4 >= 2)
  {
    unint64_t v19 = a4 - 1;
    uint64_t v20 = a3 + 1;
    do
    {
      unsigned int v22 = *v20++;
      unsigned int v21 = v22;
      if (v22 > v18) {
        unsigned int v18 = v21;
      }
      --v19;
    }
    while (v19);
  }
  uint64_t v23 = 0;
  unint64_t v24 = a2 + 1088;
  do
  {
    v61[v23 - 1] = v23;
    ++v23;
  }
  while (v18 + 1 != v23);
  if (!a4) {
    goto LABEL_43;
  }
  uint64_t v57 = a1;
  uint64_t v25 = 0;
  size_t v26 = v18 + 1;
  LOBYTE(a1) = __src;
  do
  {
    if (v26)
    {
      size_t v27 = 0;
      LODWORD(a1) = LOBYTE(a3[v25]);
      while (v61[v27 - 1] != a1)
      {
        if (v26 == ++v27)
        {
          LOBYTE(a1) = v61[v26 - 1];
          size_t v27 = v26;
          break;
        }
      }
      *(_DWORD *)(v17 + 4 * v25) = v27;
      if (v27) {
        memmove(v61, &__src, v27);
      }
    }
    else
    {
      *(_DWORD *)(v17 + 4 * v25) = 0;
    }
    char __src = a1;
    ++v25;
  }
  while (v25 != a4);
  unsigned int v28 = 0;
  unint64_t v29 = 0;
  a1 = v57;
  unint64_t v24 = a2 + 1088;
  do
  {
    if (a4 <= v29 + 1) {
      unint64_t v30 = v29 + 1;
    }
    else {
      unint64_t v30 = a4;
    }
    unsigned int v31 = (_DWORD *)(v17 + 4 * v29);
    while (*(_DWORD *)(v17 + 4 * v29))
    {
      ++v29;
      ++v31;
      if (v30 == v29)
      {
        unsigned int v35 = 0;
LABEL_39:
        if (v35 > v28) {
          unsigned int v28 = v35;
        }
        goto LABEL_41;
      }
    }
    if (a4 <= v29)
    {
      unsigned int v34 = 0;
    }
    else
    {
      uint64_t v32 = 0;
      while (!*v31++)
      {
        if (v29 - a4 == --v32)
        {
          unsigned int v35 = a4 - v29;
          goto LABEL_39;
        }
      }
      v29 -= v32;
      unsigned int v34 = -(int)v32;
    }
    if (v34 > v28) {
      unsigned int v28 = v34;
    }
  }
  while (v29 < a4);
LABEL_41:
  if (v28) {
    unsigned int v36 = __clz(v28) ^ 0x1F;
  }
  else {
LABEL_43:
  }
    unsigned int v36 = 0;
  if (v36 >= 6) {
    unsigned int v37 = 6;
  }
  else {
    unsigned int v37 = v36;
  }
  if (!a4)
  {
    bzero(a2, 0x440uLL);
    uint64_t v38 = 0;
    BOOL v46 = 1;
    uint64_t v47 = (uint64_t)(a2 + 1360);
    goto LABEL_72;
  }
  uint64_t v38 = 0;
  unint64_t v39 = 0;
  unsigned int v40 = 2 << v37;
  do
  {
    int v41 = *(_DWORD *)(v17 + 4 * v39);
    if (v41)
    {
      *(_DWORD *)(v17 + 4 * v38) = v41 + v37;
      ++v39;
LABEL_51:
      ++v38;
      continue;
    }
    if (v39 + 1 >= a4)
    {
      unsigned int v42 = 1;
      ++v39;
      goto LABEL_62;
    }
    unsigned int v42 = a4 - v39;
    uint64_t v43 = 1;
    while (!*(_DWORD *)(v17 + 4 * v39 + 4 * v43))
    {
      if (a4 - v39 == ++v43) {
        goto LABEL_61;
      }
    }
    unsigned int v42 = v43;
LABEL_61:
    v39 += v42;
    if (v42)
    {
LABEL_62:
      while (1)
      {
        unsigned int v44 = v42 - v40;
        if (v42 < v40) {
          break;
        }
        *(_DWORD *)(v17 + 4 * v38++) = v37 | (~(-1 << v37) << 9);
        unsigned int v42 = v44 + 1;
        if (v44 == -1) {
          goto LABEL_52;
        }
      }
      unsigned int v45 = __clz(v42);
      *(_DWORD *)(v17 + 4 * v38) = v45 ^ 0x1F | (((-1 << (v45 ^ 0x1F)) + v42) << 9);
      goto LABEL_51;
    }
LABEL_52:
    ;
  }
  while (v39 < a4);
  bzero(a2, 0x440uLL);
  BOOL v46 = v38 == 0;
  uint64_t v47 = (uint64_t)(a2 + 1360);
  if (v38)
  {
    for (uint64_t i = 0; i != v38; ++i)
    {
      uint64_t v49 = *(_DWORD *)(v17 + 4 * i) & 0x1FF;
      ++*(_DWORD *)&a2[4 * v49];
    }
  }
  else
  {
    BOOL v46 = 1;
  }
LABEL_72:
  unint64_t v50 = *a7;
  *(void *)(a8 + (*a7 >> 3)) = ((unint64_t)(v37 != 0) << (*(unsigned char *)a7 & 7)) | *(unsigned __int8 *)(a8 + (*a7 >> 3));
  *a7 = v50 + 1;
  if (v37)
  {
    *(void *)(a8 + ((v50 + 1) >> 3)) = ((unint64_t)(v37 - 1) << ((v50 + 1) & 7)) | *(unsigned __int8 *)(a8 + ((v50 + 1) >> 3));
    *a7 = v50 + 5;
  }
  BuildAndStoreHuffmanTree((unint64_t)a2, v58 + v37, v58 + v37, v59, v24, v47, a7, a8);
  unint64_t v51 = *a7;
  if (!v46)
  {
    unint64_t v52 = (unsigned int *)v17;
    do
    {
      unsigned int v54 = *v52++;
      unint64_t v53 = v54;
      uint64_t v55 = v54 & 0x1FF;
      uint64_t v56 = v24[v55];
      *(void *)(a8 + (v51 >> 3)) = ((unint64_t)*(unsigned __int16 *)(v47 + 2 * v55) << (v51 & 7)) | *(unsigned __int8 *)(a8 + (v51 >> 3));
      v51 += v56;
      *a7 = v51;
      if ((int)v55 - 1 < v37)
      {
        *(void *)(a8 + (v51 >> 3)) = (v53 >> 9 << (v51 & 7)) | *(unsigned __int8 *)(a8 + (v51 >> 3));
        v51 += v55;
        *a7 = v51;
      }
      --v38;
    }
    while (v38);
  }
  *(void *)(a8 + (v51 >> 3)) = (1 << (v51 & 7)) | *(unsigned __int8 *)(a8 + (v51 >> 3));
  *a7 = v51 + 1;
  return BrotliFree(a1);
}

void *StoreSymbol(void *result, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v4 = result[115];
  if (!v4)
  {
    uint64_t v5 = result[114] + 1;
    result[114] = v5;
    uint64_t v6 = *(unsigned int *)(result[3] + 4 * v5);
    uint64_t v7 = *(unsigned __int8 *)(result[2] + v5);
    result[115] = v6;
    result[116] = *result * v7;
    uint64_t v8 = result[5];
    if (v8 + 1 == v7)
    {
      uint64_t v9 = 1;
    }
    else if (result[6] == v7)
    {
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v9 = v7 + 2;
    }
    result[5] = v7;
    result[6] = v8;
    uint64_t v10 = *((unsigned __int8 *)result + v9 + 56);
    uint64_t v11 = *((unsigned __int16 *)result + v9 + 157);
    unint64_t v12 = *a3;
    *(void *)(a4 + (*a3 >> 3)) = (v11 << (*(unsigned char *)a3 & 7)) | *(unsigned __int8 *)(a4 + (*a3 >> 3));
    unint64_t v13 = v12 + v10;
    *a3 = v13;
    uint64_t v14 = 14;
    if (v6 > 0x2F0) {
      uint64_t v14 = 20;
    }
    uint64_t v15 = 7;
    if (v6 <= 0x28) {
      uint64_t v15 = 0;
    }
    if (v6 <= 0xB0) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v14;
    }
    uint64_t v17 = (unsigned __int16 *)((char *)&_kBrotliPrefixCodeRanges + 4 * v16 + 4);
    do
    {
      unsigned int v18 = v16;
      if (v16 == 25) {
        break;
      }
      ++v16;
      unsigned int v19 = *v17;
      v17 += 2;
    }
    while (v6 >= v19);
    uint64_t v20 = (unsigned __int16 *)((char *)&_kBrotliPrefixCodeRanges + 4 * v18);
    uint64_t v21 = *((unsigned __int8 *)v20 + 2);
    uint64_t v22 = v6 - *v20;
    uint64_t v23 = *((unsigned __int8 *)result + v18 + 830);
    *(void *)(a4 + (v13 >> 3)) = ((unint64_t)*((unsigned __int16 *)result + v18 + 428) << (v13 & 7)) | *(unsigned __int8 *)(a4 + (v13 >> 3));
    unint64_t v24 = v13 + v23;
    *a3 = v24;
    *(void *)(a4 + (v24 >> 3)) = (v22 << (v24 & 7)) | *(unsigned __int8 *)(a4 + (v24 >> 3));
    *a3 = v24 + v21;
    uint64_t v4 = result[115];
  }
  result[115] = v4 - 1;
  uint64_t v25 = result[116] + a2;
  uint64_t v26 = *(unsigned __int8 *)(result[117] + v25);
  unint64_t v27 = *a3;
  *(void *)(a4 + (*a3 >> 3)) = ((unint64_t)*(unsigned __int16 *)(result[118] + 2 * v25) << (*(unsigned char *)a3 & 7)) | *(unsigned __int8 *)(a4 + (*a3 >> 3));
  *a3 = v27 + v26;
  return result;
}

void *StoreSymbolWithContext(void *result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, char a7)
{
  uint64_t v7 = result[115];
  if (!v7)
  {
    uint64_t v8 = result[114] + 1;
    result[114] = v8;
    uint64_t v9 = *(unsigned int *)(result[3] + 4 * v8);
    uint64_t v10 = *(unsigned __int8 *)(result[2] + v8);
    result[115] = v9;
    result[116] = v10 << a7;
    uint64_t v11 = result[5];
    if (v11 + 1 == v10)
    {
      uint64_t v12 = 1;
    }
    else if (result[6] == v10)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = v10 + 2;
    }
    result[5] = v10;
    result[6] = v11;
    uint64_t v13 = *((unsigned __int8 *)result + v12 + 56);
    uint64_t v14 = *((unsigned __int16 *)result + v12 + 157);
    unint64_t v15 = *a5;
    *(void *)(a6 + (*a5 >> 3)) = (v14 << (*(unsigned char *)a5 & 7)) | *(unsigned __int8 *)(a6 + (*a5 >> 3));
    unint64_t v16 = v15 + v13;
    *a5 = v16;
    uint64_t v17 = 14;
    if (v9 > 0x2F0) {
      uint64_t v17 = 20;
    }
    uint64_t v18 = 7;
    if (v9 <= 0x28) {
      uint64_t v18 = 0;
    }
    if (v9 <= 0xB0) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = v17;
    }
    uint64_t v20 = (unsigned __int16 *)((char *)&_kBrotliPrefixCodeRanges + 4 * v19 + 4);
    do
    {
      unsigned int v21 = v19;
      if (v19 == 25) {
        break;
      }
      ++v19;
      unsigned int v22 = *v20;
      v20 += 2;
    }
    while (v9 >= v22);
    uint64_t v23 = (unsigned __int16 *)((char *)&_kBrotliPrefixCodeRanges + 4 * v21);
    uint64_t v24 = *((unsigned __int8 *)v23 + 2);
    uint64_t v25 = v9 - *v23;
    uint64_t v26 = *((unsigned __int8 *)result + v21 + 830);
    *(void *)(a6 + (v16 >> 3)) = ((unint64_t)*((unsigned __int16 *)result + v21 + 428) << (v16 & 7)) | *(unsigned __int8 *)(a6 + (v16 >> 3));
    unint64_t v27 = v16 + v26;
    *a5 = v27;
    *(void *)(a6 + (v27 >> 3)) = (v25 << (v27 & 7)) | *(unsigned __int8 *)(a6 + (v27 >> 3));
    *a5 = v27 + v24;
    uint64_t v7 = result[115];
  }
  result[115] = v7 - 1;
  uint64_t v28 = a2 + *result * *(unsigned int *)(a4 + 4 * (result[116] + a3));
  uint64_t v29 = *(unsigned __int8 *)(result[117] + v28);
  unint64_t v30 = *a5;
  *(void *)(a6 + (*a5 >> 3)) = ((unint64_t)*(unsigned __int16 *)(result[118] + 2 * v28) << (*(unsigned char *)a5 & 7)) | *(unsigned __int8 *)(a6 + (*a5 >> 3));
  *a5 = v30 + v29;
  return result;
}

uint64_t BrotliStoreMetaBlockTrivial(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t *a10, uint64_t a11)
{
  int v25 = a6;
  uint64_t v17 = BrotliAllocate(a1);
  uint64_t v24 = *(unsigned int *)(a7 + 64);
  StoreCompressedMetaBlockHeader(a6, a4, a10, a11);
  bzero((void *)v17, 0x400uLL);
  *(void *)(v17 + 1024) = 0;
  *(void *)(v17 + 1032) = 0x7FF0000000000000;
  bzero((void *)(v17 + 1040), 0xB00uLL);
  *(void *)(v17 + 3856) = 0;
  *(void *)(v17 + 3864) = 0x7FF0000000000000;
  bzero((void *)(v17 + 3872), 0x880uLL);
  *(void *)(v17 + 6048) = 0;
  *(void *)(v17 + 6056) = 0x7FF0000000000000;
  BuildHistograms(a2, a3, a5, a8, a9, v17, v17 + 1040, v17 + 3872);
  unint64_t v18 = *a10;
  *(void *)(a11 + (*a10 >> 3)) = *(unsigned __int8 *)(a11 + (*a10 >> 3));
  *a10 = v18 + 13;
  BuildAndStoreHuffmanTree(v17, 0x100uLL, 256, v17 + 9364, (unsigned char *)(v17 + 6064), v17 + 6320, a10, a11);
  BuildAndStoreHuffmanTree(v17 + 1040, 0x2C0uLL, 704, v17 + 9364, (unsigned char *)(v17 + 6832), v17 + 7536, a10, a11);
  BuildAndStoreHuffmanTree(v17 + 3872, 0x8CuLL, v24, v17 + 9364, (unsigned char *)(v17 + 8944), v17 + 9084, a10, a11);
  StoreDataWithHuffmanCodes(a2, a3, a5, a8, a9, v17 + 6064, v17 + 6320, v17 + 6832, v17 + 7536, v17 + 8944, v17 + 9084, a10, a11);
  uint64_t result = BrotliFree(a1);
  if (v25)
  {
    unsigned int v20 = *(_DWORD *)a10 + 7;
    *a10 = v20 & 0xFFFFFFF8;
    *(unsigned char *)(a11 + (v20 >> 3)) = 0;
  }
  return result;
}

uint64_t BuildHistograms(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a5)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *(void *)(a7 + 2816);
    do
    {
      uint64_t v10 = (unsigned int *)(a4 + 16 * v8);
      uint64_t v12 = *v10;
      unsigned int v11 = v10[1];
      uint64_t v13 = *((unsigned __int16 *)v10 + 6);
      __int16 v14 = *((_WORD *)v10 + 7);
      ++*(_DWORD *)(a7 + 4 * v13);
      *(void *)(a7 + 2816) = ++v9;
      if (v12)
      {
        uint64_t v15 = *(void *)(a6 + 1024) + 1;
        do
        {
          ++*(_DWORD *)(a6 + 4 * *(unsigned __int8 *)(result + (a2 & a3)));
          *(void *)(a6 + 1024) = v15;
          ++a2;
          ++v15;
          --v12;
        }
        while (v12);
      }
      uint64_t v16 = v11 & 0x1FFFFFF;
      if (v16)
      {
        if (v13 >= 0x80)
        {
          ++*(_DWORD *)(a8 + 4 * (v14 & 0x3FF));
          ++*(void *)(a8 + 2176);
        }
      }
      a2 += v16;
      ++v8;
    }
    while (v8 != a5);
  }
  return result;
}

unint64_t BuildAndStoreHuffmanTree(unint64_t result, size_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, uint64_t a6, unint64_t *a7, uint64_t a8)
{
  uint64_t v14 = result;
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  long long v44 = 0u;
  long long v45 = 0u;
  if (a2)
  {
    uint64_t v15 = 0;
    unint64_t v16 = 0;
    do
    {
      if (*(_DWORD *)(result + 4 * v15))
      {
        if (v16 > 3)
        {
          if (v16 != 4) {
            break;
          }
        }
        else
        {
          *((void *)&v44 + v16) = v15;
        }
        ++v16;
      }
      ++v15;
    }
    while (a2 != v15);
  }
  else
  {
    unint64_t v16 = 0;
  }
  uint64_t v17 = 0;
  unint64_t v18 = a3 - 1;
  if (a3 != 1)
  {
    do
    {
      ++v17;
      BOOL v19 = v18 > 1;
      v18 >>= 1;
    }
    while (v19);
  }
  unint64_t v20 = v16 - 1;
  if (v16 <= 1)
  {
    unint64_t v21 = *a7;
    *(void *)(a8 + (*a7 >> 3)) = (1 << (*a7 & 7)) | *(unsigned __int8 *)(a8 + (*a7 >> 3));
    v21 += 4;
    *a7 = v21;
    uint64_t v22 = v44;
    *(void *)(a8 + (v21 >> 3)) = ((void)v44 << (v21 & 7)) | *(unsigned __int8 *)(a8 + (v21 >> 3));
    *a7 = v21 + v17;
    a5[v22] = 0;
    *(_WORD *)(a6 + 2 * v22) = 0;
    return result;
  }
  bzero(a5, a2);
  BrotliCreateHuffmanTree(v14, a2, 15, a4, (uint64_t)a5);
  uint64_t result = (unint64_t)BrotliConvertBitDepthsToSymbols(a5, a2, a6);
  if (v16 <= 4)
  {
    uint64_t v23 = 0;
    unint64_t v24 = *a7;
    *(void *)(a8 + (*a7 >> 3)) = (1 << (*a7 & 7)) | *(unsigned __int8 *)(a8 + (*a7 >> 3));
    *a7 = v24 + 2;
    *(void *)(a8 + ((v24 + 2) >> 3)) = (v20 << ((v24 + 2) & 7)) | *(unsigned __int8 *)(a8 + ((v24 + 2) >> 3));
    unint64_t v25 = v24 + 4;
    *a7 = v25;
    uint64_t v26 = (char *)&v44 + 8;
    do
    {
      uint64_t v27 = v23 + 1;
      if (v23 + 1 < v16)
      {
        uint64_t v28 = *((void *)&v44 + v23);
        uint64_t v29 = (uint64_t *)v26;
        unint64_t v30 = v20;
        do
        {
          uint64_t v31 = *v29;
          uint64_t result = a5[v28];
          if (a5[*v29] < result)
          {
            *uint64_t v29 = v28;
            *((void *)&v44 + v23) = v31;
            uint64_t v28 = v31;
          }
          ++v29;
          --v30;
        }
        while (v30);
      }
      --v20;
      v26 += 8;
      ++v23;
    }
    while (v27 != v16);
    unint64_t v32 = v25 >> 3;
    if (v16 == 3)
    {
      uint64_t v35 = *((void *)&v44 + 1);
      *(void *)(a8 + v32) = ((void)v44 << (v25 & 7)) | *(unsigned __int8 *)(a8 + v32);
      unint64_t v36 = v25 + v17;
      *a7 = v36;
      *(void *)(a8 + (v36 >> 3)) = (v35 << (v36 & 7)) | *(unsigned __int8 *)(a8 + (v36 >> 3));
      unint64_t v34 = v36 + v17;
      *a7 = v34;
      *(void *)(a8 + (v34 >> 3)) = ((void)v45 << (v34 & 7)) | *(unsigned __int8 *)(a8 + (v34 >> 3));
    }
    else
    {
      if (v16 != 2)
      {
        long long v38 = v44;
        *(void *)(a8 + v32) = ((void)v44 << (v25 & 7)) | *(unsigned __int8 *)(a8 + v32);
        unint64_t v39 = v25 + v17;
        *a7 = v39;
        *(void *)(a8 + (v39 >> 3)) = (*((void *)&v38 + 1) << (v39 & 7)) | *(unsigned __int8 *)(a8 + (v39 >> 3));
        unint64_t v40 = v39 + v17;
        *a7 = v40;
        uint64_t v41 = *((void *)&v45 + 1);
        *(void *)(a8 + (v40 >> 3)) = ((void)v45 << (v40 & 7)) | *(unsigned __int8 *)(a8 + (v40 >> 3));
        unint64_t v42 = v40 + v17;
        *a7 = v42;
        *(void *)(a8 + (v42 >> 3)) = (v41 << (v42 & 7)) | *(unsigned __int8 *)(a8 + (v42 >> 3));
        unint64_t v43 = v42 + v17;
        *a7 = v43;
        *(void *)(a8 + (v43 >> 3)) = ((unint64_t)(a5[v38] == 1) << (v43 & 7)) | *(unsigned __int8 *)(a8 + (v43 >> 3));
        unint64_t v37 = v43 + 1;
        goto LABEL_32;
      }
      uint64_t v33 = *((void *)&v44 + 1);
      *(void *)(a8 + v32) = ((void)v44 << (v25 & 7)) | *(unsigned __int8 *)(a8 + v32);
      unint64_t v34 = v25 + v17;
      *a7 = v34;
      *(void *)(a8 + (v34 >> 3)) = (v33 << (v34 & 7)) | *(unsigned __int8 *)(a8 + (v34 >> 3));
    }
    unint64_t v37 = v34 + v17;
LABEL_32:
    *a7 = v37;
    return result;
  }
  return BrotliStoreHuffmanTree((uint64_t)a5, a2, a4, a7, a8);
}

uint64_t StoreDataWithHuffmanCodes(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13)
{
  if (a5)
  {
    uint64_t v13 = 0;
    unint64_t v14 = *a12;
    do
    {
      uint64_t v15 = (unsigned int *)(a4 + 16 * v13);
      uint64_t v16 = *v15;
      unsigned int v17 = v15[1];
      uint64_t v18 = v15[2];
      uint64_t v19 = *((unsigned __int16 *)v15 + 6);
      unint64_t v20 = *((unsigned __int16 *)v15 + 7);
      uint64_t v21 = *(unsigned __int8 *)(a8 + v19);
      *(void *)(a13 + (v14 >> 3)) = ((unint64_t)*(unsigned __int16 *)(a9 + 2 * v19) << (v14 & 7)) | *(unsigned __int8 *)(a13 + (v14 >> 3));
      unint64_t v22 = v14 + v21;
      *a12 = v22;
      LOWORD(v23) = v16;
      if (v16 >= 6)
      {
        if (v16 > 0x81)
        {
          if (v16 > 0x841)
          {
            if (v16 >> 1 >= 0xC21)
            {
              if (v16 < 0x5842) {
                LOWORD(v23) = 22;
              }
              else {
                LOWORD(v23) = 23;
              }
            }
            else
            {
              LOWORD(v23) = 21;
            }
          }
          else
          {
            LODWORD(v23) = (__clz(v16 - 66) ^ 0x1F) + 10;
          }
        }
        else
        {
          unsigned int v24 = (__clz(v16 - 2) ^ 0x1F) - 1;
          unint64_t v23 = 2 * v24 + ((unint64_t)(v16 - 2) >> v24) + 2;
        }
      }
      int v25 = HIBYTE(v17) & 0x80 | (v17 >> 25);
      uint64_t v26 = v17 & 0x1FFFFFF;
      uint64_t v27 = (v26 + (char)v25);
      if (v27 > 9)
      {
        if (v27 > 0x85)
        {
          unsigned int v30 = (__clz(v27 - 70) ^ 0x1F) + 12;
          if (v27 <= 0x845) {
            LOWORD(v28) = v30;
          }
          else {
            LOWORD(v28) = 23;
          }
        }
        else
        {
          unsigned int v29 = (__clz(v27 - 6) ^ 0x1F) - 1;
          unint64_t v28 = 2 * v29 + ((unint64_t)(v27 - 6) >> v29) + 4;
        }
      }
      else
      {
        LOWORD(v28) = v26 + (char)v25 - 2;
      }
      uint64_t v31 = 4 * (unsigned __int16)v23;
      int v32 = *(_DWORD *)((char *)&kBrotliInsExtra + v31);
      uint64_t v33 = 4 * (unsigned __int16)v28;
      unint64_t v34 = ((unint64_t)(v27 - *(_DWORD *)((char *)&kBrotliCopyBase + v33)) << v32) | (v16 - *(_DWORD *)((char *)&kBrotliInsBase + v31));
      uint64_t v35 = (*(_DWORD *)((char *)&kBrotliCopyExtra + v33) + v32);
      *(void *)(a13 + (v22 >> 3)) = (v34 << (v22 & 7)) | *(unsigned __int8 *)(a13 + (v22 >> 3));
      unint64_t v14 = v22 + v35;
      *a12 = v14;
      if (v16)
      {
        do
        {
          uint64_t v36 = *(unsigned __int8 *)(result + (a2 & a3));
          uint64_t v37 = *(unsigned __int8 *)(a6 + v36);
          *(void *)(a13 + (v14 >> 3)) = ((unint64_t)*(unsigned __int16 *)(a7 + 2 * v36) << (v14 & 7)) | *(unsigned __int8 *)(a13 + (v14 >> 3));
          v14 += v37;
          *a12 = v14;
          ++a2;
          --v16;
        }
        while (v16);
      }
      if (v26)
      {
        if (v19 >= 0x80)
        {
          uint64_t v38 = *(unsigned __int8 *)(a10 + (v20 & 0x3FF));
          *(void *)(a13 + (v14 >> 3)) = ((unint64_t)*(unsigned __int16 *)(a11 + 2 * (v20 & 0x3FF)) << (v14 & 7)) | *(unsigned __int8 *)(a13 + (v14 >> 3));
          *a12 = v14 + v38;
          *(void *)(a13 + ((v14 + v38) >> 3)) = (v18 << ((v14 + v38) & 7)) | *(unsigned __int8 *)(a13
                                                                                                  + ((v14 + v38) >> 3));
          v14 += v38 + (v20 >> 10);
          *a12 = v14;
        }
      }
      a2 += v26;
      ++v13;
    }
    while (v13 != a5);
  }
  return result;
}

uint64_t BrotliStoreMetaBlockFast(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unint64_t *a10, uint64_t a11)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v17 = BrotliAllocate(a1);
  int v18 = *(_DWORD *)(a7 + 64);
  StoreCompressedMetaBlockHeader(a6, a4, a10, a11);
  unint64_t v19 = *a10;
  *(void *)(a11 + (*a10 >> 3)) = *(unsigned __int8 *)(a11 + (*a10 >> 3));
  *a10 = v19 + 13;
  if (a9 > 0x80)
  {
    bzero((void *)v17, 0x400uLL);
    *(void *)(v17 + 1024) = 0;
    *(void *)(v17 + 1032) = 0x7FF0000000000000;
    bzero((void *)(v17 + 1040), 0xB00uLL);
    *(void *)(v17 + 3856) = 0;
    *(void *)(v17 + 3864) = 0x7FF0000000000000;
    bzero((void *)(v17 + 3872), 0x880uLL);
    *(void *)(v17 + 6048) = 0;
    *(void *)(v17 + 6056) = 0x7FF0000000000000;
    BuildHistograms(a2, a3, a5, a8, a9, v17, v17 + 1040, v17 + 3872);
    BrotliBuildAndStoreHuffmanTreeFast(v17 + 9364, v17, *(void *)(v17 + 1024), 8, (unsigned char *)(v17 + 6064), v17 + 6320, a10, a11);
    BrotliBuildAndStoreHuffmanTreeFast(v17 + 9364, v17 + 1040, *(void *)(v17 + 3856), 10, (unsigned char *)(v17 + 6832), v17 + 7536, a10, a11);
    BrotliBuildAndStoreHuffmanTreeFast(v17 + 9364, v17 + 3872, *(void *)(v17 + 6048), (__clz(v18 - 1) ^ 0x1F) + 1, (unsigned char *)(v17 + 8944), v17 + 9084, a10, a11);
    StoreDataWithHuffmanCodes(a2, a3, a5, a8, a9, v17 + 6064, v17 + 6320, v17 + 6832, v17 + 7536, v17 + 8944, v17 + 9084, a10, a11);
  }
  else
  {
    bzero(v31, 0x400uLL);
    if (a9)
    {
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = a3;
      do
      {
        unint64_t v23 = (unsigned int *)(a8 + 16 * v20);
        uint64_t v24 = *v23;
        if (v24)
        {
          uint64_t v25 = *v23;
          do
          {
            ++v31[*(unsigned __int8 *)(a2 + (v22++ & a5))];
            --v25;
          }
          while (v25);
        }
        v21 += v24;
        v22 += v23[1] & 0x1FFFFFF;
        ++v20;
      }
      while (v20 != a9);
    }
    else
    {
      uint64_t v21 = 0;
    }
    BrotliBuildAndStoreHuffmanTreeFast(v17 + 9364, (uint64_t)v31, v21, 8, (unsigned char *)(v17 + 6064), v17 + 6320, a10, a11);
    unint64_t v26 = *a10;
    *(void *)(a11 + (*a10 >> 3)) = (0x92624416307003 << (*a10 & 7)) | *(unsigned __int8 *)(a11 + (*a10 >> 3));
    *a10 = v26 + 56;
    *(void *)(a11 + ((v26 + 56) >> 3)) = *(unsigned __int8 *)(a11 + ((v26 + 56) >> 3));
    *a10 = v26 + 59;
    *(void *)(a11 + ((v26 + 59) >> 3)) = (57269251 << ((v26 + 59) & 7)) | *(unsigned __int8 *)(a11
                                                                                                 + ((v26 + 59) >> 3));
    *a10 = v26 + 87;
    StoreDataWithHuffmanCodes(a2, a3, a5, a8, a9, v17 + 6064, v17 + 6320, (uint64_t)&kStaticCommandCodeDepth, (uint64_t)&kStaticCommandCodeBits, (uint64_t)&kStaticDistanceCodeDepth, (uint64_t)&kStaticDistanceCodeBits, a10, a11);
  }
  uint64_t result = BrotliFree(a1);
  if (a6)
  {
    unsigned int v28 = *(_DWORD *)a10 + 7;
    *a10 = v28 & 0xFFFFFFF8;
    *(unsigned char *)(a11 + (v28 >> 3)) = 0;
  }
  return result;
}

void *BrotliStoreUncompressedMetaBlock(int a1, uint64_t a2, uint64_t a3, uint64_t a4, size_t a5, unint64_t *a6, uint64_t a7)
{
  size_t v9 = a5;
  uint64_t v12 = a4 & a3;
  unint64_t v13 = *a6;
  *(void *)(a7 + (*a6 >> 3)) = *(unsigned __int8 *)(a7 + (*a6 >> 3));
  if (a5 == 1 || (unsigned int v14 = __clz(a5 - 1) ^ 0x1F, v14 <= 0xE)) {
    uint64_t v15 = 4;
  }
  else {
    uint64_t v15 = (v14 + 4) >> 2;
  }
  *(void *)(a7 + ((v13 + 1) >> 3)) = ((v15 - 4) << ((v13 + 1) & 7)) | *(unsigned __int8 *)(a7 + ((v13 + 1) >> 3));
  unint64_t v16 = v13 + 3;
  *(void *)(a7 + (v16 >> 3)) = ((a5 - 1) << (v16 & 7)) | *(unsigned __int8 *)(a7 + (v16 >> 3));
  *a6 = v16;
  unint64_t v17 = v16 + 4 * v15;
  *(void *)(a7 + (v17 >> 3)) = (1 << (v17 & 7)) | *(unsigned __int8 *)(a7 + (v17 >> 3));
  unsigned int v18 = v17 + 8;
  unint64_t v19 = v18 & 0xFFFFFFF8;
  uint64_t v20 = (unsigned char *)(a7 + (v19 >> 3));
  *uint64_t v20 = 0;
  uint64_t v21 = a4 + 1;
  if (v12 + a5 <= a4 + 1)
  {
    unint64_t v23 = v18 >> 3;
  }
  else
  {
    uint64_t v22 = v21 - v12;
    memcpy(v20, (const void *)(a2 + v12), v21 - v12);
    uint64_t v12 = 0;
    v19 += 8 * v22;
    v9 -= v22;
    unint64_t v23 = v19 >> 3;
  }
  uint64_t result = memcpy((void *)(a7 + v23), (const void *)(a2 + v12), v9);
  size_t v25 = v19 + 8 * v9;
  *a6 = v25;
  *(unsigned char *)(a7 + (v25 >> 3)) = 0;
  if (a1)
  {
    *(void *)(a7 + (v25 >> 3)) = 1 << (v19 & 7);
    *(void *)(a7 + ((v25 + 1) >> 3)) = (1 << ((v25 + 1) & 7)) | *(unsigned __int8 *)(a7 + ((v25 + 1) >> 3));
    unsigned int v26 = v25 + 9;
    *a6 = v26 & 0xFFFFFFF8;
    *(unsigned char *)(a7 + (v26 >> 3)) = 0;
  }
  return result;
}

uint64_t StoreVarLenUint8(uint64_t result, unint64_t *a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = __clz(result) ^ 0x1F;
    unint64_t v4 = *a2;
    *(void *)(a3 + (*a2 >> 3)) = (1 << (*a2 & 7)) | *(unsigned __int8 *)(a3 + (*a2 >> 3));
    *a2 = v4 + 1;
    *(void *)(a3 + ((v4 + 1) >> 3)) = (v3 << ((v4 + 1) & 7)) | *(unsigned __int8 *)(a3 + ((v4 + 1) >> 3));
    v4 += 4;
    *a2 = v4;
    *(void *)(a3 + (v4 >> 3)) = (((-1 << v3) + result) << (v4 & 7)) | *(unsigned __int8 *)(a3 + (v4 >> 3));
    unint64_t v5 = v4 + v3;
  }
  else
  {
    unint64_t v6 = *a2;
    *(void *)(a3 + (*a2 >> 3)) = *(unsigned __int8 *)(a3 + (*a2 >> 3));
    unint64_t v5 = v6 + 1;
  }
  *a2 = v5;
  return result;
}

uint64_t BrotliDecoderStateInit(uint64_t a1, void *(*a2)(int a1, size_t size), void (*a3)(int a1, void *a2), uint64_t a4)
{
  if (a2) {
    uint64_t v8 = a2;
  }
  else {
    uint64_t v8 = BrotliDefaultAllocFunc;
  }
  if (a2) {
    size_t v9 = a3;
  }
  else {
    size_t v9 = BrotliDefaultFreeFunc;
  }
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  if (a2) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = 0;
  }
  *(void *)(a1 + 64) = v10;
  *(_DWORD *)(a1 + 128) = 0;
  BrotliInitBitReader((void *)(a1 + 8));
  int v11 = *(_DWORD *)(a1 + 772);
  *(void *)(a1 + 80) = 0;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 88) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 408) = 0;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(void *)(a1 + 744) = 0;
  *(_OWORD *)(a1 + 752) = 0u;
  *(_DWORD *)(a1 + 768) = 0;
  *(_OWORD *)(a1 + 784) = 0u;
  *(_DWORD *)(a1 + 772) = v11 & 0xFFFFF000 | 0x10;
  *(_OWORD *)(a1 + 112) = xmmword_19F24DB90;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 440) = 63;
  *(void *)(a1 + 808) = 0;
  uint64_t result = (uint64_t)BrotliSharedDictionaryCreateInstance(a2, a3, a4);
  *(void *)(a1 + 800) = result;
  if (result)
  {
    *(void *)(a1 + 736) = 0;
    *(_OWORD *)(a1 + 720) = 0u;
    return 1;
  }
  return result;
}

double BrotliDecoderStateMetablockBegin(uint64_t a1)
{
  *(_DWORD *)(a1 + 132) = 0;
  *(void *)(a1 + 280) = 0x1000000;
  *(int64x2_t *)(a1 + 288) = vdupq_n_s64(0x1000000uLL);
  *(void *)(a1 + 312) = 1;
  *(int64x2_t *)(a1 + 320) = vdupq_n_s64(1uLL);
  *(_OWORD *)(a1 + 336) = xmmword_19F249000;
  *(_OWORD *)(a1 + 352) = xmmword_19F249000;
  *(_OWORD *)(a1 + 368) = xmmword_19F249000;
  *(unsigned char *)(a1 + 716) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(void *)(a1 + 192) = 0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 784) = 0u;
  return result;
}

uint64_t BrotliDecoderStateCleanupAfterMetablock(uint64_t a1)
{
  (*(void (**)(void, void))(a1 + 56))(*(void *)(a1 + 64), *(void *)(a1 + 792));
  *(void *)(a1 + 792) = 0;
  (*(void (**)(void, void))(a1 + 56))(*(void *)(a1 + 64), *(void *)(a1 + 784));
  *(void *)(a1 + 784) = 0;
  (*(void (**)(void, void))(a1 + 56))(*(void *)(a1 + 64), *(void *)(a1 + 408));
  *(void *)(a1 + 408) = 0;
  (*(void (**)(void, void))(a1 + 56))(*(void *)(a1 + 64), *(void *)(a1 + 184));
  *(void *)(a1 + 184) = 0;
  (*(void (**)(void, void))(a1 + 56))(*(void *)(a1 + 64), *(void *)(a1 + 208));
  *(void *)(a1 + 208) = 0;
  uint64_t result = (*(uint64_t (**)(void, void))(a1 + 56))(*(void *)(a1 + 64), *(void *)(a1 + 232));
  *(void *)(a1 + 232) = 0;
  return result;
}

uint64_t BrotliDecoderStateCleanup(uint64_t a1)
{
  BrotliDecoderStateCleanupAfterMetablock(a1);
  (*(void (**)(void, void))(a1 + 56))(*(void *)(a1 + 64), *(void *)(a1 + 808));
  *(void *)(a1 + 808) = 0;
  BrotliSharedDictionaryDestroyInstance(*(void **)(a1 + 800));
  *(void *)(a1 + 800) = 0;
  (*(void (**)(void, void))(a1 + 56))(*(void *)(a1 + 64), *(void *)(a1 + 136));
  *(void *)(a1 + 136) = 0;
  uint64_t result = (*(uint64_t (**)(void, void))(a1 + 56))(*(void *)(a1 + 64), *(void *)(a1 + 256));
  *(void *)(a1 + 256) = 0;
  return result;
}

BOOL BrotliDecoderHuffmanTreeGroupInit(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  __int16 v6 = a4;
  uint64_t v9 = (*(uint64_t (**)(void, uint64_t))(a1 + 48))(*(void *)(a1 + 64), (4 * a4 + 1512) * a5);
  *(_WORD *)(a2 + 16) = a3;
  *(_WORD *)(a2 + 18) = v6;
  *(_WORD *)(a2 + 20) = a5;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v9 + 8 * a5;
  return v9 != 0;
}

id JetEngineBootstrap.URLProtocolHandler.make(using:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = v1[1];
  if (v3)
  {
    if (v3 == 1)
    {
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 2;
      uint64_t v7 = 1;
    }
    else
    {
      uint64_t v4 = v1[2];
      uint64_t v5 = v1[3];
      uint64_t v7 = *v1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v6 = 0;
    }
  }
  else
  {
    char v6 = 2;
    uint64_t v7 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  id v8 = objc_msgSend(self, sel_currentProcess);
  id v9 = sub_19EF64A38((uint64_t)v8, v2);

  sub_19EF249E4(v7, v3, v4, v5, v6);
  return v9;
}

uint64_t sub_19EF249E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
  {
    return swift_release();
  }
  else if (!a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void JetEngineBootstrap.init(bagProfile:process:bagSpy:protocolHandler:)(long long *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, void *a6@<X8>)
{
  long long v28 = *a1;
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  uint64_t v11 = *a5;
  uint64_t v12 = a5[1];
  uint64_t v13 = a5[3];
  uint64_t v29 = a5[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392D00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24DBA0;
  *(void *)(inited + 64) = &type metadata for Bag.Profile;
  uint64_t v15 = swift_allocObject();
  *(void *)(inited + 40) = v15;
  *(_OWORD *)(v15 + 16) = v28;
  *(void *)(v15 + 32) = v9;
  *(void *)(v15 + 40) = v10;
  *(void *)(inited + 32) = &type metadata for Bag.Profile;
  uint64_t v16 = sub_19EEBDC10(0, &qword_1EB392278);
  *(void *)(inited + 104) = v16;
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 80) = a2;
  if (a3)
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a3;
    *(void *)(v17 + 24) = a4;
    unsigned int v18 = sub_19EF3C5FC;
  }
  else
  {
    unsigned int v18 = 0;
    uint64_t v17 = 0;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946E6A0);
  *(void *)(inited + 144) = v19;
  *(void *)(inited + 120) = v18;
  *(void *)(inited + 128) = v17;
  *(void *)(inited + 112) = v19;
  *(void *)(inited + 184) = &type metadata for JetEngineBootstrap.URLProtocolHandler;
  uint64_t v20 = (void *)swift_allocObject();
  *(void *)(inited + 160) = v20;
  v20[2] = v11;
  v20[3] = v12;
  v20[4] = v29;
  v20[5] = v13;
  *(void *)(inited + 152) = &type metadata for JetEngineBootstrap.URLProtocolHandler;
  uint64_t v21 = self;
  id v22 = a2;
  sub_19EE47F40(a3);
  id v23 = objc_msgSend(v21, sel_ams_sharedAccountStore);
  uint64_t v32 = sub_19EEBDC10(0, qword_1EB392F30);
  uint64_t v33 = &protocol witness table for ACAccountStore;
  *(void *)&long long v31 = v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392340);
  *(void *)(inited + 192) = v24;
  *(void *)(inited + 224) = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(inited + 200) = v25;
  sub_19EEBB420(&v31, v25 + 16);
  sub_19EE6D228();
  *(void *)&long long v31 = sub_19F1DBB7C();
  sub_19EE6C294(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v26 = v31;
  type metadata accessor for BaseObjectGraph();
  uint64_t v27 = (void *)swift_allocObject();
  v27[3] = 0xD000000000000020;
  v27[4] = 0x800000019F268F50;
  v27[2] = v26;
  sub_19EE83660(a3);

  *a6 = v27;
}

uint64_t sub_19EF24D08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19EF24D48()
{
  if (*(void *)(v0 + 24) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19EF24D90()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t JetEngineBootstrap.withBagProfile(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  v10[4] = (uint64_t)&type metadata for Bag.Profile;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v4;
  v7[3] = v3;
  v7[4] = v6;
  v7[5] = v5;
  v10[0] = (uint64_t)&type metadata for Bag.Profile;
  v10[1] = (uint64_t)v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = sub_19EEAA240(v10);
  swift_release();
  *a2 = v8;
  return sub_19EEABFA4((uint64_t)v10);
}

uint64_t JetEngineBootstrap.withProcess(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v8 = sub_19EEBDC10(0, &qword_1EB392278);
  v7[0] = v8;
  v7[1] = (uint64_t)a1;
  id v4 = a1;
  swift_retain();
  uint64_t v5 = sub_19EEAA240(v7);
  swift_release();
  *a2 = v5;
  return sub_19EEABFA4((uint64_t)v7);
}

uint64_t JetEngineBootstrap.withBagSpy(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (a1)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = a2;
    uint64_t v7 = sub_19EF4C65C;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946E6A0);
  v10[1] = (uint64_t)v7;
  v10[2] = v6;
  v10[0] = v11;
  sub_19EE47F40(a1);
  swift_retain();
  uint64_t v8 = sub_19EEAA240(v10);
  swift_release();
  *a3 = v8;
  return sub_19EEABFA4((uint64_t)v10);
}

uint64_t JetEngineBootstrap.withProtocolHandler(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v10[4] = (uint64_t)&type metadata for JetEngineBootstrap.URLProtocolHandler;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = v4;
  uint64_t v7[4] = v5;
  v7[5] = v6;
  v10[0] = (uint64_t)&type metadata for JetEngineBootstrap.URLProtocolHandler;
  v10[1] = (uint64_t)v7;
  sub_19EF3C628(v3, v4);
  swift_retain();
  uint64_t v8 = sub_19EEAA240(v10);
  swift_release();
  *a2 = v8;
  return sub_19EEABFA4((uint64_t)v10);
}

uint64_t JetEngineBootstrap.withAccountProvider(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392340);
  uint64_t v7 = swift_allocObject();
  sub_19EEC4154(a1, v7 + 16);
  uint64_t v6 = v8;
  swift_retain();
  uint64_t v4 = sub_19EEAA240(&v6);
  swift_release();
  *a2 = v4;
  return sub_19EEABFA4((uint64_t)&v6);
}

uint64_t JetEngineBootstrap.start()()
{
  uint64_t v1 = *v0;
  swift_retain();
  sub_19EF3434C((uint64_t)sub_19EF253D0, 0, v1, MEMORY[0x1E4FBC860], v31);
  uint64_t v2 = v31[4];
  __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  AsyncObjectGraphBuilder.withDependenciesSatisfied.getter(v2, v28);
  uint64_t v3 = v29;
  uint64_t v4 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  uint64_t v5 = sub_19EEBDC10(0, &qword_1EB391BF0);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t), void, uint64_t, uint64_t, uint64_t))(v4 + 8))(v25, v5, sub_19EF257F4, 0, v5, v3, v4);
  uint64_t v6 = v26;
  uint64_t v7 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v8 = sub_19EEBDC10(0, qword_1EB392F30);
  AsyncObjectGraphBuilder.satisfying<A>(_:with:)(v8, (uint64_t)sub_19EF26200, 0, v6, v8, v7);
  uint64_t v10 = v23;
  uint64_t v9 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DD58);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_19F24DBB0;
  *(void *)(v11 + 32) = &type metadata for Bag;
  *(void *)(v11 + 40) = v5;
  *(void *)(v11 + 48) = sub_19EEBDC10(0, &qword_1EB392278);
  *(void *)(v11 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392340);
  *(void *)(v11 + 64) = v8;
  *(void *)(v11 + 72) = &type metadata for AsyncObjectGraphMetrics;
  uint64_t v18 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DD20);
  uint64_t v13 = sub_19EEA5E10(&qword_1E946DD28, &qword_1E946DD20);
  AsyncObjectGraphBuilder.subtracting<A>(allDependenciesExcept:)((uint64_t)&v18, v10, v12, v9, v13, v19);
  swift_bridgeObjectRelease();
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  swift_release();
  return v16;
}

uint64_t sub_19EF253D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v30 = a1;
  uint64_t v5 = type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_19EF29064(v6, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  uint64_t v7 = v31;
  if (!v31)
  {
    uint64_t v26 = 0x800000019F269450;
    uint64_t v27 = sub_19EF278F8;
    uint64_t v28 = 0xD000000000000028;
LABEL_12:
    sub_19EF3D0E4(v28, v26, v27);
    goto LABEL_13;
  }
  uint64_t v8 = v30;
  uint64_t v10 = v32;
  uint64_t v9 = v33;
  uint64_t v30 = a1;
  swift_retain();
  v29[1] = v5;
  swift_task_localValuePush();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_19EE24F58(v11);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  if (v12)
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v8;
    *(void *)(v13 + 24) = v7;
    *(void *)(v13 + 32) = v10;
    *(void *)(v13 + 40) = v9;
    *(void *)(v13 + 48) = v12;
    *(unsigned char *)(v13 + 56) = 0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391058);
    uint64_t v14 = swift_allocObject();
    v29[0] = v10;
    uint64_t v15 = v8;
    uint64_t v16 = v14;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
    uint64_t v17 = swift_allocObject();
    *(_DWORD *)(v17 + 16) = 0;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    *(void *)(v16 + 16) = v17;
    *(void *)(v16 + 24) = v18;
    *(unsigned char *)(v16 + 32) = 0;
    uint64_t v19 = sub_19F1DC37C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = &unk_1E9470BE0;
    v20[5] = v13;
    v20[6] = v16;
    id v21 = v12;
    swift_retain();
    sub_19EF4C374(v15, v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v22 = v21;
    sub_19EE9A0F8((uint64_t)v4, (uint64_t)&unk_1E9470BF0, (uint64_t)v20);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_19EF4C3B8(v15, v7);
    uint64_t v30 = a1;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = (void (*)(uint64_t *))sub_19EF28D20(v23);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    if (!v24) {
      return v16;
    }
    if (v24 != (void (*)(uint64_t *))1)
    {
      uint64_t v30 = v16;
      swift_retain();
      v24(&v30);
      sub_19EF4C3FC((uint64_t)v24);
      sub_19EF4C3FC((uint64_t)v24);
      return v16;
    }
    uint64_t v28 = 0xD00000000000003FLL;
    uint64_t v26 = 0x800000019F2693D0;
    uint64_t v27 = sub_19EF27134;
    goto LABEL_12;
  }
  sub_19EF3C670();
LABEL_13:
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19EF257F4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E9C0);
  uint64_t v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v5 + 16) = v6;
  *(void *)(v5 + 24) = v7;
  *(unsigned char *)(v5 + 32) = 0;
  uint64_t v8 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_1E9470BC8;
  v9[5] = a1;
  v9[6] = v5;
  swift_retain();
  swift_retain();
  sub_19EE9A0F8((uint64_t)v4, (uint64_t)&unk_1E9470BD0, (uint64_t)v9);
  swift_release();
  return v5;
}

uint64_t sub_19EF2595C(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_1E9471D80 + dword_1E9471D80);
  uint64_t v3 = (void *)swift_task_alloc();
  v2[14] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_19EF25A04;
  return v5();
}

uint64_t sub_19EF25A04(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 120) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_19EF25B38, 0, 0);
  }
}

uint64_t sub_19EF25B38()
{
  if (*(void *)(v0 + 120))
  {
    uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1E9473638 + dword_1E9473638);
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v1;
    void *v1 = v0;
    v1[1] = sub_19EF25C48;
    return v3(v0 + 88);
  }
  else
  {
    sub_19EF3C670();
    return sub_19F1DCFCC();
  }
}

uint64_t sub_19EF25C48()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {

    return MEMORY[0x1F4188298](sub_19EF261B8, 0, 0);
  }
  else
  {
    *(void *)(v2 + 144) = *(void *)(v2 + 88);
    uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9473680 + dword_1E9473680);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 152) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_19EF25DF0;
    return v5(v2 + 56);
  }
}

uint64_t sub_19EF25DF0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void **)(v2 + 120);
    swift_unknownObjectRelease();

    uint64_t v4 = sub_19EF261D0;
  }
  else
  {
    uint64_t v4 = sub_19EF25F14;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19EF25F14()
{
  unint64_t v1 = *(void *)(v0 + 64);
  if (v1)
  {
    if (v1 == 1)
    {
      unint64_t v1 = 0;
      uint64_t v2 = 0;
      uint64_t v3 = 0;
      char v4 = 2;
      uint64_t v5 = 1;
    }
    else
    {
      uint64_t v2 = *(void *)(v0 + 72);
      uint64_t v3 = *(void *)(v0 + 80);
      uint64_t v5 = *(void *)(v0 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19EF4BE88(v5, v1);
      char v4 = 0;
    }
  }
  else
  {
    char v4 = 2;
    uint64_t v5 = 0;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  uint64_t v6 = *(void *)(v0 + 120);
  sub_19EEBDC10(0, &qword_1EB391BF0);
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v3;
  *(unsigned char *)(v0 + 48) = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_19EF2606C;
  uint64_t v8 = *(void *)(v0 + 144);
  return AMSURLSession.init(process:bag:urlProtocol:)(v6, v8, v0 + 16);
}

uint64_t sub_19EF2606C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_19EF261E8;
  }
  else
  {
    *(void *)(v4 + 184) = a1;
    uint64_t v5 = sub_19EF26194;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_19EF26194()
{
  **(void **)(v0 + 96) = *(void *)(v0 + 184);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19EF261B8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19EF261D0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19EF261E8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_19EF26200@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_19EE1E784(v2);
  swift_bridgeObjectRelease();
  id result = (id)swift_task_localValuePop();
  if (!v3)
  {
    id result = objc_msgSend(self, sel_ams_sharedAccountStore);
    uint64_t v3 = (uint64_t)result;
  }
  *a1 = v3;
  return result;
}

uint64_t JetEngineBootstrap.bagProfile.getter@<X0>(void *a1@<X8>)
{
  return sub_19EF26310(a1);
}

uint64_t sub_19EF26310@<X0>(void *a1@<X8>)
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_19EF29064(v2, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  uint64_t result = swift_task_localValuePop();
  uint64_t v4 = v8;
  if (v8)
  {
    uint64_t v6 = v9;
    uint64_t v5 = v10;
    *a1 = v7;
    a1[1] = v4;
    a1[2] = v6;
    a1[3] = v5;
  }
  else
  {
    sub_19EF3D0E4(0xD000000000000028, 0x800000019F269450, sub_19EF278F8);
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  return result;
}

uint64_t sub_19EF26444@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_19EF293A8(v2, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_task_localValuePop();
  uint64_t v4 = v6;
  if (v6 == 2)
  {
    sub_19EF3D0E4(0xD000000000000033, 0x800000019F269390, sub_19EF27CD8);
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
    *(_OWORD *)(a1 + 16) = v7;
  }
  return result;
}

uint64_t JetEngineBootstrap.process.getter()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_19EE24F58(v0);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  if (v1) {
    return v1;
  }
  sub_19EF3C670();
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t (*JetEngineBootstrap.bagSpy.getter())(uint64_t a1)
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_19EF28D20(v0);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  if (!v1) {
    return (uint64_t (*)(uint64_t))v1;
  }
  if (v1 != 1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v3;
    return sub_19EF3CAB8;
  }
  sub_19EF3D0E4(0xD00000000000003FLL, 0x800000019F2693D0, sub_19EF27134);
  uint64_t result = (uint64_t (*)(uint64_t))sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t JetEngineBootstrap.protocolHandler.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EF26444(a1);
}

uint64_t JetEngineBootstrap.accounts.getter()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_19EF296FC(v0);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  if (!v1)
  {
    if (qword_1E946FCE0 != -1) {
      swift_once();
    }
    uint64_t v1 = qword_1E946FC88;
    swift_retain();
  }
  return v1;
}

uint64_t JetEngineBootstrap.withAccounts(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392D00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24DBC0;
  uint64_t v5 = type metadata accessor for Unstable.Accounts();
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 40) = a1;
  *(void *)(inited + 32) = v5;
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = sub_19EEBDC10(0, qword_1EB392F30);
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = v6;
  uint64_t v14 = v5;
  uint64_t v15 = &protocol witness table for Unstable.Accounts;
  *(void *)&long long v13 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392340);
  *(void *)(inited + 112) = v8;
  *(void *)(inited + 144) = v8;
  uint64_t v9 = swift_allocObject();
  *(void *)(inited + 120) = v9;
  sub_19EEBB420(&v13, v9 + 16);
  swift_retain_n();
  swift_retain();
  id v10 = v6;
  uint64_t v11 = sub_19EEA91D4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_release();
  *a2 = v11;
  return result;
}

uint64_t sub_19EF26A38(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_19EFF6490(0, v2, 0);
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_19EFF6490(v6 > 1, v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

void *sub_19EF26AFC(void (*a1)(void **__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = v14[0];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = sub_19EEAE860(0, v14[0][2] + 1, 1, v14[0]);
  }
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_19EEAE860((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  v8[2] = v10 + 1;
  uint64_t v11 = &v8[2 * v10];
  v11[4] = a3;
  v11[5] = a4;
  v14[3] = v8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5A8);
  uint64_t v12 = swift_task_localValuePush();
  a1(v14, v12);
  swift_task_localValuePop();
  if (v4) {
    return (void *)swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v14[0];
}

uint64_t sub_19EF26C68(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  unint64_t v7 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v7 = sub_19EEAE860(0, v13[2] + 1, 1, v13);
  }
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_19EEAE860((void *)(v8 > 1), v9 + 1, 1, v7);
  }
  v7[2] = v9 + 1;
  unint64_t v10 = &v7[2 * v9];
  uint64_t v10[4] = a3;
  uint64_t v10[5] = a4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5A8);
  uint64_t v11 = swift_task_localValuePush();
  a1(v11);
  swift_task_localValuePop();
  return swift_bridgeObjectRelease();
}

void *sub_19EF26DBC(void (*a1)(void **__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  unint64_t v8 = v14;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v8 = sub_19EEAE860(0, v14[2] + 1, 1, v14);
  }
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_19EEAE860((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  v8[2] = v10 + 1;
  uint64_t v11 = &v8[2 * v10];
  v11[4] = a3;
  v11[5] = a4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5A8);
  uint64_t v12 = swift_task_localValuePush();
  a1(&v14, v12);
  swift_task_localValuePop();
  if (v4) {
    return (void *)swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v14;
}

void *sub_19EF26F28(void (*a1)(void **__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  unint64_t v8 = v14[0];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v8 = sub_19EEAE860(0, v14[0][2] + 1, 1, v14[0]);
  }
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_19EEAE860((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  v8[2] = v10 + 1;
  uint64_t v11 = &v8[2 * v10];
  v11[4] = a3;
  v11[5] = a4;
  v14[4] = v8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5A8);
  uint64_t v12 = swift_task_localValuePush();
  a1(v14, v12);
  swift_task_localValuePop();
  if (v4) {
    return (void *)swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v14[0];
}

uint64_t sub_19EF27098()
{
  return sub_19EE97D88((uint64_t *)&unk_1EB392350);
}

uint64_t sub_19EF270A4()
{
  return sub_19EE97D88(&qword_1E9470B90);
}

uint64_t sub_19EF270B0()
{
  return sub_19EE97D88(&qword_1E9470B50);
}

uint64_t sub_19EF270BC()
{
  return sub_19EE97D88(&qword_1E946CCF0);
}

uint64_t sub_19EF270C8()
{
  return sub_19EE97D88(&qword_1E946CF30);
}

uint64_t sub_19EF270D4()
{
  return sub_19EE97D88(&qword_1E94708D0);
}

uint64_t sub_19EF270E0()
{
  return sub_19EE97D88(&qword_1E94709A8);
}

uint64_t sub_19EF270EC()
{
  return sub_19EE97D88((uint64_t *)&unk_1E94709C8);
}

uint64_t sub_19EF270F8()
{
  return sub_19EE97D88((uint64_t *)&unk_1E9470968);
}

uint64_t sub_19EF27104()
{
  return sub_19EE97D88(&qword_1E9470990);
}

uint64_t sub_19EF27110()
{
  return sub_19EE97D88(&qword_1E9470928);
}

uint64_t sub_19EF2711C()
{
  return sub_19EE97D88((uint64_t *)&unk_1E9470958);
}

uint64_t sub_19EF27128()
{
  return sub_19EE97D88(&qword_1E9470940);
}

uint64_t sub_19EF27134(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v21 = result + 112;
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v22 = v2;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(a1 + 56);
    *(void *)&v25[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    sub_19EEBDBA4(v11 + 32 * v10, (uint64_t)v25 + 8);
LABEL_13:
    sub_19EEBDC4C((uint64_t)v25, (uint64_t)&v27, &qword_1EB390808);
    uint64_t v15 = v27;
    if (!v27)
    {
      swift_release();
      return (uint64_t)v23;
    }
    sub_19EEBDC00(&v28, v25);
    __swift_instantiateConcreteTypeFromMangledName(qword_1E946E6A0);
    if (swift_dynamicCast())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v23 = sub_19F09D3C8(0, v23[2] + 1, 1, v23);
      }
      unint64_t v20 = v23[2];
      unint64_t v19 = v23[3];
      if (v20 >= v19 >> 1) {
        uint64_t v23 = sub_19F09D3C8((void *)(v19 > 1), v20 + 1, 1, v23);
      }
      v23[2] = v20 + 1;
      v23[v20 + 4] = v15;
      sub_19EE83660(v24);
LABEL_32:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      uint64_t v2 = v22;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B58);
      if (swift_dynamicCast()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B60), swift_dynamicCast())
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B68), swift_dynamicCast()))
      {
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = sub_19F09D3C8(0, v23[2] + 1, 1, v23);
        }
        unint64_t v17 = v23[2];
        unint64_t v16 = v23[3];
        if (v17 >= v16 >> 1) {
          uint64_t v23 = sub_19F09D3C8((void *)(v16 > 1), v17 + 1, 1, v23);
        }
        v23[2] = v17 + 1;
        v23[v17 + 4] = v15;
        goto LABEL_32;
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
  }
  int64_t v12 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v12 >= v6)
    {
      int64_t v14 = v8;
LABEL_12:
      unint64_t v5 = 0;
      uint64_t v26 = 0;
      int64_t v8 = v14;
      memset(v25, 0, sizeof(v25));
      goto LABEL_13;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    if (v13) {
      goto LABEL_10;
    }
    int64_t v18 = v8 + 2;
    int64_t v14 = v8 + 1;
    if (v8 + 2 >= v6) {
      goto LABEL_12;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v18);
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 3 >= v6) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * (v8 + 3));
      if (v13)
      {
        int64_t v12 = v8 + 3;
        goto LABEL_10;
      }
      int64_t v18 = v8 + 4;
      int64_t v14 = v8 + 3;
      if (v8 + 4 >= v6) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v18);
      if (!v13)
      {
        int64_t v12 = v8 + 5;
        int64_t v14 = v8 + 4;
        if (v8 + 5 >= v6) {
          goto LABEL_12;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v12);
        if (!v13)
        {
          while (v6 - 6 != v8)
          {
            unint64_t v13 = *(void *)(v21 + 8 * v8++);
            if (v13)
            {
              int64_t v12 = v8 + 5;
              goto LABEL_10;
            }
          }
          int64_t v14 = v6 - 1;
          goto LABEL_12;
        }
        goto LABEL_10;
      }
    }
    int64_t v12 = v18;
LABEL_10:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v8 = v12;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EF27510(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v21 = result + 112;
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v22 = v2;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(a1 + 56);
    *(void *)&v25[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    sub_19EEBDBA4(v11 + 32 * v10, (uint64_t)v25 + 8);
LABEL_13:
    sub_19EEBDC4C((uint64_t)v25, (uint64_t)&v27, &qword_1EB390808);
    uint64_t v15 = v27;
    if (!v27)
    {
      swift_release();
      return (uint64_t)v23;
    }
    sub_19EEBDC00(&v28, v25);
    sub_19EEBDC10(0, &qword_1EB392278);
    if (swift_dynamicCast())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v23 = sub_19F09D3C8(0, v23[2] + 1, 1, v23);
      }
      unint64_t v20 = v23[2];
      unint64_t v19 = v23[3];
      if (v20 >= v19 >> 1) {
        uint64_t v23 = sub_19F09D3C8((void *)(v19 > 1), v20 + 1, 1, v23);
      }
      v23[2] = v20 + 1;
      v23[v20 + 4] = v15;

LABEL_32:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      uint64_t v2 = v22;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B78);
      if (swift_dynamicCast()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B80), swift_dynamicCast())
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B88), swift_dynamicCast()))
      {
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = sub_19F09D3C8(0, v23[2] + 1, 1, v23);
        }
        unint64_t v17 = v23[2];
        unint64_t v16 = v23[3];
        if (v17 >= v16 >> 1) {
          uint64_t v23 = sub_19F09D3C8((void *)(v16 > 1), v17 + 1, 1, v23);
        }
        v23[2] = v17 + 1;
        v23[v17 + 4] = v15;
        goto LABEL_32;
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
  }
  int64_t v12 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v12 >= v6)
    {
      int64_t v14 = v8;
LABEL_12:
      unint64_t v5 = 0;
      uint64_t v26 = 0;
      int64_t v8 = v14;
      memset(v25, 0, sizeof(v25));
      goto LABEL_13;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    if (v13) {
      goto LABEL_10;
    }
    int64_t v18 = v8 + 2;
    int64_t v14 = v8 + 1;
    if (v8 + 2 >= v6) {
      goto LABEL_12;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v18);
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 3 >= v6) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * (v8 + 3));
      if (v13)
      {
        int64_t v12 = v8 + 3;
        goto LABEL_10;
      }
      int64_t v18 = v8 + 4;
      int64_t v14 = v8 + 3;
      if (v8 + 4 >= v6) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v18);
      if (!v13)
      {
        int64_t v12 = v8 + 5;
        int64_t v14 = v8 + 4;
        if (v8 + 5 >= v6) {
          goto LABEL_12;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v12);
        if (!v13)
        {
          while (v6 - 6 != v8)
          {
            unint64_t v13 = *(void *)(v21 + 8 * v8++);
            if (v13)
            {
              int64_t v12 = v8 + 5;
              goto LABEL_10;
            }
          }
          int64_t v14 = v6 - 1;
          goto LABEL_12;
        }
        goto LABEL_10;
      }
    }
    int64_t v12 = v18;
LABEL_10:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v8 = v12;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EF278F8(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v21 = result + 112;
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v22 = v2;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(a1 + 56);
    *(void *)&v24[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    sub_19EEBDBA4(v11 + 32 * v10, (uint64_t)v24 + 8);
LABEL_13:
    sub_19EEBDC4C((uint64_t)v24, (uint64_t)&v26, &qword_1EB390808);
    uint64_t v15 = v26;
    if (!v26)
    {
      swift_release();
      return (uint64_t)v23;
    }
    sub_19EEBDC00(&v27, v24);
    if (swift_dynamicCast())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v23 = sub_19F09D3C8(0, v23[2] + 1, 1, v23);
      }
      unint64_t v20 = v23[2];
      unint64_t v19 = v23[3];
      if (v20 >= v19 >> 1) {
        uint64_t v23 = sub_19F09D3C8((void *)(v19 > 1), v20 + 1, 1, v23);
      }
      v23[2] = v20 + 1;
      v23[v20 + 4] = v15;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_32:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
      uint64_t v2 = v22;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B98);
      if (swift_dynamicCast()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470BA0), swift_dynamicCast())
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470BA8), swift_dynamicCast()))
      {
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = sub_19F09D3C8(0, v23[2] + 1, 1, v23);
        }
        unint64_t v17 = v23[2];
        unint64_t v16 = v23[3];
        if (v17 >= v16 >> 1) {
          uint64_t v23 = sub_19F09D3C8((void *)(v16 > 1), v17 + 1, 1, v23);
        }
        v23[2] = v17 + 1;
        v23[v17 + 4] = v15;
        goto LABEL_32;
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    }
  }
  int64_t v12 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v12 >= v6)
    {
      int64_t v14 = v8;
LABEL_12:
      unint64_t v5 = 0;
      uint64_t v25 = 0;
      int64_t v8 = v14;
      memset(v24, 0, sizeof(v24));
      goto LABEL_13;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    if (v13) {
      goto LABEL_10;
    }
    int64_t v18 = v8 + 2;
    int64_t v14 = v8 + 1;
    if (v8 + 2 >= v6) {
      goto LABEL_12;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v18);
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 3 >= v6) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * (v8 + 3));
      if (v13)
      {
        int64_t v12 = v8 + 3;
        goto LABEL_10;
      }
      int64_t v18 = v8 + 4;
      int64_t v14 = v8 + 3;
      if (v8 + 4 >= v6) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v18);
      if (!v13)
      {
        int64_t v12 = v8 + 5;
        int64_t v14 = v8 + 4;
        if (v8 + 5 >= v6) {
          goto LABEL_12;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v12);
        if (!v13)
        {
          while (v6 - 6 != v8)
          {
            unint64_t v13 = *(void *)(v21 + 8 * v8++);
            if (v13)
            {
              int64_t v12 = v8 + 5;
              goto LABEL_10;
            }
          }
          int64_t v14 = v6 - 1;
          goto LABEL_12;
        }
        goto LABEL_10;
      }
    }
    int64_t v12 = v18;
LABEL_10:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v8 = v12;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EF27CD8(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v21 = result + 112;
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v22 = v2;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(a1 + 56);
    *(void *)&v26[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    sub_19EEBDBA4(v11 + 32 * v10, (uint64_t)v26 + 8);
LABEL_13:
    sub_19EEBDC4C((uint64_t)v26, (uint64_t)&v28, &qword_1EB390808);
    uint64_t v15 = v28;
    if (!v28)
    {
      swift_release();
      return (uint64_t)v23;
    }
    sub_19EEBDC00(&v29, v26);
    if (swift_dynamicCast())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v23 = sub_19F09D3C8(0, v23[2] + 1, 1, v23);
      }
      unint64_t v20 = v23[2];
      unint64_t v19 = v23[3];
      if (v20 >= v19 >> 1) {
        uint64_t v23 = sub_19F09D3C8((void *)(v19 > 1), v20 + 1, 1, v23);
      }
      v23[2] = v20 + 1;
      v23[v20 + 4] = v15;
      sub_19EF4BE88(v24, v25);
LABEL_32:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
      uint64_t v2 = v22;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B38);
      if (swift_dynamicCast()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B40), swift_dynamicCast())
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B48), swift_dynamicCast()))
      {
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = sub_19F09D3C8(0, v23[2] + 1, 1, v23);
        }
        unint64_t v17 = v23[2];
        unint64_t v16 = v23[3];
        if (v17 >= v16 >> 1) {
          uint64_t v23 = sub_19F09D3C8((void *)(v16 > 1), v17 + 1, 1, v23);
        }
        v23[2] = v17 + 1;
        v23[v17 + 4] = v15;
        goto LABEL_32;
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
    }
  }
  int64_t v12 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v12 >= v6)
    {
      int64_t v14 = v8;
LABEL_12:
      unint64_t v5 = 0;
      uint64_t v27 = 0;
      int64_t v8 = v14;
      memset(v26, 0, sizeof(v26));
      goto LABEL_13;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    if (v13) {
      goto LABEL_10;
    }
    int64_t v18 = v8 + 2;
    int64_t v14 = v8 + 1;
    if (v8 + 2 >= v6) {
      goto LABEL_12;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v18);
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 3 >= v6) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * (v8 + 3));
      if (v13)
      {
        int64_t v12 = v8 + 3;
        goto LABEL_10;
      }
      int64_t v18 = v8 + 4;
      int64_t v14 = v8 + 3;
      if (v8 + 4 >= v6) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v18);
      if (!v13)
      {
        int64_t v12 = v8 + 5;
        int64_t v14 = v8 + 4;
        if (v8 + 5 >= v6) {
          goto LABEL_12;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v12);
        if (!v13)
        {
          while (v6 - 6 != v8)
          {
            unint64_t v13 = *(void *)(v21 + 8 * v8++);
            if (v13)
            {
              int64_t v12 = v8 + 5;
              goto LABEL_10;
            }
          }
          int64_t v14 = v6 - 1;
          goto LABEL_12;
        }
        goto LABEL_10;
      }
    }
    int64_t v12 = v18;
LABEL_10:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v8 = v12;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EF280B0(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v25 = result + 112;
  uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v26 = v2;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v10 = v9 | (v8 << 6);
LABEL_5:
  uint64_t v11 = *(void *)(a1 + 56);
  *(void *)&v28[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
  sub_19EEBDBA4(v11 + 32 * v10, (uint64_t)v28 + 8);
  while (1)
  {
    sub_19EEBDC4C((uint64_t)v28, (uint64_t)&v30, &qword_1EB390808);
    uint64_t v15 = v30;
    if (!v30)
    {
      swift_release();
      return (uint64_t)v27;
    }
    sub_19EEBDC00(&v31, v28);
    if (swift_dynamicCast())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_19F09D3C8(0, v27[2] + 1, 1, v27);
      }
      unint64_t v20 = v27[2];
      unint64_t v19 = v27[3];
      if (v20 >= v19 >> 1) {
        uint64_t v27 = sub_19F09D3C8((void *)(v19 > 1), v20 + 1, 1, v27);
      }
      v27[2] = v20 + 1;
      v27[v20 + 4] = v15;
      swift_unknownObjectRelease();
LABEL_32:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
      uint64_t v2 = v26;
      if (v5) {
        goto LABEL_4;
      }
      goto LABEL_6;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470AF8);
    if (swift_dynamicCast()
      || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B00), swift_dynamicCast()))
    {
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_19F09D3C8(0, v27[2] + 1, 1, v27);
      }
      unint64_t v18 = v27[2];
      unint64_t v17 = v27[3];
      if (v18 >= v17 >> 1) {
        uint64_t v27 = sub_19F09D3C8((void *)(v17 > 1), v18 + 1, 1, v27);
      }
      v27[2] = v18 + 1;
      v27[v18 + 4] = v15;
      goto LABEL_32;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470B08);
    if (swift_dynamicCast())
    {
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_19F09D3C8(0, v27[2] + 1, 1, v27);
      }
      unint64_t v22 = v27[2];
      unint64_t v21 = v27[3];
      unint64_t v23 = v22 + 1;
      if (v22 >= v21 >> 1)
      {
        uint64_t v24 = sub_19F09D3C8((void *)(v21 > 1), v22 + 1, 1, v27);
        unint64_t v23 = v22 + 1;
        uint64_t v27 = v24;
      }
      v27[2] = v23;
      v27[v22 + 4] = v15;
    }
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
    if (v5) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v12 >= v6)
    {
      int64_t v14 = v8;
    }
    else
    {
      unint64_t v13 = *(void *)(v2 + 8 * v12);
      if (v13) {
        goto LABEL_9;
      }
      int64_t v16 = v8 + 2;
      int64_t v14 = v8 + 1;
      if (v8 + 2 < v6)
      {
        unint64_t v13 = *(void *)(v2 + 8 * v16);
        if (v13) {
          goto LABEL_21;
        }
        int64_t v14 = v8 + 2;
        if (v8 + 3 < v6)
        {
          unint64_t v13 = *(void *)(v2 + 8 * (v8 + 3));
          if (v13)
          {
            int64_t v12 = v8 + 3;
            goto LABEL_9;
          }
          int64_t v16 = v8 + 4;
          int64_t v14 = v8 + 3;
          if (v8 + 4 < v6)
          {
            unint64_t v13 = *(void *)(v2 + 8 * v16);
            if (v13)
            {
LABEL_21:
              int64_t v12 = v16;
LABEL_9:
              unint64_t v5 = (v13 - 1) & v13;
              unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
              int64_t v8 = v12;
              goto LABEL_5;
            }
            int64_t v12 = v8 + 5;
            int64_t v14 = v8 + 4;
            if (v8 + 5 < v6)
            {
              unint64_t v13 = *(void *)(v2 + 8 * v12);
              if (v13) {
                goto LABEL_9;
              }
              while (v6 - 6 != v8)
              {
                unint64_t v13 = *(void *)(v25 + 8 * v8++);
                if (v13)
                {
                  int64_t v12 = v8 + 5;
                  goto LABEL_9;
                }
              }
              int64_t v14 = v6 - 1;
            }
          }
        }
      }
    }
    unint64_t v5 = 0;
    uint64_t v29 = 0;
    int64_t v8 = v14;
    memset(v28, 0, sizeof(v28));
  }
  __break(1u);
  return result;
}

uint64_t sub_19EF28510(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v21 = result + 112;
  unint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v22 = v2;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(a1 + 56);
    *(void *)&v24[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    sub_19EEBDBA4(v11 + 32 * v10, (uint64_t)v24 + 8);
LABEL_13:
    sub_19EEBDC4C((uint64_t)v24, (uint64_t)&v26, &qword_1EB390808);
    uint64_t v15 = v26;
    if (!v26)
    {
      swift_release();
      return (uint64_t)v23;
    }
    sub_19EEBDC00(&v27, v24);
    type metadata accessor for JetPackAssetSession();
    if (swift_dynamicCast())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v23 = sub_19F09D3C8(0, v23[2] + 1, 1, v23);
      }
      unint64_t v20 = v23[2];
      unint64_t v19 = v23[3];
      if (v20 >= v19 >> 1) {
        unint64_t v23 = sub_19F09D3C8((void *)(v19 > 1), v20 + 1, 1, v23);
      }
      v23[2] = v20 + 1;
      v23[v20 + 4] = v15;
      swift_release();
LABEL_32:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
      uint64_t v2 = v22;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470978);
      if (swift_dynamicCast()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470980), swift_dynamicCast())
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470988), swift_dynamicCast()))
      {
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v23 = sub_19F09D3C8(0, v23[2] + 1, 1, v23);
        }
        unint64_t v17 = v23[2];
        unint64_t v16 = v23[3];
        if (v17 >= v16 >> 1) {
          unint64_t v23 = sub_19F09D3C8((void *)(v16 > 1), v17 + 1, 1, v23);
        }
        v23[2] = v17 + 1;
        v23[v17 + 4] = v15;
        goto LABEL_32;
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    }
  }
  int64_t v12 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v12 >= v6)
    {
      int64_t v14 = v8;
LABEL_12:
      unint64_t v5 = 0;
      uint64_t v25 = 0;
      int64_t v8 = v14;
      memset(v24, 0, sizeof(v24));
      goto LABEL_13;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    if (v13) {
      goto LABEL_10;
    }
    int64_t v18 = v8 + 2;
    int64_t v14 = v8 + 1;
    if (v8 + 2 >= v6) {
      goto LABEL_12;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v18);
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 3 >= v6) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * (v8 + 3));
      if (v13)
      {
        int64_t v12 = v8 + 3;
        goto LABEL_10;
      }
      int64_t v18 = v8 + 4;
      int64_t v14 = v8 + 3;
      if (v8 + 4 >= v6) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v18);
      if (!v13)
      {
        int64_t v12 = v8 + 5;
        int64_t v14 = v8 + 4;
        if (v8 + 5 >= v6) {
          goto LABEL_12;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v12);
        if (!v13)
        {
          while (v6 - 6 != v8)
          {
            unint64_t v13 = *(void *)(v21 + 8 * v8++);
            if (v13)
            {
              int64_t v12 = v8 + 5;
              goto LABEL_10;
            }
          }
          int64_t v14 = v6 - 1;
          goto LABEL_12;
        }
        goto LABEL_10;
      }
    }
    int64_t v12 = v18;
LABEL_10:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v8 = v12;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void *sub_19EF288E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JetPackAsset(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v35 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  unint64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v38 = (uint64_t)v39 + 8;
  unint64_t v32 = v9 - 1;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  int64_t v37 = v9;
  uint64_t v33 = a1 + 112;
  unint64_t v34 = v9 - 6;
  uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_8;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v37)
    {
      unint64_t v18 = v11;
    }
    else
    {
      unint64_t v17 = *(void *)(v35 + 8 * v16);
      if (v17) {
        goto LABEL_12;
      }
      int64_t v24 = v11 + 2;
      unint64_t v18 = v11 + 1;
      if ((uint64_t)(v11 + 2) < v37)
      {
        unint64_t v17 = *(void *)(v35 + 8 * v24);
        if (v17) {
          goto LABEL_26;
        }
        unint64_t v18 = v11 + 2;
        if ((uint64_t)(v11 + 3) < v37)
        {
          unint64_t v17 = *(void *)(v35 + 8 * (v11 + 3));
          if (v17)
          {
            int64_t v16 = v11 + 3;
LABEL_12:
            unint64_t v8 = (v17 - 1) & v17;
            unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
            unint64_t v11 = v16;
LABEL_8:
            uint64_t v15 = *(void *)(a1 + 56);
            *(void *)&v39[0] = *(void *)(*(void *)(a1 + 48) + 8 * v14);
            sub_19EEBDBA4(v15 + 32 * v14, v38);
            goto LABEL_15;
          }
          int64_t v24 = v11 + 4;
          unint64_t v18 = v11 + 3;
          if ((uint64_t)(v11 + 4) < v37)
          {
            unint64_t v17 = *(void *)(v35 + 8 * v24);
            if (v17)
            {
LABEL_26:
              int64_t v16 = v24;
              goto LABEL_12;
            }
            int64_t v16 = v11 + 5;
            unint64_t v18 = v11 + 4;
            if ((uint64_t)(v11 + 5) < v37)
            {
              unint64_t v17 = *(void *)(v35 + 8 * v16);
              if (v17) {
                goto LABEL_12;
              }
              while (v34 != v11)
              {
                unint64_t v17 = *(void *)(v33 + 8 * v11++);
                if (v17)
                {
                  int64_t v16 = v11 + 5;
                  goto LABEL_12;
                }
              }
              unint64_t v18 = v32;
            }
          }
        }
      }
    }
    unint64_t v8 = 0;
    uint64_t v40 = 0;
    unint64_t v11 = v18;
    memset(v39, 0, sizeof(v39));
LABEL_15:
    sub_19EEBDC4C((uint64_t)v39, (uint64_t)&v41, &qword_1EB390808);
    uint64_t v19 = v41;
    if (!v41)
    {
      swift_release();
      return v36;
    }
    sub_19EEBDC00(&v42, v39);
    if (swift_dynamicCast())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v36 = sub_19F09D3C8(0, v36[2] + 1, 1, v36);
      }
      unint64_t v26 = v36[2];
      unint64_t v25 = v36[3];
      unint64_t v27 = v26 + 1;
      if (v26 >= v25 >> 1)
      {
        unint64_t v31 = v26 + 1;
        uint64_t v29 = sub_19F09D3C8((void *)(v25 > 1), v26 + 1, 1, v36);
        unint64_t v27 = v31;
        uint64_t v36 = v29;
      }
      uint64_t v28 = v36;
      v36[2] = v27;
      v28[v26 + 4] = v19;
      sub_19EF4B3C4((uint64_t)v4);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470900);
      if (swift_dynamicCast()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470908), swift_dynamicCast())
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_1E9470910), swift_dynamicCast()))
      {
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v36 = sub_19F09D3C8(0, v36[2] + 1, 1, v36);
        }
        unint64_t v21 = v36[2];
        unint64_t v20 = v36[3];
        unint64_t v22 = v21 + 1;
        if (v21 >= v20 >> 1)
        {
          unint64_t v31 = v21 + 1;
          unint64_t v23 = sub_19F09D3C8((void *)(v20 > 1), v21 + 1, 1, v36);
          unint64_t v22 = v31;
          uint64_t v36 = v23;
        }
        int64_t v12 = v36;
        v36[2] = v22;
        v12[v21 + 4] = v19;
      }
    }
    uint64_t result = (void *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
  }
  __break(1u);
  return result;
}

uint64_t sub_19EF28D20(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946E6A0);
  if (!*(void *)(a1 + 16) || (unint64_t v3 = sub_19EEAB4C0(v2), (v4 & 1) == 0))
  {
    uint64_t v6 = sub_19EE97D88(&qword_1E9470B70);
    if (v6)
    {
      sub_19EE6E114(a1, v6, v7, (uint64_t)v11);
      return *(void *)&v11[0];
    }
    return 1;
  }
  sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v3, (uint64_t)v10);
  sub_19EEBDC00(v10, v11);
  sub_19EEBDBA4((uint64_t)v11, (uint64_t)v10);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    uint64_t v5 = v9;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    return v5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B58);
  if (swift_dynamicCast())
  {
    uint64_t v5 = sub_19EF2AD80();
LABEL_9:
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B60);
  if (swift_dynamicCast())
  {
    swift_retain();
    sub_19F1A3CD0((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 180, v9);
    swift_release();
    uint64_t v5 = sub_19EF2F8C0();
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B68);
  if (swift_dynamicCast())
  {
    swift_retain();
    sub_19F1A3D38((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 188, v9);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    return 1;
  }
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19EF29064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_19EEAB4C0((uint64_t)&type metadata for Bag.Profile), (v5 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v11);
    sub_19EEBDC00(v11, v12);
    sub_19EEBDBA4((uint64_t)v12, (uint64_t)v11);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
      *(_OWORD *)a2 = v8;
      *(void *)(a2 + 16) = v9;
      *(void *)(a2 + 24) = v10;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B98);
      if (swift_dynamicCast())
      {
        sub_19EF2B2E8((void (**)(uint64_t))a2);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470BA0);
        if (swift_dynamicCast())
        {
          swift_retain();
          sub_19F1A31DC((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 180, v8);
          swift_release();
          sub_19EF2FE6C((uint64_t *)a2);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
          swift_release();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470BA8);
          if ((swift_dynamicCast() & 1) == 0)
          {
            sub_19F1DCCEC();
            sub_19F1DBEFC();
            sub_19F1DCF4C();
            sub_19F1DBEFC();
            sub_19F1DBEFC();
            sub_19F1DBEFC();
            uint64_t result = sub_19F1DCFCC();
            __break(1u);
            return result;
          }
          swift_retain();
          sub_19F1A3244((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 188, v8);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
          swift_release();
          *(_OWORD *)a2 = 0u;
          *(_OWORD *)(a2 + 16) = 0u;
        }
      }
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  }
  else
  {
    uint64_t result = sub_19EE97D88((uint64_t *)&unk_1E9470BB0);
    if (result)
    {
      return sub_19EE6E114(a1, result, v7, a2);
    }
    else
    {
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
  }
  return result;
}

uint64_t sub_19EF293A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16)
    && (unint64_t v4 = sub_19EEAB4C0((uint64_t)&type metadata for JetEngineBootstrap.URLProtocolHandler), (v5 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v10);
    sub_19EEBDC00(v10, v11);
    sub_19EEBDBA4((uint64_t)v11, (uint64_t)v10);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      *(_OWORD *)a2 = v8;
      *(_OWORD *)(a2 + 16) = v9;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B38);
      if (swift_dynamicCast())
      {
        sub_19EF2B590((void (**)(uint64_t))a2);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B40);
        if (swift_dynamicCast())
        {
          swift_retain();
          sub_19F1A3E70((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 180, v8);
          swift_release();
          sub_19EF30120((uint64_t *)a2);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
          swift_release();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B48);
          if ((swift_dynamicCast() & 1) == 0)
          {
            sub_19F1DCCEC();
            sub_19F1DBEFC();
            sub_19F1DCF4C();
            sub_19F1DBEFC();
            sub_19F1DBEFC();
            sub_19F1DBEFC();
            uint64_t result = sub_19F1DCFCC();
            __break(1u);
            return result;
          }
          swift_retain();
          sub_19F1A3ED8((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 188, v8);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
          swift_release();
          *(_OWORD *)a2 = xmmword_19F24DBD0;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
        }
      }
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  else
  {
    uint64_t result = sub_19EE97D88(&qword_1E9470B50);
    if (result)
    {
      return sub_19EE6E114(a1, result, v7, a2);
    }
    else
    {
      *(_OWORD *)a2 = xmmword_19F24DBD0;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_19EF296FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Unstable.Accounts();
  if (!*(void *)(a1 + 16) || (unint64_t v3 = sub_19EEAB4C0(v2), (v4 & 1) == 0))
  {
    uint64_t v6 = sub_19EE97D88(&qword_1E946E1A0);
    if (v6)
    {
      sub_19EE6E114(a1, v6, v7, (uint64_t)v12);
      return *(void *)&v12[0];
    }
    return 0;
  }
  sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v3, (uint64_t)v11);
  sub_19EEBDC00(v11, v12);
  sub_19EEBDBA4((uint64_t)v12, (uint64_t)v11);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    uint64_t v5 = v10;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    return v5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B18);
  if (swift_dynamicCast())
  {
    uint64_t v8 = sub_19EF2BD98();
LABEL_9:
    uint64_t v5 = v8;
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470B20);
  if (swift_dynamicCast())
  {
    swift_retain();
    sub_19F1A3F44((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 180, v10);
    swift_release();
    uint64_t v8 = sub_19EF30954();
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470B28);
  if (swift_dynamicCast())
  {
    swift_retain();
    sub_19F1A3FAC((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 188, v10);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    return 0;
  }
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19EF29A10(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16) || (unint64_t v4 = sub_19EEAB4C0(a1), (v5 & 1) == 0))
  {
    uint64_t v6 = sub_19EE97D88(&qword_1E946DB40);
    if (v6)
    {
      uint64_t v8 = v7;
      sub_19F1DB9CC();
      sub_19EE6E114(a2, v6, v8, (uint64_t)v13);
      return *(void *)&v13[0];
    }
    return v6;
  }
  sub_19EEBDBA4(*(void *)(a2 + 56) + 32 * v4, (uint64_t)v12);
  sub_19EEBDC00(v12, v13);
  sub_19EEBDBA4((uint64_t)v13, (uint64_t)v12);
  sub_19F1DB9CC();
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    uint64_t v6 = v11;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    return v6;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470AC8);
  if (swift_dynamicCast())
  {
    uint64_t v9 = sub_19EF2C2E8();
LABEL_9:
    uint64_t v6 = v9;
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470AD0);
  if (swift_dynamicCast())
  {
    swift_retain();
    sub_19F1A4B88((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 180, v11, a1);
    swift_release();
    uint64_t v9 = sub_19EF30EC4();
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470AD8);
  if (swift_dynamicCast())
  {
    swift_retain();
    sub_19F1A4BE4((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 188, v11, a1);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    return 0;
  }
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19EF29D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
  if (*(void *)(a1 + 16) && (unint64_t v5 = sub_19EEAB4C0(v4), (v6 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v5, (uint64_t)v11);
    sub_19EEBDC00(v11, v13);
    sub_19EEBDBA4((uint64_t)v13, (uint64_t)v12);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      sub_19EEBB420(v11, a2);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A8);
      if (swift_dynamicCast())
      {
        sub_19EF2D868(a2);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708B0);
        if (swift_dynamicCast())
        {
          uint64_t v9 = *(void *)&v11[0];
          swift_retain();
          sub_19F1A6228((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 180, v9);
          swift_release();
          sub_19EF32798(a2);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
          swift_release();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708B8);
          if ((swift_dynamicCast() & 1) == 0)
          {
            *(void *)&v11[0] = 0;
            *((void *)&v11[0] + 1) = 0xE000000000000000;
            sub_19F1DCCEC();
            sub_19F1DBEFC();
            sub_19F1DCF4C();
            sub_19F1DBEFC();
            sub_19F1DBEFC();
            sub_19F1DBEFC();
            uint64_t result = sub_19F1DCFCC();
            __break(1u);
            return result;
          }
          uint64_t v10 = *(void *)&v11[0];
          swift_retain();
          sub_19F1A6290((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 188, v10);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
          swift_release();
          *(void *)(a2 + 32) = 0;
          *(_OWORD *)a2 = 0u;
          *(_OWORD *)(a2 + 16) = 0u;
        }
      }
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    uint64_t result = sub_19EE97D88(&qword_1E94708D0);
    if (result)
    {
      return sub_19EE6E114(a1, result, v8, a2);
    }
    else
    {
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
  }
  return result;
}

uint64_t sub_19EF2A094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_19EEAB4C0((uint64_t)&type metadata for IntentDispatchTimeout);
    if (v5)
    {
      sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v10);
      sub_19EEBDC00(v10, v11);
      sub_19EEBDBA4((uint64_t)v11, (uint64_t)v10);
      if (swift_dynamicCast())
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
        *(void *)a2 = v8;
        *(unsigned char *)(a2 + 8) = v9;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470888);
        if (swift_dynamicCast())
        {
          sub_19EF2C838(a2);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470890);
          if (!swift_dynamicCast())
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470898);
            if ((swift_dynamicCast() & 1) == 0)
            {
              sub_19F1DCCEC();
              sub_19F1DBEFC();
              sub_19F1DCF4C();
              sub_19F1DBEFC();
              sub_19F1DBEFC();
              sub_19F1DBEFC();
              uint64_t result = sub_19F1DCFCC();
              __break(1u);
              return result;
            }
            swift_retain();
            sub_19F1A6368((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 188, v8);
            swift_release();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
            swift_release();
            *(void *)a2 = 0;
            *(_WORD *)(a2 + 8) = 256;
            return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
          }
          swift_retain();
          sub_19F1A6300((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 180, v8);
          swift_release();
          sub_19EF3143C(a2);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
          swift_release();
        }
      }
      *(unsigned char *)(a2 + 9) = 0;
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    }
  }
  uint64_t result = sub_19EE97D88(&qword_1E946E530);
  if (result)
  {
    return sub_19EE6E114(a1, result, v7, a2);
  }
  else
  {
    *(void *)a2 = 0;
    *(_WORD *)(a2 + 8) = 256;
  }
  return result;
}

uint64_t sub_19EF2A3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PageIntentInstrumentation();
  uint64_t v15 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_19EEAB4C0(v4), (v8 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v7, (uint64_t)v18);
    sub_19EEBDC00(v18, v19);
    sub_19EEBDBA4((uint64_t)v19, (uint64_t)v18);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      sub_19EF4B484((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
LABEL_14:
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v4);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470860);
    if (swift_dynamicCast())
    {
      sub_19EF2CAE0(a2);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      goto LABEL_14;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470868);
    if (swift_dynamicCast())
    {
      uint64_t v13 = v16;
      swift_retain();
      sub_19F1A63D4((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 180, v13);
      swift_release();
      sub_19EF316F0(a2);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      swift_release();
      goto LABEL_14;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470870);
    if (swift_dynamicCast())
    {
      uint64_t v14 = v16;
      swift_retain();
      sub_19F1A643C((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 188, v14);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, 1, 1, v4);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    }
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DCF4C();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v9 = sub_19EE97D88(&qword_1E946EC28);
    if (v9)
    {
      return sub_19EE6E114(a1, v9, v10, a2);
    }
    else
    {
      int64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      return v12(a2, 1, 1, v4);
    }
  }
  return result;
}

uint64_t sub_19EF2A830@<X0>(void (**a1)(uint64_t)@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for AsyncObjectGraphMetrics, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 9);
    sub_19EF48E4C((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 9);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2AAD8()
{
  uint64_t started = type metadata accessor for StartUpPerformanceEvent();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v2 = sub_19EEAC6C0(v0, started, (uint64_t)v11[0]);
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38((uint64_t)v11[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    v11[0] = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v11[0] = 0;
      v11[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      _OWORD v11[2] = v8;
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock(v4 + 9);
    sub_19EF48EC0((uint64_t *)v11);
    os_unfair_lock_unlock(v4 + 9);
    id v5 = v11[0];
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_19EF2AD80()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946E6A0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v2 = sub_19EEAC6C0(v0, v1, (uint64_t)v11[0]);
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38((uint64_t)v11[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    v11[0] = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v11[0] = 0;
      v11[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock(v4 + 9);
    sub_19EF4BF20((uint64_t)&v4[4], (uint64_t *)v11);
    os_unfair_lock_unlock(v4 + 9);
    id v5 = v11[0];
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_19EF2B030()
{
  uint64_t v1 = sub_19EEBDC10(0, &qword_1EB392278);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v2 = sub_19EEAC6C0(v0, v1, (uint64_t)v11[0]);
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38((uint64_t)v11[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    v11[0] = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v11[0] = 0;
      v11[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      id v11[2] = v8;
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 16);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v4 + 36));
    sub_19EF4BF84((void *)(v4 + 16), v11);
    os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 36));
    id v5 = v11[0];
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_19EF2B2E8@<X0>(void (**a1)(uint64_t)@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for Bag.Profile, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    id v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 13);
    sub_19EF4BFE0((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 13);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2B590@<X0>(void (**a1)(uint64_t)@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for JetEngineBootstrap.URLProtocolHandler, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    id v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 13);
    sub_19EF4BED0((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 13);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2B838@<X0>(void (**a1)(uint64_t)@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for Bag, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    id v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 9);
    sub_19EF4B6D8((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 9);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2BAE0()
{
  uint64_t v1 = sub_19EEBDC10(0, qword_1EB392F30);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v2 = sub_19EEAC6C0(v0, v1, (uint64_t)v11[0]);
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38((uint64_t)v11[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    v11[0] = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v11[0] = 0;
      v11[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      id v11[2] = v8;
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 16);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v4 + 36));
    sub_19EF4BA98((void *)(v4 + 16), v11);
    os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 36));
    id v5 = v11[0];
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_19EF2BD98()
{
  uint64_t v1 = type metadata accessor for Unstable.Accounts();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v2 = sub_19EEAC6C0(v0, v1, (uint64_t)v11[0]);
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38((uint64_t)v11[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (uint64_t *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    v11[0] = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v11[0] = 0;
      v11[1] = (uint64_t *)0xE000000000000000;
      sub_19F1DBEFC();
      id v11[2] = v8;
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock(v4 + 9);
    sub_19EF4BDD8((uint64_t)&v4[4], v11);
    os_unfair_lock_unlock(v4 + 9);
    id v5 = v11[0];
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_19EF2C040@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for JSONContext, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    id v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 9);
    sub_19EF4BD84((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 9);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2C2E8()
{
  uint64_t v1 = sub_19F1DB9CC();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v2 = sub_19EEAC6C0(v0, v1, (uint64_t)v11[0]);
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38((uint64_t)v11[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    char v8 = (uint64_t *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    v11[0] = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v11[0] = 0;
      v11[1] = (uint64_t *)0xE000000000000000;
      sub_19F1DBEFC();
      id v11[2] = v8;
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock(v4 + 9);
    sub_19EF4BCCC((uint64_t)&v4[4], v11);
    os_unfair_lock_unlock(v4 + 9);
    id v5 = v11[0];
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_19EF2C590@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFB0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v12);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v8 = sub_19EF26A38(v12);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v9 = (void *)swift_allocError();
    *id v10 = v8;
    swift_willThrow();
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    char v6 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    swift_retain();
    os_unfair_lock_lock(v6 + 15);
    sub_19EF4B8E0((uint64_t)&v6[4], a1);
    os_unfair_lock_unlock(v6 + 15);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2C838@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for IntentDispatchTimeout, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 9);
    sub_19EF4B20C((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 9);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2CAE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PageIntentInstrumentation();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v14);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v10 = sub_19EF26A38(v14);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v11 = (void *)swift_allocError();
    *uint64_t v12 = v10;
    swift_willThrow();
    id v13 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v6 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v6 + 16);
    uint64_t v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v8);
    sub_19EF4B148(v7, a1);
    os_unfair_lock_unlock(v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2CDC8()
{
  uint64_t v1 = type metadata accessor for PageMetricsPresenter();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v2 = sub_19EEAC6C0(v0, v1, (uint64_t)v11[0]);
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38((uint64_t)v11[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (uint64_t *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    v11[0] = v8;
    uint64_t v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v11[0] = 0;
      v11[1] = (uint64_t *)0xE000000000000000;
      sub_19F1DBEFC();
      id v11[2] = v8;
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    char v4 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock(v4 + 9);
    sub_19EF4BBD4((uint64_t)&v4[4], v11);
    os_unfair_lock_unlock(v4 + 9);
    uint64_t v5 = v11[0];
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_19EF2D070@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for MetricsPipeline, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 49);
    sub_19EF4BC8C((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 49);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2D318@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for SentryConfiguration, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 33);
    sub_19EF4B9B0((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 33);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2D5C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392340);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v12);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v8 = sub_19EF26A38(v12);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v9 = (void *)swift_allocError();
    *id v10 = v8;
    swift_willThrow();
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    swift_retain();
    os_unfair_lock_lock(v6 + 15);
    sub_19EF4BAF4((uint64_t)&v6[4], a1);
    os_unfair_lock_unlock(v6 + 15);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2D868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v12);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v8 = sub_19EF26A38(v12);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v9 = (void *)swift_allocError();
    *id v10 = v8;
    swift_willThrow();
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    swift_retain();
    os_unfair_lock_lock(v6 + 15);
    sub_19EF4B25C((uint64_t)&v6[4], a1);
    os_unfair_lock_unlock(v6 + 15);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2DB10@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for JetPackAssetSession.Configuration, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 25);
    sub_19EF4B7D0((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 25);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2DDB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94709B0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v12);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v8 = sub_19EF26A38(v12);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v9 = (void *)swift_allocError();
    *id v10 = v8;
    swift_willThrow();
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    swift_retain();
    os_unfair_lock_lock(v6 + 15);
    sub_19EF4B810((uint64_t)&v6[4], a1);
    os_unfair_lock_unlock(v6 + 15);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2E060()
{
  uint64_t v1 = sub_19EEBDC10(0, (unint64_t *)&qword_1E946DC70);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v2 = sub_19EEAC6C0(v0, v1, (uint64_t)v11[0]);
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38((uint64_t)v11[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    v11[0] = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v11[0] = 0;
      v11[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      id v11[2] = v8;
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 16);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v4 + 36));
    sub_19EF4B63C((void *)(v4 + 16), v11);
    os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 36));
    id v5 = v11[0];
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_19EF2E318()
{
  uint64_t v1 = type metadata accessor for JetPackAssetSession();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v2 = sub_19EEAC6C0(v0, v1, (uint64_t)v11[0]);
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38((uint64_t)v11[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (uint64_t *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    v11[0] = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v11[0] = 0;
      v11[1] = (uint64_t *)0xE000000000000000;
      sub_19F1DBEFC();
      id v11[2] = v8;
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock(v4 + 9);
    sub_19EF4B718((uint64_t)&v4[4], v11);
    os_unfair_lock_unlock(v4 + 9);
    id v5 = v11[0];
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_19EF2E5C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for JetPackAsset(0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v14);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v10 = sub_19EF26A38(v14);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v11 = (void *)swift_allocError();
    *uint64_t v12 = v10;
    swift_willThrow();
    id v13 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v6 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v6 + 16);
    uint64_t v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v8);
    sub_19EF4B420(v7, a1);
    os_unfair_lock_unlock(v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2E8A8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for DiskJetPackLoader, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 19);
    sub_19EF4B5FC((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 19);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2EB50@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for InMemoryJetPackLoader, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 19);
    sub_19EF4B5BC((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 19);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2EDF8()
{
  uint64_t v1 = type metadata accessor for PageRenderMetricsPresenter();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v2 = sub_19EEAC6C0(v0, v1, (uint64_t)v11[0]);
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38((uint64_t)v11[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    v11[0] = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v11[0] = 0;
      v11[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      id v11[2] = v8;
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock(v4 + 9);
    sub_19EF495EC((uint64_t *)v11);
    os_unfair_lock_unlock(v4 + 9);
    id v5 = v11[0];
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_19EF2F0A0()
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v1 = sub_19EEAC6C0(v0, (uint64_t)&type metadata for IntentDispatchOptions.BadOrderingCanary, (uint64_t)v10[0]);
  uint64_t v2 = swift_bridgeObjectRelease();
  if (v1)
  {
    sub_19F1DD95C();
    uint64_t v6 = sub_19EF26A38((uint64_t)v10[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v7 = (void *)swift_allocError();
    *uint64_t v8 = v6;
    swift_willThrow();
    v10[0] = v7;
    id v9 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      v10[0] = 0;
      v10[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v2);
    swift_retain();
    os_unfair_lock_lock(v3 + 9);
    sub_19EF49544((uint64_t)&v3[4], (uint64_t)v10);
    os_unfair_lock_unlock(v3 + 9);
    id v4 = v10[0];
    swift_release();
    return (uint64_t)v4;
  }
  return result;
}

uint64_t sub_19EF2F350@<X0>(void (**a1)(uint64_t)@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for AsyncObjectGraphMetrics, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *id v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    id v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 9);
    sub_19EF49524((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 9);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF2F604()
{
  uint64_t v2 = v0;
  uint64_t started = type metadata accessor for StartUpPerformanceEvent();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, started, (uint64_t)v17[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v10 = (void *)swift_allocError();
    *uint64_t v11 = v9;
    swift_willThrow();
    v17[0] = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v18;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v18 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = started;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF494F0((uint64_t)&v6[4], v17);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v17[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF2F8C0()
{
  uint64_t v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946E6A0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, v3, (uint64_t)v18[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v18[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v10 = (void *)swift_allocError();
    *uint64_t v11 = v9;
    swift_willThrow();
    v18[0] = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v17;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v18[0] = 0;
      v18[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v17 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = v3;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF4BF40((uint64_t)&v6[4], v18);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v18[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF2FBA0()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_19EEBDC10(0, &qword_1EB392278);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, v3, (uint64_t)v17[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v10 = (void *)swift_allocError();
    *uint64_t v11 = v9;
    swift_willThrow();
    v17[0] = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v18;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v18 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = v3;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF4BFA4((uint64_t)&v6[4], v17);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v17[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF2FE6C@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for Bag.Profile, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 13);
    sub_19EF4C000((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 13);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF30120@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for JetEngineBootstrap.URLProtocolHandler, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 13);
    sub_19EF4BEF0((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 13);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF303D4@<X0>(void (**a1)(uint64_t)@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for Bag, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 9);
    sub_19EF4B6F8((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 9);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF30688()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_19EEBDC10(0, qword_1EB392F30);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, v3, (uint64_t)v17[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v10 = (void *)swift_allocError();
    *uint64_t v11 = v9;
    swift_willThrow();
    v17[0] = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v18;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v18 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = v3;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF4BAB8((uint64_t)&v6[4], v17);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v17[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF30954()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for Unstable.Accounts();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, v3, (uint64_t)v17[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v10 = (uint64_t *)swift_allocError();
    *uint64_t v11 = v9;
    swift_willThrow();
    v17[0] = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v18;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (uint64_t *)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v18 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = v3;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF4BE34((uint64_t)&v6[4], v17);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v17[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF30C10@<X0>(void (**a1)(uint64_t)@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for JSONContext, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 9);
    sub_19EF4BDA4((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 9);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF30EC4()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_19F1DB9CC();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, v3, (uint64_t)v17[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v10 = (uint64_t *)swift_allocError();
    *uint64_t v11 = v9;
    swift_willThrow();
    v17[0] = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v18;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (uint64_t *)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v18 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = v3;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF4BD2C((uint64_t)&v6[4], v17);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v17[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF31180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFB0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v12);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v8 = sub_19EF26A38(v12);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v9 = (void *)swift_allocError();
    *id v10 = v8;
    swift_willThrow();
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    swift_retain();
    os_unfair_lock_lock(v6 + 15);
    sub_19EF4B948((uint64_t)&v6[4], a1);
    os_unfair_lock_unlock(v6 + 15);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF3143C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for IntentDispatchTimeout, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 9);
    sub_19EF4B23C((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 9);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF316F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PageIntentInstrumentation();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v14);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v10 = sub_19EF26A38(v14);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v11 = (void *)swift_allocError();
    *uint64_t v12 = v10;
    swift_willThrow();
    id v13 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v6 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v6 + 16);
    uint64_t v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v8);
    sub_19EF4B1A8(v7, a1);
    os_unfair_lock_unlock(v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF319EC()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for PageMetricsPresenter();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, v3, (uint64_t)v17[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v10 = (uint64_t *)swift_allocError();
    *uint64_t v11 = v9;
    swift_willThrow();
    v17[0] = v10;
    uint64_t v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v18;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (uint64_t *)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v18 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = v3;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF4BC34((uint64_t)&v6[4], v17);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v17[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF31CA8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for MetricsPipeline, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 49);
    sub_19EF4BCAC((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 49);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF31F5C@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for SentryConfiguration, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 33);
    sub_19EF4BA2C((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 33);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF32210()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_19EEBDC10(0, &qword_1EB391BF0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, v3, (uint64_t)v17[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v10 = (void *)swift_allocError();
    *uint64_t v11 = v9;
    swift_willThrow();
    v17[0] = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v18;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v18 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = v3;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF4BA5C((uint64_t)&v6[4], v17);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v17[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF324DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392340);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v12);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v8 = sub_19EF26A38(v12);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v9 = (void *)swift_allocError();
    *id v10 = v8;
    swift_willThrow();
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    swift_retain();
    os_unfair_lock_lock(v6 + 15);
    sub_19EF4BB64((uint64_t)&v6[4], a1);
    os_unfair_lock_unlock(v6 + 15);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF32798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v12);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v8 = sub_19EF26A38(v12);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v9 = (void *)swift_allocError();
    *id v10 = v8;
    swift_willThrow();
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    swift_retain();
    os_unfair_lock_lock(v6 + 15);
    sub_19EF4B2C4((uint64_t)&v6[4], a1);
    os_unfair_lock_unlock(v6 + 15);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF32A54@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for JetPackAssetSession.Configuration, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 25);
    sub_19EF4B7F0((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 25);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF32D08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94709B0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v12);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v8 = sub_19EF26A38(v12);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v9 = (void *)swift_allocError();
    *id v10 = v8;
    swift_willThrow();
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    swift_retain();
    os_unfair_lock_lock(v6 + 15);
    sub_19EF4B878((uint64_t)&v6[4], a1);
    os_unfair_lock_unlock(v6 + 15);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF32FC4()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_19EEBDC10(0, (unint64_t *)&qword_1E946DC70);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, v3, (uint64_t)v17[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v10 = (void *)swift_allocError();
    *id v11 = v9;
    swift_willThrow();
    v17[0] = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v18;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v18 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = v3;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF4B65C((uint64_t)&v6[4], v17);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v17[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF33290()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for JetPackAssetSession();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, v3, (uint64_t)v17[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v10 = (uint64_t *)swift_allocError();
    *id v11 = v9;
    swift_willThrow();
    v17[0] = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v18;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (uint64_t *)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v18 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = v3;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF4B778((uint64_t)&v6[4], v17);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v17[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF3354C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for JetPackAsset(0);
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v1, v3, v14);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v10 = sub_19EF26A38(v14);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v11 = (void *)swift_allocError();
    *id v12 = v10;
    swift_willThrow();
    id v13 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v6 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v6 + 16);
    uint64_t v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v8);
    sub_19EF4B554(v7, a1);
    os_unfair_lock_unlock(v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF33848@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for DiskJetPackLoader, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 19);
    sub_19EF4B61C((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 19);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF33AFC@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v1, (uint64_t)&type metadata for InMemoryJetPackLoader, v11);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v7 = sub_19EF26A38(v11);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v9 = v7;
    swift_willThrow();
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_19F1DBEFC();
      sub_19F1DCF4C();
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](v4);
    swift_retain();
    os_unfair_lock_lock(v5 + 19);
    sub_19EF4B5DC((uint64_t)&v5[4], a1);
    os_unfair_lock_unlock(v5 + 19);
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF33DB0()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for PageRenderMetricsPresenter();
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v4 = sub_19EEAC6C0(v0, v3, (uint64_t)v17[0]);
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    id v10 = (uint64_t *)swift_allocError();
    *uint64_t v11 = v9;
    swift_willThrow();
    v17[0] = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v18;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (uint64_t *)0xE000000000000000;
      sub_19F1DBEFC();
      unint64_t v18 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v5);
    uint64_t v7 = v13;
    _OWORD v13[2] = v2;
    v13[3] = v2;
    uint64_t v14 = v3;
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_19EF4B0AC((uint64_t)&v6[4], v17);
    os_unfair_lock_unlock(v6 + 9);
    if (!v1) {
      uint64_t v7 = v17[0];
    }
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_19EF3406C()
{
  uint64_t v2 = v0;
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v3 = sub_19EEAC6C0(v0, (uint64_t)&type metadata for IntentDispatchOptions.BadOrderingCanary, (uint64_t)v17[0]);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (v3)
  {
    sub_19F1DD95C();
    uint64_t v8 = sub_19EF26A38((uint64_t)v17[0]);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v9 = (void *)swift_allocError();
    *id v10 = v8;
    swift_willThrow();
    v17[0] = v9;
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      int v15 = v16;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v14 = 0;
      uint64_t v13 = 55;
    }
    else
    {

      v17[0] = 0;
      v17[1] = (id)0xE000000000000000;
      sub_19F1DBEFC();
      uint64_t v16 = v9;
      sub_19F1DCF4C();
      int v14 = 0;
      uint64_t v13 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v0 + 16);
    MEMORY[0x1F4188790](v4);
    uint64_t v6 = v12;
    _OWORD v12[2] = v2;
    v12[3] = v2;
    uint64_t v13 = (uint64_t)&type metadata for IntentDispatchOptions.BadOrderingCanary;
    swift_retain();
    os_unfair_lock_lock(v5 + 9);
    sub_19EF49580((uint64_t)&v5[4], (uint64_t)v17);
    os_unfair_lock_unlock(v5 + 9);
    if (!v1) {
      uint64_t v6 = v17[0];
    }
    swift_release();
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_19EF3434C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_19EF4C244;
  *(void *)(v11 + 24) = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a4 = sub_19EE68B94(0, a4[2] + 1, 1, a4);
  }
  unint64_t v13 = a4[2];
  unint64_t v12 = a4[3];
  if (v13 >= v12 >> 1) {
    a4 = sub_19EE68B94((void *)(v12 > 1), v13 + 1, 1, a4);
  }
  a4[2] = v13 + 1;
  int v14 = &a4[2 * v13];
  v14[4] = sub_19EE8CCC8;
  v14[5] = v11;
  a5[3] = &type metadata for StandaloneObjectGraphBuilder;
  a5[4] = &off_1EF147980;
  uint64_t result = swift_release();
  *a5 = a3;
  a5[1] = a4;
  return result;
}

uint64_t sub_19EF34494(uint64_t a1, void (*a2)(uint64_t))
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v15[0] = a1;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_19EEAD6E0(v4);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = &type metadata for Bag;
  uint64_t v7 = swift_conformsToProtocol2();
  uint64_t v8 = v7 ? v7 : 0;
  if (!v7) {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    uint64_t v9 = *(void (**)(ValueMetadata *, uint64_t))(v8 + 8);
    swift_retain();
    v9(v6, v8);
    uint64_t v10 = sub_19F18D8AC();
    swift_release();
    swift_retain();
    sub_19F1DB9AC();
    swift_release();
  }
  else
  {
LABEL_11:
    uint64_t v10 = 0;
  }
  swift_retain();
  swift_task_localValuePush();
  a2(a1);
  swift_task_localValuePop();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v5;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  unint64_t v18 = &type metadata for SyncTaskScheduler;
  uint64_t v19 = &protocol witness table for SyncTaskScheduler;
  v15[0] = sub_19EF4C28C;
  v15[1] = v11;
  v15[2] = sub_19EF4C2CC;
  v15[3] = v12;
  sub_19EEC4154((uint64_t)v17, (uint64_t)v16);
  v16[40] = 0;
  swift_retain();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF52E9C((uint64_t)v15);
  sub_19EEBD664((uint64_t)v15, (uint64_t *)&unk_1EB3909D0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  uint64_t v13 = sub_19EF48B3C((uint64_t)sub_19EF48A74, 0);
  swift_release();
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_19EF34748@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, const char *a3@<X2>, uint64_t a4@<X3>, void (**a5)(uint64_t)@<X8>)
{
  unint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v73 = a2;
  uint64_t v72 = sub_19F1DB97C();
  uint64_t v8 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v71 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DB8AC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v68 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_19F1DB85C();
  uint64_t v13 = *(void *)(v81 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v81);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v62 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v79 = (char *)&v62 - v19;
  uint64_t v80 = a1;
  unint64_t v20 = *(void (**)(uint64_t))a1;
  if (*(unsigned char *)(a1 + 16))
  {
    *a5 = v20;
    return swift_bridgeObjectRetain();
  }
  uint64_t v65 = v5;
  uint64_t v62 = v11;
  uint64_t v63 = v10;
  uint64_t v69 = v18;
  unint64_t v77 = v20;
  uint64_t v67 = (uint64_t *)a5;
  uint64_t v22 = *(void *)(v80 + 8);
  type metadata accessor for BaseObjectGraph();
  uint64_t v76 = v22;
  swift_retain();
  uint64_t v23 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v83 = v23;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_19EEAD6E0(v24);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  uint64_t v64 = v8;
  if (v25
    && ((uint64_t v26 = swift_conformsToProtocol2()) != 0 ? (v27 = v26) : (v27 = 0),
        v26 ? (uint64_t v28 = &type metadata for AsyncObjectGraphMetrics) : (uint64_t v28 = 0),
        v28))
  {
    uint64_t v29 = *(void (**)(ValueMetadata *, uint64_t))(v27 + 8);
    swift_retain();
    v29(v28, v27);
    uint64_t v30 = sub_19F18D8AC();
    swift_release();
    swift_retain();
    sub_19F1DB9AC();
    swift_release();
  }
  else
  {
    uint64_t v30 = 0;
  }
  uint64_t v78 = v30;
  unint64_t v31 = v79;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v66 = v25;
  uint64_t v32 = sub_19F1DB89C();
  __swift_project_value_buffer(v32, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v33 = sub_19F1DB87C();
  os_signpost_type_t v34 = sub_19F1DC98C();
  char v35 = sub_19F1DCA6C();
  uint64_t v70 = v13;
  if (v35)
  {
    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v73(v17, v31, v81);
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v83 = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v82 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000017, 0x800000019F268FE0, &v83);
    unint64_t v31 = v79;
    sub_19F1DCB3C();
    os_signpost_id_t v38 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v33, v34, v38, "MakeLazyDependency", "object=%s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v37, -1, -1);
    MEMORY[0x19F3C9470](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v17, v81);
    unint64_t v39 = v73;
  }
  else
  {

    unint64_t v39 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  }
  uint64_t v73 = v39;
  v39(v17, v31, v81);
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  uint64_t v40 = v76;
  swift_retain();
  uint64_t v41 = v77;
  uint64_t v42 = v65;
  sub_19EF26C68(v77, v40, (uint64_t)v74, v75);
  uint64_t v75 = v42;
  unint64_t v43 = (uint64_t (*)(void))MEMORY[0x1E4FBC898];
  sub_19EF4BDC4(*(void *)v80, *(void *)(v80 + 8), *(unsigned char *)(v80 + 16), MEMORY[0x1E4FBC898]);
  sub_19EF4BDC4((uint64_t)v41, v40, 0, v43);
  long long v44 = sub_19F1DB87C();
  long long v45 = v69;
  sub_19F1DB8CC();
  os_signpost_type_t v46 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v47 = v81;
    swift_retain();
    unint64_t v48 = v68;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v50 = v62;
    uint64_t v49 = v63;
    if ((*(unsigned int (**)(char *, uint64_t))(v62 + 88))(v48, v63) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v51 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v49);
      unint64_t v51 = "";
    }
    unint64_t v74 = v51;
    unsigned int v54 = v69;
    v73(v17, v69, v47);
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v55 = 0;
    os_signpost_id_t v56 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v44, v46, v56, "MakeLazyDependency", v74, v55, 2u);
    MEMORY[0x19F3C9470](v55, -1, -1);

    unint64_t v52 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v52((uint64_t)v54, v47);
    v52((uint64_t)v17, v47);
    uint64_t v53 = v66;
    if (!v78) {
      goto LABEL_28;
    }
  }
  else
  {

    unint64_t v52 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v52((uint64_t)v45, v81);
    uint64_t v53 = v66;
    if (!v78) {
      goto LABEL_28;
    }
  }
  uint64_t v57 = v64;
  uint64_t v58 = v71;
  uint64_t v59 = v72;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v71, *MEMORY[0x1E4F38918], v72);
  swift_retain();
  sub_19F1DB9BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
LABEL_28:
  if (v53)
  {
    uint64_t v82 = &type metadata for AsyncObjectGraphMetrics;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v82);
    swift_release();
    swift_release();
    sub_19EF4BDC4((uint64_t)v77, v76, 0, MEMORY[0x1E4FBC898]);
    swift_release();
    swift_release();
    v52((uint64_t)v79, v81);
  }
  else
  {
    v52((uint64_t)v79, v81);
    swift_release();
    sub_19EF4BDC4((uint64_t)v77, v76, 0, MEMORY[0x1E4FBC898]);
    swift_release();
  }
  uint64_t v60 = v83;
  uint64_t v61 = v80;
  *(void *)uint64_t v80 = v83;
  *(void *)(v61 + 8) = 0;
  *(unsigned char *)(v61 + 16) = 1;
  *uint64_t v67 = v60;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EF35050@<X0>(uint64_t a1@<X0>, void (*a2)(unsigned char *, unsigned char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (**a5)(uint64_t)@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v81 = a3;
  uint64_t v82 = a4;
  uint64_t v80 = a2;
  uint64_t v87 = sub_19F1DB97C();
  uint64_t v79 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v78 = &v66[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_19F1DB8AC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v76 = &v66[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_19F1DB85C();
  uint64_t v88 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = &v66[-v15];
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = &v66[-v19];
  unint64_t v21 = *(void (**)(uint64_t))a1;
  uint64_t v22 = *(void *)(a1 + 8);
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v24 = *(void *)(a1 + 24);
  if (*(unsigned char *)(a1 + 32))
  {
    *a5 = v21;
    a5[1] = (void (*)(uint64_t))v22;
    a5[2] = (void (*)(uint64_t))v23;
    a5[3] = (void (*)(uint64_t))v24;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v69 = v11;
    uint64_t v70 = v10;
    unint64_t v77 = v18;
    uint64_t v83 = v21;
    uint64_t v84 = v23;
    uint64_t v86 = v24;
    unint64_t v74 = (uint64_t *)a5;
    type metadata accessor for BaseObjectGraph();
    swift_retain();
    uint64_t v26 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    v89[0] = v26;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_19EEAD6E0(v27);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v85 = v22;
    uint64_t v75 = v28;
    if (v28)
    {
      uint64_t v29 = swift_conformsToProtocol2();
      if (v29) {
        uint64_t v30 = v29;
      }
      else {
        uint64_t v30 = 0;
      }
      if (v29) {
        unint64_t v31 = &type metadata for Bag.Profile;
      }
      else {
        unint64_t v31 = 0;
      }
      if (v31)
      {
        uint64_t v32 = v20;
        uint64_t v33 = v6;
        os_signpost_type_t v34 = *(void (**)(ValueMetadata *, uint64_t))(v30 + 8);
        swift_retain();
        v34(v31, v30);
        uint64_t v6 = v33;
        unint64_t v20 = v32;
        unint64_t v31 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      unint64_t v31 = 0;
    }
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v72 = v31;
    uint64_t v35 = sub_19F1DB89C();
    uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v71 = v36;
    uint64_t v37 = sub_19F1DB87C();
    int v38 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v80 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 16);
      int v67 = v38;
      v80(v16, v20, v13);
      uint64_t v73 = (unsigned char *)v13;
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v68 = v6;
      uint64_t v41 = v40;
      v89[0] = v40;
      *(_DWORD *)unint64_t v39 = 136315138;
      unint64_t v90 = (ValueMetadata *)sub_19EEAD23C(0x656C69666F7250, 0xE700000000000000, v89);
      uint64_t v13 = (uint64_t)v73;
      sub_19F1DCB3C();
      os_signpost_id_t v42 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v37, (os_signpost_type_t)v67, v42, "MakeLazyDependency", "object=%s", v39, 0xCu);
      swift_arrayDestroy();
      uint64_t v43 = v41;
      uint64_t v6 = v68;
      MEMORY[0x19F3C9470](v43, -1, -1);
      MEMORY[0x19F3C9470](v39, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v16, v13);
      long long v44 = v80;
    }
    else
    {

      long long v44 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 16);
    }
    long long v45 = v77;
    uint64_t v73 = v20;
    uint64_t v80 = v44;
    v44(v16, v20, v13);
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v46 = v85;
    swift_retain();
    uint64_t v47 = v83;
    sub_19EF26C68(v83, v46, v81, v82);
    uint64_t v82 = v6;
    sub_19EF4C020(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
    sub_19EF4C020((uint64_t)v47, v46, v84, v86, 0);
    unint64_t v48 = sub_19F1DB87C();
    sub_19F1DB8CC();
    int v49 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      LODWORD(v81) = v49;
      swift_retain();
      uint64_t v50 = v76;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v51 = v69;
      uint64_t v52 = v70;
      if ((*(unsigned int (**)(const char *, uint64_t))(v69 + 88))(v50, v70) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v53 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(const char *, uint64_t))(v51 + 8))(v50, v52);
        uint64_t v53 = "";
      }
      uint64_t v76 = v53;
      uint64_t v55 = v77;
      v80(v16, v77, v13);
      os_signpost_id_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_signpost_id_t v56 = 0;
      os_signpost_id_t v57 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v48, (os_signpost_type_t)v81, v57, "MakeLazyDependency", v76, v56, 2u);
      MEMORY[0x19F3C9470](v56, -1, -1);

      unsigned int v54 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
      v54((uint64_t)v55, v13);
      v54((uint64_t)v16, v13);
    }
    else
    {

      unsigned int v54 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
      v54((uint64_t)v45, v13);
    }
    uint64_t v58 = v87;
    if (v72)
    {
      uint64_t v60 = v78;
      uint64_t v59 = v79;
      (*(void (**)(unsigned char *, void, uint64_t))(v79 + 104))(v78, *MEMORY[0x1E4F38918], v87);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v60, v58);
    }
    if (v75)
    {
      unint64_t v90 = &type metadata for Bag.Profile;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v90);
      swift_release();
      swift_release();
      sub_19EF4C020((uint64_t)v83, v85, v84, v86, 0);
      swift_release();
      swift_release();
      v54((uint64_t)v73, v13);
    }
    else
    {
      v54((uint64_t)v73, v13);
      swift_release();
      sub_19EF4C020((uint64_t)v83, v85, v84, v86, 0);
      swift_release();
    }
    uint64_t v62 = v89[0];
    uint64_t v61 = v89[1];
    uint64_t v63 = v89[2];
    uint64_t v64 = v89[3];
    *(void *)a1 = v89[0];
    *(void *)(a1 + 8) = v61;
    *(void *)(a1 + 16) = v63;
    *(void *)(a1 + 24) = v64;
    *(unsigned char *)(a1 + 32) = 1;
    uint64_t v65 = v74;
    *unint64_t v74 = v62;
    v65[1] = v61;
    v65[2] = v63;
    v65[3] = v64;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_19EF35960@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, unsigned char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (**a5)(uint64_t)@<X8>)
{
  uint64_t v89 = a3;
  uint64_t v90 = a4;
  uint64_t v88 = a2;
  uint64_t v8 = sub_19F1DB97C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v87 = &v75[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_19F1DB8AC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v75[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_19F1DB85C();
  MEMORY[0x1F4188790](v15);
  v91 = &v75[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v98 = &v75[-v21];
  uint64_t v22 = *(void (**)(uint64_t))a1;
  unint64_t v23 = *(void *)(a1 + 8);
  uint64_t v24 = *(void *)(a1 + 16);
  uint64_t v25 = *(void *)(a1 + 24);
  if (*(unsigned char *)(a1 + 32))
  {
    *a5 = v22;
    a5[1] = (void (*)(uint64_t))v23;
    a5[2] = (void (*)(uint64_t))v24;
    a5[3] = (void (*)(uint64_t))v25;
    return sub_19EF3C628((uint64_t)v22, v23);
  }
  else
  {
    uint64_t v82 = v5;
    uint64_t v96 = v20;
    uint64_t v86 = v19;
    uint64_t v80 = v11;
    unsigned int v92 = v22;
    uint64_t v94 = v24;
    uint64_t v95 = v25;
    uint64_t v84 = (uint64_t *)a5;
    unint64_t v27 = v23;
    type metadata accessor for BaseObjectGraph();
    unint64_t v93 = v27;
    swift_retain();
    uint64_t v28 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    v99[0] = v28;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = sub_19EEAD6E0(v29);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v81 = v9;
    uint64_t v85 = v30;
    uint64_t v79 = v12;
    uint64_t v78 = v14;
    if (v30
      && ((uint64_t v31 = swift_conformsToProtocol2()) != 0 ? (v32 = v31) : (v32 = 0),
          v31 ? (uint64_t v33 = &type metadata for JetEngineBootstrap.URLProtocolHandler) : (uint64_t v33 = 0),
          v33))
    {
      os_signpost_type_t v34 = *(void (**)(ValueMetadata *, uint64_t))(v32 + 8);
      swift_retain();
      v34(v33, v32);
      uint64_t v35 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v97 = v35;
      swift_release();
    }
    else
    {
      uint64_t v97 = 0;
    }
    uint64_t v83 = v8;
    uint64_t v36 = v98;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_19F1DB89C();
    __swift_project_value_buffer(v37, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    int v38 = sub_19F1DB87C();
    int v39 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v88 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v96 + 16);
      int v76 = v39;
      uint64_t v40 = v86;
      v88((uint64_t)v86, v36, v15);
      uint64_t v77 = v15;
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v99[0] = v42;
      *(_DWORD *)uint64_t v41 = 136315138;
      v100 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000012, 0x800000019F24DC80, v99);
      uint64_t v15 = v77;
      sub_19F1DCB3C();
      os_signpost_id_t v43 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v38, (os_signpost_type_t)v76, v43, "MakeLazyDependency", "object=%s", v41, 0xCu);
      swift_arrayDestroy();
      uint64_t v44 = v42;
      uint64_t v36 = v98;
      MEMORY[0x19F3C9470](v44, -1, -1);
      uint64_t v45 = v96;
      MEMORY[0x19F3C9470](v41, -1, -1);

      uint64_t v46 = v45;
      (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v40, v15);
      uint64_t v47 = v88;
    }
    else
    {

      uint64_t v46 = v96;
      uint64_t v47 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v96 + 16);
      uint64_t v40 = v86;
    }
    uint64_t v88 = v47;
    v47((uint64_t)v40, v36, v15);
    sub_19F1DB8EC();
    swift_allocObject();
    uint64_t v48 = sub_19F1DB8DC();
    unint64_t v49 = v93;
    swift_retain();
    uint64_t v50 = v92;
    uint64_t v51 = v82;
    sub_19EF26C68(v92, v49, v89, v90);
    uint64_t v90 = v51;
    sub_19EF4BF10(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
    sub_19EF4BF10((uint64_t)v50, v49, v94, v95, 0);
    uint64_t v52 = v48;
    uint64_t v53 = sub_19F1DB87C();
    unsigned int v54 = v91;
    sub_19F1DB8CC();
    int v55 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      swift_retain();
      os_signpost_id_t v56 = v78;
      sub_19F1DB8FC();
      uint64_t v89 = v52;
      swift_release();
      uint64_t v57 = v79;
      uint64_t v58 = v80;
      int v59 = (*(uint64_t (**)(unsigned char *, uint64_t))(v79 + 88))(v56, v80);
      int v60 = *MEMORY[0x1E4FBD340];
      LODWORD(v82) = v55;
      if (v59 == v60)
      {
        uint64_t v61 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v56, v58);
        uint64_t v61 = "";
      }
      uint64_t v63 = v86;
      v88((uint64_t)v86, v54, v15);
      uint64_t v64 = v54;
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v65 = 0;
      os_signpost_id_t v66 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v53, (os_signpost_type_t)v82, v66, "MakeLazyDependency", v61, v65, 2u);
      MEMORY[0x19F3C9470](v65, -1, -1);

      uint64_t v62 = *(void (**)(unsigned char *, uint64_t))(v96 + 8);
      v62(v64, v15);
      v62(v63, v15);
    }
    else
    {

      uint64_t v62 = *(void (**)(unsigned char *, uint64_t))(v46 + 8);
      v62(v54, v15);
    }
    uint64_t v67 = v83;
    if (v97)
    {
      uint64_t v68 = v81;
      uint64_t v69 = v87;
      (*(void (**)(unsigned char *, void, uint64_t))(v81 + 104))(v87, *MEMORY[0x1E4F38918], v83);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v68 + 8))(v69, v67);
    }
    if (v85)
    {
      v100 = &type metadata for JetEngineBootstrap.URLProtocolHandler;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v100);
      swift_release();
      swift_release();
      sub_19EF4BF10((uint64_t)v92, v93, v94, v95, 0);
      swift_release();
      swift_release();
      v62(v98, v15);
    }
    else
    {
      v62(v98, v15);
      swift_release();
      sub_19EF4BF10((uint64_t)v92, v93, v94, v95, 0);
      swift_release();
    }
    uint64_t v70 = v99[0];
    unint64_t v71 = v99[1];
    uint64_t v72 = v99[2];
    uint64_t v73 = v99[3];
    *(void *)a1 = v99[0];
    *(void *)(a1 + 8) = v71;
    *(void *)(a1 + 16) = v72;
    *(void *)(a1 + 24) = v73;
    *(unsigned char *)(a1 + 32) = 1;
    unint64_t v74 = v84;
    *uint64_t v84 = v70;
    v74[1] = v71;
    v74[2] = v72;
    v74[3] = v73;
    return sub_19EF3C628(v70, v71);
  }
}

uint64_t sub_19EF362A8@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, const char *a3@<X2>, uint64_t a4@<X3>, void (**a5)(uint64_t)@<X8>)
{
  unint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v73 = a2;
  uint64_t v72 = sub_19F1DB97C();
  uint64_t v8 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  unint64_t v71 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DB8AC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v68 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_19F1DB85C();
  uint64_t v13 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v62 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v79 = (char *)&v62 - v19;
  uint64_t v80 = a1;
  uint64_t v20 = *(void (**)(uint64_t))a1;
  if (*(unsigned char *)(a1 + 16))
  {
    *a5 = v20;
    return swift_unknownObjectRetain();
  }
  uint64_t v65 = v5;
  uint64_t v62 = v11;
  uint64_t v63 = v10;
  uint64_t v69 = v18;
  uint64_t v77 = v20;
  uint64_t v67 = (uint64_t *)a5;
  uint64_t v22 = *(void *)(v80 + 8);
  type metadata accessor for BaseObjectGraph();
  uint64_t v76 = v22;
  swift_retain();
  uint64_t v23 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v83 = v23;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_19EEAD6E0(v24);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  uint64_t v64 = v8;
  if (v25
    && ((uint64_t v26 = swift_conformsToProtocol2()) != 0 ? (v27 = v26) : (v27 = 0),
        v26 ? (uint64_t v28 = &type metadata for Bag) : (uint64_t v28 = 0),
        v28))
  {
    uint64_t v29 = *(void (**)(ValueMetadata *, uint64_t))(v27 + 8);
    swift_retain();
    v29(v28, v27);
    uint64_t v30 = sub_19F18D8AC();
    swift_release();
    swift_retain();
    sub_19F1DB9AC();
    swift_release();
  }
  else
  {
    uint64_t v30 = 0;
  }
  uint64_t v78 = v30;
  uint64_t v31 = v79;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v66 = v25;
  uint64_t v32 = sub_19F1DB89C();
  __swift_project_value_buffer(v32, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v33 = sub_19F1DB87C();
  os_signpost_type_t v34 = sub_19F1DC98C();
  char v35 = sub_19F1DCA6C();
  uint64_t v70 = v13;
  if (v35)
  {
    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v73(v16, v31, v81);
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v83 = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v82 = (ValueMetadata *)sub_19EEAD23C(6775106, 0xE300000000000000, &v83);
    uint64_t v31 = v79;
    sub_19F1DCB3C();
    os_signpost_id_t v38 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v33, v34, v38, "MakeLazyDependency", "object=%s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v37, -1, -1);
    MEMORY[0x19F3C9470](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v16, v81);
    int v39 = v73;
  }
  else
  {

    int v39 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  }
  uint64_t v73 = v39;
  v39(v16, v31, v81);
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  uint64_t v40 = v76;
  swift_retain();
  uint64_t v41 = v77;
  uint64_t v42 = v65;
  sub_19EF26C68(v77, v40, (uint64_t)v74, v75);
  uint64_t v75 = v42;
  os_signpost_id_t v43 = (uint64_t (*)(void))MEMORY[0x1E4FBC8F8];
  sub_19EF4BDC4(*(void *)v80, *(void *)(v80 + 8), *(unsigned char *)(v80 + 16), MEMORY[0x1E4FBC8F8]);
  sub_19EF4BDC4((uint64_t)v41, v40, 0, v43);
  uint64_t v44 = sub_19F1DB87C();
  uint64_t v45 = v69;
  sub_19F1DB8CC();
  os_signpost_type_t v46 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v47 = v81;
    swift_retain();
    uint64_t v48 = v68;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v50 = v62;
    uint64_t v49 = v63;
    if ((*(unsigned int (**)(char *, uint64_t))(v62 + 88))(v48, v63) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v51 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v49);
      uint64_t v51 = "";
    }
    unint64_t v74 = v51;
    unsigned int v54 = v69;
    v73(v16, v69, v47);
    int v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v55 = 0;
    os_signpost_id_t v56 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v44, v46, v56, "MakeLazyDependency", v74, v55, 2u);
    MEMORY[0x19F3C9470](v55, -1, -1);

    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v52((uint64_t)v54, v47);
    v52((uint64_t)v16, v47);
    uint64_t v53 = v66;
    if (!v78) {
      goto LABEL_28;
    }
  }
  else
  {

    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v52((uint64_t)v45, v81);
    uint64_t v53 = v66;
    if (!v78) {
      goto LABEL_28;
    }
  }
  uint64_t v57 = v64;
  uint64_t v58 = v71;
  uint64_t v59 = v72;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v71, *MEMORY[0x1E4F38918], v72);
  swift_retain();
  sub_19F1DB9BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
LABEL_28:
  if (v53)
  {
    uint64_t v82 = &type metadata for Bag;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v82);
    swift_release();
    swift_release();
    sub_19EF4BDC4((uint64_t)v77, v76, 0, MEMORY[0x1E4FBC8F8]);
    swift_release();
    swift_release();
    v52((uint64_t)v79, v81);
  }
  else
  {
    v52((uint64_t)v79, v81);
    swift_release();
    sub_19EF4BDC4((uint64_t)v77, v76, 0, MEMORY[0x1E4FBC8F8]);
    swift_release();
  }
  uint64_t v60 = v83;
  uint64_t v61 = v80;
  *(void *)uint64_t v80 = v83;
  *(void *)(v61 + 8) = 0;
  *(unsigned char *)(v61 + 16) = 1;
  *uint64_t v67 = v60;
  return swift_unknownObjectRetain();
}

uint64_t sub_19EF36BA4@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v80 = a3;
  uint64_t v81 = (void (*)(uint64_t, uint64_t))a4;
  uint64_t v79 = a2;
  uint64_t v78 = sub_19F1DB97C();
  uint64_t v8 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v77 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DB8AC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_19F1DB85C();
  MEMORY[0x1F4188790](v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v66 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v85 = (char *)&v66 - v21;
  if (*(unsigned char *)(a1 + 16))
  {
    *a5 = *(void *)a1;
    return swift_bridgeObjectRetain();
  }
  uint64_t v83 = *(void (**)(uint64_t))a1;
  uint64_t v84 = v20;
  uint64_t v72 = v5;
  uint64_t v67 = v13;
  uint64_t v69 = v10;
  uint64_t v76 = v19;
  unint64_t v74 = a5;
  uint64_t v23 = *(void *)(a1 + 8);
  type metadata accessor for BaseObjectGraph();
  uint64_t v82 = v23;
  swift_retain();
  uint64_t v24 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v87 = v24;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_19EEAD6E0(v25);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  uint64_t v70 = v8;
  uint64_t v75 = v26;
  uint64_t v68 = v11;
  if (v26
    && ((uint64_t v27 = swift_conformsToProtocol2()) != 0 ? (v28 = v27) : (v28 = 0),
        v27 ? (uint64_t v29 = &type metadata for JSONContext) : (uint64_t v29 = 0),
        v29))
  {
    uint64_t v30 = *(void (**)(ValueMetadata *, uint64_t))(v28 + 8);
    swift_retain();
    v30(v29, v28);
    uint64_t v31 = sub_19F18D8AC();
    swift_release();
    swift_retain();
    sub_19F1DB9AC();
    swift_release();
  }
  else
  {
    uint64_t v31 = 0;
  }
  uint64_t v32 = v85;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_19F1DB89C();
  uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v71 = v34;
  char v35 = sub_19F1DB87C();
  os_signpost_type_t v36 = sub_19F1DC98C();
  char v37 = sub_19F1DCA6C();
  uint64_t v73 = v31;
  if (v37)
  {
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
    v79(v17, v32, v14);
    os_signpost_id_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v66 = v14;
    uint64_t v40 = v39;
    uint64_t v87 = v39;
    *(_DWORD *)os_signpost_id_t v38 = 136315138;
    uint64_t v86 = (ValueMetadata *)sub_19EEAD23C(0x746E6F434E4F534ALL, 0xEB00000000747865, &v87);
    uint64_t v32 = v85;
    sub_19F1DCB3C();
    os_signpost_id_t v41 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v35, v36, v41, "MakeLazyDependency", "object=%s", v38, 0xCu);
    swift_arrayDestroy();
    uint64_t v42 = v40;
    uint64_t v14 = v66;
    MEMORY[0x19F3C9470](v42, -1, -1);
    MEMORY[0x19F3C9470](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v84 + 8))(v17, v14);
    os_signpost_id_t v43 = v79;
  }
  else
  {

    os_signpost_id_t v43 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  }
  uint64_t v79 = v43;
  v43(v17, v32, v14);
  sub_19F1DB8EC();
  swift_allocObject();
  uint64_t v44 = sub_19F1DB8DC();
  uint64_t v45 = v82;
  swift_retain();
  os_signpost_type_t v46 = v83;
  sub_19EF26C68(v83, v45, v80, (uint64_t)v81);
  uint64_t v47 = (uint64_t (*)(void))MEMORY[0x1E4FBC898];
  sub_19EF4BDC4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), MEMORY[0x1E4FBC898]);
  uint64_t v48 = v45;
  uint64_t v49 = v44;
  sub_19EF4BDC4((uint64_t)v46, v48, 0, v47);
  uint64_t v50 = sub_19F1DB87C();
  uint64_t v51 = v76;
  sub_19F1DB8CC();
  LODWORD(v81) = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    swift_retain();
    uint64_t v52 = v67;
    sub_19F1DB8FC();
    uint64_t v80 = v49;
    swift_release();
    uint64_t v54 = v68;
    uint64_t v53 = v69;
    if ((*(unsigned int (**)(char *, uint64_t))(v68 + 88))(v52, v69) == *MEMORY[0x1E4FBD340])
    {
      int v55 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
      int v55 = "";
    }
    uint64_t v72 = v55;
    uint64_t v57 = v76;
    v79(v17, v76, v14);
    uint64_t v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v58 = 0;
    os_signpost_id_t v59 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v50, (os_signpost_type_t)v81, v59, "MakeLazyDependency", v72, v58, 2u);
    MEMORY[0x19F3C9470](v58, -1, -1);

    os_signpost_id_t v56 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    v56((uint64_t)v57, v14);
    v56((uint64_t)v17, v14);
    if (!v73) {
      goto LABEL_28;
    }
  }
  else
  {

    os_signpost_id_t v56 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    v56((uint64_t)v51, v14);
    if (!v73) {
      goto LABEL_28;
    }
  }
  uint64_t v60 = *MEMORY[0x1E4F38918];
  uint64_t v61 = v70;
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 104);
  uint64_t v63 = v77;
  uint64_t v81 = v56;
  uint64_t v64 = v78;
  v62(v77, v60, v78);
  swift_retain();
  sub_19F1DB9BC();
  swift_release();
  os_signpost_id_t v56 = v81;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v64);
LABEL_28:
  if (v75)
  {
    uint64_t v86 = &type metadata for JSONContext;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v86);
    swift_release();
    swift_release();
    sub_19EF4BDC4((uint64_t)v83, v82, 0, MEMORY[0x1E4FBC898]);
    swift_release();
    swift_release();
    v56((uint64_t)v85, v14);
  }
  else
  {
    v56((uint64_t)v85, v14);
    swift_release();
    sub_19EF4BDC4((uint64_t)v83, v82, 0, MEMORY[0x1E4FBC898]);
    swift_release();
  }
  uint64_t v65 = v87;
  *(void *)a1 = v87;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *unint64_t v74 = v65;
  return swift_bridgeObjectRetain();
}

void sub_19EF374CC(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v78 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v61[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_19F1DB8AC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v72 = &v61[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_19F1DB85C();
  uint64_t v80 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v61[-v14];
  MEMORY[0x1F4188790](v16);
  uint64_t v79 = &v61[-v18];
  uint64_t v20 = *(void (**)(uint64_t))a1;
  uint64_t v19 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 16))
  {
    *(void *)a4 = v20;
    *(unsigned char *)(a4 + 8) = v19 & 1;
  }
  else
  {
    uint64_t v64 = v10;
    uint64_t v65 = v9;
    uint64_t v73 = v17;
    uint64_t v76 = v20;
    uint64_t v69 = (uint64_t *)a4;
    uint64_t v21 = v19;
    type metadata accessor for BaseObjectGraph();
    uint64_t v77 = v21;
    swift_retain();
    uint64_t v22 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v82 = v22;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_19EEAD6E0(v23);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v66 = v8;
    uint64_t v70 = v24;
    if (v24
      && ((v25 = swift_conformsToProtocol2()) != 0 ? (uint64_t v26 = v25) : (uint64_t v26 = 0),
          v25 ? (uint64_t v27 = &type metadata for IntentDispatchTimeout) : (uint64_t v27 = 0),
          v27))
    {
      uint64_t v28 = *(void (**)(ValueMetadata *, uint64_t))(v26 + 8);
      swift_retain();
      v28(v27, v26);
      uint64_t v29 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v67 = v29;
      swift_release();
    }
    else
    {
      uint64_t v67 = 0;
    }
    uint64_t v30 = v79;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v68 = v6;
    uint64_t v31 = sub_19F1DB89C();
    __swift_project_value_buffer(v31, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v32 = sub_19F1DB87C();
    int v33 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v71 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v80 + 16);
      int v62 = v33;
      v71(v15, v30, v12);
      uint64_t v34 = swift_slowAlloc();
      uint64_t v63 = v12;
      char v35 = (uint8_t *)v34;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v82 = v36;
      *(_DWORD *)char v35 = 136315138;
      uint64_t v84 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000015, 0x800000019F269150, &v82);
      sub_19F1DCB3C();
      os_signpost_id_t v37 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v32, (os_signpost_type_t)v62, v37, "MakeLazyDependency", "object=%s", v35, 0xCu);
      swift_arrayDestroy();
      uint64_t v38 = v36;
      uint64_t v30 = v79;
      MEMORY[0x19F3C9470](v38, -1, -1);
      uint64_t v39 = v35;
      uint64_t v12 = v63;
      MEMORY[0x19F3C9470](v39, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v15, v12);
      uint64_t v40 = v71;
    }
    else
    {

      uint64_t v40 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v80 + 16);
    }
    uint64_t v71 = v40;
    v40(v15, v30, v12);
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v41 = v77;
    swift_retain();
    uint64_t v42 = v76;
    uint64_t v43 = v81;
    sub_19EF26C68(v76, v41, v74, v75);
    uint64_t v81 = v43;
    sub_19EF4B22C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
    sub_19EF4B22C((uint64_t)v42, v41, 0);
    uint64_t v44 = sub_19F1DB87C();
    uint64_t v45 = v73;
    sub_19F1DB8CC();
    int v46 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      LODWORD(v75) = v46;
      swift_retain();
      uint64_t v47 = v72;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v49 = v64;
      uint64_t v48 = v65;
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v64 + 88))(v47, v65) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v50 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v47, v48);
        uint64_t v50 = "";
      }
      uint64_t v52 = v73;
      v71(v15, v73, v12);
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      os_signpost_id_t v54 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v44, (os_signpost_type_t)v75, v54, "MakeLazyDependency", v50, v53, 2u);
      MEMORY[0x19F3C9470](v53, -1, -1);

      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
      v51((uint64_t)v52, v12);
      v51((uint64_t)v15, v12);
    }
    else
    {

      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
      v51((uint64_t)v45, v12);
    }
    uint64_t v55 = v68;
    uint64_t v56 = v78;
    if (v67)
    {
      uint64_t v57 = v66;
      (*(void (**)(unsigned char *, void, uint64_t))(v78 + 104))(v66, *MEMORY[0x1E4F38918], v68);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v57, v55);
    }
    if (v70)
    {
      uint64_t v84 = &type metadata for IntentDispatchTimeout;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v84);
      swift_release();
      swift_release();
      sub_19EF4B22C((uint64_t)v76, v77, 0);
      swift_release();
      swift_release();
      v51((uint64_t)v79, v12);
    }
    else
    {
      v51((uint64_t)v79, v12);
      swift_release();
      sub_19EF4B22C((uint64_t)v76, v77, 0);
      swift_release();
    }
    uint64_t v58 = v82;
    uint64_t v59 = v83;
    *(void *)a1 = v82;
    *(void *)(a1 + 8) = v59;
    *(unsigned char *)(a1 + 16) = 1;
    uint64_t v60 = v69;
    *uint64_t v69 = v58;
    *((unsigned char *)v60 + 8) = v59;
  }
}

uint64_t sub_19EF37D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v95 = a3;
  uint64_t v8 = sub_19F1DB97C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v93 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DB8AC();
  uint64_t v88 = *(void *)(v11 - 8);
  uint64_t v89 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_19F1DB85C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v97 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v78 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v99 = (char *)&v78 - v20;
  uint64_t result = sub_19EEC3ED8(a1, (uint64_t)v103, &qword_1E9470AB0);
  if (v105 == 1)
  {
    long long v22 = v103[9];
    *(_OWORD *)(a5 + 128) = v103[8];
    *(_OWORD *)(a5 + 144) = v22;
    *(_OWORD *)(a5 + 160) = v103[10];
    *(unsigned char *)(a5 + 176) = v104;
    long long v23 = v103[5];
    *(_OWORD *)(a5 + 64) = v103[4];
    *(_OWORD *)(a5 + 80) = v23;
    long long v24 = v103[7];
    *(_OWORD *)(a5 + 96) = v103[6];
    *(_OWORD *)(a5 + 112) = v24;
    long long v25 = v103[1];
    *(_OWORD *)a5 = v103[0];
    *(_OWORD *)(a5 + 16) = v25;
    long long v26 = v103[2];
    long long v27 = v103[3];
  }
  else
  {
    uint64_t v90 = v18;
    uint64_t v78 = v9;
    uint64_t v79 = v8;
    uint64_t v98 = *((void *)&v103[0] + 1);
    uint64_t v82 = *(void (**)(uint64_t))&v103[0];
    type metadata accessor for BaseObjectGraph();
    uint64_t v28 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&v101[0] = v28;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = sub_19EEAD6E0(v29);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v31 = &type metadata for MetricsPipeline;
    uint64_t v83 = a4;
    uint64_t v84 = v30;
    if (v30)
    {
      uint64_t v32 = swift_conformsToProtocol2();
      if (v32) {
        uint64_t v33 = v32;
      }
      else {
        uint64_t v33 = 0;
      }
      if (!v32) {
        uint64_t v31 = 0;
      }
      if (v31)
      {
        uint64_t v34 = *(void (**)(ValueMetadata *, uint64_t))(v33 + 8);
        swift_retain();
        v34(v31, v33);
        uint64_t v31 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v31 = 0;
    }
    char v35 = v99;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v96 = v31;
    uint64_t v91 = v13;
    uint64_t v36 = sub_19F1DB89C();
    uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v80 = v37;
    uint64_t v38 = sub_19F1DB87C();
    int v39 = sub_19F1DC98C();
    char v40 = sub_19F1DCA6C();
    uint64_t v94 = v14;
    uint64_t v92 = a1;
    if (v40)
    {
      uint64_t v41 = *(void (**)(void, void, void))(v14 + 16);
      unint64_t v85 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v86 = v41;
      LODWORD(v81) = v39;
      uint64_t v42 = v90;
      uint64_t v43 = v91;
      v41(v90, v35, v91);
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(void *)&v101[0] = v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      v100 = (ValueMetadata *)sub_19EEAD23C(0x507363697274654DLL, 0xEF656E696C657069, (uint64_t *)v101);
      char v35 = v99;
      sub_19F1DCB3C();
      os_signpost_id_t v46 = sub_19F1DB83C();
      uint64_t v47 = v43;
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v38, (os_signpost_type_t)v81, v46, "MakeLazyDependency", "object=%s", v44, 0xCu);
      swift_arrayDestroy();
      uint64_t v48 = v45;
      uint64_t v14 = v94;
      MEMORY[0x19F3C9470](v48, -1, -1);
      uint64_t v49 = v44;
      a1 = v92;
      MEMORY[0x19F3C9470](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v43);
      unint64_t v51 = v85;
      uint64_t v50 = v86;
    }
    else
    {

      uint64_t v50 = *(void (**)(void, void, void))(v14 + 16);
      unint64_t v51 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v42 = v90;
      uint64_t v47 = v91;
    }
    uint64_t v52 = v47;
    unint64_t v85 = v51;
    uint64_t v86 = v50;
    v50(v42, v35, v47);
    sub_19F1DB8EC();
    swift_allocObject();
    uint64_t v53 = sub_19F1DB8DC();
    uint64_t v54 = v98;
    swift_retain();
    uint64_t v55 = v106;
    sub_19EF26C68(v82, v54, v95, v83);
    uint64_t v106 = v55;
    sub_19EEBD664(a1, &qword_1E9470AB0);
    swift_release();
    uint64_t v56 = sub_19F1DB87C();
    uint64_t v57 = v97;
    sub_19F1DB8CC();
    int v58 = sub_19F1DC97C();
    char v59 = sub_19F1DCA6C();
    uint64_t v81 = v53;
    if (v59)
    {
      swift_retain();
      uint64_t v60 = v87;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v62 = v88;
      uint64_t v61 = v89;
      int v63 = (*(uint64_t (**)(char *, uint64_t))(v88 + 88))(v60, v89);
      int v64 = *MEMORY[0x1E4FBD340];
      LODWORD(v95) = v58;
      if (v63 == v64)
      {
        uint64_t v65 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v61);
        uint64_t v65 = "";
      }
      uint64_t v67 = v90;
      uint64_t v52 = v91;
      v86(v90, v57, v91);
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v68 = 0;
      os_signpost_id_t v69 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v56, (os_signpost_type_t)v95, v69, "MakeLazyDependency", v65, v68, 2u);
      MEMORY[0x19F3C9470](v68, -1, -1);

      uint64_t v66 = *(void (**)(char *, uint64_t))(v94 + 8);
      v66(v57, v52);
      v66(v67, v52);
    }
    else
    {

      uint64_t v66 = *(void (**)(char *, uint64_t))(v14 + 8);
      v66(v57, v52);
    }
    uint64_t v70 = v92;
    if (v96)
    {
      uint64_t v72 = v78;
      uint64_t v71 = v79;
      uint64_t v73 = v93;
      (*(void (**)(char *, void, uint64_t))(v78 + 104))(v93, *MEMORY[0x1E4F38918], v79);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v71);
    }
    if (v84)
    {
      v100 = &type metadata for MetricsPipeline;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v100);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      v66(v99, v52);
    }
    else
    {
      v66(v99, v52);
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t result = sub_19EE99F44((uint64_t)v101, v70);
    *(unsigned char *)(v70 + 177) = 1;
    long long v74 = v101[9];
    *(_OWORD *)(a5 + 128) = v101[8];
    *(_OWORD *)(a5 + 144) = v74;
    *(_OWORD *)(a5 + 160) = v101[10];
    *(unsigned char *)(a5 + 176) = v102;
    long long v75 = v101[5];
    *(_OWORD *)(a5 + 64) = v101[4];
    *(_OWORD *)(a5 + 80) = v75;
    long long v76 = v101[7];
    *(_OWORD *)(a5 + 96) = v101[6];
    *(_OWORD *)(a5 + 112) = v76;
    long long v77 = v101[1];
    *(_OWORD *)a5 = v101[0];
    *(_OWORD *)(a5 + 16) = v77;
    long long v26 = v101[2];
    long long v27 = v101[3];
  }
  *(_OWORD *)(a5 + 32) = v26;
  *(_OWORD *)(a5 + 48) = v27;
  return result;
}

uint64_t sub_19EF38698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v80 = a3;
  uint64_t v79 = a2;
  uint64_t v7 = sub_19F1DB97C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v78 = &v65[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v75 = sub_19F1DB8AC();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v73 = &v65[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_19F1DB85C();
  uint64_t v90 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v84 = &v65[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v65[-v14];
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = &v65[-v17];
  uint64_t v85 = a1;
  uint64_t result = sub_19EEC3ED8(a1, (uint64_t)v88, &qword_1E9470A08);
  if (v89 == 1)
  {
    long long v20 = v88[3];
    long long v21 = v88[5];
    long long v22 = v88[6];
    a4[4] = v88[4];
    a4[5] = v21;
    a4[6] = v22;
    long long v23 = v88[1];
    long long v24 = v88[2];
    *a4 = v88[0];
    a4[1] = v23;
    a4[2] = v24;
    a4[3] = v20;
  }
  else
  {
    long long v76 = v15;
    uint64_t v82 = v4;
    uint64_t v69 = v7;
    uint64_t v81 = *((void *)&v88[0] + 1);
    uint64_t v70 = *(void (**)(uint64_t))&v88[0];
    type metadata accessor for BaseObjectGraph();
    uint64_t v25 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&v87[0] = v25;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_19EEAD6E0(v26);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v68 = v8;
    if (v27)
    {
      uint64_t v28 = swift_conformsToProtocol2();
      if (v28) {
        uint64_t v29 = v28;
      }
      else {
        uint64_t v29 = 0;
      }
      if (v28) {
        uint64_t v30 = &type metadata for SentryConfiguration;
      }
      else {
        uint64_t v30 = 0;
      }
      if (v30)
      {
        uint64_t v31 = *(void (**)(ValueMetadata *, uint64_t))(v29 + 8);
        swift_retain();
        v31(v30, v29);
        uint64_t v30 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v30 = 0;
    }
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v83 = v30;
    uint64_t v32 = sub_19F1DB89C();
    __swift_project_value_buffer(v32, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v33 = sub_19F1DB87C();
    int v34 = sub_19F1DC98C();
    char v35 = sub_19F1DCA6C();
    long long v77 = v18;
    uint64_t v71 = v27;
    if (v35)
    {
      uint64_t v72 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v90 + 16);
      uint64_t v36 = v76;
      v72(v76, v18, v11);
      int v66 = v34;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v67 = v11;
      uint64_t v38 = (uint8_t *)v37;
      uint64_t v39 = swift_slowAlloc();
      *(void *)&v87[0] = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      uint64_t v86 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000013, 0x800000019F269320, (uint64_t *)v87);
      sub_19F1DCB3C();
      os_signpost_id_t v40 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v33, (os_signpost_type_t)v66, v40, "MakeLazyDependency", "object=%s", v38, 0xCu);
      swift_arrayDestroy();
      uint64_t v41 = v39;
      uint64_t v18 = v77;
      uint64_t v42 = v82;
      MEMORY[0x19F3C9470](v41, -1, -1);
      uint64_t v43 = v38;
      uint64_t v11 = v67;
      MEMORY[0x19F3C9470](v43, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v36, v11);
      uint64_t v44 = v72;
    }
    else
    {

      uint64_t v44 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v90 + 16);
      uint64_t v42 = v82;
      uint64_t v36 = v76;
    }
    uint64_t v72 = v44;
    v44(v36, v18, v11);
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v45 = v81;
    swift_retain();
    sub_19EF26C68(v70, v45, v79, v80);
    sub_19EEBD664(v85, &qword_1E9470A08);
    swift_release();
    os_signpost_id_t v46 = sub_19F1DB87C();
    uint64_t v47 = v84;
    sub_19F1DB8CC();
    LODWORD(v80) = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      uint64_t v82 = v42;
      swift_retain();
      uint64_t v48 = v73;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v49 = v74;
      uint64_t v50 = v75;
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v74 + 88))(v48, v75) == *MEMORY[0x1E4FBD340])
      {
        unint64_t v51 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v48, v50);
        unint64_t v51 = "";
      }
      uint64_t v54 = v76;
      v72(v76, v84, v11);
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      os_signpost_id_t v56 = sub_19F1DB83C();
      uint64_t v53 = v11;
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v46, (os_signpost_type_t)v80, v56, "MakeLazyDependency", v51, v55, 2u);
      MEMORY[0x19F3C9470](v55, -1, -1);

      uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v90 + 8);
      v52(v84, v11);
      v52(v54, v11);
      uint64_t v18 = v77;
    }
    else
    {

      uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v90 + 8);
      v52(v47, v11);
      uint64_t v53 = v11;
    }
    if (v83)
    {
      uint64_t v57 = v68;
      int v58 = v78;
      uint64_t v59 = v69;
      (*(void (**)(unsigned char *, void, uint64_t))(v68 + 104))(v78, *MEMORY[0x1E4F38918], v69);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      uint64_t v60 = v58;
      uint64_t v18 = v77;
      (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v60, v59);
    }
    if (v71)
    {
      uint64_t v86 = &type metadata for SentryConfiguration;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v86);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      v52(v18, v53);
    }
    else
    {
      v52(v18, v53);
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t v61 = v85;
    uint64_t result = sub_19EF4B9D0((uint64_t)v87, v85);
    *(unsigned char *)(v61 + 112) = 1;
    long long v62 = v87[5];
    a4[4] = v87[4];
    a4[5] = v62;
    a4[6] = v87[6];
    long long v63 = v87[1];
    *a4 = v87[0];
    a4[1] = v63;
    long long v64 = v87[3];
    a4[2] = v87[2];
    a4[3] = v64;
  }
  return result;
}

__n128 sub_19EF390C4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v71 = a2;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v75 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB8AC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v70 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DB85C();
  uint64_t v78 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v76 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v60 - v15;
  MEMORY[0x1F4188790](v17);
  long long v77 = (char *)&v60 - v18;
  sub_19EEC3ED8(a1, (uint64_t)v81, &qword_1E9470998);
  if (v82 == 1)
  {
    long long v19 = v81[3];
    long long v20 = v81[4];
    *(_OWORD *)(a4 + 32) = v81[2];
    *(_OWORD *)(a4 + 48) = v19;
    *(_OWORD *)(a4 + 64) = v20;
    __n128 result = (__n128)v81[1];
    *(_OWORD *)a4 = v81[0];
    *(__n128 *)(a4 + 16) = result;
  }
  else
  {
    uint64_t v61 = v10;
    uint64_t v62 = v9;
    uint64_t v67 = a4;
    uint64_t v74 = *((void *)&v81[0] + 1);
    long long v64 = *(void (**)(uint64_t))&v81[0];
    type metadata accessor for BaseObjectGraph();
    uint64_t v22 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&v80[0] = v22;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_19EEAD6E0(v23);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    long long v63 = v8;
    uint64_t v68 = v24;
    if (v24)
    {
      uint64_t v25 = swift_conformsToProtocol2();
      if (v25) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 0;
      }
      if (v25) {
        uint64_t v27 = &type metadata for JetPackAssetSession.Configuration;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v27)
      {
        uint64_t v28 = *(void (**)(ValueMetadata *, uint64_t))(v26 + 8);
        swift_retain();
        v28(v27, v26);
        uint64_t v27 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v27 = 0;
    }
    uint64_t v73 = v27;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v65 = v6;
    uint64_t v29 = sub_19F1DB89C();
    __swift_project_value_buffer(v29, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    uint64_t v30 = v77;
    sub_19F1DB81C();
    uint64_t v31 = sub_19F1DB87C();
    os_signpost_type_t v32 = sub_19F1DC98C();
    char v33 = sub_19F1DCA6C();
    uint64_t v66 = a1;
    if (v33)
    {
      uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
      v69(v16, v30, v12);
      int v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v60 = v12;
      uint64_t v36 = v35;
      *(void *)&v80[0] = v35;
      *(_DWORD *)int v34 = 136315138;
      uint64_t v79 = (ValueMetadata *)sub_19EEAD23C(0x72756769666E6F43, 0xED00006E6F697461, (uint64_t *)v80);
      a1 = v66;
      sub_19F1DCB3C();
      os_signpost_id_t v37 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v31, v32, v37, "MakeLazyDependency", "object=%s", v34, 0xCu);
      swift_arrayDestroy();
      uint64_t v38 = v36;
      uint64_t v12 = v60;
      MEMORY[0x19F3C9470](v38, -1, -1);
      uint64_t v39 = v34;
      uint64_t v30 = v77;
      MEMORY[0x19F3C9470](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v16, v12);
      os_signpost_id_t v40 = v69;
    }
    else
    {

      os_signpost_id_t v40 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
    }
    uint64_t v69 = v40;
    v40(v16, v30, v12);
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v41 = v74;
    swift_retain();
    uint64_t v42 = v83;
    sub_19EF26C68(v64, v41, v71, v72);
    uint64_t v83 = v42;
    sub_19EEBD664(a1, &qword_1E9470998);
    swift_release();
    uint64_t v43 = sub_19F1DB87C();
    uint64_t v44 = v76;
    sub_19F1DB8CC();
    int v45 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      LODWORD(v72) = v45;
      swift_retain();
      os_signpost_id_t v46 = v70;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v47 = v61;
      uint64_t v48 = v62;
      if ((*(unsigned int (**)(char *, uint64_t))(v61 + 88))(v46, v62) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v49 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
        uint64_t v49 = "";
      }
      unint64_t v51 = v76;
      v69(v16, v76, v12);
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      os_signpost_id_t v53 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v43, (os_signpost_type_t)v72, v53, "MakeLazyDependency", v49, v52, 2u);
      MEMORY[0x19F3C9470](v52, -1, -1);

      uint64_t v50 = *(void (**)(char *, uint64_t))(v78 + 8);
      v50(v51, v12);
      v50(v16, v12);
      a1 = v66;
    }
    else
    {

      uint64_t v50 = *(void (**)(char *, uint64_t))(v78 + 8);
      v50(v44, v12);
    }
    uint64_t v54 = v65;
    uint64_t v55 = v75;
    os_signpost_id_t v56 = v77;
    if (v73)
    {
      uint64_t v57 = v63;
      (*(void (**)(char *, void, uint64_t))(v75 + 104))(v63, *MEMORY[0x1E4F38918], v65);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
    }
    if (v68)
    {
      uint64_t v79 = &type metadata for JetPackAssetSession.Configuration;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v79);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      v50(v56, v12);
    }
    else
    {
      v50(v56, v12);
      swift_release();
      swift_release();
      swift_release();
    }
    sub_19EEDFF38((uint64_t)v80, a1);
    *(unsigned char *)(a1 + 80) = 1;
    long long v58 = v80[3];
    uint64_t v59 = v67;
    *(_OWORD *)(v67 + 32) = v80[2];
    *(_OWORD *)(v59 + 48) = v58;
    *(_OWORD *)(v59 + 64) = v80[4];
    __n128 result = (__n128)v80[1];
    *(_OWORD *)uint64_t v59 = v80[0];
    *(__n128 *)(v59 + 16) = result;
  }
  return result;
}

uint64_t sub_19EF39A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X4>, uint64_t *a5@<X5>, uint64_t (*a6)(uint64_t *, uint64_t)@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9)
{
  uint64_t v69 = (unsigned char *)a7;
  uint64_t v78 = a8;
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  uint64_t v13 = sub_19F1DB8AC();
  uint64_t v71 = *(void *)(v13 - 8);
  uint64_t v72 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v70 = &v57[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_19F1DB85C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  long long v77 = &v57[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v18);
  long long v20 = &v57[-v19];
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = &v57[-v22];
  long long v76 = a4;
  sub_19EEC3ED8(a1, (uint64_t)v81, a4);
  if (v82) {
    return a6(v81, v78);
  }
  uint64_t v66 = a6;
  long long v64 = (void (*)(uint64_t))v81[0];
  uint64_t v73 = v81[1];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t started = type metadata accessor for StartUpPerformanceEvent();
  uint64_t v61 = v25;
  if (v25 == started)
  {
    uint64_t v62 = 0;
  }
  else
  {
    type metadata accessor for BaseObjectGraph();
    uint64_t v27 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    v80[0] = v27;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v62 = sub_19EEAD6E0(v28);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
  }
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v68 = v20;
  uint64_t v29 = sub_19F1DB89C();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v63 = v30;
  uint64_t v31 = sub_19F1DB87C();
  int v32 = sub_19F1DC98C();
  char v33 = sub_19F1DCA6C();
  uint64_t v65 = v16;
  if (v33)
  {
    unint64_t v59 = a9;
    uint64_t v60 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16);
    unint64_t v67 = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    int v34 = v68;
    v60(v68, v23, v15);
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v80[0] = v36;
    int v58 = v32;
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v83 = sub_19EEAD23C((uint64_t)v69, v59, v80);
    sub_19F1DCB3C();
    os_signpost_id_t v37 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v31, (os_signpost_type_t)v58, v37, "MakeLazyDependency", "object=%s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v36, -1, -1);
    uint64_t v38 = v35;
    uint64_t v16 = v65;
    MEMORY[0x19F3C9470](v38, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v34, v15);
    unint64_t v39 = v67;
    os_signpost_id_t v40 = v60;
  }
  else
  {

    os_signpost_id_t v40 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16);
    unint64_t v39 = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    int v34 = v68;
  }
  uint64_t v69 = v23;
  uint64_t v41 = v40;
  unint64_t v67 = v39;
  v40(v34, v23, v15);
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  uint64_t v42 = v73;
  swift_retain();
  uint64_t v43 = v79;
  sub_19EF26C68(v64, v42, v74, v75);
  uint64_t v79 = v43;
  uint64_t v75 = a1;
  sub_19EEBD664(a1, v76);
  swift_release();
  uint64_t v44 = sub_19F1DB87C();
  int v45 = v77;
  sub_19F1DB8CC();
  os_signpost_type_t v46 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    swift_retain();
    uint64_t v47 = v70;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v49 = v71;
    uint64_t v48 = v72;
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v71 + 88))(v47, v72) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v50 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v47, v48);
      uint64_t v50 = "";
    }
    uint64_t v52 = v68;
    v41(v68, v45, v15);
    os_signpost_id_t v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_id_t v53 = 0;
    os_signpost_id_t v54 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v44, v46, v54, "MakeLazyDependency", v50, v53, 2u);
    MEMORY[0x19F3C9470](v53, -1, -1);

    unint64_t v51 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
    v51(v45, v15);
    v51(v52, v15);
  }
  else
  {

    unint64_t v51 = *(void (**)(unsigned char *, uint64_t))(v16 + 8);
    v51(v45, v15);
  }
  uint64_t v55 = v75;
  uint64_t v56 = (uint64_t)v69;
  if (v62)
  {
    uint64_t v83 = v61;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&v83);
    swift_release();
    swift_release();
    swift_release_n();
    v51((unsigned char *)v56, v15);
  }
  else
  {
    v51(v69, v15);
    swift_release();
    swift_release();
  }
  sub_19EEC4154((uint64_t)v80, v55);
  *(unsigned char *)(v55 + 40) = 1;
  return v66(v80, v78);
}

uint64_t sub_19EF3A24C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t (*a10)(void))
{
  unint64_t v80 = a8;
  uint64_t v79 = a7;
  uint64_t v87 = a3;
  uint64_t v88 = a4;
  uint64_t v86 = a2;
  uint64_t v14 = a10;
  uint64_t v15 = sub_19F1DB97C();
  uint64_t v85 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v84 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_19F1DB8AC();
  uint64_t v82 = *(void *)(v17 - 8);
  uint64_t v83 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v81 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = a5(0);
  MEMORY[0x1F4188790](v93);
  long long v20 = (char *)&v72 - v19;
  uint64_t v21 = sub_19F1DB85C();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v97 = v21;
  uint64_t v98 = v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v94 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v72 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v96 = (char *)&v72 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(a6);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = a1;
  char v89 = a6;
  sub_19EEC3ED8(a1, (uint64_t)v31, a6);
  uint64_t v91 = v29;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v20 = v31;
  }
  else
  {
    uint64_t v78 = a9;
    uint64_t v73 = *(void (**)(uint64_t))v31;
    uint64_t v90 = *((void *)v31 + 1);
    type metadata accessor for BaseObjectGraph();
    uint64_t v32 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v101 = v32;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v34 = sub_19EEAD6E0(v33);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    if (v34
      && ((v35 = v93, (uint64_t v36 = swift_conformsToProtocol2()) != 0) ? (v37 = v36) : (v37 = 0),
          v36 ? (uint64_t v38 = v35) : (uint64_t v38 = 0),
          v38))
    {
      unint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      swift_retain();
      v39(v38, v37);
      uint64_t v40 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      swift_release();
    }
    else
    {
      uint64_t v40 = 0;
    }
    uint64_t v92 = v40;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v74 = v34;
    uint64_t v75 = v15;
    long long v77 = a10;
    uint64_t v41 = sub_19F1DB89C();
    __swift_project_value_buffer(v41, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    uint64_t v42 = v96;
    sub_19F1DB81C();
    uint64_t v43 = sub_19F1DB87C();
    os_signpost_type_t v44 = sub_19F1DC98C();
    char v45 = sub_19F1DCA6C();
    long long v76 = v20;
    if (v45)
    {
      uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
      v86(v27, v42, v97);
      os_signpost_type_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v101 = v47;
      *(_DWORD *)os_signpost_type_t v46 = 136315138;
      uint64_t v100 = sub_19EEAD23C(v79, v80, &v101);
      uint64_t v42 = v96;
      sub_19F1DCB3C();
      os_signpost_id_t v48 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v43, v44, v48, "MakeLazyDependency", "object=%s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19F3C9470](v47, -1, -1);
      uint64_t v49 = v46;
      long long v20 = v76;
      MEMORY[0x19F3C9470](v49, -1, -1);

      uint64_t v50 = v97;
      (*(void (**)(char *, uint64_t))(v98 + 8))(v27, v97);
      unint64_t v51 = v86;
    }
    else
    {

      uint64_t v50 = v97;
      unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
    }
    uint64_t v86 = v51;
    v51(v27, v42, v50);
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v52 = v90;
    swift_retain();
    uint64_t v53 = v99;
    sub_19EF26C68(v73, v52, v87, v88);
    uint64_t v99 = v53;
    sub_19EEBD664(v95, v89);
    swift_release();
    os_signpost_id_t v54 = sub_19F1DB87C();
    uint64_t v55 = v94;
    sub_19F1DB8CC();
    int v56 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      LODWORD(v89) = v56;
      swift_retain();
      uint64_t v57 = v81;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v59 = v82;
      uint64_t v58 = v83;
      if ((*(unsigned int (**)(char *, uint64_t))(v82 + 88))(v57, v83) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v60 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v58);
        uint64_t v60 = "";
      }
      uint64_t v63 = v94;
      uint64_t v64 = v97;
      v86(v27, v94, v97);
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v65 = 0;
      os_signpost_id_t v66 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v54, (os_signpost_type_t)v89, v66, "MakeLazyDependency", v60, v65, 2u);
      MEMORY[0x19F3C9470](v65, -1, -1);

      uint64_t v62 = *(void (**)(char *, uint64_t))(v98 + 8);
      v62(v63, v64);
      v62(v27, v64);
      long long v20 = v76;
    }
    else
    {

      uint64_t v61 = v55;
      uint64_t v62 = *(void (**)(char *, uint64_t))(v98 + 8);
      v62(v61, v50);
    }
    uint64_t v14 = v77;
    uint64_t v67 = v75;
    uint64_t v68 = v74;
    if (v92)
    {
      uint64_t v70 = v84;
      uint64_t v69 = v85;
      (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, *MEMORY[0x1E4F38918], v75);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v67);
    }
    if (v68)
    {
      uint64_t v101 = v93;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)(&v101);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      v62(v96, v97);
    }
    else
    {
      v62(v96, v97);
      swift_release();
      swift_release();
      swift_release();
    }
    sub_19EF4B4EC((uint64_t)v20, v95, v14);
    swift_storeEnumTagMultiPayload();
    a9 = v78;
  }
  return sub_19EF4B484((uint64_t)v20, a9, v14);
}

double sub_19EF3ABD4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v71 = a2;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v75 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB8AC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v70 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DB85C();
  uint64_t v78 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v76 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v60 - v15;
  MEMORY[0x1F4188790](v17);
  long long v77 = (char *)&v60 - v18;
  sub_19EEC3ED8(a1, (uint64_t)v83, &qword_1E9470948);
  if (v86 == 1)
  {
    long long v19 = v83[1];
    *(_OWORD *)a4 = v83[0];
    *(_OWORD *)(a4 + 16) = v19;
    double result = *(double *)&v84;
    *(_OWORD *)(a4 + 32) = v84;
    *(void *)(a4 + 48) = v85;
  }
  else
  {
    uint64_t v61 = v10;
    uint64_t v62 = v9;
    uint64_t v67 = (_OWORD *)a4;
    uint64_t v74 = *((void *)&v83[0] + 1);
    uint64_t v64 = *(void (**)(uint64_t))&v83[0];
    type metadata accessor for BaseObjectGraph();
    uint64_t v21 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&v80[0] = v21;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v23 = sub_19EEAD6E0(v22);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v63 = v8;
    uint64_t v68 = v23;
    if (v23)
    {
      uint64_t v24 = swift_conformsToProtocol2();
      if (v24) {
        uint64_t v25 = v24;
      }
      else {
        uint64_t v25 = 0;
      }
      if (v24) {
        uint64_t v26 = &type metadata for DiskJetPackLoader;
      }
      else {
        uint64_t v26 = 0;
      }
      if (v26)
      {
        uint64_t v27 = a1;
        uint64_t v28 = *(void (**)(ValueMetadata *, uint64_t))(v25 + 8);
        swift_retain();
        v28(v26, v25);
        a1 = v27;
        uint64_t v26 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v26 = 0;
    }
    uint64_t v73 = v26;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v65 = v6;
    uint64_t v29 = sub_19F1DB89C();
    __swift_project_value_buffer(v29, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    uint64_t v30 = v77;
    sub_19F1DB81C();
    uint64_t v31 = sub_19F1DB87C();
    os_signpost_type_t v32 = sub_19F1DC98C();
    char v33 = sub_19F1DCA6C();
    uint64_t v66 = a1;
    if (v33)
    {
      uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
      v69(v16, v30, v12);
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v60 = v12;
      uint64_t v36 = v35;
      *(void *)&v80[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v87 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000011, 0x800000019F269250, (uint64_t *)v80);
      a1 = v66;
      sub_19F1DCB3C();
      os_signpost_id_t v37 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v31, v32, v37, "MakeLazyDependency", "object=%s", v34, 0xCu);
      swift_arrayDestroy();
      uint64_t v38 = v36;
      uint64_t v12 = v60;
      MEMORY[0x19F3C9470](v38, -1, -1);
      unint64_t v39 = v34;
      uint64_t v30 = v77;
      MEMORY[0x19F3C9470](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v16, v12);
      uint64_t v40 = v69;
    }
    else
    {

      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
    }
    uint64_t v69 = v40;
    v40(v16, v30, v12);
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v41 = v74;
    swift_retain();
    uint64_t v42 = v79;
    sub_19EF26C68(v64, v41, v71, v72);
    uint64_t v79 = v42;
    sub_19EEBD664(a1, &qword_1E9470948);
    swift_release();
    uint64_t v43 = sub_19F1DB87C();
    os_signpost_type_t v44 = v76;
    sub_19F1DB8CC();
    int v45 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      LODWORD(v72) = v45;
      swift_retain();
      os_signpost_type_t v46 = v70;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v47 = v61;
      uint64_t v48 = v62;
      if ((*(unsigned int (**)(char *, uint64_t))(v61 + 88))(v46, v62) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v49 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
        uint64_t v49 = "";
      }
      unint64_t v51 = v76;
      v69(v16, v76, v12);
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      os_signpost_id_t v53 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v43, (os_signpost_type_t)v72, v53, "MakeLazyDependency", v49, v52, 2u);
      MEMORY[0x19F3C9470](v52, -1, -1);

      uint64_t v50 = *(void (**)(char *, uint64_t))(v78 + 8);
      v50(v51, v12);
      v50(v16, v12);
      a1 = v66;
    }
    else
    {

      uint64_t v50 = *(void (**)(char *, uint64_t))(v78 + 8);
      v50(v44, v12);
    }
    uint64_t v54 = v65;
    uint64_t v55 = v75;
    int v56 = v77;
    if (v73)
    {
      uint64_t v57 = v63;
      (*(void (**)(char *, void, uint64_t))(v75 + 104))(v63, *MEMORY[0x1E4F38918], v65);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
    }
    if (v68)
    {
      uint64_t v87 = &type metadata for DiskJetPackLoader;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v87);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      v50(v56, v12);
    }
    else
    {
      v50(v56, v12);
      swift_release();
      swift_release();
      swift_release();
    }
    sub_19EE5A0EC((uint64_t)v80, a1);
    *(unsigned char *)(a1 + 56) = 1;
    long long v58 = v80[1];
    uint64_t v59 = v67;
    *uint64_t v67 = v80[0];
    v59[1] = v58;
    double result = *(double *)&v81;
    v59[2] = v81;
    *((void *)v59 + 6) = v82;
  }
  return result;
}

double sub_19EF3B53C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v71 = a2;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v75 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB8AC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v70 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DB85C();
  uint64_t v78 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v76 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v60 - v15;
  MEMORY[0x1F4188790](v17);
  long long v77 = (char *)&v60 - v18;
  sub_19EEC3ED8(a1, (uint64_t)v83, &qword_1E9470930);
  if (v86 == 1)
  {
    long long v19 = v83[1];
    *(_OWORD *)a4 = v83[0];
    *(_OWORD *)(a4 + 16) = v19;
    double result = *(double *)&v84;
    *(_OWORD *)(a4 + 32) = v84;
    *(void *)(a4 + 48) = v85;
  }
  else
  {
    uint64_t v61 = v10;
    uint64_t v62 = v9;
    uint64_t v67 = (_OWORD *)a4;
    uint64_t v74 = *((void *)&v83[0] + 1);
    uint64_t v64 = *(void (**)(uint64_t))&v83[0];
    type metadata accessor for BaseObjectGraph();
    uint64_t v21 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&v80[0] = v21;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v23 = sub_19EEAD6E0(v22);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v63 = v8;
    uint64_t v68 = v23;
    if (v23)
    {
      uint64_t v24 = swift_conformsToProtocol2();
      if (v24) {
        uint64_t v25 = v24;
      }
      else {
        uint64_t v25 = 0;
      }
      if (v24) {
        uint64_t v26 = &type metadata for InMemoryJetPackLoader;
      }
      else {
        uint64_t v26 = 0;
      }
      if (v26)
      {
        uint64_t v27 = a1;
        uint64_t v28 = *(void (**)(ValueMetadata *, uint64_t))(v25 + 8);
        swift_retain();
        v28(v26, v25);
        a1 = v27;
        uint64_t v26 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v26 = 0;
    }
    uint64_t v73 = v26;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v65 = v6;
    uint64_t v29 = sub_19F1DB89C();
    __swift_project_value_buffer(v29, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    uint64_t v30 = v77;
    sub_19F1DB81C();
    uint64_t v31 = sub_19F1DB87C();
    os_signpost_type_t v32 = sub_19F1DC98C();
    char v33 = sub_19F1DCA6C();
    uint64_t v66 = a1;
    if (v33)
    {
      uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
      v69(v16, v30, v12);
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v60 = v12;
      uint64_t v36 = v35;
      *(void *)&v80[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v87 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000015, 0x800000019F269230, (uint64_t *)v80);
      a1 = v66;
      sub_19F1DCB3C();
      os_signpost_id_t v37 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v31, v32, v37, "MakeLazyDependency", "object=%s", v34, 0xCu);
      swift_arrayDestroy();
      uint64_t v38 = v36;
      uint64_t v12 = v60;
      MEMORY[0x19F3C9470](v38, -1, -1);
      unint64_t v39 = v34;
      uint64_t v30 = v77;
      MEMORY[0x19F3C9470](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v16, v12);
      uint64_t v40 = v69;
    }
    else
    {

      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
    }
    uint64_t v69 = v40;
    v40(v16, v30, v12);
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v41 = v74;
    swift_retain();
    uint64_t v42 = v79;
    sub_19EF26C68(v64, v41, v71, v72);
    uint64_t v79 = v42;
    sub_19EEBD664(a1, &qword_1E9470930);
    swift_release();
    uint64_t v43 = sub_19F1DB87C();
    os_signpost_type_t v44 = v76;
    sub_19F1DB8CC();
    int v45 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      LODWORD(v72) = v45;
      swift_retain();
      os_signpost_type_t v46 = v70;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v47 = v61;
      uint64_t v48 = v62;
      if ((*(unsigned int (**)(char *, uint64_t))(v61 + 88))(v46, v62) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v49 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
        uint64_t v49 = "";
      }
      unint64_t v51 = v76;
      v69(v16, v76, v12);
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      os_signpost_id_t v53 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v43, (os_signpost_type_t)v72, v53, "MakeLazyDependency", v49, v52, 2u);
      MEMORY[0x19F3C9470](v52, -1, -1);

      uint64_t v50 = *(void (**)(char *, uint64_t))(v78 + 8);
      v50(v51, v12);
      v50(v16, v12);
      a1 = v66;
    }
    else
    {

      uint64_t v50 = *(void (**)(char *, uint64_t))(v78 + 8);
      v50(v44, v12);
    }
    uint64_t v54 = v65;
    uint64_t v55 = v75;
    int v56 = v77;
    if (v73)
    {
      uint64_t v57 = v63;
      (*(void (**)(char *, void, uint64_t))(v75 + 104))(v63, *MEMORY[0x1E4F38918], v65);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
    }
    if (v68)
    {
      uint64_t v87 = &type metadata for InMemoryJetPackLoader;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v87);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      v50(v56, v12);
    }
    else
    {
      v50(v56, v12);
      swift_release();
      swift_release();
      swift_release();
    }
    sub_19EE5A148((uint64_t)v80, a1);
    *(unsigned char *)(a1 + 56) = 1;
    long long v58 = v80[1];
    uint64_t v59 = v67;
    *uint64_t v67 = v80[0];
    v59[1] = v58;
    double result = *(double *)&v81;
    v59[2] = v81;
    *((void *)v59 + 6) = v82;
  }
  return result;
}

uint64_t sub_19EF3BEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v18)(void **__return_ptr, uint64_t);
  uint64_t v19;
  unsigned int v20;
  uint64_t result;
  ValueMetadata *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_signpost_type_t v27;
  char v28;
  uint64_t v29;
  uint8_t *v30;
  ValueMetadata *v31;
  os_signpost_id_t v32;
  ValueMetadata *v33;
  uint8_t *v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  char *v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(void **__return_ptr, uint64_t);
  void *v41;
  uint64_t v42;
  int v43;
  NSObject *v44;
  uint64_t v45;
  char *v46;
  const char *v47;
  uint64_t v48;
  int v49;
  int v50;
  const char *v51;
  void (*v52)(uint64_t, uint64_t);
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  os_signpost_id_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  void (*v64)(uint64_t, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void *v70;
  void (*v71)(void **__return_ptr, uint64_t);
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  ValueMetadata *v78;

  uint64_t v69 = a3;
  uint64_t v70 = (void *)a4;
  uint64_t v6 = (const char *)sub_19F1DB8AC();
  uint64_t v7 = *((void *)v6 - 1);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DB85C();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = *(void (**)(void **__return_ptr, uint64_t))a1;
  long long v19 = *(void *)(a1 + 8);
  long long v20 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 17)) {
    return *(void *)a1;
  }
  uint64_t v60 = v9;
  uint64_t v61 = v7;
  uint64_t v62 = v6;
  uint64_t v66 = v15;
  uint64_t v67 = v14;
  uint64_t v71 = v18;
  uint64_t v73 = v20;
  uint64_t v75 = v4;
  long long v76 = v13;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  uint64_t v22 = (ValueMetadata *)static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v78 = v22;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v65 = sub_19EEAD6E0(v23);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v72 = v19;
  uint64_t v24 = sub_19F1DB89C();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v63 = v25;
  uint64_t v26 = sub_19F1DB87C();
  uint64_t v27 = sub_19F1DC98C();
  uint64_t v28 = sub_19F1DCA6C();
  uint64_t v74 = v10;
  uint64_t v68 = v17;
  uint64_t v29 = v66;
  if (v28)
  {
    uint64_t v64 = *(void (**)(uint64_t, char *, uint64_t))(v76 + 16);
    v64(v66, v17, v10);
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = (ValueMetadata *)swift_slowAlloc();
    uint64_t v78 = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    long long v77 = sub_19EEAD23C(0xD000000000000038, 0x800000019F2690D0, (uint64_t *)&v78);
    sub_19F1DCB3C();
    os_signpost_type_t v32 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v26, v27, v32, "MakeLazyDependency", "object=%s", v30, 0xCu);
    swift_arrayDestroy();
    char v33 = v31;
    uint64_t v17 = v68;
    MEMORY[0x19F3C9470](v33, -1, -1);
    uint64_t v34 = v30;
    uint64_t v10 = v74;
    MEMORY[0x19F3C9470](v34, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v29, v10);
    uint64_t v35 = v64;
  }
  else
  {

    uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v76 + 16);
  }
  uint64_t v36 = v75;
  os_signpost_id_t v37 = v17;
  uint64_t v38 = (void (*)(uint64_t, uint64_t, uint64_t))v35;
  v35(v29, v37, v10);
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  unint64_t v39 = v72;
  swift_retain();
  uint64_t v40 = v71;
  uint64_t v41 = sub_19EF26F28(v71, v39, v69, (uint64_t)v70);
  uint64_t v69 = v42;
  uint64_t v70 = v41;
  LODWORD(v64) = v43;
  sub_19EF49570(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(unsigned char *)(a1 + 17));
  sub_19EF49570((uint64_t)v40, v39, v73, 0);
  os_signpost_type_t v44 = sub_19F1DB87C();
  int v45 = v67;
  sub_19F1DB8CC();
  LODWORD(v63) = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    swift_retain();
    os_signpost_type_t v46 = v60;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v48 = v61;
    uint64_t v47 = v62;
    uint64_t v49 = (*(uint64_t (**)(char *, const char *))(v61 + 88))(v46, v62);
    uint64_t v50 = *MEMORY[0x1E4FBD340];
    uint64_t v75 = v36;
    if (v49 == v50)
    {
      unint64_t v51 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, const char *))(v48 + 8))(v46, v47);
      unint64_t v51 = "";
    }
    uint64_t v62 = v51;
    os_signpost_id_t v53 = v38;
    uint64_t v55 = v66;
    uint64_t v54 = v67;
    int v56 = v74;
    v53(v66, v67, v74);
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v57 = 0;
    long long v58 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v44, (os_signpost_type_t)v63, v58, "MakeLazyDependency", v62, v57, 2u);
    MEMORY[0x19F3C9470](v57, -1, -1);

    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
    v52(v54, v56);
    v52(v55, v56);
    if (!v65) {
      goto LABEL_17;
    }
  }
  else
  {

    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
    v52(v45, v10);
    if (!v65)
    {
LABEL_17:
      v52((uint64_t)v68, v74);
      sub_19EF49570((uint64_t)v71, v72, v73, 0);
      swift_release();
      goto LABEL_18;
    }
  }
  uint64_t v78 = &type metadata for IntentDispatchOptions.BadOrderingCanary;
  swift_retain();
  StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v78);
  swift_release();
  swift_release();
  sub_19EF49570((uint64_t)v71, v72, v73, 0);
  swift_release();
  v52((uint64_t)v68, v74);
LABEL_18:
  uint64_t v59 = v69;
  double result = (uint64_t)v70;
  *(void *)a1 = v70;
  *(void *)(a1 + 8) = v59;
  *(unsigned char *)(a1 + 16) = (_BYTE)v64;
  *(unsigned char *)(a1 + 17) = 1;
  return result;
}

uint64_t sub_19EF3C5C4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19EF3C5FC(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_19EF3C628(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_19EF3C670()
{
  sub_19EEBDC10(0, &qword_1EB392278);
  v13[3] = 0;
  void v13[4] = 0xE000000000000000;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  v13[0] = 0xD000000000000015;
  v13[1] = 0x800000019F269430;
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  unint64_t v14 = 0xD000000000000015;
  unint64_t v15 = 0x800000019F269430;
  if (*(void *)(sub_19EF27510(*(void *)(v0 + 16)) + 16))
  {
    _OWORD v13[2] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708D8);
    sub_19EF4B32C();
    sub_19F1DBCCC();
    swift_bridgeObjectRelease();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v13, " Did you mean ");
    HIBYTE(v13[1]) = -18;
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_19EF9EB98(v1);
    swift_bridgeObjectRelease();
    v13[0] = (uint64_t)v2;
    swift_retain();
    sub_19F131770(v13);
    swift_release();
    int64_t v3 = *(void *)(v13[0] + 16);
    if (v3)
    {
      uint64_t v12 = MEMORY[0x1E4FBC860];
      sub_19EEA1364(0, v3, 0);
      uint64_t v4 = 0;
      uint64_t v5 = v12;
      do
      {
        v13[0] = 60;
        v13[1] = 0xE100000000000000;
        sub_19F1DD98C();
        sub_19F1DBEFC();
        swift_bridgeObjectRelease();
        sub_19F1DBEFC();
        uint64_t v6 = v13[0];
        uint64_t v7 = v13[1];
        unint64_t v9 = *(void *)(v12 + 16);
        unint64_t v8 = *(void *)(v12 + 24);
        if (v9 >= v8 >> 1) {
          sub_19EEA1364(v8 > 1, v9 + 1, 1);
        }
        ++v4;
        *(void *)(v12 + 16) = v9 + 1;
        unint64_t v10 = v12 + 16 * v9;
        *(void *)(v10 + 32) = v6;
        *(void *)(v10 + 40) = v7;
      }
      while (v3 != v4);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v5 = MEMORY[0x1E4FBC860];
    }
    v13[0] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
    sub_19EEA5E10((unint64_t *)&qword_1EB3931E0, &qword_1EB3931D8);
    sub_19F1DBCCC();
    swift_bridgeObjectRelease();
    strcpy((char *)v13, " Candidates: ");
    HIWORD(v13[1]) = -4864;
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_19EF3CAB8(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

ValueMetadata *type metadata accessor for JetEngineBootstrap()
{
  return &type metadata for JetEngineBootstrap;
}

unint64_t destroy for JetEngineBootstrap.URLProtocolHandler(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for JetEngineBootstrap.URLProtocolHandler(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for JetEngineBootstrap.URLProtocolHandler(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JetEngineBootstrap.URLProtocolHandler(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JetEngineBootstrap.URLProtocolHandler(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for JetEngineBootstrap.URLProtocolHandler(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_19EF3CDC4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_19EF3CDDC(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for JetEngineBootstrap.URLProtocolHandler()
{
  return &type metadata for JetEngineBootstrap.URLProtocolHandler;
}

void type metadata accessor for CFRunLoopSource(uint64_t a1)
{
}

void type metadata accessor for SignpostComponent(uint64_t a1)
{
}

void type metadata accessor for MediaActivityType(uint64_t a1)
{
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t sub_19EF3CE80(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 152)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_19EF3CEDC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 152) = 0;
    }
    if (a2) {
      *(void *)(result + 56) = a2;
    }
  }
  return result;
}

void type metadata accessor for __sFILE(uint64_t a1)
{
}

void type metadata accessor for QualityOfService(uint64_t a1)
{
}

void type metadata accessor for AMSMediaArtworkCropStyle(uint64_t a1)
{
}

void type metadata accessor for AMSMediaArtworkFormat(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

uint64_t sub_19EF3CFB8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_19EF3CFD8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for MonotonicTime(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MonotonicTime(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for PropertyListFormat(uint64_t a1)
{
}

void type metadata accessor for CFRunLoopTimer(uint64_t a1)
{
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

void type metadata accessor for CachePolicy(uint64_t a1)
{
}

void type metadata accessor for CFBoolean(uint64_t a1)
{
}

uint64_t sub_19EF3D0E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v19[3] = 0;
  v19[4] = 0xE000000000000000;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  v19[0] = a1;
  v19[1] = a2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  if (*(void *)(a3(*(void *)(v3 + 16)) + 16))
  {
    _OWORD v19[2] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708D8);
    sub_19EF4B32C();
    sub_19F1DBCCC();
    swift_bridgeObjectRelease();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v19, " Did you mean ");
    HIBYTE(v19[1]) = -18;
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = swift_bridgeObjectRetain();
    long long v8 = sub_19EF9EB98(v7);
    swift_bridgeObjectRelease();
    v19[0] = (uint64_t)v8;
    swift_retain();
    sub_19F131770(v19);
    swift_release();
    int64_t v9 = *(void *)(v19[0] + 16);
    if (v9)
    {
      uint64_t v18 = MEMORY[0x1E4FBC860];
      sub_19EEA1364(0, v9, 0);
      uint64_t v10 = 0;
      uint64_t v11 = v18;
      do
      {
        v19[0] = 60;
        v19[1] = 0xE100000000000000;
        sub_19F1DD98C();
        sub_19F1DBEFC();
        swift_bridgeObjectRelease();
        sub_19F1DBEFC();
        uint64_t v12 = v19[0];
        uint64_t v13 = v19[1];
        unint64_t v15 = *(void *)(v18 + 16);
        unint64_t v14 = *(void *)(v18 + 24);
        if (v15 >= v14 >> 1) {
          sub_19EEA1364(v14 > 1, v15 + 1, 1);
        }
        ++v10;
        *(void *)(v18 + 16) = v15 + 1;
        unint64_t v16 = v18 + 16 * v15;
        *(void *)(v16 + 32) = v12;
        *(void *)(v16 + 40) = v13;
      }
      while (v9 != v10);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v11 = MEMORY[0x1E4FBC860];
    }
    v19[0] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
    sub_19EEA5E10((unint64_t *)&qword_1EB3931E0, &qword_1EB3931D8);
    sub_19F1DBCCC();
    swift_bridgeObjectRelease();
    strcpy((char *)v19, " Candidates: ");
    HIWORD(v19[1]) = -4864;
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
  }
  return v20;
}

uint64_t sub_19EF3D4D0()
{
  return sub_19EF3D0E4(0xD000000000000033, 0x800000019F269390, sub_19EF27CD8);
}

uint64_t sub_19EF3D500()
{
  return sub_19EF3D0E4(0xD000000000000024, 0x800000019F269360, sub_19EF280B0);
}

uint64_t sub_19EF3D530()
{
  return sub_19EF3D0E4(0xD000000000000034, 0x800000019F269270, sub_19EF28510);
}

uint64_t sub_19EF3D560()
{
  return sub_19EF3D0E4(0xD00000000000002DLL, 0x800000019F269190, (uint64_t (*)(void))sub_19EF288E8);
}

uint64_t sub_19EF3D590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void (**a4)(uint64_t)@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v81 = a3;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DB8AC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_19F1DB85C();
  uint64_t v84 = *(void *)(v13 - 8);
  uint64_t v85 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v82 = (char *)&v65 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v83 = (char *)&v65 - v18;
  long long v19 = *(void (**)(uint64_t))a1;
  if (*(unsigned char *)(a1 + 16))
  {
    *a4 = v19;
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v66 = v11;
    long long v76 = v17;
    uint64_t v69 = v7;
    uint64_t v71 = v6;
    uint64_t v72 = (uint64_t *)a4;
    uint64_t v21 = *(void *)(a1 + 8);
    type metadata accessor for BaseObjectGraph();
    swift_retain();
    uint64_t v22 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v88 = v22;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_19EEAD6E0(v23);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v68 = v9;
    uint64_t v79 = v24;
    if (v24)
    {
      uint64_t v25 = swift_conformsToProtocol2();
      if (v25) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 0;
      }
      if (v25) {
        uint64_t v27 = &type metadata for AsyncObjectGraphMetrics;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v27)
      {
        uint64_t v28 = v21;
        uint64_t v29 = v19;
        uint64_t v30 = *(void (**)(ValueMetadata *, uint64_t))(v26 + 8);
        swift_retain();
        v30(v27, v26);
        long long v19 = v29;
        uint64_t v21 = v28;
        uint64_t v27 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v27 = 0;
    }
    uint64_t v67 = v10;
    uint64_t v78 = v27;
    uint64_t v75 = a1;
    uint64_t v31 = v83;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_19F1DB89C();
    uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v70 = v33;
    uint64_t v34 = sub_19F1DB87C();
    os_signpost_type_t v35 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
      uint64_t v36 = v82;
      v73(v82, v31, v85);
      uint64_t v74 = v21;
      os_signpost_id_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v88 = v38;
      *(_DWORD *)os_signpost_id_t v37 = 136315138;
      uint64_t v87 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000017, 0x800000019F268FE0, &v88);
      uint64_t v21 = v74;
      sub_19F1DCB3C();
      os_signpost_id_t v39 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v34, v35, v39, "MakeLazyDependency", "object=%s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19F3C9470](v38, -1, -1);
      uint64_t v40 = v37;
      uint64_t v31 = v83;
      MEMORY[0x19F3C9470](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v84 + 8))(v36, v85);
      uint64_t v41 = v73;
      uint64_t v42 = v76;
    }
    else
    {

      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
      uint64_t v42 = v76;
      uint64_t v36 = v82;
    }
    uint64_t v43 = v78;
    v41(v36, v31, v85);
    sub_19F1DB8EC();
    swift_allocObject();
    uint64_t v44 = sub_19F1DB8DC();
    uint64_t v45 = v86;
    sub_19EF26C68(v19, v21, v80, v81);
    uint64_t v86 = v45;
    if (v45)
    {
      (*(void (**)(char *, uint64_t))(v84 + 8))(v31, v85);
      swift_release();
      swift_release();
      swift_release();
      return sub_19EF4BDC4((uint64_t)v19, v21, 0, MEMORY[0x1E4FBC898]);
    }
    else
    {
      uint64_t v73 = v41;
      uint64_t v74 = v21;
      sub_19EF4BDC4(*(void *)v75, *(void *)(v75 + 8), *(unsigned char *)(v75 + 16), MEMORY[0x1E4FBC898]);
      os_signpost_type_t v46 = sub_19F1DB87C();
      uint64_t v47 = v42;
      sub_19F1DB8CC();
      os_signpost_type_t v48 = sub_19F1DC97C();
      char v49 = sub_19F1DCA6C();
      uint64_t v82 = (char *)v44;
      if (v49)
      {
        swift_retain();
        uint64_t v50 = v77;
        sub_19F1DB8FC();
        swift_release();
        uint64_t v51 = v66;
        uint64_t v52 = v67;
        BOOL v53 = (*(unsigned int (**)(char *, uint64_t))(v66 + 88))(v50, v67) == *MEMORY[0x1E4FBD340];
        uint64_t v65 = v19;
        if (v53)
        {
          uint64_t v55 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
          uint64_t v55 = "";
        }
        uint64_t v56 = v85;
        v73(v36, v47, v85);
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v57 = 0;
        os_signpost_id_t v58 = sub_19F1DB83C();
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v46, v48, v58, "MakeLazyDependency", v55, v57, 2u);
        MEMORY[0x19F3C9470](v57, -1, -1);

        uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v54((uint64_t)v47, v56);
        v54((uint64_t)v36, v56);
        long long v19 = v65;
        uint64_t v43 = v78;
      }
      else
      {

        uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v54((uint64_t)v47, v85);
      }
      uint64_t v59 = v74;
      uint64_t v60 = v71;
      if (v43)
      {
        uint64_t v62 = v68;
        uint64_t v61 = v69;
        (*(void (**)(char *, void, uint64_t))(v69 + 104))(v68, *MEMORY[0x1E4F38918], v71);
        swift_retain();
        sub_19F1DB9BC();
        swift_release();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
      }
      if (v79)
      {
        uint64_t v87 = &type metadata for AsyncObjectGraphMetrics;
        swift_retain();
        StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v87);
        swift_release();
        swift_release_n();
        swift_release();
        v54((uint64_t)v83, v85);
      }
      else
      {
        v54((uint64_t)v83, v85);
        swift_release();
        swift_release();
      }
      uint64_t v63 = v88;
      uint64_t v64 = v75;
      *(void *)uint64_t v75 = v88;
      *(void *)(v64 + 8) = 0;
      *(unsigned char *)(v64 + 16) = 1;
      swift_bridgeObjectRetain();
      uint64_t result = sub_19EF4BDC4((uint64_t)v19, v59, 0, MEMORY[0x1E4FBC898]);
      *uint64_t v72 = v63;
    }
  }
  return result;
}

void (*sub_19EF3DEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(void **__return_ptr, uint64_t)
{
  void (*v18)(void **__return_ptr, uint64_t);
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  char v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  os_signpost_id_t v29;
  uint64_t v30;
  uint8_t *v31;
  void (*v32)(char *, char *, uint64_t);
  void *v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;
  char *v37;
  const char *v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  const char *v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  os_signpost_id_t v49;
  os_log_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(void **__return_ptr, uint64_t);
  char *v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  uint64_t v5 = v4;
  uint64_t v65 = a3;
  uint64_t v66 = (char *)a4;
  uint64_t v7 = sub_19F1DB8AC();
  uint64_t v62 = *(const char **)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v61 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB85C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v52 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v52 - v16;
  uint64_t v18 = *(void (**)(void **__return_ptr, uint64_t))a1;
  if (*(unsigned char *)(a1 + 16))
  {
    swift_retain();
    return v18;
  }
  else
  {
    BOOL v53 = v7;
    os_signpost_id_t v58 = v15;
    long long v19 = qword_1E946E608;
    uint64_t v63 = *(void *)(a1 + 8);
    swift_retain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_19F1DB89C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v55 = v21;
    uint64_t v22 = sub_19F1DB87C();
    LODWORD(v56) = sub_19F1DC98C();
    uint64_t v23 = sub_19F1DCA6C();
    uint64_t v57 = a1;
    uint64_t v64 = v10;
    if (v23)
    {
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v24(v14, v17, v9);
      uint64_t v54 = v5;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v59 = v9;
      uint64_t v26 = (uint8_t *)v25;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v60 = v18;
      uint64_t v28 = v27;
      uint64_t v68 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v67 = sub_19EEAD23C(0xD000000000000017, 0x800000019F269080, &v68);
      uint64_t v5 = v54;
      sub_19F1DCB3C();
      uint64_t v29 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v22, (os_signpost_type_t)v56, v29, "MakeLazyDependency", "object=%s", v26, 0xCu);
      swift_arrayDestroy();
      uint64_t v30 = v28;
      uint64_t v18 = v60;
      MEMORY[0x19F3C9470](v30, -1, -1);
      uint64_t v31 = v26;
      uint64_t v9 = v59;
      MEMORY[0x19F3C9470](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v64 + 8))(v14, v9);
      uint64_t v32 = v24;
      v24(v14, v17, v9);
    }
    else
    {

      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v32(v14, v17, v9);
    }
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v33 = sub_19EF26DBC(v18, v63, v65, (uint64_t)v66);
    uint64_t v34 = v9;
    if (v5)
    {
      (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v9);
      swift_release();
      sub_19EEAE6F8();
    }
    else
    {
      uint64_t v9 = (uint64_t)v33;
      uint64_t v66 = v17;
      uint64_t v56 = (void (*)(char *, uint64_t, uint64_t))v32;
      uint64_t v59 = v34;
      uint64_t v60 = v18;
      sub_19EEAE6F8();
      os_signpost_type_t v35 = sub_19F1DB87C();
      uint64_t v36 = v58;
      sub_19F1DB8CC();
      LODWORD(v65) = sub_19F1DC97C();
      if (sub_19F1DCA6C())
      {
        uint64_t v55 = v35;
        swift_retain();
        os_signpost_id_t v37 = v61;
        sub_19F1DB8FC();
        swift_release();
        uint64_t v38 = v62;
        os_signpost_id_t v39 = v53;
        uint64_t v40 = (*((uint64_t (**)(char *, uint64_t))v62 + 11))(v37, v53);
        uint64_t v41 = *MEMORY[0x1E4FBD340];
        uint64_t v42 = (uint64_t)v66;
        uint64_t v54 = 0;
        if (v40 == v41)
        {
          uint64_t v43 = "[Error] Interval already ended";
        }
        else
        {
          (*((void (**)(char *, uint64_t))v38 + 1))(v37, v39);
          uint64_t v43 = "";
        }
        uint64_t v62 = v43;
        uint64_t v47 = v57;
        os_signpost_type_t v46 = v59;
        v56(v14, v58, v59);
        os_signpost_type_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_signpost_type_t v48 = 0;
        char v49 = sub_19F1DB83C();
        uint64_t v50 = v55;
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v55, (os_signpost_type_t)v65, v49, "MakeLazyDependency", v62, v48, 2u);
        MEMORY[0x19F3C9470](v48, -1, -1);

        uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        v44(v58, v46);
        v44((uint64_t)v14, v46);
      }
      else
      {

        uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        uint64_t v45 = v36;
        os_signpost_type_t v46 = v59;
        v44(v45, v59);
        uint64_t v42 = (uint64_t)v66;
        uint64_t v47 = v57;
      }
      v44(v42, v46);
      swift_release();
      *(void *)uint64_t v47 = v9;
      *(void *)(v47 + 8) = 0;
      *(unsigned char *)(v47 + 16) = 1;
      swift_retain();
      sub_19EEAE6F8();
    }
  }
  return (void (*)(void **__return_ptr, uint64_t))v9;
}

void (*sub_19EF3E500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(void **__return_ptr, uint64_t)
{
  void (*v18)(void **__return_ptr, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  const char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_signpost_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  os_signpost_id_t v38;
  uint64_t v39;
  uint8_t *v40;
  void (*v41)(const char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  os_signpost_type_t v57;
  uint64_t v58;
  const char *v59;
  uint8_t *v60;
  os_signpost_id_t v61;
  void (*v62)(uint64_t, uint64_t);
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(const char *, char *, uint64_t);
  char *v79;
  void (*v80)(void **__return_ptr, uint64_t);
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(void **__return_ptr, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  char v89 = a3;
  uint64_t v90 = (void (*)(void **__return_ptr, uint64_t))a4;
  uint64_t v5 = sub_19F1DB97C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB8AC();
  uint64_t v83 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v82 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DB85C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v91 = (char *)&v72 - v17;
  uint64_t v18 = *(void (**)(void **__return_ptr, uint64_t))a1;
  uint64_t v92 = *(void *)(a1 + 8);
  uint64_t v88 = a1;
  if (*(unsigned char *)(a1 + 16))
  {
    sub_19EE47F40((uint64_t)v18);
    return v18;
  }
  uint64_t v73 = v9;
  uint64_t v86 = v16;
  uint64_t v79 = v15;
  uint64_t v75 = v6;
  long long v76 = v5;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  long long v19 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v95 = v19;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_19EEAD6E0(v20);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  uint64_t v74 = v8;
  uint64_t v85 = v21;
  if (!v21) {
    goto LABEL_13;
  }
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946E6A0);
  uint64_t v23 = swift_conformsToProtocol2();
  if (v23) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 0;
  }
  if (!v23) {
    uint64_t v22 = 0;
  }
  if (v22)
  {
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    swift_retain();
    v25(v22, v24);
    uint64_t v26 = sub_19F18D8AC();
    swift_release();
    swift_retain();
    sub_19F1DB9AC();
    uint64_t v81 = v26;
    swift_release();
  }
  else
  {
LABEL_13:
    uint64_t v81 = 0;
  }
  uint64_t v27 = v86;
  uint64_t v84 = v12;
  uint64_t v87 = v11;
  uint64_t v28 = v91;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_19F1DB89C();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  long long v77 = v30;
  uint64_t v31 = sub_19F1DB87C();
  uint64_t v32 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v33 = v84;
    uint64_t v78 = *(void (**)(const char *, char *, uint64_t))(v84 + 16);
    uint64_t v34 = v87;
    v78(v27, v28, v87);
    os_signpost_type_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v80 = v18;
    os_signpost_id_t v37 = v36;
    uint64_t v95 = v36;
    *(_DWORD *)os_signpost_type_t v35 = 136315138;
    uint64_t v94 = sub_19EEAD23C(0xD00000000000001ELL, 0x800000019F269410, &v95);
    uint64_t v27 = v86;
    sub_19F1DCB3C();
    uint64_t v38 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v31, v32, v38, "MakeLazyDependency", "object=%s", v35, 0xCu);
    swift_arrayDestroy();
    os_signpost_id_t v39 = v37;
    uint64_t v18 = v80;
    MEMORY[0x19F3C9470](v39, -1, -1);
    uint64_t v40 = v35;
    uint64_t v28 = v91;
    MEMORY[0x19F3C9470](v40, -1, -1);

    (*(void (**)(const char *, uint64_t))(v33 + 8))(v27, v34);
    uint64_t v41 = v78;
    v78(v27, v28, v34);
  }
  else
  {

    uint64_t v33 = v84;
    uint64_t v41 = *(void (**)(const char *, char *, uint64_t))(v84 + 16);
    uint64_t v34 = v87;
    v41(v27, v28, v87);
  }
  sub_19F1DB8EC();
  swift_allocObject();
  uint64_t v42 = sub_19F1DB8DC();
  uint64_t v43 = v93;
  uint64_t v44 = sub_19EF26AFC(v18, v92, v89, (uint64_t)v90);
  uint64_t v93 = v43;
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v34);
    swift_release();
    swift_release();
    swift_release();
    sub_19EF4BF74((uint64_t)v18, v92, 0);
    return v18;
  }
  os_signpost_type_t v46 = v45;
  uint64_t v90 = (void (*)(void **__return_ptr, uint64_t))v44;
  uint64_t v78 = v41;
  uint64_t v80 = v18;
  sub_19EF4BF74(*(void *)v88, *(void *)(v88 + 8), *(unsigned char *)(v88 + 16));
  uint64_t v47 = sub_19F1DB87C();
  os_signpost_type_t v48 = v79;
  sub_19F1DB8CC();
  LODWORD(v89) = sub_19F1DC97C();
  char v49 = v42;
  if (sub_19F1DCA6C())
  {
    swift_retain();
    uint64_t v50 = v82;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v51 = v83;
    uint64_t v52 = v73;
    if ((*(unsigned int (**)(char *, uint64_t))(v83 + 88))(v50, v73) == *MEMORY[0x1E4FBD340])
    {
      BOOL v53 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
      BOOL v53 = "";
    }
    uint64_t v86 = v53;
    uint64_t v56 = v79;
    uint64_t v57 = v89;
    os_signpost_id_t v58 = v87;
    v78(v27, v79, v87);
    uint64_t v59 = v27;
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v60 = 0;
    uint64_t v61 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v47, v57, v61, "MakeLazyDependency", v86, v60, 2u);
    MEMORY[0x19F3C9470](v60, -1, -1);

    uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    v62((uint64_t)v56, v58);
    uint64_t v63 = v59;
    uint64_t v54 = v62;
    v62((uint64_t)v63, v58);
    uint64_t v55 = (uint64_t)v80;
    if (!v81) {
      goto LABEL_29;
    }
  }
  else
  {

    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v54((uint64_t)v48, v87);
    uint64_t v55 = (uint64_t)v80;
    if (!v81) {
      goto LABEL_29;
    }
  }
  uint64_t v64 = *MEMORY[0x1E4F38918];
  char v89 = v49;
  uint64_t v65 = v55;
  uint64_t v66 = v54;
  uint64_t v68 = v74;
  uint64_t v67 = v75;
  uint64_t v69 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 104))(v74, v64, v76);
  swift_retain();
  sub_19F1DB9BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
  uint64_t v54 = v66;
  uint64_t v55 = v65;
LABEL_29:
  if (v85)
  {
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946E6A0);
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&v95);
    swift_release();
    swift_release_n();
    swift_release();
    v54((uint64_t)v91, v87);
  }
  else
  {
    v54((uint64_t)v91, v87);
    swift_release();
    swift_release();
  }
  uint64_t v18 = v90;
  uint64_t v70 = v88;
  *(void *)uint64_t v88 = v90;
  *(void *)(v70 + 8) = v46;
  *(unsigned char *)(v70 + 16) = 1;
  sub_19EE47F40((uint64_t)v18);
  sub_19EF4BF74(v55, v92, 0);
  return v18;
}

uint64_t sub_19EF3EE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v89 = a2;
  uint64_t v90 = a3;
  uint64_t v85 = sub_19F1DB97C();
  uint64_t v6 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v84 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_19F1DB8AC();
  uint64_t v82 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v81 = &v70[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_19F1DB85C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v12);
  uint64_t v92 = &v70[-v13];
  MEMORY[0x1F4188790](v14);
  uint64_t v93 = &v70[-v16];
  uint64_t v17 = *(void *)a1;
  uint64_t v18 = *(void *)(a1 + 8);
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(a1 + 24);
  if (*(unsigned char *)(a1 + 32))
  {
    *a4 = v17;
    a4[1] = v18;
    a4[2] = v19;
    a4[3] = v20;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v73 = v8;
    uint64_t v78 = v15;
    uint64_t v74 = v6;
    uint64_t v87 = (void (*)(uint64_t))v17;
    uint64_t v79 = v19;
    uint64_t v80 = v20;
    long long v76 = a4;
    type metadata accessor for BaseObjectGraph();
    swift_retain();
    uint64_t v22 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    v95[0] = v22;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_19EEAD6E0(v23);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v91 = v11;
    if (v24)
    {
      uint64_t v25 = &type metadata for Bag.Profile;
      uint64_t v26 = swift_conformsToProtocol2();
      if (v26) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 0;
      }
      if (!v26) {
        uint64_t v25 = 0;
      }
      if (v25)
      {
        uint64_t v28 = v10;
        uint64_t v29 = *(void (**)(ValueMetadata *, uint64_t))(v27 + 8);
        swift_retain();
        v29(v25, v27);
        uint64_t v10 = v28;
        uint64_t v11 = v91;
        uint64_t v25 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v25 = 0;
    }
    uint64_t v83 = v24;
    uint64_t v88 = v18;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v86 = v25;
    uint64_t v30 = sub_19F1DB89C();
    uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    uint64_t v32 = v93;
    sub_19F1DB81C();
    uint64_t v75 = v31;
    uint64_t v33 = sub_19F1DB87C();
    int v34 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      long long v77 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16);
      os_signpost_type_t v35 = v92;
      v77(v92, v32, v10);
      uint64_t v72 = v10;
      uint64_t v36 = swift_slowAlloc();
      int v71 = v34;
      os_signpost_id_t v37 = (uint8_t *)v36;
      uint64_t v38 = swift_slowAlloc();
      v95[0] = v38;
      *(_DWORD *)os_signpost_id_t v37 = 136315138;
      uint64_t v96 = (ValueMetadata *)sub_19EEAD23C(0x656C69666F7250, 0xE700000000000000, v95);
      uint64_t v10 = v72;
      sub_19F1DCB3C();
      os_signpost_id_t v39 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v33, (os_signpost_type_t)v71, v39, "MakeLazyDependency", "object=%s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19F3C9470](v38, -1, -1);
      MEMORY[0x19F3C9470](v37, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v91 + 8))(v35, v10);
      uint64_t v40 = v77;
      uint64_t v41 = v87;
      v77(v35, v32, v10);
    }
    else
    {

      uint64_t v40 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16);
      uint64_t v41 = v87;
      v40(v92, v32, v10);
    }
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v42 = v88;
    uint64_t v43 = v94;
    sub_19EF26C68(v41, v88, v89, v90);
    uint64_t v94 = v43;
    if (v43)
    {
      (*(void (**)(unsigned char *, uint64_t))(v91 + 8))(v32, v10);
      swift_release();
      swift_release();
      swift_release();
      return sub_19EF4C020((uint64_t)v41, v42, v79, v80, 0);
    }
    else
    {
      long long v77 = v40;
      sub_19EF4C020(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
      uint64_t v44 = sub_19F1DB87C();
      uint64_t v45 = v78;
      sub_19F1DB8CC();
      int v46 = sub_19F1DC97C();
      char v47 = sub_19F1DCA6C();
      uint64_t v48 = v83;
      if (v47)
      {
        LODWORD(v90) = v46;
        swift_retain();
        char v49 = v81;
        sub_19F1DB8FC();
        swift_release();
        uint64_t v50 = v82;
        uint64_t v51 = v73;
        if ((*(unsigned int (**)(unsigned char *, uint64_t))(v82 + 88))(v49, v73) == *MEMORY[0x1E4FBD340])
        {
          uint64_t v52 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v49, v51);
          uint64_t v52 = "";
        }
        uint64_t v54 = v92;
        v77(v92, v78, v10);
        uint64_t v55 = v10;
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        os_signpost_id_t v57 = sub_19F1DB83C();
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v44, (os_signpost_type_t)v90, v57, "MakeLazyDependency", v52, v56, 2u);
        os_signpost_id_t v58 = v56;
        uint64_t v10 = v55;
        MEMORY[0x19F3C9470](v58, -1, -1);

        BOOL v53 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
        v53((uint64_t)v78, v55);
        v53((uint64_t)v54, v55);
      }
      else
      {

        BOOL v53 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
        v53((uint64_t)v45, v10);
      }
      uint64_t v59 = v88;
      if (v86)
      {
        uint64_t v60 = v74;
        uint64_t v61 = v88;
        uint64_t v62 = v84;
        uint64_t v63 = v85;
        (*(void (**)(unsigned char *, void, uint64_t))(v74 + 104))(v84, *MEMORY[0x1E4F38918], v85);
        swift_retain();
        sub_19F1DB9BC();
        swift_release();
        uint64_t v64 = v62;
        uint64_t v59 = v61;
        uint64_t v48 = v83;
        (*(void (**)(unsigned char *, uint64_t))(v60 + 8))(v64, v63);
      }
      if (v48)
      {
        uint64_t v96 = &type metadata for Bag.Profile;
        swift_retain();
        StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v96);
        swift_release();
        swift_release_n();
        swift_release();
        v53((uint64_t)v93, v10);
      }
      else
      {
        v53((uint64_t)v93, v10);
        swift_release();
        swift_release();
      }
      uint64_t v66 = v95[0];
      uint64_t v65 = v95[1];
      uint64_t v68 = v95[2];
      uint64_t v67 = v95[3];
      *(void *)a1 = v95[0];
      *(void *)(a1 + 8) = v65;
      *(void *)(a1 + 16) = v68;
      *(void *)(a1 + 24) = v67;
      *(unsigned char *)(a1 + 32) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_19EF4C020((uint64_t)v87, v59, v79, v80, 0);
      uint64_t v69 = v76;
      *long long v76 = v66;
      v69[1] = v65;
      v69[2] = v68;
      v69[3] = v67;
    }
  }
  return result;
}

uint64_t sub_19EF3F780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v89 = a2;
  uint64_t v90 = a3;
  uint64_t v91 = a4;
  uint64_t v5 = sub_19F1DB97C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v83 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_19F1DB8AC();
  uint64_t v82 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v81 = &v70[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_19F1DB85C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v12);
  uint64_t v92 = &v70[-v13];
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = &v70[-v16];
  uint64_t v18 = *(void *)a1;
  unint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v93 = *(void *)(a1 + 24);
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v21 = v91;
    uint64_t *v91 = v18;
    v21[1] = v19;
    uint64_t v22 = v93;
    v21[2] = v20;
    v21[3] = v22;
    return sub_19EF3C628(v18, v19);
  }
  uint64_t v72 = v8;
  long long v77 = v15;
  uint64_t v74 = v5;
  uint64_t v85 = (void (*)(uint64_t))v18;
  uint64_t v80 = v20;
  type metadata accessor for BaseObjectGraph();
  unint64_t v86 = v19;
  swift_retain();
  uint64_t v24 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v95[0] = v24;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_19EEAD6E0(v25);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  uint64_t v73 = v6;
  uint64_t v87 = v26;
  if (v26)
  {
    uint64_t v27 = &type metadata for JetEngineBootstrap.URLProtocolHandler;
    uint64_t v28 = swift_conformsToProtocol2();
    if (v28) {
      uint64_t v29 = v28;
    }
    else {
      uint64_t v29 = 0;
    }
    if (!v28) {
      uint64_t v27 = 0;
    }
    if (v27)
    {
      uint64_t v30 = *(void (**)(ValueMetadata *, uint64_t))(v29 + 8);
      swift_retain();
      v30(v27, v29);
      uint64_t v27 = (ValueMetadata *)sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      swift_release();
    }
  }
  else
  {
    uint64_t v27 = 0;
  }
  uint64_t v88 = v11;
  uint64_t v84 = v10;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v79 = v27;
  uint64_t v31 = sub_19F1DB89C();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v75 = v32;
  uint64_t v33 = sub_19F1DB87C();
  int v34 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v35 = v88;
    long long v76 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 16);
    uint64_t v36 = v84;
    v76(v92, v17, v84);
    uint64_t v37 = swift_slowAlloc();
    int v71 = v34;
    uint64_t v38 = (uint8_t *)v37;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v78 = v17;
    uint64_t v40 = v39;
    v95[0] = v39;
    *(_DWORD *)uint64_t v38 = 136315138;
    uint64_t v96 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000012, 0x800000019F24DC80, v95);
    sub_19F1DCB3C();
    uint64_t v41 = v92;
    os_signpost_id_t v42 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v33, (os_signpost_type_t)v71, v42, "MakeLazyDependency", "object=%s", v38, 0xCu);
    swift_arrayDestroy();
    uint64_t v43 = v40;
    uint64_t v17 = v78;
    MEMORY[0x19F3C9470](v43, -1, -1);
    MEMORY[0x19F3C9470](v38, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v41, v36);
    uint64_t v44 = v76;
    uint64_t v45 = v85;
    v76(v41, v17, v36);
  }
  else
  {

    uint64_t v35 = v88;
    uint64_t v44 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 16);
    uint64_t v36 = v84;
    uint64_t v45 = v85;
    v44(v92, v17, v84);
  }
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  unint64_t v46 = v86;
  uint64_t v47 = v94;
  sub_19EF26C68(v45, v86, v89, v90);
  uint64_t v94 = v47;
  if (v47)
  {
    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v17, v36);
    swift_release();
    swift_release();
    swift_release();
    return sub_19EF4BF10((uint64_t)v45, v46, v80, v93, 0);
  }
  long long v76 = v44;
  sub_19EF4BF10(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v48 = sub_19F1DB87C();
  char v49 = v77;
  sub_19F1DB8CC();
  int v50 = sub_19F1DC97C();
  char v51 = sub_19F1DCA6C();
  uint64_t v78 = v17;
  if (v51)
  {
    LODWORD(v90) = v50;
    swift_retain();
    uint64_t v52 = v81;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v53 = v82;
    uint64_t v54 = v72;
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v82 + 88))(v52, v72) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v55 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v52, v54);
      uint64_t v55 = "";
    }
    os_signpost_id_t v58 = v92;
    uint64_t v59 = v84;
    v76(v92, v49, v84);
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v60 = 0;
    os_signpost_id_t v61 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v48, (os_signpost_type_t)v90, v61, "MakeLazyDependency", v55, v60, 2u);
    MEMORY[0x19F3C9470](v60, -1, -1);

    uint64_t v57 = v59;
    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
    v56((uint64_t)v77, v59);
    v56((uint64_t)v58, v59);
    if (!v79) {
      goto LABEL_29;
    }
  }
  else
  {

    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    uint64_t v57 = v84;
    v56((uint64_t)v49, v84);
    if (!v79) {
      goto LABEL_29;
    }
  }
  uint64_t v62 = v73;
  uint64_t v63 = v83;
  uint64_t v64 = v74;
  (*(void (**)(unsigned char *, void, uint64_t))(v73 + 104))(v83, *MEMORY[0x1E4F38918], v74);
  swift_retain();
  sub_19F1DB9BC();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v63, v64);
LABEL_29:
  if (v87)
  {
    uint64_t v96 = &type metadata for JetEngineBootstrap.URLProtocolHandler;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v96);
    swift_release();
    swift_release_n();
    swift_release();
    v56((uint64_t)v78, v57);
  }
  else
  {
    v56((uint64_t)v78, v57);
    swift_release();
    swift_release();
  }
  uint64_t v65 = v95[0];
  unint64_t v66 = v95[1];
  uint64_t v67 = v95[2];
  uint64_t v68 = v95[3];
  *(void *)a1 = v95[0];
  *(void *)(a1 + 8) = v66;
  *(void *)(a1 + 16) = v67;
  *(void *)(a1 + 24) = v68;
  *(unsigned char *)(a1 + 32) = 1;
  sub_19EF3C628(v65, v66);
  uint64_t result = sub_19EF4BF10((uint64_t)v85, v86, v80, v93, 0);
  uint64_t v69 = v91;
  uint64_t *v91 = v65;
  v69[1] = v66;
  v69[2] = v67;
  v69[3] = v68;
  return result;
}

uint64_t sub_19EF400F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void (**a4)(uint64_t)@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v81 = a3;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DB8AC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_19F1DB85C();
  uint64_t v84 = *(void *)(v13 - 8);
  uint64_t v85 = v13;
  MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v82 = (char *)&v65 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v83 = (char *)&v65 - v18;
  unint64_t v19 = *(void (**)(uint64_t))a1;
  if (*(unsigned char *)(a1 + 16))
  {
    *a4 = v19;
    return swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v66 = v11;
    long long v76 = v17;
    uint64_t v69 = v7;
    uint64_t v71 = v6;
    uint64_t v72 = (uint64_t *)a4;
    uint64_t v21 = *(void *)(a1 + 8);
    type metadata accessor for BaseObjectGraph();
    swift_retain();
    uint64_t v22 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v88 = v22;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_19EEAD6E0(v23);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v68 = v9;
    uint64_t v79 = v24;
    if (v24)
    {
      uint64_t v25 = swift_conformsToProtocol2();
      if (v25) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 0;
      }
      if (v25) {
        uint64_t v27 = &type metadata for Bag;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v27)
      {
        uint64_t v28 = v21;
        uint64_t v29 = v19;
        uint64_t v30 = *(void (**)(ValueMetadata *, uint64_t))(v26 + 8);
        swift_retain();
        v30(v27, v26);
        unint64_t v19 = v29;
        uint64_t v21 = v28;
        uint64_t v27 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v27 = 0;
    }
    uint64_t v67 = v10;
    uint64_t v78 = v27;
    uint64_t v75 = a1;
    uint64_t v31 = v83;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_19F1DB89C();
    uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v70 = v33;
    int v34 = sub_19F1DB87C();
    os_signpost_type_t v35 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
      uint64_t v36 = v82;
      v73(v82, v31, v85);
      uint64_t v74 = v21;
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v88 = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v87 = (ValueMetadata *)sub_19EEAD23C(6775106, 0xE300000000000000, &v88);
      uint64_t v21 = v74;
      sub_19F1DCB3C();
      os_signpost_id_t v39 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v34, v35, v39, "MakeLazyDependency", "object=%s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19F3C9470](v38, -1, -1);
      uint64_t v40 = v37;
      uint64_t v31 = v83;
      MEMORY[0x19F3C9470](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v84 + 8))(v36, v85);
      uint64_t v41 = v73;
      os_signpost_id_t v42 = v76;
    }
    else
    {

      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
      os_signpost_id_t v42 = v76;
      uint64_t v36 = v82;
    }
    uint64_t v43 = v78;
    v41(v36, v31, v85);
    sub_19F1DB8EC();
    swift_allocObject();
    uint64_t v44 = sub_19F1DB8DC();
    uint64_t v45 = v86;
    sub_19EF26C68(v19, v21, v80, v81);
    uint64_t v86 = v45;
    if (v45)
    {
      (*(void (**)(char *, uint64_t))(v84 + 8))(v31, v85);
      swift_release();
      swift_release();
      swift_release();
      return sub_19EF4BDC4((uint64_t)v19, v21, 0, MEMORY[0x1E4FBC8F8]);
    }
    else
    {
      uint64_t v73 = v41;
      uint64_t v74 = v21;
      sub_19EF4BDC4(*(void *)v75, *(void *)(v75 + 8), *(unsigned char *)(v75 + 16), MEMORY[0x1E4FBC8F8]);
      unint64_t v46 = sub_19F1DB87C();
      uint64_t v47 = v42;
      sub_19F1DB8CC();
      os_signpost_type_t v48 = sub_19F1DC97C();
      char v49 = sub_19F1DCA6C();
      uint64_t v82 = (char *)v44;
      if (v49)
      {
        swift_retain();
        int v50 = v77;
        sub_19F1DB8FC();
        swift_release();
        uint64_t v51 = v66;
        uint64_t v52 = v67;
        BOOL v53 = (*(unsigned int (**)(char *, uint64_t))(v66 + 88))(v50, v67) == *MEMORY[0x1E4FBD340];
        uint64_t v65 = v19;
        if (v53)
        {
          uint64_t v55 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
          uint64_t v55 = "";
        }
        uint64_t v56 = v85;
        v73(v36, v47, v85);
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v57 = 0;
        os_signpost_id_t v58 = sub_19F1DB83C();
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v46, v48, v58, "MakeLazyDependency", v55, v57, 2u);
        MEMORY[0x19F3C9470](v57, -1, -1);

        uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v54((uint64_t)v47, v56);
        v54((uint64_t)v36, v56);
        unint64_t v19 = v65;
        uint64_t v43 = v78;
      }
      else
      {

        uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v54((uint64_t)v47, v85);
      }
      uint64_t v59 = v74;
      uint64_t v60 = v71;
      if (v43)
      {
        uint64_t v62 = v68;
        uint64_t v61 = v69;
        (*(void (**)(char *, void, uint64_t))(v69 + 104))(v68, *MEMORY[0x1E4F38918], v71);
        swift_retain();
        sub_19F1DB9BC();
        swift_release();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
      }
      if (v79)
      {
        uint64_t v87 = &type metadata for Bag;
        swift_retain();
        StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v87);
        swift_release();
        swift_release_n();
        swift_release();
        v54((uint64_t)v83, v85);
      }
      else
      {
        v54((uint64_t)v83, v85);
        swift_release();
        swift_release();
      }
      uint64_t v63 = v88;
      uint64_t v64 = v75;
      *(void *)uint64_t v75 = v88;
      *(void *)(v64 + 8) = 0;
      *(unsigned char *)(v64 + 16) = 1;
      swift_unknownObjectRetain();
      uint64_t result = sub_19EF4BDC4((uint64_t)v19, v59, 0, MEMORY[0x1E4FBC8F8]);
      *uint64_t v72 = v63;
    }
  }
  return result;
}

uint64_t sub_19EF40A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void (**a4)(uint64_t)@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v81 = a3;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DB8AC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_19F1DB85C();
  uint64_t v84 = *(void *)(v13 - 8);
  uint64_t v85 = v13;
  MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v82 = (char *)&v65 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v83 = (char *)&v65 - v18;
  unint64_t v19 = *(void (**)(uint64_t))a1;
  if (*(unsigned char *)(a1 + 16))
  {
    *a4 = v19;
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v66 = v11;
    long long v76 = v17;
    uint64_t v69 = v7;
    uint64_t v71 = v6;
    uint64_t v72 = (uint64_t *)a4;
    uint64_t v21 = *(void *)(a1 + 8);
    type metadata accessor for BaseObjectGraph();
    swift_retain();
    uint64_t v22 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v88 = v22;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_19EEAD6E0(v23);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v68 = v9;
    uint64_t v79 = v24;
    if (v24)
    {
      uint64_t v25 = swift_conformsToProtocol2();
      if (v25) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 0;
      }
      if (v25) {
        uint64_t v27 = &type metadata for JSONContext;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v27)
      {
        uint64_t v28 = v21;
        uint64_t v29 = v19;
        uint64_t v30 = *(void (**)(ValueMetadata *, uint64_t))(v26 + 8);
        swift_retain();
        v30(v27, v26);
        unint64_t v19 = v29;
        uint64_t v21 = v28;
        uint64_t v27 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v27 = 0;
    }
    uint64_t v67 = v10;
    uint64_t v78 = v27;
    uint64_t v75 = a1;
    uint64_t v31 = v83;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_19F1DB89C();
    uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v70 = v33;
    int v34 = sub_19F1DB87C();
    os_signpost_type_t v35 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
      uint64_t v36 = v82;
      v73(v82, v31, v85);
      uint64_t v74 = v21;
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v88 = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v87 = (ValueMetadata *)sub_19EEAD23C(0x746E6F434E4F534ALL, 0xEB00000000747865, &v88);
      uint64_t v21 = v74;
      sub_19F1DCB3C();
      os_signpost_id_t v39 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v34, v35, v39, "MakeLazyDependency", "object=%s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19F3C9470](v38, -1, -1);
      uint64_t v40 = v37;
      uint64_t v31 = v83;
      MEMORY[0x19F3C9470](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v84 + 8))(v36, v85);
      uint64_t v41 = v73;
      os_signpost_id_t v42 = v76;
    }
    else
    {

      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
      os_signpost_id_t v42 = v76;
      uint64_t v36 = v82;
    }
    uint64_t v43 = v78;
    v41(v36, v31, v85);
    sub_19F1DB8EC();
    swift_allocObject();
    uint64_t v44 = sub_19F1DB8DC();
    uint64_t v45 = v86;
    sub_19EF26C68(v19, v21, v80, v81);
    uint64_t v86 = v45;
    if (v45)
    {
      (*(void (**)(char *, uint64_t))(v84 + 8))(v31, v85);
      swift_release();
      swift_release();
      swift_release();
      return sub_19EF4BDC4((uint64_t)v19, v21, 0, MEMORY[0x1E4FBC898]);
    }
    else
    {
      uint64_t v73 = v41;
      uint64_t v74 = v21;
      sub_19EF4BDC4(*(void *)v75, *(void *)(v75 + 8), *(unsigned char *)(v75 + 16), MEMORY[0x1E4FBC898]);
      unint64_t v46 = sub_19F1DB87C();
      uint64_t v47 = v42;
      sub_19F1DB8CC();
      os_signpost_type_t v48 = sub_19F1DC97C();
      char v49 = sub_19F1DCA6C();
      uint64_t v82 = (char *)v44;
      if (v49)
      {
        swift_retain();
        int v50 = v77;
        sub_19F1DB8FC();
        swift_release();
        uint64_t v51 = v66;
        uint64_t v52 = v67;
        BOOL v53 = (*(unsigned int (**)(char *, uint64_t))(v66 + 88))(v50, v67) == *MEMORY[0x1E4FBD340];
        uint64_t v65 = v19;
        if (v53)
        {
          uint64_t v55 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
          uint64_t v55 = "";
        }
        uint64_t v56 = v85;
        v73(v36, v47, v85);
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v57 = 0;
        os_signpost_id_t v58 = sub_19F1DB83C();
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v46, v48, v58, "MakeLazyDependency", v55, v57, 2u);
        MEMORY[0x19F3C9470](v57, -1, -1);

        uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v54((uint64_t)v47, v56);
        v54((uint64_t)v36, v56);
        unint64_t v19 = v65;
        uint64_t v43 = v78;
      }
      else
      {

        uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v54((uint64_t)v47, v85);
      }
      uint64_t v59 = v74;
      uint64_t v60 = v71;
      if (v43)
      {
        uint64_t v62 = v68;
        uint64_t v61 = v69;
        (*(void (**)(char *, void, uint64_t))(v69 + 104))(v68, *MEMORY[0x1E4F38918], v71);
        swift_retain();
        sub_19F1DB9BC();
        swift_release();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
      }
      if (v79)
      {
        uint64_t v87 = &type metadata for JSONContext;
        swift_retain();
        StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v87);
        swift_release();
        swift_release_n();
        swift_release();
        v54((uint64_t)v83, v85);
      }
      else
      {
        v54((uint64_t)v83, v85);
        swift_release();
        swift_release();
      }
      uint64_t v63 = v88;
      uint64_t v64 = v75;
      *(void *)uint64_t v75 = v88;
      *(void *)(v64 + 8) = 0;
      *(unsigned char *)(v64 + 16) = 1;
      swift_bridgeObjectRetain();
      uint64_t result = sub_19EF4BDC4((uint64_t)v19, v59, 0, MEMORY[0x1E4FBC898]);
      *uint64_t v72 = v63;
    }
  }
  return result;
}

void sub_19EF41340(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v80 = a3;
  uint64_t v81 = a4;
  uint64_t v79 = a2;
  uint64_t v7 = sub_19F1DB97C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v77 = &v64[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_19F1DB8AC();
  uint64_t v76 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v75 = &v64[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_19F1DB85C();
  uint64_t v83 = *(void *)(v12 - 8);
  uint64_t v84 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = &v64[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v64[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v82 = &v64[-v19];
  uint64_t v21 = *(void *)a1;
  uint64_t v20 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 16))
  {
    *(void *)a5 = v21;
    *(unsigned char *)(a5 + 8) = v20 & 1;
  }
  else
  {
    uint64_t v67 = v10;
    uint64_t v69 = v7;
    uint64_t v72 = (uint64_t *)a5;
    type metadata accessor for BaseObjectGraph();
    swift_retain();
    uint64_t v22 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    uint64_t v86 = v22;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_19EEAD6E0(v23);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v71 = v8;
    uint64_t v78 = v24;
    uint64_t v73 = v14;
    if (v24
      && ((v25 = swift_conformsToProtocol2()) != 0 ? (uint64_t v26 = v25) : (uint64_t v26 = 0),
          v25 ? (uint64_t v27 = &type metadata for IntentDispatchTimeout) : (uint64_t v27 = 0),
          v27))
    {
      uint64_t v28 = *(void (**)(ValueMetadata *, uint64_t))(v26 + 8);
      swift_retain();
      v28(v27, v26);
      uint64_t v29 = (void (*)(uint64_t))v21;
      uint64_t v30 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v74 = v30;
      swift_release();
    }
    else
    {
      uint64_t v74 = 0;
      uint64_t v29 = (void (*)(uint64_t))v21;
    }
    uint64_t v31 = v82;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_19F1DB89C();
    uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v70 = v33;
    int v34 = sub_19F1DB87C();
    int v35 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v68 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v83 + 16);
      v68(v17, v31, v84);
      uint64_t v66 = a1;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v79 = v20;
      uint64_t v37 = (uint8_t *)v36;
      uint64_t v38 = swift_slowAlloc();
      int v65 = v35;
      os_signpost_id_t v39 = v17;
      uint64_t v40 = v38;
      uint64_t v86 = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v88 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000015, 0x800000019F269150, &v86);
      a1 = v66;
      sub_19F1DCB3C();
      os_signpost_id_t v41 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v34, (os_signpost_type_t)v65, v41, "MakeLazyDependency", "object=%s", v37, 0xCu);
      swift_arrayDestroy();
      uint64_t v42 = v40;
      uint64_t v17 = v39;
      uint64_t v43 = v68;
      MEMORY[0x19F3C9470](v42, -1, -1);
      uint64_t v44 = v37;
      uint64_t v20 = v79;
      MEMORY[0x19F3C9470](v44, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v17, v84);
    }
    else
    {

      uint64_t v43 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v83 + 16);
    }
    v43(v17, v31, v84);
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v45 = v85;
    sub_19EF26C68(v29, v20, v80, v81);
    uint64_t v85 = v45;
    if (v45)
    {
      (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v31, v84);
      swift_release();
      swift_release();
      swift_release();
      sub_19EF4B22C((uint64_t)v29, v20, 0);
    }
    else
    {
      uint64_t v81 = (uint64_t)v29;
      uint64_t v79 = v20;
      sub_19EF4B22C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
      unint64_t v46 = sub_19F1DB87C();
      uint64_t v47 = v73;
      sub_19F1DB8CC();
      int v48 = sub_19F1DC97C();
      if (sub_19F1DCA6C())
      {
        LODWORD(v80) = v48;
        uint64_t v68 = v43;
        swift_retain();
        char v49 = v75;
        sub_19F1DB8FC();
        swift_release();
        uint64_t v50 = v76;
        uint64_t v51 = v67;
        if ((*(unsigned int (**)(unsigned char *, uint64_t))(v76 + 88))(v49, v67) == *MEMORY[0x1E4FBD340])
        {
          uint64_t v52 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v49, v51);
          uint64_t v52 = "";
        }
        uint64_t v54 = v84;
        v68(v17, v47, v84);
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v55 = 0;
        os_signpost_id_t v56 = sub_19F1DB83C();
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v46, (os_signpost_type_t)v80, v56, "MakeLazyDependency", v52, v55, 2u);
        MEMORY[0x19F3C9470](v55, -1, -1);

        BOOL v53 = *(void (**)(unsigned char *, uint64_t))(v83 + 8);
        v53(v73, v54);
        v53(v17, v54);
      }
      else
      {

        BOOL v53 = *(void (**)(unsigned char *, uint64_t))(v83 + 8);
        v53(v47, v84);
      }
      uint64_t v57 = v69;
      uint64_t v58 = v79;
      uint64_t v59 = v71;
      if (v74)
      {
        uint64_t v60 = v77;
        (*(void (**)(unsigned char *, void, uint64_t))(v71 + 104))(v77, *MEMORY[0x1E4F38918], v69);
        swift_retain();
        sub_19F1DB9BC();
        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v60, v57);
      }
      if (v78)
      {
        uint64_t v88 = &type metadata for IntentDispatchTimeout;
        swift_retain();
        StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v88);
        swift_release();
        swift_release_n();
        swift_release();
        v53(v82, v84);
      }
      else
      {
        v53(v82, v84);
        swift_release();
        swift_release();
      }
      uint64_t v61 = v86;
      uint64_t v62 = v87;
      sub_19EF4B22C(v81, v58, 0);
      *(void *)a1 = v61;
      *(void *)(a1 + 8) = v62;
      *(unsigned char *)(a1 + 16) = 1;
      uint64_t v63 = v72;
      *uint64_t v72 = v61;
      *((unsigned char *)v63 + 8) = v62;
    }
  }
}

uint64_t sub_19EF41C24@<X0>(uint64_t a1@<X0>, NSObject *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  os_log_t v88 = a2;
  uint64_t v89 = a3;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v86 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB8AC();
  uint64_t v82 = *(void *)(v9 - 8);
  uint64_t v83 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v81 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DB85C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v91 = (char *)&v71 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v92 = (char *)&v71 - v18;
  uint64_t result = sub_19EEC3ED8(a1, (uint64_t)v96, &qword_1E9470AB8);
  if (v98 == 1)
  {
    long long v20 = v96[9];
    *(_OWORD *)(a4 + 128) = v96[8];
    *(_OWORD *)(a4 + 144) = v20;
    *(_OWORD *)(a4 + 160) = v96[10];
    *(unsigned char *)(a4 + 176) = v97;
    long long v21 = v96[5];
    *(_OWORD *)(a4 + 64) = v96[4];
    *(_OWORD *)(a4 + 80) = v21;
    long long v22 = v96[7];
    *(_OWORD *)(a4 + 96) = v96[6];
    *(_OWORD *)(a4 + 112) = v22;
    long long v23 = v96[1];
    *(_OWORD *)a4 = v96[0];
    *(_OWORD *)(a4 + 16) = v23;
    long long v24 = v96[3];
    *(_OWORD *)(a4 + 32) = v96[2];
    *(_OWORD *)(a4 + 48) = v24;
  }
  else
  {
    uint64_t v84 = v14;
    uint64_t v73 = v7;
    uint64_t v74 = v6;
    uint64_t v25 = *((void *)&v96[0] + 1);
    uint64_t v78 = a1;
    uint64_t v79 = *(void (**)(uint64_t))&v96[0];
    type metadata accessor for BaseObjectGraph();
    uint64_t v26 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&v94[0] = v26;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_19EEAD6E0(v27);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v90 = v12;
    uint64_t v87 = v28;
    if (v28)
    {
      uint64_t v29 = &type metadata for MetricsPipeline;
      uint64_t v30 = swift_conformsToProtocol2();
      if (v30) {
        uint64_t v31 = v30;
      }
      else {
        uint64_t v31 = 0;
      }
      if (!v30) {
        uint64_t v29 = 0;
      }
      if (v29)
      {
        uint64_t v32 = v11;
        uint64_t v33 = *(void (**)(ValueMetadata *, uint64_t))(v31 + 8);
        swift_retain();
        v33(v29, v31);
        uint64_t v11 = v32;
        uint64_t v12 = v90;
        uint64_t v29 = (ValueMetadata *)sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v29 = 0;
    }
    uint64_t v85 = v25;
    int v34 = v92;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v80 = v29;
    uint64_t v35 = sub_19F1DB89C();
    uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v75 = v36;
    uint64_t v37 = sub_19F1DB87C();
    int v38 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      os_signpost_id_t v39 = v91;
      v76(v91, v34, v11);
      uint64_t v40 = swift_slowAlloc();
      uint64_t v77 = v11;
      os_signpost_id_t v41 = (uint8_t *)v40;
      uint64_t v42 = swift_slowAlloc();
      LODWORD(v72) = v38;
      uint64_t v43 = v42;
      *(void *)&v94[0] = v42;
      *(_DWORD *)os_signpost_id_t v41 = 136315138;
      uint64_t v93 = (ValueMetadata *)sub_19EEAD23C(0x507363697274654DLL, 0xEF656E696C657069, (uint64_t *)v94);
      int v34 = v92;
      sub_19F1DCB3C();
      os_signpost_id_t v44 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v37, (os_signpost_type_t)v72, v44, "MakeLazyDependency", "object=%s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19F3C9470](v43, -1, -1);
      uint64_t v45 = v41;
      uint64_t v11 = v77;
      MEMORY[0x19F3C9470](v45, -1, -1);

      (*(void (**)(char *, uint64_t))(v90 + 8))(v39, v11);
      unint64_t v46 = v76;
      uint64_t v47 = v84;
      v76(v39, v34, v11);
    }
    else
    {

      unint64_t v46 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      uint64_t v47 = v84;
      v46(v91, v34, v11);
    }
    sub_19F1DB8EC();
    swift_allocObject();
    uint64_t v48 = sub_19F1DB8DC();
    uint64_t v49 = v99;
    sub_19EF26C68(v79, v85, (uint64_t)v88, v89);
    uint64_t v99 = v49;
    if (v49)
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v34, v11);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v76 = v46;
      sub_19EEBD664(v78, &qword_1E9470AB8);
      uint64_t v50 = sub_19F1DB87C();
      sub_19F1DB8CC();
      LODWORD(v89) = sub_19F1DC97C();
      char v51 = sub_19F1DCA6C();
      uint64_t v72 = v48;
      if (v51)
      {
        os_log_t v88 = v50;
        swift_retain();
        uint64_t v52 = v81;
        sub_19F1DB8FC();
        swift_release();
        uint64_t v54 = v82;
        uint64_t v53 = v83;
        if ((*(unsigned int (**)(char *, uint64_t))(v82 + 88))(v52, v83) == *MEMORY[0x1E4FBD340])
        {
          uint64_t v55 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
          uint64_t v55 = "";
        }
        os_signpost_type_t v57 = v89;
        uint64_t v58 = v91;
        v76(v91, v47, v11);
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v59 = 0;
        os_signpost_id_t v60 = sub_19F1DB83C();
        os_log_t v61 = v88;
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v88, v57, v60, "MakeLazyDependency", v55, v59, 2u);
        MEMORY[0x19F3C9470](v59, -1, -1);

        os_signpost_id_t v56 = *(void (**)(char *, uint64_t))(v90 + 8);
        v56(v84, v11);
        v56(v58, v11);
      }
      else
      {

        os_signpost_id_t v56 = *(void (**)(char *, uint64_t))(v90 + 8);
        v56(v47, v11);
      }
      uint64_t v77 = v11;
      if (v80)
      {
        uint64_t v63 = v73;
        uint64_t v62 = v74;
        uint64_t v64 = v86;
        (*(void (**)(char *, void, uint64_t))(v73 + 104))(v86, *MEMORY[0x1E4F38918], v74);
        swift_retain();
        sub_19F1DB9BC();
        swift_release();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v62);
      }
      if (v87)
      {
        uint64_t v93 = &type metadata for MetricsPipeline;
        swift_retain();
        StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v93);
        swift_release();
        swift_release_n();
        swift_release();
        v56(v92, v77);
      }
      else
      {
        v56(v92, v77);
        swift_release();
        swift_release();
      }
      uint64_t v65 = v78;
      sub_19EE99F44((uint64_t)v94, v78);
      *(unsigned char *)(v65 + 177) = 1;
      long long v66 = v94[9];
      *(_OWORD *)(a4 + 128) = v94[8];
      *(_OWORD *)(a4 + 144) = v66;
      *(_OWORD *)(a4 + 160) = v94[10];
      *(unsigned char *)(a4 + 176) = v95;
      long long v67 = v94[5];
      *(_OWORD *)(a4 + 64) = v94[4];
      *(_OWORD *)(a4 + 80) = v67;
      long long v68 = v94[7];
      *(_OWORD *)(a4 + 96) = v94[6];
      *(_OWORD *)(a4 + 112) = v68;
      long long v69 = v94[1];
      *(_OWORD *)a4 = v94[0];
      *(_OWORD *)(a4 + 16) = v69;
      long long v70 = v94[3];
      *(_OWORD *)(a4 + 32) = v94[2];
      *(_OWORD *)(a4 + 48) = v70;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF42594@<X0>(uint64_t a1@<X0>, const char *a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v91 = a3;
  uint64_t v90 = a2;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_19F1DB8AC();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v81 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DB85C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v72 - v17;
  uint64_t v89 = a1;
  uint64_t result = sub_19EEC3ED8(a1, (uint64_t)v95, &qword_1E9470A10);
  if (v96 == 1)
  {
    long long v20 = v95[3];
    long long v21 = v95[5];
    long long v22 = v95[6];
    a4[4] = v95[4];
    a4[5] = v21;
    a4[6] = v22;
    long long v23 = v95[1];
    long long v24 = v95[2];
    *a4 = v95[0];
    a4[1] = v23;
    a4[2] = v24;
    a4[3] = v20;
  }
  else
  {
    uint64_t v73 = v9;
    uint64_t v74 = v7;
    uint64_t v75 = v6;
    uint64_t v25 = *((void *)&v95[0] + 1);
    uint64_t v79 = *(void (**)(uint64_t))&v95[0];
    type metadata accessor for BaseObjectGraph();
    uint64_t v26 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&v94[0] = v26;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_19EEAD6E0(v27);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v88 = v28;
    uint64_t v85 = v11;
    if (v28
      && ((uint64_t v29 = swift_conformsToProtocol2()) != 0 ? (v30 = v29) : (v30 = 0),
          v29 ? (uint64_t v31 = &type metadata for SentryConfiguration) : (uint64_t v31 = 0),
          v31))
    {
      uint64_t v32 = v25;
      uint64_t v33 = v12;
      int v34 = *(void (**)(ValueMetadata *, uint64_t))(v30 + 8);
      swift_retain();
      v34(v31, v30);
      uint64_t v12 = v33;
      uint64_t v25 = v32;
      uint64_t v11 = v85;
      uint64_t v35 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      swift_release();
    }
    else
    {
      uint64_t v35 = 0;
    }
    uint64_t v84 = v25;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v86 = v35;
    uint64_t v36 = sub_19F1DB89C();
    uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v76 = v37;
    int v38 = sub_19F1DB87C();
    os_signpost_type_t v39 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      uint64_t v40 = v92;
      v77(v92, v18, v11);
      uint64_t v78 = v18;
      os_signpost_id_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v80 = v12;
      uint64_t v43 = v42;
      *(void *)&v94[0] = v42;
      *(_DWORD *)os_signpost_id_t v41 = 136315138;
      uint64_t v93 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000013, 0x800000019F269320, (uint64_t *)v94);
      uint64_t v18 = v78;
      sub_19F1DCB3C();
      os_signpost_id_t v44 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v38, v39, v44, "MakeLazyDependency", "object=%s", v41, 0xCu);
      swift_arrayDestroy();
      uint64_t v45 = v43;
      uint64_t v12 = v80;
      MEMORY[0x19F3C9470](v45, -1, -1);
      unint64_t v46 = v41;
      uint64_t v11 = v85;
      MEMORY[0x19F3C9470](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v40, v11);
      uint64_t v47 = v77;
      v77(v40, v18, v11);
    }
    else
    {

      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v47(v92, v18, v11);
    }
    sub_19F1DB8EC();
    swift_allocObject();
    uint64_t v48 = sub_19F1DB8DC();
    uint64_t v49 = v97;
    sub_19EF26C68(v79, v84, (uint64_t)v90, v91);
    uint64_t v97 = v49;
    if (v49)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v77 = v47;
      uint64_t v80 = v12;
      sub_19EEBD664(v89, &qword_1E9470A10);
      uint64_t v50 = sub_19F1DB87C();
      char v51 = v87;
      sub_19F1DB8CC();
      os_signpost_type_t v52 = sub_19F1DC97C();
      char v53 = sub_19F1DCA6C();
      uint64_t v78 = v18;
      if (v53)
      {
        swift_retain();
        uint64_t v54 = v81;
        sub_19F1DB8FC();
        uint64_t v91 = v48;
        swift_release();
        uint64_t v55 = v82;
        uint64_t v56 = v83;
        if ((*(unsigned int (**)(char *, uint64_t))(v82 + 88))(v54, v83) == *MEMORY[0x1E4FBD340])
        {
          os_signpost_type_t v57 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
          os_signpost_type_t v57 = "";
        }
        uint64_t v90 = v57;
        os_log_t v61 = v92;
        uint64_t v60 = v85;
        uint64_t v62 = v87;
        ((void (*)(char *))v77)(v92);
        uint64_t v63 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v63 = 0;
        os_signpost_id_t v64 = sub_19F1DB83C();
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v50, v52, v64, "MakeLazyDependency", v90, v63, 2u);
        MEMORY[0x19F3C9470](v63, -1, -1);

        uint64_t v58 = *(void (**)(char *, uint64_t))(v80 + 8);
        v58(v62, v60);
        v58(v61, v60);
      }
      else
      {

        uint64_t v58 = *(void (**)(char *, uint64_t))(v80 + 8);
        uint64_t v59 = v51;
        uint64_t v60 = v85;
        v58(v59, v85);
      }
      if (v86)
      {
        uint64_t v65 = v74;
        long long v66 = v73;
        uint64_t v67 = v75;
        (*(void (**)(char *, void, uint64_t))(v74 + 104))(v73, *MEMORY[0x1E4F38918], v75);
        swift_retain();
        sub_19F1DB9BC();
        swift_release();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
      }
      if (v88)
      {
        uint64_t v93 = &type metadata for SentryConfiguration;
        swift_retain();
        StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v93);
        swift_release();
        swift_release_n();
        swift_release();
        v58(v78, v60);
      }
      else
      {
        v58(v78, v60);
        swift_release();
        swift_release();
      }
      uint64_t v68 = v89;
      sub_19EF4B9D0((uint64_t)v94, v89);
      *(unsigned char *)(v68 + 112) = 1;
      long long v69 = v94[5];
      a4[4] = v94[4];
      a4[5] = v69;
      a4[6] = v94[6];
      long long v70 = v94[1];
      *a4 = v94[0];
      a4[1] = v70;
      long long v71 = v94[3];
      a4[2] = v94[2];
      a4[3] = v71;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF4301C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v92 = a3;
  uint64_t v91 = a2;
  uint64_t v94 = a4;
  uint64_t v7 = sub_19F1DB97C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v72[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_19F1DB8AC();
  uint64_t v84 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v83 = &v72[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_19F1DB85C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v89 = &v72[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  uint64_t v93 = &v72[-v17];
  MEMORY[0x1F4188790](v18);
  uint64_t v99 = &v72[-v19];
  uint64_t result = sub_19EEC3ED8(a1, (uint64_t)v97, &qword_1E94709A0);
  if (v98 == 1)
  {
    long long v21 = v97[3];
    long long v22 = v97[4];
    long long v23 = v94;
    v94[2] = v97[2];
    v23[3] = v21;
    v23[4] = v22;
    long long v24 = v97[1];
    *long long v23 = v97[0];
    v23[1] = v24;
  }
  else
  {
    uint64_t v76 = v10;
    uint64_t v86 = v14;
    uint64_t v77 = v8;
    uint64_t v78 = v7;
    uint64_t v25 = *((void *)&v97[0] + 1);
    uint64_t v82 = *(void (**)(uint64_t))&v97[0];
    type metadata accessor for BaseObjectGraph();
    uint64_t v26 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&v96[0] = v26;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_19EEAD6E0(v27);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v90 = v28;
    if (v28)
    {
      uint64_t v29 = swift_conformsToProtocol2();
      if (v29) {
        uint64_t v30 = v29;
      }
      else {
        uint64_t v30 = 0;
      }
      if (v29) {
        uint64_t v31 = &type metadata for JetPackAssetSession.Configuration;
      }
      else {
        uint64_t v31 = 0;
      }
      if (v31)
      {
        uint64_t v32 = *(void (**)(ValueMetadata *, uint64_t))(v30 + 8);
        swift_retain();
        v32(v31, v30);
        uint64_t v28 = sub_19F18D8AC();
        swift_release();
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
      else
      {
        uint64_t v28 = 0;
      }
    }
    uint64_t v88 = v25;
    uint64_t v85 = v13;
    uint64_t v33 = v99;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v75 = v11;
    uint64_t v87 = v28;
    uint64_t v34 = sub_19F1DB89C();
    uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v80 = v35;
    uint64_t v36 = sub_19F1DB87C();
    int v37 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      uint64_t v38 = v86;
      uint64_t v81 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v86 + 16);
      int v73 = v37;
      os_signpost_type_t v39 = v93;
      uint64_t v40 = v85;
      v81(v93, v99, v85);
      uint64_t v41 = swift_slowAlloc();
      uint64_t v74 = v5;
      uint64_t v42 = (uint8_t *)v41;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v79 = a1;
      uint64_t v44 = v43;
      *(void *)&v96[0] = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      char v95 = (ValueMetadata *)sub_19EEAD23C(0x72756769666E6F43, 0xED00006E6F697461, (uint64_t *)v96);
      sub_19F1DCB3C();
      os_signpost_id_t v45 = sub_19F1DB83C();
      uint64_t v46 = v38;
      uint64_t v33 = v99;
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v36, (os_signpost_type_t)v73, v45, "MakeLazyDependency", "object=%s", v42, 0xCu);
      swift_arrayDestroy();
      uint64_t v47 = v44;
      a1 = v79;
      MEMORY[0x19F3C9470](v47, -1, -1);
      uint64_t v48 = v42;
      uint64_t v5 = v74;
      MEMORY[0x19F3C9470](v48, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v39, v40);
      uint64_t v49 = v81;
      v81(v39, v33, v40);
    }
    else
    {

      uint64_t v46 = v86;
      uint64_t v49 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v86 + 16);
      uint64_t v40 = v85;
      v49(v93, v33, v85);
    }
    sub_19F1DB8EC();
    swift_allocObject();
    uint64_t v50 = sub_19F1DB8DC();
    sub_19EF26C68(v82, v88, v91, v92);
    if (v5)
    {
      (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v33, v40);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v81 = v49;
      sub_19EEBD664(a1, &qword_1E94709A0);
      char v51 = sub_19F1DB87C();
      os_signpost_type_t v52 = v89;
      sub_19F1DB8CC();
      LODWORD(v92) = sub_19F1DC97C();
      if (sub_19F1DCA6C())
      {
        uint64_t v79 = a1;
        swift_retain();
        uint64_t v53 = v50;
        uint64_t v54 = v83;
        sub_19F1DB8FC();
        uint64_t v91 = v53;
        swift_release();
        uint64_t v55 = v84;
        uint64_t v56 = v75;
        if ((*(unsigned int (**)(unsigned char *, uint64_t))(v84 + 88))(v54, v75) == *MEMORY[0x1E4FBD340])
        {
          os_signpost_type_t v57 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v54, v56);
          os_signpost_type_t v57 = "";
        }
        uint64_t v59 = v89;
        uint64_t v60 = v93;
        v81(v93, v89, v40);
        os_log_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_t v61 = 0;
        os_signpost_id_t v62 = sub_19F1DB83C();
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v51, (os_signpost_type_t)v92, v62, "MakeLazyDependency", v57, v61, 2u);
        uint64_t v63 = v61;
        uint64_t v40 = v85;
        MEMORY[0x19F3C9470](v63, -1, -1);

        uint64_t v58 = *(void (**)(unsigned char *, uint64_t))(v46 + 8);
        v58(v59, v40);
        v58(v60, v40);
        a1 = v79;
      }
      else
      {

        uint64_t v58 = *(void (**)(unsigned char *, uint64_t))(v46 + 8);
        v58(v52, v40);
      }
      if (v87)
      {
        uint64_t v64 = v77;
        uint64_t v65 = v76;
        long long v66 = v58;
        uint64_t v67 = v78;
        (*(void (**)(unsigned char *, void, uint64_t))(v77 + 104))(v76, *MEMORY[0x1E4F38918], v78);
        swift_retain();
        sub_19F1DB9BC();
        swift_release();
        uint64_t v68 = v67;
        uint64_t v58 = v66;
        (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v65, v68);
      }
      if (v90)
      {
        char v95 = &type metadata for JetPackAssetSession.Configuration;
        swift_retain();
        StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v95);
        swift_release();
        swift_release_n();
        swift_release();
        v58(v99, v40);
      }
      else
      {
        v58(v99, v40);
        swift_release();
        swift_release();
      }
      sub_19EEDFF38((uint64_t)v96, a1);
      *(unsigned char *)(a1 + 80) = 1;
      long long v69 = v96[3];
      long long v70 = v94;
      v94[2] = v96[2];
      v70[3] = v69;
      v70[4] = v96[4];
      long long v71 = v96[1];
      *long long v70 = v96[0];
      v70[1] = v71;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF43A70@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, void (*a7)(uint64_t *, uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unint64_t a10)
{
  uint64_t v74 = a8;
  uint64_t v78 = a3;
  uint64_t v79 = a4;
  uint64_t v77 = a2;
  uint64_t v72 = sub_19F1DB8AC();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  long long v70 = &v59[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_19F1DB85C();
  uint64_t v80 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = &v59[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  long long v21 = &v59[-v20];
  MEMORY[0x1F4188790](v22);
  long long v24 = &v59[-v23];
  uint64_t v81 = a1;
  int v73 = a5;
  sub_19EEC3ED8(a1, (uint64_t)v84, a5);
  if (v85) {
    return ((uint64_t (*)(void *, uint64_t))a7)(v84, a9);
  }
  uint64_t v68 = (void (*)(uint64_t))v84[0];
  uint64_t v76 = v84[1];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t started = type metadata accessor for StartUpPerformanceEvent();
  uint64_t v63 = v26;
  if (v26 == started)
  {
    uint64_t v69 = 0;
  }
  else
  {
    uint64_t v75 = v21;
    type metadata accessor for BaseObjectGraph();
    uint64_t v28 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    v83[0] = v28;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v69 = sub_19EEAD6E0(v29);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    long long v21 = v75;
  }
  uint64_t v75 = (unsigned char *)v16;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_19F1DB89C();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v64 = v31;
  uint64_t v32 = sub_19F1DB87C();
  int v33 = sub_19F1DC98C();
  char v34 = sub_19F1DCA6C();
  uint64_t v35 = v24;
  long long v66 = a7;
  uint64_t v65 = a9;
  if (v34)
  {
    unint64_t v61 = a10;
    os_signpost_id_t v62 = v18;
    uint64_t v36 = v80;
    uint64_t v67 = *(void (**)(unsigned char *, unsigned char *, unsigned char *))(v80 + 16);
    int v37 = v75;
    v67(v21, v24, v75);
    uint64_t v77 = v24;
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    int v60 = v33;
    uint64_t v40 = v39;
    v83[0] = v39;
    *(_DWORD *)uint64_t v38 = 136315138;
    uint64_t v86 = sub_19EEAD23C(v74, v61, v83);
    uint64_t v41 = v36;
    uint64_t v18 = v62;
    sub_19F1DCB3C();
    os_signpost_id_t v42 = sub_19F1DB83C();
    uint64_t v35 = v77;
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v32, (os_signpost_type_t)v60, v42, "MakeLazyDependency", "object=%s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v40, -1, -1);
    uint64_t v43 = v38;
    uint64_t v44 = v81;
    MEMORY[0x19F3C9470](v43, -1, -1);

    (*(void (**)(unsigned char *, unsigned char *))(v41 + 8))(v21, v37);
    os_signpost_id_t v45 = v67;
    v67(v21, v35, v37);
  }
  else
  {

    uint64_t v41 = v80;
    uint64_t v44 = v81;
    os_signpost_id_t v45 = *(void (**)(unsigned char *, unsigned char *, unsigned char *))(v80 + 16);
    int v37 = v75;
    v45(v21, v24, v75);
  }
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  uint64_t v46 = v82;
  sub_19EF26C68(v68, v76, v78, v79);
  uint64_t v82 = v46;
  if (v46)
  {
    (*(void (**)(unsigned char *, unsigned char *))(v41 + 8))(v35, v37);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v67 = v45;
    uint64_t v77 = v35;
    sub_19EEBD664(v44, v73);
    uint64_t v47 = sub_19F1DB87C();
    sub_19F1DB8CC();
    int v48 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      LODWORD(v79) = v48;
      swift_retain();
      uint64_t v49 = v70;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v50 = v71;
      uint64_t v51 = v72;
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v71 + 88))(v49, v72) == *MEMORY[0x1E4FBD340])
      {
        os_signpost_type_t v52 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v49, v51);
        os_signpost_type_t v52 = "";
      }
      uint64_t v54 = v75;
      v67(v21, v18, v75);
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      os_signpost_id_t v56 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v47, (os_signpost_type_t)v79, v56, "MakeLazyDependency", v52, v55, 2u);
      MEMORY[0x19F3C9470](v55, -1, -1);

      uint64_t v53 = *(void (**)(unsigned char *, unsigned char *))(v80 + 8);
      v53(v18, v54);
      v53(v21, v54);
    }
    else
    {

      uint64_t v53 = *(void (**)(unsigned char *, unsigned char *))(v41 + 8);
      v53(v18, v37);
    }
    uint64_t v57 = v65;
    uint64_t v58 = v81;
    if (v69)
    {
      uint64_t v86 = v63;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)(&v86);
      swift_release();
      swift_release_n();
      v53(v77, v75);
    }
    else
    {
      v53(v77, v75);
      swift_release();
    }
    sub_19EEC4154((uint64_t)v83, v58);
    *(unsigned char *)(v58 + 40) = 1;
    v66(v83, v57);
  }
  return swift_release();
}

id sub_19EF4428C(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, unint64_t *a5, uint64_t a6, void (*a7)(void *, uint64_t, void))
{
  uint64_t v89 = a7;
  uint64_t v86 = a3;
  uint64_t v87 = a4;
  uint64_t v9 = sub_19F1DB97C();
  uint64_t v82 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v69[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_19F1DB8AC();
  uint64_t v81 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v80 = &v69[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_19F1DB85C();
  uint64_t v90 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v88 = &v69[-v16];
  MEMORY[0x1F4188790](v17);
  uint64_t v91 = &v69[-v19];
  uint64_t v20 = *(void **)a1;
  if (*(unsigned char *)(a1 + 16)) {
    return v20;
  }
  uint64_t v72 = v12;
  uint64_t v77 = v18;
  uint64_t v74 = v9;
  uint64_t v22 = *(void *)(a1 + 8);
  uint64_t v23 = sub_19EEBDC10(0, a5);
  type metadata accessor for BaseObjectGraph();
  uint64_t v83 = v22;
  swift_retain();
  uint64_t v24 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t ObjectType = v24;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_19EEAD6E0(v25);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  uint64_t v27 = v91;
  uint64_t v84 = v26;
  uint64_t v79 = a1;
  if (v26)
  {
    uint64_t v28 = swift_conformsToProtocol2();
    if (v28) {
      uint64_t v29 = v28;
    }
    else {
      uint64_t v29 = 0;
    }
    if (v28) {
      uint64_t v30 = v23;
    }
    else {
      uint64_t v30 = 0;
    }
    if (v30)
    {
      uint64_t v31 = v20;
      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      swift_retain();
      v32(v30, v29);
      uint64_t v20 = v31;
      a1 = v79;
      uint64_t v27 = v91;
      uint64_t v30 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      swift_release();
    }
  }
  else
  {
    uint64_t v30 = 0;
  }
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v78 = v30;
  uint64_t v85 = v14;
  uint64_t v33 = sub_19F1DB89C();
  uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v76 = v34;
  uint64_t v35 = sub_19F1DB87C();
  int v36 = sub_19F1DC98C();
  char v37 = sub_19F1DCA6C();
  int v73 = v11;
  if (v37)
  {
    uint64_t v71 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v90 + 16);
    int v70 = v36;
    uint64_t v38 = v88;
    uint64_t v39 = v85;
    v71(v88, v27, v85);
    uint64_t v75 = v20;
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t ObjectType = v41;
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v42 = sub_19F1DD98C();
    uint64_t v93 = sub_19EEAD23C(v42, v43, &ObjectType);
    uint64_t v20 = v75;
    sub_19F1DCB3C();
    swift_bridgeObjectRelease();
    os_signpost_id_t v44 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v35, (os_signpost_type_t)v70, v44, "MakeLazyDependency", "object=%s", v40, 0xCu);
    swift_arrayDestroy();
    uint64_t v45 = v41;
    a1 = v79;
    MEMORY[0x19F3C9470](v45, -1, -1);
    MEMORY[0x19F3C9470](v40, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v38, v39);
    id v21 = v71;
    uint64_t v46 = v83;
    v71(v38, v91, v39);
  }
  else
  {

    id v21 = *(id *)(v90 + 16);
    uint64_t v46 = v83;
    uint64_t v39 = v85;
    uint64_t v38 = v88;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v21)(v88, v91, v85);
  }
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  uint64_t v47 = v92;
  int v48 = sub_19EF26DBC((void (*)(void **__return_ptr, uint64_t))v20, v46, (uint64_t)v86, v87);
  uint64_t v92 = v47;
  if (v47)
  {
    (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v91, v39);
    swift_release();
    swift_release();
    swift_release();
    v89(v20, v46, 0);
    return v21;
  }
  uint64_t v88 = v48;
  v89(*(void **)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  uint64_t v49 = sub_19F1DB87C();
  uint64_t v50 = v77;
  sub_19F1DB8CC();
  LODWORD(v87) = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    swift_retain();
    uint64_t v51 = v80;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v52 = v81;
    uint64_t v53 = v72;
    int v54 = (*(uint64_t (**)(unsigned char *, uint64_t))(v81 + 88))(v51, v72);
    int v55 = *MEMORY[0x1E4FBD340];
    uint64_t v75 = v20;
    if (v54 == v55)
    {
      os_signpost_id_t v56 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v51, v53);
      os_signpost_id_t v56 = "";
    }
    uint64_t v86 = v56;
    uint64_t v60 = v77;
    uint64_t v59 = v85;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v21)(v38, v77, v85);
    unint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v61 = 0;
    os_signpost_id_t v62 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v49, (os_signpost_type_t)v87, v62, "MakeLazyDependency", v86, v61, 2u);
    MEMORY[0x19F3C9470](v61, -1, -1);

    uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
    v57(v60, v59);
    v57((uint64_t)v38, v59);
    a1 = v79;
    uint64_t v20 = v75;
    if (!v78) {
      goto LABEL_30;
    }
  }
  else
  {

    uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
    uint64_t v58 = v50;
    uint64_t v59 = v85;
    v57(v58, v85);
    if (!v78) {
      goto LABEL_30;
    }
  }
  uint64_t v63 = v82;
  uint64_t v65 = v73;
  uint64_t v64 = v74;
  (*(void (**)(unsigned char *, void, uint64_t))(v82 + 104))(v73, *MEMORY[0x1E4F38918], v74);
  swift_retain();
  sub_19F1DB9BC();
  swift_release();
  long long v66 = v65;
  uint64_t v59 = v85;
  (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v66, v64);
LABEL_30:
  if (v84)
  {
    uint64_t v67 = v88;
    uint64_t ObjectType = swift_getObjectType();
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&ObjectType);
    swift_release();
    swift_release_n();
    swift_release();
    v57((uint64_t)v91, v59);
  }
  else
  {
    v57((uint64_t)v91, v59);
    swift_release();
    swift_release();
    uint64_t v67 = v88;
  }
  *(void *)a1 = v67;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  id v21 = v67;
  v89(v20, v83, 0);
  return v21;
}

uint64_t sub_19EF44BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t *a5@<X5>, uint64_t (*a6)(void)@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9)
{
  uint64_t v89 = a7;
  char v95 = a6;
  uint64_t v92 = a2;
  uint64_t v93 = (unsigned char *)a3;
  uint64_t v13 = sub_19F1DB97C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v85 = &v72[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_19F1DB8AC();
  uint64_t v83 = *(void *)(v16 - 8);
  uint64_t v84 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v82 = &v72[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v91 = a4(0);
  MEMORY[0x1F4188790](v91);
  uint64_t v19 = &v72[-v18];
  uint64_t v96 = sub_19F1DB85C();
  uint64_t v99 = *(void *)(v96 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v96);
  uint64_t v90 = &v72[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v97 = &v72[-v23];
  MEMORY[0x1F4188790](v22);
  char v98 = &v72[-v24];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = &v72[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v87 = a5;
  sub_19EEC3ED8(a1, (uint64_t)v27, a5);
  uint64_t v86 = v25;
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_19EF4B484((uint64_t)v27, a8, v95);
  }
  uint64_t v76 = v13;
  uint64_t v81 = *(void (**)(uint64_t))v27;
  uint64_t v94 = *((void *)v27 + 1);
  type metadata accessor for BaseObjectGraph();
  uint64_t v29 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v102 = v29;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_19EEAD6E0(v30);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  uint64_t v78 = v14;
  uint64_t v88 = v31;
  if (!v31) {
    goto LABEL_13;
  }
  uint64_t v32 = v91;
  uint64_t v33 = swift_conformsToProtocol2();
  if (v33) {
    uint64_t v34 = v33;
  }
  else {
    uint64_t v34 = 0;
  }
  if (!v33) {
    uint64_t v32 = 0;
  }
  if (v32)
  {
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    swift_retain();
    v35(v32, v34);
    uint64_t v36 = sub_19F18D8AC();
    swift_release();
    swift_retain();
    sub_19F1DB9AC();
    swift_release();
  }
  else
  {
LABEL_13:
    uint64_t v36 = 0;
  }
  uint64_t v79 = a8;
  char v37 = v97;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v80 = a1;
  uint64_t v38 = sub_19F1DB89C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  uint64_t v40 = v98;
  sub_19F1DB81C();
  uint64_t v77 = v39;
  uint64_t v41 = sub_19F1DB87C();
  int v42 = sub_19F1DC98C();
  if (sub_19F1DCA6C())
  {
    uint64_t v74 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v99 + 16);
    int v73 = v42;
    uint64_t v43 = v96;
    v74(v37, v40, v96);
    uint64_t v44 = swift_slowAlloc();
    uint64_t v75 = v36;
    uint64_t v45 = (uint8_t *)v44;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v102 = v46;
    *(_DWORD *)uint64_t v45 = 136315138;
    uint64_t v101 = sub_19EEAD23C(v89, a9, &v102);
    char v37 = v97;
    uint64_t v40 = v98;
    sub_19F1DCB3C();
    os_signpost_id_t v47 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v41, (os_signpost_type_t)v73, v47, "MakeLazyDependency", "object=%s", v45, 0xCu);
    swift_arrayDestroy();
    uint64_t v48 = v46;
    uint64_t v49 = v74;
    MEMORY[0x19F3C9470](v48, -1, -1);
    uint64_t v50 = v45;
    uint64_t v36 = v75;
    MEMORY[0x19F3C9470](v50, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v99 + 8))(v37, v43);
  }
  else
  {

    uint64_t v49 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v99 + 16);
    uint64_t v43 = v96;
  }
  v49(v37, v40, v43);
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  uint64_t v51 = v100;
  sub_19EF26C68(v81, v94, v92, (uint64_t)v93);
  uint64_t v100 = v51;
  if (v51)
  {
    (*(void (**)(unsigned char *, uint64_t))(v99 + 8))(v40, v43);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v93 = v19;
    sub_19EEBD664(v80, v87);
    uint64_t v52 = sub_19F1DB87C();
    uint64_t v53 = v90;
    sub_19F1DB8CC();
    int v54 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      LODWORD(v92) = v54;
      swift_retain();
      int v55 = v82;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v57 = v83;
      uint64_t v56 = v84;
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v83 + 88))(v55, v84) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v58 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v55, v56);
        uint64_t v58 = "";
      }
      uint64_t v60 = v97;
      v49(v97, v90, v43);
      unint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v61 = 0;
      os_signpost_id_t v62 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v52, (os_signpost_type_t)v92, v62, "MakeLazyDependency", v58, v61, 2u);
      uint64_t v63 = v61;
      uint64_t v43 = v96;
      MEMORY[0x19F3C9470](v63, -1, -1);

      uint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v99 + 8);
      v59(v90, v43);
      v59(v60, v43);
    }
    else
    {

      uint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v99 + 8);
      v59(v53, v43);
    }
    uint64_t v64 = v79;
    uint64_t v65 = v80;
    uint64_t v66 = v78;
    if (v36)
    {
      uint64_t v67 = v85;
      uint64_t v68 = v76;
      (*(void (**)(unsigned char *, void, uint64_t))(v78 + 104))(v85, *MEMORY[0x1E4F38918], v76);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      uint64_t v69 = v68;
      uint64_t v43 = v96;
      (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v67, v69);
    }
    if (v88)
    {
      uint64_t v102 = v91;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)(&v102);
      swift_release();
      swift_release_n();
      swift_release();
      v59(v98, v43);
    }
    else
    {
      v59(v98, v43);
      swift_release();
      swift_release();
    }
    uint64_t v70 = (uint64_t)v93;
    uint64_t v71 = v95;
    sub_19EF4B4EC((uint64_t)v93, v65, v95);
    swift_storeEnumTagMultiPayload();
    sub_19EF4B484(v70, v64, v71);
  }
  return swift_release();
}

uint64_t sub_19EF455C4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  os_log_t v87 = a3;
  uint64_t v88 = (char *)a4;
  uint64_t v86 = a2;
  uint64_t v89 = a5;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v84 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB8AC();
  uint64_t v83 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DB85C();
  uint64_t v90 = *(void *)(v12 - 8);
  uint64_t v91 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v73 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v73 - v19;
  uint64_t v21 = a1;
  uint64_t result = sub_19EEC3ED8(a1, (uint64_t)v95, &qword_1E9470950);
  if (v97 == 1)
  {
    long long v23 = v95[1];
    uint64_t v24 = v89;
    *uint64_t v89 = v95[0];
    v24[1] = v23;
    _OWORD v24[2] = v95[2];
    *((void *)v24 + 6) = v96;
  }
  else
  {
    uint64_t v75 = v9;
    uint64_t v79 = v14;
    uint64_t v76 = v8;
    uint64_t v77 = v6;
    uint64_t v25 = *((void *)&v95[0] + 1);
    uint64_t v26 = *(void (**)(uint64_t))&v95[0];
    type metadata accessor for BaseObjectGraph();
    uint64_t v27 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&v93[0] = v27;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = sub_19EEAD6E0(v28);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v85 = v29;
    uint64_t v74 = v11;
    if (v29
      && ((uint64_t v30 = swift_conformsToProtocol2()) != 0 ? (v31 = v30) : (v31 = 0),
          v30 ? (uint64_t v32 = &type metadata for DiskJetPackLoader) : (uint64_t v32 = 0),
          v32))
    {
      uint64_t v33 = v20;
      uint64_t v34 = v26;
      uint64_t v35 = v25;
      uint64_t v36 = *(void (**)(ValueMetadata *, uint64_t))(v31 + 8);
      swift_retain();
      v36(v32, v31);
      uint64_t v25 = v35;
      uint64_t v26 = v34;
      uint64_t v20 = v33;
      uint64_t v37 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v82 = v37;
      swift_release();
    }
    else
    {
      uint64_t v82 = 0;
    }
    uint64_t v81 = v21;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_19F1DB89C();
    uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v78 = v39;
    uint64_t v40 = sub_19F1DB87C();
    os_signpost_type_t v41 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      int v42 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
      v42(v17, v20, v91);
      int v73 = v26;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v86 = v17;
      uint64_t v44 = (uint8_t *)v43;
      uint64_t v45 = swift_slowAlloc();
      uint64_t v80 = v25;
      uint64_t v46 = v45;
      *(void *)&v93[0] = v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      char v98 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000011, 0x800000019F269250, (uint64_t *)v93);
      sub_19F1DCB3C();
      os_signpost_id_t v47 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v40, v41, v47, "MakeLazyDependency", "object=%s", v44, 0xCu);
      swift_arrayDestroy();
      uint64_t v48 = v46;
      uint64_t v25 = v80;
      MEMORY[0x19F3C9470](v48, -1, -1);
      uint64_t v49 = v44;
      uint64_t v17 = v86;
      MEMORY[0x19F3C9470](v49, -1, -1);

      uint64_t v26 = v73;
      (*(void (**)(char *, uint64_t))(v90 + 8))(v17, v91);
    }
    else
    {

      int v42 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
    }
    v42(v17, v20, v91);
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v50 = v92;
    sub_19EF26C68(v26, v25, (uint64_t)v87, (uint64_t)v88);
    uint64_t v92 = v50;
    if (v50)
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v20, v91);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v88 = v20;
      sub_19EEBD664(v81, &qword_1E9470950);
      uint64_t v51 = sub_19F1DB87C();
      uint64_t v52 = v79;
      sub_19F1DB8CC();
      int v53 = sub_19F1DC97C();
      char v54 = sub_19F1DCA6C();
      uint64_t v80 = v25;
      if (v54)
      {
        LODWORD(v86) = v53;
        os_log_t v87 = v51;
        int v55 = v42;
        swift_retain();
        uint64_t v56 = v74;
        sub_19F1DB8FC();
        swift_release();
        uint64_t v57 = v83;
        uint64_t v58 = v75;
        if ((*(unsigned int (**)(char *, uint64_t))(v83 + 88))(v56, v75) == *MEMORY[0x1E4FBD340])
        {
          uint64_t v59 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
          uint64_t v59 = "";
        }
        unint64_t v61 = v52;
        os_signpost_id_t v62 = v52;
        uint64_t v63 = v91;
        v55(v17, v61, v91);
        uint64_t v64 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v64 = 0;
        os_signpost_id_t v65 = sub_19F1DB83C();
        os_log_t v66 = v87;
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v87, (os_signpost_type_t)v86, v65, "MakeLazyDependency", v59, v64, 2u);
        MEMORY[0x19F3C9470](v64, -1, -1);

        uint64_t v60 = *(void (**)(char *, uint64_t))(v90 + 8);
        v60(v62, v63);
        v60(v17, v63);
      }
      else
      {

        uint64_t v60 = *(void (**)(char *, uint64_t))(v90 + 8);
        v60(v52, v91);
      }
      uint64_t v67 = v81;
      uint64_t v68 = v84;
      if (v82)
      {
        uint64_t v69 = v76;
        uint64_t v70 = v77;
        (*(void (**)(char *, void, uint64_t))(v84 + 104))(v76, *MEMORY[0x1E4F38918], v77);
        swift_retain();
        sub_19F1DB9BC();
        swift_release();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
      }
      if (v85)
      {
        char v98 = &type metadata for DiskJetPackLoader;
        swift_retain();
        StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v98);
        swift_release();
        swift_release_n();
        swift_release();
        v60(v88, v91);
      }
      else
      {
        v60(v88, v91);
        swift_release();
        swift_release();
      }
      sub_19EE5A0EC((uint64_t)v93, v67);
      *(unsigned char *)(v67 + 56) = 1;
      long long v71 = v93[1];
      uint64_t v72 = v89;
      *uint64_t v89 = v93[0];
      v72[1] = v71;
      v72[2] = v93[2];
      *((void *)v72 + 6) = v94;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF45F50@<X0>(uint64_t a1@<X0>, char *a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  os_log_t v87 = a3;
  uint64_t v88 = (char *)a4;
  uint64_t v86 = a2;
  uint64_t v89 = a5;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v84 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB8AC();
  uint64_t v83 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DB85C();
  uint64_t v90 = *(void *)(v12 - 8);
  uint64_t v91 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v73 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v73 - v19;
  uint64_t v21 = a1;
  uint64_t result = sub_19EEC3ED8(a1, (uint64_t)v95, &qword_1E9470938);
  if (v97 == 1)
  {
    long long v23 = v95[1];
    uint64_t v24 = v89;
    *uint64_t v89 = v95[0];
    v24[1] = v23;
    _OWORD v24[2] = v95[2];
    *((void *)v24 + 6) = v96;
  }
  else
  {
    uint64_t v75 = v9;
    uint64_t v79 = v14;
    uint64_t v76 = v8;
    uint64_t v77 = v6;
    uint64_t v25 = *((void *)&v95[0] + 1);
    uint64_t v26 = *(void (**)(uint64_t))&v95[0];
    type metadata accessor for BaseObjectGraph();
    uint64_t v27 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&v93[0] = v27;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = sub_19EEAD6E0(v28);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    uint64_t v85 = v29;
    uint64_t v74 = v11;
    if (v29
      && ((uint64_t v30 = swift_conformsToProtocol2()) != 0 ? (v31 = v30) : (v31 = 0),
          v30 ? (uint64_t v32 = &type metadata for InMemoryJetPackLoader) : (uint64_t v32 = 0),
          v32))
    {
      uint64_t v33 = v20;
      uint64_t v34 = v26;
      uint64_t v35 = v25;
      uint64_t v36 = *(void (**)(ValueMetadata *, uint64_t))(v31 + 8);
      swift_retain();
      v36(v32, v31);
      uint64_t v25 = v35;
      uint64_t v26 = v34;
      uint64_t v20 = v33;
      uint64_t v37 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      uint64_t v82 = v37;
      swift_release();
    }
    else
    {
      uint64_t v82 = 0;
    }
    uint64_t v81 = v21;
    if (qword_1E946E608 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_19F1DB89C();
    uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v78 = v39;
    uint64_t v40 = sub_19F1DB87C();
    os_signpost_type_t v41 = sub_19F1DC98C();
    if (sub_19F1DCA6C())
    {
      int v42 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
      v42(v17, v20, v91);
      int v73 = v26;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v86 = v17;
      uint64_t v44 = (uint8_t *)v43;
      uint64_t v45 = swift_slowAlloc();
      uint64_t v80 = v25;
      uint64_t v46 = v45;
      *(void *)&v93[0] = v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      char v98 = (ValueMetadata *)sub_19EEAD23C(0xD000000000000015, 0x800000019F269230, (uint64_t *)v93);
      sub_19F1DCB3C();
      os_signpost_id_t v47 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v40, v41, v47, "MakeLazyDependency", "object=%s", v44, 0xCu);
      swift_arrayDestroy();
      uint64_t v48 = v46;
      uint64_t v25 = v80;
      MEMORY[0x19F3C9470](v48, -1, -1);
      uint64_t v49 = v44;
      uint64_t v17 = v86;
      MEMORY[0x19F3C9470](v49, -1, -1);

      uint64_t v26 = v73;
      (*(void (**)(char *, uint64_t))(v90 + 8))(v17, v91);
    }
    else
    {

      int v42 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
    }
    v42(v17, v20, v91);
    sub_19F1DB8EC();
    swift_allocObject();
    sub_19F1DB8DC();
    uint64_t v50 = v92;
    sub_19EF26C68(v26, v25, (uint64_t)v87, (uint64_t)v88);
    uint64_t v92 = v50;
    if (v50)
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v20, v91);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v88 = v20;
      sub_19EEBD664(v81, &qword_1E9470938);
      uint64_t v51 = sub_19F1DB87C();
      uint64_t v52 = v79;
      sub_19F1DB8CC();
      int v53 = sub_19F1DC97C();
      char v54 = sub_19F1DCA6C();
      uint64_t v80 = v25;
      if (v54)
      {
        LODWORD(v86) = v53;
        os_log_t v87 = v51;
        int v55 = v42;
        swift_retain();
        uint64_t v56 = v74;
        sub_19F1DB8FC();
        swift_release();
        uint64_t v57 = v83;
        uint64_t v58 = v75;
        if ((*(unsigned int (**)(char *, uint64_t))(v83 + 88))(v56, v75) == *MEMORY[0x1E4FBD340])
        {
          uint64_t v59 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
          uint64_t v59 = "";
        }
        unint64_t v61 = v52;
        os_signpost_id_t v62 = v52;
        uint64_t v63 = v91;
        v55(v17, v61, v91);
        uint64_t v64 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v64 = 0;
        os_signpost_id_t v65 = sub_19F1DB83C();
        os_log_t v66 = v87;
        _os_signpost_emit_with_name_impl(&dword_19EE14000, v87, (os_signpost_type_t)v86, v65, "MakeLazyDependency", v59, v64, 2u);
        MEMORY[0x19F3C9470](v64, -1, -1);

        uint64_t v60 = *(void (**)(char *, uint64_t))(v90 + 8);
        v60(v62, v63);
        v60(v17, v63);
      }
      else
      {

        uint64_t v60 = *(void (**)(char *, uint64_t))(v90 + 8);
        v60(v52, v91);
      }
      uint64_t v67 = v81;
      uint64_t v68 = v84;
      if (v82)
      {
        uint64_t v69 = v76;
        uint64_t v70 = v77;
        (*(void (**)(char *, void, uint64_t))(v84 + 104))(v76, *MEMORY[0x1E4F38918], v77);
        swift_retain();
        sub_19F1DB9BC();
        swift_release();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
      }
      if (v85)
      {
        char v98 = &type metadata for InMemoryJetPackLoader;
        swift_retain();
        StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v98);
        swift_release();
        swift_release_n();
        swift_release();
        v60(v88, v91);
      }
      else
      {
        v60(v88, v91);
        swift_release();
        swift_release();
      }
      sub_19EE5A148((uint64_t)v93, v67);
      *(unsigned char *)(v67 + 56) = 1;
      long long v71 = v93[1];
      uint64_t v72 = v89;
      *uint64_t v89 = v93[0];
      v72[1] = v71;
      v72[2] = v93[2];
      *((void *)v72 + 6) = v94;
    }
    return swift_release();
  }
  return result;
}

uint64_t *sub_19EF468DC(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, unint64_t a7, void (*a8)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))
{
  void (*v24)(void **__return_ptr, uint64_t);
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_signpost_type_t v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  os_signpost_id_t v45;
  void (*v46)(uint64_t *, char *, uint64_t);
  uint64_t v47;
  void (*v48)(void **__return_ptr, uint64_t);
  uint64_t v49;
  uint64_t *v50;
  NSObject *v51;
  char *v52;
  int v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  const char *v59;
  void (*v60)(uint64_t, uint64_t);
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  uint8_t *v64;
  os_signpost_id_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t *, char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(void **__return_ptr, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  uint64_t *v91;
  void (*v92)(void (*)(void **__return_ptr, uint64_t), uint64_t, void);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  uint64_t v92 = a8;
  uint64_t v86 = a6;
  os_log_t v87 = a7;
  uint64_t v89 = a3;
  uint64_t v90 = a4;
  uint64_t v10 = sub_19F1DB97C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_19F1DB8AC();
  uint64_t v80 = *(void *)(v14 - 8);
  uint64_t v81 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v79 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_19F1DB85C();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v91 = (uint64_t *)((char *)&v71 - v20);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v93 = (char *)&v71 - v23;
  uint64_t v24 = *(void (**)(void **__return_ptr, uint64_t))a1;
  if (*(unsigned char *)(a1 + 16))
  {
    swift_retain();
    return (uint64_t *)v24;
  }
  uint64_t v76 = v22;
  long long v71 = v13;
  uint64_t v72 = v11;
  int v73 = v10;
  uint64_t v88 = v21;
  uint64_t v77 = a1;
  uint64_t v26 = *(void *)(a1 + 8);
  type metadata accessor for BaseObjectGraph();
  uint64_t v84 = v26;
  swift_retain();
  uint64_t v27 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v96 = v27;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = sub_19EEAD6E0(v28);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  uint64_t v30 = v93;
  if (v29)
  {
    uint64_t v31 = a5(0);
    uint64_t v32 = swift_conformsToProtocol2();
    if (v32) {
      uint64_t v33 = v32;
    }
    else {
      uint64_t v33 = 0;
    }
    if (v32) {
      uint64_t v34 = v31;
    }
    else {
      uint64_t v34 = 0;
    }
    if (v34)
    {
      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      swift_retain();
      v35(v34, v33);
      uint64_t v30 = v93;
      uint64_t v34 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      swift_release();
    }
  }
  else
  {
    uint64_t v34 = 0;
  }
  uint64_t v82 = v24;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v83 = v34;
  uint64_t v78 = v29;
  uint64_t v36 = sub_19F1DB89C();
  uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v74 = v37;
  uint64_t v38 = sub_19F1DB87C();
  uint64_t v39 = sub_19F1DC98C();
  uint64_t v40 = sub_19F1DCA6C();
  uint64_t v85 = v17;
  if (v40)
  {
    uint64_t v75 = *(void (**)(uint64_t *, char *, uint64_t))(v17 + 16);
    os_signpost_type_t v41 = v91;
    int v42 = v88;
    v75(v91, v30, v88);
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v96 = v44;
    *(_DWORD *)uint64_t v43 = 136315138;
    char v95 = sub_19EEAD23C(v86, v87, &v96);
    uint64_t v30 = v93;
    sub_19F1DCB3C();
    uint64_t v45 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v38, v39, v45, "MakeLazyDependency", "object=%s", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v44, -1, -1);
    MEMORY[0x19F3C9470](v43, -1, -1);

    uint64_t v25 = v41;
    (*(void (**)(uint64_t *, uint64_t))(v85 + 8))(v41, v42);
    uint64_t v46 = v75;
    os_signpost_id_t v47 = v84;
    v75(v25, v30, v42);
  }
  else
  {

    uint64_t v46 = *(void (**)(uint64_t *, char *, uint64_t))(v17 + 16);
    os_signpost_id_t v47 = v84;
    int v42 = v88;
    uint64_t v25 = v91;
    v46(v91, v30, v88);
  }
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  uint64_t v48 = v82;
  uint64_t v49 = v94;
  uint64_t v50 = sub_19EF26DBC(v82, v47, (uint64_t)v89, v90);
  uint64_t v94 = v49;
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v85 + 8))(v30, v42);
    swift_release();
    swift_release();
    swift_release();
    v92(v48, v47, 0);
    return v25;
  }
  uint64_t v25 = v50;
  uint64_t v75 = v46;
  v92(*(void (**)(void **__return_ptr, uint64_t))v77, *(void *)(v77 + 8), *(unsigned __int8 *)(v77 + 16));
  uint64_t v51 = sub_19F1DB87C();
  uint64_t v52 = v76;
  sub_19F1DB8CC();
  int v53 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    swift_retain();
    char v54 = v79;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v56 = v80;
    int v55 = v81;
    uint64_t v57 = (*(uint64_t (**)(char *, uint64_t))(v80 + 88))(v54, v81);
    uint64_t v58 = *MEMORY[0x1E4FBD340];
    LODWORD(v90) = v53;
    if (v57 == v58)
    {
      uint64_t v59 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v55);
      uint64_t v59 = "";
    }
    uint64_t v89 = v59;
    unint64_t v61 = v76;
    os_signpost_id_t v62 = v91;
    uint64_t v63 = v88;
    v75(v91, v76, v88);
    uint64_t v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v64 = 0;
    os_signpost_id_t v65 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v51, (os_signpost_type_t)v90, v65, "MakeLazyDependency", v89, v64, 2u);
    MEMORY[0x19F3C9470](v64, -1, -1);

    uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v60((uint64_t)v61, v63);
    v60((uint64_t)v62, v63);
    uint64_t v48 = v82;
    uint64_t v30 = v93;
    if (!v83) {
      goto LABEL_30;
    }
  }
  else
  {

    uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v60((uint64_t)v52, v88);
    if (!v83) {
      goto LABEL_30;
    }
  }
  os_log_t v66 = v72;
  uint64_t v67 = v71;
  uint64_t v68 = v73;
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v71, *MEMORY[0x1E4F38918], v73);
  swift_retain();
  sub_19F1DB9BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  uint64_t v30 = v93;
LABEL_30:
  if (v78)
  {
    uint64_t v96 = *v25;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&v96);
    swift_release();
    swift_release_n();
    swift_release();
    v60((uint64_t)v30, v88);
  }
  else
  {
    v60((uint64_t)v30, v88);
    swift_release();
    swift_release();
  }
  uint64_t v69 = v77;
  *(void *)uint64_t v77 = v25;
  *(void *)(v69 + 8) = 0;
  *(unsigned char *)(v69 + 16) = 1;
  swift_retain();
  v92(v48, v84, 0);
  return v25;
}

uint64_t sub_19EF47218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v18)(void **__return_ptr, uint64_t);
  uint64_t v19;
  unsigned int v20;
  uint64_t result;
  ValueMetadata *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  unsigned char *v27;
  os_signpost_type_t v28;
  char v29;
  uint8_t *v30;
  ValueMetadata *v31;
  ValueMetadata *v32;
  os_signpost_id_t v33;
  ValueMetadata *v34;
  void (*v35)(unsigned char *, unsigned char *, uint64_t);
  uint64_t v36;
  void (*v37)(void **__return_ptr, uint64_t);
  void *v38;
  uint64_t v39;
  int v40;
  NSObject *v41;
  unsigned char *v42;
  char v43;
  NSObject *v44;
  unsigned char *v45;
  const char *v46;
  uint64_t v47;
  const char *v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  unsigned char *v51;
  uint8_t *v52;
  os_signpost_id_t v53;
  unsigned char *v54;
  uint64_t v55;
  unsigned char v56[4];
  int v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(unsigned char *, unsigned char *, uint64_t);
  unsigned char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  unsigned char *v66;
  const char *v67;
  void (*v68)(void **__return_ptr, uint64_t);
  uint64_t v69;
  uint64_t v70;
  unsigned char *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  ValueMetadata *v75;

  uint64_t v5 = v4;
  uint64_t v72 = a3;
  int v73 = (void *)a4;
  uint64_t v7 = sub_19F1DB8AC();
  uint64_t v67 = *(const char **)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  os_log_t v66 = &v56[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_19F1DB85C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v56[-v13];
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = &v56[-v16];
  uint64_t v18 = *(void (**)(void **__return_ptr, uint64_t))a1;
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 17)) {
    return *(void *)a1;
  }
  uint64_t v58 = v7;
  unint64_t v61 = v15;
  uint64_t v68 = v18;
  os_signpost_id_t v65 = v20;
  type metadata accessor for BaseObjectGraph();
  uint64_t v69 = v19;
  swift_retain();
  uint64_t v22 = (ValueMetadata *)static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v75 = v22;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v64 = sub_19EEAD6E0(v23);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_19F1DB89C();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v59 = v25;
  uint64_t v26 = sub_19F1DB87C();
  uint64_t v27 = v17;
  uint64_t v28 = sub_19F1DC98C();
  uint64_t v29 = sub_19F1DCA6C();
  uint64_t v70 = v10;
  long long v71 = v27;
  if (v29)
  {
    uint64_t v60 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16);
    v60(v14, v27, v9);
    uint64_t v63 = v4;
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = (ValueMetadata *)swift_slowAlloc();
    os_signpost_id_t v62 = v9;
    uint64_t v32 = v31;
    uint64_t v75 = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v74 = sub_19EEAD23C(0xD000000000000038, 0x800000019F2690D0, (uint64_t *)&v75);
    uint64_t v5 = v63;
    sub_19F1DCB3C();
    uint64_t v33 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v26, v28, v33, "MakeLazyDependency", "object=%s", v30, 0xCu);
    swift_arrayDestroy();
    uint64_t v34 = v32;
    uint64_t v9 = v62;
    MEMORY[0x19F3C9470](v34, -1, -1);
    MEMORY[0x19F3C9470](v30, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v70 + 8))(v14, v9);
    uint64_t v35 = v60;
    v60(v14, v71, v9);
  }
  else
  {

    uint64_t v35 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16);
    v35(v14, v71, v9);
  }
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  uint64_t v37 = v68;
  uint64_t v36 = v69;
  uint64_t v38 = sub_19EF26F28(v68, v69, v72, (uint64_t)v73);
  if (v5)
  {
    (*(void (**)(unsigned char *, uint64_t))(v70 + 8))(v71, v9);
    swift_release();
    swift_release();
    return sub_19EF49570((uint64_t)v37, v36, v65, 0);
  }
  else
  {
    uint64_t v57 = v40;
    uint64_t v72 = v39;
    int v73 = v38;
    uint64_t v60 = v35;
    os_signpost_id_t v62 = v9;
    sub_19EF49570(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(unsigned char *)(a1 + 17));
    os_signpost_type_t v41 = sub_19F1DB87C();
    int v42 = v61;
    sub_19F1DB8CC();
    LODWORD(v59) = sub_19F1DC97C();
    uint64_t v43 = sub_19F1DCA6C();
    uint64_t v63 = 0;
    if (v43)
    {
      uint64_t v44 = v41;
      swift_retain();
      uint64_t v45 = v66;
      sub_19F1DB8FC();
      swift_release();
      uint64_t v46 = v67;
      os_signpost_id_t v47 = v58;
      if ((*((unsigned int (**)(unsigned char *, uint64_t))v67 + 11))(v45, v58) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v48 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(unsigned char *, uint64_t))v46 + 1))(v45, v47);
        uint64_t v48 = "";
      }
      uint64_t v67 = v48;
      uint64_t v51 = v61;
      uint64_t v50 = v62;
      v60(v14, v61, v62);
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      int v53 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v44, (os_signpost_type_t)v59, v53, "MakeLazyDependency", v67, v52, 2u);
      MEMORY[0x19F3C9470](v52, -1, -1);

      uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      v49((uint64_t)v51, v50);
      v49((uint64_t)v14, v50);
    }
    else
    {

      uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      uint64_t v50 = v62;
      v49((uint64_t)v42, v62);
    }
    char v54 = v71;
    if (v64)
    {
      uint64_t v75 = &type metadata for IntentDispatchOptions.BadOrderingCanary;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v75);
      swift_release();
      swift_release_n();
      v49((uint64_t)v54, v50);
    }
    else
    {
      v49((uint64_t)v71, v50);
      swift_release();
    }
    sub_19EF49570((uint64_t)v68, v69, v65, 0);
    int v55 = v72;
    uint64_t result = (uint64_t)v73;
    *(void *)a1 = v73;
    *(void *)(a1 + 8) = v55;
    *(unsigned char *)(a1 + 16) = v57;
    *(unsigned char *)(a1 + 17) = 1;
  }
  return result;
}

uint64_t sub_19EF47950(uint64_t a1, uint64_t a2)
{
  return sub_19EF48588(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_19EF47970(uint64_t a1, uint64_t a2)
{
  return sub_19EF48588(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_19EF47998()
{
  return MEMORY[0x1F40E6EA8](*v0);
}

uint64_t sub_19EF479A0(uint64_t a1, uint64_t a2)
{
  int v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x19F3C7B20](a1, &v6);
  int v4 = v6;
  char v5 = v7;
  if (v7) {
    int v4 = 0;
  }
  *(_DWORD *)a2 = v4;
  *(unsigned char *)(a2 + 4) = v5;
  return result;
}

uint64_t sub_19EF479F4(uint64_t a1, uint64_t a2)
{
  char v3 = sub_19F1DD83C();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_19EF47A4C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_19F1DD84C();
  *a1 = result;
  return result;
}

void *sub_19EF47A74@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_19EF47A88(uint64_t a1, id *a2)
{
  uint64_t result = sub_19F1DBD5C();
  *a2 = 0;
  return result;
}

uint64_t sub_19EF47B00(uint64_t a1, id *a2)
{
  char v3 = sub_19F1DBD6C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_19EF47B80@<X0>(uint64_t *a1@<X8>)
{
  sub_19F1DBD7C();
  uint64_t v2 = sub_19F1DBD4C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_19EF47BC4(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_19EF47BD0(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_19EF47BDC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_19EF47BF0()
{
  swift_getWitnessTable();
  return sub_19F1DB7BC();
}

uint64_t sub_19EF47C5C()
{
  swift_getWitnessTable();
  return sub_19F1DB7BC();
}

uint64_t sub_19EF47CC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_19F1DBD7C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_19EF47CF4()
{
  sub_19EE24790((unint64_t *)&qword_1E9470C78, type metadata accessor for NSKeyValueChangeKey);
  sub_19EE24790((unint64_t *)&unk_1E9470C80, type metadata accessor for NSKeyValueChangeKey);
  return sub_19F1DD0DC();
}

uint64_t sub_19EF47DB0()
{
  sub_19EE24790(&qword_1E9470810, type metadata accessor for AMSBagKey);
  sub_19EE24790(&qword_1E9470818, type metadata accessor for AMSBagKey);
  return sub_19F1DD0DC();
}

uint64_t sub_19EF47E6C()
{
  return sub_19EE24790(&qword_1E9470740, type metadata accessor for AMSBagKey);
}

uint64_t sub_19EF47EB4()
{
  return sub_19EE24790(&qword_1E9470748, type metadata accessor for AMSBagKey);
}

uint64_t sub_19EF47EFC()
{
  return sub_19EE24790(&qword_1E946E770, type metadata accessor for AMSBagKey);
}

uint64_t sub_19EF47F44()
{
  sub_19EE24790(&qword_1E9470800, type metadata accessor for AMSMediaArtworkFormat);
  sub_19EE24790(&qword_1E9470808, type metadata accessor for AMSMediaArtworkFormat);
  return sub_19F1DD0DC();
}

uint64_t sub_19EF48000()
{
  sub_19EE24790(&qword_1E94707F0, type metadata accessor for AMSMediaArtworkCropStyle);
  sub_19EE24790(&qword_1E94707F8, type metadata accessor for AMSMediaArtworkCropStyle);
  return sub_19F1DD0DC();
}

_DWORD *sub_19EF480BC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_19EF480CC()
{
  return sub_19F1DD0DC();
}

uint64_t sub_19EF48188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_19F1DBD4C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_19EF481D0()
{
  sub_19EE24790(&qword_1E9470C68, type metadata accessor for AMSMediaArtworkColorKind);
  sub_19EE24790(&qword_1E9470C70, type metadata accessor for AMSMediaArtworkColorKind);
  return sub_19F1DD0DC();
}

uint64_t sub_19EF4828C()
{
  return sub_19F1DB7DC();
}

uint64_t sub_19EF482D8()
{
  return sub_19F1DB7CC();
}

uint64_t sub_19EF48330()
{
  return sub_19EF4844C();
}

uint64_t sub_19EF48348()
{
  return sub_19EE24790(&qword_1E946FC60, type metadata accessor for CFString);
}

uint64_t sub_19EF48390()
{
  return sub_19F1DB7DC();
}

uint64_t sub_19EF483DC()
{
  return sub_19F1DB7CC();
}

uint64_t sub_19EF48434()
{
  return sub_19EF4844C();
}

uint64_t sub_19EF4844C()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF484B0()
{
  return sub_19EE24790(&qword_1E946FC58, type metadata accessor for CFString);
}

uint64_t sub_19EF484F8()
{
  return sub_19EE24790(&qword_1E9470750, type metadata accessor for AMSMediaArtworkFormat);
}

uint64_t sub_19EF48540()
{
  return sub_19EE24790(&qword_1E9470758, type metadata accessor for AMSMediaArtworkFormat);
}

uint64_t sub_19EF48588(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_19F1DBD7C();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_19EF485CC()
{
  sub_19F1DBD7C();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EF48620()
{
  sub_19F1DBD7C();
  sub_19F1DD72C();
  sub_19F1DBE9C();
  uint64_t v0 = sub_19F1DD78C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19EF48694()
{
  return MEMORY[0x1F4185F80](*v0);
}

uint64_t sub_19EF4869C()
{
  return sub_19F1DD75C();
}

void sub_19EF486C8()
{
}

uint64_t sub_19EF486D4()
{
  uint64_t v0 = sub_19F1DBD7C();
  uint64_t v2 = v1;
  if (v0 == sub_19F1DBD7C() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_19EF48760()
{
  return sub_19EE24790(&qword_1E9470760, type metadata accessor for AMSMediaArtworkFormat);
}

uint64_t sub_19EF487A8()
{
  return sub_19EE24790(&qword_1E9470768, type metadata accessor for AMSMediaArtworkCropStyle);
}

uint64_t sub_19EF487F0()
{
  return sub_19EE24790(&qword_1E9470770, type metadata accessor for AMSMediaArtworkCropStyle);
}

uint64_t sub_19EF48838()
{
  return sub_19EE24790(&qword_1E9470778, type metadata accessor for AMSMediaArtworkCropStyle);
}

uint64_t sub_19EF48880()
{
  return sub_19EE24790(&qword_1E9470780, type metadata accessor for SignpostComponent);
}

uint64_t sub_19EF488C8()
{
  return sub_19EE24790(&qword_1E9470788, type metadata accessor for SignpostComponent);
}

uint64_t sub_19EF48910()
{
  return sub_19EE24790((unint64_t *)&unk_1E9470790, type metadata accessor for SignpostComponent);
}

void sub_19EF48958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_19F1DB97C();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    (*(void (**)(char *, void, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x1E4F38918], v5, v7);
    sub_19F1DB9BC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  if (a3)
  {
    uint64_t v11 = &type metadata for Bag;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v11);
  }
}

uint64_t sub_19EF48A74@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  a2[4] = &type metadata for Bag;
  *a2 = &type metadata for Bag;
  a2[1] = v2;
  return swift_unknownObjectRetain();
}

uint64_t sub_19EF48AA0(uint64_t *a1, void (*a2)(void *__return_ptr, uint64_t *))
{
  uint64_t v4 = *a1;
  a2(v3, &v4);
  sub_19F1AD46C((uint64_t)v3);
  return sub_19EEABFA4((uint64_t)v3);
}

uint64_t sub_19EF48B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = &type metadata for SyncTaskScheduler;
  uint64_t v12 = &protocol witness table for SyncTaskScheduler;
  v8[0] = MEMORY[0x1E4FBC860];
  v9[8] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946F090);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(void *)(v4 + 16) = v5;
  sub_19EEBDC4C((uint64_t)v8, v4 + 24, &qword_1EB392CB0);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v4;
  v8[0] = sub_19EF4C314;
  v8[1] = v6;
  v8[2] = sub_19EF4C320;
  v8[3] = v4;
  sub_19EEC4154((uint64_t)v10, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF52E9C((uint64_t)v8);
  sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1EB3909D0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v4;
}

uint64_t sub_19EF48C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_19EF49620(a1, a2, a3, a4);
  if (!v5)
  {
    *a5 = result;
    a5[1] = v8;
    return sub_19EE47F40(result);
  }
  return result;
}

void (*sub_19EF48CD4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>))(void **__return_ptr, uint64_t)
{
  void (*result)(void **__return_ptr, uint64_t);

  uint64_t result = sub_19EE1B7AC(a1, a2, a3, a4, &qword_1EB392278, 0x1E4F4DDC8, (void (*)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))sub_19EF4C674);
  if (!v5)
  {
    *a5 = result;
    return result;
  }
  return result;
}

void (*sub_19EF48D30@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>))(void **__return_ptr, uint64_t)
{
  void (*result)(void **__return_ptr, uint64_t);

  uint64_t result = sub_19EE1B7AC(a1, a2, a3, a4, qword_1EB392F30, 0x1E4F179C8, (void (*)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))sub_19EF4C674);
  if (!v5)
  {
    *a5 = result;
    return result;
  }
  return result;
}

uint64_t *sub_19EF48D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, void (*a8)(void, void, void)@<X7>, uint64_t **a9@<X8>)
{
  uint64_t result = sub_19EF49EC4(a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v9)
  {
    *a9 = result;
    return (uint64_t *)swift_retain();
  }
  return result;
}

void (*sub_19EF48DBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>))(void **__return_ptr, uint64_t)
{
  void (*result)(void **__return_ptr, uint64_t);

  uint64_t result = sub_19EE1B7AC(a1, a2, a3, a4, (unint64_t *)&qword_1E946DC70, 0x1E4F290F0, (void (*)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))sub_19EF4C674);
  if (!v5)
  {
    *a5 = result;
    return result;
  }
  return result;
}

uint64_t sub_19EF48E18@<X0>(uint64_t (*a1)(void)@<X4>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    return swift_retain();
  }
  return result;
}

uint64_t sub_19EF48E4C@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t)@<X8>)
{
  return sub_19EF34748(a1, *(void (**)(char *, char *, uint64_t))(v2 + 16), *(const char **)(v2 + 24), *(void *)(v2 + 32), a2);
}

unint64_t sub_19EF48E6C()
{
  unint64_t result = qword_1E94707B8;
  if (!qword_1E94707B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94707B8);
  }
  return result;
}

uint64_t sub_19EF48EC0@<X0>(uint64_t *a1@<X8>)
{
  return sub_19EF48E18((uint64_t (*)(void))sub_19EF48EF4, a1);
}

void *sub_19EF48EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v59)(void **__return_ptr, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v5 = sub_19F1DB8AC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v52 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_19F1DB85C();
  uint64_t v8 = *(void *)(v58 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v58);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v46 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = *(void **)a1;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    uint64_t v48 = v5;
    uint64_t v53 = v13;
    uint64_t v59 = (void (*)(void **__return_ptr, uint64_t))v16;
    uint64_t v17 = qword_1E946E608;
    uint64_t v57 = *(void *)(a1 + 8);
    swift_retain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v47 = v6;
    uint64_t v18 = sub_19F1DB89C();
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1E9498AC0);
    sub_19F1DB87C();
    swift_unknownObjectRetain();
    sub_19F1DB81C();
    uint64_t v49 = v19;
    uint64_t v20 = sub_19F1DB87C();
    int v21 = sub_19F1DC98C();
    char v22 = sub_19F1DCA6C();
    uint64_t v51 = v12;
    uint64_t v54 = v8;
    if (v22)
    {
      LODWORD(v46) = v21;
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      unint64_t v50 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v24 = v58;
      v23(v12, v15, v58);
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      os_signpost_id_t v62 = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      unint64_t v61 = sub_19EEAD23C(0xD000000000000017, 0x800000019F269080, &v62);
      sub_19F1DCB3C();
      os_signpost_id_t v27 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v20, (os_signpost_type_t)v46, v27, "MakeLazyDependency", "object=%s", v25, 0xCu);
      swift_arrayDestroy();
      uint64_t v28 = v26;
      uint64_t v12 = v51;
      MEMORY[0x19F3C9470](v28, -1, -1);
      MEMORY[0x19F3C9470](v25, -1, -1);

      unint64_t v29 = v50;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v24);
    }
    else
    {

      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      unint64_t v29 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v24 = v58;
    }
    uint64_t v58 = (uint64_t)v15;
    uint64_t v46 = (void (*)(char *, uint64_t, uint64_t))v23;
    v23(v12, v15, v24);
    sub_19F1DB8EC();
    swift_allocObject();
    uint64_t v30 = sub_19F1DB8DC();
    uint64_t v31 = v57;
    swift_retain();
    uint64_t v32 = v60;
    uint64_t v16 = sub_19EF26DBC(v59, v31, v55, v56);
    uint64_t v60 = v32;
    sub_19EEAE6F8();
    sub_19EEAE6F8();
    uint64_t v33 = sub_19F1DB87C();
    uint64_t v34 = v53;
    sub_19F1DB8CC();
    LODWORD(v56) = sub_19F1DC97C();
    uint64_t v35 = v24;
    if (sub_19F1DCA6C())
    {
      unint64_t v50 = v29;
      swift_retain();
      uint64_t v36 = v52;
      sub_19F1DB8FC();
      uint64_t v55 = v30;
      swift_release();
      uint64_t v38 = v47;
      uint64_t v37 = v48;
      if ((*(unsigned int (**)(char *, uint64_t))(v47 + 88))(v36, v48) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v39 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
        uint64_t v39 = "";
      }
      os_signpost_type_t v41 = v51;
      uint64_t v42 = v53;
      v46(v51, v53, v35);
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      os_signpost_id_t v44 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v33, (os_signpost_type_t)v56, v44, "MakeLazyDependency", v39, v43, 2u);
      MEMORY[0x19F3C9470](v43, -1, -1);

      uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      v40(v42, v35);
      v40((uint64_t)v41, v35);
    }
    else
    {

      uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      v40(v34, v24);
    }
    v40(v58, v35);
    sub_19EEAE6F8();
    swift_release();
    *(void *)a1 = v16;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
  }
  return v16;
}

void (*sub_19EF494F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>))(void **__return_ptr, uint64_t)
{
  void (*result)(void **__return_ptr, uint64_t);

  unint64_t result = sub_19EF3DEB8(a1, v2[2], v2[3], v2[4]);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_19EF49524@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t)@<X8>)
{
  return sub_19EF3D590(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF49544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF495AC(a1, sub_19EF3BEA4, a2);
}

uint64_t sub_19EF49570(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_19EF49580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF495AC(a1, sub_19EF47218, a2);
}

uint64_t sub_19EF495AC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void, void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = a2(a1, v3[2], v3[3], v3[4]);
  if (!v4)
  {
    *(void *)a3 = result;
    *(void *)(a3 + 8) = v7;
    *(unsigned char *)(a3 + 16) = v8;
  }
  return result;
}

uint64_t sub_19EF495EC@<X0>(uint64_t *a1@<X8>)
{
  return sub_19EF48E18((uint64_t (*)(void))sub_19EF4A7E0, a1);
}

uint64_t sub_19EF49620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v20)(void **__return_ptr, uint64_t);
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  unsigned char *v31;
  uint64_t v32;
  NSObject *v33;
  int v34;
  char v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  os_signpost_id_t v39;
  uint64_t v40;
  void (*v41)(unsigned char *, unsigned char *, uint64_t);
  uint64_t v42;
  void (*v43)(void **__return_ptr, uint64_t);
  uint64_t v44;
  void *v45;
  uint64_t v46;
  NSObject *v47;
  unsigned char *v48;
  int v49;
  unsigned char *v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  void (*v54)(uint64_t, uint64_t);
  unsigned char *v55;
  uint64_t v56;
  uint8_t *v57;
  os_signpost_id_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned char *v61;
  uint64_t v62;
  unsigned char v63[12];
  int v64;
  uint64_t v65;
  unsigned char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(unsigned char *, unsigned char *, uint64_t);
  unsigned char *v71;
  uint64_t v72;
  unsigned char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void (*v78)(void **__return_ptr, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned char *v82;
  uint64_t v83;
  uint64_t v84;

  uint64_t v76 = a3;
  uint64_t v77 = (void *)a4;
  uint64_t v6 = sub_19F1DB97C();
  uint64_t v75 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v8 = &v63[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_19F1DB8AC();
  uint64_t v72 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v71 = &v63[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_19F1DB85C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v63[-v14];
  MEMORY[0x1F4188790](v16);
  uint64_t v82 = &v63[-v18];
  uint64_t v20 = *(void (**)(void **__return_ptr, uint64_t))a1;
  uint64_t v19 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 16)) {
    return *(void *)a1;
  }
  os_signpost_id_t v65 = v9;
  int v73 = v17;
  uint64_t v78 = v20;
  uint64_t v67 = v6;
  uint64_t v81 = v4;
  char v22 = v19;
  type metadata accessor for BaseObjectGraph();
  uint64_t v79 = v22;
  swift_retain();
  uint64_t v23 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v84 = v23;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_19EEAD6E0(v24);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  os_log_t v66 = v8;
  uint64_t v69 = v25;
  if (!v25) {
    goto LABEL_13;
  }
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946E6A0);
  os_signpost_id_t v27 = swift_conformsToProtocol2();
  if (v27) {
    uint64_t v28 = v27;
  }
  else {
    uint64_t v28 = 0;
  }
  if (!v27) {
    uint64_t v26 = 0;
  }
  if (v26)
  {
    unint64_t v29 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    swift_retain();
    v29(v26, v28);
    uint64_t v30 = sub_19F18D8AC();
    swift_release();
    swift_retain();
    sub_19F1DB9AC();
    uint64_t v68 = v30;
    swift_release();
  }
  else
  {
LABEL_13:
    uint64_t v68 = 0;
  }
  uint64_t v31 = v82;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_19F1DB89C();
  __swift_project_value_buffer(v32, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v33 = sub_19F1DB87C();
  uint64_t v34 = sub_19F1DC98C();
  uint64_t v35 = sub_19F1DCA6C();
  uint64_t v80 = v11;
  uint64_t v74 = v12;
  if (v35)
  {
    uint64_t v70 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16);
    v70(v15, v31, v11);
    uint64_t v36 = swift_slowAlloc();
    uint64_t v64 = v34;
    uint64_t v37 = (uint8_t *)v36;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v84 = v38;
    *(_DWORD *)uint64_t v37 = 136315138;
    uint64_t v83 = sub_19EEAD23C(0xD00000000000001ELL, 0x800000019F269410, &v84);
    uint64_t v31 = v82;
    sub_19F1DCB3C();
    uint64_t v39 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v33, (os_signpost_type_t)v64, v39, "MakeLazyDependency", "object=%s", v37, 0xCu);
    swift_arrayDestroy();
    uint64_t v40 = v38;
    uint64_t v11 = v80;
    MEMORY[0x19F3C9470](v40, -1, -1);
    MEMORY[0x19F3C9470](v37, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v15, v11);
    os_signpost_type_t v41 = v70;
  }
  else
  {

    os_signpost_type_t v41 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16);
  }
  uint64_t v70 = v41;
  v41(v15, v31, v11);
  sub_19F1DB8EC();
  swift_allocObject();
  sub_19F1DB8DC();
  uint64_t v42 = v79;
  swift_retain();
  uint64_t v43 = v78;
  os_signpost_id_t v44 = v81;
  uint64_t v45 = sub_19EF26AFC(v78, v42, v76, (uint64_t)v77);
  uint64_t v76 = v46;
  uint64_t v77 = v45;
  uint64_t v81 = v44;
  sub_19EF4BF74(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_19EF4BF74((uint64_t)v43, v42, 0);
  uint64_t v47 = sub_19F1DB87C();
  uint64_t v48 = v73;
  sub_19F1DB8CC();
  uint64_t v49 = sub_19F1DC97C();
  if (sub_19F1DCA6C())
  {
    uint64_t v64 = v49;
    swift_retain();
    unint64_t v50 = v71;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v51 = v72;
    uint64_t v52 = v65;
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v72 + 88))(v50, v65) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v53 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v50, v52);
      uint64_t v53 = "";
    }
    uint64_t v55 = v73;
    uint64_t v56 = v80;
    v70(v15, v73, v80);
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v57 = 0;
    uint64_t v58 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v47, (os_signpost_type_t)v64, v58, "MakeLazyDependency", v53, v57, 2u);
    MEMORY[0x19F3C9470](v57, -1, -1);

    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v54((uint64_t)v55, v56);
    v54((uint64_t)v15, v56);
    if (!v68) {
      goto LABEL_27;
    }
  }
  else
  {

    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v54((uint64_t)v48, v11);
    if (!v68) {
      goto LABEL_27;
    }
  }
  uint64_t v59 = v75;
  unint64_t v61 = v66;
  uint64_t v60 = v67;
  (*(void (**)(unsigned char *, void, uint64_t))(v75 + 104))(v66, *MEMORY[0x1E4F38918], v67);
  swift_retain();
  sub_19F1DB9BC();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v61, v60);
LABEL_27:
  if (v69)
  {
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946E6A0);
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&v84);
    swift_release();
    swift_release();
    sub_19EF4BF74((uint64_t)v78, v79, 0);
    swift_release();
    swift_release();
    v54((uint64_t)v82, v80);
  }
  else
  {
    v54((uint64_t)v82, v80);
    swift_release();
    sub_19EF4BF74((uint64_t)v78, v79, 0);
    swift_release();
  }
  os_signpost_id_t v62 = v76;
  uint64_t result = (uint64_t)v77;
  *(void *)a1 = v77;
  *(void *)(a1 + 8) = v62;
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

uint64_t *sub_19EF49EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, unint64_t a7, void (*a8)(void, void, void))
{
  void (*v24)(void **__return_ptr, uint64_t);
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  void (*v34)(void (*)(void **__return_ptr, uint64_t), uint64_t, void);
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_signpost_type_t v40;
  char v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  os_signpost_id_t v45;
  uint64_t v46;
  uint8_t *v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(void **__return_ptr, uint64_t);
  NSObject *v53;
  char *v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint8_t *v66;
  os_signpost_id_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(void, void, void);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(void **__return_ptr, uint64_t);
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  uint64_t v80 = a6;
  uint64_t v81 = a7;
  uint64_t v89 = a3;
  uint64_t v90 = a4;
  uint64_t v88 = a2;
  uint64_t v11 = sub_19F1DB97C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_19F1DB8AC();
  uint64_t v83 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v82 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_19F1DB85C();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  MEMORY[0x1F4188790](v19);
  uint64_t v94 = (char *)&v73 - v20;
  MEMORY[0x1F4188790](v21);
  char v95 = (char *)&v73 - v23;
  uint64_t v24 = *(void (**)(void **__return_ptr, uint64_t))a1;
  if (*(unsigned char *)(a1 + 16)) {
    return *(uint64_t **)a1;
  }
  int v73 = v15;
  uint64_t v84 = v22;
  uint64_t v93 = v24;
  uint64_t v75 = v12;
  uint64_t v76 = v11;
  uint64_t v26 = *(void *)(a1 + 8);
  type metadata accessor for BaseObjectGraph();
  uint64_t v92 = v26;
  swift_retain();
  os_signpost_id_t v27 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  char v98 = v27;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v28 = swift_bridgeObjectRetain();
  unint64_t v29 = sub_19EEAD6E0(v28);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  os_log_t v87 = a8;
  uint64_t v78 = v29;
  if (v29)
  {
    uint64_t v30 = a5(0);
    uint64_t v31 = swift_conformsToProtocol2();
    if (v31) {
      uint64_t v32 = v31;
    }
    else {
      uint64_t v32 = 0;
    }
    if (!v31) {
      uint64_t v30 = 0;
    }
    if (v30)
    {
      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      swift_retain();
      v33(v30, v32);
      a8 = v87;
      uint64_t v30 = sub_19F18D8AC();
      swift_release();
      swift_retain();
      sub_19F1DB9AC();
      swift_release();
    }
  }
  else
  {
    uint64_t v30 = 0;
  }
  uint64_t v34 = (void (*)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))a8;
  uint64_t v86 = v17;
  uint64_t v35 = v94;
  uint64_t v36 = v95;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v91 = v30;
  uint64_t v37 = sub_19F1DB89C();
  uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v77 = v38;
  uint64_t v39 = sub_19F1DB87C();
  uint64_t v40 = sub_19F1DC98C();
  os_signpost_type_t v41 = sub_19F1DCA6C();
  uint64_t v88 = a1;
  uint64_t v85 = v18;
  uint64_t v74 = v14;
  if (v41)
  {
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
    uint64_t v42 = v86;
    v79(v35, v36, v86);
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    os_signpost_id_t v44 = swift_slowAlloc();
    char v98 = v44;
    *(_DWORD *)uint64_t v43 = 136315138;
    char v97 = sub_19EEAD23C(v80, v81, &v98);
    uint64_t v34 = (void (*)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))v87;
    sub_19F1DCB3C();
    uint64_t v45 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v39, v40, v45, "MakeLazyDependency", "object=%s", v43, 0xCu);
    swift_arrayDestroy();
    uint64_t v46 = v96;
    MEMORY[0x19F3C9470](v44, -1, -1);
    uint64_t v47 = v43;
    uint64_t v35 = v94;
    uint64_t v48 = v95;
    MEMORY[0x19F3C9470](v47, -1, -1);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v35, v42);
    uint64_t v49 = v79;
  }
  else
  {

    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
    uint64_t v42 = v86;
    uint64_t v48 = v36;
    uint64_t v46 = v96;
  }
  uint64_t v79 = v49;
  v49(v35, v48, v42);
  sub_19F1DB8EC();
  swift_allocObject();
  unint64_t v50 = sub_19F1DB8DC();
  uint64_t v51 = v92;
  swift_retain();
  uint64_t v52 = v93;
  uint64_t v25 = sub_19EF26DBC(v93, v51, v89, v90);
  v34(*(void (**)(void **__return_ptr, uint64_t))v88, *(void *)(v88 + 8), *(unsigned __int8 *)(v88 + 16));
  v34(v52, v51, 0);
  uint64_t v53 = sub_19F1DB87C();
  uint64_t v54 = v84;
  sub_19F1DB8CC();
  LODWORD(v90) = sub_19F1DC97C();
  uint64_t v55 = sub_19F1DCA6C();
  uint64_t v96 = v46;
  uint64_t v94 = (char *)v50;
  if (v55)
  {
    swift_retain();
    uint64_t v56 = v82;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v57 = v83;
    uint64_t v58 = v73;
    if ((*(unsigned int (**)(char *, uint64_t))(v83 + 88))(v56, v73) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v59 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
      uint64_t v59 = "";
    }
    os_signpost_id_t v62 = v35;
    uint64_t v63 = v35;
    uint64_t v64 = v84;
    os_signpost_id_t v65 = v86;
    v79(v62, v84, v86);
    os_log_t v66 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_t v66 = 0;
    uint64_t v67 = sub_19F1DB83C();
    unint64_t v61 = v65;
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v53, (os_signpost_type_t)v90, v67, "MakeLazyDependency", v59, v66, 2u);
    MEMORY[0x19F3C9470](v66, -1, -1);

    uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v60((uint64_t)v64, v65);
    v60((uint64_t)v63, v65);
  }
  else
  {

    uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v60((uint64_t)v54, v42);
    unint64_t v61 = v42;
  }
  uint64_t v68 = v88;
  if (v91)
  {
    uint64_t v69 = v75;
    uint64_t v70 = v74;
    long long v71 = v76;
    (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, *MEMORY[0x1E4F38918], v76);
    swift_retain();
    sub_19F1DB9BC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
  }
  if (v78)
  {
    char v98 = *v25;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&v98);
    swift_release();
    swift_release();
    v87(v93, v92, 0);
    swift_release();
    swift_release();
    v60((uint64_t)v95, v61);
  }
  else
  {
    v60((uint64_t)v95, v61);
    swift_release();
    v87(v93, v92, 0);
    swift_release();
  }
  *(void *)uint64_t v68 = v25;
  *(void *)(v68 + 8) = 0;
  *(unsigned char *)(v68 + 16) = 1;
  return v25;
}

uint64_t *sub_19EF4A7E0(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v79 = a3;
  uint64_t v80 = a4;
  uint64_t v5 = sub_19F1DB97C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v78 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DB8AC();
  uint64_t v76 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v75 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DB85C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v67 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v67 - v17;
  uint64_t v19 = *a1;
  if ((_BYTE)a1[2]) {
    return *a1;
  }
  uint64_t v68 = v8;
  uint64_t v74 = v15;
  uint64_t v77 = v16;
  uint64_t v83 = v19;
  uint64_t v70 = v5;
  uint64_t v81 = a1;
  uint64_t v21 = (uint64_t)a1[1];
  type metadata accessor for BaseObjectGraph();
  uint64_t v82 = v21;
  swift_retain();
  uint64_t v22 = static BaseObjectGraph.current.getter();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v88 = v22;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_19EEAD6E0(v23);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  uint64_t v84 = v18;
  if (v24
    && ((v25 = type metadata accessor for PageRenderMetricsPresenter(), (uint64_t v26 = swift_conformsToProtocol2()) != 0)
      ? (uint64_t v27 = v26)
      : (uint64_t v27 = 0),
        v26 ? (uint64_t v28 = v25) : (uint64_t v28 = 0),
        v28))
  {
    unint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    swift_retain();
    v29(v28, v27);
    uint64_t v18 = v84;
    uint64_t v30 = sub_19F18D8AC();
    swift_release();
    swift_retain();
    sub_19F1DB9AC();
    uint64_t v71 = v30;
    swift_release();
  }
  else
  {
    uint64_t v71 = 0;
  }
  uint64_t v73 = v24;
  uint64_t v69 = v6;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_19F1DB89C();
  __swift_project_value_buffer(v31, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  sub_19F1DB81C();
  uint64_t v32 = sub_19F1DB87C();
  os_signpost_type_t v33 = sub_19F1DC98C();
  char v34 = sub_19F1DCA6C();
  uint64_t v85 = v11;
  if (v34)
  {
    uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v35 = v74;
    v67(v74, v18, v10);
    uint64_t v36 = swift_slowAlloc();
    uint64_t v72 = v10;
    uint64_t v37 = (uint8_t *)v36;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v88 = v38;
    *(_DWORD *)uint64_t v37 = 136315138;
    uint64_t v87 = sub_19EEAD23C(0xD00000000000001ALL, 0x800000019F269110, &v88);
    uint64_t v18 = v84;
    sub_19F1DCB3C();
    os_signpost_id_t v39 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v32, v33, v39, "MakeLazyDependency", "object=%s", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19F3C9470](v38, -1, -1);
    uint64_t v40 = v37;
    uint64_t v10 = v72;
    MEMORY[0x19F3C9470](v40, -1, -1);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v35, v10);
    os_signpost_type_t v41 = v67;
  }
  else
  {

    os_signpost_type_t v41 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v35 = v74;
  }
  uint64_t v42 = (void (*)(char *, uint64_t, uint64_t))v41;
  v41(v35, v18, v10);
  sub_19F1DB8EC();
  swift_allocObject();
  uint64_t v43 = sub_19F1DB8DC();
  uint64_t v44 = v82;
  swift_retain();
  uint64_t v45 = v86;
  uint64_t v20 = sub_19EF26DBC((void (*)(void **__return_ptr, uint64_t))v83, v44, v79, v80);
  uint64_t v86 = v45;
  sub_19EEAE6F8();
  uint64_t v46 = v43;
  sub_19EEAE6F8();
  uint64_t v47 = sub_19F1DB87C();
  uint64_t v48 = v77;
  sub_19F1DB8CC();
  LODWORD(v80) = sub_19F1DC97C();
  char v49 = sub_19F1DCA6C();
  uint64_t v72 = v46;
  if (v49)
  {
    swift_retain();
    unint64_t v50 = v75;
    sub_19F1DB8FC();
    swift_release();
    uint64_t v51 = v76;
    uint64_t v52 = v68;
    if ((*(unsigned int (**)(char *, uint64_t))(v76 + 88))(v50, v68) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v53 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
      uint64_t v53 = "";
    }
    uint64_t v56 = v42;
    uint64_t v57 = v74;
    uint64_t v58 = v77;
    v56(v74, v77, v10);
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v59 = 0;
    os_signpost_id_t v60 = sub_19F1DB83C();
    uint64_t v55 = v10;
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v47, (os_signpost_type_t)v80, v60, "MakeLazyDependency", v53, v59, 2u);
    MEMORY[0x19F3C9470](v59, -1, -1);

    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v54(v58, v10);
    v54((uint64_t)v57, v10);
    uint64_t v18 = v84;
    if (!v71) {
      goto LABEL_28;
    }
  }
  else
  {

    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v54(v48, v10);
    uint64_t v55 = v10;
    if (!v71) {
      goto LABEL_28;
    }
  }
  uint64_t v62 = v69;
  uint64_t v61 = v70;
  uint64_t v63 = v78;
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v78, *MEMORY[0x1E4F38918], v70);
  swift_retain();
  sub_19F1DB9BC();
  swift_release();
  uint64_t v64 = v63;
  uint64_t v18 = v84;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v61);
LABEL_28:
  if (v73)
  {
    uint64_t v88 = *v20;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&v88);
    swift_release();
    swift_release();
    sub_19EEAE6F8();
    swift_release();
    swift_release();
    v54((uint64_t)v18, v55);
  }
  else
  {
    v54((uint64_t)v18, v55);
    swift_release();
    sub_19EEAE6F8();
    swift_release();
  }
  os_signpost_id_t v65 = v81;
  *uint64_t v81 = v20;
  v65[1] = 0;
  *((unsigned char *)v65 + 16) = 1;
  return v20;
}

uint64_t *sub_19EF4B0AC@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_19EF4B104(a1, (uint64_t (*)(void))type metadata accessor for PageRenderMetricsPresenter, 0xD00000000000001ALL, 0x800000019F269110, (void (*)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))sub_19EF4C654, a2);
}

uint64_t *sub_19EF4B104@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void (*a5)(void (*)(void **__return_ptr, uint64_t), uint64_t, void)@<X4>, uint64_t **a6@<X8>)
{
  uint64_t result = sub_19EF468DC(a1, *(void *)(v6 + 16), *(const char **)(v6 + 24), *(void *)(v6 + 32), a2, a3, a4, a5);
  if (!v7) {
    *a6 = result;
  }
  return result;
}

uint64_t sub_19EF4B148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF3A24C(a1, *(void (**)(char *, char *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation, &qword_1E9470878, 0xD000000000000019, 0x800000019F269130, a2, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
}

uint64_t sub_19EF4B1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF44BE0(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation, &qword_1E9470880, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation, 0xD000000000000019, a2, 0x800000019F269130);
}

void sub_19EF4B20C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EF374CC(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4B22C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

void sub_19EF4B23C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EF41340(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_19EF4B25C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF39A88(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1E94708C0, &qword_1E94708A0, (uint64_t (*)(uint64_t *, uint64_t))sub_19EEBB420, 0xD000000000000010, a2, 0x800000019F269170);
}

uint64_t sub_19EF4B2C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF43A70(a1, *(unsigned char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1E94708C8, &qword_1E94708A0, (void (*)(uint64_t *, uint64_t))sub_19EEBB420, 0xD000000000000010, a2, 0x800000019F269170);
}

unint64_t sub_19EF4B32C()
{
  unint64_t result = qword_1E94708E0;
  if (!qword_1E94708E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E94708D8);
    sub_19EEA5E10(&qword_1E94708E8, (uint64_t *)&unk_1E94708F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94708E0);
  }
  return result;
}

uint64_t sub_19EF4B3C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JetPackAsset(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19EF4B420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF3A24C(a1, *(void (**)(char *, char *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), type metadata accessor for JetPackAsset, &qword_1E9470918, 0x416B63615074654ALL, 0xEC00000074657373, a2, type metadata accessor for JetPackAsset);
}

uint64_t sub_19EF4B484(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_19EF4B4EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_19EF4B554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF44BE0(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), type metadata accessor for JetPackAsset, &qword_1E9470920, type metadata accessor for JetPackAsset, 0x416B63615074654ALL, a2, 0xEC00000074657373);
}

double sub_19EF4B5BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF3B53C(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4B5DC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_19EF45F50(a1, *(char **)(v2 + 16), *(NSObject **)(v2 + 24), *(void *)(v2 + 32), a2);
}

double sub_19EF4B5FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF3ABD4(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4B61C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_19EF455C4(a1, *(char **)(v2 + 16), *(NSObject **)(v2 + 24), *(void *)(v2 + 32), a2);
}

void (*sub_19EF4B63C@<X0>(void *a1@<X0>, void *a2@<X8>))(void **__return_ptr, uint64_t)
{
  return sub_19EF48DBC(a1, v2[2], v2[3], v2[4], a2);
}

id sub_19EF4B65C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19EF4B698(a1, (unint64_t *)&qword_1E946DC70, 0x1E4F290F0, (void (*)(void *, uint64_t, void))sub_19EF4C674, a2);
}

id sub_19EF4B698@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, void (*a4)(void *, uint64_t, void)@<X3>, void *a5@<X8>)
{
  id result = sub_19EF4428C(a1, *(void *)(v5 + 16), *(const char **)(v5 + 24), *(void *)(v5 + 32), a2, a3, a4);
  if (!v6) {
    *a5 = result;
  }
  return result;
}

uint64_t sub_19EF4B6D8@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t)@<X8>)
{
  return sub_19EF362A8(a1, *(void (**)(char *, char *, uint64_t))(v2 + 16), *(const char **)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4B6F8@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t)@<X8>)
{
  return sub_19EF400F8(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t *sub_19EF4B718@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_19EF48D8C(a1, v2[2], v2[3], v2[4], (uint64_t (*)(void))type metadata accessor for JetPackAssetSession, 0xD000000000000013, 0x800000019F2692B0, (void (*)(void, void, void))sub_19EF4C654, a2);
}

uint64_t *sub_19EF4B778@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_19EF4B104(a1, (uint64_t (*)(void))type metadata accessor for JetPackAssetSession, 0xD000000000000013, 0x800000019F2692B0, (void (*)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))sub_19EF4C654, a2);
}

double sub_19EF4B7D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_19EF390C4(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2).n128_u64[0];
  return result;
}

uint64_t sub_19EF4B7F0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_19EF4301C(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4B810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF39A88(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1E94709B8, &qword_1E94709B0, (uint64_t (*)(uint64_t *, uint64_t))sub_19EEBB420, 0xD000000000000011, a2, 0x800000019F2692D0);
}

uint64_t sub_19EF4B878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF43A70(a1, *(unsigned char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1E94709C0, &qword_1E94709B0, (void (*)(uint64_t *, uint64_t))sub_19EEBB420, 0xD000000000000011, a2, 0x800000019F2692D0);
}

uint64_t sub_19EF4B8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF39A88(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1E94709D8, &qword_1E946EFB0, (uint64_t (*)(uint64_t *, uint64_t))sub_19EEBB420, 0xD000000000000021, a2, 0x800000019F2692F0);
}

uint64_t sub_19EF4B948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF43A70(a1, *(unsigned char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (uint64_t *)&unk_1E94709E0, &qword_1E946EFB0, (void (*)(uint64_t *, uint64_t))sub_19EEBB420, 0xD000000000000021, a2, 0x800000019F2692F0);
}

uint64_t sub_19EF4B9B0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_19EF38698(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4B9D0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19EF4BA2C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_19EF42594(a1, *(const char **)(v2 + 24), *(void *)(v2 + 32), a2);
}

void sub_19EF4BA4C(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_release();
  }
}

id sub_19EF4BA5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19EF4B698(a1, &qword_1EB391BF0, 0x1E4F4DE88, (void (*)(void *, uint64_t, void))sub_19EF4C674, a2);
}

void (*sub_19EF4BA98@<X0>(void *a1@<X0>, void *a2@<X8>))(void **__return_ptr, uint64_t)
{
  return sub_19EF48D30(a1, v2[2], v2[3], v2[4], a2);
}

id sub_19EF4BAB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19EF4B698(a1, qword_1EB392F30, 0x1E4F179C8, (void (*)(void *, uint64_t, void))sub_19EF4C674, a2);
}

uint64_t sub_19EF4BAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF39A88(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1E9470A68, (uint64_t *)&unk_1EB392340, (uint64_t (*)(uint64_t *, uint64_t))sub_19EEBB420, 0x50746E756F636341, a2, 0xEF72656469766F72);
}

uint64_t sub_19EF4BB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF43A70(a1, *(unsigned char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1E9470A70, (uint64_t *)&unk_1EB392340, (void (*)(uint64_t *, uint64_t))sub_19EEBB420, 0x50746E756F636341, a2, 0xEF72656469766F72);
}

uint64_t *sub_19EF4BBD4@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_19EF48D8C(a1, v2[2], v2[3], v2[4], (uint64_t (*)(void))type metadata accessor for PageMetricsPresenter, 0xD000000000000014, 0x800000019F269340, (void (*)(void, void, void))sub_19EF4C654, a2);
}

uint64_t *sub_19EF4BC34@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_19EF4B104(a1, (uint64_t (*)(void))type metadata accessor for PageMetricsPresenter, 0xD000000000000014, 0x800000019F269340, (void (*)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))sub_19EF4C654, a2);
}

uint64_t sub_19EF4BC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF37D68(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_19EF4BCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF41C24(a1, *(NSObject **)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t *sub_19EF4BCCC@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_19EF48D8C(a1, v2[2], v2[3], v2[4], MEMORY[0x1E4F38928], 0x697669746341574ELL, 0xEA00000000007974, (void (*)(void, void, void))sub_19EEAE6F8, a2);
}

uint64_t *sub_19EF4BD2C@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_19EF4B104(a1, MEMORY[0x1E4F38928], 0x697669746341574ELL, 0xEA00000000007974, (void (*)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))sub_19EF4C654, a2);
}

uint64_t sub_19EF4BD84@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19EF36BA4(a1, *(void (**)(char *, char *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4BDA4@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t)@<X8>)
{
  return sub_19EF40A14(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4BDC4(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if (a3) {
    return a4();
  }
  else {
    return swift_release();
  }
}

uint64_t *sub_19EF4BDD8@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_19EF48D8C(a1, v2[2], v2[3], v2[4], (uint64_t (*)(void))type metadata accessor for Unstable.Accounts, 0x73746E756F636341, 0xE800000000000000, (void (*)(void, void, void))sub_19EF4C654, a2);
}

uint64_t *sub_19EF4BE34@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_19EF4B104(a1, (uint64_t (*)(void))type metadata accessor for Unstable.Accounts, 0x73746E756F636341, 0xE800000000000000, (void (*)(void (*)(void **__return_ptr, uint64_t), uint64_t, void))sub_19EF4C654, a2);
}

uint64_t sub_19EF4BE88(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19EF4BED0@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t)@<X8>)
{
  return sub_19EF35960(a1, *(void (**)(uint64_t, unsigned char *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4BEF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19EF3F780(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4BF10(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return sub_19EF4BE88(a1, a2);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_19EF4BF20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19EF48C9C(a1, v2[2], v2[3], v2[4], a2);
}

void (*sub_19EF4BF40@<X0>(uint64_t a1@<X0>, void *a2@<X8>))(void **__return_ptr, uint64_t)
{
  void (*result)(void **__return_ptr, uint64_t);
  uint64_t v6;

  uint64_t result = sub_19EF3E500(a1, v2[2], v2[3], v2[4]);
  if (!v3)
  {
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_19EF4BF74(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return sub_19EE83660(a1);
  }
  else {
    return swift_release();
  }
}

void (*sub_19EF4BF84@<X0>(void *a1@<X0>, void *a2@<X8>))(void **__return_ptr, uint64_t)
{
  return sub_19EF48CD4(a1, v2[2], v2[3], v2[4], a2);
}

id sub_19EF4BFA4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19EF4B698(a1, &qword_1EB392278, 0x1E4F4DDC8, (void (*)(void *, uint64_t, void))sub_19EF4C674, a2);
}

uint64_t sub_19EF4BFE0@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t)@<X8>)
{
  return sub_19EF35050(a1, *(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4C000@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19EF3EE1C(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_19EF4C020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_19EF4C070(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19EEB8A6C;
  v4[12] = a1;
  v4[13] = v1;
  uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_1E9471D80 + dword_1E9471D80);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[14] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_19EF25A04;
  return v7();
}

uint64_t sub_19EF4C168(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EE17780;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E9475748
                                                                                   + dword_1E9475748);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19EF4C244(uint64_t a1)
{
  return sub_19EF34494(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_19EF4C24C()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_19EF4C28C(uint64_t a1)
{
  sub_19EF48958(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19EF4C294()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19EF4C2CC(uint64_t a1)
{
  return sub_19F082D58(a1, *(void *)(v1 + 16));
}

uint64_t sub_19EF4C2D4()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19EF4C314(uint64_t *a1)
{
  return sub_19EF48AA0(a1, *(void (**)(void *__return_ptr, uint64_t *))(v1 + 16));
}

void sub_19EF4C320(void *a1)
{
}

uint64_t sub_19EF4C328()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 57, 7);
}

uint64_t sub_19EF4C374(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19EF4C3B8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19EF4C3FC(uint64_t result)
{
  if (result != 1) {
    return sub_19EE83660(result);
  }
  return result;
}

void type metadata accessor for SecCertificate(uint64_t a1)
{
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void type metadata accessor for JEBrotliDecoderResult(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for AMSMediaArtworkColorKind(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for __sbuf(uint64_t a1)
{
}

uint64_t sub_19EF4C498()
{
  return sub_19EE24790(&qword_1E9470C38, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_19EF4C4E0()
{
  return sub_19EE24790(&qword_1E9470C40, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_19EF4C528()
{
  return sub_19EE24790(&qword_1E9470C48, type metadata accessor for AMSMediaArtworkColorKind);
}

uint64_t sub_19EF4C570()
{
  return sub_19EE24790(&qword_1E9470C50, type metadata accessor for AMSMediaArtworkColorKind);
}

uint64_t sub_19EF4C5B8()
{
  return sub_19EE24790(&qword_1E9470C58, type metadata accessor for AMSMediaArtworkColorKind);
}

uint64_t sub_19EF4C600()
{
  return sub_19EE24790(&qword_1E9470C60, type metadata accessor for NSKeyValueChangeKey);
}

unint64_t static ComponentKindTable._table.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  unint64_t v3 = sub_19EF4CAB8(v2, &qword_1E9470D78);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_19EF4C6D8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390C68);
    uint64_t v2 = sub_19F1DD06C();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    void v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_19EEBDC00(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_19EEBDC00(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_19EEBDC00(v36, v37);
    sub_19EEBDC00(v37, &v33);
    uint64_t result = sub_19F1DCC4C();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_19EEBDC00(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_19EEBDCB0();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_19EF4CAA0(uint64_t a1)
{
  return sub_19EF4CAB8(a1, &qword_1E9470D68);
}

unint64_t sub_19EF4CAAC(uint64_t a1)
{
  return sub_19EF4CAB8(a1, &qword_1E9470D70);
}

unint64_t sub_19EF4CAB8(uint64_t a1, uint64_t *a2)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470D60);
    uint64_t v3 = (void *)sub_19F1DD06C();
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v26 = a1 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v6) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v12 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v12 >= v25) {
    goto LABEL_32;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v12);
  int64_t v14 = i + 1;
  if (!v13)
  {
    int64_t v14 = i + 2;
    if (i + 2 >= v25) {
      goto LABEL_32;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v14);
    if (!v13)
    {
      int64_t v14 = i + 3;
      if (i + 3 >= v25) {
        goto LABEL_32;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = i + 4;
        if (i + 4 >= v25) {
          goto LABEL_32;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v14);
        if (!v13)
        {
          int64_t v15 = i + 5;
          if (i + 5 < v25)
          {
            unint64_t v13 = *(void *)(v26 + 8 * v15);
            if (v13)
            {
              int64_t v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v14 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_36;
              }
              if (v14 >= v25) {
                break;
              }
              unint64_t v13 = *(void *)(v26 + 8 * v14);
              ++v15;
              if (v13) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_19EEBDCB0();
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  unint64_t v6 = (v13 - 1) & v13;
  unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; unint64_t v11 = v10 | (i << 6))
  {
    int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(a2);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391C28);
    swift_dynamicCast();
    unint64_t result = sub_19EE77E90(v18, v17);
    unint64_t v19 = result;
    if (v20)
    {
      unint64_t v9 = (uint64_t *)(v3[6] + 16 * result);
      unint64_t result = swift_bridgeObjectRelease();
      *unint64_t v9 = v18;
      v9[1] = v17;
      *(void *)(v3[7] + 8 * v19) = v28;
      if (!v6) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v3[2] >= v3[3]) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v21 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v21 = v18;
    v21[1] = v17;
    *(void *)(v3[7] + 8 * result) = v28;
    uint64_t v22 = v3[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_34;
    }
    v3[2] = v24;
    if (!v6) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_19EF4CD94(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470D50);
    uint64_t v2 = (void *)sub_19F1DD06C();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v30 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = (long long *)v31;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v14 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v14 >= v29) {
    goto LABEL_32;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v14);
  int64_t v16 = i + 1;
  if (!v15)
  {
    int64_t v16 = i + 2;
    if (i + 2 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v16);
    if (!v15)
    {
      int64_t v16 = i + 3;
      if (i + 3 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v30 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = i + 4;
        if (i + 4 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v30 + 8 * v16);
        if (!v15)
        {
          int64_t v17 = i + 5;
          if (i + 5 < v29)
          {
            unint64_t v15 = *(void *)(v30 + 8 * v17);
            if (v15)
            {
              int64_t v16 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v16 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_36;
              }
              if (v16 >= v29) {
                break;
              }
              unint64_t v15 = *(void *)(v30 + 8 * v16);
              ++v17;
              if (v15) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_19EEBDCB0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v15 - 1) & v15;
  unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
  for (i = v16; ; unint64_t v13 = v12 | (i << 6))
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v13);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = *(void **)(*(void *)(a1 + 56) + 8 * v13);
    v31[3] = sub_19EF4D4A4();
    v31[4] = sub_19EF4D4E4();
    v31[0] = v21;
    sub_19EEBB420(v6, (uint64_t)v33);
    sub_19EEBB420(v33, (uint64_t)v34);
    sub_19EEBB420(v34, (uint64_t)&v32);
    swift_bridgeObjectRetain();
    id v22 = v21;
    unint64_t result = sub_19EEBD400(v20, v19);
    unint64_t v23 = result;
    if (v24)
    {
      unint64_t v9 = v6;
      unint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *unint64_t v10 = v20;
      v10[1] = v19;
      unint64_t v6 = v9;
      uint64_t v11 = v2[7] + 40 * v23;
      __swift_destroy_boxed_opaque_existential_1Tm(v11);
      unint64_t result = sub_19EEBB420(&v32, v11);
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v25 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v25 = v20;
    v25[1] = v19;
    unint64_t result = sub_19EEBB420(&v32, v2[7] + 40 * result);
    uint64_t v26 = v2[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_34;
    }
    v2[2] = v28;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v12 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t static ComponentKindTable._decode(_:from:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = dynamic_cast_existential_2_conditional(a1);
  if (v7)
  {
    uint64_t v10 = v7;
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    sub_19EEC4154((uint64_t)a2, (uint64_t)v30);
    *(void *)&long long v32 = v10;
    *((void *)&v32 + 1) = v11;
    uint64_t v33 = v12;
    __swift_allocate_boxed_opaque_existential_2Tm(v31);
    sub_19F1DC59C();
    if (v3) {
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v31);
    }
LABEL_7:
    long long v28 = v32;
    uint64_t v22 = v32;
    unint64_t v23 = __swift_project_boxed_opaque_existential_1(v31, v32);
    *(_OWORD *)(a3 + 24) = v28;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)a3);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(boxed_opaque_existential_2Tm, v23, v22);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  }
  uint64_t v14 = dynamic_cast_existential_2_conditional(a1);
  if (v14)
  {
    uint64_t v17 = v14;
    uint64_t v18 = v15;
    uint64_t v19 = v16;
    sub_19EEC4154((uint64_t)a2, (uint64_t)v29);
    uint64_t result = JSONObject.init(from:)(v29, v30);
    if (v3) {
      return result;
    }
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v20 = sub_19F1DD89C();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v20);
    unint64_t v21 = *(void (**)(uint64_t *, void *, uint64_t, uint64_t))(v19 + 8);
    *(void *)&long long v32 = v17;
    *((void *)&v32 + 1) = v18;
    uint64_t v33 = v19;
    __swift_allocate_boxed_opaque_existential_2Tm(v31);
    v21(v30, v29, v17, v19);
    goto LABEL_7;
  }
  uint64_t v25 = sub_19F1DCDCC();
  swift_allocError();
  BOOL v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
  *BOOL v27 = a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_19F1DD86C();
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  v31[0] = 60;
  v31[1] = 0xE100000000000000;
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F1DCDAC();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x1E4FBBA70], v25);
  return swift_willThrow();
}

uint64_t dynamic_cast_existential_2_conditional(uint64_t a1)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_conformsToProtocol2()) {
      return a1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_2(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x19F3C9470);
  }
  return result;
}

uint64_t dispatch thunk of static ComponentKindTable.table.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unint64_t sub_19EF4D4A4()
{
  unint64_t result = qword_1E946F790;
  if (!qword_1E946F790)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946F790);
  }
  return result;
}

unint64_t sub_19EF4D4E4()
{
  unint64_t result = qword_1E9470D58;
  if (!qword_1E9470D58)
  {
    sub_19EF4D4A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9470D58);
  }
  return result;
}

JSStringRef sub_19EF4D53C@<X0>(const char *a1@<X0>, JSStringRef *a2@<X8>)
{
  JSStringRef result = JSStringCreateWithUTF8CString(a1);
  if (result) {
    *a2 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_19EF4D574(OpaqueJSString *a1)
{
  CharactersPtr = JSStringGetCharactersPtr(a1);
  if (CharactersPtr)
  {
    uint64_t v3 = CharactersPtr;
    size_t Length = JSStringGetLength(a1);
    if (Length)
    {
      size_t v5 = Length;
      JSStringRetain(a1);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = a1;
      id v7 = objc_allocWithZone(NSString);
      uint64_t v20 = sub_19EF4D830;
      uint64_t v21 = v6;
      *(void *)&aBlocuint64_t k = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v19 = sub_19EF4D7C0;
      *((void *)&v19 + 1) = &block_descriptor_2;
      uint64_t v8 = _Block_copy(&aBlock);
      swift_release();
      id v9 = objc_msgSend(v7, sel_initWithCharactersNoCopy_length_deallocator_, v3, v5, v8);
      _Block_release(v8);
      uint64_t v10 = sub_19F1DBD7C();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v11 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    void v22[3] = v14;
    v22[0] = 0xD000000000000026;
    v22[1] = 0x800000019F2694C0;
    aBlocuint64_t k = 0u;
    long long v19 = 0u;
    id v15 = v11;
    sub_19EEC3E70((uint64_t)v22, (uint64_t)&aBlock);
    *(unsigned char *)(v13 + 64) = 0;
    long long v16 = v19;
    *(_OWORD *)(v13 + 32) = aBlock;
    *(_OWORD *)(v13 + 48) = v16;
    *(void *)(v12 + 32) = v13;
    *(void *)&aBlocuint64_t k = v15;
    LOBYTE(v22[0]) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)v22);

    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

uint64_t sub_19EF4D7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_19EF4D820()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_19EF4D830()
{
  JSStringRelease(*(JSStringRef *)(v0 + 16));
}

uint64_t LocalPreferences.__allocating_init(bundleIdentifier:)()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v1;
  *(unsigned char *)(v0 + 24) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  return v0;
}

uint64_t LocalPreferences.__allocating_init(bundleIdentifier:cacheEnabled:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_allocObject();
  sub_19EE2FEDC(v4, a3);
  return v5;
}

uint64_t sub_19EF4D904@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

BOOL LocalPreferences.isValueForced(forKey:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  uint64_t v4 = (__CFString *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  int IsForced = CFPreferencesAppValueIsForced(v4, *(CFStringRef *)(v1 + 16));

  return IsForced != 0;
}

uint64_t sub_19EF4D9A8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  uint64_t v2 = sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_19EF4D9F0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_19EEC4154(a3, (uint64_t)v16);
  sub_19EEBCD00(a1, (uint64_t)v15);
  uint64_t v5 = *a2;
  uint64_t v6 = v17;
  uint64_t v7 = v18;
  uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
  double v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, double))(v12 + 16))(v11, v9);
  sub_19EF4E3CC((uint64_t)v15, (uint64_t)v11, v5, v6, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
}

uint64_t LocalPreferences.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  double v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v10, v8);
  sub_19EF4E3CC(a1, (uint64_t)v10, v2, v5, v6);
  return __swift_destroy_boxed_opaque_existential_1Tm(a2);
}

void (*LocalPreferences.subscript.modify(void *a1, void *a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = malloc(0x98uLL);
  *a1 = v5;
  uint64_t v6 = v5 + 10;
  v5[18] = v2;
  sub_19EEC4154((uint64_t)a2, (uint64_t)v5);
  LocalPreferences.subscript.getter(a2, v6);
  return sub_19EF4DC5C;
}

void sub_19EF4DC5C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a1 + 80;
  if (a2)
  {
    uint64_t v4 = *(void *)(v2 + 144);
    sub_19EEBCD00(*a1 + 80, v2 + 112);
    sub_19EEBB420((long long *)v2, v2 + 40);
    uint64_t v5 = *(void *)(v2 + 64);
    uint64_t v6 = *(void *)(v2 + 72);
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(v2 + 40, v5);
    double v8 = MEMORY[0x1F4188790](v7);
    uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v11 + 16))(v10, v8);
    sub_19EF4E3CC(v2 + 112, (uint64_t)v10, v4, v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm(v2 + 40);
    sub_19EEBCB4C(v3);
  }
  else
  {
    uint64_t v12 = *(void *)(v2 + 144);
    uint64_t v13 = *(void *)(v2 + 24);
    uint64_t v14 = *(void *)(v2 + 32);
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(*a1, v13);
    double v16 = MEMORY[0x1F4188790](v15);
    uint64_t v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v19 + 16))(v18, v16);
    sub_19EF4E3CC(v3, (uint64_t)v18, v12, v13, v14);
    __swift_destroy_boxed_opaque_existential_1Tm(v2);
  }
  free((void *)v2);
}

void LocalPreferences.removeValue(forKey:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  key = (__CFString *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  CFPreferencesSetAppValue(key, 0, *(CFStringRef *)(v1 + 16));
}

Swift::Void __swiftcall LocalPreferences.synchronize()()
{
  CFPreferencesAppSynchronize(*(CFStringRef *)(v0 + 16));
}

id sub_19EF4E00C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19EF4E054@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v5 = *(void *)result;
  if (*(void *)(*(void *)result + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_19EEBD400(a2, a3);
    if (v9) {
      char v10 = *(unsigned char *)(*(void *)(v5 + 56) + v8);
    }
    else {
      char v10 = 0;
    }
    JSStringRef result = swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 0;
  }
  *a4 = v10;
  return result;
}

uint64_t sub_19EF4E0D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a2, a3);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *a1;
    uint64_t v14 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19EFBE2A8();
      uint64_t v12 = v14;
    }
    swift_bridgeObjectRelease();
    char v13 = *(unsigned char *)(*(void *)(v12 + 56) + v8);
    sub_19EF6C798(v8, v12);
    *a1 = v12;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = 2;
  }
  *a4 = v13;
  return result;
}

uint64_t sub_19EF4E1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  double v8 = MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v10, v8);
  sub_19EF4E3CC(a1, (uint64_t)v10, v2, v5, v6);
  return __swift_destroy_boxed_opaque_existential_1Tm(a2);
}

void (*sub_19EF4E2A8(void *a1, void *a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = LocalPreferences.subscript.modify(v4, a2);
  return sub_19EF4E308;
}

void sub_19EF4E308(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void sub_19EF4E350(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = (__CFString *)sub_19EF4D9A8(v3, v4);
  CFPreferencesSetAppValue(v5, 0, *(CFStringRef *)(v2 + 16));
}

uint64_t sub_19EF4E3C4()
{
  return CFPreferencesAppSynchronize(*(CFStringRef *)(v0 + 16));
}

uint64_t sub_19EF4E3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  double v10 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 32))(v12, v10);
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  uint64_t v13 = (__CFString *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393260);
  uint64_t v14 = (const void *)sub_19F1DCA9C();
  CFPreferencesSetAppValue(v13, v14, *(CFStringRef *)(a3 + 16));

  swift_unknownObjectRelease();
  sub_19EEBCB4C(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a4);
}

double sub_19EF4E524@<D0>(void *a1@<X1>, void *a2@<X8>)
{
  return LocalPreferences.subscript.getter(a1, a2);
}

uint64_t sub_19EF4E550()
{
  return 0;
}

uint64_t method lookup function for LocalPreferences(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LocalPreferences);
}

uint64_t dispatch thunk of LocalPreferences.__allocating_init(bundleIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_19EF4E58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    if (a4 && *(void *)(a4 + 16))
    {
      id v5 = (id)*MEMORY[0x1E4F284C8];
      uint64_t v6 = sub_19EFB6CAC();
      if (v7)
      {
        sub_19EEBDBA4(*(void *)(a4 + 56) + 32 * v6, (uint64_t)&v11);
      }
      else
      {
        long long v11 = 0u;
        long long v12 = 0u;
      }
    }
    else
    {
      long long v11 = 0u;
      long long v12 = 0u;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393260);
    if (swift_dynamicCast()) {
      uint64_t v8 = v10;
    }
    else {
      uint64_t v8 = 0;
    }
    if (swift_weakLoadStrong())
    {
      type metadata accessor for LocalPreferences.CacheValue();
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v8;
      swift_unknownObjectRetain();
      sub_19EEBDD0C(v9);
      swift_release();
      swift_release();
    }
    swift_unknownObjectRelease();
  }
}

unint64_t sub_19EF4E6C4()
{
  unint64_t result = qword_1E9470C78;
  if (!qword_1E9470C78)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9470C78);
  }
  return result;
}

uint64_t sub_19EF4E71C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_19EF4E054(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_19EF4E738@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_19EF4E0D4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t CommonNetworkObservation.__allocating_init(name:object:scheduler:body:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  sub_19EEC4154(a3, v10 + 16);
  *(void *)(v10 + 56) = a4;
  *(void *)(v10 + 64) = a5;
  long long v11 = self;
  swift_retain();
  id v12 = objc_msgSend(v11, sel_defaultCenter);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  swift_retain();
  id v13 = a1;
  objc_msgSend(v12, sel_addObserver_selector_name_object_, v10, sel_networkStateDidChange_, v13, sub_19F1DD42C());

  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);

  swift_release();
  return v10;
}

uint64_t CommonNetworkObservation.init(name:object:scheduler:body:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_19EF4EE38(a1, a2, a3, a4, a5);

  swift_release();
  return v6;
}

uint64_t CommonNetworkObservation.deinit()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return v0;
}

Swift::Void __swiftcall CommonNetworkObservation.invalidate()()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);
}

uint64_t CommonNetworkObservation.__deallocating_deinit()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19EF4EA24()
{
  sub_19F1DAE9C();
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1E9470D90);
    if (swift_dynamicCast())
    {
      if (*((void *)&v18 + 1))
      {
        sub_19EEBB420(&v17, (uint64_t)v20);
        uint64_t v1 = v0[5];
        uint64_t v2 = v0[6];
        __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
        uint64_t v4 = v0[7];
        uint64_t v3 = v0[8];
        sub_19EEC4154((uint64_t)v20, (uint64_t)&v17);
        uint64_t v5 = swift_allocObject();
        *(void *)(v5 + 16) = v4;
        *(void *)(v5 + 24) = v3;
        sub_19EEBB420(&v17, v5 + 32);
        uint64_t v6 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v2 + 8);
        swift_retain();
        v6(sub_19EEA79E8, v5, v1, v2);
        swift_release();
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
      }
    }
    else
    {
      uint64_t v19 = 0;
      long long v17 = 0u;
      long long v18 = 0u;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v15, &qword_1EB393260);
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v19 = 0;
  }
  sub_19EEBD664((uint64_t)&v17, &qword_1E9470D88);
  if (qword_1E9470180 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v7 = v21;
  uint64_t v8 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19F24EB80;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
  swift_unknownObjectRetain();
  sub_19EED7A90(v10 + 32);
  *(void *)(v9 + 32) = v10;
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
  uint64_t v16 = v12;
  v15[0] = 0xD000000000000034;
  v15[1] = 0x800000019F269760;
  long long v17 = 0u;
  long long v18 = 0u;
  sub_19EEC3E70((uint64_t)v15, (uint64_t)&v17);
  *(unsigned char *)(v11 + 64) = 0;
  long long v13 = v18;
  *(_OWORD *)(v11 + 32) = v17;
  *(_OWORD *)(v11 + 48) = v13;
  *(void *)(v9 + 40) = v11;
  Logger.error(_:)(v9, v7, v8);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
}

void sub_19EF4EDC8()
{
  uint64_t v1 = *v0;
  id v2 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_, v1);
}

uint64_t sub_19EF4EE38(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_19EEC4154(a3, v5 + 16);
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  uint64_t v11 = self;
  swift_retain();
  id v12 = objc_msgSend(v11, sel_defaultCenter);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  swift_retain();
  id v13 = a1;
  objc_msgSend(v12, sel_addObserver_selector_name_object_, v5, sel_networkStateDidChange_, v13, sub_19F1DD42C());

  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);
  return v5;
}

uint64_t type metadata accessor for CommonNetworkObservation()
{
  return self;
}

uint64_t method lookup function for CommonNetworkObservation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CommonNetworkObservation);
}

uint64_t dispatch thunk of CommonNetworkObservation.__allocating_init(name:object:scheduler:body:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_19EF4EF9C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void *assignWithCopy for ClientBuildTypeFieldProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ClientBuildTypeFieldProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientBuildTypeFieldProvider(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientBuildTypeFieldProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientBuildTypeFieldProvider()
{
  return &type metadata for ClientBuildTypeFieldProvider;
}

uint64_t sub_19EF4F108()
{
  uint64_t result = os_variant_has_internal_content();
  if (result) {
    char v1 = 1;
  }
  else {
    char v1 = 3;
  }
  byte_1E946F980 = v1;
  return result;
}

uint64_t sub_19EF4F150()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19EF4F19C()
{
  return 1;
}

uint64_t sub_19EF4F1A4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF4F1E8()
{
  return sub_19F1DD73C();
}

uint64_t sub_19EF4F210()
{
  return sub_19F1DD78C();
}

BOOL sub_19EF4F260(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_19EF4F270()
{
  return sub_19F1DD73C();
}

uint64_t sub_19EF4F298()
{
  return sub_19F1DD78C();
}

BOOL sub_19EF4F2E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19EF4F260(*a1, *a2);
}

uint64_t sub_19EF4F2EC()
{
  return sub_19EF4F298();
}

uint64_t sub_19EF4F2F4()
{
  return sub_19EF4F270();
}

uint64_t sub_19EF4F2FC()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF4F33C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 56) == 1)
  {
    uint64_t v5 = *(void *)(v2 + 40);
    uint64_t v6 = *(void *)(v2 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), v5);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
  }
  else
  {
    sub_19EF4F724();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_19EF4F3F0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 56) == 1)
  {
    uint64_t v5 = *(void *)(v2 + 40);
    uint64_t v6 = *(void *)(v2 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), v5);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5, v6);
  }
  else
  {
    sub_19EF4F724();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_19EF4F4A4()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PackageDataBlobFormatWriter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t getEnumTagSinglePayload for JSONTimeUnit(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_19EF4F584(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF4F650);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for PackageDataBlobFormatWriter.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EF4F690()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EF4F6AC(uint64_t a1, uint64_t a2)
{
  return sub_19EF4F33C(a1, a2);
}

uint64_t sub_19EF4F6C4(uint64_t a1, uint64_t a2)
{
  return sub_19EF4F3F0(a1, a2);
}

uint64_t sub_19EF4F6DC(uint64_t a1, uint64_t a2)
{
  return sub_19EF4F6AC(a1, a2);
}

uint64_t sub_19EF4F700(uint64_t a1, uint64_t a2)
{
  return sub_19EF4F6C4(a1, a2);
}

unint64_t sub_19EF4F724()
{
  unint64_t result = qword_1E9470E98;
  if (!qword_1E9470E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9470E98);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PackageDataBlobFormatWriterError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19EF4F814);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PackageDataBlobFormatWriterError()
{
  return &type metadata for PackageDataBlobFormatWriterError;
}

unint64_t sub_19EF4F850()
{
  unint64_t result = qword_1E9470EA0;
  if (!qword_1E9470EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9470EA0);
  }
  return result;
}

id JSValue.init<each A, B>(in:function:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a4;
  v14[3] = swift_allocateMetadataPack();
  v14[4] = a6;
  v14[5] = swift_allocateWitnessTablePack();
  v14[6] = a8;
  v14[7] = a2;
  v14[8] = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_19EF5066C;
  *(void *)(v15 + 24) = v14;
  v19[4] = sub_19EE8FC0C;
  v19[5] = v15;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 1107296256;
  _OWORD v19[2] = sub_19EE8FBBC;
  uint64_t v19[3] = &block_descriptor_3;
  uint64_t v16 = _Block_copy(v19);
  swift_retain();
  swift_release();
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_valueWithObject_inContext_, v16, a1);
  if (result)
  {
    id v18 = result;

    swift_release();
    _Block_release(v16);
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_19EF4FA38(uint64_t a1, uint64_t a2, _DWORD *a3, void (*a4)(char *, __n128), uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v15 = (unint64_t)a3;
  uint64_t v63 = a1;
  uint64_t v16 = (void *)(a7 & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v17 = 8 * a6;
  if (a6 == 1)
  {
    uint64_t TupleTypeMetadata = *v16;
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    uint64_t v20 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a6)
    {
      unint64_t v21 = 0;
      if (a6 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v20 - (char *)v16) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v21 = a6 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v22 = (long long *)(v16 + 2);
      unint64_t v23 = v20 + 16;
      unint64_t v24 = a6 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *unint64_t v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v21 != a6)
      {
LABEL_9:
        unint64_t v26 = a6 - v21;
        uint64_t v27 = v21;
        long long v28 = &v20[8 * v21];
        int64_t v29 = &v16[v27];
        do
        {
          uint64_t v30 = *v29++;
          *(void *)long long v28 = v30;
          v28 += 8;
          --v26;
        }
        while (v26);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    unint64_t v15 = (unint64_t)a3;
  }
  uint64_t v59 = TupleTypeMetadata;
  uint64_t v55 = *(void *)(TupleTypeMetadata - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata);
  os_log_t v66 = (char *)&v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = &v48;
  uint64_t v54 = *(void *)(a8 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v56 = (char *)&v48 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = &v48;
  v35.n128_f64[0] = MEMORY[0x1F4188790](v34);
  os_signpost_id_t v65 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a6)
  {
LABEL_36:
    uint64_t v47 = v56;
    a9 = a5;
    a4(v65, v35);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v66, v59);
    if (!v10)
    {
      a9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a10 + 16))(v63, a8, a10);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v47, a8);
    }
    return (id)a9;
  }
  unint64_t v50 = a4;
  uint64_t v51 = a8;
  uint64_t v49 = a5;
  uint64_t v52 = &v48;
  if (v15 >> 62)
  {
LABEL_41:
    uint64_t v61 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_19F1DD03C();
  }
  else
  {
    uint64_t v61 = v15 & 0xFFFFFFFFFFFFFF8;
    uint64_t v37 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v38 = 0;
  unint64_t v39 = 0;
  unint64_t v62 = v15 & 0xC000000000000001;
  unint64_t v53 = v15;
  os_signpost_id_t v60 = (_DWORD *)(v15 + 32);
  unint64_t v64 = a9 & 0xFFFFFFFFFFFFFFFELL;
  unint64_t v15 = v59 + 32;
  while (1)
  {
    if (v39 == v37)
    {
      id result = objc_msgSend(self, sel_valueWithUndefinedInContext_, v63);
      unint64_t v39 = v37;
      if (!result)
      {
        __break(1u);
        return result;
      }
      goto LABEL_23;
    }
    if (v62) {
      break;
    }
    if ((v39 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v39 >= *(void *)(v61 + 16)) {
      goto LABEL_40;
    }
    id v41 = *(id *)&v60[2 * v39];
    BOOL v42 = __OFADD__(v39++, 1);
    if (v42) {
      goto LABEL_31;
    }
LABEL_23:
    if (a6 == 1) {
      int v43 = 0;
    }
    else {
      int v43 = *(_DWORD *)v15;
    }
    a4 = (void (*)(char *, __n128))v16;
    uint64_t v44 = v16[v38];
    uint64_t v45 = &v66[v43];
    a9 = v44;
    (*(void (**)(void))(*(void *)(v64 + 8 * v38) + 8))();
    if (v10) {
      goto LABEL_32;
    }
    *(void *)&v65[8 * v38++] = v45;
    v15 += 16;
    uint64_t v16 = a4;
    if (a6 == v38)
    {
      swift_bridgeObjectRelease();
      a4 = v50;
      a8 = v51;
      a5 = v49;
      goto LABEL_36;
    }
  }
  MEMORY[0x19F3C7060](v39, v53);
  BOOL v42 = __OFADD__(v39++, 1);
  if (!v42) {
    goto LABEL_23;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  swift_bridgeObjectRelease();
  if (v38)
  {
    a9 = (uint64_t)a4 - 8;
    uint64_t v46 = v65 - 8;
    do
    {
      (*(void (**)(void))(*(void *)(*(void *)(a9 + 8 * v38) - 8) + 8))(*(void *)&v46[8 * v38]);
      --v38;
    }
    while (v38);
  }
  return (id)a9;
}

id JSValue.init<each A>(in:function:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = (void *)swift_allocObject();
  v8[2] = a4;
  v8[3] = swift_allocateMetadataPack();
  void v8[4] = swift_allocateWitnessTablePack();
  v8[5] = a2;
  v8[6] = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_19EF506D8;
  *(void *)(v9 + 24) = v8;
  void v13[4] = sub_19EE90074;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  _OWORD v13[2] = sub_19EE8FBBC;
  v13[3] = &block_descriptor_13;
  uint64_t v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_valueWithObject_inContext_, v10, a1);
  if (result)
  {
    id v12 = result;

    swift_release();
    _Block_release(v10);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_19EF500E4(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(char *), void *a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  BOOL v42 = a5;
  int v43 = a4;
  uint64_t v51 = a1;
  id v12 = (void *)(a7 & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v13 = 8 * a6;
  if (a6 == 1)
  {
    uint64_t TupleTypeMetadata = *v12;
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    unint64_t v15 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a6)
    {
      unint64_t v16 = 0;
      if (a6 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v15 - (char *)v12) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v16 = a6 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v17 = (long long *)(v12 + 2);
      id v18 = v15 + 16;
      unint64_t v19 = a6 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v20 = *v17;
        *(v18 - 1) = *(v17 - 1);
        *id v18 = v20;
        v17 += 2;
        v18 += 2;
        v19 -= 4;
      }
      while (v19);
      if (v16 != a6)
      {
LABEL_9:
        unint64_t v21 = a6 - v16;
        uint64_t v22 = v16;
        unint64_t v23 = &v15[8 * v16];
        unint64_t v24 = &v12[v22];
        do
        {
          uint64_t v25 = *v24++;
          *(void *)unint64_t v23 = v25;
          v23 += 8;
          --v21;
        }
        while (v21);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  uint64_t v45 = &v40;
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v54 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = &v40;
  MEMORY[0x1F4188790](v27);
  unint64_t v53 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (void *)a3;
  uint64_t v47 = v28;
  uint64_t v41 = v29;
  if (a6)
  {
    uint64_t v52 = v12;
    if (a3 >> 62)
    {
LABEL_44:
      uint64_t v49 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_19F1DD03C();
    }
    else
    {
      uint64_t v49 = a3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v30 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v31 = 0;
    unint64_t v32 = 0;
    unint64_t v50 = a3 & 0xC000000000000001;
    unint64_t v48 = a3 + 32;
    a3 = a8 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v33 = (_DWORD *)(v47 + 32);
    while (1)
    {
      if (v32 == v30)
      {
        id result = objc_msgSend(self, sel_valueWithUndefinedInContext_, v51);
        unint64_t v32 = v30;
        if (!result)
        {
          __break(1u);
          goto LABEL_45;
        }
      }
      else if (v50)
      {
        MEMORY[0x19F3C7060](v32, v46);
        BOOL v36 = __OFADD__(v32++, 1);
        if (v36) {
          goto LABEL_31;
        }
      }
      else
      {
        if ((v32 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
        if (v32 >= *(void *)(v49 + 16)) {
          goto LABEL_43;
        }
        id v35 = *(id *)(v48 + 8 * v32);
        BOOL v36 = __OFADD__(v32++, 1);
        if (v36)
        {
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
      }
      int v37 = a6 == 1 ? 0 : *v33;
      uint64_t v38 = &v54[v37];
      a8 = v52[v31];
      (*(void (**)(void))(*(void *)(a3 + 8 * v31) + 8))();
      if (v8) {
        break;
      }
      *(void *)&v53[8 * v31++] = v38;
      v33 += 4;
      if (a6 == v31) {
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRelease();
    if (v31)
    {
      a8 = (unint64_t)(v52 - 1);
      unint64_t v39 = v53 - 8;
      do
      {
        (*(void (**)(void))(*(void *)(*(void *)(a8 + 8 * v31) - 8) + 8))(*(void *)&v39[8 * v31]);
        --v31;
      }
      while (v31);
    }
    return (id)a8;
  }
LABEL_32:
  swift_bridgeObjectRetain();
LABEL_33:
  a8 = (unint64_t)v42;
  v43(v53);
  if (v8)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v47);
    return (id)a8;
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v47);
  a8 = (unint64_t)objc_msgSend(self, sel_valueWithUndefinedInContext_, v51);
  id result = v46;
  if (a8)
  {
    swift_bridgeObjectRelease();
    return (id)a8;
  }
LABEL_45:
  __break(1u);
  return result;
}

id JSValue.function(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = objc_msgSend(v4, sel_isObject);
  if (!v7) {
    return v7;
  }
  id result = objc_msgSend(v4, sel_context);
  if (result)
  {
    uint64_t v9 = result;
    id v10 = _sSo7JSValueC9JetEngineE12makeFunction2in5whereABSo9JSContextC_AbH_ABSayABGtKctFZ_0((uint64_t)result, a3, a4);

    swift_bridgeObjectRetain();
    id v11 = v10;
    id v12 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setValue_forProperty_, v11, v12);

    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EF50634()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

id sub_19EF5066C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  return sub_19EF4FA38(a1, a2, a3, *(void (**)(char *, __n128))(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
}

uint64_t sub_19EF506A0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

id sub_19EF506D8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_19EF500E4(a1, a2, a3, *(void (**)(char *))(v3 + 40), *(void **)(v3 + 48), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_19EF506FC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19EF50734@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v4 + 16))(*a1, *a2, *a3);
  if (!v5) {
    *a4 = result;
  }
  return result;
}

uint64_t DeepLinkIntentImplementation.init(dispatching:routes:)@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t DeepLinkIntentImplementation.init<>(routes:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t DeepLinkIntentImplementation.intentKind.getter(uint64_t a1)
{
  return sub_19EF5141C(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t DeepLinkIntentImplementation.perform(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[23] = a3;
  v5[24] = a4;
  v5[21] = a1;
  v5[22] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470EB8);
  v5[25] = swift_task_alloc();
  uint64_t matched = type metadata accessor for URLExpression.MatchResult();
  v5[26] = matched;
  v5[27] = *(void *)(matched - 8);
  v5[28] = swift_task_alloc();
  uint64_t v8 = sub_19F1DB34C();
  v5[29] = v8;
  v5[30] = *(void *)(v8 - 8);
  v5[31] = swift_task_alloc();
  uint64_t v9 = *(void *)(a4 + 16);
  v5[32] = v9;
  v5[33] = *(void *)(v9 - 8);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = *v4;
  v5[34] = v10;
  v5[35] = v11;
  return MEMORY[0x1F4188298](sub_19EF509A4, 0, 0);
}

uint64_t sub_19EF509A4()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 256);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 264) + 16))(v1, *(void *)(v0 + 176), v3);
  Dependency.init<A>(satisfying:with:)(v3, v1, v3, (void *)(v0 + 16));
  *(void *)(v0 + 288) = sub_19EEAA240((uint64_t *)(v0 + 16));
  sub_19EEABFA4(v0 + 16);
  uint64_t v4 = *(void *)(v2 + 16);
  *(void *)(v0 + 296) = v4;
  if (v4)
  {
    unint64_t v32 = (_OWORD *)(v0 + 56);
    uint64_t v5 = *(void *)(*(void *)(v0 + 192) + 24);
    *(void *)(v0 + 304) = v5;
    uint64_t v34 = v5;
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
    *(void *)(v0 + 312) = v33;
    *(void *)(v0 + 320) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0x82C0000000000000;
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    while (1)
    {
      *(void *)(v0 + 328) = v7;
      uint64_t v8 = *(void *)(v0 + 248);
      uint64_t v9 = *(void *)(v0 + 216);
      uint64_t v37 = *(void *)(v0 + 208);
      uint64_t v35 = *(void *)(v0 + 256);
      uint64_t v36 = *(void *)(v0 + 200);
      uint64_t v10 = (void *)(v6 + 48 * v7);
      uint64_t v11 = (void *)v10[4];
      *(void *)(v0 + 336) = v11;
      id v12 = (void *)v10[5];
      *(void *)(v0 + 344) = v12;
      uint64_t v13 = (void *)v10[6];
      *(void *)(v0 + 352) = v13;
      uint64_t v14 = v10[7];
      *(void *)(v0 + 360) = v14;
      uint64_t v30 = (int *)v10[8];
      *(void *)(v0 + 368) = v10[9];
      id v15 = v11;
      id v16 = v12;
      id v17 = v13;
      swift_bridgeObjectRetain();
      swift_retain();
      v33(v35, v34);
      *(void *)(v0 + 136) = v15;
      *(void *)(v0 + 144) = v16;
      *(void *)(v0 + 152) = v17;
      *(void *)(v0 + 160) = v14;
      URLExpression.match(_:)(v8, v36);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v36, 1, v37) != 1) {
        break;
      }
      sub_19EEBD664(*(void *)(v0 + 200), &qword_1E9470EB8);
      *unint64_t v32 = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      *(void *)(v0 + 88) = 0;
      unint64_t v19 = *(void **)(v0 + 344);
      id v18 = *(void **)(v0 + 352);
      long long v20 = *(void **)(v0 + 336);
      (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));

      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v31 = v0 + 96;
      sub_19EF51464((uint64_t)v32, v0 + 96);
      if (*(void *)(v0 + 120))
      {
        uint64_t v27 = *(void *)(v0 + 168);
        swift_bridgeObjectRelease();
        swift_release();
        sub_19EEBD664(v31, qword_1E9470EC0);
        sub_19EF514CC((uint64_t)v32, v27);
        goto LABEL_13;
      }
      uint64_t v21 = *(void *)(v0 + 296);
      uint64_t v22 = *(void *)(v0 + 328) + 1;
      sub_19EEBD664((uint64_t)v32, qword_1E9470EC0);
      sub_19EEBD664(v31, qword_1E9470EC0);
      if (v22 == v21)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      uint64_t v7 = *(void *)(v0 + 328) + 1;
      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
      uint64_t v34 = *(void *)(v0 + 304);
      uint64_t v6 = *(void *)(v0 + 280);
    }
    sub_19EF51534(*(void *)(v0 + 200), *(void *)(v0 + 224));
    uint64_t v38 = (int *)((char *)v30 + *v30);
    unint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v23;
    *unint64_t v23 = v0;
    v23[1] = sub_19EF50DA8;
    uint64_t v24 = *(void *)(v0 + 288);
    uint64_t v25 = *(void *)(v0 + 224);
    return ((uint64_t (*)(_OWORD *, uint64_t, uint64_t))v38)(v32, v25, v24);
  }
  else
  {
LABEL_12:
    swift_release();
    uint64_t v28 = *(void *)(v0 + 168);
    *(void *)(v28 + 32) = 0;
    *(_OWORD *)uint64_t v28 = 0u;
    *(_OWORD *)(v28 + 16) = 0u;
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
    return v29();
  }
}

uint64_t sub_19EF50DA8()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19EF5123C;
  }
  else {
    uint64_t v2 = sub_19EF50EBC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19EF50EBC()
{
  uint64_t v1 = v0 + 56;
  uint64_t v2 = v0 + 96;
  sub_19EF51598(*(void *)(v0 + 224));
  uint64_t v27 = (_OWORD *)(v0 + 56);
  while (1)
  {
    uint64_t v4 = *(void **)(v0 + 344);
    uint64_t v3 = *(void **)(v0 + 352);
    uint64_t v5 = *(void **)(v0 + 336);
    (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));

    swift_bridgeObjectRelease();
    swift_release();
    sub_19EF51464(v1, v2);
    if (*(void *)(v0 + 120))
    {
      uint64_t v19 = *(void *)(v0 + 168);
      swift_bridgeObjectRelease();
      swift_release();
      sub_19EEBD664(v2, qword_1E9470EC0);
      sub_19EF514CC(v1, v19);
      goto LABEL_8;
    }
    uint64_t v6 = *(void *)(v0 + 296);
    uint64_t v7 = *(void *)(v0 + 328) + 1;
    sub_19EEBD664(v1, qword_1E9470EC0);
    sub_19EEBD664(v2, qword_1E9470EC0);
    if (v7 == v6) {
      break;
    }
    uint64_t v8 = *(void *)(v0 + 328) + 1;
    *(void *)(v0 + 328) = v8;
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v28 = *(void *)(v0 + 256);
    uint64_t v29 = *(void *)(v0 + 304);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v32 = *(void *)(v0 + 208);
    uint64_t v30 = *(void *)(v0 + 200);
    uint64_t v11 = (void *)(*(void *)(v0 + 280) + 48 * v8);
    id v12 = (void *)v11[4];
    *(void *)(v0 + 336) = v12;
    uint64_t v13 = (void *)v11[5];
    *(void *)(v0 + 344) = v13;
    uint64_t v14 = (void *)v11[6];
    *(void *)(v0 + 352) = v14;
    uint64_t v15 = v11[7];
    *(void *)(v0 + 360) = v15;
    uint64_t v26 = (int *)v11[8];
    *(void *)(v0 + 368) = v11[9];
    id v16 = v12;
    id v17 = v13;
    id v18 = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    v31(v28, v29);
    *(void *)(v0 + 136) = v16;
    *(void *)(v0 + 144) = v17;
    *(void *)(v0 + 152) = v18;
    *(void *)(v0 + 160) = v15;
    URLExpression.match(_:)(v9, v30);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v30, 1, v32) != 1)
    {
      sub_19EF51534(*(void *)(v0 + 200), *(void *)(v0 + 224));
      uint64_t v33 = (int *)((char *)v26 + *v26);
      unint64_t v23 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v23;
      *unint64_t v23 = v0;
      v23[1] = sub_19EF50DA8;
      uint64_t v24 = *(void *)(v0 + 288);
      uint64_t v25 = *(void *)(v0 + 224);
      return ((uint64_t (*)(_OWORD *, uint64_t, uint64_t))v33)(v27, v25, v24);
    }
    sub_19EEBD664(*(void *)(v0 + 200), &qword_1E9470EB8);
    uint64_t v1 = v0 + 56;
    *uint64_t v27 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(void *)(v0 + 88) = 0;
    uint64_t v2 = v0 + 96;
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v20 = *(void *)(v0 + 168);
  *(void *)(v20 + 32) = 0;
  *(_OWORD *)uint64_t v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_19EF5123C()
{
  uint64_t v1 = (void *)v0[44];
  uint64_t v3 = (void *)v0[42];
  uint64_t v2 = (void *)v0[43];
  uint64_t v4 = v0[30];
  uint64_t v5 = v0[31];
  uint64_t v6 = v0[29];
  sub_19EF51598(v0[28]);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_19EF51350(uint64_t a1)
{
  return sub_19EF5141C(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_19EF5135C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19EEB8A6C;
  return DeepLinkIntentImplementation.perform(_:objectGraph:)(a1, a2, a3, a4);
}

uint64_t sub_19EF5141C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)(a2 + 8) + 24))(&v3);
  return v3;
}

uint64_t sub_19EF51464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E9470EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF514CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E9470EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF51534(uint64_t a1, uint64_t a2)
{
  uint64_t matched = type metadata accessor for URLExpression.MatchResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(matched - 8) + 32))(a2, a1, matched);
  return a2;
}

uint64_t sub_19EF51598(uint64_t a1)
{
  uint64_t matched = type metadata accessor for URLExpression.MatchResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(matched - 8) + 8))(a1, matched);
  return a1;
}

uint64_t sub_19EF515F4(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(a2 + 24) + 8);
}

uint64_t type metadata accessor for DeepLinkIntentImplementation()
{
  return __swift_instantiateGenericMetadata();
}

Swift::Double __swiftcall JSONTimeUnit.timeInterval(byConverting:)(Swift::Double byConverting)
{
  if (*v1) {
    return byConverting / 1000.0;
  }
  return byConverting;
}

Swift::Double __swiftcall JSONTimeUnit.value(byConverting:)(Swift::Double byConverting)
{
  if (*v1) {
    return byConverting * 1000.0;
  }
  return byConverting;
}

BOOL static JSONTimeUnit.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t JSONTimeUnit.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JSONTimeUnit.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t _s9JetEngine0A18PackageWriterErrorO9hashValueSivg_0()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF5172C()
{
  return sub_19F1DD73C();
}

uint64_t sub_19EF51758()
{
  return sub_19F1DD78C();
}

unint64_t sub_19EF517A0()
{
  unint64_t result = qword_1E9470F50;
  if (!qword_1E9470F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9470F50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JSONTimeUnit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF518C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_19EF518E8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19EF51920()
{
  if (qword_1EB3911F8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_19EF5197C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for MetricsPipeline.CallingOutActor();
  return MEMORY[0x1F4187F20](v3, a2);
}

BOOL static MetricsPipeline.FlushBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MetricsPipeline.FlushBehavior.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t MetricsPipeline.FlushBehavior.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t *MetricsPipeline.Configuration.withAccountProvider(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EE63C28(v2, a2);
  return __swift_assign_boxed_opaque_existential_1((uint64_t *)(a2 + 56), a1);
}

void MetricsPipeline.Configuration.withBundle(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EE63C28(v2, a2);
  objc_storeStrong((id *)(a2 + 96), a1);
}

uint64_t MetricsPipeline.Configuration.withTreatmentFilter(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EE63C28(v2, a2);
  sub_19EEBD664(a2 + 136, &qword_1EB3917A8);
  return sub_19EEC4154(a1, a2 + 136);
}

uint64_t MetricsPipeline.init(builderType:aggregator:linter:recorder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v15 = *a3;
  sub_19EEC4154(a4, (uint64_t)v14);
  sub_19EEC4154(a5, (uint64_t)v13);
  uint64_t v12 = 0;
  MetricsPipeline.init(builderType:aggregator:linter:recorder:bag:)(a1, a2, &v15, (uint64_t)v14, (uint64_t)v13, &v12, a6);
  __swift_destroy_boxed_opaque_existential_1Tm(a5);
  return __swift_destroy_boxed_opaque_existential_1Tm(a4);
}

void MetricsPipeline.flushBehavior.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 176);
}

uint64_t MetricsPipeline.withFlushBehavior(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *a1;
  uint64_t result = sub_19EE99F44(v2, a2);
  *(unsigned char *)(a2 + 176) = v4;
  return result;
}

uint64_t static MetricsPipeline.unstable_scheduleBarrier(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB9FC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = sub_19F1DBA3C();
  uint64_t v8 = *(void *)(v13[0] - 8);
  MEMORY[0x1F4188790](v13[0]);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB391C40 != -1) {
    swift_once();
  }
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_4;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  sub_19F1DBA1C();
  v13[1] = MEMORY[0x1E4FBC860];
  sub_19EEA5EA4(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEA5E54((unint64_t *)&qword_1EB393050, &qword_1EB393048);
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B90](0, v10, v7, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v13[0]);
  return swift_release();
}

uint64_t sub_19EF51ED8()
{
  return MEMORY[0x1F4188298](sub_19EF51EF4, *(void *)(v0 + 816), *(void *)(v0 + 824));
}

uint64_t sub_19EF51EF4()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EF51F58()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 824);
  uint64_t v2 = *(void *)(v0 + 816);
  return MEMORY[0x1F4188298](sub_19EF51FC0, v2, v1);
}

uint64_t sub_19EF51FC0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EF52024()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 824);
  uint64_t v2 = *(void *)(v0 + 816);
  return MEMORY[0x1F4188298](sub_19EF520A4, v2, v1);
}

uint64_t sub_19EF520A4()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EF52108()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 95;
  v0[3] = sub_19EF521CC;
  v0[26] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 26);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF5339C(v2);
  sub_19EEBD664(v2, &qword_1EB390E20);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19EF521CC()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 952) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = v1[103];
    uint64_t v4 = v1[102];
    uint64_t v5 = sub_19EF52578;
  }
  else
  {
    v1[120] = v1[95];
    swift_release();
    uint64_t v3 = v1[103];
    uint64_t v4 = v1[102];
    uint64_t v5 = sub_19EF52300;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_19EF52300()
{
  uint64_t v23 = v0;
  uint64_t v1 = (long long *)(v0 + 488);
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 960);
  uint64_t v3 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  id v5 = v3;
  uint64_t v19 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
  v6._countAndFlagsBits = 0x2064656873756C66;
  v6._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  *(void *)(v0 + 624) = MEMORY[0x1E4FBB550];
  *(void *)(v0 + 600) = v2;
  sub_19EEC3ED8(v0 + 600, v0 + 568, &qword_1EB393260);
  long long *v1 = 0u;
  *(_OWORD *)(v0 + 504) = 0u;
  sub_19EE6EEAC(v0 + 568, v0 + 488, &qword_1EB393260);
  *(unsigned char *)(v0 + 520) = 0;
  long long v7 = *(_OWORD *)(v0 + 504);
  long long v20 = *v1;
  long long v21 = v7;
  char v22 = *(unsigned char *)(v0 + 520);
  uint64_t v8 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
  }
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_19EEC3F3C((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  v8[2] = v10 + 1;
  uint64_t v11 = &v8[5 * v10];
  long long v12 = v20;
  long long v13 = v21;
  *((unsigned char *)v11 + 64) = v22;
  *((_OWORD *)v11 + 2) = v12;
  *((_OWORD *)v11 + 3) = v13;
  uint64_t v19 = v8;
  sub_19EEBD664(v0 + 600, &qword_1EB393260);
  v14._object = (void *)0x800000019F269960;
  v14._countAndFlagsBits = 0xD000000000000013;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  *(void *)(v4 + 32) = v8;
  *(void *)&long long v20 = v5;
  LOBYTE(v19) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v19);
  swift_bridgeObjectRelease();

  long long v15 = *(_OWORD **)(v0 + 776);
  long long v18 = *(_OWORD *)(v0 + 912);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  *long long v15 = v18;
  id v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_19EF52578()
{
  uint64_t v26 = v0;
  uint64_t v1 = (long long *)(v0 + 528);
  swift_release();
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
  id v4 = v2;
  char v22 = sub_19EEC3F3C(0, 44, 0, MEMORY[0x1E4FBC860]);
  v5._object = (void *)0x800000019F269930;
  v5._countAndFlagsBits = 0xD00000000000002BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  uint64_t v6 = *(void *)(v0 + 696);
  uint64_t v7 = *(void *)(v0 + 704);
  *(void *)(v0 + 656) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 632));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
  sub_19EEC3ED8(v0 + 632, v0 + 664, &qword_1EB393260);
  long long *v1 = 0u;
  *(_OWORD *)(v0 + 544) = 0u;
  sub_19EE6EEAC(v0 + 664, v0 + 528, &qword_1EB393260);
  *(unsigned char *)(v0 + 560) = 0;
  long long v9 = *(_OWORD *)(v0 + 544);
  long long v23 = *v1;
  long long v24 = v9;
  char v25 = *(unsigned char *)(v0 + 560);
  unint64_t v10 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v10 = sub_19EEC3F3C(0, v22[2] + 1, 1, v22);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    unint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  long long v13 = *(void **)(v0 + 952);
  id v10[2] = v12 + 1;
  Swift::String v14 = &v10[5 * v12];
  long long v15 = v23;
  long long v16 = v24;
  *((unsigned char *)v14 + 64) = v25;
  *((_OWORD *)v14 + 2) = v15;
  *((_OWORD *)v14 + 3) = v16;
  char v22 = v10;
  sub_19EEBD664(v0 + 632, &qword_1EB393260);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  *(void *)(v3 + 32) = v10;
  *(void *)&long long v23 = v4;
  LOBYTE(v22) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v22);
  swift_bridgeObjectRelease();

  long long v18 = *(_OWORD **)(v0 + 776);
  long long v21 = *(_OWORD *)(v0 + 912);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  *long long v18 = v21;
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

void sub_19EF52848(void *a1)
{
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
  id v4 = v2;
  long long v23 = sub_19EEC3F3C(0, 44, 0, MEMORY[0x1E4FBC860]);
  v5._object = (void *)0x800000019F269900;
  v5._countAndFlagsBits = 0xD00000000000002BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  void v22[3] = v21;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(boxed_opaque_existential_2Tm, v20, v21);
  sub_19EEC3ED8((uint64_t)v22, (uint64_t)v16, &qword_1EB393260);
  long long v14 = 0u;
  long long v15 = 0u;
  sub_19EE6EEAC((uint64_t)v16, (uint64_t)&v14, &qword_1EB393260);
  char v19 = 0;
  long long v17 = v14;
  long long v18 = v15;
  uint64_t v7 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = sub_19EEC3F3C(0, v7[2] + 1, 1, v7);
  }
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  if (v9 >= v8 >> 1) {
    uint64_t v7 = sub_19EEC3F3C((void *)(v8 > 1), v9 + 1, 1, v7);
  }
  v7[2] = v9 + 1;
  unint64_t v10 = &v7[5 * v9];
  long long v11 = v17;
  long long v12 = v18;
  *((unsigned char *)v10 + 64) = v19;
  *((_OWORD *)v10 + 2) = v11;
  *((_OWORD *)v10 + 3) = v12;
  long long v23 = v7;
  sub_19EEBD664((uint64_t)v22, &qword_1EB393260);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  *(void *)(v3 + 32) = v23;
  *(void *)&long long v17 = v4;
  LOBYTE(v14) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v14);

  swift_bridgeObjectRelease();
  sub_19F07DFD0(a1);
}

uint64_t MetricsPipeline.process(_:using:)(uint64_t a1, long long *a2, uint64_t *a3)
{
  *(void *)(v4 + 176) = a1;
  *(void *)(v4 + 184) = v3;
  long long v5 = *a2;
  *(unsigned char *)(v4 + 153) = *((unsigned char *)a2 + 16);
  long long v6 = *(long long *)((char *)a2 + 24);
  *(_OWORD *)(v4 + 192) = v5;
  *(_OWORD *)(v4 + 208) = v6;
  uint64_t v7 = *a3;
  *(void *)(v4 + 224) = *((void *)a2 + 5);
  *(void *)(v4 + 232) = v7;
  return MEMORY[0x1F4188298](sub_19EF52AD4, 0, 0);
}

uint64_t sub_19EF52AD4()
{
  uint64_t v11 = v0;
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  char v3 = *(unsigned char *)(v0 + 153);
  long long v4 = *(_OWORD *)(v0 + 208);
  long long v6 = *(_OWORD *)(v0 + 192);
  char v7 = v3;
  long long v8 = v4;
  uint64_t v9 = v2;
  uint64_t v10 = v1;
  *(void *)(v0 + 240) = MetricsPipeline.process(_:using:)((uint64_t)&v6, &v10);
  return MEMORY[0x1F4188298](sub_19EF52B68, 0, 0);
}

uint64_t sub_19EF52B68()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_19EF52C2C;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EEA8C4C(v2);
  sub_19EEBD664(v2, (uint64_t *)&unk_1EB3912D0);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19EF52C2C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 248) = v2;
  if (v2)
  {
    swift_willThrow();
    char v3 = sub_19EF52DB8;
  }
  else
  {
    *(_OWORD *)*(void *)(v1 + 176) = *(_OWORD *)(v1 + 160);
    char v3 = sub_19EF52D54;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19EF52D54()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EF52DB8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t MetricsPipeline.builderType.getter()
{
  return *(void *)v0;
}

void sub_19EF52E34(uint64_t a1)
{
}

void sub_19EF52E9C(uint64_t a1)
{
}

void sub_19EF52EE4(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  unint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  switch(*(unsigned char *)(v1 + 56))
  {
    case 1:
      sub_19EF3C628(*(void *)(v1 + 24), *(void *)(v1 + 32));
      os_unfair_lock_unlock(v3);
      sub_19F1B3F98((uint64_t)v4, v5, v6, v7);
      long long v15 = v4;
      unint64_t v16 = v5;
      uint64_t v17 = v6;
      uint64_t v18 = v7;
      char v19 = 1;
      goto LABEL_10;
    case 2:
      uint64_t v20 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F0821E4(v4);
      long long v15 = v4;
      unint64_t v16 = v5;
      uint64_t v17 = v6;
      uint64_t v18 = v7;
      char v19 = 2;
      goto LABEL_10;
    case 3:
      uint64_t v21 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F0821E4(v4);
      long long v15 = v4;
      unint64_t v16 = v5;
      uint64_t v17 = v6;
      uint64_t v18 = v7;
      char v19 = 3;
LABEL_10:
      sub_19EF58E88(v15, v16, v17, v18, v19);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v22, &qword_1E9471080);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_19F09D4D8(0, v4[2] + 1, 1, v4);
      }
      unint64_t v9 = v4[2];
      unint64_t v8 = v4[3];
      if (v9 >= v8 >> 1) {
        uint64_t v4 = sub_19F09D4D8((void *)(v8 > 1), v9 + 1, 1, v4);
      }
      v4[2] = v9 + 1;
      sub_19EEBDC4C((uint64_t)v22, (uint64_t)&v4[10 * v9 + 4], &qword_1E9471080);
      uint64_t v10 = *(void **)(v1 + 24);
      unint64_t v11 = *(void *)(v1 + 32);
      uint64_t v12 = *(void *)(v1 + 40);
      uint64_t v13 = *(void *)(v1 + 48);
      *(void *)(v1 + 24) = v4;
      *(void *)(v1 + 32) = 0;
      *(void *)(v1 + 40) = 0;
      *(void *)(v1 + 48) = 0;
      char v14 = *(unsigned char *)(v1 + 56);
      *(unsigned char *)(v1 + 56) = 0;
      sub_19EF58E88(v10, v11, v12, v13, v14);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF53100(uint64_t a1)
{
}

void sub_19EF53168(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = v1 + 24;
  swift_beginAccess();
  sub_19EEC3ED8(v4, (uint64_t)v15, (uint64_t *)&unk_1E946DD90);
  switch(v16)
  {
    case 1:
      sub_19EEBB420(v15, (uint64_t)v13);
      os_unfair_lock_unlock(v3);
      sub_19F1B4474((uint64_t)v13);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      break;
    case 2:
    case 3:
      unint64_t v5 = *(void **)&v15[0];
      os_unfair_lock_unlock(v3);
      sub_19F0822AC(v5);

      break;
    default:
      uint64_t v6 = *(void **)&v15[0];
      sub_19EEC3ED8(a1, (uint64_t)v13, (uint64_t *)&unk_1E946DDB0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_19F09D658(0, v6[2] + 1, 1, v6);
      }
      unint64_t v7 = v6[2];
      unint64_t v8 = v6[3];
      unint64_t v9 = v7 + 1;
      if (v7 >= v8 >> 1)
      {
        uint64_t v10 = v6;
        unint64_t v11 = v6[2];
        uint64_t v12 = sub_19F09D658((void *)(v8 > 1), v7 + 1, 1, v10);
        unint64_t v7 = v11;
        uint64_t v6 = v12;
      }
      v6[2] = v9;
      sub_19EEBDC4C((uint64_t)v13, (uint64_t)&v6[10 * v7 + 4], (uint64_t *)&unk_1E946DDB0);
      v13[0] = v6;
      char v14 = 0;
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v13, v4, (uint64_t *)&unk_1E946DD90);
      swift_endAccess();
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF53344(uint64_t a1)
{
}

void sub_19EF5339C(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      os_unfair_lock_unlock(v3);
      sub_19F1B45B8((uint64_t)v4);
      break;
    case 2:
      uint64_t v10 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F0822FC(v4);
      unint64_t v11 = v4;
      char v12 = 2;
      goto LABEL_10;
    case 3:
      uint64_t v13 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F0822FC(v4);
      unint64_t v11 = v4;
      char v12 = 3;
LABEL_10:
      sub_19EE7F054(v11, v12);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v17, &qword_1EB390E20);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_19F09D680(0, v4[2] + 1, 1, v4);
      }
      unint64_t v5 = v4[2];
      unint64_t v6 = v4[3];
      unint64_t v7 = v5 + 1;
      if (v5 >= v6 >> 1)
      {
        char v14 = v4;
        unint64_t v15 = v4[2];
        char v16 = sub_19F09D680((void *)(v6 > 1), v5 + 1, 1, v14);
        unint64_t v5 = v15;
        uint64_t v4 = v16;
      }
      v4[2] = v7;
      sub_19EEBDC4C((uint64_t)v17, (uint64_t)&v4[10 * v5 + 4], &qword_1EB390E20);
      unint64_t v8 = *(void **)(v1 + 24);
      *(void *)(v1 + 24) = v4;
      char v9 = *(unsigned char *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 0;
      sub_19EE7F054(v8, v9);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF5354C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MTMetricsIdentifier();
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D5F0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = &v19[-v10 - 8];
  char v12 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v12);
  uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v13, (uint64_t)v11, (uint64_t *)&unk_1E946D5F0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_19EE971B4((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
      os_unfair_lock_unlock(v12);
      sub_19F1B4774((uint64_t)v5);
      sub_19EE6587C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
      break;
    case 2u:
    case 3u:
      char v14 = (void *)*v11;
      os_unfair_lock_unlock(v12);
      sub_19F08239C(v14);

      break;
    default:
      unint64_t v15 = (void *)*v11;
      sub_19EEC3ED8(a1, (uint64_t)v19, (uint64_t *)&unk_1E946D600);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_19F09D6A0(0, v15[2] + 1, 1, v15);
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1) {
        unint64_t v15 = sub_19F09D6A0((void *)(v16 > 1), v17 + 1, 1, v15);
      }
      long long v15[2] = v17 + 1;
      sub_19EEBDC4C((uint64_t)v19, (uint64_t)&v15[10 * v17 + 4], (uint64_t *)&unk_1E946D600);
      *unint64_t v8 = v15;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v8, v13, (uint64_t *)&unk_1E946D5F0);
      swift_endAccess();
      os_unfair_lock_unlock(v12);
      break;
  }
}

void sub_19EF53824(uint64_t a1)
{
  uint64_t v18 = a1;
  uint64_t v2 = sub_19F1DACDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE40);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = &v19[-v10 - 8];
  char v12 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v12);
  uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v13, (uint64_t)v11, &qword_1E946FE40);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(unsigned char *, void *, uint64_t))(v3 + 32))(v5, v11, v2);
      os_unfair_lock_unlock(v12);
      sub_19F1B4AFC((uint64_t)v5);
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
      break;
    case 2u:
    case 3u:
      char v14 = (void *)*v11;
      os_unfair_lock_unlock(v12);
      sub_19F082414(v14);

      break;
    default:
      unint64_t v15 = (void *)*v11;
      sub_19EEC3ED8(v18, (uint64_t)v19, (uint64_t *)&unk_1E946F9D0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_19F09D968(0, v15[2] + 1, 1, v15);
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1) {
        unint64_t v15 = sub_19F09D968((void *)(v16 > 1), v17 + 1, 1, v15);
      }
      long long v15[2] = v17 + 1;
      sub_19EEBDC4C((uint64_t)v19, (uint64_t)&v15[10 * v17 + 4], (uint64_t *)&unk_1E946F9D0);
      *unint64_t v8 = v15;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v8, v13, &qword_1E946FE40);
      swift_endAccess();
      os_unfair_lock_unlock(v12);
      break;
  }
}

void sub_19EF53B38(uint64_t a1)
{
  uint64_t v18 = a1;
  uint64_t v2 = sub_19F1DB34C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = &v19[-v10 - 8];
  char v12 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v12);
  uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v13, (uint64_t)v11, &qword_1EB3921D8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(unsigned char *, void *, uint64_t))(v3 + 32))(v5, v11, v2);
      os_unfair_lock_unlock(v12);
      sub_19F1B4C90((uint64_t)v5);
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
      break;
    case 2u:
    case 3u:
      char v14 = (void *)*v11;
      os_unfair_lock_unlock(v12);
      sub_19F08248C(v14);

      break;
    default:
      unint64_t v15 = (void *)*v11;
      sub_19EEC3ED8(v18, (uint64_t)v19, &qword_1E946FC00);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_19F09DAC0(0, v15[2] + 1, 1, v15);
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1) {
        unint64_t v15 = sub_19F09DAC0((void *)(v16 > 1), v17 + 1, 1, v15);
      }
      long long v15[2] = v17 + 1;
      sub_19EEBDC4C((uint64_t)v19, (uint64_t)&v15[10 * v17 + 4], &qword_1E946FC00);
      *unint64_t v8 = v15;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v8, v13, &qword_1EB3921D8);
      swift_endAccess();
      os_unfair_lock_unlock(v12);
      break;
  }
}

void sub_19EF53E4C(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = v1 + 24;
  swift_beginAccess();
  sub_19EEC3ED8(v4, (uint64_t)v15, &qword_1E9473800);
  switch(v16)
  {
    case 1:
      sub_19EEBB420(v15, (uint64_t)v13);
      os_unfair_lock_unlock(v3);
      sub_19F1B4EF0((uint64_t)v13);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      break;
    case 2:
    case 3:
      unint64_t v5 = *(void **)&v15[0];
      os_unfair_lock_unlock(v3);
      sub_19F0824B4(v5);

      break;
    default:
      uint64_t v6 = *(void **)&v15[0];
      sub_19EEC3ED8(a1, (uint64_t)v13, (uint64_t *)&unk_1E9470F80);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_19F09DBFC(0, v6[2] + 1, 1, v6);
      }
      unint64_t v7 = v6[2];
      unint64_t v8 = v6[3];
      unint64_t v9 = v7 + 1;
      if (v7 >= v8 >> 1)
      {
        uint64_t v10 = v6;
        unint64_t v11 = v6[2];
        char v12 = sub_19F09DBFC((void *)(v8 > 1), v7 + 1, 1, v10);
        unint64_t v7 = v11;
        uint64_t v6 = v12;
      }
      v6[2] = v9;
      sub_19EEBDC4C((uint64_t)v13, (uint64_t)&v6[10 * v7 + 4], (uint64_t *)&unk_1E9470F80);
      v13[0] = v6;
      char v14 = 0;
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v13, v4, &qword_1E9473800);
      swift_endAccess();
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF54018(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  switch(*(unsigned char *)(v1 + 40))
  {
    case 1:
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(v3);
      sub_19F1B4984((uint64_t)v4, v5);
      unint64_t v11 = v4;
      uint64_t v12 = v5;
      char v13 = 1;
      goto LABEL_10;
    case 2:
      char v14 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F0823C4(v4);
      unint64_t v11 = v4;
      uint64_t v12 = v5;
      char v13 = 2;
      goto LABEL_10;
    case 3:
      unint64_t v15 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F0823C4(v4);
      unint64_t v11 = v4;
      uint64_t v12 = v5;
      char v13 = 3;
LABEL_10:
      sub_19EF58938(v11, v12, v13);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v16, &qword_1E9470FA0);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_19F09DC10(0, v4[2] + 1, 1, v4);
      }
      unint64_t v7 = v4[2];
      unint64_t v6 = v4[3];
      if (v7 >= v6 >> 1) {
        uint64_t v4 = sub_19F09DC10((void *)(v6 > 1), v7 + 1, 1, v4);
      }
      v4[2] = v7 + 1;
      sub_19EEBDC4C((uint64_t)v16, (uint64_t)&v4[10 * v7 + 4], &qword_1E9470FA0);
      unint64_t v8 = *(void **)(v1 + 24);
      uint64_t v9 = *(void *)(v1 + 32);
      *(void *)(v1 + 24) = v4;
      *(void *)(v1 + 32) = 0;
      char v10 = *(unsigned char *)(v1 + 40);
      *(unsigned char *)(v1 + 40) = 0;
      sub_19EF58938(v8, v9, v10);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF541E8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for JSSource();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C7A0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = &v19[-v10 - 8];
  uint64_t v12 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v12);
  uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v13, (uint64_t)v11, &qword_1E946C7A0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_19EE971B4((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for JSSource);
      os_unfair_lock_unlock(v12);
      sub_19F1B5084((uint64_t)v5);
      sub_19EE6587C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for JSSource);
      break;
    case 2u:
    case 3u:
      char v14 = (void *)*v11;
      os_unfair_lock_unlock(v12);
      sub_19F0824DC(v14);

      break;
    default:
      unint64_t v15 = (void *)*v11;
      sub_19EEC3ED8(a1, (uint64_t)v19, &qword_1E9470FA8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_19F09DC24(0, v15[2] + 1, 1, v15);
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1) {
        unint64_t v15 = sub_19F09DC24((void *)(v16 > 1), v17 + 1, 1, v15);
      }
      long long v15[2] = v17 + 1;
      sub_19EEBDC4C((uint64_t)v19, (uint64_t)&v15[10 * v17 + 4], &qword_1E9470FA8);
      *unint64_t v8 = v15;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v8, v13, &qword_1E946C7A0);
      swift_endAccess();
      os_unfair_lock_unlock(v12);
      break;
  }
}

void sub_19EF544C0(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  unint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void **)(v1 + 40);
  switch(*(unsigned char *)(v1 + 48))
  {
    case 1:
      sub_19EEA0784(*(void *)(v1 + 24), *(void *)(v1 + 32));
      id v13 = v6;
      os_unfair_lock_unlock(v3);
      sub_19F1B5294((uint64_t)v4, v5, v6);
      char v14 = v4;
      unint64_t v15 = v5;
      unint64_t v16 = v6;
      char v17 = 1;
      goto LABEL_10;
    case 2:
      uint64_t v18 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F082504(v4);
      char v14 = v4;
      unint64_t v15 = v5;
      unint64_t v16 = v6;
      char v17 = 2;
      goto LABEL_10;
    case 3:
      char v19 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F082504(v4);
      char v14 = v4;
      unint64_t v15 = v5;
      unint64_t v16 = v6;
      char v17 = 3;
LABEL_10:
      sub_19EF58CA0(v14, v15, v16, v17);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v20, &qword_1EB390C20);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_19F09DC38(0, v4[2] + 1, 1, v4);
      }
      unint64_t v8 = v4[2];
      unint64_t v7 = v4[3];
      if (v8 >= v7 >> 1) {
        uint64_t v4 = sub_19F09DC38((void *)(v7 > 1), v8 + 1, 1, v4);
      }
      v4[2] = v8 + 1;
      sub_19EEBDC4C((uint64_t)v20, (uint64_t)&v4[10 * v8 + 4], &qword_1EB390C20);
      uint64_t v9 = *(void **)(v1 + 24);
      unint64_t v10 = *(void *)(v1 + 32);
      unint64_t v11 = *(void **)(v1 + 40);
      *(void *)(v1 + 24) = v4;
      *(void *)(v1 + 32) = 0;
      *(void *)(v1 + 40) = 0;
      char v12 = *(unsigned char *)(v1 + 48);
      *(unsigned char *)(v1 + 48) = 0;
      sub_19EF58CA0(v9, v10, v11, v12);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF546C0(uint64_t a1)
{
}

void sub_19EF54738(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = v1 + 24;
  swift_beginAccess();
  sub_19EEC3ED8(v4, (uint64_t)v15, &qword_1E9471030);
  switch(v16)
  {
    case 1:
      sub_19EEBB420(v15, (uint64_t)v13);
      os_unfair_lock_unlock(v3);
      sub_19F1B5690((uint64_t)v13);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      break;
    case 2:
    case 3:
      unint64_t v5 = *(void **)&v15[0];
      os_unfair_lock_unlock(v3);
      sub_19F0825CC(v5);

      break;
    default:
      uint64_t v6 = *(void **)&v15[0];
      sub_19EEC3ED8(a1, (uint64_t)v13, &qword_1E9471038);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_19F09DD8C(0, v6[2] + 1, 1, v6);
      }
      unint64_t v7 = v6[2];
      unint64_t v8 = v6[3];
      unint64_t v9 = v7 + 1;
      if (v7 >= v8 >> 1)
      {
        unint64_t v10 = v6;
        unint64_t v11 = v6[2];
        char v12 = sub_19F09DD8C((void *)(v8 > 1), v7 + 1, 1, v10);
        unint64_t v7 = v11;
        uint64_t v6 = v12;
      }
      v6[2] = v9;
      sub_19EEBDC4C((uint64_t)v13, (uint64_t)&v6[10 * v7 + 4], &qword_1E9471038);
      v13[0] = v6;
      char v14 = 0;
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v13, v4, &qword_1E9471030);
      swift_endAccess();
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF54904(uint64_t a1)
{
}

void sub_19EF5494C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PageIntentInstrumentation();
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471048);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  unint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = &v19[-v10 - 8];
  char v12 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v12);
  uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v13, (uint64_t)v11, &qword_1E9471048);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_19EE971B4((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
      os_unfair_lock_unlock(v12);
      sub_19F1B5824((uint64_t)v5);
      sub_19EE6587C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
      break;
    case 2u:
    case 3u:
      char v14 = (void *)*v11;
      os_unfair_lock_unlock(v12);
      sub_19F08261C(v14);

      break;
    default:
      unint64_t v15 = (void *)*v11;
      sub_19EEC3ED8(a1, (uint64_t)v19, (uint64_t *)&unk_1E9471050);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_19F09DDB4(0, v15[2] + 1, 1, v15);
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1) {
        unint64_t v15 = sub_19F09DDB4((void *)(v16 > 1), v17 + 1, 1, v15);
      }
      long long v15[2] = v17 + 1;
      sub_19EEBDC4C((uint64_t)v19, (uint64_t)&v15[10 * v17 + 4], (uint64_t *)&unk_1E9471050);
      *unint64_t v9 = v15;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v9, v13, &qword_1E9471048);
      swift_endAccess();
      os_unfair_lock_unlock(v12);
      break;
  }
}

void sub_19EF54C24(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      os_unfair_lock_unlock(v3);
      sub_19F1B5A34(v4 & 1);
      break;
    case 2:
      uint64_t v10 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F082644(v4);
      unint64_t v11 = v4;
      char v12 = 2;
      goto LABEL_10;
    case 3:
      uint64_t v13 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F082644(v4);
      unint64_t v11 = v4;
      char v12 = 3;
LABEL_10:
      sub_19EE7F054(v11, v12);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v17, &qword_1E946D1C0);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_19F09DDDC(0, v4[2] + 1, 1, v4);
      }
      unint64_t v5 = v4[2];
      unint64_t v6 = v4[3];
      unint64_t v7 = v5 + 1;
      if (v5 >= v6 >> 1)
      {
        char v14 = v4;
        unint64_t v15 = v4[2];
        unint64_t v16 = sub_19F09DDDC((void *)(v6 > 1), v5 + 1, 1, v14);
        unint64_t v5 = v15;
        uint64_t v4 = v16;
      }
      v4[2] = v7;
      sub_19EEBDC4C((uint64_t)v17, (uint64_t)&v4[10 * v5 + 4], &qword_1E946D1C0);
      uint64_t v8 = *(void **)(v1 + 24);
      *(void *)(v1 + 24) = v4;
      char v9 = *(unsigned char *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 0;
      sub_19EE7F054(v8, v9);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF54DE4(uint64_t a1)
{
  uint64_t v2 = v1;
  locuint64_t k = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(lock);
  swift_beginAccess();
  uint64_t v5 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1 + 4;
  unint64_t v6 = (void *)v2[3];
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[4];
  uint64_t v9 = v4[6];
  uint64_t v10 = v4[7];
  uint64_t v11 = v4[8];
  uint64_t v12 = v4[9];
  uint64_t v13 = v4[10];
  switch(*((unsigned char *)v4 + 88))
  {
    case 1:
      uint64_t v38 = v4[3];
      uint64_t v41 = v4[5];
      uint64_t v28 = v4[4];
      uint64_t v34 = v3;
      uint64_t v35 = v8;
      uint64_t v29 = v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(lock);
      v47[0] = (uint64_t)v6;
      v47[1] = v5;
      v47[2] = v29;
      v47[3] = v7;
      v47[4] = v38;
      v47[5] = v28;
      v47[6] = v41;
      v47[7] = v9;
      char v48 = v10 & 1;
      uint64_t v49 = v11;
      uint64_t v50 = v12;
      uint64_t v51 = v13;
      sub_19F1B5F70(v47);
      sub_19EF58BA4(v6, v5, v34, v7, v38, v35, v41, v9, v10, v11, v12, v13, 1);
      break;
    case 2:
      uint64_t v39 = v4[3];
      uint64_t v42 = v4[5];
      uint64_t v36 = v4[4];
      uint64_t v30 = v3;
      uint64_t v31 = v6;
      os_unfair_lock_unlock(lock);
      sub_19F0826E4(v6);
      sub_19EF58BA4(v6, v5, v30, v7, v39, v36, v42, v9, v10, v11, v12, v13, 2);
      break;
    case 3:
      uint64_t v40 = v4[3];
      uint64_t v43 = v4[5];
      uint64_t v37 = v4[4];
      uint64_t v32 = v3;
      uint64_t v33 = v6;
      os_unfair_lock_unlock(lock);
      sub_19F0826E4(v6);
      sub_19EF58BA4(v6, v5, v32, v7, v40, v37, v43, v9, v10, v11, v12, v13, 3);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v46, &qword_1EB3906F0);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v6 = sub_19F09DDF0(0, v6[2] + 1, 1, v6);
      }
      unint64_t v15 = v6[2];
      unint64_t v14 = v6[3];
      if (v15 >= v14 >> 1) {
        unint64_t v6 = sub_19F09DDF0((void *)(v14 > 1), v15 + 1, 1, v6);
      }
      v6[2] = v15 + 1;
      sub_19EEBDC4C((uint64_t)v46, (uint64_t)&v6[10 * v15 + 4], &qword_1EB3906F0);
      unint64_t v16 = (void *)v2[3];
      uint64_t v17 = v2[4];
      uint64_t v18 = v2[5];
      uint64_t v19 = v2[6];
      uint64_t v20 = v2[7];
      uint64_t v21 = v2[8];
      uint64_t v22 = v2[9];
      uint64_t v23 = v2[10];
      long long v24 = *(_OWORD *)(v2 + 11);
      uint64_t v25 = v2[13];
      uint64_t v26 = v2[14];
      char v27 = *((unsigned char *)v2 + 120);
      v2[3] = v6;
      *(_OWORD *)uint64_t v4 = 0u;
      *((_OWORD *)v4 + 1) = 0u;
      *((_OWORD *)v4 + 2) = 0u;
      *((_OWORD *)v4 + 3) = 0u;
      *((_OWORD *)v4 + 4) = 0u;
      *(_OWORD *)((char *)v4 + 73) = 0u;
      sub_19EF58BA4(v16, v17, v18, v19, v20, v21, v22, v23, v24, *((uint64_t *)&v24 + 1), v25, v26, v27);
      os_unfair_lock_unlock(lock);
      break;
  }
}

void sub_19EF550B4(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      os_unfair_lock_unlock(v3);
      sub_19F1B5B68(v4 & 1);
      break;
    case 2:
      uint64_t v10 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F08266C(v4);
      uint64_t v11 = v4;
      char v12 = 2;
      goto LABEL_10;
    case 3:
      uint64_t v13 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F08266C(v4);
      uint64_t v11 = v4;
      char v12 = 3;
LABEL_10:
      sub_19EE7F054(v11, v12);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v17, &qword_1E946EB20);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_19F09E208(0, v4[2] + 1, 1, v4);
      }
      unint64_t v5 = v4[2];
      unint64_t v6 = v4[3];
      unint64_t v7 = v5 + 1;
      if (v5 >= v6 >> 1)
      {
        unint64_t v14 = v4;
        unint64_t v15 = v4[2];
        unint64_t v16 = sub_19F09E208((void *)(v6 > 1), v5 + 1, 1, v14);
        unint64_t v5 = v15;
        uint64_t v4 = v16;
      }
      v4[2] = v7;
      sub_19EEBDC4C((uint64_t)v17, (uint64_t)&v4[10 * v5 + 4], &qword_1E946EB20);
      uint64_t v8 = *(void **)(v1 + 24);
      *(void *)(v1 + 24) = v4;
      char v9 = *(unsigned char *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 0;
      sub_19EE7F054(v8, v9);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF55268(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  unint64_t v6 = *(void **)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  switch(*(unsigned char *)(v1 + 72))
  {
    case 1:
      *(void *)&long long v28 = *(void *)(v1 + 24);
      *((void *)&v28 + 1) = v4;
      uint64_t v29 = v5;
      uint64_t v30 = v8;
      uint64_t v31 = v7;
      uint64_t v32 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(v3);
      sub_19F1B5CA4(&v28);
      uint64_t v19 = v6;
      uint64_t v20 = v4;
      uint64_t v21 = v5;
      uint64_t v22 = v8;
      uint64_t v23 = v7;
      uint64_t v24 = v9;
      char v25 = 1;
      goto LABEL_10;
    case 2:
      uint64_t v26 = v6;
      os_unfair_lock_unlock(v3);
      sub_19F082694(v6);
      uint64_t v19 = v6;
      uint64_t v20 = v4;
      uint64_t v21 = v5;
      uint64_t v22 = v8;
      uint64_t v23 = v7;
      uint64_t v24 = v9;
      char v25 = 2;
      goto LABEL_10;
    case 3:
      char v27 = v6;
      os_unfair_lock_unlock(v3);
      sub_19F082694(v6);
      uint64_t v19 = v6;
      uint64_t v20 = v4;
      uint64_t v21 = v5;
      uint64_t v22 = v8;
      uint64_t v23 = v7;
      uint64_t v24 = v9;
      char v25 = 3;
LABEL_10:
      sub_19EE4E7A4(v19, v20, v21, v22, v23, v24, v25);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)&v28, (uint64_t *)&unk_1EB3904F0);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v6 = sub_19F09E21C(0, v6[2] + 1, 1, v6);
      }
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1) {
        unint64_t v6 = sub_19F09E21C((void *)(v10 > 1), v11 + 1, 1, v6);
      }
      v6[2] = v11 + 1;
      sub_19EEBDC4C((uint64_t)&v28, (uint64_t)&v6[10 * v11 + 4], (uint64_t *)&unk_1EB3904F0);
      char v12 = *(void **)(v1 + 24);
      uint64_t v13 = *(void *)(v1 + 32);
      uint64_t v14 = *(void *)(v1 + 40);
      uint64_t v15 = *(void *)(v1 + 48);
      uint64_t v16 = *(void *)(v1 + 56);
      uint64_t v17 = *(void *)(v1 + 64);
      *(void *)(v1 + 24) = v6;
      *(_OWORD *)(v1 + 32) = 0u;
      *(_OWORD *)(v1 + 48) = 0u;
      char v18 = *(unsigned char *)(v1 + 72);
      *(_OWORD *)(v1 + 57) = 0u;
      sub_19EE4E7A4(v12, v13, v14, v15, v16, v17, v18);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF554A8(uint64_t a1)
{
}

void sub_19EF554F0(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = v1 + 24;
  swift_beginAccess();
  sub_19EEC3ED8(v4, (uint64_t)v15, (uint64_t *)&unk_1E9471020);
  switch(v16)
  {
    case 1:
      sub_19EEBB420(v15, (uint64_t)v13);
      os_unfair_lock_unlock(v3);
      sub_19F1B61B8((uint64_t)v13);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      break;
    case 2:
    case 3:
      uint64_t v5 = *(void **)&v15[0];
      os_unfair_lock_unlock(v3);
      sub_19F082734(v5);

      break;
    default:
      unint64_t v6 = *(void **)&v15[0];
      sub_19EEC3ED8(a1, (uint64_t)v13, (uint64_t *)&unk_1E9473890);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v6 = sub_19F09E710(0, v6[2] + 1, 1, v6);
      }
      unint64_t v7 = v6[2];
      unint64_t v8 = v6[3];
      unint64_t v9 = v7 + 1;
      if (v7 >= v8 >> 1)
      {
        unint64_t v10 = v6;
        unint64_t v11 = v6[2];
        char v12 = sub_19F09E710((void *)(v8 > 1), v7 + 1, 1, v10);
        unint64_t v7 = v11;
        unint64_t v6 = v12;
      }
      v6[2] = v9;
      sub_19EEBDC4C((uint64_t)v13, (uint64_t)&v6[10 * v7 + 4], (uint64_t *)&unk_1E9473890);
      v13[0] = v6;
      char v14 = 0;
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v13, v4, (uint64_t *)&unk_1E9471020);
      swift_endAccess();
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF556BC(uint64_t a1)
{
}

void sub_19EF55704(uint64_t a1, uint64_t *a2, uint64_t (*a3)(BOOL, uint64_t, uint64_t, void *), void (*a4)(void *), void (*a5)(void *))
{
  unint64_t v11 = (os_unfair_lock_s *)(*(void *)(v5 + 16) + 16);
  os_unfair_lock_lock(v11);
  swift_beginAccess();
  char v12 = *(void **)(v5 + 24);
  switch(*(unsigned char *)(v5 + 32))
  {
    case 1:
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(v11);
      a4(v12);
      uint64_t v17 = (void (*)(id))MEMORY[0x1E4FBC898];
      char v18 = v12;
      char v19 = 1;
      goto LABEL_10;
    case 2:
      uint64_t v20 = v12;
      os_unfair_lock_unlock(v11);
      a5(v12);
      uint64_t v17 = (void (*)(id))MEMORY[0x1E4FBC898];
      char v18 = v12;
      char v19 = 2;
      goto LABEL_10;
    case 3:
      uint64_t v21 = v12;
      os_unfair_lock_unlock(v11);
      a5(v12);
      uint64_t v17 = (void (*)(id))MEMORY[0x1E4FBC898];
      char v18 = v12;
      char v19 = 3;
LABEL_10:
      sub_19EE8DDF0(v18, v19, v17);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v22, a2);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = (void *)a3(0, v12[2] + 1, 1, v12);
      }
      unint64_t v14 = v12[2];
      unint64_t v13 = v12[3];
      if (v14 >= v13 >> 1) {
        char v12 = (void *)a3(v13 > 1, v14 + 1, 1, v12);
      }
      _OWORD v12[2] = v14 + 1;
      sub_19EEBDC4C((uint64_t)v22, (uint64_t)&v12[10 * v14 + 4], a2);
      uint64_t v15 = *(void **)(v5 + 24);
      *(void *)(v5 + 24) = v12;
      char v16 = *(unsigned char *)(v5 + 32);
      *(unsigned char *)(v5 + 32) = 0;
      sub_19EE8DDF0(v15, v16, MEMORY[0x1E4FBC898]);
      os_unfair_lock_unlock(v11);
      break;
  }
}

void sub_19EF55948(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = v1 + 24;
  swift_beginAccess();
  sub_19EEC3ED8(v4, (uint64_t)v15, (uint64_t *)&unk_1E9471000);
  switch(v16)
  {
    case 1:
      void v13[2] = v15[2];
      v13[3] = v15[3];
      void v13[4] = v15[4];
      v13[0] = v15[0];
      v13[1] = v15[1];
      os_unfair_lock_unlock(v3);
      sub_19F1B642C((uint64_t)v13);
      sub_19EEDFEE4((uint64_t)v13);
      break;
    case 2:
    case 3:
      uint64_t v5 = *(void **)&v15[0];
      os_unfair_lock_unlock(v3);
      sub_19F0827AC(v5);

      break;
    default:
      unint64_t v6 = *(void **)&v15[0];
      sub_19EEC3ED8(a1, (uint64_t)v13, (uint64_t *)&unk_1E9473870);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v6 = sub_19F09E894(0, v6[2] + 1, 1, v6);
      }
      unint64_t v7 = v6[2];
      unint64_t v8 = v6[3];
      unint64_t v9 = v7 + 1;
      if (v7 >= v8 >> 1)
      {
        unint64_t v10 = v6;
        unint64_t v11 = v6[2];
        char v12 = sub_19F09E894((void *)(v8 > 1), v7 + 1, 1, v10);
        unint64_t v7 = v11;
        unint64_t v6 = v12;
      }
      v6[2] = v9;
      sub_19EEBDC4C((uint64_t)v13, (uint64_t)&v6[10 * v7 + 4], (uint64_t *)&unk_1E9473870);
      *(void *)&v13[0] = v6;
      char v14 = 0;
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v13, v4, (uint64_t *)&unk_1E9471000);
      swift_endAccess();
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF55B2C(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = v1 + 24;
  swift_beginAccess();
  sub_19EEC3ED8(v4, (uint64_t)v15, (uint64_t *)&unk_1E9471010);
  switch(v16)
  {
    case 1:
      sub_19EEBB420(v15, (uint64_t)v13);
      os_unfair_lock_unlock(v3);
      sub_19F1B65A4((uint64_t)v13);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      break;
    case 2:
    case 3:
      uint64_t v5 = *(void **)&v15[0];
      os_unfair_lock_unlock(v3);
      sub_19F0827D4(v5);

      break;
    default:
      unint64_t v6 = *(void **)&v15[0];
      sub_19EEC3ED8(a1, (uint64_t)v13, (uint64_t *)&unk_1E9473880);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v6 = sub_19F09E8A8(0, v6[2] + 1, 1, v6);
      }
      unint64_t v7 = v6[2];
      unint64_t v8 = v6[3];
      unint64_t v9 = v7 + 1;
      if (v7 >= v8 >> 1)
      {
        unint64_t v10 = v6;
        unint64_t v11 = v6[2];
        char v12 = sub_19F09E8A8((void *)(v8 > 1), v7 + 1, 1, v10);
        unint64_t v7 = v11;
        unint64_t v6 = v12;
      }
      v6[2] = v9;
      sub_19EEBDC4C((uint64_t)v13, (uint64_t)&v6[10 * v7 + 4], (uint64_t *)&unk_1E9473880);
      v13[0] = v6;
      char v14 = 0;
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v13, v4, (uint64_t *)&unk_1E9471010);
      swift_endAccess();
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF55CF8(uint64_t a1)
{
}

void sub_19EF55D40(uint64_t a1)
{
}

void sub_19EF55D98(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for JetPackAsset(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470FC0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = &v19[-v10 - 8];
  char v12 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v12);
  uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v13, (uint64_t)v11, (uint64_t *)&unk_1E9470FC0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_19EE971B4((uint64_t)v11, (uint64_t)v5, type metadata accessor for JetPackAsset);
      os_unfair_lock_unlock(v12);
      sub_19F1B6840((uint64_t)v5);
      sub_19EE6587C((uint64_t)v5, type metadata accessor for JetPackAsset);
      break;
    case 2u:
    case 3u:
      char v14 = (void *)*v11;
      os_unfair_lock_unlock(v12);
      sub_19F082874(v14);

      break;
    default:
      uint64_t v15 = (void *)*v11;
      sub_19EEC3ED8(a1, (uint64_t)v19, (uint64_t *)&unk_1E9473840);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_19F09E8E4(0, v15[2] + 1, 1, v15);
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1) {
        uint64_t v15 = sub_19F09E8E4((void *)(v16 > 1), v17 + 1, 1, v15);
      }
      long long v15[2] = v17 + 1;
      sub_19EEBDC4C((uint64_t)v19, (uint64_t)&v15[10 * v17 + 4], (uint64_t *)&unk_1E9473840);
      *unint64_t v8 = v15;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v8, v13, (uint64_t *)&unk_1E9470FC0);
      swift_endAccess();
      os_unfair_lock_unlock(v12);
      break;
  }
}

void sub_19EF56070(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = v1 + 24;
  swift_beginAccess();
  sub_19EEC3ED8(v4, (uint64_t)v16, (uint64_t *)&unk_1E9470FE0);
  switch(v18)
  {
    case 1:
      v13[0] = v16[0];
      v13[1] = v16[1];
      void v13[2] = v16[2];
      uint64_t v14 = v17;
      os_unfair_lock_unlock(v3);
      sub_19F1B6A50((uint64_t)v13);
      sub_19EF58B50((uint64_t)v13);
      break;
    case 2:
    case 3:
      uint64_t v5 = *(void **)&v16[0];
      os_unfair_lock_unlock(v3);
      sub_19F08289C(v5);

      break;
    default:
      uint64_t v6 = *(void **)&v16[0];
      sub_19EEC3ED8(a1, (uint64_t)v13, (uint64_t *)&unk_1E9473860);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_19F09E8F8(0, v6[2] + 1, 1, v6);
      }
      unint64_t v7 = v6[2];
      unint64_t v8 = v6[3];
      unint64_t v9 = v7 + 1;
      if (v7 >= v8 >> 1)
      {
        uint64_t v10 = v6;
        unint64_t v11 = v6[2];
        char v12 = sub_19F09E8F8((void *)(v8 > 1), v7 + 1, 1, v10);
        unint64_t v7 = v11;
        uint64_t v6 = v12;
      }
      v6[2] = v9;
      sub_19EEBDC4C((uint64_t)v13, (uint64_t)&v6[10 * v7 + 4], (uint64_t *)&unk_1E9473860);
      *(void *)&v13[0] = v6;
      char v15 = 0;
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v13, v4, (uint64_t *)&unk_1E9470FE0);
      swift_endAccess();
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF56264(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = v1 + 24;
  swift_beginAccess();
  sub_19EEC3ED8(v4, (uint64_t)v16, (uint64_t *)&unk_1E9470FD0);
  switch(v18)
  {
    case 1:
      v13[0] = v16[0];
      v13[1] = v16[1];
      void v13[2] = v16[2];
      uint64_t v14 = v17;
      os_unfair_lock_unlock(v3);
      sub_19F1B6A8C((uint64_t)v13);
      sub_19EF58AFC((uint64_t)v13);
      break;
    case 2:
    case 3:
      uint64_t v5 = *(void **)&v16[0];
      os_unfair_lock_unlock(v3);
      sub_19F0828EC(v5);

      break;
    default:
      uint64_t v6 = *(void **)&v16[0];
      sub_19EEC3ED8(a1, (uint64_t)v13, (uint64_t *)&unk_1E9473850);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_19F09E920(0, v6[2] + 1, 1, v6);
      }
      unint64_t v7 = v6[2];
      unint64_t v8 = v6[3];
      unint64_t v9 = v7 + 1;
      if (v7 >= v8 >> 1)
      {
        uint64_t v10 = v6;
        unint64_t v11 = v6[2];
        char v12 = sub_19F09E920((void *)(v8 > 1), v7 + 1, 1, v10);
        unint64_t v7 = v11;
        uint64_t v6 = v12;
      }
      v6[2] = v9;
      sub_19EEBDC4C((uint64_t)v13, (uint64_t)&v6[10 * v7 + 4], (uint64_t *)&unk_1E9473850);
      *(void *)&v13[0] = v6;
      char v15 = 0;
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v13, v4, (uint64_t *)&unk_1E9470FD0);
      swift_endAccess();
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF56448(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for JSPackageIndex();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470FB0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = &v19[-v10 - 8];
  char v12 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v12);
  uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v13, (uint64_t)v11, (uint64_t *)&unk_1E9470FB0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_19EE971B4((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
      os_unfair_lock_unlock(v12);
      sub_19F1B6C44((uint64_t)v5);
      sub_19EE6587C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
      break;
    case 2u:
    case 3u:
      uint64_t v14 = (void *)*v11;
      os_unfair_lock_unlock(v12);
      sub_19F082914(v14);

      break;
    default:
      char v15 = (void *)*v11;
      sub_19EEC3ED8(a1, (uint64_t)v19, (uint64_t *)&unk_1E9476570);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v15 = sub_19F09E934(0, v15[2] + 1, 1, v15);
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1) {
        char v15 = sub_19F09E934((void *)(v16 > 1), v17 + 1, 1, v15);
      }
      long long v15[2] = v17 + 1;
      sub_19EEBDC4C((uint64_t)v19, (uint64_t)&v15[10 * v17 + 4], (uint64_t *)&unk_1E9476570);
      *unint64_t v8 = v15;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_19EE6EEAC((uint64_t)v8, v13, (uint64_t *)&unk_1E9470FB0);
      swift_endAccess();
      os_unfair_lock_unlock(v12);
      break;
  }
}

void sub_19EF56720(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  unint64_t v5 = *(void *)(v1 + 32);
  switch(*(unsigned char *)(v1 + 40))
  {
    case 1:
      sub_19EEA0784(*(void *)(v1 + 24), *(void *)(v1 + 32));
      os_unfair_lock_unlock(v3);
      sub_19F1B4B38((uint64_t)v4, v5);
      unint64_t v11 = v4;
      uint64_t v12 = v5;
      char v13 = 1;
      goto LABEL_10;
    case 2:
      uint64_t v14 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F08243C(v4);
      unint64_t v11 = v4;
      uint64_t v12 = v5;
      char v13 = 2;
      goto LABEL_10;
    case 3:
      char v15 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F08243C(v4);
      unint64_t v11 = v4;
      uint64_t v12 = v5;
      char v13 = 3;
LABEL_10:
      sub_19EF58AA8(v11, v12, v13, (void (*)(id))sub_19EEA072C);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v16, &qword_1E9473830);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_19F09E948(0, v4[2] + 1, 1, v4);
      }
      unint64_t v7 = v4[2];
      unint64_t v6 = v4[3];
      if (v7 >= v6 >> 1) {
        uint64_t v4 = sub_19F09E948((void *)(v6 > 1), v7 + 1, 1, v4);
      }
      v4[2] = v7 + 1;
      sub_19EEBDC4C((uint64_t)v16, (uint64_t)&v4[10 * v7 + 4], &qword_1E9473830);
      unint64_t v8 = *(void **)(v1 + 24);
      uint64_t v9 = *(void *)(v1 + 32);
      *(void *)(v1 + 24) = v4;
      *(void *)(v1 + 32) = 0;
      char v10 = *(unsigned char *)(v1 + 40);
      *(unsigned char *)(v1 + 40) = 0;
      sub_19EF58AA8(v8, v9, v10, (void (*)(id))sub_19EEA072C);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF56944(uint64_t a1)
{
}

void sub_19EF5698C(uint64_t a1)
{
}

void sub_19EF569D4(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  switch(*(unsigned char *)(v1 + 48))
  {
    case 1:
      sub_19EF58A68(*(void *)(v1 + 24));
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(v3);
      sub_19F1B6EB8((uint64_t)v4, v5, v6);
      char v13 = v4;
      uint64_t v14 = v5;
      uint64_t v15 = v6;
      char v16 = 1;
      goto LABEL_10;
    case 2:
      unint64_t v17 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F08298C(v4);
      char v13 = v4;
      uint64_t v14 = v5;
      uint64_t v15 = v6;
      char v16 = 2;
      goto LABEL_10;
    case 3:
      char v18 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F08298C(v4);
      char v13 = v4;
      uint64_t v14 = v5;
      uint64_t v15 = v6;
      char v16 = 3;
LABEL_10:
      sub_19EF5898C(v13, v14, v15, v16);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v19, &qword_1E946CDA0);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_19F09E9AC(0, v4[2] + 1, 1, v4);
      }
      unint64_t v8 = v4[2];
      unint64_t v7 = v4[3];
      if (v8 >= v7 >> 1) {
        uint64_t v4 = sub_19F09E9AC((void *)(v7 > 1), v8 + 1, 1, v4);
      }
      v4[2] = v8 + 1;
      sub_19EEBDC4C((uint64_t)v19, (uint64_t)&v4[10 * v8 + 4], &qword_1E946CDA0);
      uint64_t v9 = *(void **)(v1 + 24);
      uint64_t v10 = *(void *)(v1 + 32);
      uint64_t v11 = *(void *)(v1 + 40);
      *(void *)(v1 + 24) = v4;
      *(void *)(v1 + 32) = 0;
      *(void *)(v1 + 40) = 0;
      char v12 = *(unsigned char *)(v1 + 48);
      *(unsigned char *)(v1 + 48) = 0;
      sub_19EF5898C(v9, v10, v11, v12);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF56BD8(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  switch(*(unsigned char *)(v1 + 40))
  {
    case 1:
      sub_19EF58A68(*(void *)(v1 + 24));
      os_unfair_lock_unlock(v3);
      sub_19F1B702C((uint64_t)v4, v5);
      uint64_t v11 = v4;
      uint64_t v12 = v5;
      char v13 = 1;
      goto LABEL_10;
    case 2:
      uint64_t v14 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F0829B4(v4);
      uint64_t v11 = v4;
      uint64_t v12 = v5;
      char v13 = 2;
      goto LABEL_10;
    case 3:
      uint64_t v15 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F0829B4(v4);
      uint64_t v11 = v4;
      uint64_t v12 = v5;
      char v13 = 3;
LABEL_10:
      sub_19EF58AA8(v11, v12, v13, (void (*)(id))sub_19EF58A28);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v16, &qword_1E946CB98);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_19F09E9C0(0, v4[2] + 1, 1, v4);
      }
      unint64_t v7 = v4[2];
      unint64_t v6 = v4[3];
      if (v7 >= v6 >> 1) {
        uint64_t v4 = sub_19F09E9C0((void *)(v6 > 1), v7 + 1, 1, v4);
      }
      v4[2] = v7 + 1;
      sub_19EEBDC4C((uint64_t)v16, (uint64_t)&v4[10 * v7 + 4], &qword_1E946CB98);
      unint64_t v8 = *(void **)(v1 + 24);
      uint64_t v9 = *(void *)(v1 + 32);
      *(void *)(v1 + 24) = v4;
      *(void *)(v1 + 32) = 0;
      char v10 = *(unsigned char *)(v1 + 40);
      *(unsigned char *)(v1 + 40) = 0;
      sub_19EF58AA8(v8, v9, v10, (void (*)(id))sub_19EF58A28);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF56DFC(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  switch(*(unsigned char *)(v1 + 48))
  {
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(v3);
      sub_19F1B71D0((uint64_t)v4, v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 2:
      char v13 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F082A04(v4);
      uint64_t v14 = v4;
      uint64_t v15 = v5;
      uint64_t v16 = v6;
      char v17 = 2;
      goto LABEL_10;
    case 3:
      char v18 = v4;
      os_unfair_lock_unlock(v3);
      sub_19F082A04(v4);
      uint64_t v14 = v4;
      uint64_t v15 = v5;
      uint64_t v16 = v6;
      char v17 = 3;
LABEL_10:
      sub_19EF58890(v14, v15, v16, v17);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v19, (uint64_t *)&unk_1E9470F70);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_19F09EC90(0, v4[2] + 1, 1, v4);
      }
      unint64_t v8 = v4[2];
      unint64_t v7 = v4[3];
      if (v8 >= v7 >> 1) {
        uint64_t v4 = sub_19F09EC90((void *)(v7 > 1), v8 + 1, 1, v4);
      }
      v4[2] = v8 + 1;
      sub_19EEBDC4C((uint64_t)v19, (uint64_t)&v4[10 * v8 + 4], (uint64_t *)&unk_1E9470F70);
      uint64_t v9 = *(void **)(v1 + 24);
      uint64_t v10 = *(void *)(v1 + 32);
      uint64_t v11 = *(void *)(v1 + 40);
      *(void *)(v1 + 24) = v4;
      *(void *)(v1 + 32) = 0;
      *(void *)(v1 + 40) = 0;
      char v12 = *(unsigned char *)(v1 + 48);
      *(unsigned char *)(v1 + 48) = 0;
      sub_19EF58890(v9, v10, v11, v12);
      os_unfair_lock_unlock(v3);
      break;
  }
}

void sub_19EF5700C(uint64_t a1)
{
}

void sub_19EF57054(uint64_t a1, uint64_t *a2, uint64_t (*a3)(BOOL, uint64_t, uint64_t, void *), void (*a4)(void *), void (*a5)(void *))
{
  uint64_t v11 = (os_unfair_lock_s *)(*(void *)(v5 + 16) + 16);
  os_unfair_lock_lock(v11);
  swift_beginAccess();
  char v12 = *(void **)(v5 + 24);
  switch(*(unsigned char *)(v5 + 32))
  {
    case 1:
      swift_unknownObjectRetain();
      os_unfair_lock_unlock(v11);
      a4(v12);
      char v17 = (void (*)(id))MEMORY[0x1E4FBC8F8];
      char v18 = v12;
      char v19 = 1;
      goto LABEL_10;
    case 2:
      uint64_t v20 = v12;
      os_unfair_lock_unlock(v11);
      a5(v12);
      char v17 = (void (*)(id))MEMORY[0x1E4FBC8F8];
      char v18 = v12;
      char v19 = 2;
      goto LABEL_10;
    case 3:
      uint64_t v21 = v12;
      os_unfair_lock_unlock(v11);
      a5(v12);
      char v17 = (void (*)(id))MEMORY[0x1E4FBC8F8];
      char v18 = v12;
      char v19 = 3;
LABEL_10:
      sub_19EE8DDF0(v18, v19, v17);
      break;
    default:
      sub_19EEC3ED8(a1, (uint64_t)v22, a2);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = (void *)a3(0, v12[2] + 1, 1, v12);
      }
      unint64_t v14 = v12[2];
      unint64_t v13 = v12[3];
      if (v14 >= v13 >> 1) {
        char v12 = (void *)a3(v13 > 1, v14 + 1, 1, v12);
      }
      _OWORD v12[2] = v14 + 1;
      sub_19EEBDC4C((uint64_t)v22, (uint64_t)&v12[10 * v14 + 4], a2);
      uint64_t v15 = *(void **)(v5 + 24);
      *(void *)(v5 + 24) = v12;
      char v16 = *(unsigned char *)(v5 + 32);
      *(unsigned char *)(v5 + 32) = 0;
      sub_19EE8DDF0(v15, v16, MEMORY[0x1E4FBC8F8]);
      os_unfair_lock_unlock(v11);
      break;
  }
}

void sub_19EF57298(uint64_t a1)
{
}

uint64_t sub_19EF572E0(uint64_t *a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_19F1DD72C();
    uint64_t v4 = *a1;
    uint64_t v31 = a1[1];
    sub_19F1DD74C();
    if (v31)
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = a1[2];
    uint64_t v6 = a1[3];
    uint64_t v8 = a1[5];
    uint64_t v7 = a1[6];
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
    sub_19F1DD74C();
    if (v7)
    {
      swift_bridgeObjectRetain();
      sub_19F1DBE9C();
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = sub_19F1DD78C();
    uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v11 = v9 & ~v10;
    uint64_t v12 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
    {
      uint64_t v29 = v4;
      uint64_t v30 = v7;
      uint64_t v28 = v8;
      uint64_t v13 = ~v10;
      uint64_t v14 = *(void *)(a2 + 48);
      uint64_t v15 = v31;
      do
      {
        char v16 = (uint64_t *)(v14 + 56 * v11);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        uint64_t v20 = v16[5];
        uint64_t v19 = v16[6];
        if (v16[2] != v5 || v16[3] != v6)
        {
          char v22 = sub_19F1DD44C();
          uint64_t v15 = v31;
          if ((v22 & 1) == 0) {
            goto LABEL_9;
          }
        }
        if (v17)
        {
          if (!v15) {
            goto LABEL_9;
          }
          if (v18 != v29 || v17 != v15)
          {
            char v24 = sub_19F1DD44C();
            uint64_t v15 = v31;
            if ((v24 & 1) == 0) {
              goto LABEL_9;
            }
          }
        }
        else if (v15)
        {
          goto LABEL_9;
        }
        if (v19)
        {
          if (v30)
          {
            if (v20 == v28 && v19 == v30) {
              return 1;
            }
            char v26 = sub_19F1DD44C();
            uint64_t v15 = v31;
            if (v26) {
              return 1;
            }
          }
        }
        else if (!v30)
        {
          return 1;
        }
LABEL_9:
        unint64_t v11 = (v11 + 1) & v13;
      }
      while (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_19EF57510(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_19EEA5EA4((unint64_t *)&qword_1EB392868, MEMORY[0x1E4F276F0]),
        uint64_t v7 = sub_19F1DBC8C(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_19EEA5EA4((unint64_t *)&qword_1EB392870, MEMORY[0x1E4F276F0]);
      char v15 = sub_19F1DBD3C();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_19EF57724(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (uint64_t v4 = sub_19F1DCC4C(),
        uint64_t v5 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v6 = v4 & ~v5,
        ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    uint64_t v7 = ~v5;
    do
    {
      sub_19EE77E34(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v10);
      char v8 = MEMORY[0x19F3C6F50](v10, a1);
      sub_19EE7760C((uint64_t)v10);
      if (v8) {
        break;
      }
      unint64_t v6 = (v6 + 1) & v7;
    }
    while (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_19EF577FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_19F1DB34C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_19EEA5EA4((unint64_t *)&qword_1EB392868, MEMORY[0x1E4F276F0]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_19F1DBC8C();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    char v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    char v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_19EEA5EA4((unint64_t *)&qword_1EB392870, MEMORY[0x1E4F276F0]);
      char v19 = sub_19F1DBD3C();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19F03E54C();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_19EF57CA4(v12);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

unint64_t sub_19EF57ADC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v10 = sub_19F1DD78C();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_19EF57CA4(int64_t a1)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_19F1DCC2C();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      BOOL v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_19EEA5EA4((unint64_t *)&qword_1EB392868, MEMORY[0x1E4F276F0]);
        uint64_t v21 = sub_19F1DBC8C();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_19EF57FC0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19EF57FF8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 248, 7);
}

unint64_t sub_19EF58098()
{
  unint64_t result = qword_1E946F518[0];
  if (!qword_1E946F518[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E946F518);
  }
  return result;
}

unint64_t sub_19EF580F0()
{
  unint64_t result = qword_1E9470F68;
  if (!qword_1E9470F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9470F68);
  }
  return result;
}

uint64_t assignWithCopy for MetricsPipeline(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  uint64_t v4 = *(void *)(a2 + 96);
  if (!*(void *)(a1 + 96))
  {
    if (v4)
    {
      *(void *)(a1 + 96) = v4;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 72, a2 + 72);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 72);
    long long v6 = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_OWORD *)(a1 + 72) = v5;
    *(_OWORD *)(a1 + 88) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for MetricsPipeline.FlushBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF58354);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPipeline.FlushBehavior()
{
  return &type metadata for MetricsPipeline.FlushBehavior;
}

uint64_t assignWithCopy for MetricsPipeline.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  unsigned int v4 = *(void **)(a2 + 96);
  uint64_t v5 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v4;
  id v6 = v4;

  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 160);
  if (!*(void *)(a1 + 160))
  {
    if (v7)
    {
      *(void *)(a1 + 160) = v7;
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 136, a2 + 136);
      goto LABEL_8;
    }
LABEL_7:
    long long v8 = *(_OWORD *)(a2 + 136);
    long long v9 = *(_OWORD *)(a2 + 152);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(_OWORD *)(a1 + 136) = v8;
    *(_OWORD *)(a1 + 152) = v9;
    goto LABEL_8;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 136);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 136), (uint64_t *)(a2 + 136));
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 176), (uint64_t *)(a2 + 176));
  return a1;
}

uint64_t assignWithTake for MetricsPipeline.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 96);
  id v6 = *(void **)(a1 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;

  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 160)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 136);
  }
  long long v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v7;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 176);
  long long v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  return a1;
}

uint64_t assignWithCopy for MetricsPipeline.Steps(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  uint64_t v4 = *(void *)(a2 + 96);
  if (!*(void *)(a1 + 96))
  {
    if (v4)
    {
      *(void *)(a1 + 96) = v4;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 72, a2 + 72);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 72);
    long long v6 = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_OWORD *)(a1 + 72) = v5;
    *(_OWORD *)(a1 + 88) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  return a1;
}

uint64_t assignWithTake for MetricsPipeline.Steps(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  if (*(void *)(a1 + 96)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
  }
  long long v5 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v5;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 112);
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsPipeline.Steps(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsPipeline.Steps(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPipeline.Steps()
{
  return &type metadata for MetricsPipeline.Steps;
}

uint64_t sub_19EF58848()
{
  return sub_19EEA5EA4(&qword_1EB391208, (void (*)(uint64_t))type metadata accessor for MetricsPipeline.CallingOutActor);
}

void sub_19EF58890(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      goto LABEL_7;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

void sub_19EF58938(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
      swift_bridgeObjectRelease();
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

void sub_19EF5898C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      goto LABEL_7;
    case 1:
      sub_19EF58A28((uint64_t)a1);
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19EF58A28(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19EF58A68(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_19EF58AA8(id a1, uint64_t a2, char a3, void (*a4)(id))
{
  switch(a3)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
      a4(a1);
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19EF58AFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_19EF58B50(uint64_t a1)
{
  return a1;
}

void sub_19EF58BA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  switch(a13)
  {
    case 0:
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

void sub_19EF58CA0(void *a1, unint64_t a2, void *a3, char a4)
{
  switch(a4)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
      sub_19EEA072C((uint64_t)a1, a2);
      a1 = a3;
      goto LABEL_4;
    case 2:
    case 3:
LABEL_4:

      break;
    default:
      return;
  }
}

uint64_t sub_19EF58D5C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  if (*(void *)(v0 + 152)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 128);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 265, 7);
}

uint64_t sub_19EF58DEC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_19EF58E34(void *a1)
{
}

uint64_t sub_19EF58E3C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_19EF58E80(void *a1)
{
}

void sub_19EF58E88(id a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
      sub_19EF4BE88((uint64_t)a1, a2);
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19EF58EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  long long v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return v6(v7);
}

uint64_t sub_19EF58F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_19EF59034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_19EF590DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_19EF59184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_19EF5922C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_19EF59424(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x19EF596F0);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          char v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_19EF59718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for _NetGuts();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t sub_19EF597E0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EF59850()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

BOOL static JSONBridgingType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t JSONBridgingType.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JSONBridgingType.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF59964()
{
  uint64_t result = sub_19F1DBD4C();
  qword_1E9471098 = result;
  return result;
}

uint64_t sub_19EF5999C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  JSONObject.subscript.getter(1701869940, 0xE400000000000000, (uint64_t)v27);
  sub_19EEC3ED8((uint64_t)v27, (uint64_t)v24, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v25;
  if (v25)
  {
    uint64_t v7 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
    uint64_t v10 = v9;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    sub_19EEC3418((uint64_t)v27);
    if (v10)
    {
      BOOL v11 = v8 == 0x63697373616C63 && v10 == 0xE700000000000000;
      if (v11 || (sub_19F1DD44C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = 0;
        char v13 = 0;
LABEL_9:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E94710C8);
        uint64_t v14 = swift_allocObject();
        *(_DWORD *)(v14 + 24) = 0;
        *(void *)(v14 + 16) = v12;
        uint64_t result = sub_19EEC3418(a1);
        *(unsigned char *)a3 = v13;
        *(void *)(a3 + 8) = v14;
        return result;
      }
      if (v8 == 0x746365726964 && v10 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      char v19 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      if (v19)
      {
LABEL_19:
        JSONObject.subscript.getter(0x736C65646F6DLL, 0xE600000000000000, (uint64_t)v27);
        sub_19EEC3ED8((uint64_t)v27, (uint64_t)v24, (uint64_t *)&unk_1E946FD20);
        uint64_t v20 = v25;
        if (v25)
        {
          uint64_t v21 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          char v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 104))(v20, v21);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
          sub_19EEC3418((uint64_t)v27);
          if ((v22 & 1) == 0)
          {
            JSONObject.subscript.getter(0x736C65646F6DLL, 0xE600000000000000, (uint64_t)v27);
            uint64_t v23 = sub_19F122948((uint64_t)v27, v5);
            uint64_t v12 = sub_19EFAAF10(v23);
            swift_bridgeObjectRelease();
            char v13 = 1;
            goto LABEL_9;
          }
        }
        else
        {
          sub_19EEBD664((uint64_t)v24, (uint64_t *)&unk_1E946FD20);
          sub_19EEC3418((uint64_t)v27);
        }
        swift_bridgeObjectRelease();
        uint64_t v12 = 0;
        char v13 = 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v24, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v27);
  }
  swift_bridgeObjectRelease();
  sub_19EF5B580();
  swift_allocError();
  *(_OWORD *)uint64_t v16 = xmmword_19F24F060;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  *(void *)(v16 + 16) = 0x40000001EF145408uLL;
  *(void *)(v16 + 24) = v17;
  swift_willThrow();
  return sub_19EEC3418(a1);
}

void sub_19EF59CC0(void *a1@<X0>, char *a2@<X8>)
{
  if (*(unsigned char *)v2 == 1)
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v2 + 8);
    uint64_t v6 = v5 + 4;
    uint64_t v7 = v5 + 6;
    os_unfair_lock_lock(v5 + 6);
    sub_19EF4D904(v6, &v12);
    os_unfair_lock_unlock(v7);
    uint64_t v8 = v12;
    if (v12)
    {
      id v9 = a1;
      char v10 = sub_19EF5C43C(v8, (uint64_t)v9, (uint64_t (*)(uint64_t, uint64_t, void *))sub_19EF5C434);
      swift_bridgeObjectRelease();

      char v11 = v10 & 1;
    }
    else
    {
      char v11 = 1;
    }
  }
  else
  {
    char v11 = 0;
  }
  *a2 = v11;
}

uint64_t sub_19EF59D94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EF5999C(a1, a2, a3);
}

uint64_t sub_19EF59DAC(char *a1, uint64_t a2, uint64_t a3)
{
  char v3 = *a1;
  uint64_t v4 = (uint64_t *)(a3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(a3 + 24);
  uint64_t v6 = (os_unfair_lock_s *)(a3 + 24);
  if (v3)
  {
    os_unfair_lock_lock(v6);
    sub_19EF5C644(v4, &v9);
  }
  else
  {
    os_unfair_lock_lock(v6);
    sub_19EF5C660(v4, &v9);
  }
  os_unfair_lock_unlock(v5);
  unint64_t v7 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94710A0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v7;
  return result;
}

uint64_t sub_19EF59E58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94710C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_19F020C68(inited, v5);
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  *a3 = v7;
  return result;
}

uint64_t sub_19EF59F0C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  v6[5] = a2;
  uint64_t v7 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_19F042B14(v6, a2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_arrayDestroy();
  *a3 = v7;
  return result;
}

void sub_19EF59FA4(void *a1@<X1>, unsigned char *a2@<X8>)
{
  id v3 = a1;
  uint64_t v4 = swift_bridgeObjectRetain();
  char v5 = sub_19EF5C43C(v4, (uint64_t)v3, (uint64_t (*)(uint64_t, uint64_t, void *))sub_19EF5C7F4);
  swift_bridgeObjectRelease();

  *a2 = v5 & 1;
}

void sub_19EF5A02C(unsigned char *a1@<X8>)
{
  id v3 = *v1 + 6;
  os_unfair_lock_lock(v3);
  sub_19EF5C7DC(&v4);
  os_unfair_lock_unlock(v3);
  *a1 = v4;
}

uint64_t JSONBridgingConfiguration.init(asPartOf:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  *(void *)&long long v23 = a1;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_19EE180FC(v4, (void (**)(uint64_t))&v26);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  if ((void)v26)
  {
    if (qword_1E9470110 != -1) {
      swift_once();
    }
    id v5 = objc_msgSend((id)swift_unknownObjectRetain(), sel_dictionaryForKey_, qword_1E9471098);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DD60);
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = v5;
    v6[3] = sub_19F181E44;
    v6[4] = 0;
    swift_unknownObjectRelease();
    sub_19EF5A734((uint64_t)v6);
    swift_release();
    if (*((void *)&v24 + 1) == 1)
    {
      sub_19EEBD664((uint64_t)&v23, &qword_1E946F7B0);
      if (qword_1E946D450 != -1) {
        swift_once();
      }
      sub_19F1DD95C();
      uint64_t v7 = *((void *)&v27 + 1);
      uint64_t v8 = v28;
      __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v10 = swift_allocObject();
      uint64_t v11 = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
      void v22[3] = v11;
      v22[0] = 0xD000000000000030;
      v22[1] = 0x800000019F2699C0;
      long long v23 = 0u;
      long long v24 = 0u;
      sub_19EEC3E70((uint64_t)v22, (uint64_t)&v23);
      *(unsigned char *)(v10 + 64) = 0;
      long long v12 = v24;
      *(_OWORD *)(v10 + 32) = v23;
      *(_OWORD *)(v10 + 48) = v12;
      *(void *)(v9 + 32) = v10;
      Logger.info(_:)(v9, v7, v8);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E94710A0);
      uint64_t v13 = swift_allocObject();
      *(_DWORD *)(v13 + 24) = 0;
      *(void *)(v13 + 16) = MEMORY[0x1E4FBC870];
      swift_unknownObjectRelease();
      uint64_t result = swift_release();
      uint64_t v17 = 0;
      uint64_t v18 = 0;
    }
    else
    {
      long long v26 = v23;
      long long v27 = v24;
      uint64_t v28 = v25;
      *(void *)&long long v23 = a1;
      swift_retain();
      swift_task_localValuePush();
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_19EE97A4C(v15, (uint64_t *)&v23);
      swift_bridgeObjectRelease();
      swift_task_localValuePop();
      unint64_t v16 = v23;
      if (!(void)v23) {
        unint64_t v16 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
      }
      sub_19EEC355C((uint64_t)&v26, (uint64_t)&v23);
      sub_19EEC355C((uint64_t)&v23, (uint64_t)v22);
      v21[0] = v16;
      sub_19EF5999C((uint64_t)v22, (uint64_t *)v21, (uint64_t)&v19);
      uint64_t v17 = v19;
      uint64_t v18 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E94710A0);
      uint64_t v13 = swift_allocObject();
      *(_DWORD *)(v13 + 24) = 0;
      *(void *)(v13 + 16) = MEMORY[0x1E4FBC870];
      sub_19EEC3418((uint64_t)&v23);
      swift_release();
      swift_unknownObjectRelease();
      uint64_t result = sub_19EEC3418((uint64_t)&v26);
    }
    *a2 = v17;
    a2[1] = v18;
    a2[2] = v13;
  }
  else
  {
    sub_19EF3D500();
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  return result;
}

uint64_t sub_19EF5A734(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 96))();
}

void sub_19EF5A9E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = (void *)sub_19F1DBD4C();
  id v6 = objc_msgSend(a4, sel_valueForProperty_, v5);

  if (!v6)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  if (objc_msgSend(v6, sel_isUndefined))
  {

    return;
  }
  unsigned __int8 v7 = objc_msgSend(v6, sel_isNull);

  if ((v7 & 1) == 0)
  {
    uint64_t v8 = (void *)sub_19F1DBD4C();
    id v9 = objc_msgSend(a4, sel_valueForProperty_, v8);

    if (v9)
    {
      sub_19EF5AB08(v9);

      return;
    }
    goto LABEL_8;
  }
}

BOOL sub_19EF5AB08(void *a1)
{
  uint64_t v4 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  int v5 = *(unsigned __int8 *)(v1 + 16);
  if (objc_msgSend(a1, sel_isString))
  {
    if (v5) {
      return 0;
    }
    swift_bridgeObjectRetain();
    if (objc_msgSend(a1, sel_isString))
    {
      id v6 = objc_msgSend(a1, sel_toString);
      if (v6)
      {
        unsigned __int8 v7 = v6;
        uint64_t v8 = sub_19F1DBD7C();
        uint64_t v10 = v9;

        if ((void *)v8 == v4 && v3 == v10)
        {
          sub_19EF5B92C(v4, v3, 0);
          swift_bridgeObjectRelease();
          return 1;
        }
        char v22 = sub_19F1DD44C();
        sub_19EF5B92C(v4, v3, 0);
        swift_bridgeObjectRelease();
        return (v22 & 1) != 0;
      }
    }
    uint64_t v18 = v4;
    uint64_t v19 = v3;
    char v20 = 0;
LABEL_21:
    sub_19EF5B92C(v18, v19, v20);
    return 0;
  }
  if (objc_msgSend(a1, sel_isNumber))
  {
    if (!v5) {
      return 0;
    }
    id v12 = v4;
    if (objc_msgSend(a1, sel_isNumber))
    {
      id v13 = objc_msgSend(a1, sel_toNumber);
      if (v13)
      {
        uint64_t v14 = v13;
        unsigned __int8 v15 = objc_msgSend(v13, sel_isEqualToNumber_, v12);
        uint64_t v11 = 1;
        sub_19EF5B92C(v4, v3, 1);

        if (v15) {
          return v11;
        }
        return 0;
      }
    }
    uint64_t v18 = v4;
    uint64_t v19 = v3;
    char v20 = 1;
    goto LABEL_21;
  }
  if (objc_msgSend(a1, sel_isArray)) {
    return 0;
  }
  if ((objc_msgSend(a1, sel_isBoolean) & 1) == 0)
  {
    if ((objc_msgSend(a1, sel_isNull) & 1) == 0) {
      JSValue.isJSONObject.getter();
    }
    return 0;
  }
  if (!v5) {
    return 0;
  }
  id v16 = v4;
  unsigned int v17 = objc_msgSend(a1, sel_isBoolean) ? objc_msgSend(a1, sel_toBool) : 2;
  unsigned int v23 = objc_msgSend(v16, sel_BOOLValue);
  uint64_t v11 = 1;
  sub_19EF5B92C(v4, v3, 1);
  if (v17 == 2 || ((((v17 & 1) == 0) ^ v23) & 1) == 0) {
    return 0;
  }
  return v11;
}

uint64_t sub_19EF5AD7C()
{
  uint64_t v1 = *v0;
  sub_19F1DD72C();
  sub_19EF5B5D4((uint64_t)v3, v1);
  return sub_19F1DD78C();
}

uint64_t sub_19EF5ADC4(uint64_t a1)
{
  return sub_19EF5B5D4(a1, *v1);
}

uint64_t sub_19EF5ADCC()
{
  uint64_t v1 = *v0;
  sub_19F1DD72C();
  sub_19EF5B5D4((uint64_t)v3, v1);
  return sub_19F1DD78C();
}

uint64_t sub_19EF5AE10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_19EF5B958(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

void sub_19EF5AE3C(uint64_t *a1, uint64_t *a2)
{
}

uint64_t JSONBridgingConfiguration.PropertyDescriptor.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRelease();
  sub_19EEC3ED8(a1, (uint64_t)v15, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = v16;
  if (v16)
  {
    uint64_t v5 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v8 = v7;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    if (v8)
    {
      char v9 = 0;
LABEL_8:
      uint64_t result = sub_19EEC3418(a1);
      *(void *)a2 = v6;
      *(void *)(a2 + 8) = v8;
      *(unsigned char *)(a2 + 16) = v9;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v15, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3ED8(a1, (uint64_t)v15, (uint64_t *)&unk_1E946FD20);
  uint64_t v10 = v16;
  if (v16)
  {
    uint64_t v11 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    if (v6)
    {
      uint64_t v8 = 0;
      char v9 = 1;
      goto LABEL_8;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v15, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EF5B580();
  swift_allocError();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *uint64_t v14 = &type metadata for JSONBridgingConfiguration.PropertyDescriptor;
  v14[1] = v13;
  v14[2] = 0;
  v14[3] = 0;
  swift_willThrow();
  return sub_19EEC3418(a1);
}

void JSONBridgingConfiguration.PropertyDescriptor.hash(into:)()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    sub_19F1DD73C();
    id v3 = v1;
    sub_19F1DCA2C();
    sub_19EF5B92C(v1, v2, 1);
  }
  else
  {
    sub_19F1DD73C();
    sub_19F1DBE9C();
  }
}

uint64_t JSONBridgingConfiguration.PropertyDescriptor.hashValue.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_19F1DD72C();
  sub_19F1DD73C();
  if (v3)
  {
    id v4 = v1;
    sub_19F1DCA2C();
    sub_19EF5B92C(v1, v2, 1);
  }
  else
  {
    sub_19F1DBE9C();
  }
  return sub_19F1DD78C();
}

uint64_t sub_19EF5B120()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_19F1DD72C();
  sub_19F1DD73C();
  if (v3)
  {
    id v4 = v1;
    sub_19F1DCA2C();
    sub_19EF5B92C(v1, v2, 1);
  }
  else
  {
    sub_19F1DBE9C();
  }
  return sub_19F1DD78C();
}

void sub_19EF5B1B8()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    sub_19F1DD73C();
    id v3 = v1;
    sub_19F1DCA2C();
    sub_19EF5B92C(v1, v2, 1);
  }
  else
  {
    sub_19F1DD73C();
    sub_19F1DBE9C();
  }
}

uint64_t sub_19EF5B25C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_19F1DD72C();
  sub_19F1DD73C();
  if (v3)
  {
    id v4 = v1;
    sub_19F1DCA2C();
    sub_19EF5B92C(v1, v2, 1);
  }
  else
  {
    sub_19F1DBE9C();
  }
  return sub_19F1DD78C();
}

uint64_t sub_19EF5B2F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return JSONBridgingConfiguration.PropertyDescriptor.init(deserializing:using:)(a1, a2);
}

uint64_t JSONBridgingConfiguration.withBridgingType(_:for:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v6 = v3[1];
  uint64_t v8 = v3[2];
  char v11 = *a1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_19EF59DAC(&v11, a2, v8);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v7;
  a3[1] = v6;
  a3[2] = v9;
  return result;
}

JetEngine::JSONBridgingType __swiftcall JSONBridgingConfiguration.jsonBridgingType(for:)(JSValue a1)
{
  Class isa = a1.super.isa;
  id v4 = v1;
  uint64_t v5 = *(void *)(v2 + 8);
  if (v5)
  {
    if (*(unsigned char *)v2)
    {
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
      sub_19EF4D904((void *)(v5 + 16), v12);
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
      uint64_t v9 = v12[0];
      if (v12[0])
      {
        uint64_t v10 = isa;
        char v6 = sub_19EF5C43C(v9, (uint64_t)v10, (uint64_t (*)(uint64_t, uint64_t, void *))sub_19EF5C434);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        LOBYTE(a1.super.isa) = swift_release();
        char v6 = 1;
      }
    }
    else
    {
      char v6 = 0;
    }
  }
  else
  {
    MEMORY[0x1F4188790](a1.super.isa);
    uint64_t v8 = v7 + 6;
    os_unfair_lock_lock(v7 + 6);
    sub_19EF5B93C(v12);
    os_unfair_lock_unlock(v8);
    char v6 = v12[0];
  }
  *id v4 = v6 & 1;
  return (JetEngine::JSONBridgingType)a1.super.isa;
}

BOOL sub_19EF5B4E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_19EF5B4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = (uint64_t)(a4 + 2);
  *a4 = a1;
  a4[1] = a2;
  sub_19EEC355C(a3, (uint64_t)v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = JSONBridgingConfiguration.PropertyDescriptor.init(deserializing:using:)((uint64_t)v7, v5);
  if (v4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_19EF5B580()
{
  unint64_t result = qword_1E946F8D0;
  if (!qword_1E946F8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946F8D0);
  }
  return result;
}

uint64_t sub_19EF5B5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v19 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_20;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v12 >= v19) {
      goto LABEL_22;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v19) {
        goto LABEL_22;
      }
      unint64_t v13 = *(void *)(v20 + 8 * v8);
      if (!v13) {
        break;
      }
    }
LABEL_19:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_20:
    uint64_t v15 = *(void *)(a2 + 56) + 24 * v11;
    uint64_t v16 = *(void **)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    char v18 = *(unsigned char *)(v15 + 16);
    swift_bridgeObjectRetain();
    sub_19EF5C0C0(v16, v17, v18);
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
    sub_19F1DD73C();
    if (v18)
    {
      id v9 = v16;
      sub_19F1DCA2C();
      sub_19EF5B92C(v16, v17, 1);
    }
    else
    {
      sub_19F1DBE9C();
    }
    sub_19EF5B92C(v16, v17, v18);
    uint64_t result = sub_19F1DD78C();
    v7 ^= result;
  }
  int64_t v14 = v12 + 2;
  if (v14 >= v19)
  {
LABEL_22:
    swift_release();
    return sub_19F1DD73C();
  }
  unint64_t v13 = *(void *)(v20 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v19) {
      goto LABEL_22;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t _s9JetEngine25JSONBridgingConfigurationV18PropertyDescriptorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  unint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if (v4)
  {
    if (*(unsigned char *)(a2 + 16))
    {
      sub_19EE59F2C();
      char v4 = 1;
      sub_19EF5C0C0(v5, v6, 1);
      sub_19EF5C0C0(v2, v3, 1);
      char v8 = sub_19F1DCA1C();
      char v7 = 1;
      goto LABEL_13;
    }
LABEL_5:
    sub_19EF5C0C0(*(void **)a2, *(void *)(a2 + 8), v7);
    sub_19EF5C0C0(v2, v3, v4);
    char v8 = 0;
    goto LABEL_13;
  }
  if (*(unsigned char *)(a2 + 16)) {
    goto LABEL_5;
  }
  if (v2 == v5 && v3 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_19F1DD44C();
  }
  sub_19EF5C0C0(v5, v6, 0);
  sub_19EF5C0C0(v2, v3, 0);
  char v4 = 0;
  char v7 = 0;
LABEL_13:
  sub_19EF5B92C(v2, v3, v4);
  sub_19EF5B92C(v5, v6, v7);
  return v8 & 1;
}

void sub_19EF5B92C(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_19EF5B93C(unsigned char *a1@<X8>)
{
  sub_19EF59FA4(*(void **)(v1 + 16), a1);
}

uint64_t sub_19EF5B958(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a2;
  JSONObject.dictionary.getter((uint64_t)&v13);
  if (*((void *)&v14 + 1))
  {
    v16[0] = v13;
    v16[1] = v14;
    uint64_t v17 = v15;
    uint64_t v6 = sub_19EF5C3BC((uint64_t)v16, (uint64_t)&v13);
    MEMORY[0x1F4188790](v6);
    void v12[2] = v5;
    uint64_t v7 = *((void *)&v14 + 1);
    uint64_t v8 = v15;
    __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
    uint64_t v3 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, void *@<X8>), void *, void, ValueMetadata *, void, uint64_t, uint64_t))(v8 + 48))(sub_19EF5C418, v12, MEMORY[0x1E4FBB1A0], &type metadata for JSONBridgingConfiguration.PropertyDescriptor, MEMORY[0x1E4FBB1B0], v7, v8);
    sub_19EEC05FC((uint64_t)&v13);
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
    sub_19EEC05FC((uint64_t)v16);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)&v13, &qword_1E946F740);
    sub_19EF5B580();
    swift_allocError();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    *unint64_t v10 = &type metadata for JSONBridgingConfiguration.ModelDescriptor;
    v10[1] = v9;
    id v10[2] = 0;
    v10[3] = 0;
    swift_willThrow();
    sub_19EEC3418(a1);
  }
  return v3;
}

void sub_19EF5BB00(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, void *))
{
  unsigned int v23 = a2;
  uint64_t v19 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v20 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (v5)
  {
    unint64_t v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v8 = v7 | (v6 << 6);
LABEL_5:
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = *(void *)(a1 + 56) + 24 * v8;
    uint64_t v14 = *(void *)(v12 + 8);
    char v15 = *(unsigned char *)(v12 + 16);
    v21[0] = *(void *)v12;
    long long v13 = (void *)v21[0];
    v21[1] = v14;
    char v22 = v15;
    swift_bridgeObjectRetain();
    sub_19EF5C0C0(v13, v14, v15);
    LOBYTE(v10) = v23(v10, v11, v21);
    swift_bridgeObjectRelease();
    sub_19EF5B92C(v13, v14, v15);
    if ((v10 & 1) == 0) {
      goto LABEL_22;
    }
  }
  int64_t v16 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v16 >= v20) {
    goto LABEL_22;
  }
  unint64_t v17 = *(void *)(v19 + 8 * v16);
  ++v6;
  if (v17) {
    goto LABEL_21;
  }
  int64_t v6 = v16 + 1;
  if (v16 + 1 >= v20) {
    goto LABEL_22;
  }
  unint64_t v17 = *(void *)(v19 + 8 * v6);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v6 = v16 + 2;
  if (v16 + 2 >= v20) {
    goto LABEL_22;
  }
  unint64_t v17 = *(void *)(v19 + 8 * v6);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v6 = v16 + 3;
  if (v16 + 3 >= v20) {
    goto LABEL_22;
  }
  unint64_t v17 = *(void *)(v19 + 8 * v6);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v20)
  {
LABEL_22:
    swift_release();
    return;
  }
  unint64_t v17 = *(void *)(v19 + 8 * v18);
  int64_t v6 = v18;
  if (v17)
  {
LABEL_21:
    unint64_t v5 = (v17 - 1) & v17;
    unint64_t v8 = __clz(__rbit64(v17)) + (v6 << 6);
    goto LABEL_5;
  }
  while (1)
  {
    int64_t v6 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v6 >= v20) {
      goto LABEL_22;
    }
    unint64_t v17 = *(void *)(v19 + 8 * v6);
    ++v18;
    if (v17) {
      goto LABEL_21;
    }
  }
LABEL_25:
  __break(1u);
}

unint64_t sub_19EF5BD30()
{
  unint64_t result = qword_1E94710A8;
  if (!qword_1E94710A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94710A8);
  }
  return result;
}

unint64_t sub_19EF5BD88()
{
  unint64_t result = qword_1E94710B0;
  if (!qword_1E94710B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94710B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JSONBridgingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF5BEA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONBridgingType()
{
  return &type metadata for JSONBridgingType;
}

uint64_t dispatch thunk of JSONBridgingConfigurationProvider.jsonBridgingType(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for JSONBridgingConfiguration()
{
  swift_release();
  return swift_release();
}

uint64_t _s9JetEngine25JSONBridgingConfigurationVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for JSONBridgingConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for JSONBridgingConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONBridgingConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONBridgingConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONBridgingConfiguration()
{
  return &type metadata for JSONBridgingConfiguration;
}

id sub_19EF5C0C0(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void destroy for JSONBridgingConfiguration.PropertyDescriptor(uint64_t a1)
{
}

uint64_t _s9JetEngine25JSONBridgingConfigurationV18PropertyDescriptorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_19EF5C0C0(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JSONBridgingConfiguration.PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_19EF5C0C0(*(void **)a2, v4, v5);
  unsigned int v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_19EF5B92C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for JSONBridgingConfiguration.PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_19EF5B92C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONBridgingConfiguration.PropertyDescriptor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONBridgingConfiguration.PropertyDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19EF5C258(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_19EF5C260(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for JSONBridgingConfiguration.PropertyDescriptor()
{
  return &type metadata for JSONBridgingConfiguration.PropertyDescriptor;
}

ValueMetadata *type metadata accessor for JSONBridgingConfiguration.ClientConfiguration()
{
  return &type metadata for JSONBridgingConfiguration.ClientConfiguration;
}

uint64_t initializeBufferWithCopyOfBuffer for JSONBridgingConfiguration.BagConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for JSONBridgingConfiguration.BagConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for JSONBridgingConfiguration.BagConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for JSONBridgingConfiguration.BagConfiguration()
{
  return &type metadata for JSONBridgingConfiguration.BagConfiguration;
}

ValueMetadata *type metadata accessor for JSONBridgingConfiguration.ModelDescriptor()
{
  return &type metadata for JSONBridgingConfiguration.ModelDescriptor;
}

unint64_t sub_19EF5C368()
{
  unint64_t result = qword_1E94710B8;
  if (!qword_1E94710B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94710B8);
  }
  return result;
}

uint64_t sub_19EF5C3BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19EF5C418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_19EF5B4F8(a1, a2, a3, a4);
}

void sub_19EF5C434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_19EF5A9E0(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_19EF5C43C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void *))
{
  uint64_t v16 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v17 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v8++, 1)) {
      break;
    }
    if (v8 >= v17) {
      goto LABEL_25;
    }
    uint64_t v13 = *(void *)(v16 + 8 * v8);
    if (!v13)
    {
      int64_t v14 = v8 + 1;
      if (v8 + 1 >= v17) {
        goto LABEL_25;
      }
      uint64_t v13 = *(void *)(v16 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v8 + 2;
        if (v8 + 2 >= v17) {
          goto LABEL_25;
        }
        uint64_t v13 = *(void *)(v16 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v8 + 3;
          if (v8 + 3 >= v17) {
            goto LABEL_25;
          }
          uint64_t v13 = *(void *)(v16 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v8 + 4;
            if (v8 + 4 >= v17)
            {
LABEL_25:
              uint64_t v15 = 0;
              goto LABEL_26;
            }
            uint64_t v13 = *(void *)(v16 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                int64_t v8 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_28;
                }
                if (v8 >= v17) {
                  goto LABEL_25;
                }
                uint64_t v13 = *(void *)(v16 + 8 * v8);
                ++v14;
                if (v13) {
                  goto LABEL_19;
                }
              }
            }
          }
        }
      }
      int64_t v8 = v14;
    }
LABEL_19:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    MEMORY[0x1F4188790](result);
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_19EF5BB00(v9, a3);
    char v11 = v10;
    uint64_t result = swift_bridgeObjectRelease();
    if (v11)
    {
      uint64_t v15 = 1;
LABEL_26:
      swift_release();
      return v15;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_19EF5C644@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_19EF59F0C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_19EF5C660@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_19EF59E58(a1, *(void *)(v2 + 16), a2);
}

unsigned char *storeEnumTagSinglePayload for JSONValueType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF5C748);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONValueType()
{
  return &type metadata for JSONValueType;
}

unint64_t sub_19EF5C784()
{
  unint64_t result = qword_1E94710D0;
  if (!qword_1E94710D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94710D0);
  }
  return result;
}

void sub_19EF5C7DC(unsigned char *a1@<X8>)
{
}

uint64_t sub_19EF5C828()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19EF5C860()
{
  return swift_deallocClassInstance();
}

double static AutomationSemantics.shelf(id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  sub_19EEBCD00(a1, (uint64_t)v8);
  sub_19EE90F48(0, (uint64_t)v8, (uint64_t *)(inited + 32));
  sub_19EEBCD00(a2, (uint64_t)v8);
  sub_19EE90F48(1, (uint64_t)v8, (uint64_t *)(inited + 64));
  *(void *)&v8[0] = &unk_1EF141428;
  *(void *)&v8[1] = MEMORY[0x1E4FBC860];
  sub_19EE9104C(inited);
  double result = v8[0];
  *a3 = *(_OWORD *)v8;
  return result;
}

uint64_t static AutomationSemantics.shelfItem(itemKind:impressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v6 = *a3;
  uint64_t v5 = a3[1];
  uint64_t v8 = a3[2];
  uint64_t v7 = a3[3];
  if (a2)
  {
    uint64_t v10 = a2;
  }
  else
  {
    uint64_t v11 = a3[7];
    if (*(void *)(v11 + 16)
      && (unint64_t v12 = sub_19EEBD400(0x6973736572706D69, 0xEE00657079546E6FLL), (v13 & 1) != 0)
      && (sub_19EEBDBA4(*(void *)(v11 + 56) + 32 * v12, (uint64_t)v17), swift_dynamicCast()))
    {
      uint64_t v10 = *((void *)&v15 + 1);
      a1 = v15;
    }
    else
    {
      uint64_t v10 = 0xEB000000006D6574;
      a1 = 0x49636972656E6567;
    }
  }
  v17[3] = MEMORY[0x1E4FBB1A0];
  v17[0] = v8;
  v17[1] = v7;
  if (v5)
  {
    *((void *)&v16 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v15 = v6;
    *((void *)&v15 + 1) = v5;
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static AutomationSemantics.shelfItem(itemKind:id:parentId:)(a1, v10, (uint64_t)v17, (uint64_t)&v15, a4);
  swift_bridgeObjectRelease();
  sub_19EEBCB4C((uint64_t)&v15);
  return sub_19EEBCB4C((uint64_t)v17);
}

uint64_t static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t v6 = AutomationSemantics.Subcomponent.rawValue.getter();
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(v6, v7, a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t AutomationSemantics.Subcomponent.rawValue.getter()
{
  uint64_t result = 0x7369747265766461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B726F77747261;
      break;
    case 2:
      uint64_t result = 0x6567646162;
      break;
    case 3:
      uint64_t result = 2036625250;
      break;
    case 4:
      uint64_t result = 1702125924;
      break;
    case 5:
      uint64_t result = 0x7470697263736564;
      break;
    case 6:
      uint64_t result = 0x7265746C6966;
      break;
    case 7:
      uint64_t result = 0x7265746F6F66;
      break;
    case 8:
      uint64_t result = 0x676E6964616568;
      break;
    case 9:
      uint64_t result = 1852793705;
      break;
    case 0xA:
      uint64_t result = 0x6C6562616CLL;
      break;
    case 0xB:
      uint64_t result = 0x70756B636F6CLL;
      break;
    case 0xC:
      uint64_t result = 0x6E6974656B72616DLL;
      break;
    case 0xD:
      uint64_t result = 0x616964656DLL;
      break;
    case 0xE:
      uint64_t result = 1701667182;
      break;
    case 0xF:
      uint64_t result = 0x747542726566666FLL;
      break;
    case 0x10:
      uint64_t result = 0x62614C726566666FLL;
      break;
    case 0x11:
      uint64_t result = 0x4C6C616E6964726FLL;
      break;
    case 0x12:
      uint64_t result = 0x7061726761726170;
      break;
    case 0x13:
      uint64_t result = 0x656C746974627573;
      break;
    case 0x14:
      uint64_t result = 0x656E696C676174;
      break;
    case 0x15:
      uint64_t result = 1954047348;
      break;
    case 0x16:
      uint64_t result = 0x656C746974;
      break;
    case 0x17:
      uint64_t result = 0x616D49656C746974;
      break;
    case 0x18:
      uint64_t result = 0x6F65646976;
      break;
    case 0x19:
      uint64_t result = 0x6C6C4177656976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t AutomationSemantics.Subcomponent.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD60C();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 0;
  char v5 = 8;
  switch(v2)
  {
    case 0:
      goto LABEL_10;
    case 1:
      char v4 = 1;
      goto LABEL_10;
    case 2:
      char v4 = 2;
      goto LABEL_10;
    case 3:
      char v4 = 3;
      goto LABEL_10;
    case 4:
      char v4 = 4;
      goto LABEL_10;
    case 5:
      char v4 = 5;
      goto LABEL_10;
    case 6:
      char v4 = 6;
      goto LABEL_10;
    case 7:
      char v4 = 7;
LABEL_10:
      char v5 = v4;
      break;
    case 8:
      break;
    case 9:
      char v5 = 9;
      break;
    case 10:
      char v5 = 10;
      break;
    case 11:
      char v5 = 11;
      break;
    case 12:
      char v5 = 12;
      break;
    case 13:
      char v5 = 13;
      break;
    case 14:
      char v5 = 14;
      break;
    case 15:
      char v5 = 15;
      break;
    case 16:
      char v5 = 16;
      break;
    case 17:
      char v5 = 17;
      break;
    case 18:
      char v5 = 18;
      break;
    case 19:
      char v5 = 19;
      break;
    case 20:
      char v5 = 20;
      break;
    case 21:
      char v5 = 21;
      break;
    case 22:
      char v5 = 22;
      break;
    case 23:
      char v5 = 23;
      break;
    case 24:
      char v5 = 24;
      break;
    case 25:
      char v5 = 25;
      break;
    default:
      char v5 = 26;
      break;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_19EF5D00C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19F03AAD4(*a1, *a2);
}

uint64_t sub_19EF5D018()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF5D080()
{
  AutomationSemantics.Subcomponent.rawValue.getter();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EF5D0E4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF5D148@<X0>(char *a1@<X8>)
{
  return AutomationSemantics.Subcomponent.init(rawValue:)(a1);
}

uint64_t sub_19EF5D154@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AutomationSemantics.Subcomponent.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_19EF5D17C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_19F09CF08(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[8 * v9 + 4];
  if (a1 + 32 < v10 + (v8 << 6) && v10 < a1 + 32 + (v8 << 6)) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EF5D2D4(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_19F09D500(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = &v3[2 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[2 * v8] && (unint64_t)v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 16 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EF5D420(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_19F09DAD4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[6 * v9 + 4];
  if (a1 + 32 < v10 + 48 * v8 && v10 < a1 + 32 + 48 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EF5D580(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_19F09DC60(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[7 * v8 + 4];
  if (a1 + 32 < v9 + 56 * v2 && v9 < a1 + 32 + 56 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EF5D6DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_19EE91FA0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EF5D830(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native)
  {
    int64_t v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      if (*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      goto LABEL_18;
    }
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_19F09D040(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  int64_t v8 = v3[3] >> 1;
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if (v8 - v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v2 && v10 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v2);
  uint64_t v14 = v12 + v2;
  if (!v13)
  {
    v3[2] = v14;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EF5D99C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_19F09EDF0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EF5DAF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_19EE8A2B4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

unint64_t sub_19EF5DC4C()
{
  unint64_t result = qword_1E94710E8;
  if (!qword_1E94710E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94710E8);
  }
  return result;
}

uint64_t _s12SubcomponentOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12SubcomponentOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *unint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF5DDFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomationSemantics.Subcomponent()
{
  return &type metadata for AutomationSemantics.Subcomponent;
}

uint64_t URLJetPackAssetRequest.init(url:sourcePolicy:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for URLJetPackAssetRequest();
  *(unsigned char *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t URLJetPackAssetRequest._sourcePolicy.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for URLJetPackAssetRequest();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t URLJetPackAssetRequest._cacheKey.getter()
{
  sub_19F1DB34C();
  sub_19EE44578((unint64_t *)&qword_1EB392878, MEMORY[0x1E4F276F0]);
  return sub_19F1DD2EC();
}

uint64_t URLJetPackAssetRequest.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t URLJetPackAssetRequest.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF5E08C()
{
  sub_19F1DB34C();
  sub_19EE44578((unint64_t *)&qword_1EB392878, MEMORY[0x1E4F276F0]);
  return sub_19F1DD2EC();
}

uint64_t sub_19EF5E100@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 20));
  return result;
}

uint64_t sub_19EF5E110()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF5E1B4()
{
  return sub_19F1DD73C();
}

uint64_t sub_19EF5E240(uint64_t a1)
{
  uint64_t result = sub_19EE44578(&qword_1EB390E18, (void (*)(uint64_t))type metadata accessor for URLJetPackAssetRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t assignWithCopy for URLJetPackAssetRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for URLJetPackAssetRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for URLJetPackAssetRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_19EF5E40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_19EF5E4C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_19F1DB34C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  return result;
}

void static AutomationSemantics.tabContainer()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = &unk_1EF140D40;
  a1[1] = v1;
}

unint64_t Bag.Stubs.init()@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  *a1 = result;
  return result;
}

uint64_t Bag.Stubs.withArray(_:forKey:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_19F1DC14C();
  v10[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1EB391C00);
  v10[0] = v4;
  *a1 = v3;
  uint64_t v5 = sub_19F1DBD7C();
  uint64_t v7 = v6;
  sub_19EEBDBA4((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_19EE7D94C((uint64_t)v9, v5, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t Bag.Stubs.withBool(_:forKey:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, a1 & 1);
  id v11[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
  v11[0] = v5;
  *a2 = v4;
  uint64_t v6 = sub_19F1DBD7C();
  uint64_t v8 = v7;
  sub_19EEBDBA4((uint64_t)v11, (uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_19EE7D94C((uint64_t)v10, v6, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
}

uint64_t Bag.Stubs.withDouble(_:forKey:)@<X0>(void *a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = *v2;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, a2);
  id v11[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
  v11[0] = v5;
  *a1 = v4;
  uint64_t v6 = sub_19F1DBD7C();
  uint64_t v8 = v7;
  sub_19EEBDBA4((uint64_t)v11, (uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_19EE7D94C((uint64_t)v10, v6, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
}

uint64_t Bag.Stubs.withInteger(_:forKey:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, a1);
  id v11[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1EB3929E0);
  v11[0] = v5;
  *a2 = v4;
  uint64_t v6 = sub_19F1DBD7C();
  uint64_t v8 = v7;
  sub_19EEBDBA4((uint64_t)v11, (uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_19EE7D94C((uint64_t)v10, v6, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
}

uint64_t Bag.Stubs.withString(_:forKey:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_19F1DBD4C();
  v10[3] = sub_19EEBDC10(0, (unint64_t *)&unk_1EB392290);
  v10[0] = v4;
  *a1 = v3;
  uint64_t v5 = sub_19F1DBD7C();
  uint64_t v7 = v6;
  sub_19EEBDBA4((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_19EE7D94C((uint64_t)v9, v5, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t Bag.Stubs.withURL(_:forKey:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_19F1DB25C();
  v10[3] = sub_19EEBDC10(0, &qword_1E94710F8);
  v10[0] = v4;
  *a1 = v3;
  uint64_t v5 = sub_19F1DBD7C();
  uint64_t v7 = v6;
  sub_19EEBDBA4((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_19EE7D94C((uint64_t)v9, v5, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t Bag.Stubs.withDictionary(_:forKey:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_19F1DBB1C();
  v10[3] = sub_19EEBDC10(0, &qword_1EB392CF0);
  v10[0] = v4;
  *a1 = v3;
  uint64_t v5 = sub_19F1DBD7C();
  uint64_t v7 = v6;
  sub_19EEBDBA4((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_19EE7D94C((uint64_t)v9, v5, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

void Bag.init(mockProfile:stubs:)(uint64_t a1@<X8>)
{
  v16[0] = a1;
  v17[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_19F1DB57C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE28]), sel_init);
  uint64_t v6 = (void *)sub_19F1DBB1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setData_, v6);

  sub_19F1DB4AC();
  uint64_t v7 = (void *)sub_19F1DB4DC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, sel_setExpirationDate_, v7);

  id v8 = objc_msgSend(self, sel_currentProcess);
  objc_msgSend(v5, sel_setProcessInfo_, v8);

  uint64_t v9 = (void *)sub_19F1DBD4C();
  objc_msgSend(v5, sel_setProfile_, v9);

  unsigned int v10 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setProfileVersion_, v10);

  v17[0] = 0;
  id v11 = objc_msgSend(v5, sel_buildWithError_, v17);
  if (v11)
  {
    id v12 = v11;
    id v13 = v17[0];

    *(void *)v16[0] = v12;
  }
  else
  {
    id v14 = v17[0];
    uint64_t v15 = sub_19F1DB19C();

    swift_willThrow();
    v17[0] = 0;
    v17[1] = (id)0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    v16[1] = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    sub_19F1DCF4C();
    sub_19F1DCFCC();
    __break(1u);
  }
}

ValueMetadata *type metadata accessor for Bag.Stubs()
{
  return &type metadata for Bag.Stubs;
}

id sub_19EF5F05C(char *a1, uint64_t a2, SEL *a3)
{
  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC9JetEngine8ProxyBag_bag];
  id v5 = a1;
  id v6 = [v4 *a3];
  sub_19F1DBD7C();

  uint64_t v7 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  return v7;
}

id sub_19EF5F268(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v4 = [*(id *)(a1 + OBJC_IVAR____TtC9JetEngine8ProxyBag_bag) *a4];
  return v4;
}

id sub_19EF5F2D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProxyBag();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ProxyBag()
{
  return self;
}

uint64_t sub_19EF5F340()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_19EF5F378(uint64_t a1, uint64_t a2)
{
  sub_19F11653C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_19EF5F380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_19EF5F3E8(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_19EF5F46C(a1);
  if (!v2) {
    *a2 = v4 & 1;
  }
}

__n128 sub_19EF5F418@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EF5F608(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

void sub_19EF5F46C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_toString);
  if (!v2)
  {
LABEL_14:
    sub_19EF600C0();
    swift_allocError();
    uint64_t v11 = v10;
    id v12 = a1;
    JSError.init(badValue:expected:)(v12, v11);
    swift_willThrow();

    return;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_19F1DBD7C();
  uint64_t v6 = v5;

  BOOL v7 = v4 == 0x64692D6D616461 && v6 == 0xE700000000000000;
  if (v7 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return;
  }
  if (v4 != 0x692D656C646E7562 || v6 != 0xE900000000000064)
  {
    char v9 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v9)
    {

      return;
    }
    goto LABEL_14;
  }

  swift_bridgeObjectRelease();
}

void sub_19EF5F608(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)sub_19F1DBD4C();
  id v7 = objc_msgSend(a1, sel_valueForProperty_, v6);

  if (!v7)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  id v8 = &off_1E59B6000;
  if (!objc_msgSend(v7, sel_isString)
    || (id v9 = objc_msgSend(v7, sel_toString)) == 0)
  {

    char v22 = (void *)sub_19F1DBD4C();
    id v23 = objc_msgSend(a1, sel_valueForProperty_, v22);

    if (!v23)
    {
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(v23, v24);
    swift_willThrow();
LABEL_14:

    return;
  }
  uint64_t v10 = v9;
  uint64_t v11 = sub_19F1DBD7C();
  uint64_t v13 = v12;

  swift_bridgeObjectRetain();
  id v14 = (void *)sub_19F1DBD4C();
  id v15 = objc_msgSend(a1, sel_valueForProperty_, v14);

  if (!v15)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (!objc_msgSend(v15, sel_isString)
    || (id v16 = objc_msgSend(v15, sel_toString)) == 0)
  {
    swift_bridgeObjectRelease();

    uint64_t v25 = (void *)sub_19F1DBD4C();
    id v26 = objc_msgSend(a1, sel_valueForProperty_, v25);

    if (!v26)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    sub_19EF600C0();
    swift_allocError();
    JSError.init(badValue:expected:)(v26, v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  int64_t v17 = v16;
  uint64_t v87 = v11;
  uint64_t v86 = sub_19F1DBD7C();
  uint64_t v19 = v18;

  swift_bridgeObjectRetain();
  int64_t v20 = (void *)sub_19F1DBD4C();
  id v21 = objc_msgSend(a1, sel_valueForProperty_, v20);

  if (!v21)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if (objc_msgSend(v21, sel_isUndefined))
  {

    uint64_t v93 = MEMORY[0x1E4FBC860];
    goto LABEL_36;
  }
  unsigned __int8 v28 = objc_msgSend(v21, sel_isNull);

  uint64_t v93 = MEMORY[0x1E4FBC860];
  if ((v28 & 1) == 0)
  {
    uint64_t v84 = a2;
    uint64_t v29 = (void *)sub_19F1DBD4C();
    id v30 = objc_msgSend(a1, sel_valueForProperty_, v29);

    if (!v30)
    {
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    uint64_t v31 = (void *)sub_19F1DBD4C();
    id v32 = objc_msgSend(v30, sel_valueForProperty_, v31);

    if (!v32)
    {
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    uint64_t v82 = v19;
    uint64_t v83 = v13;
    unsigned int v33 = objc_msgSend(v32, sel_toUInt32);

    unint64_t v34 = (unint64_t)sub_19F18EBF8(0, v33, v30);
    if (v34 >> 62) {
      goto LABEL_72;
    }
    for (uint64_t i = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t i = sub_19F1DD03C())
    {
      a2 = v84;
      if (!i)
      {
        swift_bridgeObjectRelease();
        uint64_t v93 = MEMORY[0x1E4FBC860];
        uint64_t v19 = v82;
        uint64_t v13 = v83;
        goto LABEL_36;
      }
      uint64_t v95 = MEMORY[0x1E4FBC860];
      sub_19EEA1364(0, i & ~(i >> 63), 0);
      if (i < 0) {
        break;
      }
      uint64_t v36 = 0;
      uint64_t v37 = v95;
      uint64_t v90 = a1;
      unint64_t v91 = v34 & 0xC000000000000001;
      uint64_t v88 = v3;
      while (i != v36)
      {
        uint64_t v94 = v37;
        if (v91) {
          id v38 = (id)MEMORY[0x19F3C7060](v36, v34);
        }
        else {
          id v38 = *(id *)(v34 + 8 * v36 + 32);
        }
        uint64_t v39 = v38;
        if (![v38 (SEL)v8[424]]
          || (id v40 = objc_msgSend(v39, sel_toString)) == 0)
        {
          sub_19EF600C0();
          swift_allocError();
          uint64_t v51 = v50;
          id v52 = v39;
          JSError.init(badValue:expected:)(v52, v51);
          swift_willThrow();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_release();
          int v53 = 0;
          goto LABEL_68;
        }
        uint64_t v41 = v40;
        unint64_t v42 = v34;
        uint64_t v43 = v8;
        uint64_t v44 = sub_19F1DBD7C();
        uint64_t v46 = v45;

        uint64_t v37 = v94;
        unint64_t v48 = *(void *)(v94 + 16);
        unint64_t v47 = *(void *)(v94 + 24);
        if (v48 >= v47 >> 1)
        {
          sub_19EEA1364(v47 > 1, v48 + 1, 1);
          uint64_t v37 = v94;
        }
        ++v36;
        *(void *)(v37 + 16) = v48 + 1;
        uint64_t v49 = v37 + 16 * v48;
        *(void *)(v49 + 32) = v44;
        *(void *)(v49 + 40) = v46;
        id v8 = v43;
        unint64_t v34 = v42;
        uint64_t v3 = v88;
        a1 = v90;
        if (i == v36)
        {
          uint64_t v93 = v37;
          swift_bridgeObjectRelease();
          uint64_t v19 = v82;
          uint64_t v13 = v83;
          a2 = v84;
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_72:
      ;
    }
    __break(1u);
    goto LABEL_74;
  }
LABEL_36:
  uint64_t v54 = (void *)sub_19F1DBD4C();
  id v55 = objc_msgSend(a1, sel_valueForProperty_, v54);

  if (!v55)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (objc_msgSend(v55, sel_isUndefined))
  {

LABEL_40:
    char v92 = 0;
    goto LABEL_41;
  }
  unsigned __int8 v56 = objc_msgSend(v55, sel_isNull);

  if (v56) {
    goto LABEL_40;
  }
  os_log_t v66 = (void *)sub_19F1DBD4C();
  id v67 = objc_msgSend(a1, sel_valueForProperty_, v66);

  if (!v67)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  sub_19EF5F46C(v67);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  char v92 = v68 & 1;
LABEL_41:
  uint64_t v57 = (void *)sub_19F1DBD4C();
  id v58 = objc_msgSend(a1, sel_valueForProperty_, v57);

  if (!v58)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (objc_msgSend(v58, sel_isUndefined))
  {

LABEL_45:
    uint64_t v89 = 1;
    goto LABEL_46;
  }
  unsigned __int8 v59 = objc_msgSend(v58, sel_isNull);

  if (v59) {
    goto LABEL_45;
  }
  uint64_t v69 = a2;
  uint64_t v70 = (void *)sub_19F1DBD4C();
  id v71 = objc_msgSend(a1, sel_valueForProperty_, v70);

  if (!v71)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  if (objc_msgSend(v71, sel_isNumber))
  {
    signed int v72 = objc_msgSend(v71, sel_toInt32);

    uint64_t v89 = v72;
    a2 = v69;
LABEL_46:
    os_signpost_id_t v60 = (void *)sub_19F1DBD4C();
    id v61 = objc_msgSend(a1, sel_valueForProperty_, v60);

    if (v61)
    {
      if (objc_msgSend(v61, sel_isUndefined))
      {
        uint64_t v62 = v19;

LABEL_51:
        uint64_t v64 = 0;
        uint64_t v65 = 0;
LABEL_52:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)a2 = v87;
        *(void *)(a2 + 8) = v13;
        *(void *)(a2 + 16) = v86;
        *(void *)(a2 + 24) = v62;
        *(void *)(a2 + 32) = v93;
        *(unsigned char *)(a2 + 40) = v92;
        *(void *)(a2 + 48) = v89;
        *(void *)(a2 + 56) = v64;
        *(void *)(a2 + 64) = v65;
        return;
      }
      unsigned int v63 = objc_msgSend(v61, sel_isNull);

      if (v63)
      {
        uint64_t v62 = v19;

        goto LABEL_51;
      }
      uint64_t v85 = a2;
      uint64_t v73 = (void *)sub_19F1DBD4C();
      id v74 = objc_msgSend(a1, sel_valueForProperty_, v73);

      if (v74)
      {
        if ([v74 (SEL)v8[424]])
        {
          id v75 = objc_msgSend(v74, sel_toString);
          if (v75)
          {
            uint64_t v76 = v75;
            uint64_t v62 = v19;
            uint64_t v64 = sub_19F1DBD7C();
            uint64_t v65 = v77;

            a2 = v85;
            goto LABEL_52;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v78 = (void *)sub_19F1DBD4C();
        id v79 = objc_msgSend(a1, sel_valueForProperty_, v78);

        if (v79) {
          goto LABEL_66;
        }
        goto LABEL_87;
      }
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    goto LABEL_81;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v80 = (void *)sub_19F1DBD4C();
  id v79 = objc_msgSend(a1, sel_valueForProperty_, v80);

  if (!v79)
  {
LABEL_88:
    __break(1u);
    return;
  }
LABEL_66:
  sub_19EF600C0();
  swift_allocError();
  JSError.init(badValue:expected:)(v79, v81);
  swift_willThrow();
LABEL_67:

  int v53 = 1;
LABEL_68:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_19EF600C0()
{
  unint64_t result = qword_1E946E810;
  if (!qword_1E946E810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946E810);
  }
  return result;
}

uint64_t destroy for LookupRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LookupRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LookupRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LookupRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LookupRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LookupRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LookupRequest()
{
  return &type metadata for LookupRequest;
}

unsigned char *storeEnumTagSinglePayload for LookupRequest.IdentifierType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF6047CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LookupRequest.IdentifierType()
{
  return &type metadata for LookupRequest.IdentifierType;
}

unint64_t sub_19EF604B8()
{
  unint64_t result = qword_1E9471108;
  if (!qword_1E9471108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471108);
  }
  return result;
}

unint64_t static LintMetricsEventIntent.kind.getter()
{
  return 0xD000000000000017;
}

JetEngine::LintMetricsEventIntent __swiftcall LintMetricsEventIntent.init(fields:)(JetEngine::LintMetricsEventIntent fields)
{
  v1->fields._rawValue = fields.fields._rawValue;
  return fields;
}

uint64_t LintMetricsEventIntent.fields.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t LintMetricsEventIntent.jsRepresentation(in:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471110);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = 0x73646C656966;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v12 = v5;
  swift_bridgeObjectRetain();
  id v7 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  uint64_t v8 = sub_19F1DD62C();
  id v9 = objc_msgSend(self, sel_valueWithObject_inContext_, v8, v7, v12);
  swift_unknownObjectRelease();

  *(void *)(inited + 48) = v9;
  unint64_t v10 = sub_19EFB4E54(inited);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471118);
  unint64_t result = sub_19EF6064C();
  a2[4] = result;
  *a2 = v10;
  return result;
}

unint64_t sub_19EF6064C()
{
  unint64_t result = qword_1E9471120;
  if (!qword_1E9471120)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9471118);
    sub_19EF606C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471120);
  }
  return result;
}

unint64_t sub_19EF606C0()
{
  unint64_t result = qword_1E946CE90;
  if (!qword_1E946CE90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946CE88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CE90);
  }
  return result;
}

JSValue __swiftcall LintMetricsEventIntent.makeValue(in:)(JSContext in)
{
  unint64_t v2 = self;
  result.super.Class isa = (Class)objc_msgSend(v2, sel_valueWithNewObjectInContext_, in.super.isa);
  if (result.super.isa)
  {
    Class isa = result.super.isa;
    swift_bridgeObjectRetain();
    uint64_t v5 = in.super.isa;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    id v6 = objc_msgSend(v2, sel_valueWithObject_inContext_, sub_19F1DD62C(), v5);
    swift_unknownObjectRelease();

    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = (void *)sub_19F1DBD4C();
      [(objc_class *)isa setValue:v7 forProperty:v8];

      return (JSValue)isa;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_UNKNOWN **sub_19EF60844()
{
  return &protocol witness table for LintedMetricsEvent;
}

void sub_19EF60850(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x800000019F269D60;
}

unint64_t sub_19EF60870@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return LintMetricsEventIntent.jsRepresentation(in:)(a1, a2);
}

ValueMetadata *type metadata accessor for LintMetricsEventIntent()
{
  return &type metadata for LintMetricsEventIntent;
}

void sub_19EF6089C()
{
  id v0 = JEGestaltGetSystemVersion();
  uint64_t v1 = sub_19F1DBD7C();
  uint64_t v3 = v2;

  qword_1E94988C8 = 0x6A2E7972746E6573;
  unk_1E94988D0 = 0xEA00000000007465;
  qword_1E94988D8 = v1;
  unk_1E94988E0 = v3;
}

void *assignWithCopy for SentrySDK(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SentrySDK(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SentrySDK()
{
  return &type metadata for SentrySDK;
}

uint64_t sub_19EF609D0()
{
  if (*v0) {
    return 0x6E6F6973726576;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_19EF60A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19EF6118C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19EF60A2C()
{
  return 0;
}

void sub_19EF60A38(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19EF60A44(uint64_t a1)
{
  unint64_t v2 = sub_19EF60D24();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EF60A80(uint64_t a1)
{
  unint64_t v2 = sub_19EF60D24();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19EF60ABC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAE0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF60D24();
  sub_19F1DD8FC();
  char v14 = 0;
  sub_19F1DD26C();
  if (!v5)
  {
    char v13 = 1;
    sub_19F1DD26C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_19EF60C30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_19EF60D78(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_19EF60C60(void *a1)
{
  return sub_19EF60ABC(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t _s9JetEngine7JSRouteV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_19F1DD44C(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_19F1DD44C();
    }
  }
  return result;
}

unint64_t sub_19EF60D24()
{
  unint64_t result = qword_1E946CA70;
  if (!qword_1E946CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA70);
  }
  return result;
}

uint64_t sub_19EF60D78(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471128);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF60D24();
  sub_19F1DD8AC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_19F1DD18C();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_19F1DD18C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unsigned char *storeEnumTagSinglePayload for SentrySDK.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF6104CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SentrySDK.CodingKeys()
{
  return &type metadata for SentrySDK.CodingKeys;
}

unint64_t sub_19EF61088()
{
  unint64_t result = qword_1E9471130;
  if (!qword_1E9471130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471130);
  }
  return result;
}

unint64_t sub_19EF610E0()
{
  unint64_t result = qword_1E946CA80;
  if (!qword_1E946CA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA80);
  }
  return result;
}

unint64_t sub_19EF61138()
{
  unint64_t result = qword_1E946CA78;
  if (!qword_1E946CA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA78);
  }
  return result;
}

uint64_t sub_19EF6118C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t JetPackAsset.Metadata.etag.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JetPackAsset.Metadata.etag.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JetPackAsset.Metadata.etag.modify())()
{
  return nullsub_1;
}

uint64_t JetPackAsset.Metadata.lastModified.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JetPackAsset.Metadata.lastModified.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*JetPackAsset.Metadata.lastModified.modify())()
{
  return nullsub_1;
}

uint64_t JetPackAsset.Metadata.revalidatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  uint64_t v4 = sub_19F1DB57C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t JetPackAsset.Metadata.revalidatedAt.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  uint64_t v4 = sub_19F1DB57C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*JetPackAsset.Metadata.revalidatedAt.modify())(void)
{
  return nullsub_1;
}

__n128 JetPackAsset.Metadata.osVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 28));
  unint64_t v4 = v3[1].n128_u64[0];
  unsigned __int8 v5 = v3[1].n128_u8[8];
  __n128 result = *v3;
  *a1 = *v3;
  a1[1].n128_u64[0] = v4;
  a1[1].n128_u8[8] = v5;
  return result;
}

__n128 JetPackAsset.Metadata.osVersion.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int8 v3 = a1[1].n128_u8[8];
  unint64_t v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 28));
  __n128 result = v6;
  *unint64_t v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u8[8] = v3;
  return result;
}

uint64_t (*JetPackAsset.Metadata.osVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t JetPackAsset.Metadata.buildNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JetPackAsset.Metadata.buildNumber.setter(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v5 = (void *)(v2 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *unsigned __int8 v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*JetPackAsset.Metadata.buildNumber.modify())(void)
{
  return nullsub_1;
}

uint64_t JetPackAsset.Metadata.policy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for JetPackAsset.Metadata(0);
  unint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  uint64_t v7 = v4[2];
  char v8 = *((unsigned char *)v4 + 24);
  uint64_t v9 = v4[4];
  LOBYTE(v4) = *((unsigned char *)v4 + 40);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = (_BYTE)v4;
  return result;
}

uint64_t JetPackAsset.Metadata.policy.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = a1[2];
  char v5 = *((unsigned char *)a1 + 24);
  uint64_t v6 = a1[4];
  char v7 = *((unsigned char *)a1 + 40);
  uint64_t result = type metadata accessor for JetPackAsset.Metadata(0);
  uint64_t v9 = v1 + *(int *)(result + 36);
  *(void *)uint64_t v9 = v2;
  *(unsigned char *)(v9 + 8) = v3;
  *(void *)(v9 + 16) = v4;
  *(unsigned char *)(v9 + 24) = v5;
  *(void *)(v9 + 32) = v6;
  *(unsigned char *)(v9 + 40) = v7;
  return result;
}

uint64_t (*JetPackAsset.Metadata.policy.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_19EF617B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19EF63010(a1, a2);
  *a3 = result;
  return result;
}

void sub_19EF617D8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_19EF617E4(uint64_t a1)
{
  unint64_t v2 = sub_19EE4C474();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EF61820(uint64_t a1)
{
  unint64_t v2 = sub_19EE4C474();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t JetPackAsset.Metadata.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390EB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EE4C474();
  sub_19F1DD8FC();
  LOBYTE(v20) = 0;
  sub_19F1DD21C();
  if (!v2)
  {
    LOBYTE(v20) = 1;
    sub_19F1DD21C();
    uint64_t v9 = type metadata accessor for JetPackAsset.Metadata(0);
    LOBYTE(v20) = 2;
    sub_19F1DB57C();
    sub_19EE4C51C(&qword_1EB390B10);
    sub_19F1DD2AC();
    char v10 = (long long *)(v3 + *(int *)(v9 + 28));
    uint64_t v11 = *((void *)v10 + 2);
    char v12 = *((unsigned char *)v10 + 24);
    long long v20 = *v10;
    uint64_t v21 = v11;
    char v22 = v12;
    char v25 = 3;
    sub_19EF61B24();
    sub_19F1DD25C();
    LOBYTE(v20) = 4;
    sub_19F1DD21C();
    char v13 = (uint64_t *)(v3 + *(int *)(v9 + 36));
    uint64_t v14 = *v13;
    char v15 = *((unsigned char *)v13 + 8);
    uint64_t v16 = v13[2];
    char v17 = *((unsigned char *)v13 + 24);
    uint64_t v18 = v13[4];
    LOBYTE(v13) = *((unsigned char *)v13 + 40);
    *(void *)&long long v20 = v14;
    BYTE8(v20) = v15;
    uint64_t v21 = v16;
    char v22 = v17;
    uint64_t v23 = v18;
    char v24 = (char)v13;
    char v25 = 5;
    sub_19EF61B78();
    sub_19F1DD2AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_19EF61B24()
{
  unint64_t result = qword_1EB390D98;
  if (!qword_1EB390D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB390D98);
  }
  return result;
}

unint64_t sub_19EF61B78()
{
  unint64_t result = qword_1EB390D40;
  if (!qword_1EB390D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB390D40);
  }
  return result;
}

uint64_t sub_19EF61BCC(void *a1)
{
  return JetPackAsset.Metadata.encode(to:)(a1);
}

uint64_t JetPackAsset.OSVersion.majorVersion.getter()
{
  return *(void *)v0;
}

uint64_t JetPackAsset.OSVersion.minorVersion.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t JetPackAsset.OSVersion.patchVersion.getter()
{
  return *(void *)(v0 + 16);
}

BOOL static JetPackAsset.OSVersion.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_19EF61C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19EF632DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_19EF61C54(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_19EF61C60(uint64_t a1)
{
  unint64_t v2 = sub_19EE2CF50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EF61C9C(uint64_t a1)
{
  unint64_t v2 = sub_19EE2CF50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t JetPackAsset.OSVersion.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390EC0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EE2CF50();
  sub_19F1DD8FC();
  char v13 = 0;
  sub_19F1DD29C();
  if (!v2)
  {
    char v12 = 1;
    sub_19F1DD29C();
    char v11 = 2;
    sub_19F1DD29C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19EF61E70(void *a1)
{
  return JetPackAsset.OSVersion.encode(to:)(a1);
}

BOOL sub_19EF61E88(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t JetPackAsset.Policy.maxAge.getter()
{
  return *(void *)v0;
}

uint64_t JetPackAsset.Policy.maxAge.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*JetPackAsset.Policy.maxAge.modify())()
{
  return nullsub_1;
}

uint64_t JetPackAsset.Policy.nonBlockingRevalidateAge.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t JetPackAsset.Policy.nonBlockingRevalidateAge.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*JetPackAsset.Policy.nonBlockingRevalidateAge.modify())()
{
  return nullsub_1;
}

uint64_t JetPackAsset.Policy.evictAge.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t JetPackAsset.Policy.evictAge.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*JetPackAsset.Policy.evictAge.modify())()
{
  return nullsub_1;
}

uint64_t sub_19EF61F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19EF6346C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19EF61F94(uint64_t a1)
{
  unint64_t v2 = sub_19EE39D30();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EF61FD0(uint64_t a1)
{
  unint64_t v2 = sub_19EE39D30();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t JetPackAsset.Policy.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390EB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  int v14 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + 32);
  uint64_t v12 = v7;
  v10[1] = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EE39D30();
  sub_19F1DD8FC();
  char v17 = 0;
  uint64_t v8 = v13;
  sub_19F1DD23C();
  if (!v8)
  {
    char v16 = 1;
    sub_19F1DD23C();
    char v15 = 2;
    sub_19F1DD23C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_19EF621CC(void *a1)
{
  return JetPackAsset.Policy.encode(to:)(a1);
}

uint64_t JetPackAsset.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JetPackAsset(0) + 20);
  return sub_19EE4C30C(v3, a1);
}

unint64_t JetPackAsset.cacheID.getter()
{
  uint64_t v1 = (unsigned int *)(v0 + *(int *)(type metadata accessor for JetPackAsset(0) + 24));
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t JetPackAsset.cacheKey.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for JetPackAsset(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *assignWithCopy for JetPackAsset(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (uint64_t *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *(uint64_t *)((char *)a2 + v6);
  v7[1] = *(uint64_t *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = *((void *)v8 + 2);
  v7[3] = *((void *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for JetPackAsset.Metadata(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_19F1DB57C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = v9[7];
  char v15 = (_OWORD *)((char *)v7 + v14);
  char v16 = &v8[v14];
  long long v17 = *(_OWORD *)(v16 + 9);
  *char v15 = *(_OWORD *)v16;
  *(_OWORD *)((char *)v15 + 9) = v17;
  uint64_t v18 = v9[8];
  uint64_t v19 = (void *)((char *)v7 + v18);
  long long v20 = &v8[v18];
  *uint64_t v19 = *(void *)v20;
  v19[1] = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v9[9];
  char v22 = (char *)v7 + v21;
  uint64_t v23 = &v8[v21];
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)char v22 = v24;
  uint64_t v25 = *((void *)v23 + 2);
  v22[24] = v23[24];
  *((void *)v22 + 2) = v25;
  uint64_t v26 = *((void *)v23 + 4);
  v22[40] = v23[40];
  *((void *)v22 + 4) = v26;
  uint64_t v27 = a3[6];
  unsigned __int8 v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  LODWORD(v26) = *(_DWORD *)v29;
  v28[4] = v29[4];
  *(_DWORD *)unsigned __int8 v28 = v26;
  uint64_t v30 = a3[7];
  uint64_t v31 = (uint64_t *)((char *)a1 + v30);
  id v32 = (uint64_t *)((char *)a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for JetPackAsset(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(a2 + v7 + 16);
  *uint64_t v8 = *(_OWORD *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = (int *)type metadata accessor for JetPackAsset.Metadata(0);
  uint64_t v12 = v11[6];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_19F1DB57C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = v11[7];
  long long v17 = (_OWORD *)((char *)v8 + v16);
  uint64_t v18 = (_OWORD *)(v9 + v16);
  *long long v17 = *v18;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v18 + 9);
  *(_OWORD *)((char *)v8 + v11[8]) = *(_OWORD *)(v9 + v11[8]);
  uint64_t v19 = v11[9];
  long long v20 = (_OWORD *)((char *)v8 + v19);
  uint64_t v21 = (_OWORD *)(v9 + v19);
  long long v22 = v21[1];
  *long long v20 = *v21;
  v20[1] = v22;
  *(_OWORD *)((char *)v20 + 25) = *(_OWORD *)((char *)v21 + 25);
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  return a1;
}

uint64_t assignWithTake for JetPackAsset(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  v8[2] = *(void *)(v9 + 16);
  v8[3] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for JetPackAsset.Metadata(0);
  uint64_t v13 = v12[6];
  uint64_t v14 = (char *)v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = sub_19F1DB57C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v12[7];
  uint64_t v18 = (_OWORD *)((char *)v8 + v17);
  uint64_t v19 = (_OWORD *)(v9 + v17);
  *uint64_t v18 = *v19;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v19 + 9);
  uint64_t v20 = v12[8];
  uint64_t v21 = (void *)((char *)v8 + v20);
  long long v22 = (uint64_t *)(v9 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v12[9];
  uint64_t v26 = (char *)v8 + v25;
  uint64_t v27 = v9 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = *(unsigned char *)(v27 + 8);
  *((void *)v26 + 2) = *(void *)(v27 + 16);
  v26[24] = *(unsigned char *)(v27 + 24);
  v26[40] = *(unsigned char *)(v27 + 40);
  *((void *)v26 + 4) = *(void *)(v27 + 32);
  uint64_t v28 = a3[6];
  uint64_t v29 = a3[7];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  id v32 = (void *)(a1 + v29);
  unsigned int v33 = (uint64_t *)(a2 + v29);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *id v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19EF62700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for JetPackAsset.Metadata(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_19EF627B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for JetPackAsset.Metadata(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for JetPackAsset.Metadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_19F1DB57C();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (_OWORD *)((char *)v4 + v14);
    uint64_t v17 = (_OWORD *)((char *)a2 + v14);
    *uint64_t v16 = *v17;
    *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v17 + 9);
    uint64_t v18 = (uint64_t *)((char *)v4 + v15);
    uint64_t v19 = (uint64_t *)((char *)a2 + v15);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[9];
    long long v22 = (_OWORD *)((char *)v4 + v21);
    uint64_t v23 = (_OWORD *)((char *)a2 + v21);
    *(_OWORD *)((char *)v22 + 25) = *(_OWORD *)((char *)v23 + 25);
    long long v24 = v23[1];
    *long long v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *assignWithCopy for JetPackAsset.Metadata(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB57C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  uint64_t v12 = (_OWORD *)((char *)a2 + v10);
  long long v13 = *(_OWORD *)((char *)v12 + 9);
  *uint64_t v11 = *v12;
  *(_OWORD *)((char *)v11 + 9) = v13;
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)uint64_t v18 = v20;
  uint64_t v21 = *((void *)v19 + 2);
  v18[24] = v19[24];
  *((void *)v18 + 2) = v21;
  uint64_t v22 = *((void *)v19 + 4);
  v18[40] = v19[40];
  *((void *)v18 + 4) = v22;
  return a1;
}

_OWORD *initializeWithTake for JetPackAsset.Metadata(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_19F1DB57C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  long long v13 = *(_OWORD *)((char *)a2 + v11);
  long long v14 = *(_OWORD *)((char *)a2 + v11 + 9);
  uint64_t v15 = (_OWORD *)((char *)a1 + v11);
  *uint64_t v15 = v13;
  *(_OWORD *)((char *)v15 + 9) = v14;
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v16 = a3[9];
  uint64_t v17 = (_OWORD *)((char *)a1 + v16);
  uint64_t v18 = (_OWORD *)((char *)a2 + v16);
  *(_OWORD *)((char *)v17 + 25) = *(_OWORD *)((char *)v18 + 25);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  return a1;
}

void *assignWithTake for JetPackAsset.Metadata(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_19F1DB57C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  long long v14 = (_OWORD *)((char *)a1 + v12);
  uint64_t v15 = (_OWORD *)((char *)a2 + v12);
  *long long v14 = *v15;
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)v15 + 9);
  uint64_t v16 = (void *)((char *)a1 + v13);
  uint64_t v17 = (void *)((char *)a2 + v13);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  *((void *)v21 + 2) = *((void *)v22 + 2);
  v21[24] = v22[24];
  *((void *)v21 + 4) = *((void *)v22 + 4);
  v21[40] = v22[40];
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackAsset.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19EF62CE8);
}

uint64_t sub_19EF62CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_19F1DB57C();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for JetPackAsset.Metadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19EF62DB8);
}

uint64_t sub_19EF62DB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_19F1DB57C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JetPackAsset.Policy(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for JetPackAsset.Policy(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 41) = v3;
  return result;
}

unint64_t sub_19EF62F0C()
{
  unint64_t result = qword_1E9471138;
  if (!qword_1E9471138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471138);
  }
  return result;
}

unint64_t sub_19EF62F64()
{
  unint64_t result = qword_1E9471140;
  if (!qword_1E9471140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471140);
  }
  return result;
}

unint64_t sub_19EF62FBC()
{
  unint64_t result = qword_1E9471148;
  if (!qword_1E9471148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471148);
  }
  return result;
}

uint64_t sub_19EF63010(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1734440037 && a2 == 0xE400000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69646F4D7473616CLL && a2 == 0xEC00000064656966 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6164696C61766572 && a2 == 0xED00007441646574 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D754E646C697562 && a2 == 0xEB00000000726562 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7963696C6F70 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_19EF632DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726556726F6A616DLL && a2 == 0xEC0000006E6F6973;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726556726F6E696DLL && a2 == 0xEC0000006E6F6973 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265566863746170 && a2 == 0xEC0000006E6F6973)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_19EF6346C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65674178616DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000019F269E30 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6567417463697665 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

__n128 AutomationSemantics._id.setter(__n128 *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *a1;
  __n128 *v1 = *a1;
  return result;
}

uint64_t (*AutomationSemantics._id.modify())()
{
  return nullsub_1;
}

BOOL static AutomationSemantics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  return (sub_19EF636C0(*(void **)a1, *(void **)a2) & 1) != 0 && (sub_19EF63788(v2, v3) & 1) != 0;
}

BOOL sub_19EF63670(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  return (sub_19EF636C0(*(void **)a1, *(void **)a2) & 1) != 0 && (sub_19EF63788(v2, v3) & 1) != 0;
}

uint64_t sub_19EF636C0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_19F1DD44C(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_19F1DD44C() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_19EF63788(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v6 = *(i - 1);
      uint64_t v5 = *i;
      uint64_t v8 = *(v3 - 1);
      uint64_t v7 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_19F1DD44C() & 1) == 0) {
        break;
      }
      if (v5)
      {
        if (!v7) {
          return 0;
        }
        BOOL v10 = v6 == v8 && v5 == v7;
        if (!v10 && (sub_19F1DD44C() & 1) == 0) {
          return 0;
        }
      }
      else if (v7)
      {
        return 0;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

void *assignWithCopy for MetricsFieldsAggregator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for MetricsFieldsAggregator(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19EF638FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    for (uint64_t i = 0; ; i += 64)
    {
      uint64_t v5 = *(void *)(a1 + i + 48);
      uint64_t v6 = *(void *)(a1 + i + 56);
      char v7 = *(unsigned char *)(a1 + i + 72);
      char v8 = *(unsigned char *)(a1 + i + 88);
      uint64_t v9 = *(void *)(a2 + i + 48);
      uint64_t v10 = *(void *)(a2 + i + 56);
      uint64_t v17 = *(void *)(a2 + i + 64);
      uint64_t v18 = *(void *)(a1 + i + 64);
      int v11 = *(unsigned __int8 *)(a2 + i + 72);
      uint64_t v15 = *(void *)(a2 + i + 80);
      uint64_t v16 = *(void *)(a1 + i + 80);
      int v12 = *(unsigned __int8 *)(a2 + i + 88);
      if ((*(void *)(a1 + i + 32) != *(void *)(a2 + i + 32) || *(void *)(a1 + i + 40) != *(void *)(a2 + i + 40))
        && (sub_19F1DD44C() & 1) == 0)
      {
        break;
      }
      if ((v5 != v9 || v6 != v10) && (sub_19F1DD44C() & 1) == 0) {
        break;
      }
      if (v7)
      {
        if (!v11) {
          return 0;
        }
      }
      else
      {
        if (v18 == v17) {
          char v13 = v11;
        }
        else {
          char v13 = 1;
        }
        if (v13) {
          return 0;
        }
      }
      if (v8)
      {
        if (!v12) {
          return 0;
        }
      }
      else
      {
        if (v16 == v15) {
          char v4 = v12;
        }
        else {
          char v4 = 1;
        }
        if (v4) {
          return 0;
        }
      }
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

id MediaArtworkSourceConfiguration.format.getter()
{
  return *v0;
}

void MediaArtworkSourceConfiguration.format.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*MediaArtworkSourceConfiguration.format.modify())()
{
  return nullsub_1;
}

uint64_t MediaArtworkSourceConfiguration.quality.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t MediaArtworkSourceConfiguration.quality.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*MediaArtworkSourceConfiguration.quality.modify())()
{
  return nullsub_1;
}

id MediaArtworkSourceConfiguration.cropStyle.getter()
{
  return *(id *)(v0 + 24);
}

void MediaArtworkSourceConfiguration.cropStyle.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

uint64_t (*MediaArtworkSourceConfiguration.cropStyle.modify())()
{
  return nullsub_1;
}

double MediaArtworkSourceConfiguration.size.getter()
{
  return *(double *)(v0 + 32);
}

void MediaArtworkSourceConfiguration.size.setter(double a1, double a2)
{
  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

uint64_t (*MediaArtworkSourceConfiguration.size.modify())()
{
  return nullsub_1;
}

uint64_t sub_19EF63B5C()
{
  return 0;
}

BOOL _s9JetEngine31MediaArtworkSourceConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  double v5 = *(double *)(a1 + 32);
  double v4 = *(double *)(a1 + 40);
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  double v9 = *(double *)(a2 + 32);
  double v8 = *(double *)(a2 + 40);
  uint64_t v10 = sub_19F1DBD7C();
  uint64_t v12 = v11;
  if (v10 == sub_19F1DBD7C() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    if (v3) {
      goto LABEL_7;
    }
LABEL_10:
    if (v2 == v6) {
      char v17 = v7;
    }
    else {
      char v17 = 1;
    }
    if (v17) {
      return 0;
    }
    goto LABEL_14;
  }
  char v15 = sub_19F1DD44C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if ((v15 & 1) == 0) {
    return result;
  }
  if ((v3 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  if (!v7) {
    return 0;
  }
LABEL_14:
  uint64_t v18 = sub_19F1DBD7C();
  uint64_t v20 = v19;
  if (v18 == sub_19F1DBD7C() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v22 & 1) == 0) {
      return result;
    }
  }
  return v4 == v8 && v5 == v9;
}

void destroy for MediaArtworkSourceConfiguration(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for MediaArtworkSourceConfiguration(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  double v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  id v6 = v3;
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for MediaArtworkSourceConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  double v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  double v8 = *(void **)(a2 + 24);
  double v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v8;
  id v10 = v8;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for MediaArtworkSourceConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  double v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeepLinkRoute(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeepLinkRoute(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)BOOL result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaArtworkSourceConfiguration()
{
  return &type metadata for MediaArtworkSourceConfiguration;
}

uint64_t JetpackMetadata.fileVersion.getter()
{
  return *(void *)v0;
}

void JetpackMetadata.compression.getter(unsigned char *a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 9);
  *a1 = *(unsigned char *)(v1 + 8);
  a1[1] = v2;
}

void JetpackMetadata.encryption.getter(unsigned char *a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 11);
  *a1 = *(unsigned char *)(v1 + 10);
  a1[1] = v2;
}

void JetpackMetadata.serialization.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 12);
}

uint64_t JetpackMetadata.signature.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  unint64_t v4 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_19EF63FE0(v2, v3, v4);
}

uint64_t sub_19EF63FE0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 60 != 15) {
    return sub_19EEA0784(a2, a3);
  }
  return result;
}

uint64_t JetpackMetadata.versionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JetpackMetadata.keyIdentifier.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t destroy for JetpackMetadata(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 32);
  if (v1 >> 60 != 15) {
    sub_19EEA072C(*(void *)(a1 + 24), v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JetpackMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  unint64_t v4 = *(void *)(a2 + 32);
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v5 = *(void *)(a2 + 24);
    sub_19EEA0784(v5, v4);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v4;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JetpackMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = a1 + 16;
  uint64_t v5 = (long long *)(a2 + 16);
  if (*(void *)(a1 + 32) >> 60 == 15)
  {
    if (*(void *)(a2 + 32) >> 60 == 15)
    {
      long long v6 = *v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(_OWORD *)uint64_t v4 = v6;
    }
    else
    {
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v8 = *(void *)(a2 + 24);
      unint64_t v9 = *(void *)(a2 + 32);
      sub_19EEA0784(v8, v9);
      *(void *)(a1 + 24) = v8;
      *(void *)(a1 + 32) = v9;
    }
  }
  else if (*(void *)(a2 + 32) >> 60 == 15)
  {
    sub_19EF64240(a1 + 16);
    uint64_t v7 = *((void *)v5 + 2);
    *(_OWORD *)uint64_t v4 = *v5;
    *(void *)(v4 + 16) = v7;
  }
  else
  {
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    unint64_t v11 = *(void *)(a2 + 32);
    sub_19EEA0784(v10, v11);
    uint64_t v12 = *(void *)(a1 + 24);
    unint64_t v13 = *(void *)(a1 + 32);
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    sub_19EEA072C(v12, v13);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t sub_19EF64240(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for JetpackMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  unint64_t v6 = *(void *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v7;
      sub_19EEA072C(v8, v6);
      goto LABEL_6;
    }
    sub_19EF64240(a1 + 16);
  }
  *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
  *(void *)(v4 + 16) = *(void *)(v5 + 16);
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetpackMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JetpackMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 48) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackMetadata()
{
  return &type metadata for JetpackMetadata;
}

uint64_t MulticastDelegate.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(self, sel_weakObjectsHashTable);
  return v0;
}

uint64_t sub_19EF64478()
{
  unint64_t v1 = *(void **)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_allObjects);
  unint64_t v3 = sub_19F1DC16C();

  if (v3 >> 62) {
    goto LABEL_16;
  }
  unint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (!__OFSUB__(v4--, 1))
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x19F3C7060](v4, v3);
LABEL_11:
        swift_unknownObjectRetain();
        uint64_t v7 = sub_19F1DD42C();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (v6 == v7) {
          objc_msgSend(v1, sel_removeObject_, v6);
        }
        swift_unknownObjectRelease();
        if (!v4) {
          goto LABEL_17;
        }
      }
      else
      {
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_14;
        }
        if (v4 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v6 = *(void *)(v3 + 32 + 8 * v4);
          swift_unknownObjectRetain();
          goto LABEL_11;
        }
LABEL_15:
        __break(1u);
LABEL_16:
        swift_bridgeObjectRetain();
        unint64_t v4 = sub_19F1DD03C();
        swift_bridgeObjectRelease();
        if (!v4) {
          goto LABEL_17;
        }
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
LABEL_17:
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EF6461C(void (*a1)(char *))
{
  long long v24 = a1;
  uint64_t v2 = *((void *)*v1 + 10);
  uint64_t v23 = sub_19F1DCAAC();
  unint64_t v3 = *(void (***)(char *, char *, uint64_t))(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v5 = (char *)&v20 - v4;
  uint64_t v6 = *(void *)(v2 - 8);
  double v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - v9;
  id v11 = objc_msgSend(v1[2], sel_allObjects, v8);
  uint64_t v12 = MEMORY[0x1E4FBC838];
  unint64_t v13 = sub_19F1DC16C();

  if (v13 >> 62) {
    goto LABEL_17;
  }
  unint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v14)
  {
    unint64_t v25 = v13;
    unint64_t v26 = v13 & 0xC000000000000001;
    unint64_t v20 = v13 + 32;
    uint64_t v21 = v13 & 0xFFFFFFFFFFFFFF8;
    unint64_t v13 = v6 + 56;
    char v22 = (void (**)(char *, uint64_t))(v3 + 1);
    unint64_t v3 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    char v15 = (void (**)(char *, uint64_t))(v6 + 8);
    v12 += 8;
    while (!__OFSUB__(v14--, 1))
    {
      if (v26)
      {
        uint64_t v6 = MEMORY[0x19F3C7060](v14, v25);
      }
      else
      {
        if ((v14 & 0x8000000000000000) != 0) {
          goto LABEL_15;
        }
        if (v14 >= *(void *)(v21 + 16)) {
          goto LABEL_16;
        }
        uint64_t v6 = *(void *)(v20 + 8 * v14);
        swift_unknownObjectRetain();
      }
      uint64_t v27 = v6;
      swift_unknownObjectRetain();
      int v17 = swift_dynamicCast();
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v13;
      if (v17)
      {
        v18(v5, 0, 1, v2);
        (*v3)(v10, v5, v2);
        v24(v10);
        swift_unknownObjectRelease();
        (*v15)(v10, v2);
        if (!v14) {
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        v18(v5, 1, 1, v2);
        swift_unknownObjectRelease();
        (*v22)(v5, v23);
        if (!v14) {
          return swift_bridgeObjectRelease();
        }
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t MulticastDelegate.deinit()
{
  return v0;
}

uint64_t MulticastDelegate.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for MulticastDelegate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MulticastDelegate);
}

uint64_t dispatch thunk of MulticastDelegate.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MulticastDelegate.remove(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MulticastDelegate.invoke(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

id sub_19EF64A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  if (*(unsigned char *)(v2 + 32))
  {
    if (*(unsigned char *)(v2 + 32) == 1)
    {
      swift_retain();
      id v9 = (id)((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
      sub_19EF249E4(v4, v5, v7, v6, 1);
    }
    else if (v7 | v5 | v4 | v6)
    {
      return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE58]), sel_init);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    id v10 = objc_allocWithZone(MEMORY[0x1E4F4DD48]);
    swift_bridgeObjectRetain();
    if (v6)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v11 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      uint64_t v12 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v10, sel_initWithClientIdentifier_keychainAccessGroup_bag_, v11, v12, a2);
    }
    else
    {
      swift_unknownObjectRetain();
      unint64_t v14 = (void *)sub_19F1DBD4C();
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v10, sel_initWithClientIdentifier_bag_, v14, a2);
    }
    swift_unknownObjectRelease();
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD28]), sel_initWithTokenService_, v13);
  }
  return v9;
}

uint64_t AMSURLSession.init(process:bag:urlProtocol:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v3 + 48) = v6;
  *(unsigned char *)(v3 + 96) = *(unsigned char *)(a3 + 32);
  *(void *)(v3 + 64) = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unint64_t v7 = sub_19EF64FFC();
  double v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 72) = v8;
  *double v8 = v3;
  v8[1] = sub_19EF64CF8;
  v8[16] = a2;
  v8[17] = v7;
  v8[15] = a1;
  return MEMORY[0x1F4188298](sub_19EF65060, 0, 0);
}

uint64_t sub_19EF64CF8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_19EF64F50;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    uint64_t v5 = sub_19EF64E20;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_19EF64E20()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = *(void **)(v0 + 16);
  char v8 = *(unsigned char *)(v0 + 96);
  id v9 = objc_msgSend(*(id *)(v0 + 64), sel_initWithConfiguration_, v1);

  LOBYTE(v14) = v8;
  id v10 = v9;
  id v11 = sub_19EF64A38((uint64_t)v7, v5);
  sub_19EF249E4(v6, v4, v3, v2, v8);
  objc_msgSend(v10, sel_setProtocolHandler_, v11, v6, v4, v3, v2, v14);
  swift_unknownObjectRelease();
  objc_msgSend(v10, sel_setResponseDecoder_, 0);
  swift_unknownObjectRelease();

  uint64_t v12 = *(uint64_t (**)(id))(v0 + 8);
  return v12(v10);
}

uint64_t sub_19EF64F50()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void **)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void **)(v0 + 16);
  char v7 = *(unsigned char *)(v0 + 96);
  swift_unknownObjectRelease();

  sub_19EF249E4(v5, v4, v3, v1, v7);
  char v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

unint64_t sub_19EF64FFC()
{
  unint64_t result = qword_1E946DC70;
  if (!qword_1E946DC70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946DC70);
  }
  return result;
}

uint64_t static NSURLSessionConfiguration.appleServices(forProcess:withBag:)(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x1F4188298](sub_19EF65060, 0, 0);
}

uint64_t sub_19EF65060()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[15];
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultSessionConfiguration);
  v0[18] = v3;
  id v4 = objc_msgSend(v3, sel_ams_configureWithClientInfo_bag_, v2, v1);
  v0[19] = v4;
  v0[2] = v0;
  v0[7] = v0 + 21;
  v0[3] = sub_19EF651AC;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_19EF6539C;
  v0[13] = &block_descriptor;
  v0[14] = v5;
  objc_msgSend(v4, sel_resultWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_19EF651AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_19EF65324;
  }
  else {
    uint64_t v2 = sub_19EF652BC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19EF652BC()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 144);
  return v1(v2);
}

uint64_t sub_19EF65324()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = (void *)v0[18];
  swift_willThrow();

  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_19EF6539C(uint64_t a1, char a2, void *a3)
{
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    swift_allocError();
    *uint64_t v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

id static AMSURLSession.forJetEngineStorefront(with:for:usingProtocol:)(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a1;
  uint64_t v5 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v6 = a3[2];
  uint64_t v7 = a3[3];
  id v8 = objc_msgSend(self, sel_ams_configurationWithProcessInfo_bag_, a2, *a1);
  id v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithConfiguration_, v8);

  if (v4)
  {
    if (v4 == 1)
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      char v10 = 2;
      uint64_t v5 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v10 = 0;
    }
  }
  else
  {
    char v10 = 2;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  id v11 = objc_msgSend(self, sel_currentProcess);
  id v12 = sub_19EF64A38((uint64_t)v11, v3);

  sub_19EF249E4(v5, v4, v6, v7, v10);
  objc_msgSend(v9, sel_setProtocolHandler_, v12);
  swift_unknownObjectRelease();
  objc_msgSend(v9, sel_setResponseDecoder_, 0);
  return v9;
}

uint64_t sub_19EF655D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
  {
    return swift_retain();
  }
  else if (!a5)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AppleServicesURLProtocol(uint64_t a1)
{
  return sub_19EF249E4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for AppleServicesURLProtocol(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_19EF655D0(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AppleServicesURLProtocol(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_19EF655D0(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_19EF249E4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AppleServicesURLProtocol(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_19EF249E4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleServicesURLProtocol(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleServicesURLProtocol(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19EF65810(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_19EF65828(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppleServicesURLProtocol()
{
  return &type metadata for AppleServicesURLProtocol;
}

uint64_t sub_19EF65854()
{
  uint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_19EF658A8(char a1)
{
  if (a1) {
    return 0x6C616974696E6924;
  }
  else {
    return 0x746E65746E6924;
  }
}

uint64_t sub_19EF658E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_19EF65954(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_19EF659C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_19EF65A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_19EF65AA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EF65854();
  *a1 = result;
  return result;
}

uint64_t sub_19EF65AD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_19EF658A8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_19EF65B0C()
{
  return sub_19EF658A8(*v0);
}

uint64_t sub_19EF65B1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EF65854();
  *a1 = result;
  return result;
}

uint64_t sub_19EF65B48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EF67864();
  *a1 = result;
  return result;
}

uint64_t sub_19EF65B74(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_19EF65BC8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t static SidepackedIntent.kind.getter()
{
  return 0x6361706564697324;
}

uint64_t SidepackedIntent._canonicalized.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EEC4154(v2 + *(int *)(a1 + 28), a2);
}

uint64_t SidepackedIntent.init(initial:resolveUsing:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for SidepackedIntent() + 28);
  return sub_19EEBB420(a2, v6);
}

uint64_t type metadata accessor for SidepackedIntent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t static SidepackedIntent._unwrapData<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v7 = type metadata accessor for SidepackedIntent();
  uint64_t v8 = sub_19F1DCAAC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v21 - v14;
  sub_19EF65F64(a1, a2, a3, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v16 = *(void *)(a2 - 8);
    uint64_t v17 = 1;
    uint64_t v18 = v22;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, v7);
    uint64_t v16 = *(void *)(a2 - 8);
    uint64_t v19 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v22, v15, a2);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v7);
    uint64_t v17 = 0;
    uint64_t v18 = v19;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v18, v17, 1, a2);
}

uint64_t sub_19EF65F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v54 = a2;
  id v55 = a4;
  uint64_t v6 = type metadata accessor for SidepackedIntent();
  uint64_t v7 = sub_19F1DCAAC();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v50 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  unint64_t v25 = (char *)&v45 - v24;
  unint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  uint64_t v51 = a1;
  v26(v17, a1, a3, v23);
  int v27 = swift_dynamicCast();
  uint64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  if (v27)
  {
    uint64_t v29 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56);
    v28(v11, 0, 1, v6);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v30(v25, v11, v6);
    uint64_t v31 = v55;
    v30(v55, v25, v6);
    id v32 = v31;
    return v29((uint64_t)v32, 0, 1, v6);
  }
  uint64_t v46 = v18;
  unint64_t v47 = v21;
  unint64_t v48 = (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v28;
  v28(v11, 1, 1, v6);
  unsigned int v33 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v34 = v11;
  uint64_t v35 = v53;
  v33(v34, v53);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v50, v51, a3);
  uint64_t v36 = v54;
  type metadata accessor for AnyIntentModel();
  if (swift_dynamicCast())
  {
    v60[0] = v57;
    v60[1] = v58;
    uint64_t v61 = v59;
    sub_19EEBB420(v60, (uint64_t)&v57);
    uint64_t v56 = v36;
    swift_getExtendedExistentialTypeMetadata();
    uint64_t v37 = v49;
    char v38 = swift_dynamicCast();
    uint64_t v39 = v55;
    if (v38)
    {
      uint64_t v29 = v48;
      v48((uint64_t)v37, 0, 1, v6);
      id v40 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      uint64_t v41 = v47;
      v40(v47, v37, v6);
      v40(v39, v41, v6);
      id v32 = v39;
      return v29((uint64_t)v32, 0, 1, v6);
    }
    uint64_t v44 = v48;
    v48((uint64_t)v37, 1, 1, v6);
    v33(v37, v35);
    return v44((uint64_t)v39, 1, 1, v6);
  }
  else
  {
    uint64_t v43 = sub_19F1DCAAC();
    long long v57 = 0u;
    long long v58 = 0u;
    uint64_t v59 = 0;
    (*(void (**)(long long *, uint64_t))(*(void *)(v43 - 8) + 8))(&v57, v43);
    return v48((uint64_t)v55, 1, 1, v6);
  }
}

uint64_t static SidepackedIntent._unwrapData<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v26 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_19F1DCAAC();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = type metadata accessor for SidepackedIntent();
  uint64_t v13 = sub_19F1DCAAC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v24 - v19;
  sub_19EF65F64(a1, a2, v27, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v29, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v22 = v29;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v16, v12);
    static Continuous._unwrapOnlyElement<A>(of:)((uint64_t)v20, AssociatedTypeWitness, a2, (uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v12);
    uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v22, 1, 1, AssociatedTypeWitness);
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v22, v11, AssociatedTypeWitness);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v22, 0, 1, AssociatedTypeWitness);
    }
  }
}

void sub_19EF667C0(void *a1@<X8>)
{
  *a1 = 0x6361706564697324;
  a1[1] = 0xEB0000000064656BLL;
}

uint64_t SidepackedIntent<>.init(from:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v29 = a3;
  uint64_t v27 = *(a2 - 1);
  MEMORY[0x1F4188790](a1);
  uint64_t v30 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SidepackedIntent.CodingKeys();
  swift_getWitnessTable();
  uint64_t v7 = sub_19F1DD1EC();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = type metadata accessor for SidepackedIntent();
  uint64_t v26 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v24 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = v33;
  sub_19F1DD8AC();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v25 = v12;
  uint64_t v33 = v10;
  uint64_t v14 = v31;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_19F1DD89C();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v15);
  uint64_t v16 = v36[0];
  LOBYTE(v34[0]) = 0;
  uint64_t v17 = v32;
  sub_19F1DD11C();
  JSONObject.init(from:)(v35, v36);
  sub_19EEC355C((uint64_t)v36, (uint64_t)v34);
  uint64_t v37 = v16;
  AnyIntentModel.init(deserializing:using:)((uint64_t)v34, &v37, a2, (uint64_t)v35);
  uint64_t v18 = type metadata accessor for AnyIntentModel();
  AnyIntentModel._canonicalized.getter(v18, (uint64_t)v34);
  (*(void (**)(void *, uint64_t))(*(void *)(v18 - 8) + 8))(v35, v18);
  uint64_t v19 = v25;
  sub_19EEBB420(v34, (uint64_t)&v25[*(int *)(v33 + 28)]);
  LOBYTE(v35[0]) = 1;
  uint64_t v20 = v30;
  sub_19F1DD1BC();
  sub_19EEC3418((uint64_t)v36);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v17);
  (*(void (**)(char *, char *, void *))(v27 + 32))(v19, v20, a2);
  uint64_t v21 = v26;
  uint64_t v22 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v28, v19, v33);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v19, v22);
}

uint64_t type metadata accessor for SidepackedIntent.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EF66C90@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return SidepackedIntent<>.init(from:)(a1, *(void **)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t SidepackedIntent<>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v17 = *(a2 - 1);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v10;
  JSONObject.subscript.getter(0x6C616974696E6924, 0xE800000000000000, (uint64_t)v20);
  swift_bridgeObjectRelease();
  *(void *)&v19[0] = v11;
  uint64_t v12 = *(void (**)(unsigned char *, long long *, void *, uint64_t))(a3 + 8);
  swift_bridgeObjectRetain();
  v12(v20, v19, a2, a3);
  if (v4)
  {
    sub_19EEC3418(a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v18;
    (*(void (**)(uint64_t, char *, void *))(v17 + 32))(v18, v9, a2);
    JSONObject.subscript.getter(0x746E65746E6924, 0xE700000000000000, (uint64_t)v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = v11;
    AnyIntentModel.init(deserializing:using:)((uint64_t)v19, &v21, a2, (uint64_t)v20);
    uint64_t v15 = type metadata accessor for AnyIntentModel();
    AnyIntentModel._canonicalized.getter(v15, (uint64_t)v19);
    sub_19EEC3418(a1);
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v15 - 8) + 8))(v20, v15);
    uint64_t v16 = type metadata accessor for SidepackedIntent();
    return sub_19EEBB420(v19, v14 + *(int *)(v16 + 28));
  }
}

uint64_t sub_19EF66F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return SidepackedIntent<>.init(deserializing:using:)(a1, *(void **)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t sub_19EF66F20()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19EF66FB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 24);
    *(void *)(v10 + 24) = v12;
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_19EF670F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  return __swift_destroy_boxed_opaque_existential_1Tm(v4);
}

uint64_t sub_19EF67160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_19EF67220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_19EF67298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 32);
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(void *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_19EF6731C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v7);
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_19EF673A8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x19EF674F4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double sub_19EF67508(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x19EF676F4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            double result = 0.0;
            *(_OWORD *)(v19 + 8) = 0u;
            *(_OWORD *)(v19 + 24) = 0u;
            *(void *)unint64_t v19 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v19 + 24) = a2 - 1;
          }
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return result;
  }
}

unsigned char *sub_19EF6771C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF677E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_19EF67810()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EF6782C()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EF67848()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EF67864()
{
  return 2;
}

uint64_t ScalarDictionary.Value.rawValue.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  switch(*((unsigned char *)v1 + 16))
  {
    case 1:
      uint64_t v3 = MEMORY[0x1E4FBB3D0];
      goto LABEL_6;
    case 2:
      uint64_t v3 = MEMORY[0x1E4FBB550];
LABEL_6:
      a1[3] = v3;
      *a1 = v2;
      break;
    case 3:
      uint64_t v4 = v1[1];
      a1[3] = MEMORY[0x1E4FBB1A0];
      *a1 = v2;
      a1[1] = v4;
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      a1[3] = MEMORY[0x1E4FBB390];
      *(unsigned char *)a1 = v2 & 1;
      break;
  }
  return result;
}

uint64_t ScalarDictionary.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  swift_bridgeObjectRelease();
  JSONObject.dictionary.getter((uint64_t)&v12);
  if (*((void *)&v13 + 1))
  {
    v15[0] = v12;
    v15[1] = v13;
    uint64_t v5 = v14;
    uint64_t v16 = v14;
    uint64_t v6 = *((void *)&v13 + 1);
    __swift_project_boxed_opaque_existential_1(v15, *((uint64_t *)&v13 + 1));
    uint64_t v7 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>), void, void, ValueMetadata *, void, uint64_t, uint64_t))(v5 + 48))(sub_19EF67AA4, 0, MEMORY[0x1E4FBB1A0], &type metadata for ScalarDictionary.Value, MEMORY[0x1E4FBB1B0], v6, v5);
    sub_19EEC3418(a1);
    uint64_t result = sub_19EEC05FC((uint64_t)v15);
    if (!v2) {
      *a2 = v7;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v12, &qword_1E946F740);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D900);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
    sub_19EF5B580();
    *(void *)(v9 + 32) = swift_allocError();
    *(_OWORD *)uint64_t v10 = xmmword_19F2501A0;
    *(void *)(v10 + 16) = 0x20000001EF13EF00uLL;
    *(void *)(v10 + 24) = 0;
    swift_allocError();
    *unsigned int v11 = &type metadata for ScalarDictionary;
    v11[1] = v9;
    id v11[2] = 0;
    id v11[3] = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  return result;
}

uint64_t sub_19EF67AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_19EEC3ED8(a3, (uint64_t)v15, (uint64_t *)&unk_1E946FD20);
  uint64_t v8 = v16;
  if (v16)
  {
    uint64_t v9 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v9 + 136))(&v18, v8, v9);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    if (v4) {
      return result;
    }
    unsigned __int8 v11 = v19;
    if (v19 != 255)
    {
      long long v12 = v18;
      *(void *)a4 = a1;
      *(void *)(a4 + 8) = a2;
      *(_OWORD *)(a4 + 16) = v12;
      *(unsigned char *)(a4 + 32) = v11;
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v15, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EF5B580();
  swift_allocError();
  *long long v13 = a1;
  v13[1] = a2;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  void v13[2] = 0x40000001EF13EF00uLL;
  _OWORD v13[3] = v14;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t ScalarDictionary.init(tryDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a2;
  JSONObject.dictionary.getter((uint64_t)&v12);
  if (*((void *)&v13 + 1))
  {
    long long v15 = v12;
    long long v16 = v13;
    uint64_t v17 = v14;
    MEMORY[0x1F4188790](v6);
    id v11[2] = v5;
    uint64_t v7 = *((void *)&v16 + 1);
    uint64_t v8 = v17;
    __swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
    uint64_t v9 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>), void *, void, ValueMetadata *, void, uint64_t, uint64_t))(v8 + 48))(sub_19EECA854, v11, MEMORY[0x1E4FBB1A0], &type metadata for ScalarDictionary.Value, MEMORY[0x1E4FBB1B0], v7, v8);
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
    uint64_t result = sub_19EEC05FC((uint64_t)&v15);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)&v12, &qword_1E946F740);
    uint64_t result = sub_19EEC3418(a1);
    uint64_t v9 = MEMORY[0x1E4FBC868];
  }
  *a3 = v9;
  return result;
}

Swift::Bool __swiftcall ScalarDictionary.contains(_:)(Swift::String a1)
{
  if (*(void *)(*(void *)v1 + 16))
  {
    object = a1._object;
    uint64_t countAndFlagsBits = a1._countAndFlagsBits;
    swift_bridgeObjectRetain();
    sub_19EEBD400(countAndFlagsBits, (uint64_t)object);
    char v5 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t ScalarDictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  if (!*(void *)(v3 + 16)) {
    return 2;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EEBD400(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  uint64_t v8 = *(void *)(v3 + 56) + 24 * v6;
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  int v11 = *(unsigned __int8 *)(v8 + 16);
  sub_19EECA824(*(void *)v8, v10, *(unsigned char *)(v8 + 16));
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_19EECA83C(v9, v10, v11);
    return 2;
  }
  return v9 & 1;
}

{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  uint64_t v3 = *v2;
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_19EEBD400(a1, a2);
    if (v7)
    {
      uint64_t v8 = *(void *)(v3 + 56) + 24 * v6;
      uint64_t v9 = *(void *)v8;
      uint64_t v10 = *(void *)(v8 + 8);
      int v11 = *(unsigned __int8 *)(v8 + 16);
      sub_19EECA824(*(void *)v8, v10, *(unsigned char *)(v8 + 16));
      swift_bridgeObjectRelease();
      if (v11 == 1) {
        return v9;
      }
      sub_19EECA83C(v9, v10, v11);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  uint64_t v3 = *v2;
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_19EEBD400(a1, a2);
    if (v7)
    {
      uint64_t v8 = *(void *)(v3 + 56) + 24 * v6;
      uint64_t v9 = *(void *)v8;
      uint64_t v10 = *(void *)(v8 + 8);
      int v11 = *(unsigned __int8 *)(v8 + 16);
      sub_19EECA824(*(void *)v8, v10, *(unsigned char *)(v8 + 16));
      swift_bridgeObjectRelease();
      if (v11 == 2) {
        return v9;
      }
      sub_19EECA83C(v9, v10, v11);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  uint64_t v3 = *v2;
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EEBD400(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v8 = *(void *)(v3 + 56) + 24 * v6;
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  int v11 = *(unsigned __int8 *)(v8 + 16);
  sub_19EECA824(*(void *)v8, v10, *(unsigned char *)(v8 + 16));
  swift_bridgeObjectRelease();
  if (v11 != 3)
  {
    sub_19EECA83C(v9, v10, v11);
    return 0;
  }
  return v9;
}

uint64_t sub_19EF67E3C@<X0>(uint64_t *a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  char v5 = ScalarDictionary.subscript.getter(v3, v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t ScalarDictionary.subscript.setter(char a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    sub_19EF6B46C(a2, a3, (uint64_t)v9);
    sub_19EF6E710(v9[0], v9[1], v10);
  }
  else
  {
    uint64_t v6 = a1 & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_19EFBC1B4(v6, 0, 0, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v9[0];
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t (*ScalarDictionary.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v3;
  *(void *)a1 = a2;
  uint64_t v5 = *v3;
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_19EEBD400(a2, a3);
    if (v9)
    {
      uint64_t v10 = *(void *)(v5 + 56) + 24 * v8;
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = *(void *)(v10 + 8);
      int v13 = *(unsigned __int8 *)(v10 + 16);
      sub_19EECA824(*(void *)v10, v12, *(unsigned char *)(v10 + 16));
      swift_bridgeObjectRelease();
      if (!v13)
      {
        char v14 = v11 & 1;
        goto LABEL_7;
      }
      sub_19EECA83C(v11, v12, v13);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  char v14 = 2;
LABEL_7:
  *(unsigned char *)(a1 + 24) = v14;
  return sub_19EF68054;
}

uint64_t sub_19EF68054(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)a1;
  char v3 = *(unsigned char *)(a1 + 24);
  swift_bridgeObjectRetain();
  return ScalarDictionary.subscript.setter(v3, v2, v1);
}

uint64_t ScalarDictionary.subscript.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_19EF683A4(a1, a2, a3, a4, 1);
}

{
  return sub_19EF683A4(a1, a2, a3, a4, 2);
}

void (*ScalarDictionary.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, uint64_t a2)
{
  char v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  uint64_t v7[4] = v3;
  v7[2] = a2;
  uint64_t v8 = *v3;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_19EEBD400(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v12 = 0;
    char v15 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v8 + 56) + 24 * v9;
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *(void *)(v11 + 8);
  int v14 = *(unsigned __int8 *)(v11 + 16);
  sub_19EECA824(*(void *)v11, v13, *(unsigned char *)(v11 + 16));
  swift_bridgeObjectRelease();
  if (v14 != 1)
  {
    sub_19EECA83C(v12, v13, v14);
    goto LABEL_7;
  }
  char v15 = 0;
LABEL_8:
  *char v7 = v12;
  *((unsigned char *)v7 + 8) = v15;
  return sub_19EF68250;
}

{
  uint64_t *v3;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;

  char v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  uint64_t v7[4] = v3;
  v7[2] = a2;
  uint64_t v8 = *v3;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_19EEBD400(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v12 = 0;
    char v15 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v8 + 56) + 24 * v9;
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *(void *)(v11 + 8);
  int v14 = *(unsigned __int8 *)(v11 + 16);
  sub_19EECA824(*(void *)v11, v13, *(unsigned char *)(v11 + 16));
  swift_bridgeObjectRelease();
  if (v14 != 2)
  {
    sub_19EECA83C(v12, v13, v14);
    goto LABEL_7;
  }
  char v15 = 0;
LABEL_8:
  *char v7 = v12;
  *((unsigned char *)v7 + 8) = v15;
  return sub_19EF68564;
}

void sub_19EF68250(uint64_t **a1, uint64_t a2)
{
}

uint64_t sub_19EF6831C@<X0>(uint64_t *a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t v7 = a2(v5, v6);
  char v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v7;
  *(unsigned char *)(a3 + 8) = v9 & 1;
  return result;
}

uint64_t sub_19EF683A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a2)
  {
    sub_19EF6B46C(a3, a4, (uint64_t)v12);
    sub_19EF6E710(v12[0], v12[1], v13);
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12[0] = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_19EFBC1B4(a1, 0, a5, a3, a4, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v12[0];
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_19EF68564(uint64_t **a1, uint64_t a2)
{
}

void sub_19EF6857C(uint64_t **a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[2];
  uint64_t v7 = **a1;
  uint64_t v8 = *((unsigned __int8 *)*a1 + 8);
  swift_bridgeObjectRetain();
  a3(v7, v8, v6, v5);
  free(v4);
}

uint64_t sub_19EF686AC@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = ScalarDictionary.subscript.getter(v3, v4);
  uint64_t v7 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  a2[1] = v7;
  return result;
}

uint64_t sub_19EF6871C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return ScalarDictionary.subscript.setter(v5, v6, v3, v4);
}

uint64_t ScalarDictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11[0] = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_19EFBC1B4(a1, a2, 3, a3, a4, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v11[0];
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19EF6B46C(a3, a4, (uint64_t)v11);
    sub_19EF6E710(v11[0], v11[1], v12);
  }
  return swift_bridgeObjectRelease();
}

void (*ScalarDictionary.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  uint64_t v7[4] = v3;
  v7[2] = a2;
  uint64_t v8 = *v3;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_19EEBD400(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(v8 + 56) + 24 * v9;
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *(void *)(v11 + 8);
  int v14 = *(unsigned __int8 *)(v11 + 16);
  sub_19EECA824(*(void *)v11, v13, *(unsigned char *)(v11 + 16));
  swift_bridgeObjectRelease();
  if (v14 != 3)
  {
    sub_19EECA83C(v12, v13, v14);
LABEL_6:
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  *uint64_t v7 = v12;
  v7[1] = v13;
  return sub_19EF6892C;
}

void sub_19EF6892C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[2];
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ScalarDictionary.subscript.setter(v3, v4, v6, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    ScalarDictionary.subscript.setter(v3, v4, v6, v5);
  }
  free(v2);
}

uint64_t ScalarDictionary.removeValue(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v15 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19EFBE0CC();
      uint64_t v12 = v15;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 56) + 24 * v8;
    char v14 = *(unsigned char *)(v13 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v13;
    *(unsigned char *)(a3 + 16) = v14;
    sub_19EF6C5A0(v8, v12);
    *uint64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = -1;
  }
  return result;
}

uint64_t ScalarDictionary.merge(_:uniquingKeysWith:)(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, id *, uint64_t *))
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_19EF6E0D0(v4, (uint64_t)sub_19EF6E4D4, 0, isUniquelyReferenced_nonNull_native, a2);
  *uint64_t v2 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t ScalarDictionary.merging(_:uniquingKeysWith:)@<X0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr, id *, uint64_t *)@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = *v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_19EF6E0D0(v7, (uint64_t)sub_19EF6E4D4, 0, isUniquelyReferenced_nonNull_native, a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4) {
    return swift_bridgeObjectRelease();
  }
  *a3 = v8;
  return result;
}

uint64_t sub_19EF68C38@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = *((unsigned __int8 *)a1 + 32);
  swift_bridgeObjectRetain();
  sub_19EECA824(v5, v6, v7);
  sub_19EECA83C(v5, v6, v7);
  *a2 = v4;
  a2[1] = v3;
  swift_bridgeObjectRetain();
  sub_19EECA824(v5, v6, v7);
  uint64_t result = swift_bridgeObjectRelease();
  switch(v7)
  {
    case 1:
      uint64_t v9 = MEMORY[0x1E4FBB3D0];
      goto LABEL_6;
    case 2:
      uint64_t v9 = MEMORY[0x1E4FBB550];
LABEL_6:
      a2[5] = v9;
      a2[2] = v5;
      break;
    case 3:
      a2[5] = MEMORY[0x1E4FBB1A0];
      a2[2] = v5;
      a2[3] = v6;
      break;
    default:
      a2[5] = MEMORY[0x1E4FBB390];
      *((unsigned char *)a2 + 16) = v5 & 1;
      break;
  }
  return result;
}

uint64_t ScalarDictionary.jsRepresentation(in:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  id v36 = self;
  id v5 = objc_msgSend(v36, sel_valueWithNewObjectInContext_, a1);
  if (!v5) {
    goto LABEL_42;
  }
  uint64_t v6 = v5;
  uint64_t v34 = v4 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v4 + 64);
  int64_t v35 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v31 = a1;
  uint64_t v32 = v4;
  id v30 = v6;
  if (v9)
  {
    while (2)
    {
      unint64_t v16 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v17 = v16 | (v10 << 6);
LABEL_23:
      uint64_t v21 = *(void *)(v4 + 56) + 24 * v17;
      uint64_t v22 = *(void *)v21;
      uint64_t v23 = *(void *)(v21 + 8);
      switch(*(unsigned char *)(v21 + 16))
      {
        case 1:
          unint64_t v11 = v9;
          int64_t v12 = v10;
          swift_bridgeObjectRetain();
          id v13 = objc_msgSend(v36, sel_valueWithDouble_inContext_, a1, *(double *)&v22);
          if (!v13) {
            goto LABEL_39;
          }
          goto LABEL_7;
        case 2:
          if (v22 < (uint64_t)0xFFFFFFFF80000000) {
            goto LABEL_35;
          }
          if (v22 > 0x7FFFFFFF) {
            goto LABEL_36;
          }
          unint64_t v11 = v9;
          int64_t v12 = v10;
          swift_bridgeObjectRetain();
          id v13 = objc_msgSend(v36, sel_valueWithInt32_inContext_, v22, a1);
          if (!v13) {
            goto LABEL_40;
          }
LABEL_7:
          id v14 = v13;
          uint64_t v15 = (void *)sub_19F1DBD4C();
          swift_bridgeObjectRelease();
          objc_msgSend(v6, sel_setValue_forProperty_, v14, v15);

          int64_t v10 = v12;
          unint64_t v9 = v11;
          if (v11) {
            continue;
          }
          goto LABEL_9;
        case 3:
          int64_t v33 = v10;
          sub_19EECA824(v22, v23, 3);
          swift_bridgeObjectRetain();
          sub_19EECA824(v22, v23, 3);
          id v24 = a1;
          id v25 = objc_msgSend(v36, sel_valueWithObject_inContext_, sub_19F1DD62C(), v24);
          swift_unknownObjectRelease();

          if (!v25) {
            goto LABEL_41;
          }
          id v26 = v25;
          uint64_t v27 = (void *)sub_19F1DBD4C();
          swift_bridgeObjectRelease();
          uint64_t v6 = v30;
          objc_msgSend(v30, sel_setValue_forProperty_, v26, v27);

          sub_19EECA83C(v22, v23, 3);
          a1 = v31;
          uint64_t v4 = v32;
          int64_t v10 = v33;
          if (!v9) {
            goto LABEL_9;
          }
          continue;
        default:
          unint64_t v11 = v9;
          int64_t v12 = v10;
          swift_bridgeObjectRetain();
          id v13 = objc_msgSend(v36, sel_valueWithBool_inContext_, v22 & 1, a1);
          if (v13) {
            goto LABEL_7;
          }
          goto LABEL_38;
      }
    }
  }
LABEL_9:
  int64_t v18 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    JUMPOUT(0x19EF6917CLL);
  }
  if (v18 < v35)
  {
    unint64_t v19 = *(void *)(v34 + 8 * v18);
    ++v10;
    if (v19) {
      goto LABEL_22;
    }
    int64_t v10 = v18 + 1;
    if (v18 + 1 >= v35) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v10);
    if (v19) {
      goto LABEL_22;
    }
    int64_t v10 = v18 + 2;
    if (v18 + 2 >= v35) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v10);
    if (v19)
    {
LABEL_22:
      unint64_t v9 = (v19 - 1) & v19;
      unint64_t v17 = __clz(__rbit64(v19)) + (v10 << 6);
      goto LABEL_23;
    }
    int64_t v20 = v18 + 3;
    if (v20 < v35)
    {
      unint64_t v19 = *(void *)(v34 + 8 * v20);
      if (v19)
      {
        int64_t v10 = v20;
        goto LABEL_22;
      }
      while (1)
      {
        int64_t v10 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_37;
        }
        if (v10 >= v35) {
          break;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v10);
        ++v20;
        if (v19) {
          goto LABEL_22;
        }
      }
    }
  }
LABEL_33:
  swift_release();
  uint64_t result = sub_19EEBDC10(0, (unint64_t *)&qword_1EB392790);
  a2[3] = result;
  a2[4] = &protocol witness table for JSValue;
  *a2 = v6;
  return result;
}

JSValue __swiftcall ScalarDictionary.makeValue(in:)(JSContext in)
{
  return (JSValue)sub_19EF69270(in.super.isa, *v1);
}

long long *sub_19EF69270(void *a1, uint64_t a2)
{
  *(void *)&long long v19 = a2;
  ScalarDictionary.jsRepresentation(in:)(a1, &v24);
  if (v2)
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v6 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_19F24EAD0;
    id v8 = v6;
    uint64_t v23 = sub_19EEC3F3C(0, 82, 0, MEMORY[0x1E4FBC860]);
    v9._uint64_t countAndFlagsBits = 0x69747265766E6F43;
    v9._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    void v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471290);
    v22[0] = &type metadata for ScalarDictionary;
    sub_19EEC3ED8((uint64_t)v22, (uint64_t)v21, &qword_1EB393260);
    long long v19 = 0u;
    long long v20 = 0u;
    sub_19EEC3E70((uint64_t)v21, (uint64_t)&v19);
    LOBYTE(v26) = 0;
    long long v24 = v19;
    long long v25 = v20;
    int64_t v10 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v10 = sub_19EEC3F3C(0, v10[2] + 1, 1, v10);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      int64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    _DWORD v10[2] = v12 + 1;
    id v13 = &v10[5 * v12];
    long long v14 = v24;
    long long v15 = v25;
    *((unsigned char *)v13 + 64) = v26;
    *((_OWORD *)v13 + 2) = v14;
    *((_OWORD *)v13 + 3) = v15;
    uint64_t v23 = v10;
    sub_19EEBD664((uint64_t)v22, &qword_1EB393260);
    v16._object = (void *)0x800000019F269F20;
    v16._uint64_t countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(void *)(v7 + 32) = v23;
    *(void *)&long long v24 = v8;
    LOBYTE(v19) = 1;
    int64_t v18 = &v24;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v19);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    uint64_t v4 = *((void *)&v25 + 1);
    uint64_t v5 = v26;
    __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
    int64_t v18 = (long long *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 16))(a1, v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
  }
  return v18;
}

uint64_t static ScalarDictionary.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_19EF6950C(*a1, *a2);
}

uint64_t sub_19EF6950C(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v33 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  int64_t v34 = (unint64_t)(v5 + 63) >> 6;
  if ((v6 & v4) != 0) {
    goto LABEL_10;
  }
  while (2)
  {
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v10 >= v34) {
      return 1;
    }
    unint64_t v11 = *(void *)(v33 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (v11) {
      goto LABEL_24;
    }
    int64_t v12 = v10 + 1;
    if (v10 + 1 >= v34) {
      return 1;
    }
    unint64_t v11 = *(void *)(v33 + 8 * v12);
    if (v11) {
      goto LABEL_24;
    }
    int64_t v12 = v10 + 2;
    if (v10 + 2 >= v34) {
      return 1;
    }
    unint64_t v11 = *(void *)(v33 + 8 * v12);
    if (v11) {
      goto LABEL_24;
    }
    int64_t v13 = v10 + 3;
    if (v13 >= v34) {
      return 1;
    }
    unint64_t v11 = *(void *)(v33 + 8 * v13);
    if (!v11)
    {
      while (1)
      {
        int64_t v12 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v12 >= v34) {
          return 1;
        }
        unint64_t v11 = *(void *)(v33 + 8 * v12);
        ++v13;
        if (v11) {
          goto LABEL_24;
        }
      }
LABEL_49:
      __break(1u);
      JUMPOUT(0x19EF698FCLL);
    }
    int64_t v12 = v13;
LABEL_24:
    unint64_t v7 = (v11 - 1) & v11;
    int64_t v35 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_25:
    uint64_t v14 = a1;
    long long v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(a1 + 56) + 24 * v9;
    uint64_t v19 = *(uint64_t *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    int v21 = *(unsigned __int8 *)(v18 + 16);
    swift_bridgeObjectRetain();
    sub_19EECA824(v19, v20, v21);
    unint64_t v22 = sub_19EEBD400(v16, v17);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v25 = *(void *)(a2 + 56) + 24 * v22;
    uint64_t v26 = *(uint64_t *)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    char v28 = *(unsigned char *)(v25 + 16);
    switch(v28)
    {
      case 1:
        if (v21 != 1) {
          goto LABEL_45;
        }
        sub_19EECA83C(*(void *)v25, *(void *)(v25 + 8), 1);
        sub_19EECA83C(v19, v20, 1);
        BOOL v29 = *(double *)&v26 == *(double *)&v19;
        goto LABEL_7;
      case 2:
        if (v21 != 2) {
          goto LABEL_45;
        }
        sub_19EECA83C(*(void *)v25, *(void *)(v25 + 8), 2);
        sub_19EECA83C(v19, v20, 2);
        BOOL v29 = v26 == v19;
LABEL_7:
        a1 = v14;
        int64_t v3 = v35;
        if (!v29) {
          return 0;
        }
        goto LABEL_9;
      case 3:
        if (v21 == 3)
        {
          if (v26 == v19 && v27 == v20)
          {
            swift_bridgeObjectRetain();
            sub_19EECA83C(v19, v20, 3);
            sub_19EECA83C(v19, v20, 3);
            a1 = v14;
            int64_t v3 = v35;
            if (!v7) {
              continue;
            }
          }
          else
          {
            char v31 = sub_19F1DD44C();
            swift_bridgeObjectRetain();
            sub_19EECA83C(v26, v27, 3);
            sub_19EECA83C(v19, v20, 3);
            a1 = v14;
            int64_t v3 = v35;
            if ((v31 & 1) == 0) {
              return 0;
            }
LABEL_9:
            if (!v7) {
              continue;
            }
          }
LABEL_10:
          unint64_t v8 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
          int64_t v35 = v3;
          unint64_t v9 = v8 | (v3 << 6);
          goto LABEL_25;
        }
        swift_bridgeObjectRetain_n();
LABEL_45:
        sub_19EECA824(v19, v20, v21);
        sub_19EECA83C(v26, v27, v28);
        sub_19EECA83C(v19, v20, v21);
        sub_19EECA83C(v26, v27, v28);
LABEL_46:
        sub_19EECA83C(v19, v20, v21);
        return 0;
      default:
        if (v21) {
          goto LABEL_45;
        }
        sub_19EECA83C(*(void *)v25, *(void *)(v25 + 8), 0);
        sub_19EECA83C(v19, v20, 0);
        a1 = v14;
        int64_t v3 = v35;
        if (((v19 ^ ((v26 & 1) == 0)) & 1) == 0) {
          return 0;
        }
        goto LABEL_9;
    }
  }
}

void sub_19EF6990C(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v35 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v36 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    unint64_t v8 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    int64_t v38 = v4;
    unint64_t v9 = v8 | (v4 << 6);
LABEL_23:
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(v3 + 56) + 24 * v9;
    uint64_t v19 = *(void **)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    swift_bridgeObjectRetain();
    sub_19EF5C0C0(v19, v18, v20);
    unint64_t v21 = sub_19EEBD400(v15, v16);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v24 = v2;
    uint64_t v25 = *(void *)(v2 + 56) + 24 * v21;
    uint64_t v27 = *(void **)v25;
    uint64_t v26 = *(void *)(v25 + 8);
    char v28 = *(unsigned char *)(v25 + 16);
    if (v28)
    {
      if ((v20 & 1) == 0)
      {
        id v34 = v27;
LABEL_38:
        char v20 = v28 ^ 1;
        sub_19EF5B92C(v27, v26, v28);
LABEL_39:
        sub_19EF5B92C(v19, v18, v20);
        return;
      }
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB392280);
      sub_19EF5C0C0(v27, v26, 1);
      sub_19EF5C0C0(v27, v26, 1);
      sub_19EF5C0C0(v19, v18, 1);
      char v29 = sub_19F1DCA1C();
      sub_19EF5B92C(v27, v26, 1);
      sub_19EF5B92C(v19, v18, 1);
      sub_19EF5B92C(v27, v26, 1);
      id v30 = v19;
      uint64_t v31 = v18;
      char v32 = 1;
LABEL_33:
      sub_19EF5B92C(v30, v31, v32);
      uint64_t v2 = v24;
      uint64_t v3 = a1;
      int64_t v4 = v38;
      if ((v29 & 1) == 0) {
        return;
      }
    }
    else
    {
      if (v20)
      {
        swift_bridgeObjectRetain();
        goto LABEL_38;
      }
      if (v27 != v19 || v26 != v18)
      {
        char v29 = sub_19F1DD44C();
        swift_bridgeObjectRetain();
        sub_19EF5B92C(v27, v26, 0);
        id v30 = v19;
        uint64_t v31 = v18;
        char v32 = 0;
        goto LABEL_33;
      }
      swift_bridgeObjectRetain();
      sub_19EF5B92C(v19, v18, 0);
      sub_19EF5B92C(v19, v18, 0);
      uint64_t v2 = v24;
      uint64_t v3 = a1;
      int64_t v4 = v38;
    }
  }
  int64_t v10 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v10 >= v36) {
    return;
  }
  unint64_t v11 = *(void *)(v35 + 8 * v10);
  int64_t v12 = v4 + 1;
  if (v11) {
    goto LABEL_22;
  }
  int64_t v12 = v10 + 1;
  if (v10 + 1 >= v36) {
    return;
  }
  unint64_t v11 = *(void *)(v35 + 8 * v12);
  if (v11) {
    goto LABEL_22;
  }
  int64_t v12 = v10 + 2;
  if (v10 + 2 >= v36) {
    return;
  }
  unint64_t v11 = *(void *)(v35 + 8 * v12);
  if (v11)
  {
LABEL_22:
    unint64_t v7 = (v11 - 1) & v11;
    int64_t v38 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    goto LABEL_23;
  }
  int64_t v13 = v10 + 3;
  if (v13 >= v36) {
    return;
  }
  unint64_t v11 = *(void *)(v35 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v36) {
      return;
    }
    unint64_t v11 = *(void *)(v35 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_19EF69C80(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_19EEBD400(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_19F1DD44C();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_19EF69E88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return ScalarDictionary.init(deserializing:using:)(a1, a2);
}

uint64_t sub_19EF69EA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t result = ScalarDictionary.init(tryDeserializing:using:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t sub_19EF69ED8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ScalarDictionary.jsRepresentation(in:)(a1, a2);
}

long long *sub_19EF69EF0(void *a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  int64_t v4 = sub_19EFA57E4(a1, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_19EF69F38(uint64_t *a1, uint64_t *a2)
{
  return sub_19EF6950C(*a1, *a2);
}

uint64_t ScalarDictionary.Value.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    uint64_t v5 = sub_19F1DD46C() & 1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
    *(void *)a2 = v5;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = 0;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t ScalarDictionary.Value.encode(to:)(void *a1)
{
  uint64_t v2 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  switch(v2)
  {
    case 1:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
      sub_19F1DD4FC();
      break;
    case 2:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
      sub_19F1DD50C();
      break;
    case 3:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
      sub_19F1DD4DC();
      break;
    default:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
      sub_19F1DD4EC();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
}

uint64_t sub_19EF6A32C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ScalarDictionary.Value.init(from:)(a1, a2);
}

uint64_t sub_19EF6A344(void *a1)
{
  return ScalarDictionary.Value.encode(to:)(a1);
}

uint64_t ScalarDictionary.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471268);
    sub_19EF6E778(&qword_1E9471270, (void (*)(void))sub_19EF6E724);
    sub_19F1DD49C();
    uint64_t v5 = v7[6];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t ScalarDictionary.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19EEC4154(a1, (uint64_t)v6);
  uint64_t v4 = sub_19EF6A4D4(v6);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_19EF6A4D4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D4A0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v68 = MEMORY[0x1E4FBC868];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = sub_19F1DD89C();
  sub_19F0D75E4(0xD000000000000027, 0x800000019F269EF0, v6, (uint64_t)v67);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF6EA7C();
  uint64_t v7 = 0;
  sub_19F1DD8AC();
  uint64_t v52 = v3;
  uint64_t v53 = a1;
  uint64_t v59 = v5;
  uint64_t v8 = sub_19F1DD1CC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471268);
  sub_19F1DBB8C();
  uint64_t v54 = v8;
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v59, v2);
    sub_19EEBD664((uint64_t)v67, qword_1E946D938);
    unint64_t v50 = v68;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    return v50;
  }
  unint64_t v10 = (unsigned __int8 *)(v54 + 48);
  uint64_t v55 = v2;
  while (1)
  {
    uint64_t v13 = *((void *)v10 - 2);
    uint64_t v12 = *((void *)v10 - 1);
    int v14 = *v10;
    if (v14 == 1)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v15 = v13;
      uint64_t v16 = v12;
    }
    else
    {
      v63[0] = *((void *)v10 - 2);
      uint64_t v15 = sub_19F1DD2EC();
      uint64_t v16 = v17;
    }
    os_signpost_id_t v60 = (void *)v13;
    uint64_t v61 = v12;
    char v62 = v14;
    sub_19EF6E724();
    sub_19F1DD1BC();
    if (v7)
    {
      swift_bridgeObjectRelease();
      sub_19EF6EAD0(v13, v12, v14);
      sub_19EEC3ED8((uint64_t)v67, (uint64_t)v63, qword_1E946D938);
      uint64_t v18 = v65;
      if (v65)
      {
        uint64_t v11 = v66;
        __swift_project_boxed_opaque_existential_1(v63, v65);
        (*(void (**)(ValueMetadata *, void *, uint64_t, uint64_t))(v11 + 8))(&type metadata for ScalarDictionary.Value, v7, v18, v11);

        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
      }
      else
      {

        sub_19EEBD664((uint64_t)v63, qword_1E946D938);
      }
      uint64_t v7 = 0;
      goto LABEL_5;
    }
    uint64_t v58 = v16;
    uint64_t v19 = v2;
    sub_19EF6EAD0(v13, v12, v14);
    unsigned __int8 v20 = v64;
    unint64_t v21 = v68;
    if (v64 == 255)
    {
      swift_bridgeObjectRetain();
      unint64_t v33 = sub_19EEBD400(v15, v58);
      char v35 = v34;
      swift_bridgeObjectRelease();
      if (v35)
      {
        uint64_t v36 = v68;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        os_signpost_id_t v60 = (void *)v36;
        uint64_t v2 = v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19EFBE0CC();
          uint64_t v36 = (uint64_t)v60;
        }
        swift_bridgeObjectRelease();
        uint64_t v38 = *(void *)(v36 + 56) + 24 * v33;
        uint64_t v40 = *(void *)v38;
        uint64_t v39 = *(void *)(v38 + 8);
        char v41 = *(unsigned char *)(v38 + 16);
        sub_19EF6C5A0(v33, v36);
        unint64_t v68 = v36;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_19EECA83C(v40, v39, v41);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v19;
      }
      goto LABEL_5;
    }
    uint64_t v56 = 0;
    uint64_t v57 = v63[0];
    uint64_t v22 = v63[1];
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    os_signpost_id_t v60 = (void *)v21;
    unint64_t v68 = 0x8000000000000000;
    uint64_t v24 = v58;
    unint64_t v26 = sub_19EEBD400(v15, v58);
    uint64_t v27 = *(void *)(v21 + 16);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    char v30 = v25;
    if (*(void *)(v21 + 24) >= v29)
    {
      if ((v23 & 1) == 0) {
        sub_19EFBE0CC();
      }
    }
    else
    {
      sub_19EFB8C5C(v29, v23);
      unint64_t v31 = sub_19EEBD400(v15, v24);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_32;
      }
      unint64_t v26 = v31;
    }
    uint64_t v42 = v57;
    uint64_t v43 = v60;
    if (v30)
    {
      uint64_t v44 = v60[7] + 24 * v26;
      sub_19EECA83C(*(void *)v44, *(void *)(v44 + 8), *(unsigned char *)(v44 + 16));
      *(void *)uint64_t v44 = v42;
      *(void *)(v44 + 8) = v22;
      *(unsigned char *)(v44 + 16) = v20;
    }
    else
    {
      v60[(v26 >> 6) + 8] |= 1 << v26;
      uint64_t v45 = (uint64_t *)(v43[6] + 16 * v26);
      *uint64_t v45 = v15;
      v45[1] = v24;
      uint64_t v46 = v43[7] + 24 * v26;
      *(void *)uint64_t v46 = v42;
      *(void *)(v46 + 8) = v22;
      *(unsigned char *)(v46 + 16) = v20;
      uint64_t v47 = v43[2];
      BOOL v48 = __OFADD__(v47, 1);
      uint64_t v49 = v47 + 1;
      if (v48) {
        goto LABEL_31;
      }
      v43[2] = v49;
      swift_bridgeObjectRetain();
    }
    unint64_t v68 = (unint64_t)v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v55;
    uint64_t v7 = v56;
LABEL_5:
    v10 += 24;
    if (!--v9) {
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t ScalarDictionary.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471268);
  sub_19EF6E778(&qword_1E9471280, (void (*)(void))sub_19EF6E7F4);
  sub_19F1DD51C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
}

uint64_t ScalarDictionary._partiallyEncode(to:)(void *a1)
{
  return sub_19EF6ABF8(a1, *v1);
}

uint64_t sub_19EF6ABF8(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CEA8);
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF6EA7C();
  sub_19F1DD8FC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = sub_19F1DD8EC();
  sub_19F0D75E4(0xD000000000000027, 0x800000019F269EF0, v7, (uint64_t)v37);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v27 = a2 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v28 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v30)
  {
    if (v11)
    {
      uint64_t v29 = (v11 - 1) & v11;
      int64_t v30 = i;
      unint64_t v14 = __clz(__rbit64(v11)) | (i << 6);
      goto LABEL_17;
    }
    BOOL v15 = __OFADD__(i, 1);
    int64_t v16 = i + 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v16 >= v28) {
      goto LABEL_22;
    }
    unint64_t v17 = *(void *)(v27 + 8 * v16);
    if (!v17) {
      break;
    }
LABEL_16:
    uint64_t v29 = (v17 - 1) & v17;
    int64_t v30 = v16;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
LABEL_17:
    uint64_t v19 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v14);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = *(void *)(a2 + 56) + 24 * v14;
    uint64_t v23 = *(void *)(v22 + 8);
    char v25 = *(unsigned char *)(v22 + 16);
    uint64_t v34 = *(void *)v22;
    uint64_t v24 = v34;
    uint64_t v35 = v23;
    char v36 = v25;
    uint64_t v31 = v20;
    uint64_t v32 = v21;
    char v33 = 1;
    sub_19EECA824(v34, v23, v25);
    sub_19EF6E7F4();
    swift_bridgeObjectRetain();
    sub_19F1DD2AC();
    swift_bridgeObjectRelease();
    uint64_t result = sub_19EECA83C(v24, v23, v25);
    unint64_t v11 = v29;
  }
  int64_t v18 = v16 + 1;
  if (v16 + 1 >= v28) {
    goto LABEL_22;
  }
  unint64_t v17 = *(void *)(v27 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v16 + 2;
  if (v16 + 2 >= v28) {
    goto LABEL_22;
  }
  unint64_t v17 = *(void *)(v27 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v16 + 3;
  if (v16 + 3 >= v28)
  {
LABEL_22:
    swift_release();
    sub_19EEBD664((uint64_t)v37, qword_1E946D938);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  }
  unint64_t v17 = *(void *)(v27 + 8 * v18);
  if (v17)
  {
LABEL_15:
    int64_t v16 = v18;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v28) {
      goto LABEL_22;
    }
    unint64_t v17 = *(void *)(v27 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_16;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_19EF6B008@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ScalarDictionary.init(from:)(a1, a2);
}

uint64_t sub_19EF6B020(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471268);
  sub_19EF6E778(&qword_1E9471280, (void (*)(void))sub_19EF6E7F4);
  sub_19F1DD51C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
}

uint64_t sub_19EF6B10C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19EEC4154(a1, (uint64_t)v6);
  uint64_t v4 = sub_19EF6A4D4(v6);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_19EF6B160(void *a1)
{
  return sub_19EF6ABF8(a1, *v1);
}

double sub_19EF6B168@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19EE7DBE0();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_19EEBDC00((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), v14);
    sub_19EF6BF40(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    sub_19EEBDC00(v14, a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_19EF6B258@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EE77500(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19EFBD530();
      uint64_t v9 = v11;
    }
    sub_19EE7760C(*(void *)(v9 + 48) + 40 * v6);
    sub_19EEBDC00((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), v12);
    sub_19EF6C118(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    sub_19EEBDC00(v12, a2);
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_19EF6B340@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EE71FE4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19EFBDE24();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_19F1DCF8C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_19EEBDC00((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_19EF6C2E8(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_19EF6B46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v15 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19EFBE0CC();
      uint64_t v12 = v15;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 56) + 24 * v8;
    char v14 = *(unsigned char *)(v13 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v13;
    *(unsigned char *)(a3 + 16) = v14;
    sub_19EF6C5A0(v8, v12);
    *uint64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = -1;
  }
  return result;
}

double sub_19EF6B560@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EF6B5B8(a1, a2, sub_19EEBB074, (void (*)(void))sub_19EEBB628, a3);
}

double sub_19EF6B58C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EF6B5B8(a1, a2, sub_19EEBB074, (void (*)(void))sub_19EEBA1F4, a3);
}

double sub_19EF6B5B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  unint64_t v8 = v5;
  swift_bridgeObjectRetain();
  unint64_t v12 = a3(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v8;
    uint64_t v17 = *v8;
    *unint64_t v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      uint64_t v15 = v17;
    }
    swift_bridgeObjectRelease();
    sub_19EEBB420((long long *)(*(void *)(v15 + 56) + 40 * v12), a5);
    sub_19EF6C974(v12, v15);
    *unint64_t v8 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a5 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_19EF6B6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBB074(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v20 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19EFBF33C();
      uint64_t v12 = v20;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 56) + 48 * v8;
    uint64_t v14 = *(void *)v13;
    long long v19 = *(_OWORD *)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 24);
    uint64_t v16 = *(void *)(v13 + 32);
    char v17 = *(unsigned char *)(v13 + 40);
    sub_19EF6CD5C(v8, v12);
    *uint64_t v4 = v12;
    uint64_t result = swift_bridgeObjectRelease();
    long long v18 = v19;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = 0;
    long long v18 = 0uLL;
  }
  *(void *)a3 = v14;
  *(_OWORD *)(a3 + 8) = v18;
  *(void *)(a3 + 24) = v15;
  *(void *)(a3 + 32) = v16;
  *(unsigned char *)(a3 + 40) = v17;
  return result;
}

double sub_19EF6B7FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EF6BC50(a1, a2, (void (*)(unint64_t, uint64_t))sub_19EEBB420, (void (*)(void))sub_19EFBF704, a3);
}

uint64_t sub_19EF6B828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19EFBF730();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for JetPackAsset(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_19EE648F8(v12 + *(void *)(v20 + 72) * v8, a3);
    sub_19EF6D304(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for JetPackAsset(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

double sub_19EF6B9B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v15 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19EFBFB74();
      uint64_t v11 = v15;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 40 * v8;
    long long v13 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_OWORD *)(a3 + 16) = v13;
    *(void *)(a3 + 32) = *(void *)(v12 + 32);
    sub_19EF6C974(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_19EF6BACC(uint64_t a1)
{
  return sub_19EE9EC30(a1, (uint64_t (*)(void))sub_19EFC16E0, (void (*)(uint64_t, uint64_t))sub_19EF6D514, (void (*)(void))sub_19EFBFD6C);
}

double sub_19EF6BB0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v17 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19EFC00D8();
      uint64_t v11 = v17;
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = *(void *)(v11 + 56) + (v8 << 6);
    uint64_t v13 = *(void *)(v12 + 16);
    uint64_t v14 = *(void *)(v12 + 24);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(void *)(a3 + 16) = v13;
    *(void *)(a3 + 24) = v14;
    long long v15 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a3 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a3 + 48) = v15;
    sub_19EF6D6AC(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_19EF6BC24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EF6BC50(a1, a2, (void (*)(unint64_t, uint64_t))sub_19EEBB420, (void (*)(void))sub_19EFC02EC, a3);
}

double sub_19EF6BC50@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  unint64_t v8 = v5;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_19EEBD400(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v8;
    uint64_t v17 = *v8;
    *unint64_t v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      uint64_t v15 = v17;
    }
    swift_bridgeObjectRelease();
    a3(*(void *)(v15 + 56) + 40 * v12, a5);
    sub_19EF6C974(v12, v15);
    *unint64_t v8 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a5 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_19EF6BD78(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_19EE77500(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_19EFC0500();
    uint64_t v7 = v10;
  }
  sub_19EE7760C(*(void *)(v7 + 48) + 40 * v4);
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_19EF6D88C(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_19EF6BE54(uint64_t *a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_19EE88F80(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_19EFC0E84();
    uint64_t v7 = v10;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_19EF6DA58(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_19EF6BF40(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v10 = sub_19F1DD78C();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          char v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *char v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6C118(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19EE77E34(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        uint64_t v10 = sub_19F1DCC4C();
        double result = sub_19EE7760C((uint64_t)v28);
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            uint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *uint64_t v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *BOOL v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_19EF6C2E8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DCF8C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v39 = a2 + 64;
    uint64_t v11 = sub_19F1DCC2C();
    uint64_t v12 = v39;
    if ((*(void *)(v39 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v37 = (v11 + 1) & v10;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      char v36 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v38 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v9;
        v36(v7, *(void *)(a2 + 48) + v15 * v9, v4);
        uint64_t v18 = sub_19F1DBC8C();
        (*v16)(v7, v4);
        unint64_t v19 = v18 & v10;
        if (a1 >= (uint64_t)v37)
        {
          if (v19 >= v37 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t v23 = v22 + v15 * a1;
            unint64_t v24 = v22 + v17 + v15;
            if (v15 * a1 < v17 || v23 >= v24)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v26 = *(void *)(a2 + 56);
            uint64_t v27 = (_OWORD *)(v26 + 32 * a1);
            int64_t v28 = (_OWORD *)(v26 + 32 * v9);
            uint64_t v12 = v39;
            if (a1 != v9 || (a1 = v9, v27 >= v28 + 2))
            {
              long long v29 = v28[1];
              *uint64_t v27 = *v28;
              v27[1] = v29;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v37 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v39;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    int64_t v30 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v30 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *int64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_19EF6C5A0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v10 = sub_19F1DD78C();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          int64_t v17 = (long long *)(v15 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v16 >= (unint64_t)v17 + 24 || (v18 = v3 == v6, int64_t v3 = v6, !v18))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6C798(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v9 = sub_19F1DD78C();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (unsigned char *)(v14 + v3);
          unint64_t v16 = (unsigned char *)(v14 + v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6C974(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v11 = sub_19F1DD78C();
        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          uint64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6CB60(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 16 * v6 + 8);
        sub_19F1DD72C();
        sub_19F1DD73C();
        if (v9)
        {
          swift_bridgeObjectRetain();
          sub_19F1DBE9C();
        }
        uint64_t v10 = sub_19F1DD78C();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_13;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_13:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (void *)(v15 + 8 * v3);
          unint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
          {
            *uint64_t v16 = *v17;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6CD5C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v11 = sub_19F1DD78C();
        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = (long long *)(v16 + 48 * v3);
          uint64_t v18 = (long long *)(v16 + 48 * v6);
          if (48 * v3 < (uint64_t)(48 * v6) || v17 >= v18 + 3 || (v19 = v3 == v6, int64_t v3 = v6, !v19))
          {
            long long v9 = *v18;
            long long v10 = v18[2];
            v17[1] = v18[1];
            id v17[2] = v10;
            *unint64_t v17 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6CF54(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v9 = sub_19F1DD78C();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6D12C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v9 = sub_19F1DD78C();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6D304(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v9 = sub_19F1DD78C();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *unint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for JetPackAsset(0) - 8) + 72);
        int64_t v16 = v15 * v3;
        double result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          double result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          double result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6D514(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        double result = sub_19F1DD71C();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (void *)(v15 + 8 * v3);
            int64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6D6AC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19F1DD72C();
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        uint64_t v12 = sub_19F1DD78C();
        double result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          int64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          unint64_t v18 = (long long *)(v17 + (v3 << 6));
          uint64_t v19 = (long long *)(v17 + (v6 << 6));
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 4))
          {
            long long v9 = *v19;
            long long v10 = v19[1];
            long long v11 = v19[3];
            id v18[2] = v19[2];
            v18[3] = v11;
            *unint64_t v18 = v9;
            v18[1] = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6D88C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19EE77E34(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v27);
        uint64_t v9 = sub_19F1DCC4C();
        double result = sub_19EE7760C((uint64_t)v27);
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 >= v8 && v3 >= (uint64_t)v10)
          {
LABEL_16:
            uint64_t v13 = *(void *)(a2 + 48);
            unint64_t v14 = v13 + 40 * v3;
            uint64_t v15 = (long long *)(v13 + 40 * v6);
            if (v3 != v6 || v14 >= (unint64_t)v15 + 40)
            {
              long long v16 = *v15;
              long long v17 = v15[1];
              *(void *)(v14 + 32) = *((void *)v15 + 4);
              *(_OWORD *)unint64_t v14 = v16;
              *(_OWORD *)(v14 + 16) = v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (_OWORD *)(v18 + 16 * v3);
            uint64_t v20 = (_OWORD *)(v18 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *uint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v10 >= v8 || v3 >= (uint64_t)v10)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19EF6DA58(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_19F1DCC2C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v28 = v4;
      unint64_t v29 = (result + 1) & v7;
      do
      {
        uint64_t v8 = *(void *)(a2 + 48) + 56 * v6;
        uint64_t v9 = *(void *)(v8 + 8);
        uint64_t v10 = *(void *)(v8 + 48);
        sub_19F1DD72C();
        sub_19F1DD74C();
        swift_bridgeObjectRetain();
        if (v9)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_19F1DBE9C();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRetain();
        sub_19F1DBE9C();
        swift_bridgeObjectRelease();
        sub_19F1DD74C();
        if (v10)
        {
          swift_bridgeObjectRetain();
          sub_19F1DBE9C();
          swift_bridgeObjectRelease();
        }
        uint64_t v4 = v28;
        uint64_t v11 = sub_19F1DD78C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v29)
        {
          if (v12 < v29) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v29)
        {
          goto LABEL_16;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_16:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = v13 + 56 * v3;
          uint64_t v15 = (long long *)(v13 + 56 * v6);
          if (v3 != v6 || v14 >= (unint64_t)v15 + 56)
          {
            long long v16 = *v15;
            long long v17 = v15[1];
            long long v18 = v15[2];
            *(void *)(v14 + 48) = *((void *)v15 + 6);
            *(_OWORD *)(v14 + 16) = v17;
            *(_OWORD *)(v14 + 32) = v18;
            *(_OWORD *)unint64_t v14 = v16;
          }
          uint64_t v19 = *(void *)(a2 + 56);
          uint64_t v20 = (void *)(v19 + 8 * v3);
          uint64_t v21 = (void *)(v19 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
          {
            *uint64_t v20 = *v21;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v28 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_19EF6DD24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(_OWORD *__return_ptr, id *, _OWORD *), uint64_t a6)
{
  uint64_t v8 = v6;
  uint64_t v48 = a6;
  uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = ~v10;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = -v10;
  uint64_t v41 = a1;
  uint64_t v42 = a1 + 64;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  uint64_t v43 = v11;
  uint64_t v44 = 0;
  uint64_t v45 = v14 & v12;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19EEBD478(&v39);
  uint64_t v15 = *((void *)&v39 + 1);
  if (!*((void *)&v39 + 1))
  {
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    swift_release();
    return;
  }
  while (1)
  {
    uint64_t v21 = v39;
    uint64_t v37 = v39;
    uint64_t v38 = v15;
    sub_19EEBDC00(&v40, v36);
    uint64_t v22 = *(void **)v8;
    unint64_t v24 = sub_19EEBD400(v21, v15);
    uint64_t v25 = v22[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      sub_19F1DD65C();
      __break(1u);
      goto LABEL_26;
    }
    char v28 = v23;
    if (v22[3] < v27) {
      break;
    }
    if (a4)
    {
      if (v23) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_19EE7DBE0();
      if (v28) {
        goto LABEL_16;
      }
    }
LABEL_6:
    long long v16 = *(void **)v8;
    *(void *)(*(void *)v8 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    long long v17 = (uint64_t *)(v16[6] + 16 * v24);
    *long long v17 = v21;
    v17[1] = v15;
    sub_19EEBDC00(v36, (_OWORD *)(v16[7] + 32 * v24));
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_24;
    }
    void v16[2] = v20;
LABEL_8:
    sub_19EEBD478(&v39);
    uint64_t v15 = *((void *)&v39 + 1);
    a4 = 1;
    if (!*((void *)&v39 + 1)) {
      goto LABEL_20;
    }
  }
  sub_19EEBD714(v27, a4 & 1);
  unint64_t v29 = sub_19EEBD400(v21, v15);
  if ((v28 & 1) != (v30 & 1)) {
    goto LABEL_25;
  }
  unint64_t v24 = v29;
  if ((v28 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_16:
  sub_19EEBDBA4(*(void *)(*(void *)v8 + 56) + 32 * v24, (uint64_t)v34);
  a5(v35, v34, v36);
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    swift_bridgeObjectRelease();
    uint64_t v31 = (_OWORD *)(*(void *)(*(void *)v8 + 56) + 32 * v24);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    sub_19EEBDC00(v35, v31);
    goto LABEL_8;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  v34[0] = v7;
  id v32 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    swift_release();

    return;
  }
LABEL_26:
  *(void *)&v35[0] = 0;
  *((void *)&v35[0] + 1) = 0xE000000000000000;
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  sub_19F1DCFCC();
  __break(1u);
}

void sub_19EF6E0D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t *__return_ptr, id *, uint64_t *))
{
  uint64_t v6 = v5;
  uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = ~v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = -v8;
  uint64_t v64 = a1;
  uint64_t v65 = a1 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  uint64_t v66 = v9;
  uint64_t v67 = 0;
  uint64_t v68 = v12 & v10;
  uint64_t v69 = a2;
  uint64_t v70 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19EFCA2A4((uint64_t)&v59);
  uint64_t v13 = v60;
  if (!v60)
  {
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    swift_release();
    return;
  }
  uint64_t v46 = v5;
  while (1)
  {
    uint64_t v21 = v59;
    uint64_t v23 = v61;
    uint64_t v22 = v62;
    uint64_t v57 = v59;
    uint64_t v58 = v13;
    char v24 = v63;
    uint64_t v54 = v61;
    uint64_t v55 = v62;
    char v56 = v63;
    uint64_t v25 = *(void **)v6;
    uint64_t v71 = v13;
    unint64_t v27 = sub_19EEBD400(v59, v13);
    uint64_t v28 = v25[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      sub_19F1DD65C();
      __break(1u);
      goto LABEL_27;
    }
    char v31 = v26;
    if (v25[3] < v30) {
      break;
    }
    if (a4)
    {
      if (v26) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_19EFBE0CC();
      if (v31) {
        goto LABEL_16;
      }
    }
LABEL_6:
    uint64_t v14 = *(void **)v6;
    *(void *)(*(void *)v6 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    uint64_t v15 = (uint64_t *)(v14[6] + 16 * v27);
    uint64_t v16 = v71;
    *uint64_t v15 = v21;
    v15[1] = v16;
    uint64_t v17 = v14[7] + 24 * v27;
    *(void *)uint64_t v17 = v23;
    *(void *)(v17 + 8) = v22;
    *(unsigned char *)(v17 + 16) = v24;
    uint64_t v18 = v14[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_25;
    }
    _OWORD v14[2] = v20;
LABEL_8:
    sub_19EFCA2A4((uint64_t)&v59);
    uint64_t v13 = v60;
    a4 = 1;
    if (!v60) {
      goto LABEL_20;
    }
  }
  sub_19EFB8C5C(v30, a4 & 1);
  unint64_t v32 = sub_19EEBD400(v21, v71);
  if ((v31 & 1) != (v33 & 1)) {
    goto LABEL_26;
  }
  unint64_t v27 = v32;
  if ((v31 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_16:
  BOOL v34 = *(void **)v6;
  uint64_t v35 = *(void *)(*(void *)v6 + 56);
  uint64_t v36 = 24 * v27;
  uint64_t v37 = v35 + 24 * v27;
  uint64_t v38 = *(void **)v37;
  long long v39 = *(void **)(v37 + 8);
  char v40 = *(unsigned char *)(v37 + 16);
  v49[0] = v38;
  v49[1] = v39;
  char v50 = v40;
  sub_19EECA824((uint64_t)v38, (uint64_t)v39, v40);
  a5(&v51, v49, &v54);
  if (!v48)
  {
    uint64_t v48 = 0;
    sub_19EECA83C((uint64_t)v38, (uint64_t)v39, v40);
    sub_19EECA83C(v23, v22, v24);
    swift_bridgeObjectRelease();
    uint64_t v41 = v34[7] + v36;
    uint64_t v42 = v51;
    unint64_t v43 = v52;
    char v44 = v53;
    sub_19EECA83C(*(void *)v41, *(void *)(v41 + 8), *(unsigned char *)(v41 + 16));
    *(void *)uint64_t v41 = v42;
    *(void *)(v41 + 8) = v43;
    *(unsigned char *)(v41 + 16) = v44;
    uint64_t v6 = v46;
    goto LABEL_8;
  }
  sub_19EECA83C((uint64_t)v38, (uint64_t)v39, v40);
  v49[0] = v48;
  id v45 = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EECA83C(v54, v55, v56);
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    swift_release();

    return;
  }
LABEL_27:
  uint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  sub_19F1DCFCC();
  __break(1u);
}

uint64_t sub_19EF6E4D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  char v6 = *((unsigned char *)a1 + 32);
  *(unsigned char *)(a2 + 32) = v6;
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v2;
  swift_bridgeObjectRetain();
  return sub_19EECA824(v4, v5, v6);
}

uint64_t _s9JetEngine16ScalarDictionaryV5ValueO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(uint64_t *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_15;
      }
      sub_19EECA83C(*(void *)a1, v3, 1);
      sub_19EECA83C(v5, v6, 1);
      char v8 = *(double *)&v2 == *(double *)&v5;
      break;
    case 2:
      if (v7 != 2) {
        goto LABEL_15;
      }
      sub_19EECA83C(*(void *)a1, v3, 2);
      sub_19EECA83C(v5, v6, 2);
      char v8 = v2 == v5;
      break;
    case 3:
      if (v7 != 3)
      {
        swift_bridgeObjectRetain();
        goto LABEL_15;
      }
      if (v2 == v5 && v3 == v6) {
        char v8 = 1;
      }
      else {
        char v8 = sub_19F1DD44C();
      }
      sub_19EECA824(v5, v6, 3);
      sub_19EECA824(v2, v3, 3);
      sub_19EECA83C(v2, v3, 3);
      sub_19EECA83C(v5, v6, 3);
      break;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
LABEL_15:
        sub_19EECA824(v5, v6, v7);
        sub_19EECA83C(v2, v3, v4);
        sub_19EECA83C(v5, v6, v7);
        char v8 = 0;
      }
      else
      {
        sub_19EECA83C(*(void *)a1, v3, 0);
        sub_19EECA83C(v5, v6, 0);
        char v8 = ((v2 & 1) == 0) ^ v5;
      }
      break;
  }
  return v8 & 1;
}

uint64_t sub_19EF6E710(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_19EECA83C(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_19EF6E724()
{
  unint64_t result = qword_1E9471278;
  if (!qword_1E9471278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471278);
  }
  return result;
}

uint64_t sub_19EF6E778(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9471268);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19EF6E7F4()
{
  unint64_t result = qword_1E9471288;
  if (!qword_1E9471288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471288);
  }
  return result;
}

uint64_t sub_19EF6E84C(char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  char v5 = *a1;
  swift_bridgeObjectRetain();
  return ScalarDictionary.subscript.setter(v5, v3, v4);
}

uint64_t sub_19EF6E894()
{
  return 0;
}

uint64_t sub_19EF6E8A4@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_19EF6831C(a1, ScalarDictionary.subscript.getter, a2);
}

uint64_t sub_19EF6E8D0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))ScalarDictionary.subscript.setter);
}

uint64_t sub_19EF6E8E8()
{
  return 0;
}

uint64_t sub_19EF6E8F8@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_19EF6831C(a1, ScalarDictionary.subscript.getter, a2);
}

uint64_t sub_19EF6E924(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))ScalarDictionary.subscript.setter);
}

uint64_t keypath_set_2Tm(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v8 = *a1;
  uint64_t v9 = *((unsigned __int8 *)a1 + 8);
  swift_bridgeObjectRetain();
  return a5(v8, v9, v6, v7);
}

uint64_t sub_19EF6E99C()
{
  return 0;
}

uint64_t sub_19EF6E9B4()
{
  return 0;
}

uint64_t assignWithCopy for ScalarDictionary.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_19EECA824(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_19EECA83C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ScalarDictionary.Value(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_19EECA83C(v4, v5, v6);
  return a1;
}

uint64_t sub_19EF6EA64(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ScalarDictionary.Value()
{
  return &type metadata for ScalarDictionary.Value;
}

unint64_t sub_19EF6EA7C()
{
  unint64_t result = qword_1E946CDD0;
  if (!qword_1E946CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CDD0);
  }
  return result;
}

uint64_t sub_19EF6EAD0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t dispatch thunk of LocalizedStrings.string(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t initializeWithCopy for MetricsSamplingLottery(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MetricsSamplingLottery(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for MetricsSamplingLottery(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsSamplingLottery(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsSamplingLottery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_19EF6ECA0(uint64_t a1, uint64_t a2)
{
  return sub_19EF6ECD8(a1, a2, qword_1E946E3F8, MEMORY[0x1E4FBB3D0], &qword_1E9471298);
}

uint64_t sub_19EF6ECBC(uint64_t a1, uint64_t a2)
{
  return sub_19EF6ECD8(a1, a2, &qword_1E94712D0, MEMORY[0x1E4FBB808], &qword_1E94712D8);
}

uint64_t sub_19EF6ECD8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5)
{
  char v8 = v5;
  uint64_t v11 = *v5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  *((void *)&v47 + 1) = v12;
  uint64_t v48 = &protocol witness table for PreferenceKey<A>;
  *(void *)&long long v46 = a1;
  *((void *)&v46 + 1) = a2;
  swift_bridgeObjectRetain();
  LocalPreferences.subscript.getter(&v46, &v40);
  if (*((void *)&v41 + 1))
  {
    sub_19EEBDC00(&v40, v49);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v46);
    sub_19EEBDBA4((uint64_t)v49, (uint64_t)&v46);
    if (swift_dynamicCast())
    {
      BYTE8(v40) = 0;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
      return v40;
    }
    else
    {
      if (qword_1E9470178 != -1) {
        swift_once();
      }
      uint64_t v14 = (void *)qword_1E9473A68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_19F24EB80;
      id v16 = v14;
      id v45 = sub_19EEC3F3C(0, 16, 0, MEMORY[0x1E4FBC860]);
      v17._uint64_t countAndFlagsBits = 0x6F662065756C6156;
      v17._object = (void *)0xEA00000000002072;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      uint64_t v44 = v12;
      v43[0] = a1;
      v43[1] = a2;
      sub_19EEC3ED8((uint64_t)v43, (uint64_t)v42, &qword_1EB393260);
      long long v40 = 0u;
      long long v41 = 0u;
      swift_bridgeObjectRetain();
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      LOBYTE(v48) = 0;
      long long v46 = v40;
      long long v47 = v41;
      uint64_t v18 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = sub_19EEC3F3C(0, v18[2] + 1, 1, v18);
      }
      unint64_t v20 = v18[2];
      unint64_t v19 = v18[3];
      if (v20 >= v19 >> 1) {
        uint64_t v18 = sub_19EEC3F3C((void *)(v19 > 1), v20 + 1, 1, v18);
      }
      id v18[2] = v20 + 1;
      uint64_t v21 = &v18[5 * v20];
      long long v22 = v46;
      long long v23 = v47;
      *((unsigned char *)v21 + 64) = (_BYTE)v48;
      *((_OWORD *)v21 + 2) = v22;
      *((_OWORD *)v21 + 3) = v23;
      id v45 = v18;
      sub_19EEBD664((uint64_t)v43, &qword_1EB393260);
      v24._uint64_t countAndFlagsBits = 544106784;
      v24._object = (void *)0xE400000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t v44 = v11;
      v43[0] = v8;
      sub_19EEC3ED8((uint64_t)v43, (uint64_t)v42, &qword_1EB393260);
      long long v40 = 0u;
      long long v41 = 0u;
      swift_retain();
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      LOBYTE(v48) = 0;
      long long v46 = v40;
      long long v47 = v41;
      uint64_t v25 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v25 = sub_19EEC3F3C(0, v25[2] + 1, 1, v25);
      }
      unint64_t v27 = v25[2];
      unint64_t v26 = v25[3];
      if (v27 >= v26 >> 1) {
        uint64_t v25 = sub_19EEC3F3C((void *)(v26 > 1), v27 + 1, 1, v25);
      }
      _OWORD v25[2] = v27 + 1;
      uint64_t v28 = &v25[5 * v27];
      long long v29 = v46;
      long long v30 = v47;
      *((unsigned char *)v28 + 64) = (_BYTE)v48;
      *((_OWORD *)v28 + 2) = v29;
      *((_OWORD *)v28 + 3) = v30;
      id v45 = v25;
      sub_19EEBD664((uint64_t)v43, &qword_1EB393260);
      v31._uint64_t countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      *(void *)(v15 + 32) = v45;
      id v45 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
      v32._object = (void *)0x800000019F269F70;
      v32._uint64_t countAndFlagsBits = 0xD000000000000015;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(a5);
      v43[0] = a4;
      sub_19EEC3ED8((uint64_t)v43, (uint64_t)v42, &qword_1EB393260);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      LOBYTE(v48) = 0;
      long long v46 = v40;
      long long v47 = v41;
      char v33 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        char v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      long long v33[2] = v35 + 1;
      uint64_t v36 = &v33[5 * v35];
      long long v37 = v46;
      long long v38 = v47;
      *((unsigned char *)v36 + 64) = (_BYTE)v48;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      id v45 = v33;
      sub_19EEBD664((uint64_t)v43, &qword_1EB393260);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v15 + 40) = v45;
      *(void *)&long long v46 = v16;
      LOBYTE(v40) = 1;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
      return 0;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v40, &qword_1EB393260);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v46);
    return 0;
  }
}

uint64_t sub_19EF6F1E8(uint64_t a1, uint64_t a2)
{
  return sub_19EE1F08C(a1, a2, &qword_1E94712B8, &qword_1E94712C0, &qword_1E94712C8);
}

uint64_t sub_19EF6F204(uint64_t a1, uint64_t a2)
{
  return sub_19EE1F08C(a1, a2, &qword_1E94712A8, &qword_1EB391070, &qword_1E94712B0);
}

uint64_t sub_19EF6F220@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_19F1DB57C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = qword_1EB392A90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_19EF6ECD8(v10, v11, qword_1E946E3F8, MEMORY[0x1E4FBB3D0], &qword_1E9471298);
  char v14 = v13;
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v15(v5, 1, 1, v6);
  }
  else
  {
    sub_19F1DB48C();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v15(v5, 0, 1, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_19EEBD664((uint64_t)v5, qword_1EB3923B0);
    uint64_t v16 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    sub_19F1DB4CC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v16 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(a1, v16, 1, v6);
}

uint64_t sub_19EF6F4C0()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  uint64_t v3 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_19EEC4E5C(v3, &v8);
  os_unfair_lock_unlock(v4);
  int v5 = v8;
  swift_release();
  if (v5 == 2)
  {
    if ((os_variant_has_internal_content() & 1) == 0) {
      return 0;
    }
  }
  else if ((v5 & 1) == 0)
  {
    return 0;
  }
  if (qword_1EB392A90 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  char v6 = sub_19EE56B20(v2, v1);
  swift_bridgeObjectRelease();
  if (v6 == 2) {
    return 0;
  }
  return v6 & 1;
}

uint64_t sub_19EF6F600()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v33[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v36 = &v33[-v5];
  MEMORY[0x1F4188790](v6);
  unsigned __int8 v8 = &v33[-v7];
  uint64_t v9 = sub_19F1DB57C();
  uint64_t v37 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  char v14 = &v33[-v13];
  double v15 = *v0;
  uint64_t v16 = *((void *)v0 + 1);
  uint64_t v18 = *((void *)v0 + 2);
  uint64_t v17 = *((void *)v0 + 3);
  double v19 = v0[4];
  uint64_t v20 = *((void *)v0 + 5);
  *(double *)&long long v38 = *v0;
  *((void *)&v38 + 1) = v16;
  *(void *)&long long v39 = v18;
  *((void *)&v39 + 1) = v17;
  double v40 = v19;
  uint64_t v41 = v20;
  if ((sub_19EF6F4C0() & 1) == 0)
  {
    if (v19 <= 0.0) {
      return 0;
    }
    if (v19 < 1.0)
    {
      *(double *)&long long v38 = v15;
      *((void *)&v38 + 1) = v16;
      *(void *)&long long v39 = v18;
      *((void *)&v39 + 1) = v17;
      double v40 = v19;
      uint64_t v41 = v20;
      sub_19EF6F220((uint64_t)v8);
      uint64_t v21 = v37;
      unint64_t v35 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v37 + 48);
      if (v35(v8, 1, v9) == 1)
      {
        sub_19EEBD664((uint64_t)v8, qword_1EB3923B0);
        uint64_t v22 = (uint64_t)v36;
        goto LABEL_7;
      }
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v14, v8, v9);
      sub_19F1DB56C();
      int v34 = sub_19F1DB4EC();
      long long v23 = *(void (**)(unsigned char *, uint64_t))(v21 + 8);
      v23(v11, v9);
      v23(v14, v9);
      uint64_t v22 = (uint64_t)v36;
      if ((v34 & 1) == 0)
      {
LABEL_7:
        double v24 = (double)sub_19F085950(0x20000000000001uLL) * 1.11022302e-16 + 0.0;
        if (fabs(v24)) {
          BOOL v25 = v24 > v19;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_19F1DB56C();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v22, 0, 1, v9);
          if (qword_1EB392A90 != -1) {
            swift_once();
          }
          unint64_t v27 = (CFStringRef *)off_1EB3928D8;
          sub_19EEC3ED8(v22, (uint64_t)v3, qword_1EB3923B0);
          unsigned int v28 = v35(v3, 1, v9);
          swift_bridgeObjectRetain();
          if (v28 == 1)
          {
            sub_19EEBD664((uint64_t)v3, qword_1EB3923B0);
            long long v38 = 0u;
            long long v39 = 0u;
          }
          else
          {
            sub_19F1DB49C();
            uint64_t v30 = v29;
            (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v3, v9);
            *((void *)&v39 + 1) = MEMORY[0x1E4FBB3D0];
            *(void *)&long long v38 = v30;
          }
          swift_bridgeObjectRetain();
          Swift::String v31 = (__CFString *)sub_19F1DBD4C();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393260);
          Swift::String v32 = (const void *)sub_19F1DCA9C();
          CFPreferencesSetAppValue(v31, v32, v27[2]);

          swift_unknownObjectRelease();
          sub_19EEBD664((uint64_t)&v38, &qword_1EB393260);
          swift_bridgeObjectRelease_n();
          sub_19EEBD664(v22, qword_1EB3923B0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 1;
        }
        return 0;
      }
    }
  }
  return 1;
}

unint64_t sub_19EF6FA4C()
{
  unint64_t result = qword_1E946CEC8;
  if (!qword_1E946CEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CEC8);
  }
  return result;
}

uint64_t LocalizedStringsBundle.fetchLanguages()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_19EE85FC4, 0, 0);
}

uint64_t LocalizedStringsBundle.fetchStrings(withLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_19EE20D40, 0, 0);
}

uint64_t sub_19EF6FAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_19EE20D40, 0, 0);
}

uint64_t sub_19EF6FB08()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_19EF6FD84@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_19EEA0784(a2, a3);
      uint64_t v10 = (char *)sub_19F1DB04C();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_19F1DB07C();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_19F1DB06C();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x19EF6FFE8);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_19EEA072C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_19F1DB04C();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_19F1DB07C();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_19F1DB06C();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_19EF6FFF8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_19EF6FD84((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_19EF700D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = sub_19F1DB04C();
  if (v10)
  {
    uint64_t v11 = sub_19F1DB07C();
    if (__OFSUB__(a1, v11))
    {
LABEL_9:
      __break(1u);
      JUMPOUT(0x19EF70188);
    }
    v10 += a1 - v11;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_19F1DB06C();
  sub_19EF6FD84(v10, a4, a5, &v14);
  if (!v5) {
    char v12 = v14;
  }
  return v12 & 1;
}

uint64_t sub_19EF701B8()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19EF701F0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t *assignWithCopy for LocalizedStringsBundle(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for LocalizedStringsBundle(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t initializeWithCopy for LanguageStringsContainerWrapper(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for LanguageStringsContainerWrapper(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LanguageStringsContainerWrapper(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LanguageStringsContainerWrapper()
{
  return &type metadata for LanguageStringsContainerWrapper;
}

uint64_t sub_19EF703D4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = a2;
  v8._object = a3;
  JetPackPath.init(_:)(v8);
  v14[0] = v14[2];
  uint64_t v9 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 16))(v14, v6, v7);
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (!v3 && v11 >> 60 == 15)
  {
    sub_19EF6FA4C();
    swift_allocError();
    *(void *)uint64_t v12 = a2;
    *(void *)(v12 + 8) = a3;
    *(unsigned char *)(v12 + 16) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_19EF704DC()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t dispatch thunk of Intent.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_19EF70528()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19EF705B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_19EF70670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_19EF706C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_19EF70710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_19EF70760(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_19EF708BC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19EF70AD4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for _IntentAsJSIntentModel()
{
  return __swift_instantiateGenericMetadata();
}

_UNKNOWN **sub_19EF70B14()
{
  return &off_1EF149030;
}

uint64_t sub_19EF70B20(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_19EF70B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t sub_19EF70C34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v13 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  BOOL v9 = &v14[-v8 - 8];
  uint64_t v10 = *a2;
  sub_19EEC355C(a1, (uint64_t)v14);
  uint64_t v15 = v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unsigned char *, uint64_t *, uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v14, &v15, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t result = sub_19EEC3418(a1);
  if (!v3) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(v13, v9, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_19EF70DA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19EF70C34(a1, a2, a3);
}

uint64_t sub_19EF70DC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 32))(*(void *)(a1 + 16));
}

uint64_t sub_19EF70DE0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(a2 + 24) + 8) + 24))(a1, *(void *)(a2 + 16));
}

uint64_t sub_19EF70E04()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19EF70EA4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_19EF70F80(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_19EF70FFC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19EF71074(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19EF710EC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19EF71164(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19EF711DC(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        int v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_19EF7138C(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19EF715C8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t type metadata accessor for _UncheckedSendableIntentReturnType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t getEnumTagSinglePayload for PackageCompressionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PackageCompressionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF71764);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PackageCompressionError()
{
  return &type metadata for PackageCompressionError;
}

unint64_t sub_19EF717A0()
{
  unint64_t result = qword_1E9471308[0];
  if (!qword_1E9471308[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9471308);
  }
  return result;
}

void sub_19EF717F4()
{
}

void sub_19EF71840()
{
}

uint64_t sub_19EF7188C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_19EF7189C()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 128) + 32))(*(void *)(*(void *)v0 + 120));
}

uint64_t sub_19EF71914(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(*(void *)v1 + 128) + 8) + 24))(a1, *(void *)(*(void *)v1 + 120));
}

uint64_t sub_19EF71990()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 120) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 136));
}

uint64_t AnyIntent.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for SpecializedIntentBox();
  uint64_t result = sub_19EEA5590(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for SpecializedIntentBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t AnyIntent.kind.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

JSValue __swiftcall AnyIntent.makeValue(in:)(JSContext in)
{
  return (JSValue)(*(uint64_t (**)(Class))(**(void **)v1 + 104))(in.super.isa);
}

uint64_t sub_19EF71AD4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_19EF71AE4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for IntentBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for AnyIntent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EF71B4C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19EF71B64(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t *sub_19EF71B94(uint64_t a1)
{
  return sub_19EEC77FC(a1);
}

uint64_t *Promise.__allocating_init(on:executor:)(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = Promise.__allocating_init()();
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  int v9 = (void *)swift_allocObject();
  uint64_t v9[2] = a2;
  v9[3] = a3;
  v9[4] = v6;
  unsigned int v10 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v8 + 8);
  swift_retain();
  swift_retain();
  v10(sub_19EF725F8, v9, v7, v8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v6;
}

uint64_t sub_19EF71CB4(void (*a1)(uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t), uint64_t a2, uint64_t a3)
{
  return swift_release_n();
}

uint64_t Promise.isResolved.getter()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_19EE97894(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_19EF71DA0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = type metadata accessor for Promise.State();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - v7;
  int v9 = (char *)a1 + *(void *)(v4 + 96);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v9, v5);
  LOBYTE(v9) = swift_getEnumCaseMultiPayload() != 0;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = (_BYTE)v9;
  return result;
}

uint64_t Promise.invalidate(_:)(void *a1)
{
  uint64_t v3 = type metadata accessor for Promise.State();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v7);
  int v9 = (uint64_t *)&v23[-v8 - 8];
  unsigned int v10 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = (char *)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v9, v11, v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 3) {
      goto LABEL_13;
    }
    os_unfair_lock_unlock(v10);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    uint64_t v13 = *v9;
    *uint64_t v6 = a1;
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    id v14 = a1;
    (*(void (**)(char *, void *, uint64_t))(v4 + 40))(v11, v6, v3);
    swift_endAccess();
    os_unfair_lock_unlock(v10);
    uint64_t v15 = type metadata accessor for Promise.Observer();
    if (MEMORY[0x19F3C6550](v13, v15))
    {
      uint64_t v16 = 0;
      for (uint64_t i = v13 + 32; ; i += 80)
      {
        char v18 = sub_19F1DC1FC();
        sub_19F1DC19C();
        if ((v18 & 1) == 0) {
          break;
        }
        uint64_t v19 = *(void *)(v15 - 8);
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 16))(v23, i, v15);
        uint64_t v20 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_12;
        }
        sub_19EEA646C(a1, v15);
        (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v23, v15);
        ++v16;
        if (v20 == MEMORY[0x19F3C6550](v13, v15)) {
          return swift_bridgeObjectRelease();
        }
      }
      sub_19F1DCD5C();
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      sub_19F1DCFCC();
      __break(1u);
      JUMPOUT(0x19EF72264);
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19EF72274()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19EF722B4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void (*Promise<A>.makeCompletionAdapter()())(char a1, id a2)
{
  return sub_19EF72704;
}

void sub_19EF7232C(char a1, id a2)
{
  if ((a1 & 1) != 0 || !a2)
  {
    sub_19EE7EE30();
  }
  else
  {
    id v3 = a2;
    sub_19F07E260(a2);
  }
}

void (*Promise<A>.makeCompletionAdapter()())(void *a1)
{
  return sub_19EF7270C;
}

void sub_19EF723CC(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    sub_19F07E260(a1);
  }
  else
  {
    sub_19EE7EE30();
  }
}

uint64_t *static Promise.resolved(toValue:)(uint64_t a1)
{
  double v1 = MEMORY[0x1F4188790](a1);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v3, v1);
  return Promise.__allocating_init(value:)((uint64_t)v3);
}

uint64_t *static Promise.resolved(toError:)(void *a1)
{
  uint64_t v2 = Promise.__allocating_init(error:)((uint64_t)a1);
  id v3 = a1;
  return v2;
}

uint64_t Promise.always(perform:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Promise.always(on:perform:)(a3, a1, a2);
}

uint64_t *Promise.replace<A>(on:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Promise();
  uint64_t WitnessTable = swift_getWitnessTable();
  return Promise.flatMap<A>(on:_:)(a1, a2, a3, v6, WitnessTable);
}

uint64_t sub_19EF725B0()
{
  return objectdestroy_7Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19EF725C8()
{
  return objectdestroy_7Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19EF725E0()
{
  return objectdestroy_7Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19EF725F8()
{
  return sub_19EF71CB4(*(void (**)(uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_19EF72604@<X0>(unsigned char *a1@<X8>)
{
  return sub_19EF71DA0(v1, a1);
}

uint64_t sub_19EF72620()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_19EF72668()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19EF726A0()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_19EF726E0(void *a1)
{
}

void sub_19EF72704(char a1, id a2)
{
}

void sub_19EF7270C(void *a1)
{
}

uint64_t method lookup function for Promise(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Promise);
}

char *sub_19EF7272C(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  id v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)id v3 = *(void *)a2;
    id v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v10 = a2[v5];
    unsigned int v11 = v10 - 4;
    if (v10 >= 4)
    {
      if (v5 <= 3) {
        uint64_t v12 = v5;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_20;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_20;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_20;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_20:
          int v14 = (v13 | (v11 << (8 * v5))) + 4;
          unsigned int v10 = v13 + 4;
          if (v5 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    switch(v10)
    {
      case 1u:
        (*(void (**)(char *))(v4 + 16))(a1);
        v3[v5] = 1;
        break;
      case 2u:
        uint64_t v15 = *(void *)a2;
        id v16 = *(id *)a2;
        *(void *)id v3 = v15;
        v3[v5] = 2;
        break;
      case 3u:
        id v17 = *(id *)a2;
        id v18 = *(id *)a2;
        *(void *)id v3 = v17;
        v3[v5] = 3;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        a1[v5] = 0;
        swift_bridgeObjectRetain();
        break;
    }
  }
  return v3;
}

unsigned __int8 *sub_19EF7295C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 4;
    if (v8 >= 4)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 4;
          unsigned int v8 = v11 + 4;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    switch(v8)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        break;
      case 2u:
      case 3u:

        break;
      default:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 4;
    if (v13 >= 4)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 4;
          unsigned int v13 = v16 + 4;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    switch(v13)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        char v18 = 1;
        goto LABEL_36;
      case 2u:
        uint64_t v19 = *(void **)a2;
        id v20 = v19;
        *(void *)a1 = v19;
        char v18 = 2;
        goto LABEL_36;
      case 3u:
        uint64_t v21 = *(void **)a2;
        id v22 = v21;
        *(void *)a1 = v21;
        char v18 = 3;
LABEL_36:
        a1[v7] = v18;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        a1[v7] = 0;
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

void *sub_19EF72C0C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 4;
  if (v5 >= 4)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 4;
        unsigned int v5 = v8 + 4;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  switch(v5)
  {
    case 1u:
      (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
      char v10 = 1;
      break;
    case 2u:
      *a1 = *(void *)a2;
      char v10 = 2;
      break;
    case 3u:
      *a1 = *(void *)a2;
      char v10 = 3;
      break;
    default:
      char v10 = 0;
      *a1 = *(void *)a2;
      break;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

uint64_t sub_19EF72DD8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 252) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 4) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 253;
}

void sub_19EF72F0C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFD)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 252) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v8 = a2 - 253;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x19EF730D4);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_19EF730FC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 4;
  if (v4 >= 4)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 4;
        LODWORD(v4) = v7 + 4;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_19EF731B4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 3)
  {
    unsigned int v5 = a2 - 4;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 4;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 4;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_19EF7328C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 72);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 != 1)
    {
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 72);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v6 = 1;
    }
    else
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v8;
      uint64_t v9 = *(void *)(a2 + 56);
      *(void *)(a1 + 56) = v9;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      unsigned int v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
      swift_retain();
      swift_retain();
      v10(a1 + 32, a2 + 32, v9);
      char v6 = 0;
    }
    *(unsigned char *)(a1 + 72) = v6;
  }
  return a1;
}

uint64_t sub_19EF733B8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 72);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 != 1)
    {
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 72);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      long long v7 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v7;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
    *(unsigned char *)(a1 + 72) = v6;
  }
  return a1;
}

uint64_t sub_19EF73468(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_19EF734A4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 57) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 72) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19EF734F4(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 72);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_19EF73510(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 72) = a2;
  return result;
}

uint64_t sub_19EF7353C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19EF73600()
{
  return objectdestroy_7Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_19EF73618()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_19EF736F8()
{
}

void sub_19EF73744()
{
}

void sub_19EF73790()
{
}

uint64_t sub_19EF737DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  double v3 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v8 - v6, v1 + *(void *)(v4 + 136), v2, v3);
  return sub_19F1DBE0C();
}

uint64_t EventSubscription.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t EventSubscription.description.getter()
{
  uint64_t v1 = *v0;
  uint64_t v4 = sub_19F1DD98C();
  uint64_t v2 = sub_19F1DBEFC();
  (*(void (**)(uint64_t))(*(void *)v1 + 96))(v2);
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return v4;
}

uint64_t EventSubscription.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF739D0()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF73A0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EF73A2C()
{
  return sub_19EF73A60();
}

uint64_t sub_19EF73A60()
{
  type metadata accessor for TransientStateStore.Change();
  *(void *)(v0 + 16) = sub_19F1DC1CC();
  return v0;
}

uint64_t sub_19EF73ABC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TransientStateStore.Change();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v4, a1, v2);
  swift_beginAccess();
  sub_19F1DC27C();
  sub_19F1DC23C();
  return swift_endAccess();
}

uint64_t sub_19EF73B94()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t TransientStateStore.__allocating_init(isConcurrent:)(char a1)
{
  uint64_t v2 = swift_allocObject();
  TransientStateStore.init(isConcurrent:)(a1);
  return v2;
}

uint64_t sub_19EF73C0C(char a1)
{
  return sub_19EF73C58(a1);
}

uint64_t sub_19EF73C58(char a1)
{
  if (a1) {
    id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  }
  else {
    id v2 = 0;
  }
  *(void *)(v1 + 16) = v2;
  type metadata accessor for StatePath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFD8);
  swift_getWitnessTable();
  uint64_t v3 = sub_19F1DCFDC();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v3;
  type metadata accessor for TransientStateStore.Transaction();
  *(void *)(v1 + 32) = sub_19F1DC1CC();
  *(unsigned char *)(v1 + 40) = 1;
  sub_19F1DC27C();
  type metadata accessor for AsyncEvent();
  *(void *)(v1 + 48) = AsyncEvent.__allocating_init()();
  return v1;
}

BOOL TransientStateStore.isConcurrent.getter()
{
  return *(void *)(v0 + 16) != 0;
}

uint64_t TransientStateStore.onChange.getter()
{
  sub_19EF7744C();
  return swift_retain();
}

void sub_19EF73DEC(void (*a1)(id)@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void **)(v2 + 16);
  if (v4)
  {
    sub_19EF77F0C();
    id v5 = v4;
    withLock<A, B>(_:_:)(v5, a1);
  }
  else
  {
    a1(a2);
  }
}

void TransientStateStore.currentState<A>(at:)(void *a1@<X8>)
{
}

uint64_t sub_19EF73EEC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  uint64_t v9 = *a1;
  uint64_t v62 = sub_19F1DCAAC();
  uint64_t v64 = *(char **)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v59 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unsigned int v13 = (char *)&v56 - v12;
  uint64_t v60 = a1 + 3;
  swift_beginAccess();
  uint64_t v14 = a1[3];
  v72[0] = a2;
  uint64_t v15 = type metadata accessor for StatePath();
  swift_bridgeObjectRetain();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFD8);
  uint64_t v65 = a1;
  uint64_t v81 = *(void *)(v9 + 88);
  swift_getWitnessTable();
  uint64_t v63 = v15;
  MEMORY[0x19F3C5F50](&v74, v72, v14, v15, v16);
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1))
  {
    sub_19EEBD664((uint64_t)&v74, qword_1E946E778);
    swift_endAccess();
    return (*(uint64_t (**)(uint64_t))(v66 + 24))(a3);
  }
  uint64_t v61 = v5;
  sub_19EEBB420(&v74, (uint64_t)v80);
  swift_endAccess();
  sub_19EEC4154((uint64_t)v80, (uint64_t)&v74);
  char v17 = swift_dynamicCast();
  uint64_t v18 = *(void *)(a3 - 8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if (v17)
  {
    v19(v13, 0, 1, a3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v67, v13, a3);
  }
  uint64_t v58 = a3;
  v19(v13, 1, 1, a3);
  uint64_t v21 = v64 + 8;
  uint64_t v57 = (void (*)(char *, uint64_t))*((void *)v64 + 1);
  v57(v13, v62);
  if ((v65[5] & 1) == 0) {
    goto LABEL_11;
  }
  sub_19EEC4154((uint64_t)v80, (uint64_t)v72);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v71 = 0;
    long long v70 = 0u;
    long long v69 = 0u;
    long long v68 = 0u;
    sub_19EEBD664((uint64_t)&v68, &qword_1E9471588);
LABEL_11:
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    char v27 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_19F24EB80;
    uint64_t v64 = v27;
    id v79 = sub_19EEC3F3C(0, 15, 0, MEMORY[0x1E4FBC860]);
    v29._uint64_t countAndFlagsBits = 0x7461206574617453;
    v29._object = (void *)0xE900000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    uint64_t MetatypeMetadata = v63;
    v72[0] = a2;
    sub_19EEBCD00((uint64_t)v72, (uint64_t)&v78);
    long long v69 = 0u;
    long long v68 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)&v78, (uint64_t)&v68);
    LOBYTE(v76) = 0;
    long long v74 = v68;
    long long v75 = v69;
    char v30 = v79;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = v58;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      char v30 = sub_19EEC3F3C(0, v30[2] + 1, 1, v30);
    }
    unint64_t v34 = v30[2];
    unint64_t v33 = v30[3];
    if (v34 >= v33 >> 1) {
      char v30 = sub_19EEC3F3C((void *)(v33 > 1), v34 + 1, 1, v30);
    }
    v30[2] = v34 + 1;
    unint64_t v35 = &v30[5 * v34];
    long long v36 = v74;
    long long v37 = v75;
    *((unsigned char *)v35 + 64) = v76;
    *((_OWORD *)v35 + 2) = v36;
    *((_OWORD *)v35 + 3) = v37;
    id v79 = v30;
    sub_19EEBD664((uint64_t)v72, &qword_1EB393260);
    v38._uint64_t countAndFlagsBits = 544106784;
    v38._object = (void *)0xE400000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    swift_unknownObjectRetain();
    sub_19EED7A90((uint64_t)&v74);
    long long v39 = v79;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v39 = sub_19EEC3F3C(0, v39[2] + 1, 1, v39);
    }
    uint64_t v40 = v66;
    unint64_t v42 = v39[2];
    unint64_t v41 = v39[3];
    if (v42 >= v41 >> 1) {
      long long v39 = sub_19EEC3F3C((void *)(v41 > 1), v42 + 1, 1, v39);
    }
    _OWORD v39[2] = v42 + 1;
    unint64_t v43 = &v39[5 * v42];
    long long v44 = v74;
    long long v45 = v75;
    *((unsigned char *)v43 + 64) = v76;
    *((_OWORD *)v43 + 2) = v44;
    *((_OWORD *)v43 + 3) = v45;
    id v79 = v39;
    v46._uint64_t countAndFlagsBits = 0;
    v46._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    *(void *)(v28 + 32) = v79;
    id v79 = sub_19EEC3F3C(0, 22, 0, MEMORY[0x1E4FBC860]);
    v47._object = (void *)0x800000019F269F70;
    v47._uint64_t countAndFlagsBits = 0xD000000000000015;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v72[0] = v32;
    sub_19EEBCD00((uint64_t)v72, (uint64_t)&v78);
    long long v69 = 0u;
    long long v68 = 0u;
    sub_19EEC3E70((uint64_t)&v78, (uint64_t)&v68);
    LOBYTE(v76) = 0;
    long long v74 = v68;
    long long v75 = v69;
    uint64_t v48 = v79;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v48 = sub_19EEC3F3C(0, v48[2] + 1, 1, v48);
    }
    unint64_t v50 = v48[2];
    unint64_t v49 = v48[3];
    if (v50 >= v49 >> 1) {
      uint64_t v48 = sub_19EEC3F3C((void *)(v49 > 1), v50 + 1, 1, v48);
    }
    v48[2] = v50 + 1;
    uint64_t v51 = &v48[5 * v50];
    long long v52 = v74;
    long long v53 = v75;
    *((unsigned char *)v51 + 64) = v76;
    *((_OWORD *)v51 + 2) = v52;
    *((_OWORD *)v51 + 3) = v53;
    id v79 = v48;
    sub_19EEBD664((uint64_t)v72, &qword_1EB393260);
    v54._uint64_t countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v54);
    *(void *)(v28 + 40) = v79;
    uint64_t v55 = v64;
    *(void *)&long long v74 = v64;
    LOBYTE(v68) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v28, (JetEngine::LogMessageLevel)&v68);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v40 + 24))(v32, v40);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
  }
  char v56 = v19;
  uint64_t v64 = v21;
  long long v74 = v68;
  long long v75 = v69;
  long long v76 = v70;
  uint64_t v77 = v71;
  uint64_t v78 = a2;
  swift_beginAccess();
  sub_19F1DBC0C();
  sub_19F1DBB5C();
  swift_endAccess();
  sub_19EEBD664((uint64_t)&v68, qword_1E946E778);
  sub_19EF77E2C((uint64_t)&v74, (uint64_t)&v68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471578);
  id v22 = v59;
  uint64_t v23 = v58;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v56(v22, 1, 1, v23);
    sub_19EF77F68((uint64_t)&v74);
    v57(v22, v62);
    goto LABEL_11;
  }
  v56(v22, 0, 1, v23);
  uint64_t v24 = v67;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v67, v22, v23);
  uint64_t v25 = *(void *)(v66 + 8);
  *((void *)&v69 + 1) = v23;
  *(void *)&long long v70 = v25;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v68);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 16))(boxed_opaque_existential_2Tm, v24, v23);
  uint64_t v78 = a2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19F1DBC6C();
  swift_endAccess();
  sub_19EF77F68((uint64_t)&v74);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
}

uint64_t sub_19EF748D4(uint64_t a1)
{
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = type metadata accessor for TransientStateStore.Change();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(&v36, a1, v4);
  switch(v38)
  {
    case 1:
      uint64_t v7 = v36;
      void v35[5] = v36;
      swift_beginAccess();
      type metadata accessor for StatePath();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946EFD8);
      swift_getWitnessTable();
      sub_19F1DBC0C();
      sub_19F1DBB5C();
      swift_endAccess();
      if (v35[2])
      {
        sub_19EEBD664((uint64_t)&v34, qword_1E946E778);
        uint64_t v34 = v7;
        sub_19F1DC27C();
        return sub_19F1DC23C();
      }
      else
      {
        swift_bridgeObjectRelease();
        return sub_19EEBD664((uint64_t)&v34, qword_1E946E778);
      }
    case 2:
      swift_beginAccess();
      uint64_t v8 = v1[3];
      uint64_t v29 = v8 + 64;
      uint64_t v9 = 1 << *(unsigned char *)(v8 + 32);
      uint64_t v10 = -1;
      if (v9 < 64) {
        uint64_t v10 = ~(-1 << v9);
      }
      unint64_t v11 = v10 & *(void *)(v8 + 64);
      unint64_t v12 = (unint64_t)(v9 + 63) >> 6;
      unint64_t v27 = v12 - 1;
      swift_bridgeObjectRetain();
      int64_t v13 = 0;
      int64_t v30 = v12;
      unint64_t v28 = v12 - 4;
      if (!v11) {
        goto LABEL_12;
      }
LABEL_10:
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
LABEL_11:
      uint64_t v16 = *(void *)(v8 + 56);
      *(void *)&long long v31 = *(void *)(*(void *)(v8 + 48) + 8 * v15);
      sub_19EEC4154(v16 + 40 * v15, (uint64_t)&v31 + 8);
      swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t v21 = v1 + 3;
      swift_beginAccess();
      uint64_t v22 = v1[3];
      uint64_t v23 = type metadata accessor for StatePath();
      swift_bridgeObjectRetain();
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFD8);
      v35[8] = v3;
      uint64_t WitnessTable = swift_getWitnessTable();
      char v26 = MEMORY[0x19F3C5ED0](v22, v23, v24, WitnessTable);
      uint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
        *(void *)&long long v31 = nullsub_1(*v21);
        sub_19F1DC27C();
        sub_19F1DBBBC();
        swift_bridgeObjectRetain();
        swift_getWitnessTable();
        sub_19F1DC22C();
        swift_beginAccess();
        sub_19F1DBC0C();
        sub_19F1DBBFC();
        return swift_endAccess();
      }
      return result;
    default:
      uint64_t v5 = v36;
      sub_19EEBB420(&v37, (uint64_t)&v34);
      sub_19EEC4154((uint64_t)&v34, (uint64_t)&v31);
      swift_beginAccess();
      type metadata accessor for StatePath();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946EFD8);
      swift_getWitnessTable();
      sub_19F1DBC0C();
      sub_19F1DBC6C();
      swift_endAccess();
      *(void *)&long long v31 = v5;
      sub_19F1DC27C();
      sub_19F1DC23C();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v34);
  }
  while (1)
  {
    type metadata accessor for StatePath();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946EFD8);
    swift_getTupleTypeMetadata2();
    uint64_t v19 = sub_19F1DCAAC();
    (*(void (**)(uint64_t *, long long *, uint64_t))(*(void *)(v19 - 8) + 32))(&v34, &v31, v19);
    uint64_t v20 = v34;
    if (!v34) {
      break;
    }
    *(void *)&long long v31 = v34;
    if (StatePath<A>.starts(with:)())
    {
      swift_beginAccess();
      swift_getWitnessTable();
      sub_19F1DBC0C();
      sub_19F1DBB5C();
      swift_endAccess();
      if (*((void *)&v32 + 1))
      {
        sub_19EEBD664((uint64_t)&v31, qword_1E946E778);
        *(void *)&long long v31 = v20;
        sub_19F1DC27C();
        sub_19F1DC23C();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_19EEBD664((uint64_t)&v31, qword_1E946E778);
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_10;
      }
    }
LABEL_12:
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      JUMPOUT(0x19EF75008);
    }
    if (v17 >= v30)
    {
      int64_t v17 = v13;
    }
    else
    {
      unint64_t v18 = *(void *)(v29 + 8 * v17);
      if (v18) {
        goto LABEL_15;
      }
      if (v13 + 2 < v30)
      {
        unint64_t v18 = *(void *)(v29 + 8 * (v13 + 2));
        if (v18)
        {
          int64_t v17 = v13 + 2;
LABEL_15:
          unint64_t v11 = (v18 - 1) & v18;
          unint64_t v15 = __clz(__rbit64(v18)) + (v17 << 6);
          int64_t v13 = v17;
          goto LABEL_11;
        }
        int64_t v17 = v13 + 2;
        if (v13 + 3 < v30)
        {
          unint64_t v18 = *(void *)(v29 + 8 * (v13 + 3));
          int64_t v17 = v13 + 3;
          if (v18) {
            goto LABEL_15;
          }
          while (v28 != v13)
          {
            unint64_t v18 = *(void *)(v8 + 96 + 8 * v13++);
            if (v18)
            {
              int64_t v17 = v13 + 3;
              goto LABEL_15;
            }
          }
          int64_t v17 = v27;
        }
      }
    }
    unint64_t v11 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
    int64_t v13 = v17;
    long long v31 = 0u;
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_19EF75018(uint64_t a1)
{
  uint64_t v3 = a1;
  type metadata accessor for StatePath();
  sub_19F1DC27C();
  swift_getWitnessTable();
  uint64_t result = sub_19F1DC6AC();
  if ((result & 1) == 0)
  {
    uint64_t v3 = a1;
    return AsyncEvent.post(_:)((uint64_t)&v3);
  }
  return result;
}

uint64_t sub_19EF750BC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  type metadata accessor for TransientStateStore.Transaction();
  sub_19F1DC27C();
  swift_getWitnessTable();
  sub_19F1DBCBC();
  if (v4)
  {
    sub_19EF73ABC(a2);
    return swift_release();
  }
  else
  {
    type metadata accessor for StatePath();
    uint64_t v5 = sub_19F1DBAFC();
    sub_19EF748D4(a2);
    sub_19EF75018(v5);
    return swift_bridgeObjectRelease();
  }
}

uint64_t TransientStateStore.updateState(at:to:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *a1;
  sub_19EEC4154(a2, (uint64_t)v6);
  v6[40] = 0;
  swift_bridgeObjectRetain();
  uint64_t v7 = v2;
  uint64_t v8 = &v5;
  sub_19EF73DEC((void (*)(id))sub_19EF77F4C, MEMORY[0x1E4FBC848]);
  uint64_t v3 = type metadata accessor for TransientStateStore.Change();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8))(&v5, v3);
}

uint64_t TransientStateStore.removeState(at:recursively:)(void *a1, char a2)
{
  v6[0] = *a1;
  if (a2) {
    char v3 = 2;
  }
  else {
    char v3 = 1;
  }
  char v7 = v3;
  swift_bridgeObjectRetain();
  uint64_t v8 = v2;
  uint64_t v9 = v6;
  sub_19EF73DEC((void (*)(id))sub_19EF77F4C, MEMORY[0x1E4FBC848]);
  uint64_t v4 = type metadata accessor for TransientStateStore.Change();
  return (*(uint64_t (**)(void *, uint64_t))(*(void *)(v4 - 8) + 8))(v6, v4);
}

Swift::Void __swiftcall TransientStateStore.removeAllState()()
{
  memset(v1, 0, sizeof(v1));
  char v2 = 3;
  char v3 = v1;
  sub_19EF73DEC((void (*)(id))sub_19EF77F4C, MEMORY[0x1E4FBC848]);
  uint64_t v0 = type metadata accessor for TransientStateStore.Change();
  (*(void (**)(_OWORD *, uint64_t))(*(void *)(v0 - 8) + 8))(v1, v0);
}

void TransientStateStore.performTransaction<A>(postingChanges:_:)(void *a1@<X8>)
{
}

uint64_t sub_19EF754D4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  type metadata accessor for TransientStateStore.Transaction();
  swift_allocObject();
  uint64_t v6 = sub_19EF73A60();
  uint64_t v23 = v6;
  swift_beginAccess();
  sub_19F1DC27C();
  swift_retain();
  sub_19F1DC23C();
  uint64_t v7 = swift_endAccess();
  a2(v7);
  if (v21)
  {
    swift_release();
    swift_beginAccess();
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_19F1DC71C();
    swift_endAccess();
    swift_release();
    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_19F1DC71C();
    swift_endAccess();
    swift_release();
    type metadata accessor for StatePath();
    uint64_t v24 = sub_19F1DBAFC();
    swift_beginAccess();
    uint64_t v9 = *(void *)(v6 + 16);
    uint64_t v10 = type metadata accessor for TransientStateStore.Change();
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = v6;
    if (MEMORY[0x19F3C6550](v11, v10))
    {
      uint64_t v13 = 0;
      uint64_t v14 = v9 + 32;
      while (1)
      {
        char v15 = sub_19F1DC1FC();
        sub_19F1DC19C();
        if ((v15 & 1) == 0) {
          break;
        }
        uint64_t v16 = v12;
        uint64_t v17 = a4;
        uint64_t v18 = *(void *)(v10 - 8);
        uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16))(v22, v14, v10);
        uint64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_13;
        }
        sub_19EF748D4((uint64_t)v22);
        (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v22, v10);
        ++v13;
        v14 += 56;
        BOOL v20 = v19 == MEMORY[0x19F3C6550](v9, v10);
        a4 = v17;
        uint64_t v12 = v16;
        if (v20) {
          goto LABEL_9;
        }
      }
      uint64_t result = sub_19F1DCD5C();
      __break(1u);
LABEL_13:
      __break(1u);
    }
    else
    {
LABEL_9:
      swift_bridgeObjectRelease();
      if (a4)
      {
        sub_19EF75018(v24);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      else
      {
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_19EF758A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7275636E6F437369 && a2 == 0xEC000000746E6572;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_19EF759A8(char a1)
{
  if (a1) {
    return 0x7365756C6176;
  }
  else {
    return 0x7275636E6F437369;
  }
}

BOOL sub_19EF759E4()
{
  return TransientStateStore.isConcurrent.getter();
}

uint64_t sub_19EF75A0C()
{
  sub_19EF7744C();
  return swift_retain();
}

void sub_19EF75A40(void *a1@<X8>)
{
}

uint64_t sub_19EF75A64(uint64_t *a1, uint64_t a2)
{
  return TransientStateStore.updateState(at:to:)(a1, a2);
}

uint64_t sub_19EF75A88(void *a1, char a2)
{
  return TransientStateStore.removeState(at:recursively:)(a1, a2);
}

void sub_19EF75AAC()
{
}

void sub_19EF75AD0(void *a1@<X8>)
{
}

BOOL sub_19EF75AF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19EF4F260(*a1, *a2);
}

uint64_t sub_19EF75B0C()
{
  return sub_19EF4F298();
}

uint64_t sub_19EF75B20()
{
  return sub_19EF4F270();
}

uint64_t sub_19EF75B34()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF75B80()
{
  return sub_19EF759A8(*v0);
}

uint64_t sub_19EF75B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19EF758A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19EF75BC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EF67864();
  *a1 = result;
  return result;
}

uint64_t sub_19EF75BFC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_19EF75C50(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

id static TransientStateStore<>.registerForCoding(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1E9470118 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1E94714A8;
  objc_msgSend((id)qword_1E94714A8, sel_lock);
  sub_19EF7687C(a1, a2, a3, a4);
  return objc_msgSend(v8, sel_unlock);
}

uint64_t TransientStateStore<>.init(from:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v3 + 88);
  uint64_t v23 = *(void *)(v3 + 80);
  uint64_t v24 = a2;
  uint64_t v34 = v23;
  uint64_t v35 = a2;
  uint64_t v25 = a3;
  uint64_t v36 = a3;
  uint64_t v37 = v6;
  _s10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v7 = sub_19F1DD1EC();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = (uint64_t)v28;
  sub_19F1DD8AC();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    uint64_t v12 = v6;
    uint64_t v13 = v24;
    unint64_t v28 = a1;
    uint64_t v14 = v25;
    uint64_t v22 = v4;
    LOBYTE(v34) = 0;
    uint64_t v15 = v27;
    uint64_t v16 = v9;
    char v17 = sub_19F1DD19C();
    type metadata accessor for StatePath();
    uint64_t v38 = v12;
    swift_getWitnessTable();
    sub_19F1DBC0C();
    char v33 = 1;
    uint64_t v31 = v13;
    uint64_t v32 = v14;
    uint64_t WitnessTable = swift_getWitnessTable();
    unint64_t v19 = sub_19EF774C8();
    uint64_t v29 = WitnessTable;
    unint64_t v30 = v19;
    swift_getWitnessTable();
    sub_19F1DD1BC();
    uint64_t v20 = v26;
    swift_allocObject();
    uint64_t v10 = sub_19EF73C58(v17 & 1);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v15);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  }
  return v10;
}

void TransientStateStore<>.encode(to:)()
{
}

uint64_t sub_19EF7609C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a2;
  uint64_t v5 = *(void *)(*a1 + 80);
  uint64_t v6 = *(void *)(*a1 + 88);
  uint64_t v40 = v5;
  uint64_t v41 = a3;
  uint64_t v30 = a3;
  uint64_t v28 = a4;
  uint64_t v42 = a4;
  uint64_t v43 = v6;
  _s10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v7 = sub_19F1DD2BC();
  uint64_t v29 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v25 - v8;
  swift_beginAccess();
  uint64_t v39 = a1[4];
  type metadata accessor for TransientStateStore.Transaction();
  sub_19F1DC27C();
  swift_getWitnessTable();
  if (sub_19F1DC6AC())
  {
    uint64_t v26 = v6;
    uint64_t v27 = v7;
    uint64_t v10 = v30;
    __swift_project_boxed_opaque_existential_1(v31, v31[3]);
    uint64_t v11 = v27;
    sub_19F1DD8FC();
    LOBYTE(v39) = 0;
    uint64_t v12 = v32;
    sub_19F1DD27C();
    if (v12)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v9, v11);
    }
    else
    {
      uint64_t v32 = v9;
      uint64_t v17 = swift_beginAccess();
      uint64_t v31 = &v25;
      MEMORY[0x1F4188790](v17);
      *(&v25 - 4) = v5;
      *(&v25 - 3) = v10;
      uint64_t v18 = v28;
      uint64_t v19 = v26;
      *(&v25 - 2) = v28;
      *(&v25 - 1) = v19;
      type metadata accessor for StatePath();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFD8);
      uint64_t v44 = v19;
      swift_getWitnessTable();
      uint64_t v20 = sub_19F1DBB9C();
      swift_bridgeObjectRelease();
      uint64_t v38 = v20;
      char v37 = 1;
      sub_19F1DBC0C();
      uint64_t v35 = v10;
      uint64_t v36 = v18;
      uint64_t WitnessTable = swift_getWitnessTable();
      unint64_t v22 = sub_19EF77EB8();
      uint64_t v33 = WitnessTable;
      unint64_t v34 = v22;
      swift_getWitnessTable();
      uint64_t v23 = v27;
      uint64_t v24 = v32;
      sub_19F1DD2AC();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v23);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v14 = sub_19F1DCDFC();
    swift_allocError();
    uint64_t v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568);
    _OWORD v16[3] = type metadata accessor for TransientStateStore();
    *uint64_t v16 = a1;
    swift_retain();
    sub_19F1DCDAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, *MEMORY[0x1E4FBBAA0], v14);
    return swift_willThrow();
  }
}

uint64_t sub_19EF76584@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_19EEC4154((uint64_t)a1, (uint64_t)v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946EFD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471578);
  if (swift_dynamicCast())
  {
    sub_19EF77E0C(v20, (uint64_t)&v23);
    return sub_19EF77E0C(&v23, a6);
  }
  else
  {
    uint64_t v21 = 0;
    memset(v20, 0, sizeof(v20));
    sub_19EEBD664((uint64_t)v20, &qword_1E9471580);
    uint64_t v13 = sub_19F1DCDFC();
    swift_allocError();
    uint64_t v15 = v14;
    uint64_t v26 = (char *)v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568) + 48);
    uint64_t v16 = a1[3];
    uint64_t v17 = __swift_project_boxed_opaque_existential_1(a1, v16);
    void v15[3] = v16;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v15);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_2Tm, v17, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F6F0);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_19F24EAD0;
    *(void *)&long long v23 = a2;
    *((void *)&v23 + 1) = a3;
    uint64_t v24 = a4;
    uint64_t v25 = a5;
    *(void *)(v19 + 56) = _s10CodingKeysOMa();
    *(void *)(v19 + 64) = swift_getWitnessTable();
    *(unsigned char *)(v19 + 32) = 1;
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, *MEMORY[0x1E4FBBAA0], v13);
    return swift_willThrow();
  }
}

uint64_t sub_19EF767C8@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = TransientStateStore<>.init(from:)(a1, *(void *)(a2 - 8), *(void *)(a2 - 16));
  if (!v3) {
    *a3 = result;
  }
  return result;
}

void sub_19EF767F8()
{
}

id sub_19EF76820()
{
  id result = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  qword_1E94714A8 = (uint64_t)result;
  return result;
}

void *sub_19EF76854()
{
  id result = (void *)sub_19EFB4F6C(MEMORY[0x1E4FBC860]);
  off_1E94714B0 = result;
  return result;
}

uint64_t sub_19EF7687C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471560);
  uint64_t v8 = sub_19F1DBE2C();
  uint64_t v10 = v9;
  if (qword_1E9470120 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = off_1E94714B0;
  off_1E94714B0 = (_UNKNOWN *)0x8000000000000000;
  uint64_t v12 = sub_19F044B90(a1, a2, a3, a4, v8, v10, isUniquelyReferenced_nonNull_native);
  off_1E94714B0 = v15;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (v12) {
    BOOL v13 = v12 == a1;
  }
  else {
    BOOL v13 = 1;
  }
  if (v13) {
    return swift_bridgeObjectRelease();
  }
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t sub_19EF76A38()
{
  if (*v0) {
    return 1702060386;
  }
  else {
    return 0x656D614E65707974;
  }
}

uint64_t sub_19EF76A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19EF7819C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19EF76A94(uint64_t a1)
{
  unint64_t v2 = sub_19EF77D5C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EF76AD0(uint64_t a1)
{
  unint64_t v2 = sub_19EF77D5C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19EF76B0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471540);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF77D5C();
  sub_19F1DD8AC();
  if (!v2)
  {
    uint64_t v27 = v5;
    uint64_t v8 = v28;
    LOBYTE(v29) = 0;
    uint64_t v9 = sub_19F1DD18C();
    uint64_t v12 = v11;
    uint64_t v24 = v9;
    uint64_t v25 = v7;
    if (qword_1E9470118 != -1) {
      swift_once();
    }
    BOOL v13 = (void *)qword_1E94714A8;
    objc_msgSend((id)qword_1E94714A8, sel_lock, v24);
    if (qword_1E9470120 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v14 = off_1E94714B0;
    uint64_t v15 = *((void *)off_1E94714B0 + 2);
    long long v26 = 0u;
    if (v15)
    {
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_19EEBD400(v24, v12);
      if (v17)
      {
        uint64_t v18 = v14[7] + 32 * v16;
        uint64_t v19 = *(void *)v18;
        uint64_t v20 = *(void *)(v18 + 8);
        long long v26 = *(_OWORD *)(v18 + 16);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = 0;
    uint64_t v20 = 0;
LABEL_13:
    swift_endAccess();
    objc_msgSend(v13, sel_unlock);
    if (v19)
    {
      swift_bridgeObjectRelease();
      char v35 = 1;
      uint64_t v30 = v19;
      uint64_t v31 = v20;
      long long v32 = v26;
      __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v29);
      sub_19F1DD1EC();
      uint64_t v21 = v25;
      sub_19F1DD1BC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v4);
      sub_19EF77E0C(&v29, (uint64_t)v33);
      long long v23 = v33[1];
      *(_OWORD *)uint64_t v8 = v33[0];
      *(_OWORD *)(v8 + 16) = v23;
      *(_OWORD *)(v8 + 32) = v33[2];
      *(void *)(v8 + 48) = v34;
    }
    else
    {
      *(void *)&long long v29 = 0;
      *((void *)&v29 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      LOBYTE(v29) = 1;
      sub_19F1DCDCC();
      swift_allocError();
      sub_19EF77DB0();
      unint64_t v22 = v25;
      sub_19F1DCD9C();
      swift_bridgeObjectRelease();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v4);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19EF76F48(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471558);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v32 = sub_19EF77D5C();
  uint64_t v33 = v7;
  sub_19F1DD8FC();
  sub_19EF77E2C((uint64_t)v2, (uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(&v38, v40);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v9 = v42;
  long long v34 = v41;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v38);
  uint64_t v35 = DynamicType;
  long long v36 = v34;
  uint64_t v37 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471560);
  uint64_t v10 = sub_19F1DBE2C();
  uint64_t v12 = v11;
  if (qword_1E9470118 != -1) {
    swift_once();
  }
  BOOL v13 = (void *)qword_1E94714A8;
  objc_msgSend((id)qword_1E94714A8, sel_lock);
  if (qword_1E9470120 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v14 = off_1E94714B0;
  uint64_t v15 = *((void *)off_1E94714B0 + 2);
  uint64_t v43 = v5;
  if (!v15) {
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_19EEBD400(v10, v12);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_endAccess();
    objc_msgSend(v13, sel_unlock);
    goto LABEL_12;
  }
  uint64_t v18 = *(void *)(v14[7] + 32 * v16);
  swift_bridgeObjectRelease();
  swift_endAccess();
  objc_msgSend(v13, sel_unlock);
  if (!v18)
  {
LABEL_12:
    unint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    unint64_t v38 = 0xD000000000000029;
    unint64_t v39 = 0x800000019F26A1F0;
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_19F1DCDFC();
    swift_allocError();
    uint64_t v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568);
    uint64_t v25 = v4;
    uint64_t v26 = v2[3];
    uint64_t v27 = __swift_project_boxed_opaque_existential_1(v2, v26);
    void v24[3] = v26;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v24);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(boxed_opaque_existential_2Tm, v27, v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F6F0);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_19F24EAD0;
    unint64_t v30 = v32;
    *(void *)(v29 + 56) = &type metadata for StatefulCodingThunk.CodingKeys;
    *(void *)(v29 + 64) = v30;
    *(unsigned char *)(v29 + 32) = 0;
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4FBBAA0], v22);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v33, v25);
  }
  LOBYTE(v38) = 0;
  uint64_t v19 = v33;
  uint64_t v20 = v31[1];
  sub_19F1DD26C();
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    LOBYTE(v38) = 1;
    sub_19F1DD2BC();
    sub_19F1DD2AC();
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v4);
  }
}

uint64_t sub_19EF7741C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF76B0C(a1, a2);
}

uint64_t sub_19EF77434(void *a1)
{
  return sub_19EF76F48(a1);
}

uint64_t sub_19EF7744C()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_19EF77454@<X0>(uint64_t a1@<X8>)
{
  return sub_19EF73EEC(*(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t type metadata accessor for TransientStateStore.Change()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EF7748C()
{
  return sub_19EF754D4(*(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

uint64_t _s10CodingKeysOMa()
{
  return swift_getGenericMetadata();
}

unint64_t sub_19EF774C8()
{
  unint64_t result = qword_1E94714B8[0];
  if (!qword_1E94714B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E94714B8);
  }
  return result;
}

uint64_t sub_19EF7751C()
{
  return sub_19EF7609C(*(void **)(v0 + 32), *(uint64_t **)(v0 + 40), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t method lookup function for TransientStateStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TransientStateStore);
}

uint64_t dispatch thunk of TransientStateStore.__allocating_init(isConcurrent:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t initializeWithCopy for StatefulCodingThunk(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for StatefulCodingThunk(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_3(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      result[6] = a2[6];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for StatefulCodingThunk(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for StatefulCodingThunk()
{
  return &type metadata for StatefulCodingThunk;
}

uint64_t sub_19EF7788C(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 48);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)result + 3;
  }
  if (v2 == 2 || v2 == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!v2)
  {
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 8);
  }
  return result;
}

uint64_t sub_19EF77904(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 48);
  if (v3 >= 3) {
    unsigned int v3 = *(_DWORD *)a2 + 3;
  }
  if (v3 == 2 || v3 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 48) = v3;
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v4 = a2 + 8;
    long long v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 32) = v5;
    uint64_t v6 = v5;
    uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
    swift_bridgeObjectRetain();
    v7(a1 + 8, v4, v6);
    *(unsigned char *)(a1 + 48) = 0;
  }
  return a1;
}

uint64_t sub_19EF779E8(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2 || v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 48);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2 || v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 48) = v5;
      swift_bridgeObjectRetain();
    }
    else if (v5)
    {
      long long v9 = *a2;
      long long v10 = a2[1];
      long long v11 = a2[2];
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = v11;
      *(_OWORD *)a1 = v9;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v6 = (uint64_t)a2 + 8;
      uint64_t v7 = *((void *)a2 + 4);
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      long long v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
      swift_bridgeObjectRetain();
      v8(a1 + 8, v6, v7);
      *(unsigned char *)(a1 + 48) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_19EF77B40(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2 || v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    switch(v5)
    {
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v7 = 2;
        break;
      case 1u:
        *(void *)a1 = *(void *)a2;
        char v7 = 1;
        break;
      case 0u:
        long long v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = 0;
        return a1;
      default:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v7 = *(unsigned char *)(a2 + 48);
        break;
    }
    *(unsigned char *)(a1 + 48) = v7;
  }
  return a1;
}

uint64_t sub_19EF77C38(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 4) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_19EF77C74(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19EF77CC4(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_19EF77CE0(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

uint64_t sub_19EF77D08()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EF77D24()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EF77D40()
{
  return swift_getWitnessTable();
}

unint64_t sub_19EF77D5C()
{
  unint64_t result = qword_1E9471548;
  if (!qword_1E9471548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471548);
  }
  return result;
}

unint64_t sub_19EF77DB0()
{
  unint64_t result = qword_1E9471550;
  if (!qword_1E9471550)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9471540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471550);
  }
  return result;
}

uint64_t sub_19EF77E0C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(void *)(a2 + 48) = *((void *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_19EF77E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a2 + 48) = v4;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_19EF77E98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF76584(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_19EF77EB8()
{
  unint64_t result = qword_1E9471570;
  if (!qword_1E9471570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471570);
  }
  return result;
}

unint64_t sub_19EF77F0C()
{
  unint64_t result = qword_1E946FE68;
  if (!qword_1E946FE68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946FE68);
  }
  return result;
}

uint64_t sub_19EF77F4C()
{
  return sub_19EF750BC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_19EF77F68(uint64_t a1)
{
  return a1;
}

unsigned char *_s9JetEngine19StatefulCodingThunkV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF7805CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatefulCodingThunk.CodingKeys()
{
  return &type metadata for StatefulCodingThunk.CodingKeys;
}

unint64_t sub_19EF78098()
{
  unint64_t result = qword_1E9471590;
  if (!qword_1E9471590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471590);
  }
  return result;
}

unint64_t sub_19EF780F0()
{
  unint64_t result = qword_1E9471598;
  if (!qword_1E9471598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471598);
  }
  return result;
}

unint64_t sub_19EF78148()
{
  unint64_t result = qword_1E94715A0;
  if (!qword_1E94715A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94715A0);
  }
  return result;
}

uint64_t sub_19EF7819C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E65707974 && a2 == 0xE800000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702060386 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_19EF78284()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E98]), sel_init);
  id v1 = objc_allocWithZone((Class)type metadata accessor for MetricsInspectorScanner());
  id result = sub_19EF782D8(v0);
  qword_1E9498B68 = (uint64_t)result;
  return result;
}

id sub_19EF782D8(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_serviceBrowser] = a1;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F28E08]);
  uint64_t v5 = v1;
  id v6 = a1;
  id v7 = objc_msgSend(v4, sel_init);
  *(void *)&v5[OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_stateLock] = v7;
  *(void *)&v5[OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_foundServices] = MEMORY[0x1E4FBC860];

  v13.receiver = v5;
  v13.super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v13, sel_init);
  objc_msgSend(v6, sel_setDelegate_, v8);
  id v9 = objc_msgSend(self, sel_mainRunLoop);
  objc_msgSend(v6, sel_scheduleInRunLoop_forMode_, v9, *MEMORY[0x1E4F1C4B0]);

  long long v10 = (void *)sub_19F1DBD4C();
  long long v11 = (void *)sub_19F1DBD4C();
  objc_msgSend(v6, sel_searchForServicesOfType_inDomain_, v10, v11);

  return v8;
}

id sub_19EF78454()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v1 = *(void **)&v0[OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_serviceBrowser];
  objc_msgSend(v1, sel_stop);
  BOOL v2 = self;
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_mainRunLoop);
  uint64_t v5 = *MEMORY[0x1E4F1C4B0];
  objc_msgSend(v3, sel_removeFromRunLoop_forMode_, v4, *MEMORY[0x1E4F1C4B0]);

  id v6 = &v0[OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_foundServices];
  swift_beginAccess();
  unint64_t v7 = *(void *)v6;
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    v15.receiver = v0;
    v15.super_class = ObjectType;
    return objc_msgSendSuper2(&v15, sel_dealloc);
  }
  swift_bridgeObjectRetain();
  id result = (id)sub_19F1DD03C();
  uint64_t v8 = (uint64_t)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x19F3C7060](v10, v7);
      }
      else {
        id v11 = *(id *)(v7 + 8 * v10 + 32);
      }
      uint64_t v12 = v11;
      ++v10;
      objc_msgSend(v11, sel_stop);
      id v13 = objc_msgSend(v2, sel_mainRunLoop);
      objc_msgSend(v12, sel_removeFromRunLoop_forMode_, v13, v5);
    }
    while (v8 != v10);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EF786BC()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_stateLock);
  objc_msgSend(v1, sel_lock);
  BOOL v2 = (unint64_t *)(v0 + OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_foundServices);
  swift_beginAccess();
  unint64_t v3 = *v2;
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    id v19 = v1;
    if (v4) {
      goto LABEL_3;
    }
LABEL_17:
    unint64_t v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease_n();
    objc_msgSend(v19, sel_unlock);
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_19F1DD03C();
  uint64_t v4 = result;
  id v19 = v1;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    unint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x19F3C7060](v6, v3);
      }
      else {
        id v8 = *(id *)(v3 + 8 * v6 + 32);
      }
      id v9 = v8;
      id v10 = objc_msgSend(v8, sel_hostName, v19);
      if (v10)
      {
        id v11 = v10;
        uint64_t v12 = sub_19F1DBD7C();
        uint64_t v14 = v13;

        id v15 = objc_msgSend(v9, sel_port);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v7 = sub_19F09CCA0(0, v7[2] + 1, 1, v7);
        }
        unint64_t v17 = v7[2];
        unint64_t v16 = v7[3];
        if (v17 >= v16 >> 1) {
          unint64_t v7 = sub_19F09CCA0((void *)(v16 > 1), v17 + 1, 1, v7);
        }
        v7[2] = v17 + 1;
        uint64_t v18 = &v7[3 * v17];
        v18[4] = v12;
        v18[5] = v14;
        v18[6] = v15;
      }
      else
      {
      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EF78968(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(a1, sel_name);
  uint64_t v5 = sub_19F1DBD7C();
  uint64_t v7 = v6;

  if (v5 == 0xD00000000000001FLL && v7 == 0x800000019F26A460)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_19F1DD44C();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return result;
    }
  }
  id v10 = objc_msgSend(self, sel_mainRunLoop);
  objc_msgSend(a1, sel_scheduleInRunLoop_forMode_, v10, *MEMORY[0x1E4F1C4B0]);

  objc_msgSend(a1, sel_resolveWithTimeout_, 30.0);
  id v11 = (void *)(a2 + OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_foundServices);
  swift_beginAccess();
  id v12 = a1;
  MEMORY[0x19F3C6430]();
  if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_19F1DC1BC();
  }
  sub_19F1DC20C();
  sub_19F1DC17C();
  swift_endAccess();
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19F24EAD0;
  id v15 = v13;
  unint64_t v32 = sub_19EEC3F3C(0, 25, 0, MEMORY[0x1E4FBC860]);
  v16._uint64_t countAndFlagsBits = 0xD000000000000018;
  v16._object = (void *)0x800000019F26A480;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v31[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1E9471690);
  v31[0] = v12;
  sub_19EEBCD00((uint64_t)v31, (uint64_t)v27);
  long long v25 = 0u;
  long long v26 = 0u;
  id v17 = v12;
  sub_19EEC3E70((uint64_t)v27, (uint64_t)&v25);
  char v30 = 2;
  long long v28 = v25;
  long long v29 = v26;
  uint64_t v18 = v32;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v18 = sub_19EEC3F3C(0, v18[2] + 1, 1, v18);
  }
  unint64_t v20 = v18[2];
  unint64_t v19 = v18[3];
  if (v20 >= v19 >> 1) {
    uint64_t v18 = sub_19EEC3F3C((void *)(v19 > 1), v20 + 1, 1, v18);
  }
  id v18[2] = v20 + 1;
  uint64_t v21 = &v18[5 * v20];
  long long v22 = v28;
  long long v23 = v29;
  *((unsigned char *)v21 + 64) = v30;
  *((_OWORD *)v21 + 2) = v22;
  *((_OWORD *)v21 + 3) = v23;
  unint64_t v32 = v18;
  sub_19EEBCB4C((uint64_t)v31);
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  *(void *)(v14 + 32) = v32;
  *(void *)&long long v28 = v15;
  LOBYTE(v25) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v25);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19EF78D80(uint64_t a1, void *a2)
{
  unint64_t v3 = (unint64_t *)(a1 + OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_foundServices);
  swift_beginAccess();
  unint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  sub_19EF9248C((uint64_t)a2, v4);
  unint64_t v6 = v5;
  char v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    objc_msgSend(a2, sel_stop);
    id v10 = objc_msgSend(self, sel_mainRunLoop);
    objc_msgSend(a2, sel_removeFromRunLoop_forMode_, v10, *MEMORY[0x1E4F1C4B0]);

    swift_beginAccess();
    id v11 = (void *)sub_19F16869C(v6);
    swift_endAccess();

    if (qword_1EB393168 != -1) {
      swift_once();
    }
    id v12 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    id v14 = v12;
    uint64_t v31 = sub_19EEC3F3C(0, 27, 0, MEMORY[0x1E4FBC860]);
    v15._object = (void *)0x800000019F26A440;
    v15._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    v30[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1E9471690);
    v30[0] = a2;
    sub_19EEBCD00((uint64_t)v30, (uint64_t)v26);
    long long v24 = 0u;
    long long v25 = 0u;
    id v16 = a2;
    sub_19EEC3E70((uint64_t)v26, (uint64_t)&v24);
    char v29 = 2;
    long long v27 = v24;
    long long v28 = v25;
    id v17 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
    }
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      id v17 = sub_19EEC3F3C((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    id v17[2] = v19 + 1;
    unint64_t v20 = &v17[5 * v19];
    long long v21 = v27;
    long long v22 = v28;
    *((unsigned char *)v20 + 64) = v29;
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v22;
    uint64_t v31 = v17;
    sub_19EEBCB4C((uint64_t)v30);
    v23._uint64_t countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *(void *)(v13 + 32) = v31;
    *(void *)&long long v27 = v14;
    LOBYTE(v24) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v24);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for MetricsInspectorScanner()
{
  return self;
}

uint64_t sub_19EF794A8(uint64_t a1)
{
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  BOOL v2 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
  id v4 = v2;
  long long v21 = sub_19EEC3F3C(0, 50, 0, MEMORY[0x1E4FBC860]);
  v5._object = (void *)0x800000019F26A4A0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000031;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  long long v20[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1E94716A0);
  v20[0] = a1;
  sub_19EEBCD00((uint64_t)v20, (uint64_t)v16);
  long long v14 = 0u;
  long long v15 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v16, (uint64_t)&v14);
  char v19 = 0;
  long long v17 = v14;
  long long v18 = v15;
  unint64_t v6 = v21;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v6 = sub_19EEC3F3C(0, v6[2] + 1, 1, v6);
  }
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  if (v8 >= v7 >> 1) {
    unint64_t v6 = sub_19EEC3F3C((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  v6[2] = v8 + 1;
  id v9 = &v6[5 * v8];
  long long v10 = v17;
  long long v11 = v18;
  *((unsigned char *)v9 + 64) = v19;
  *((_OWORD *)v9 + 2) = v10;
  *((_OWORD *)v9 + 3) = v11;
  long long v21 = v6;
  sub_19EEBCB4C((uint64_t)v20);
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  *(void *)(v3 + 32) = v21;
  *(void *)&long long v17 = v4;
  LOBYTE(v14) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19EF79690(void *a1)
{
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  BOOL v2 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
  id v4 = v2;
  long long v22 = sub_19EEC3F3C(0, 36, 0, MEMORY[0x1E4FBC860]);
  v5._object = (void *)0x800000019F26A410;
  v5._uint64_t countAndFlagsBits = 0xD000000000000023;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  unint64_t v21[3] = sub_19EEBDC10(0, (unint64_t *)&qword_1E9471690);
  v21[0] = a1;
  sub_19EEBCD00((uint64_t)v21, (uint64_t)v17);
  long long v15 = 0u;
  long long v16 = 0u;
  id v6 = a1;
  sub_19EEC3E70((uint64_t)v17, (uint64_t)&v15);
  char v20 = 2;
  long long v18 = v15;
  long long v19 = v16;
  unint64_t v7 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v7 = sub_19EEC3F3C(0, v7[2] + 1, 1, v7);
  }
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_19EEC3F3C((void *)(v8 > 1), v9 + 1, 1, v7);
  }
  v7[2] = v9 + 1;
  long long v10 = &v7[5 * v9];
  long long v11 = v18;
  long long v12 = v19;
  *((unsigned char *)v10 + 64) = v20;
  *((_OWORD *)v10 + 2) = v11;
  *((_OWORD *)v10 + 3) = v12;
  long long v22 = v7;
  sub_19EEBCB4C((uint64_t)v21);
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  *(void *)(v3 + 32) = v22;
  *(void *)&long long v18 = v4;
  LOBYTE(v15) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v15);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19EF79888(void *a1, uint64_t a2)
{
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19F24EB80;
  id v6 = v4;
  uint64_t v33 = sub_19EEC3F3C(0, 46, 0, MEMORY[0x1E4FBC860]);
  v7._object = (void *)0x800000019F26A3E0;
  v7._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  uint64_t v32 = sub_19EEBDC10(0, (unint64_t *)&qword_1E9471690);
  v31[0] = a1;
  sub_19EEBCD00((uint64_t)v31, (uint64_t)v27);
  long long v25 = 0u;
  long long v26 = 0u;
  id v8 = a1;
  sub_19EEC3E70((uint64_t)v27, (uint64_t)&v25);
  char v30 = 2;
  long long v28 = v25;
  long long v29 = v26;
  unint64_t v9 = v33;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v9 = sub_19EEC3F3C(0, v9[2] + 1, 1, v9);
  }
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    unint64_t v9 = sub_19EEC3F3C((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  uint64_t v9[2] = v11 + 1;
  long long v12 = &v9[5 * v11];
  long long v13 = v28;
  long long v14 = v29;
  *((unsigned char *)v12 + 64) = v30;
  *((_OWORD *)v12 + 2) = v13;
  *((_OWORD *)v12 + 3) = v14;
  uint64_t v33 = v9;
  sub_19EEBCB4C((uint64_t)v31);
  v15._uint64_t countAndFlagsBits = 44;
  v15._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  *(void *)(v5 + 32) = v33;
  uint64_t v33 = sub_19EEC3F3C(0, 9, 0, MEMORY[0x1E4FBC860]);
  v16._uint64_t countAndFlagsBits = 0x203A6E6F73616572;
  v16._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(qword_1E94716A0);
  v31[0] = a2;
  sub_19EEBCD00((uint64_t)v31, (uint64_t)v27);
  long long v25 = 0u;
  long long v26 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v27, (uint64_t)&v25);
  char v30 = 0;
  long long v28 = v25;
  long long v29 = v26;
  long long v17 = v33;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v17 = sub_19EEC3F3C(0, v17[2] + 1, 1, v17);
  }
  unint64_t v19 = v17[2];
  unint64_t v18 = v17[3];
  if (v19 >= v18 >> 1) {
    long long v17 = sub_19EEC3F3C((void *)(v18 > 1), v19 + 1, 1, v17);
  }
  id v17[2] = v19 + 1;
  char v20 = &v17[5 * v19];
  long long v21 = v28;
  long long v22 = v29;
  *((unsigned char *)v20 + 64) = v30;
  *((_OWORD *)v20 + 2) = v21;
  *((_OWORD *)v20 + 3) = v22;
  uint64_t v33 = v17;
  sub_19EEBCB4C((uint64_t)v31);
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  *(void *)(v5 + 40) = v33;
  *(void *)&long long v28 = v6;
  LOBYTE(v25) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v25);

  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for EmptyLocalizedStrings()
{
  return &type metadata for EmptyLocalizedStrings;
}

uint64_t sub_19EF79BAC()
{
  return 0;
}

uint64_t sub_19EF79BB8()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_19EF79BC4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_19EF79C08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_19EF79C70(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19EF79CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for MapPreferenceMigrationRule()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_19EF79D70@<X0>(void *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5 = result[1];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  *a5 = *result;
  a5[1] = v5;
  a5[2] = v6;
  a5[3] = v7;
  a5[4] = a3;
  a5[5] = a4;
  return result;
}

uint64_t sub_19EF79D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v41 = a4;
  uint64_t v42 = a3;
  uint64_t v9 = *(void *)(a5 + 24);
  uint64_t v10 = sub_19F1DCAAC();
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  MEMORY[0x1F4188790](v10);
  unint64_t v38 = (char *)&v34 - v11;
  uint64_t v46 = v9;
  uint64_t v43 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v51 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a5 + 16);
  uint64_t v49 = sub_19F1DCAAC();
  uint64_t v15 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  long long v17 = (char *)&v34 - v16;
  uint64_t v18 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v50 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v5;
  uint64_t v22 = v5[1];
  uint64_t v34 = v5[2];
  uint64_t v35 = v5[3];
  Swift::String v23 = (void (*)(char *))v5[4];
  uint64_t v47 = v5[5];
  uint64_t v48 = v23;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v36 = v21;
  uint64_t v52 = v21;
  uint64_t v53 = v22;
  swift_bridgeObjectRetain();
  uint64_t v37 = ObjectType;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  Preferences.subscript.getter(&v52, ObjectType, v14, a2, (uint64_t)v17);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v14) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v49);
  }
  long long v26 = v50;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v50, v17, v14);
  uint64_t v27 = v56;
  v48(v26);
  if (v27) {
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v26, v14);
  }
  uint64_t v28 = swift_getObjectType();
  uint64_t v29 = v43;
  uint64_t v30 = (uint64_t)v38;
  uint64_t v31 = v46;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v38, v51, v46);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v31);
  uint64_t v52 = v34;
  uint64_t v53 = v35;
  swift_bridgeObjectRetain();
  sub_19F089130(v30, &v52, v28, v31, v41);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v30, v40);
  uint64_t v54 = type metadata accessor for PreferenceKey();
  uint64_t v55 = &protocol witness table for PreferenceKey<A>;
  uint64_t v52 = v36;
  uint64_t v53 = v22;
  uint64_t v32 = v45;
  uint64_t v33 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v45 + 32);
  swift_bridgeObjectRetain();
  v33(&v52, v37, v32);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v51, v31);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v50, v14);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v52);
}

uint64_t sub_19EF7A20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19EF79D88(a1, a2, a3, a4, a5);
}

void AnyIntentModel.init(deserializing:using:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v76 = a4;
  uint64_t v7 = sub_19F1DCDCC();
  *(void *)&long long v75 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v74 - v11;
  uint64_t v13 = *a2;
  uint64_t v94 = a1;
  JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v87);
  sub_19EEBF040((uint64_t)v87, (uint64_t)v83);
  uint64_t v14 = v84;
  if ((void)v84)
  {
    uint64_t v15 = *((void *)&v84 + 1);
    __swift_project_boxed_opaque_existential_1(v83, v84);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
    uint64_t v18 = v17;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v83);
    sub_19EEC3418((uint64_t)v87);
    if (v18) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_19EEBF108((uint64_t)v83);
    sub_19EEC3418((uint64_t)v87);
  }
  uint64_t v16 = static StaticIntent.kind.getter();
  uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  if (v16 == static StaticIntent.kind.getter() && v18 == v20)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_19EF7B208((uint64_t)a3, (uint64_t (*)(void, uint64_t))type metadata accessor for StaticIntent);
    if (!v24)
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = type metadata accessor for StaticIntent();
LABEL_20:
      uint64_t v35 = v34;
LABEL_21:
      sub_19EF5B580();
      swift_allocError();
      uint64_t v36 = MEMORY[0x1E4FBC860];
      *uint64_t v37 = v35;
      v37[1] = v36;
      void v37[2] = 0;
      _OWORD v37[3] = 0;
LABEL_22:
      swift_willThrow();
      uint64_t v38 = v94;
LABEL_31:
      sub_19EEC3418(v38);
      return;
    }
    goto LABEL_16;
  }
  char v22 = sub_19F1DD44C();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_15;
  }
  if (v16 == static SidepackedIntent.kind.getter() && v18 == v23)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  char v42 = sub_19F1DD44C();
  swift_bridgeObjectRelease();
  if (v42)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_19EF7B208((uint64_t)a3, (uint64_t (*)(void, uint64_t))type metadata accessor for SidepackedIntent);
    if (!v24)
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = type metadata accessor for SidepackedIntent();
      goto LABEL_20;
    }
LABEL_16:
    uint64_t v27 = v24;
    uint64_t v28 = v25;
    uint64_t v29 = v26;
    uint64_t v30 = v94;
    sub_19EEC355C(v94, (uint64_t)v86);
    uint64_t v79 = v13;
    uint64_t v31 = *(void (**)(long long *, uint64_t *, uint64_t, uint64_t))(v28 + 8);
    uint64_t v88 = v27;
    *(void *)&long long v89 = v28;
    *((void *)&v89 + 1) = v29;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v87);
    uint64_t v32 = v77;
    v31(v86, &v79, v27, v28);
    if (v32)
    {
      uint64_t v33 = v30;
LABEL_18:
      sub_19EEC3418(v33);
      __swift_deallocate_boxed_opaque_existential_2((uint64_t)v87);
      return;
    }
    __swift_instantiateConcreteTypeFromMangledName(qword_1E9471740);
    uint64_t v79 = (uint64_t)a3;
    uint64_t ExtendedExistentialTypeMetadata = swift_getExtendedExistentialTypeMetadata();
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_19EF5B580();
      swift_allocError();
      uint64_t v43 = MEMORY[0x1E4FBC860];
      *uint64_t v44 = ExtendedExistentialTypeMetadata;
      v44[1] = v43;
      v44[2] = 0;
      v44[3] = 0;
      swift_willThrow();
      uint64_t v38 = v30;
      goto LABEL_31;
    }
    uint64_t v40 = v30;
LABEL_25:
    sub_19EEC3418(v40);
    sub_19EEBB420(v86, (uint64_t)v83);
    uint64_t v41 = (long long *)v83;
LABEL_26:
    sub_19EEBB420(v41, v76);
    return;
  }
  swift_bridgeObjectRetain();
  sub_19F17AA40(0xD00000000000001FLL, 0x800000019F26A560, v13, (uint64_t)v87);
  swift_bridgeObjectRelease();
  if (!v87[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    void *v53 = 0xD00000000000001FLL;
    v53[1] = 0x800000019F26A560;
    v53[2] = 0x20000001EF13A820uLL;
    v53[3] = 0;
    goto LABEL_22;
  }
  uint64_t v45 = sub_19F0BC190(v16, v18);
  uint64_t v47 = v46;
  uint64_t v35 = v45;
  swift_bridgeObjectRelease();
  if (!v35)
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = type metadata accessor for AnyIntentModel() | 0x6000000000000000;
    sub_19EF5B580();
    swift_allocError();
    *uint64_t v55 = v16;
    v55[1] = v18;
    v55[2] = v54;
    v55[3] = 0;
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v91 = v35;
  *((void *)&v91 + 1) = v47;
  v87[0] = a3;
  swift_getExtendedExistentialTypeMetadata();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471728);
  if (swift_dynamicCast())
  {
    uint64_t v48 = v79;
    long long v75 = v80;
    uint64_t v49 = v94;
    sub_19EEC355C(v94, (uint64_t)v86);
    v93[0] = v13;
    uint64_t v50 = v75;
    uint64_t v51 = *(void (**)(long long *, void *, uint64_t, uint64_t))(v75 + 8);
    uint64_t v88 = v48;
    long long v89 = v75;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v87);
    uint64_t v52 = v77;
    v51(v86, v93, v48, v50);
    if (v52)
    {
      uint64_t v33 = v49;
      goto LABEL_18;
    }
    __swift_instantiateConcreteTypeFromMangledName(qword_1E9471740);
    v93[0] = a3;
    uint64_t v63 = swift_getExtendedExistentialTypeMetadata();
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_19EF5B580();
      swift_allocError();
      uint64_t v66 = MEMORY[0x1E4FBC860];
      *uint64_t v67 = v63;
      v67[1] = v66;
      v67[2] = 0;
      v67[3] = 0;
      swift_willThrow();
      uint64_t v38 = v49;
      goto LABEL_31;
    }
    uint64_t v40 = v49;
    goto LABEL_25;
  }
  v93[0] = v35;
  v93[1] = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471730);
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v56 = v92;
  long long v74 = v91;
  sub_19EEC355C(v94, (uint64_t)v87);
  v83[0] = v13;
  uint64_t v57 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v83);
  uint64_t v58 = MEMORY[0x1E4FBC860];
  *((void *)&v89 + 1) = v57;
  uint64_t v90 = MEMORY[0x1E4FBC860];
  uint64_t v81 = &type metadata for _JSONObjectDecoder;
  unint64_t v82 = sub_19EE70560();
  uint64_t v79 = swift_allocObject();
  sub_19EE70470((uint64_t)v87, v79 + 16);
  long long v84 = v74;
  uint64_t v85 = v56;
  __swift_allocate_boxed_opaque_existential_2Tm(v83);
  uint64_t v59 = v74;
  uint64_t v60 = v77;
  sub_19F1DC59C();
  uint64_t v61 = v60;
  if (v60)
  {
    sub_19EE703B4((uint64_t)v87);
    __swift_deallocate_boxed_opaque_existential_2((uint64_t)v83);
    uint64_t v62 = v94;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471738);
    uint64_t v78 = a3;
    uint64_t v64 = swift_getExtendedExistentialTypeMetadata();
    char v65 = swift_dynamicCast();
    uint64_t v62 = v94;
    if (v65)
    {
      sub_19EEC3418(v94);
      sub_19EE703B4((uint64_t)v87);
      sub_19EEBB420((long long *)&v79, (uint64_t)v86);
      uint64_t v41 = v86;
      goto LABEL_26;
    }
    sub_19EF5B580();
    uint64_t v61 = (void *)swift_allocError();
    *long long v68 = v64;
    v68[1] = v58;
    v68[2] = 0;
    v68[3] = 0;
    swift_willThrow();
    sub_19EE703B4((uint64_t)v87);
  }
  v87[0] = v61;
  id v69 = v61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
  if (swift_dynamicCast())
  {

    uint64_t v70 = v75;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v9, v12, v7);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D900);
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_19F24EAD0;
    *(void *)(v71 + 32) = swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v70 + 16))(v72, v9, v7);
    sub_19EF5B580();
    swift_allocError();
    *uint64_t v73 = v59;
    v73[1] = v71;
    v73[2] = 0;
    v73[3] = 0;
    swift_willThrow();
    sub_19EEC3418(v62);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v9, v7);
  }
  else
  {
    sub_19EEC3418(v62);
  }
}

uint64_t AnyIntentModel._canonicalized.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = type metadata accessor for SidepackedIntent();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v13[-v7 - 8];
  sub_19EEC4154((uint64_t)v2, (uint64_t)v13);
  uint64_t v12 = v4;
  swift_getExtendedExistentialTypeMetadata();
  if (!swift_dynamicCast()) {
    return sub_19EEC4154((uint64_t)v2, a2);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v9 = v2[3];
  uint64_t v10 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
}

uint64_t AnyIntentModel.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for SidepackedIntent();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *(void *)(a2 - 8);
  double v14 = MEMORY[0x1F4188790](v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v14);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v20 = a2;
    uint64_t v21 = a3;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v19);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 32))(boxed_opaque_existential_2Tm, a1, a2);
  }
  else
  {
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 40))(&v19, a2, a3);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, a2);
  }
  return sub_19EEBB420(&v19, a4);
}

uint64_t AnyIntentModel.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  double v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v10 + 16))(v9, v7);
  AnyIntentModel.init<A>(_:)((uint64_t)v9, v4, v5, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t AnyIntentModel.base.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC4154(v1, a1);
}

uint64_t AnyIntentModel.kind.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t AnyIntentModel._canonicalIntentModel.getter@<X0>(uint64_t a1@<X8>)
{
  long long v7 = *(_OWORD *)(v1 + 24);
  uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)v1, v7);
  *(_OWORD *)(a1 + 24) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)a1);
  uint64_t v5 = *(uint64_t (**)(uint64_t *, void *, void))(*(void *)(v7 - 8) + 16);
  return v5(boxed_opaque_existential_2Tm, v3, v7);
}

uint64_t AnyIntentModel.debugDescription.getter()
{
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  long long v5 = *(_OWORD *)(v0 + 3);
  uint64_t v1 = v0[3];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0, v1);
  long long v7 = v5;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v6);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v1 - 8) + 16))(boxed_opaque_existential_2Tm, v2, v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946DEE0);
  sub_19F1DCF4C();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v8;
}

uint64_t sub_19EF7B208(uint64_t a1, uint64_t (*a2)(void, uint64_t))
{
  uint64_t v2 = a2(0, a1);
  return dynamic_cast_existential_2_conditional(v2);
}

uint64_t type metadata accessor for AnyIntentModel()
{
  return __swift_instantiateGenericMetadata();
}

void sub_19EF7B26C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_19EF7B288()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t *_s19DeepLinkDestinationVwca(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t _s19DeepLinkDestinationVwta(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s19DeepLinkDestinationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_19EF7B384()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19EF7B420(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_19EF7B528(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_19EF7B59C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_bridgeObjectRetain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_19EF7B62C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_19EF7B6C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_19EF7B734(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_19EF7B7BC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_19EF7B95C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x19EF7BBBCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 16] & ~v9;
          long long v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SetPreferenceMigrationRule()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EF7BBFC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = a1[1];
  *a4 = *a1;
  a4[1] = v6;
  unsigned int v7 = (char *)a4 + *(int *)(type metadata accessor for SetPreferenceMigrationRule() + 28);
  unsigned int v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v8(v7, a2, a3);
}

uint64_t sub_19EF7BC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19EF7BCA8(a3, a4, a5);
}

uint64_t sub_19EF7BCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = sub_19F1DCAAC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *v3;
  uint64_t v11 = v3[1];
  int v13 = (char *)v3 + *(int *)(a3 + 28);
  uint64_t v14 = *(void *)(v5 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v13, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v5);
  v18[0] = v12;
  v18[1] = v11;
  swift_bridgeObjectRetain();
  sub_19F089130((uint64_t)v9, v18, ObjectType, v5, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_19EF7BE38(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v36 = MEMORY[0x1E4FBC860];
    sub_19EFF64E0(0, v1, 0);
    uint64_t v5 = sub_19EF7E55C(a1);
    uint64_t v6 = 0;
    uint64_t v7 = a1 + 64;
    char v8 = *(unsigned char *)(a1 + 32);
    int64_t v25 = v1;
    int v26 = v4;
    uint64_t v27 = a1 + 64;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << v8)
    {
      unint64_t v11 = (unint64_t)v5 >> 6;
      if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v4) {
        goto LABEL_26;
      }
      ++v6;
      char v12 = *(unsigned char *)(*(void *)(a1 + 48) + v5);
      sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v5, (uint64_t)v33);
      v32[0] = v12;
      LOBYTE(v30[0]) = v12;
      sub_19EEBDBA4((uint64_t)v33, (uint64_t)v30 + 8);
      v28[0] = v30[0];
      v28[1] = v30[1];
      uint64_t v29 = v31;
      sub_19EEBD664((uint64_t)v32, &qword_1E946D5D8);
      sub_19F1DCC8C();
      sub_19EEBDBA4((uint64_t)v28 + 8, (uint64_t)v34 + 8);
      sub_19EEBD664((uint64_t)v28, &qword_1E946D5D8);
      uint64_t v2 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19EFF64E0(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v36;
      }
      unint64_t v14 = *(void *)(v2 + 16);
      unint64_t v13 = *(void *)(v2 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_19EFF64E0(v13 > 1, v14 + 1, 1);
        uint64_t v2 = v36;
      }
      *(void *)(v2 + 16) = v14 + 1;
      uint64_t v15 = v2 + 72 * v14;
      *(_OWORD *)(v15 + 32) = v33[2];
      long long v16 = v33[3];
      long long v17 = v34[0];
      long long v18 = v34[1];
      *(void *)(v15 + 96) = v35;
      *(_OWORD *)(v15 + 64) = v17;
      *(_OWORD *)(v15 + 80) = v18;
      *(_OWORD *)(v15 + 48) = v16;
      char v8 = *(unsigned char *)(a1 + 32);
      unint64_t v9 = 1 << v8;
      if (v5 >= 1 << v8) {
        goto LABEL_27;
      }
      uint64_t v7 = a1 + 64;
      uint64_t v19 = *(void *)(v27 + 8 * v11);
      if ((v19 & (1 << v5)) == 0) {
        goto LABEL_28;
      }
      int v4 = v26;
      if (*(_DWORD *)(a1 + 36) != v26) {
        goto LABEL_29;
      }
      unint64_t v20 = v19 & (-2 << (v5 & 0x3F));
      if (v20)
      {
        unint64_t v9 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
        int64_t v10 = v25;
      }
      else
      {
        unint64_t v21 = v11 + 1;
        unint64_t v22 = (v9 + 63) >> 6;
        int64_t v10 = v25;
        if (v11 + 1 < v22)
        {
          unint64_t v23 = *(void *)(v27 + 8 * v21);
          if (v23)
          {
LABEL_22:
            unint64_t v9 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v11)
            {
              unint64_t v23 = *(void *)(a1 + 80 + 8 * v11++);
              if (v23)
              {
                unint64_t v21 = v11 + 1;
                goto LABEL_22;
              }
            }
          }
        }
      }
      uint64_t v5 = v9;
      if (v6 == v10) {
        return v2;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    JUMPOUT(0x19EF7C204);
  }
  return v2;
}

uint64_t sub_19EF7C220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v40 - v8;
  uint64_t v10 = sub_19F1DB57C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  long long v16 = (char *)&v40 - v15;
  strcpy((char *)v49, "idString");
  BYTE1(v49[1]) = 0;
  WORD1(v49[1]) = 0;
  HIDWORD(v49[1]) = -402653184;
  sub_19F1DCC8C();
  if (*(void *)(a1 + 16) && (unint64_t v17 = sub_19EE77500((uint64_t)v50), (v18 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v17, (uint64_t)&v51);
  }
  else
  {
    long long v51 = 0u;
    long long v52 = 0u;
  }
  sub_19EE7760C((uint64_t)v50);
  if (!*((void *)&v52 + 1)) {
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_31;
  }
  id v19 = v49[1];
  id v48 = v49[0];
  v49[0] = (id)0x657079546469;
  v49[1] = (id)0xE600000000000000;
  sub_19F1DCC8C();
  if (*(void *)(a1 + 16) && (unint64_t v20 = sub_19EE77500((uint64_t)v50), (v21 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v51);
  }
  else
  {
    long long v51 = 0u;
    long long v52 = 0u;
  }
  sub_19EE7760C((uint64_t)v50);
  if (!*((void *)&v52 + 1))
  {
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)&v51, &qword_1EB393260);
LABEL_32:
    uint64_t v29 = type metadata accessor for MTMetricsIdentifier();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a2, 1, 1, v29);
  }
  sub_19EE85BDC();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  id v47 = v49[0];
  id v22 = objc_msgSend(v49[0], sel_integerValue);
  if (v22 == (id)1)
  {
    int v44 = 1;
    goto LABEL_21;
  }
  if (v22 != (id)2)
  {
    swift_bridgeObjectRelease();

    goto LABEL_31;
  }
  int v44 = 0;
LABEL_21:
  strcpy((char *)v49, "effectiveDate");
  HIWORD(v49[1]) = -4864;
  sub_19F1DCC8C();
  if (*(void *)(a1 + 16) && (unint64_t v23 = sub_19EE77500((uint64_t)v50), (v24 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v23, (uint64_t)&v51);
  }
  else
  {
    long long v51 = 0u;
    long long v52 = 0u;
  }
  sub_19EE7760C((uint64_t)v50);
  uint64_t v45 = a2;
  id v46 = v19;
  if (!*((void *)&v52 + 1))
  {
    sub_19EEBD664((uint64_t)&v51, &qword_1EB393260);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_35;
  }
  int v25 = swift_dynamicCast();
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v43(v9, v25 ^ 1u, 1, v10);
  int v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v26(v9, 1, v10) == 1)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_19EEBD664((uint64_t)v9, qword_1EB3923B0);
    a2 = v45;
    goto LABEL_32;
  }
  uint64_t v41 = v26;
  uint64_t v42 = v11 + 56;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v40(v16, v9, v10);
  strcpy((char *)v49, "expirationDate");
  HIBYTE(v49[1]) = -18;
  sub_19F1DCC8C();
  if (*(void *)(a1 + 16))
  {
    unint64_t v27 = sub_19EE77500((uint64_t)v50);
    if (v28)
    {
      sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v27, (uint64_t)&v51);
    }
    else
    {
      long long v51 = 0u;
      long long v52 = 0u;
    }
  }
  else
  {
    long long v51 = 0u;
    long long v52 = 0u;
  }
  uint64_t v31 = v41;
  a2 = v45;
  sub_19EE7760C((uint64_t)v50);
  if (!*((void *)&v52 + 1))
  {
    sub_19EEBD664((uint64_t)&v51, &qword_1EB393260);
    v43(v6, 1, 1, v10);
    goto LABEL_44;
  }
  int v32 = swift_dynamicCast();
  v43(v6, v32 ^ 1u, 1, v10);
  if (v31(v6, 1, v10) == 1)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    sub_19EEBD664((uint64_t)v6, qword_1EB3923B0);
    goto LABEL_32;
  }
  uint64_t v33 = v6;
  uint64_t v34 = (void (*)(uint64_t, char *, uint64_t))v40;
  v40(v13, v33, v10);
  strcpy((char *)&v51, "isSynchronized");
  HIBYTE(v51) = -18;
  sub_19F1DCC8C();
  if (*(void *)(a1 + 16))
  {
    unint64_t v35 = sub_19EE77500((uint64_t)v50);
    if (v36)
    {
      sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v35, (uint64_t)&v51);
    }
    else
    {
      long long v51 = 0u;
      long long v52 = 0u;
    }
  }
  else
  {
    long long v51 = 0u;
    long long v52 = 0u;
  }

  swift_bridgeObjectRelease();
  sub_19EE7760C((uint64_t)v50);
  if (*((void *)&v52 + 1))
  {
    if (swift_dynamicCast()) {
      char v37 = (char)v49[0];
    }
    else {
      char v37 = 2;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v51, &qword_1EB393260);
    char v37 = 2;
  }
  uint64_t v38 = (int *)type metadata accessor for MTMetricsIdentifier();
  v34(a2 + v38[6], v16, v10);
  v34(a2 + v38[7], v13, v10);
  *(unsigned char *)a2 = v44;
  id v39 = v46;
  *(void *)(a2 + 8) = v48;
  *(void *)(a2 + 16) = v39;
  *(unsigned char *)(a2 + v38[8]) = v37;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v38 - 1) + 56))(a2, 0, 1, v38);
}

unint64_t sub_19EF7C9F4(char a1)
{
  unint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D695474696177;
      break;
    case 2:
      unint64_t result = 0x6C6F506568636163;
      break;
    case 3:
      unint64_t result = 0x7465736572;
      break;
    case 4:
      unint64_t result = 0x676E697473697865;
      break;
    case 5:
      unint64_t result = 0x74696157636E7973;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19EF7CAF0(unsigned __int8 *a1, char *a2)
{
  return sub_19F03A08C(*a1, *a2);
}

uint64_t sub_19EF7CAFC()
{
  return sub_19EFB60E0();
}

uint64_t sub_19EF7CB08()
{
  return sub_19EFB5EA8();
}

uint64_t sub_19EF7CB10()
{
  return sub_19EFB60E0();
}

uint64_t sub_19EF7CB18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EF7F1E4();
  *a1 = result;
  return result;
}

unint64_t sub_19EF7CB48@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_19EF7C9F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void *sub_19EF7CB74(uint64_t *a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = *a1;
  v2[2] = objc_msgSend(objc_allocWithZone((Class)JESoftLinkedMTStandardIDService), sel_initWithAMSBag_, v3);
  v2[3] = v3;
  v2[4] = 0;
  return v2;
}

uint64_t sub_19EF7CBD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F250E90;
  unsigned __int8 v10 = 0;
  *(void *)(v6 + 32) = sub_19EF7CF24(a1, a2, &v10, a3);
  unsigned __int8 v9 = 1;
  *(void *)(v6 + 40) = sub_19EF7CF24(a1, a2, &v9, a3);
  sub_19F1DC17C();
  uint64_t v7 = sub_19F1071A4(v6, sub_19EF7CCB8, 0);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_19EF7CCB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5D0);
  uint64_t v6 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v21 = v2;
    id v22 = a2;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_19EFF6500(0, v9, 0);
    uint64_t v10 = v24;
    uint64_t v11 = *(void *)(type metadata accessor for MTMetricsIdentifier() - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    do
    {
      uint64_t v14 = &v8[*(int *)(v23 + 48)];
      sub_19EF7DB10(v12, (uint64_t)v14);
      *uint64_t v8 = *v14;
      uint64_t v24 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_19EFF6500(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v24;
      }
      *(void *)(v10 + 16) = v16 + 1;
      sub_19EEBDC4C((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, &qword_1E946D5D0);
      v12 += v13;
      --v9;
    }
    while (v9);
    uint64_t v3 = v21;
    a2 = v22;
  }
  if (*(void *)(v10 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D648);
    uint64_t v17 = sub_19F1DD06C();
  }
  else
  {
    uint64_t v17 = MEMORY[0x1E4FBC868];
  }
  uint64_t v24 = v17;
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_19EF7DF58(v18, 1, &v24);
  if (v3)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v24;
  }
  return result;
}

void *sub_19EF7CF24(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D5F0);
  MEMORY[0x1F4188790](v7);
  int64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v10 = *a3;
  *int64_t v9 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D628);
  uint64_t v11 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  uint64_t v11[2] = v12;
  sub_19EEBDC4C((uint64_t)v9, (uint64_t)v11 + *(void *)(*v11 + 96), (uint64_t *)&unk_1E946D5F0);
  uint64_t v13 = *(void **)(v4 + 16);
  uint64_t v14 = (void *)sub_19F1DBD4C();
  if (a4)
  {
    if (*(void *)(sub_19EF7BE38(a4) + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390C68);
      uint64_t v15 = sub_19F1DD06C();
    }
    else
    {
      uint64_t v15 = MEMORY[0x1E4FBC868];
    }
    aBlock[0] = v15;
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_19EF7DB74(v17, 1, aBlock);
    swift_bridgeObjectRelease();
    unint64_t v16 = (void *)sub_19F1DBB1C();
    swift_release();
  }
  else
  {
    unint64_t v16 = 0;
  }
  if (v10) {
    uint64_t v18 = 1;
  }
  else {
    uint64_t v18 = 2;
  }
  aBlock[4] = sub_19EF7E554;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EF7D38C;
  aBlock[3] = &block_descriptor_9;
  id v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_queryIDForTopic_type_options_completion_, v14, v18, v16, v19);
  _Block_release(v19);

  return v11;
}

void sub_19EF7D1D4(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5C0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MTMetricsIdentifier();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_19EF7C220(v11, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      sub_19EF7E42C((uint64_t)v6, (uint64_t)v10);
      sub_19F1ADD38((uint64_t)v10);
      sub_19EF7E490((uint64_t)v10);
      return;
    }
    sub_19EEBD664((uint64_t)v6, &qword_1E946D5C0);
  }
  if (a2)
  {
    uint64_t v12 = a2;
  }
  else
  {
    sub_19EF7E4F4();
    uint64_t v12 = (void *)swift_allocError();
    *uint64_t v13 = 1;
  }
  id v14 = a2;
  sub_19F07EA74(v12);
}

uint64_t sub_19EF7D38C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_19F1DBB3C();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_19EF7D438(uint64_t a1, uint64_t a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D638);
  uint64_t v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v5 + 16) = v6;
  *(void *)(v5 + 24) = v7;
  *(unsigned char *)(v5 + 32) = 0;
  uint64_t v8 = *(void **)(v3 + 16);
  uint64_t v9 = (void *)sub_19F1DBD4C();
  if (a3)
  {
    if (*(void *)(sub_19EF7BE38((uint64_t)a3) + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390C68);
      uint64_t v10 = sub_19F1DD06C();
    }
    else
    {
      uint64_t v10 = MEMORY[0x1E4FBC868];
    }
    aBlock[0] = v10;
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_19EF7DB74(v11, 1, aBlock);
    swift_bridgeObjectRelease();
    a3 = (void *)sub_19F1DBB1C();
    swift_release();
  }
  id v12 = objc_msgSend(v8, sel_idFieldsForTopic_options_, v9, a3);

  aBlock[4] = sub_19EF7E548;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EF7D74C;
  aBlock[3] = &block_descriptor_6_0;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_addFinishBlock_, v13);
  _Block_release(v13);

  return v5;
}

void sub_19EF7D65C(uint64_t a1, id a2)
{
  if (a1) {
    sub_19F1DBB2C();
  }
  if (a2)
  {
    id v3 = a2;
  }
  else
  {
    sub_19EF7E4F4();
    id v3 = (id)swift_allocError();
    *uint64_t v4 = 1;
  }
  id v5 = a2;
  sub_19F07CF48(v3);
}

void sub_19EF7D74C(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_19EF7D7D8()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946C7B8);
  uint64_t v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(_DWORD *)(v2 + 16) = 0;
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 0;
  uint64_t v4 = *(void **)(v0 + 16);
  id v5 = (void *)sub_19F1DBD4C();
  sub_19EE78050(v3);
  id v6 = (void *)sub_19F1DBB1C();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_secretValueForNamespace_options_, v5, v6);

  void v10[4] = sub_19EF7E4EC;
  uint64_t v10[5] = v1;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  _DWORD v10[2] = sub_19EF7D74C;
  v10[3] = &block_descriptor_6;
  uint64_t v8 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_addFinishBlock_, v8);
  _Block_release(v8);

  return v1;
}

void sub_19EF7D974(void *a1, id a2)
{
  if (a1)
  {
    uint64_t v3 = sub_19F1DBD7C();
    uint64_t v5 = v4;
    id v11 = a1;
    sub_19F1AE1CC(v3, v5);
    swift_bridgeObjectRelease();
    id v6 = v11;
  }
  else
  {
    if (a2)
    {
      id v8 = a2;
    }
    else
    {
      sub_19EF7E4F4();
      id v8 = (id)swift_allocError();
      *uint64_t v9 = 1;
    }
    id v10 = a2;
    sub_19F07EAA4(v8);
    id v6 = v8;
  }
}

uint64_t sub_19EF7DA58()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTStandardIDServiceWrapper()
{
  return self;
}

uint64_t type metadata accessor for MTMetricsIdentifier()
{
  uint64_t result = qword_1E946D5B0;
  if (!qword_1E946D5B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_19EF7DB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MTMetricsIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_19EF7DB74(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  sub_19EEC3ED8(a1 + 32, (uint64_t)&v45, &qword_1E946D640);
  long long v42 = v45;
  long long v43 = v46;
  uint64_t v44 = v47;
  sub_19EEBDC00(v48, v41);
  id v7 = (void *)*a3;
  unint64_t v9 = sub_19EE77500((uint64_t)&v42);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11)) {
    goto LABEL_23;
  }
  char v13 = v8;
  if (v7[3] >= v12)
  {
    if (a2)
    {
      if (v8) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_19EFBD530();
      if (v13) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v9 >> 6) + 64) |= 1 << v9;
    uint64_t v19 = v18[6] + 40 * v9;
    long long v20 = v42;
    long long v21 = v43;
    *(void *)(v19 + 32) = v44;
    *(_OWORD *)uint64_t v19 = v20;
    *(_OWORD *)(v19 + 16) = v21;
    sub_19EEBDC00(v41, (_OWORD *)(v18[7] + 32 * v9));
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v18[2] = v24;
    uint64_t v25 = v4 - 1;
    if (!v25)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v26 = a1 + 104;
    while (1)
    {
      sub_19EEC3ED8(v26, (uint64_t)&v45, &qword_1E946D640);
      long long v42 = v45;
      long long v43 = v46;
      uint64_t v44 = v47;
      sub_19EEBDC00(v48, v41);
      unint64_t v27 = (void *)*a3;
      unint64_t v28 = sub_19EE77500((uint64_t)&v42);
      uint64_t v30 = v27[2];
      BOOL v31 = (v29 & 1) == 0;
      BOOL v23 = __OFADD__(v30, v31);
      uint64_t v32 = v30 + v31;
      if (v23) {
        break;
      }
      char v33 = v29;
      if (v27[3] < v32)
      {
        sub_19EE77768(v32, 1);
        unint64_t v28 = sub_19EE77500((uint64_t)&v42);
        if ((v33 & 1) != (v34 & 1)) {
          goto LABEL_25;
        }
      }
      if (v33) {
        goto LABEL_10;
      }
      unint64_t v35 = (void *)*a3;
      *(void *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
      uint64_t v36 = v35[6] + 40 * v28;
      long long v37 = v42;
      long long v38 = v43;
      *(void *)(v36 + 32) = v44;
      *(_OWORD *)uint64_t v36 = v37;
      *(_OWORD *)(v36 + 16) = v38;
      sub_19EEBDC00(v41, (_OWORD *)(v35[7] + 32 * v28));
      uint64_t v39 = v35[2];
      BOOL v23 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v23) {
        goto LABEL_24;
      }
      _OWORD v35[2] = v40;
      v26 += 72;
      if (!--v25) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_19EE77768(v12, a2 & 1);
  unint64_t v14 = sub_19EE77500((uint64_t)&v42);
  if ((v13 & 1) == (v15 & 1))
  {
    unint64_t v9 = v14;
    if ((v13 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    unint64_t v16 = (void *)swift_allocError();
    swift_willThrow();
    id v49 = v16;
    id v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
      sub_19EE7760C((uint64_t)&v42);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_19F1DD65C();
  __break(1u);
LABEL_26:
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  sub_19F1DCFCC();
  __break(1u);
}

void sub_19EF7DF58(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = type metadata accessor for MTMetricsIdentifier();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D5D0);
  MEMORY[0x1F4188790](v11);
  char v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v53 = v3;
  uint64_t v54 = v8;
  char v17 = a2;
  uint64_t v18 = (uint64_t)&v15[*(int *)(v12 + 48)];
  unint64_t v52 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = a1 + v52;
  uint64_t v57 = *(void *)(v13 + 72);
  uint64_t v55 = a1;
  swift_bridgeObjectRetain();
  sub_19EEC3ED8(v19, (uint64_t)v15, &qword_1E946D5D0);
  char v61 = *v15;
  char v20 = v61;
  uint64_t v56 = v18;
  sub_19EF7E42C(v18, (uint64_t)v10);
  long long v21 = (void *)*a3;
  unint64_t v23 = sub_19EFB6CB0(v20);
  uint64_t v24 = v21[2];
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_23;
  }
  char v27 = v22;
  if (v21[3] >= v26)
  {
    if (v17)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_19EFBE60C();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v32 = (void *)*a3;
    *(void *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    *(unsigned char *)(v32[6] + v23) = v20;
    uint64_t v33 = *(void *)(v54 + 72);
    sub_19EF7E42C((uint64_t)v10, v32[7] + v33 * v23);
    uint64_t v34 = v32[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    _OWORD v32[2] = v36;
    uint64_t v37 = v16 - 1;
    if (!v37)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v38 = v55 + v57 + v52;
    while (1)
    {
      sub_19EEC3ED8(v38, (uint64_t)v15, &qword_1E946D5D0);
      char v61 = *v15;
      char v39 = v61;
      sub_19EF7E42C(v56, (uint64_t)v10);
      uint64_t v40 = (void *)*a3;
      unint64_t v41 = sub_19EFB6CB0(v39);
      uint64_t v43 = v40[2];
      BOOL v44 = (v42 & 1) == 0;
      BOOL v35 = __OFADD__(v43, v44);
      uint64_t v45 = v43 + v44;
      if (v35) {
        break;
      }
      char v46 = v42;
      if (v40[3] < v45)
      {
        sub_19EFB92A0(v45, 1);
        unint64_t v41 = sub_19EFB6CB0(v39);
        if ((v46 & 1) != (v47 & 1)) {
          goto LABEL_25;
        }
      }
      if (v46) {
        goto LABEL_10;
      }
      id v48 = (void *)*a3;
      *(void *)(*a3 + 8 * (v41 >> 6) + 64) |= 1 << v41;
      *(unsigned char *)(v48[6] + v41) = v39;
      sub_19EF7E42C((uint64_t)v10, v48[7] + v33 * v41);
      uint64_t v49 = v48[2];
      BOOL v35 = __OFADD__(v49, 1);
      uint64_t v50 = v49 + 1;
      if (v35) {
        goto LABEL_24;
      }
      _OWORD v48[2] = v50;
      v38 += v57;
      if (!--v37) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_19EFB92A0(v26, v17 & 1);
  unint64_t v28 = sub_19EFB6CB0(v20);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v30 = (void *)swift_allocError();
    swift_willThrow();
    id v60 = v30;
    id v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_19EF7E490((uint64_t)v10);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_19F1DD65C();
  __break(1u);
LABEL_26:
  uint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19F1DCF4C();
  sub_19F1DBEFC();
  sub_19F1DCFCC();
  __break(1u);
}

uint64_t sub_19EF7E42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MTMetricsIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF7E490(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MTMetricsIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_19EF7E4EC(void *a1, id a2)
{
}

unint64_t sub_19EF7E4F4()
{
  unint64_t result = qword_1E94717C8;
  if (!qword_1E94717C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94717C8);
  }
  return result;
}

void sub_19EF7E548(uint64_t a1, id a2)
{
}

void sub_19EF7E554(uint64_t a1, void *a2)
{
}

uint64_t sub_19EF7E55C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unsigned char *storeEnumTagSinglePayload for MTStandardIDServiceWrapper.MTStandardIDServiceWrapperError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF7E6B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MTStandardIDServiceWrapper.MTStandardIDServiceWrapperError()
{
  return &type metadata for MTStandardIDServiceWrapper.MTStandardIDServiceWrapperError;
}

uint64_t getEnumTagSinglePayload for MTStandardIDServiceWrapper.IDOption(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MTStandardIDServiceWrapper.IDOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF7E844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MTStandardIDServiceWrapper.IDOption()
{
  return &type metadata for MTStandardIDServiceWrapper.IDOption;
}

char *sub_19EF7E87C(char *a1, char *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)unsigned int v4 = *(void *)a2;
    unsigned int v4 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *((void *)a2 + 2);
    *((void *)a1 + 1) = *((void *)a2 + 1);
    *((void *)a1 + 2) = v7;
    uint64_t v8 = a3[6];
    uint64_t v9 = &a1[v8];
    unint64_t v10 = &a2[v8];
    uint64_t v11 = sub_19F1DB57C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[7]], &a2[a3[7]], v11);
    v4[a3[8]] = a2[a3[8]];
  }
  return v4;
}

uint64_t sub_19EF7E9A4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_19F1DB57C();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  return v8(v6, v5);
}

uint64_t sub_19EF7EA54(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_19F1DB57C();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_19EF7EB2C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_19F1DB57C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_19EF7EC0C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_19F1DB57C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_19EF7ECD4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_19F1DB57C();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_19EF7EDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19EF7EDB8);
}

uint64_t sub_19EF7EDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_19F1DB57C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_19EF7EE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19EF7EE7C);
}

uint64_t sub_19EF7EE7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_19F1DB57C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_19EF7EF24()
{
  uint64_t result = sub_19F1DB57C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_19EF7EFD4()
{
  unint64_t result = qword_1E946D5E0;
  if (!qword_1E946D5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946D5E0);
  }
  return result;
}

unint64_t sub_19EF7F02C()
{
  unint64_t result = qword_1E94717D0;
  if (!qword_1E94717D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94717D0);
  }
  return result;
}

uint64_t sub_19EF7F080(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(unsigned char *)a1 == 0;
  if (*(unsigned char *)a1) {
    uint64_t v5 = 0x6469746E65696C63;
  }
  else {
    uint64_t v5 = 0x646972657375;
  }
  if (v4) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (*(unsigned char *)a2) {
    uint64_t v7 = 0x6469746E65696C63;
  }
  else {
    uint64_t v7 = 0x646972657375;
  }
  if (*(unsigned char *)a2) {
    unint64_t v8 = 0xE800000000000000;
  }
  else {
    unint64_t v8 = 0xE600000000000000;
  }
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v10 & 1) == 0) {
      return result;
    }
  }
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)
    || (v12 = sub_19F1DD44C(), uint64_t result = 0, (v12 & 1) != 0))
  {
    uint64_t v13 = type metadata accessor for MTMetricsIdentifier();
    if ((sub_19F1DB53C() & 1) == 0 || (sub_19F1DB53C() & 1) == 0) {
      return 0;
    }
    uint64_t v14 = *(int *)(v13 + 32);
    int v15 = *(unsigned __int8 *)(a1 + v14);
    int v16 = *(unsigned __int8 *)(a2 + v14);
    if (v15 == 2)
    {
      if (v16 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL v17 = (v15 & 1) == 0;
      if (v16 == 2 || ((v17 ^ v16) & 1) == 0) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_19EF7F1E4()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t URLExpression.MatchResult.raw.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB34C();
  BOOL v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t URLExpression.MatchResult.scheme.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for URLExpression.MatchResult() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for URLExpression.MatchResult()
{
  uint64_t result = qword_1E94717F0;
  if (!qword_1E94717F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t URLExpression.MatchResult.host.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for URLExpression.MatchResult() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t URLExpression.MatchResult.path.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for URLExpression.MatchResult() + 28);
  BOOL v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  *a1 = *(void *)v3;
  a1[1] = v5;
  a1[2] = v6;
  id v7 = v4;
  return swift_bridgeObjectRetain();
}

uint64_t URLExpression.MatchResult.query.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for URLExpression.MatchResult() + 32));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void URLExpression.init(schemePattern:hostPattern:pathPattern:queryPattern:)(uint64_t a1@<X6>, uint64_t a2@<X7>, void *a3@<X8>, unsigned __int8 a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t v10 = sub_19F1DCD2C();
  uint64_t v12 = sub_19F0EB8B4(v10, v11);
  if (v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    uint64_t v27 = a1;
    swift_bridgeObjectRelease();
    id v16 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
    id v17 = sub_19EF7FBBC(v14, v15, 0);
    uint64_t v18 = sub_19F1DCD2C();
    uint64_t v20 = sub_19F0EB8B4(v18, v19);
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    id v23 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
    id v24 = sub_19EF7FBBC(v20, v22, 0);
    PathExpression.init(pattern:)(v27, a2, a4, &v29);
    uint64_t v25 = v29;
    QueryExpression.init(pattern:)(a5, a6, a7, &v29);
    uint64_t v26 = v29;
    *a3 = v17;
    a3[1] = v24;
    a3[2] = v25;
    a3[3] = v26;
  }
}

uint64_t URLExpression.match(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94717D8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DB01C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)v2;
  uint64_t v13 = *(void **)(v2 + 8);
  uint64_t v15 = *(void **)(v2 + 16);
  uint64_t v14 = *(void *)(v2 + 24);
  sub_19F1DAF5C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    uint64_t v76 = v14;
    id v77 = v13;
    uint64_t v75 = a1;
    uint64_t v81 = a2;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v19 = sub_19F1DAFEC();
    if (v20) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = 0;
    }
    if (v20) {
      unint64_t v22 = v20;
    }
    else {
      unint64_t v22 = 0xE000000000000000;
    }
    uint64_t v23 = HIBYTE(v22) & 0xF;
    if ((v22 & 0x2000000000000000) == 0) {
      uint64_t v23 = v21;
    }
    uint64_t v24 = 7;
    if (((v22 >> 60) & ((v21 & 0x800000000000000) == 0)) != 0) {
      uint64_t v24 = 11;
    }
    uint64_t v25 = v24 | (v23 << 16);
    uint64_t v26 = (void *)sub_19F1DBD4C();
    uint64_t v85 = v25;
    unint64_t v82 = v21;
    unint64_t v83 = v22;
    swift_bridgeObjectRetain();
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94717E0);
    unint64_t v28 = sub_19EF7FCF8();
    unint64_t v29 = sub_19EEC4910();
    unint64_t v79 = v28;
    uint64_t v80 = v27;
    unint64_t v78 = v29;
    uint64_t v30 = sub_19F1DCA4C();
    objc_msgSend(v12, sel_rangeOfFirstMatchInString_options_range_, v26, 0, v30, v31);

    sub_19F1DC73C();
    if ((v32 & 1) == 0)
    {
      id v74 = v15;
      uint64_t v33 = sub_19F1DAF7C();
      if (v34) {
        unint64_t v35 = v33;
      }
      else {
        unint64_t v35 = 0;
      }
      if (v34) {
        unint64_t v36 = v34;
      }
      else {
        unint64_t v36 = 0xE000000000000000;
      }
      uint64_t v37 = HIBYTE(v36) & 0xF;
      if ((v36 & 0x2000000000000000) == 0) {
        uint64_t v37 = v35;
      }
      uint64_t v38 = 7;
      if (((v36 >> 60) & ((v35 & 0x800000000000000) == 0)) != 0) {
        uint64_t v38 = 11;
      }
      uint64_t v39 = v38 | (v37 << 16);
      uint64_t v40 = (void *)sub_19F1DBD4C();
      uint64_t v85 = v39;
      unint64_t v82 = v35;
      unint64_t v83 = v36;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_19F1DCA4C();
      objc_msgSend(v77, sel_rangeOfFirstMatchInString_options_range_, v40, 0, v41, v42);

      id v77 = (id)v35;
      sub_19F1DC73C();
      if ((v43 & 1) == 0)
      {
        id v74 = v74;
        uint64_t v44 = sub_19F1DAF9C();
        uint64_t v46 = v44;
        unint64_t v47 = v45;
        uint64_t v48 = HIBYTE(v45) & 0xF;
        if ((v45 & 0x2000000000000000) == 0) {
          uint64_t v48 = v44;
        }
        uint64_t v49 = 7;
        if (((v45 >> 60) & ((v44 & 0x800000000000000) == 0)) != 0) {
          uint64_t v49 = 11;
        }
        uint64_t v50 = v49 | (v48 << 16);
        uint64_t v51 = (void *)sub_19F1DBD4C();
        id v73 = v51;
        uint64_t v85 = v50;
        unint64_t v82 = v46;
        unint64_t v83 = v47;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_19F1DCA4C();
        id v53 = v74;
        id v55 = objc_msgSend(v74, sel_firstMatchInString_options_range_, v51, 0, v52, v54);

        if (v55)
        {
          uint64_t v56 = v55;
          unint64_t v79 = v46;
          uint64_t v80 = v47;
          uint64_t v85 = v76;
          swift_bridgeObjectRetain();
          uint64_t v57 = sub_19F1DAFCC();
          if (v58)
          {
            uint64_t v59 = v58;
          }
          else
          {
            uint64_t v57 = 0;
            uint64_t v59 = 0xE000000000000000;
          }
          QueryExpression.match(_:)(v57, v59, &v82);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          unint64_t v60 = v82;
          if (v82)
          {
            unint64_t v62 = v83;
            unint64_t v61 = v84;
            uint64_t v63 = sub_19F1DB34C();
            uint64_t v64 = v81;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16))(v81, v75, v63);
            uint64_t matched = (int *)type metadata accessor for URLExpression.MatchResult();
            uint64_t v66 = (uint64_t *)(v64 + matched[5]);
            *uint64_t v66 = v21;
            v66[1] = v22;
            uint64_t v67 = (void *)(v64 + matched[6]);
            *uint64_t v67 = v77;
            v67[1] = v36;
            long long v68 = (void *)(v64 + matched[7]);
            unint64_t v69 = v79;
            *long long v68 = v56;
            v68[1] = v69;
            v68[2] = v80;
            uint64_t v70 = (unint64_t *)(v64 + matched[8]);
            *uint64_t v70 = v60;
            v70[1] = v62;
            v70[2] = v61;
            return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)matched - 1) + 56))(v64, 0, 1, matched);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_37:
    uint64_t v16 = type metadata accessor for URLExpression.MatchResult();
    id v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v18 = v81;
    return v17(v18, 1, 1, v16);
  }
  sub_19EF7FC98((uint64_t)v7);
  uint64_t v16 = type metadata accessor for URLExpression.MatchResult();
  id v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = a2;
  return v17(v18, 1, 1, v16);
}

id sub_19EF7FBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_19F1DB19C();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_19EF7FC98(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94717D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_19EF7FCF8()
{
  unint64_t result = qword_1E94717E8;
  if (!qword_1E94717E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E94717E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94717E8);
  }
  return result;
}

uint64_t destroy for URLExpression(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for URLExpression(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  id v7 = v3;
  id v8 = v4;
  id v9 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for URLExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for URLExpression(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLExpression(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLExpression(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLExpression()
{
  return &type metadata for URLExpression;
}

uint64_t *initializeBufferWithCopyOfBuffer for URLExpression.MatchResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_19F1DB34C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    uint64_t v19 = (char *)a2 + v16;
    uint64_t v21 = *(void **)v19;
    uint64_t v20 = *((void *)v19 + 1);
    *uint64_t v18 = *(void *)v19;
    v18[1] = v20;
    uint64_t v18[2] = *((void *)v19 + 2);
    unint64_t v22 = (uint64_t *)((char *)a1 + v17);
    uint64_t v23 = (uint64_t *)((char *)a2 + v17);
    uint64_t v24 = v23[1];
    *unint64_t v22 = *v23;
    v22[1] = v24;
    v22[2] = v23[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for URLExpression.MatchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for URLExpression.MatchResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = a2 + v15;
  uint64_t v20 = *(void **)v18;
  uint64_t v19 = *(void *)(v18 + 8);
  *uint64_t v17 = *(void *)v18;
  v17[1] = v19;
  id v17[2] = *(void *)(v18 + 16);
  uint64_t v21 = (void *)(a1 + v16);
  unint64_t v22 = (void *)(a2 + v16);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  void v21[2] = v22[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for URLExpression.MatchResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void **)(a2 + v13);
  uint64_t v17 = *(void **)v14;
  *(void *)uint64_t v14 = v16;
  id v18 = v16;

  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for URLExpression.MatchResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(void *)(v10 + 16) = *(void *)(v11 + 16);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  return a1;
}

uint64_t assignWithTake for URLExpression.MatchResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  uint64_t v21 = *(void *)(v19 + 16);
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(void *)(v18 + 16) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  id v24 = (void *)(a2 + v22);
  *(void *)(a1 + v22) = *v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = v24[2];
  *(void *)(v23 + 8) = v24[1];
  *(void *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLExpression.MatchResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19EF8058C);
}

uint64_t sub_19EF8058C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for URLExpression.MatchResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19EF80664);
}

uint64_t sub_19EF80664(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_19F1DB34C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_19EF80724()
{
  uint64_t result = sub_19F1DB34C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t SyncEvent.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  SyncEvent.init()();
  return v0;
}

uint64_t SyncEvent.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t method lookup function for SyncEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SyncEvent);
}

uint64_t dispatch thunk of SyncEvent.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for InvalidJetPackPathError()
{
  return &type metadata for InvalidJetPackPathError;
}

uint64_t MetricsContextEnableRequirements.hash(into:)()
{
  return sub_19F1DD73C();
}

BOOL static MetricsContextEnableRequirements.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MetricsContextEnableRequirements.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19EF808F8()
{
  unint64_t result = qword_1E946DEB8;
  if (!qword_1E946DEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DEB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MetricsContextEnableRequirements(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF80A18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsContextEnableRequirements()
{
  return &type metadata for MetricsContextEnableRequirements;
}

uint64_t Models.DeepLinkDestination.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(0x6575676573, 0xE500000000000000, (uint64_t)v8);
  uint64_t v10 = v6;
  static AnyActionTypes.makeInstance(byDeserializing:using:)((uint64_t)v8, &v10, (uint64_t)v9);
  sub_19EEC3418(a1);
  sub_19EEC3418((uint64_t)v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3) {
    return sub_19EEBB420(v9, a3);
  }
  return result;
}

uint64_t Models.DeepLinkDestination.init(segue:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EEBB420(a1, a2);
}

uint64_t sub_19EF80B00()
{
  return 0x6575676573;
}

uint64_t sub_19EF80B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6575676573 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_19F1DD44C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_19EF80BA4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_19EF80BB0(uint64_t a1)
{
  unint64_t v2 = sub_19EF80E1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EF80BEC(uint64_t a1)
{
  unint64_t v2 = sub_19EF80E1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Models.DeepLinkDestination.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471800);
  uint64_t v14 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF80E1C();
  sub_19F1DD8AC();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v8 = sub_19F1DD89C();
    sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v8);
    swift_bridgeObjectRelease();
    sub_19EF80E70((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v5);
    sub_19EEBB420(v11, (uint64_t)v12);
    long long v9 = v12[1];
    *(_OWORD *)a2 = v12[0];
    *(_OWORD *)(a2 + 16) = v9;
    *(void *)(a2 + 32) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_19EF80E1C()
{
  unint64_t result = qword_1E9471808;
  if (!qword_1E9471808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471808);
  }
  return result;
}

uint64_t sub_19EF80E70@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for CodeByKind();
  sub_19F1DD1EC();
  swift_getWitnessTable();
  uint64_t result = sub_19F1DD1BC();
  if (!v1) {
    return sub_19EEBB420(&v4, a1);
  }
  return result;
}

uint64_t Models.DeepLinkDestination.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471810);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF80E1C();
  sub_19F1DD8FC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = sub_19F1DD8EC();
  sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v6);
  swift_bridgeObjectRelease();
  sub_19EF810FC(v8[1]);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_19EF810FC(uint64_t a1)
{
  sub_19EEC4154(a1, (uint64_t)v3);
  CodeByKind.init(wrappedValue:)((uint64_t)v3, (uint64_t)v4);
  sub_19F1DD2BC();
  uint64_t v1 = type metadata accessor for CodeByKind();
  swift_getWitnessTable();
  sub_19F1DD2AC();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v1 - 8) + 8))(v4, v1);
}

uint64_t Models.DeepLinkDestination.segue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC4154(v1, a1);
}

uint64_t Models.DeepLinkDestination.segue.setter(long long *a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return sub_19EEBB420(a1, v1);
}

uint64_t (*Models.DeepLinkDestination.segue.modify())()
{
  return nullsub_1;
}

uint64_t sub_19EF8127C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.DeepLinkDestination.init(from:)(a1, a2);
}

uint64_t sub_19EF81294(void *a1)
{
  return Models.DeepLinkDestination.encode(to:)(a1);
}

uint64_t sub_19EF812AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.DeepLinkDestination.init(deserializing:using:)(a1, a2, a3);
}

ValueMetadata *type metadata accessor for Models.DeepLinkDestination()
{
  return &type metadata for Models.DeepLinkDestination;
}

unsigned char *_s19DeepLinkDestinationV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19EF81370);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s19DeepLinkDestinationV10CodingKeysOMa()
{
  return &_s19DeepLinkDestinationV10CodingKeysON;
}

unint64_t sub_19EF813AC()
{
  unint64_t result = qword_1E9471818;
  if (!qword_1E9471818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471818);
  }
  return result;
}

unint64_t sub_19EF81404()
{
  unint64_t result = qword_1E9471820;
  if (!qword_1E9471820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471820);
  }
  return result;
}

unint64_t sub_19EF8145C()
{
  unint64_t result = qword_1E9471828;
  if (!qword_1E9471828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9471828);
  }
  return result;
}

unint64_t MetricsFieldsAggregator.init()@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t v3 = sub_19EEB6A28(MEMORY[0x1E4FBC860]);
  unint64_t result = sub_19EEB6A3C(v2);
  *a1 = v3;
  a1[1] = result;
  return result;
}

uint64_t sub_19EF814F8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 128);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EF81568()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 208);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Void __swiftcall MetricsFieldsAggregator.removeOptInProvider(forRequest:)(JetEngine::MetricsFieldInclusionRequest forRequest)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)forRequest.rawValue._countAndFlagsBits;
  uint64_t v4 = *(void *)(forRequest.rawValue._countAndFlagsBits + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_19EEBB074(v3, v4);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  if (v3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    uint64_t v9 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19EEBA1F4();
      uint64_t v8 = v9;
    }
    swift_bridgeObjectRelease();
    sub_19EEBB420((long long *)(*(void *)(v8 + 56) + 40 * v5), (uint64_t)v10);
    sub_19EF6C970(v5, v8);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
  }
  sub_19EEBD664((uint64_t)v10, &qword_1EB3925F8);
}

uint64_t MetricsFieldsAggregator.removingOptInProvider(forRequest:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  *a2 = v5;
  a2[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EF6B58C(v3, v4, (uint64_t)v8);
  return sub_19EEBD664((uint64_t)v8, &qword_1EB3925F8);
}

Swift::Void __swiftcall MetricsFieldsAggregator.removeOptOutProvider(forRequest:)(JetEngine::MetricsFieldExclusionRequest forRequest)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)forRequest.rawValue._countAndFlagsBits;
  uint64_t v4 = *(void *)(forRequest.rawValue._countAndFlagsBits + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_19EEBB074(v3, v4);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  if (v3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(void *)(v2 + 8);
    *(void *)(v2 + 8) = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_19EEBB628();
    }
    swift_bridgeObjectRelease();
    sub_19EEBB420((long long *)(*(void *)(v8 + 56) + 40 * v5), (uint64_t)v9);
    sub_19EF6C970(v5, v8);
    *(void *)(v2 + 8) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_19EEBD664((uint64_t)v9, &qword_1EB3925F8);
}

uint64_t MetricsFieldsAggregator.removingOptOutProvider(forRequest:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  *a2 = v5;
  a2[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EF6B560(v3, v4, (uint64_t)v8);
  return sub_19EEBD664((uint64_t)v8, &qword_1EB3925F8);
}

double MetricsFieldsAggregator.init(bag:accountProvider:device:bundle:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v9 = *a1;
  v8[3] = type metadata accessor for Unstable.Accounts();
  void v8[4] = &protocol witness table for Unstable.Accounts;
  v8[0] = a2;
  MetricsFieldsAggregator.init(bag:accountProvider:bundle:)(&v9, (uint64_t)v8, a3, &v10);
  double result = *(double *)&v10;
  *a4 = v10;
  return result;
}

double static MetricsFieldsAggregator.default.getter@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)&long long v22 = sub_19EEB6A28(MEMORY[0x1E4FBC860]);
  *((void *)&v22 + 1) = sub_19EEB6A3C(v2);
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_mainBundle);
  sub_19EEB5850(v4, 7368801, 0xE300000000000000, (uint64_t)&v22, (uint64_t)&type metadata for AppMetricsFieldProvider, (uint64_t)&protocol witness table for AppMetricsFieldProvider);

  sub_19EEB5490(0x6D6954746E657665, 0xE900000000000065, (uint64_t)&v22, (uint64_t)&type metadata for EventTimeMetricsFieldProvider, (uint64_t)&protocol witness table for EventTimeMetricsFieldProvider);
  if (qword_1EB391D80 != -1) {
    swift_once();
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_19EEB4D7C(v5, 0x7974696361706163, 0xE800000000000000, (uint64_t)&v22, (uint64_t)&type metadata for CapacityMetricsFieldsProvider, (uint64_t)&protocol witness table for CapacityMetricsFieldsProvider);
  swift_bridgeObjectRelease();
  if (qword_1E946FCF0 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1E9498B38;
  swift_bridgeObjectRetain();
  double MainScreenSize = JEGestaltGetMainScreenSize();
  double v9 = v8;
  double MainScreenScale = JEGestaltGetMainScreenScale();
  sub_19EEB6B64(v6, 0x6E6565726373, 0xE600000000000000, (uint64_t)&v22, MainScreenSize, v9, MainScreenScale);
  swift_bridgeObjectRelease();
  sub_19EEB5490(0x6E496D6574737973, 0xEA00000000006F66, (uint64_t)&v22, (uint64_t)&type metadata for SystemInfoMetricsFieldsProvider, (uint64_t)&protocol witness table for SystemInfoMetricsFieldsProvider);
  type metadata accessor for PageHistoryFieldProvider();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391D98);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 24) = 0;
  *(void *)(v12 + 16) = v2;
  *(void *)(v11 + 24) = v12;
  sub_19EEB73A0(v11, 0x7473694865676170, 0xEB0000000079726FLL, (uint64_t)&v22);
  swift_release();
  sub_19EEB5490(0x676E696C706D6173, 0xE800000000000000, (uint64_t)&v22, (uint64_t)&type metadata for XPSamplingFieldsProvider, (uint64_t)&off_1EF144F88);
  id v13 = objc_msgSend(v3, sel_mainBundle);
  id v14 = objc_msgSend(v13, sel_bundleIdentifier);

  if (v14)
  {
    uint64_t v15 = sub_19F1DBD7C();
    uint64_t v17 = v16;

    if (v15 == 0xD000000000000011 && v17 == 0x800000019F26A680)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v18 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        goto LABEL_11;
      }
    }
    uint64_t v19 = swift_bridgeObjectRetain();
    sub_19EEB4D7C(v19, 0x6E65674172657375, 0xE900000000000074, (uint64_t)&v22, (uint64_t)&type metadata for UserAgentFieldProvider, (uint64_t)&off_1EF1435A8);
    swift_bridgeObjectRelease();
  }
LABEL_11:
  sub_19EEB5AE0(1, 0x6973736572706D69, 0xEB00000000736E6FLL, &v22, (uint64_t)&type metadata for ImpressionsMetricsFieldsProvider, (uint64_t)&protocol witness table for ImpressionsMetricsFieldsProvider);
  sub_19EF8211C(0, 0x65676175676E616CLL, 0xE900000000000073, &v22);
  sub_19EEB7668(0, 0, 0x6C65694665676170, 0xEA00000000007364, &v22);
  if (qword_1EB391950 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_19EEB4D7C(v20, 0x7542746E65696C63, 0xEF65707954646C69, (uint64_t)&v22, (uint64_t)&type metadata for ClientBuildTypeFieldProvider, (uint64_t)&off_1EF1475C8);
  swift_bridgeObjectRelease();
  double result = *(double *)&v22;
  *a1 = v22;
  return result;
}

uint64_t MetricsFieldsAggregator.addOptionalProvider(_:forRequest:)(void *a1, void *a2)
{
  return sub_19EF81F4C(a1, a2, (uint64_t (*)(void *, void *, uint64_t, uint64_t, uint64_t))sub_19EEB5D68);
}

uint64_t MetricsFieldsAggregator.addingOptionalProvider(_:forRequest:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_19EE3DA1C(a1, a2, (uint64_t (*)(void *, void *, void *, uint64_t, uint64_t))sub_19EEB5D68, a3);
}

Swift::Void __swiftcall MetricsFieldsAggregator.removeOptionalProvider(forRequest:)(JetEngine::MetricsFieldInclusionRequest forRequest)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)forRequest.rawValue._countAndFlagsBits;
  uint64_t v4 = *(void *)(forRequest.rawValue._countAndFlagsBits + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_19EEBB074(v3, v4);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  if (v3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    uint64_t v9 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19EEBA1F4();
      uint64_t v8 = v9;
    }
    swift_bridgeObjectRelease();
    sub_19EEBB420((long long *)(*(void *)(v8 + 56) + 40 * v5), (uint64_t)v10);
    sub_19EF6C970(v5, v8);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
  }
  sub_19EEBD664((uint64_t)v10, &qword_1EB3925F8);
}

uint64_t MetricsFieldsAggregator.removingOptionalProvider(forRequest:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  *a2 = v5;
  a2[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EF6B58C(v3, v4, (uint64_t)v8);
  return sub_19EEBD664((uint64_t)v8, &qword_1EB3925F8);
}

uint64_t MetricsFieldsAggregator.addDefaultProvider(_:forRequest:)(void *a1, void *a2)
{
  return sub_19EF81F4C(a1, a2, (uint64_t (*)(void *, void *, uint64_t, uint64_t, uint64_t))sub_19EE3DAAC);
}

uint64_t sub_19EF81F4C(void *a1, void *a2, uint64_t (*a3)(void *, void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = a2[1];
  v10[0] = *a2;
  v10[1] = v5;
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  return a3(v8, v10, v3, v6, v7);
}

uint64_t MetricsFieldsAggregator.addingDefaultProvider(_:forRequest:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_19EE3DA1C(a1, a2, (uint64_t (*)(void *, void *, void *, uint64_t, uint64_t))sub_19EE3DAAC, a3);
}

Swift::Void __swiftcall MetricsFieldsAggregator.removeDefaultProvider(forRequest:)(JetEngine::MetricsFieldExclusionRequest forRequest)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)forRequest.rawValue._countAndFlagsBits;
  uint64_t v4 = *(void *)(forRequest.rawValue._countAndFlagsBits + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_19EEBB074(v3, v4);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  if (v3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(void *)(v2 + 8);
    *(void *)(v2 + 8) = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_19EEBB628();
    }
    swift_bridgeObjectRelease();
    sub_19EEBB420((long long *)(*(void *)(v8 + 56) + 40 * v5), (uint64_t)v9);
    sub_19EF6C970(v5, v8);
    *(void *)(v2 + 8) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_19EEBD664((uint64_t)v9, &qword_1EB3925F8);
}

uint64_t MetricsFieldsAggregator.removingDefaultProvider(forRequest:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  *a2 = v5;
  a2[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EF6B560(v3, v4, (uint64_t)v8);
  return sub_19EEBD664((uint64_t)v8, &qword_1EB3925F8);
}

uint64_t sub_19EF8211C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v29[3] = &type metadata for LanguagesMetricFieldProvider;
  v29[4] = &protocol witness table for LanguagesMetricFieldProvider;
  v29[0] = a1;
  sub_19EEC4154((uint64_t)v29, (uint64_t)&v24);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v22[0] = *a4;
  *a4 = 0x8000000000000000;
  sub_19EEB602C(&v24, a2, a3, isUniquelyReferenced_nonNull_native, (uint64_t)&v26);
  *a4 = v22[0];
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)&v27 + 1);
  sub_19EEBD664((uint64_t)&v26, &qword_1EB3925F8);
  if (v8)
  {
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v9 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
    id v11 = v9;
    uint64_t v23 = sub_19EEC3F3C(0, 33, 0, MEMORY[0x1E4FBC860]);
    v12._object = (void *)0x800000019F26A6C0;
    v12._uint64_t countAndFlagsBits = 0xD000000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    void v22[3] = &type metadata for MetricsFieldInclusionRequest;
    v22[0] = a2;
    v22[1] = a3;
    sub_19EEBCD00((uint64_t)v22, (uint64_t)v21);
    long long v24 = 0u;
    long long v25 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v21, (uint64_t)&v24);
    char v28 = 1;
    long long v26 = v24;
    long long v27 = v25;
    id v13 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
    }
    unint64_t v15 = v13[2];
    unint64_t v14 = v13[3];
    if (v15 >= v14 >> 1) {
      id v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
    }
    void v13[2] = v15 + 1;
    uint64_t v16 = &v13[5 * v15];
    long long v17 = v26;
    long long v18 = v27;
    *((unsigned char *)v16 + 64) = v28;
    *((_OWORD *)v16 + 2) = v17;
    *((_OWORD *)v16 + 3) = v18;
    uint64_t v23 = v13;
    sub_19EEBD664((uint64_t)v22, &qword_1EB393260);
    v19._uint64_t countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    *(void *)(v10 + 32) = v23;
    *(void *)&long long v26 = v11;
    LOBYTE(v24) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v24);

    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
}

uint64_t sub_19EF823C0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19EF823F8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19EF82408()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19EF82418()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_19EF82474()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t BaseObjectGraph._inject<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[4] = a4;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a3;
  uint64_t v8 = sub_19F1DCAAC();
  v5[6] = v8;
  v5[7] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v5[8] = v9;
  v5[9] = *(void *)(a3 - 8);
  v5[10] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v5[11] = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_19EF82624;
  return BaseObjectGraph._injectIfAvailable<A>(_:)(v9, a2, a3);
}

uint64_t sub_19EF82624()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19EF828E4;
  }
  else {
    uint64_t v2 = sub_19EF82738;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19EF82738()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v4 = v0[4];
    (*(void (**)(uint64_t, void))(v0[7] + 8))(v2, v0[6]);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v6 = BaseObjectGraph._downcast<A>(to:)(AssociatedTypeWitness, AssociatedTypeWitness);
    uint64_t v7 = (void *)swift_task_alloc();
    v7[2] = v3;
    v7[3] = v4;
    void v7[4] = v6;
    (*(void (**)(uint64_t (*)(), void *, uint64_t))(*(void *)v6 + 104))(sub_19EE17D5C, v7, v3);
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    uint64_t v8 = v0[10];
    uint64_t v9 = v0[2];
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
    v10(v8, v2, v3);
    v10(v9, v8, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_19EF828E4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t dispatch thunk of Injectable.init(asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_19EF8296C()
{
  return 0;
}

uint64_t Models.AdamID.init(from:)()
{
  sub_19EF83FE8();
  uint64_t v0 = sub_19F1DCBDC();
  return _s9JetEngine6ModelsO6AdamIDV8rawValueAESS_tcfC_0(v0, v1);
}

uint64_t Models.AdamID.init(from:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_description);
  uint64_t v3 = sub_19F1DBD7C();
  unint64_t v5 = v4;

  uint64_t v6 = _s9JetEngine6ModelsO6AdamIDV8rawValueAESS_tcfC_0(v3, v5);
  return v6;
}

uint64_t Models.AdamID.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t Models.AdamID.uint64.getter(unint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  uint64_t v6 = result;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v7 = (unsigned __int8 *)sub_19F1DCE2C();
      }
      unint64_t v8 = (unint64_t)sub_19EF82F98(v7, v4, 10);
      char v10 = v9 & 1;
      goto LABEL_37;
    }
    v21[0] = result;
    v21[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v3)
      {
        uint64_t v15 = v3 - 1;
        if (v15)
        {
          unint64_t v8 = 0;
          uint64_t v16 = (unsigned __int8 *)v21 + 1;
          while (1)
          {
            unsigned int v17 = *v16 - 48;
            if (v17 > 9) {
              break;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              break;
            }
            BOOL v14 = __CFADD__(10 * v8, v17);
            unint64_t v8 = 10 * v8 + v17;
            if (v14) {
              break;
            }
            char v10 = 0;
            ++v16;
            if (!--v15) {
              goto LABEL_37;
            }
          }
        }
        goto LABEL_36;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v3)
        {
          unint64_t v8 = 0;
          long long v18 = (unsigned __int8 *)v21;
          while (1)
          {
            unsigned int v19 = *v18 - 48;
            if (v19 > 9) {
              break;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              break;
            }
            BOOL v14 = __CFADD__(10 * v8, v19);
            unint64_t v8 = 10 * v8 + v19;
            if (v14) {
              break;
            }
            char v10 = 0;
            ++v18;
            if (!--v3) {
              goto LABEL_37;
            }
          }
        }
        goto LABEL_36;
      }
      if (v3)
      {
        uint64_t v11 = v3 - 1;
        if (v11)
        {
          unint64_t v8 = 0;
          uint64_t v12 = (unsigned __int8 *)v21 + 1;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              break;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              break;
            }
            BOOL v14 = 10 * v8 >= v13;
            unint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              break;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_37;
            }
          }
        }
LABEL_36:
        unint64_t v8 = 0;
        char v10 = 1;
        goto LABEL_37;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = (unint64_t)sub_19EF834A8(v6, a2, 10);
  char v10 = v20;
  swift_bridgeObjectRelease();
LABEL_37:
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

id Models.AdamID.nsNumber.getter(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = Models.AdamID.uint64.getter(a1, a2);
  if (v3) {
    return 0;
  }
  else {
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v2);
  }
}

unint64_t Models.AdamID.init(from:)(void *a1)
{
  return sub_19EF8380C(a1);
}

uint64_t Models.AdamID.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19EF82DE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = _s9JetEngine6ModelsO6AdamIDV8rawValueAESS_tcfC_0(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_19EF82E14@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_19EF82E20@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_19EF8380C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_19EF82E4C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19EF82EE4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF82F40()
{
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

unsigned __int8 *sub_19EF82F98(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  char v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_19EF83214(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_19EF8322C(a1, a2, a3);
}

unsigned __int8 *sub_19EF8322C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_19EF834A8(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_19F1DBFFC();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unsigned __int8 v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_19F02575C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unsigned __int8 v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unsigned __int8 v7 = (unsigned __int8 *)sub_19F1DCE2C();
  }
LABEL_7:
  unsigned int v11 = sub_19EF83590(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_19EF83590(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }
      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }
      if (result)
      {
        unint64_t v29 = 0;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }
            else
            {
              char v31 = -55;
            }
          }
          else
          {
            char v31 = -48;
          }
          if (!is_mul_ok(v29, a3)) {
            return 0;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }
  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  uint64_t v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }
      else
      {
        char v23 = -55;
      }
    }
    else
    {
      char v23 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0;
    }
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

unint64_t sub_19EF8380C(void *a1)
{
  uint64_t v3 = sub_19F1DCDBC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned __int8 v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (v1) {
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  uint64_t v8 = sub_19F1DD45C();
  unint64_t v7 = v8;
  unint64_t v10 = v9;
  uint64_t v11 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD86C();
    sub_19F1DCDAC();
    uint64_t v22 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v24 = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v23, v6, v3);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4FBBA78], v22);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_16;
  }
  uint64_t v38 = v4;
  unint64_t v33 = v8;
  unint64_t v34 = v9;
  uint64_t v35 = 0;
  uint64_t v36 = v11;
  uint64_t v32 = v11;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_19F1DBF3C();
  if (!v13)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD86C();
    unint64_t v33 = 0;
    unint64_t v34 = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    goto LABEL_14;
  }
  uint64_t v14 = v13;
  while (1)
  {
    if (v12 == 48 && v14 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    char v15 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      break;
    }
LABEL_9:
    uint64_t v12 = sub_19F1DBF3C();
    uint64_t v14 = v16;
    if (!v16) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v33 = v7;
  unint64_t v34 = v10;
  uint64_t v35 = 0;
  uint64_t v36 = v32;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_19F1DBF3C();
  if (!v27)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return v7;
  }
  uint64_t v28 = v26;
  uint64_t v29 = v27;
  while (2)
  {
    if (v28 == 48 && v29 == 0xE100000000000000) {
      goto LABEL_21;
    }
    if ((sub_19F1DD44C() & 1) == 0)
    {
      if (v28 == 57 && v29 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v28 = sub_19F1DBF3C();
        uint64_t v29 = v31;
        if (!v31) {
          goto LABEL_29;
        }
        continue;
      }
LABEL_21:
      char v30 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_31;
      }
      goto LABEL_22;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD86C();
  unint64_t v33 = 0;
  unint64_t v34 = 0xE000000000000000;
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  unint64_t v33 = 0xD000000000000028;
  unint64_t v34 = 0x800000019F26A810;
LABEL_14:
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F1DCDAC();
  uint64_t v17 = sub_19F1DCDCC();
  swift_allocError();
  uint64_t v19 = v18;
  uint64_t v20 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v18, v6, v3);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBA78], v17);
  swift_willThrow();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v20 + 8);
  unint64_t v7 = v20 + 8;
  v21(v6, v3);
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
LABEL_17:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

uint64_t _s9JetEngine6ModelsO6AdamIDV8rawValueAESS_tcfC_0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    sub_19F198664((unint64_t)"JetEngine/AdamID.swift", 0x16uLL, 2, 0x13uLL);
  }
  MEMORY[0x1F4188790](a1);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_19F1DBF3C();
  if (!v5)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    sub_19F1A4018((uint64_t)"JetEngine/AdamID.swift", 22, 2, 21, sub_19EF8411C);
    goto LABEL_15;
  }
  uint64_t v6 = v5;
  while (1)
  {
    if (v4 == 48 && v6 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    char v7 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      break;
    }
LABEL_9:
    uint64_t v4 = sub_19F1DBF3C();
    uint64_t v6 = v8;
    if (!v8) {
      goto LABEL_13;
    }
  }
  uint64_t v9 = swift_bridgeObjectRelease();
LABEL_15:
  MEMORY[0x1F4188790](v9);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_19F1DBF3C();
  if (!v11)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return a1;
  }
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  while (2)
  {
    if (v12 == 48 && v13 == 0xE100000000000000) {
      goto LABEL_17;
    }
    if ((sub_19F1DD44C() & 1) == 0)
    {
      if (v12 == 57 && v13 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_18:
        uint64_t v12 = sub_19F1DBF3C();
        uint64_t v13 = v15;
        if (!v15) {
          goto LABEL_25;
        }
        continue;
      }
LABEL_17:
      char v14 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_27;
      }
      goto LABEL_18;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_27:
  swift_bridgeObjectRelease();
  sub_19F1A4018((uint64_t)"JetEngine/AdamID.swift", 22, 2, 23, sub_19EF84154);
  return a1;
}

unint64_t sub_19EF83FE8()
{
  unint64_t result = qword_1E9471840;
  if (!qword_1E9471840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471840);
  }
  return result;
}

unint64_t sub_19EF84040()
{
  unint64_t result = qword_1E9471848;
  if (!qword_1E9471848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471848);
  }
  return result;
}

void *assignWithCopy for MetricsEventType(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MetricsEventType(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Models.AdamID()
{
  return &type metadata for Models.AdamID;
}

uint64_t sub_19EF8411C()
{
  return sub_19EF8296C();
}

uint64_t sub_19EF84154()
{
  return sub_19EF8296C();
}

void *static PipelinePhase<>.fetchScript(urlSession:urlEncoder:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946FC70);
  swift_allocObject();
  id v12 = a1;
  id v13 = a2;
  uint64_t v14 = sub_19EE98F80();
  type metadata accessor for JSRemoteScriptFetcher();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  *(void *)(v15 + 24) = v13;
  *(_OWORD *)(v15 + 32) = xmmword_19F24DBD0;
  *(void *)(v15 + 48) = 4;
  *(unsigned char *)(v15 + 56) = 1;
  *(void *)(v15 + 64) = v14;
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a3;
  _OWORD v16[3] = a4;
  v16[4] = a5;
  v16[5] = sub_19EF84634;
  v16[6] = v15;
  uint64_t v17 = MEMORY[0x1E4F277C0];
  return PipelinePhase.init(mapOutput:)((uint64_t)sub_19EF84674, (uint64_t)v16, a3, v17, a6);
}

uint64_t sub_19EF842B0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *(_OWORD *)(a2 + 32);
  long long v20 = *(_OWORD *)(a2 + 16);
  long long v21 = v8;
  long long v22 = *(_OWORD *)(a2 + 48);
  uint64_t v23 = *(void *)(a2 + 64);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  uint64_t v11 = (void *)*((void *)&v20 + 1);
  sub_19F07A920((uint64_t)v7, *((void **)&v20 + 1), *((uint64_t *)&v21 + 1), v22, SBYTE8(v22));
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = swift_allocObject();
  long long v13 = v21;
  long long v14 = v22;
  *(_OWORD *)(v12 + 16) = v20;
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = v14;
  *(void *)(v12 + 64) = v23;
  uint64_t v15 = (void *)v20;
  sub_19EF84904((uint64_t)&v21, (uint64_t)v24);
  id v16 = v15;
  id v17 = v11;
  sub_19EE9D054((uint64_t)v24);
  swift_retain();
  sub_19F15E684((uint64_t)sub_19EF848E0, v12);
  swift_release();
  swift_release();
  uint64_t v18 = sub_19EF8474C((uint64_t)sub_19EF84548, 0);
  swift_release();
  return v18;
}

uint64_t sub_19EF844B4(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v12[3] = a4;
  void v12[4] = a6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_2Tm, a1, a4);
  uint64_t v10 = a2(v12);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v10;
}

void sub_19EF84548(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_data);
  uint64_t v4 = sub_19F1DB40C();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_19EF845B0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JSRemoteScriptFetcher()
{
  return self;
}

uint64_t sub_19EF84634(void *a1)
{
  return sub_19EF842B0(a1, v1);
}

uint64_t sub_19EF8463C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19EF84674(uint64_t a1)
{
  return sub_19EF844B4(a1, *(uint64_t (**)(uint64_t *))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t dispatch thunk of JSSourceURLProvider.scriptURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_19EF84698(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v7 = *a1;
  a2(&v5, &v7);
  uint64_t v2 = v5;
  unint64_t v3 = v6;
  sub_19F1AE94C(v5, v6);
  return sub_19EEA072C(v2, v3);
}

uint64_t sub_19EF8474C(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = &type metadata for SyncTaskScheduler;
  long long v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946EFF0);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 0;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  void v7[4] = v4;
  v9[0] = sub_19EF849AC;
  v9[1] = v7;
  _OWORD v9[2] = sub_19EF849B8;
  v9[3] = v4;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EE24580((uint64_t)v9);
  sub_19EE24520((uint64_t)v9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19EF84890()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19EF848E0(uint64_t a1)
{
  return sub_19F07988C(a1);
}

uint64_t sub_19EF84904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF8496C()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19EF849AC(uint64_t *a1)
{
  return sub_19EF84698(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

void sub_19EF849B8(void *a1)
{
}

Swift::String __swiftcall CryptoAlgorithm.makeDigest(fromContentsOf:)(Swift::String fromContentsOf)
{
  _OWORD v9[2] = *MEMORY[0x1E4F143B8];
  MEMORY[0x1F4188790](fromContentsOf._countAndFlagsBits);
  sub_19EF84A84((uint64_t)&v9[-1] - v1, v1, v2, v3, v4, v9);
  uint64_t v5 = v9[0];
  uint64_t v6 = (void *)v9[1];
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t sub_19EF84A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  uint64_t v7 = (char *)a1;
  uint64_t result = sub_19F09BA40(a3, a4, a5 & 1, a1);
  if (a2 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = MEMORY[0x19F3C6160](2 * a2);
    if (v7 && a2)
    {
      uint64_t v10 = MEMORY[0x1E4FBC358];
      uint64_t v11 = MEMORY[0x1E4FBC3B0];
      do
      {
        char v12 = *v7++;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393160);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
        *(void *)(v13 + 56) = v10;
        *(void *)(v13 + 64) = v11;
        *(unsigned char *)(v13 + 32) = v12;
        sub_19F1DBDBC();
        sub_19F1DBEFC();
        uint64_t result = swift_bridgeObjectRelease();
        --a2;
      }
      while (a2);
    }
    *a6 = 0;
    a6[1] = 0xE000000000000000;
  }
  return result;
}

uint64_t sub_19EF84BA8(const char *a1, char a2, uint64_t a3)
{
  size_t v6 = strlen(a1);
  if ((v6 & 0x8000000000000000) != 0 || HIDWORD(v6))
  {
    uint64_t result = sub_19F1DCFBC();
    __break(1u);
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(const char *, size_t, uint64_t))MEMORY[0x1E4F14038];
    if ((a2 & 1) == 0) {
      uint64_t v7 = (uint64_t (*)(const char *, size_t, uint64_t))MEMORY[0x1E4F14028];
    }
    return v7(a1, v6, a3);
  }
  return result;
}

BOOL static CryptoAlgorithm.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CryptoAlgorithm.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t CryptoAlgorithm.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19EF84D40()
{
  unint64_t result = qword_1E9471850;
  if (!qword_1E9471850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471850);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CryptoAlgorithm(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF84E60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CryptoAlgorithm()
{
  return &type metadata for CryptoAlgorithm;
}

uint64_t dispatch thunk of JSRequestPerformer.performRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of JSRequestPerformer.performRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19EEB8A6C;
  return v11(a1, a2, a3, a4);
}

uint64_t BaseObjectGraph.buildUpon.getter@<X0>(void *a1@<X8>)
{
  a1[3] = &type metadata for StandaloneObjectGraphBuilder;
  a1[4] = &off_1EF147980;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *a1 = v1;
  a1[1] = v2;
  return swift_retain();
}

uint64_t AsyncObjectGraphBuilder.subtracting<A>(allDependenciesExcept:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v23 = a5;
  uint64_t v11 = *(void *)(a3 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  double v13 = MEMORY[0x1F4188790](a1);
  (*(void (**)(uint64_t, uint64_t, double))(v14 + 16))(v15, v14, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  id v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = a2;
  *((void *)v17 + 3) = a3;
  uint64_t v18 = v23;
  *((void *)v17 + 4) = a4;
  *((void *)v17 + 5) = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v17[v16], (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  uint64_t v19 = sub_19EF85720((uint64_t)sub_19EF8561C, (uint64_t)v17);
  swift_release();
  swift_release();
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CA0);
  a6[3] = result;
  a6[4] = (uint64_t)&off_1EF1469B0;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  *a6 = v19;
  a6[1] = v21;
  return result;
}

uint64_t *sub_19EF851B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for Promise();
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a4;
  v12[3] = a5;
  void v12[4] = a6;
  uint64_t v12[5] = a2;
  v12[6] = a3;
  v12[7] = a1;
  swift_retain();
  swift_retain();
  return Promise.__allocating_init(task:)((uint64_t)&unk_1E9471888, (uint64_t)v12);
}

uint64_t sub_19EF85260(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_19EEB8A6C;
  return v9(a1, a4);
}

uint64_t sub_19EF8534C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_19EE525A4, 0, 0);
}

uint64_t sub_19EF85370()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19EF853D4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Promise<A>.withDependenciesSatisfied.getter@<X0>(void *a1@<X8>)
{
  sub_19F0BC710();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  a1[3] = type metadata accessor for DependentObjectGraphBuilder();
  a1[4] = &off_1EF1469B0;
  *a1 = v3;
  a1[1] = v5;
  return swift_retain();
}

uint64_t sub_19EF854BC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19EF854F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = sub_19EEDEE50(a2, a3, a4);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(v6 + 32);
  swift_beginAccess();
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = v8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v7;
  return result;
}

uint64_t sub_19EF85594()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_19EF8561C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19EF854F4(a1, v2+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 24) - 8) + 80)), *(void *)(v2 + 24), *(void *)(v2 + 40), a2);
}

uint64_t sub_19EF85674(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v4 = *a1;
  a2(&v3, &v4);
  sub_19EEA7384(v3);
  return swift_release();
}

uint64_t sub_19EF85720(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = &type metadata for SyncTaskScheduler;
  double v13 = &protocol witness table for SyncTaskScheduler;
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = 0;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  void v7[4] = v4;
  v9[0] = sub_19EF85BE0;
  v9[1] = v7;
  _OWORD v9[2] = sub_19EF8599C;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EE8DE48((uint64_t)v9);
  sub_19EE8D898((uint64_t)v9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19EF8587C(uint64_t a1)
{
  return sub_19EEDCB28(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_19EF851B0);
}

uint64_t sub_19EF85894()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19EF858CC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_19EF85954()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_19EF8599C(void *a1)
{
}

uint64_t sub_19EF859A4()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19EF859E4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19EF85A2C()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_19EF85A6C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_19EE17780;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[2] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_19EEB8A6C;
  return v9(a1, v5);
}

uint64_t sub_19EF85BA0()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19EF85BE0(uint64_t *a1)
{
  return sub_19EF85674(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

uint64_t dispatch thunk of Logger.log(contentsOf:withLevel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t TaggedValue.init(_:for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1);
}

uint64_t TaggedValue.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t TaggedValue.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*TaggedValue.base.modify())()
{
  return nullsub_1;
}

uint64_t TaggedValue<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v18[6] = a3;
  uint64_t v17 = a4;
  uint64_t v16 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaggedValue();
  uint64_t v15 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v4)
  {
    uint64_t v14 = v9;
    __swift_project_boxed_opaque_existential_1(v18, v18[3]);
    sub_19F1DD49C();
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v8, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v11, v14);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t type metadata accessor for TaggedValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EF85EDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD51C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19EF85FAC(void *a1)
{
  return TaggedValue<>.encode(to:)(a1);
}

uint64_t static TaggedValue<>.== infix(_:_:)()
{
  return sub_19F1DBD3C() & 1;
}

uint64_t sub_19EF85FF4()
{
  return static TaggedValue<>.== infix(_:_:)();
}

uint64_t TaggedValue<>.hash(into:)()
{
  sub_19F1DD73C();
  return sub_19F1DBC9C();
}

uint64_t TaggedValue<>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF860C4()
{
  return TaggedValue<>.hashValue.getter();
}

uint64_t sub_19EF860CC()
{
  return TaggedValue<>.hash(into:)();
}

uint64_t sub_19EF860D4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF86128()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EF86170(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_19EF862CC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19EF864E4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

id sub_19EF8650C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = a3[1];
  uint64_t v18 = *a3;
  uint64_t v6 = a3[2];
  uint64_t v7 = a3[3];
  id v17 = *(id *)(v3 + 32);
  objc_msgSend(v17, sel_lock);
  uint64_t v8 = v3 + 16;
  swift_beginAccess();
  BOOL v9 = *(void **)(v3 + 16);
  unsigned int v10 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))v9[2];
  if (v10)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v8 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_17;
    }
    while (1)
    {
      *(void *)uint64_t v8 = v9;
      if (v9[2])
      {
        unsigned int v12 = 0;
        int v13 = (char *)v10 - 1;
        uint64_t v14 = 4;
        do
        {
          sub_19EE28C88((uint64_t)&v9[v14], (uint64_t)v24);
          sub_19EE28C88((uint64_t)v24, (uint64_t)v25);
          if (sub_19EF8675C((uint64_t)v25) != 1)
          {
            sub_19EE28C88((uint64_t)v24, (uint64_t)v23);
            sub_19EE83A30((uint64_t)v23, (uint64_t)v22);
            v21[0] = v18;
            v21[1] = v5;
            void v21[2] = v6;
            void v21[3] = v7;
            unsigned int v10 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))v22;
            if (sub_19F092B98(a1, a2, v21))
            {
              sub_19EE28C88((uint64_t)v24, (uint64_t)v22);
              sub_19EE83A8C((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EE83BD4);
              char v15 = swift_isUniquelyReferenced_nonNull_native();
              *(void *)uint64_t v8 = v9;
              if ((v15 & 1) == 0)
              {
                BOOL v9 = sub_19F16B9CC(v9);
                *(void *)uint64_t v8 = v9;
              }
              sub_19EEDE25C((uint64_t)v20);
              if ((unint64_t)v12 >= v9[2]) {
                goto LABEL_16;
              }
              sub_19EE28C88((uint64_t)&v9[v14], (uint64_t)v21);
              sub_19EE28C88((uint64_t)v20, (uint64_t)&v9[v14]);
              unsigned int v10 = sub_19EE83CD8;
              sub_19EE83A8C((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EE83CD8);
              sub_19EE83A8C((uint64_t)v24, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_19EE83CD8);
            }
          }
          if (v13 == v12) {
            goto LABEL_14;
          }
          BOOL v9 = *(void **)v8;
          ++v12;
          v14 += 50;
        }
        while ((unint64_t)v12 < *(void *)(*(void *)v8 + 16));
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      BOOL v9 = sub_19F16B9CC(v9);
    }
  }
LABEL_14:
  swift_endAccess();
  return objc_msgSend(v17, sel_unlock);
}

uint64_t sub_19EF8671C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_19EF8675C(uint64_t a1)
{
  if ((*(void *)(a1 + 48) >> 9) > 0x80000000) {
    return -(*(void *)(a1 + 48) >> 9);
  }
  else {
    return 0;
  }
}

uint64_t sub_19EF867B4()
{
  long long v9 = *(_OWORD *)(v0 + 368);
  long long v10 = *(_OWORD *)(v0 + 384);
  long long v7 = *(_OWORD *)(v0 + 336);
  long long v8 = *(_OWORD *)(v0 + 352);
  long long v5 = *(_OWORD *)(v0 + 304);
  long long v6 = *(_OWORD *)(v0 + 320);
  long long v3 = *(_OWORD *)(v0 + 272);
  long long v4 = *(_OWORD *)(v0 + 288);
  long long v2 = *(_OWORD *)(v0 + 240);
  sub_19EECA688(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160),
    *(void *)(v0 + 168),
    *(void *)(v0 + 176),
    *(void *)(v0 + 184),
    *(void *)(v0 + 192),
    *(void *)(v0 + 200),
    *(void *)(v0 + 208),
    *(void *)(v0 + 216),
    *(void *)(v0 + 224),
    *(void *)(v0 + 232),
    v2,
    *((uint64_t *)&v2 + 1),
    *(void *)(v0 + 256),
    *(void *)(v0 + 264),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((unint64_t *)&v10 + 1));
  return MEMORY[0x1F4186498](v0, 416, 7);
}

uint64_t JSIntentResult.networkPerformance.getter()
{
  type metadata accessor for JSIntentResult();
  return swift_bridgeObjectRetain();
}

char *initializeBufferWithCopyOfBuffer for JSIntentResult(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_19F1DAE7C();
    long long v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = a3[5];
    long long v10 = &a1[v9];
    int v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 24);
    if (v12)
    {
      uint64_t v13 = *((void *)v11 + 4);
      *((void *)v10 + 3) = v12;
      *((void *)v10 + 4) = v13;
      (**(void (***)(char *, char *))(v12 - 8))(v10, v11);
    }
    else
    {
      long long v15 = *((_OWORD *)v11 + 1);
      *(_OWORD *)long long v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v15;
      *((void *)v10 + 4) = *((void *)v11 + 4);
    }
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
    v8(&v10[*(int *)(v16 + 28)], &v11[*(int *)(v16 + 28)], v7);
    uint64_t v17 = a3[7];
    *(void *)&a1[a3[6]] = *(uint64_t *)((char *)a2 + a3[6]);
    *(void *)&a1[v17] = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for JSIntentResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DAE7C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 24);
  if (v11)
  {
    uint64_t v12 = *(void *)(v10 + 32);
    *(void *)(v9 + 24) = v11;
    *(void *)(v9 + 32) = v12;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v9, v10);
  }
  else
  {
    long long v13 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v13;
    *(void *)(v9 + 32) = *(void *)(v10 + 32);
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  v7(v9 + *(int *)(v14 + 28), v10 + *(int *)(v14 + 28), v6);
  uint64_t v15 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSIntentResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DAE7C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (long long *)(a2 + v8);
  uint64_t v11 = *(void *)(a2 + v8 + 24);
  if (!*(void *)(a1 + v8 + 24))
  {
    if (v11)
    {
      *(void *)(v9 + 24) = v11;
      *(void *)(v9 + 32) = *((void *)v10 + 4);
      (**(void (***)(uint64_t, long long *))(v11 - 8))(v9, v10);
      goto LABEL_8;
    }
LABEL_7:
    long long v12 = *v10;
    long long v13 = v10[1];
    *(void *)(v9 + 32) = *((void *)v10 + 4);
    *(_OWORD *)uint64_t v9 = v12;
    *(_OWORD *)(v9 + 16) = v13;
    goto LABEL_8;
  }
  if (!v11)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v9);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v9, (uint64_t *)v10);
LABEL_8:
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  v7(v9 + *(int *)(v14 + 28), (uint64_t)v10 + *(int *)(v14 + 28), v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for JSIntentResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DAE7C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(a2 + v8 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(a2 + v8 + 32);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  v7(v9 + *(int *)(v12 + 28), v10 + *(int *)(v12 + 28), v6);
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for JSIntentResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DAE7C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  if (*(void *)(a1 + v8 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + v8);
  }
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  v7(v9 + *(int *)(v12 + 28), v10 + *(int *)(v12 + 28), v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19EF86E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DAE7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_19EF86F98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_19F1DAE7C();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_19EF870AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a2 - 8) + 64);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(v4, a1);
  if (!v3)
  {
    unint64_t v7 = v6;
    uint64_t v8 = result;
    switch(v6 >> 62)
    {
      case 1uLL:
        LODWORD(v9) = HIDWORD(result) - result;
        if (__OFSUB__(HIDWORD(result), result))
        {
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x19EF87254);
        }
        uint64_t v9 = (int)v9;
LABEL_7:
        if (v9 == v4)
        {
LABEL_8:
          MEMORY[0x1F4188790](result);
          sub_19F1DB3DC();
          uint64_t result = sub_19EEA072C(v8, v7);
        }
        else
        {
LABEL_10:
          sub_19EF87378();
          swift_allocError();
          *uint64_t v13 = 1;
          swift_willThrow();
          uint64_t result = sub_19EEA072C(v8, v7);
        }
        break;
      case 2uLL:
        uint64_t v11 = *(void *)(result + 16);
        uint64_t v10 = *(void *)(result + 24);
        BOOL v12 = __OFSUB__(v10, v11);
        uint64_t v9 = v10 - v11;
        if (!v12) {
          goto LABEL_7;
        }
        goto LABEL_13;
      case 3uLL:
        if (v4) {
          goto LABEL_10;
        }
        goto LABEL_8;
      default:
        uint64_t v9 = BYTE6(v6);
        goto LABEL_7;
    }
  }
  return result;
}

uint64_t sub_19EF87264(uint64_t a1, uint64_t a2)
{
  sub_19EF875E4();
  uint64_t result = sub_19EF870AC(a1, MEMORY[0x1E4FBC450], a2);
  if (!v2) {
    return v6;
  }
  return result;
}

uint64_t sub_19EF872C4(uint64_t a1, uint64_t a2)
{
  sub_19EF87324();
  uint64_t result = sub_19EF870AC(a1, MEMORY[0x1E4FBC4C0], a2);
  if (!v2) {
    return v6;
  }
  return result;
}

unint64_t sub_19EF87324()
{
  unint64_t result = qword_1E946FE90;
  if (!qword_1E946FE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946FE90);
  }
  return result;
}

unint64_t sub_19EF87378()
{
  unint64_t result = qword_1E9471910;
  if (!qword_1E9471910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471910);
  }
  return result;
}

uint64_t sub_19EF873CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 < 1)
  {
    sub_19EF87378();
    swift_allocError();
    *uint64_t v17 = 1;
    swift_willThrow();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v9 = a2;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
    uint64_t v5 = 0;
    if (v21(a3, a4))
    {
      long long v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 32);
      uint64_t v18 = v9;
      uint64_t v19 = a4;
      do
      {
        uint64_t v11 = v20(v10, v9, a3, a4);
        if (v6) {
          break;
        }
        uint64_t v12 = v11;
        uint64_t v13 = v5;
        uint64_t v14 = a1[3];
        uint64_t v15 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v14);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v10, v12, v14, v15);
        v5 += v12;
        if (__OFADD__(v13, v12))
        {
          __break(1u);
          return result;
        }
        a4 = v19;
        uint64_t v6 = 0;
        uint64_t v9 = v18;
      }
      while ((v21(a3, v19) & 1) != 0);
    }
    MEMORY[0x19F3C9470](v10, -1, -1);
  }
  return v5;
}

uint64_t sub_19EF875A8()
{
  return sub_19F1DC0BC();
}

unint64_t sub_19EF875E4()
{
  unint64_t result = qword_1E946FE88;
  if (!qword_1E946FE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946FE88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IOStreamError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF87704);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IOStreamError()
{
  return &type metadata for IOStreamError;
}

unint64_t sub_19EF87740()
{
  unint64_t result = qword_1E9471918;
  if (!qword_1E9471918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471918);
  }
  return result;
}

id sub_19EF87794(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19F1DB57C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EF87BBC();
  uint64_t v16 = (void *)sub_19F1DC14C();
  sub_19EF87BFC(a2, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_19F1DB55C();
    sub_19EF87C64((uint64_t)v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  }
  uint64_t v17 = (void *)sub_19F1DB4DC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  id v18 = objc_msgSend(v5, sel_generateEventFieldsForKeys_date_, v16, v17);

  uint64_t v19 = sub_19F1DBB3C();
  if ((a3 & 1) == 0) {
    return (id)v19;
  }
  *(void *)&long long v30 = 0xD000000000000010;
  *((void *)&v30 + 1) = 0x800000019F26AA50;
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  sub_19F1DCC8C();
  id result = objc_msgSend(v5, sel_resetInterval);
  double v23 = v22 * 1000.0;
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v23 < 9.22337204e18)
  {
    uint64_t v31 = MEMORY[0x1E4FBC1C8];
    *(void *)&long long v30 = (uint64_t)v23;
    sub_19EEBDC00(&v30, v29);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = v19;
    sub_19EFBBD70(v29, (uint64_t)v32, isUniquelyReferenced_nonNull_native);
    uint64_t v25 = v28;
    swift_bridgeObjectRelease();
    sub_19EE7760C((uint64_t)v32);
    *(void *)&long long v30 = 0xD000000000000010;
    *((void *)&v30 + 1) = 0x800000019F26AA70;
    sub_19F1DCC8C();
    uint64_t v31 = v20;
    *(void *)&long long v30 = 0x656369766564;
    *((void *)&v30 + 1) = 0xE600000000000000;
    sub_19EEBDC00(&v30, v29);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = v25;
    sub_19EFBBD70(v29, (uint64_t)v32, v26);
    uint64_t v19 = v28;
    swift_bridgeObjectRelease();
    sub_19EE7760C((uint64_t)v32);
    if (a4)
    {
      *(void *)&long long v30 = 0xD000000000000011;
      *((void *)&v30 + 1) = 0x800000019F26AA90;
      sub_19F1DCC8C();
      uint64_t v31 = v20;
      strcpy((char *)&v30, "synchronized");
      BYTE13(v30) = 0;
      HIWORD(v30) = -5120;
      sub_19EEBDC00(&v30, v29);
      char v27 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v28 = v19;
      sub_19EFBBD70(v29, (uint64_t)v32, v27);
      uint64_t v19 = v28;
      swift_bridgeObjectRelease();
      sub_19EE7760C((uint64_t)v32);
    }
    return (id)v19;
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_19EF87BBC()
{
  unint64_t result = qword_1E946E1F8;
  if (!qword_1E946E1F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E946E1F8);
  }
  return result;
}

uint64_t sub_19EF87BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF87C64(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t JetPackAMSRemoteStreamSource.init(url:urlSessionConfiguration:urlRequestEncoder:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_19F1DB34C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v18 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4, a1, v8);
  uint64_t v10 = (int *)type metadata accessor for JetPackAMSRemoteStreamSource();
  *(void *)(a4 + v10[5]) = a2;
  *(void *)(a4 + v10[6]) = a3;
  type metadata accessor for BaseObjectGraph();
  id v11 = a2;
  id v12 = a3;
  uint64_t v13 = static BaseObjectGraph.current.getter();
  uint64_t v14 = sub_19F1DB9CC();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  swift_retain();
  swift_task_localValuePush();
  uint64_t v15 = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_19EF29A10(v14, v15);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();

  swift_release();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v18, v8);
  *(void *)(a4 + v10[7]) = v16;
  return result;
}

uint64_t type metadata accessor for JetPackAMSRemoteStreamSource()
{
  uint64_t result = qword_1E946F0C0;
  if (!qword_1E946F0C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t JetPackAMSRemoteStreamSource.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

id JetPackAMSRemoteStreamSource.urlSessionConfiguration.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for JetPackAMSRemoteStreamSource() + 20));
  return v1;
}

id JetPackAMSRemoteStreamSource.urlRequestEncoder.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for JetPackAMSRemoteStreamSource() + 24));
  return v1;
}

uint64_t JetPackAMSRemoteStreamSource.makeStream()()
{
  uint64_t v1 = sub_19F1DBA0C();
  uint64_t v46 = *(void *)(v1 - 8);
  uint64_t v47 = v1;
  MEMORY[0x1F4188790](v1);
  unint64_t v45 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for JetPackAMSRemoteStreamSource();
  uint64_t v4 = v3 - 8;
  uint64_t v41 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v42 = v5;
  uint64_t v43 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v0;
  id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE88]), sel_initWithConfiguration_, *(void *)(v0 + *(int *)(v4 + 28)));
  type metadata accessor for BaseObjectGraph();
  uint64_t v14 = static BaseObjectGraph.current.getter();
  uint64_t v15 = sub_19F1DB9CC();
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v50[0] = v14;
  swift_retain();
  swift_task_localValuePush();
  uint64_t v16 = *(void *)(v14 + 16);
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_19EF29A10(v15, v16);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v40(v12, v13, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v12, v9);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921F8);
  uint64_t v17 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 16) = 0;
  id v17[2] = v18;
  sub_19EF89380((uint64_t)v8, (uint64_t)v17 + *(void *)(*v17 + 96));
  uint64_t v19 = v43;
  sub_19EF893E8(v13, v43);
  unint64_t v20 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  unint64_t v21 = (v42 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  double v23 = v44;
  *(void *)(v22 + 16) = v44;
  sub_19EF89570(v19, v22 + v20);
  *(void *)(v22 + v21) = v39;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_19EF895D4;
  *(void *)(v24 + 24) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAC8);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v17;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946F158);
  char v26 = (void *)swift_allocObject();
  _OWORD v26[2] = v25;
  v26[3] = sub_19EF8975C;
  v26[4] = v24;
  v40(v12, v13, v9);
  sub_19EF8A5D4((unint64_t *)&qword_1EB392868, MEMORY[0x1E4F276F0]);
  id v27 = v23;
  swift_retain();
  sub_19F1DCC8C();
  sub_19EEA5F34();
  uint64_t v29 = v45;
  uint64_t v28 = v46;
  uint64_t v30 = v47;
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v45, *MEMORY[0x1E4FBCB48], v47);
  uint64_t v31 = (void *)sub_19F1DC8BC();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  sub_19EE77E34((uint64_t)v50, (uint64_t)v48);
  type metadata accessor for PersistentPipelineBackoff();
  uint64_t v32 = swift_allocObject();
  long long v33 = v48[1];
  *(_OWORD *)(v32 + 16) = v48[0];
  *(_OWORD *)(v32 + 32) = v33;
  *(void *)(v32 + 48) = v49;
  *(void *)(v32 + 56) = sub_19EF88B14;
  *(void *)(v32 + 64) = 0;
  swift_retain();
  id v34 = v31;
  sub_19EE7760C((uint64_t)v50);
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946F2F0);
  *(void *)(swift_allocObject() + 16) = v26;
  uint64_t v35 = (void *)MEMORY[0x19F3C8390]();
  uint64_t v36 = swift_retain();
  uint64_t v37 = sub_19EF89AB8(v36, v32, v34);
  swift_release();

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return v37;
}

uint64_t sub_19EF885B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void **)(a3 + *(int *)(type metadata accessor for JetPackAMSRemoteStreamSource() + 24));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946FC70);
  swift_allocObject();
  swift_retain();
  id v28 = a2;
  id v8 = v7;
  uint64_t v9 = sub_19EE992B8();
  char v37 = 1;
  if (qword_1EB392AA8 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_1EB392860;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_19F24EAD0;
  id v12 = v10;
  uint64_t v36 = sub_19EEC3F3C(0, 27, 0, MEMORY[0x1E4FBC860]);
  v13._object = (void *)0x800000019F26AAB0;
  v13._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  uint64_t v14 = sub_19F1DB34C();
  v35[3] = v14;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v35);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(boxed_opaque_existential_2Tm, a1, v14);
  sub_19EEBCD00((uint64_t)v35, (uint64_t)v31);
  long long v29 = 0u;
  long long v30 = 0u;
  sub_19EEC3E70((uint64_t)v31, (uint64_t)&v29);
  char v34 = 0;
  long long v32 = v29;
  long long v33 = v30;
  uint64_t v16 = v36;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_19EEC3F3C(0, v16[2] + 1, 1, v16);
  }
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    uint64_t v16 = sub_19EEC3F3C((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  void v16[2] = v18 + 1;
  uint64_t v19 = &v16[5 * v18];
  long long v20 = v32;
  long long v21 = v33;
  *((unsigned char *)v19 + 64) = v34;
  *((_OWORD *)v19 + 2) = v20;
  *((_OWORD *)v19 + 3) = v21;
  uint64_t v36 = v16;
  sub_19EEBD664((uint64_t)v35, &qword_1EB393260);
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  *(void *)(v11 + 32) = v36;
  *(void *)&long long v32 = v12;
  LOBYTE(v29) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v29);

  swift_bridgeObjectRelease();
  sub_19F07A920(a1, v8, 0, 4, 1);
  sub_19EFF86B8((uint64_t)sub_19EF88984, 0);
  swift_release();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v28;
  *(void *)(v23 + 24) = v8;
  *(void *)(v23 + 32) = a4;
  *(_OWORD *)(v23 + 40) = xmmword_19F251910;
  *(unsigned char *)(v23 + 56) = v37;
  *(_DWORD *)(v23 + 57) = v32;
  *(_DWORD *)(v23 + 60) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(v23 + 64) = v9;
  id v24 = v28;
  id v25 = v8;
  swift_retain();
  swift_retain();
  sub_19F15E684((uint64_t)sub_19EF848E0, v23);
  swift_release();
  uint64_t v26 = sub_19EF89970((uint64_t)sub_19EF88A64, 0);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v26;
}

uint64_t sub_19EF88984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_19F1DACDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  sub_19F1DACCC();
  sub_19F1DAC7C();
  sub_19F1DBD7C();
  sub_19F1DACCC();
  return swift_bridgeObjectRelease();
}

void sub_19EF88A64(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_data);
  uint64_t v4 = sub_19F1DB40C();
  unint64_t v6 = v5;

  id v7 = objc_allocWithZone(MEMORY[0x1E4F71968]);
  id v8 = (void *)sub_19F1DB3EC();
  id v9 = objc_msgSend(v7, sel_initWithData_, v8);
  sub_19EEA072C(v4, v6);

  *a2 = v9;
}

uint64_t sub_19EF88B14()
{
  type metadata accessor for JitterPipelineBackoff();
  uint64_t v0 = swift_allocObject();
  type metadata accessor for ExponentialPipelineBackoff();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 40) = 0;
  *(_OWORD *)(v1 + 16) = xmmword_19F251920;
  *(void *)(v1 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(void *)(v1 + 40) = 0;
  *(void *)(v0 + 16) = v1;
  return v0;
}

id static JetPackAMSRemoteStreamSource.defaultURLEncoder(forContentsOf:using:from:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE68]), sel_initWithBag_, *a2);
  objc_msgSend(v10, sel_setIncludeClientVersions_, 0);
  objc_msgSend(v10, sel_setAnisetteType_, 0);
  objc_msgSend(v10, sel_setMescalType_, 0);
  objc_msgSend(v10, sel_setAccount_, 0);
  objc_msgSend(v10, sel_setRequestEncoding_, 1);
  objc_msgSend(v10, sel_setDialogOptions_, 1);
  objc_msgSend(v10, sel_setClientInfo_, a3);
  objc_msgSend(v10, sel_setDisableResponseDecoding_, 1);
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  uint64_t v11 = (unsigned char *)(qword_1EB391C90 + 16);
  id v12 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v12);
  sub_19EEC4E5C(v11, &v18);
  os_unfair_lock_unlock(v12);
  int v13 = v18;
  swift_release();
  if (v13 == 2) {
    int has_internal_content = os_variant_has_internal_content();
  }
  else {
    int has_internal_content = v13 & 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (has_internal_content)
  {
    char v15 = sub_19F1DB1CC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v15) {
      objc_msgSend(v10, sel_setUrlKnownToBeTrusted_, 1);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v10;
}

uint64_t sub_19EF88E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v1, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
  return v4(a1, 0, 1, v3);
}

uint64_t sub_19EF88F0C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C780);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1E946DB58 != -1) {
    uint64_t v2 = swift_once();
  }
  unint64_t v5 = *(os_unfair_lock_s **)(qword_1E9498948 + 16);
  MEMORY[0x1F4188790](v2);
  *(void *)&v9[-16] = v0;
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_19EF8A558(v4);
  os_unfair_lock_unlock(v5 + 6);
  swift_release();
  uint64_t v6 = &v4[*(int *)(v1 + 48)];
  uint64_t v7 = sub_19F1DB34C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_19EF8907C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1E946DB58 != -1) {
    uint64_t v2 = swift_once();
  }
  unint64_t v5 = *(os_unfair_lock_s **)(qword_1E9498948 + 16);
  MEMORY[0x1F4188790](v2);
  *(void *)&v7[-16] = v0;
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_19EF8A524((uint64_t)v4);
  os_unfair_lock_unlock(v5 + 6);
  swift_release();
  return sub_19EEBD664((uint64_t)v4, (uint64_t *)&unk_1EB392E50);
}

uint64_t sub_19EF891B4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_19EF89244@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_19EF577FC(a1, a2);
}

uint64_t sub_19EF89274@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t)&a2[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E946C780) + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t result = sub_19F042CA8(v8, v7);
  *a2 = result & 1;
  return result;
}

uint64_t sub_19EF89380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF893E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JetPackAMSRemoteStreamSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF8944C()
{
  uint64_t v1 = (int *)(type metadata accessor for JetPackAMSRemoteStreamSource() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

uint64_t sub_19EF89570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JetPackAMSRemoteStreamSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF895D4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for JetPackAMSRemoteStreamSource() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_19EF885B8(a1, *(void **)(v1 + 16), v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_19EF89670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(**(void **)a1 + 88))();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_retain();
  uint64_t v6 = sub_19EF89764((uint64_t)sub_19EF8A61C, v5);
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_19EF89724()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19EF8975C(uint64_t a1)
{
  return sub_19EF89670(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19EF89764(uint64_t a1, uint64_t a2)
{
  int v13 = &type metadata for SyncTaskScheduler;
  uint64_t v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C80);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = 0;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  void v7[4] = v4;
  sub_19EEBB420(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19EF8A66C;
  v9[1] = v7;
  _OWORD v9[2] = sub_19EF8A67C;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF53B38((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, &qword_1E946FC00);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

void sub_19EF898C4(uint64_t *a1, void (*a2)(void **__return_ptr, uint64_t *))
{
  uint64_t v4 = *a1;
  a2(&v3, &v4);
  id v2 = v3;
  sub_19F1AEBF4(v3);
}

uint64_t sub_19EF89970(uint64_t a1, uint64_t a2)
{
  id v12 = &type metadata for SyncTaskScheduler;
  int v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C80);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = 0;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  void v7[4] = v4;
  v9[0] = sub_19EF8A714;
  v9[1] = v7;
  _OWORD v9[2] = sub_19EF8A67C;
  void v9[3] = v4;
  sub_19EEC4154((uint64_t)v11, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EE24580((uint64_t)v9);
  sub_19EEBD664((uint64_t)v9, (uint64_t *)&unk_1EB3918A0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19EF89AB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v28 = a1;
  long long v29 = a3;
  uint64_t v30 = sub_19F1DB9FC();
  uint64_t v33 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_19F1DBA3C();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DBA5C();
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v25 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C80);
  uint64_t v16 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(v16 + 16) = v17;
  *(void *)(v16 + 24) = v18;
  *(unsigned char *)(v16 + 32) = 0;
  type metadata accessor for PersistentPipelineBackoff();
  double v19 = sub_19F1C6AAC();
  sub_19F1DBA4C();
  MEMORY[0x19F3C5D70](v12, v19);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v12, v9);
  long long v20 = (void *)swift_allocObject();
  long long v21 = v29;
  v20[2] = v28;
  long long v20[3] = a2;
  void v20[4] = &off_1EF145828;
  v20[5] = v16;
  v20[6] = v21;
  aBlock[4] = sub_19EF8A5C4;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_7;
  Swift::String v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v21;
  sub_19F1DBA1C();
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_19EF8A5D4(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  uint64_t v23 = v30;
  sub_19F1DCC1C();
  MEMORY[0x19F3C6B40](v15, v8, v5, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
  v26(v15, v27);
  swift_release();
  return v16;
}

uint64_t *initializeBufferWithCopyOfBuffer for JetPackAMSRemoteStreamSource(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_19F1DB34C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)v4 + v8) = (uint64_t)v10;
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = (uint64_t)v11;
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    id v12 = v10;
    id v13 = v11;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  return swift_release();
}

uint64_t initializeWithCopy for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  id v11 = v9;
  id v12 = v10;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  id v12 = *(void **)(a2 + v11);
  id v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[6];
  id v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19EF8A2F0);
}

uint64_t sub_19EF8A2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19EF8A3C4);
}

uint64_t sub_19EF8A3C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_19F1DB34C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_19EF8A480()
{
  uint64_t result = sub_19F1DB34C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19EF8A524@<X0>(uint64_t a1@<X8>)
{
  return sub_19EF577FC(*(void *)(v1 + 16), a1);
}

uint64_t sub_19EF8A558@<X0>(unsigned char *a1@<X8>)
{
  return sub_19EF89274(*(void *)(v1 + 16), a1);
}

uint64_t sub_19EF8A574()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19EF8A5C4()
{
  return sub_19F0DD23C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_19EF8A5D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19EF8A61C(uint64_t a1)
{
  return sub_19EF891B4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_19EF8A624()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19EF8A66C(uint64_t a1)
{
  return sub_19F15F1BC(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

void sub_19EF8A67C(void *a1)
{
}

uint64_t sub_19EF8A684()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19EF8A6D4()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_19EF8A714(uint64_t *a1)
{
  sub_19EF898C4(a1, *(void (**)(void **__return_ptr, uint64_t *))(v1 + 16));
}

uint64_t static NilState.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_19EF8A730()
{
  return 0;
}

uint64_t sub_19EF8A73C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_19EF8A76C(uint64_t a1)
{
  unint64_t v2 = sub_19EF8A8F4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EF8A7A8(uint64_t a1)
{
  unint64_t v2 = sub_19EF8A8F4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t NilState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471920);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF8A8F4();
  sub_19F1DD8FC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_19EF8A8F4()
{
  unint64_t result = qword_1E9471928;
  if (!qword_1E9471928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471928);
  }
  return result;
}

uint64_t NilState.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

unint64_t sub_19EF8A970(uint64_t a1)
{
  unint64_t result = sub_19EF8A998();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_19EF8A998()
{
  unint64_t result = qword_1E946C8D8;
  if (!qword_1E946C8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C8D8);
  }
  return result;
}

uint64_t sub_19EF8A9EC(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_19EF8AA14(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471920);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF8A8F4();
  sub_19F1DD8FC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t dispatch thunk of Stateful.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for NilState()
{
  return &type metadata for NilState;
}

ValueMetadata *type metadata accessor for NilState.CodingKeys()
{
  return &type metadata for NilState.CodingKeys;
}

unint64_t sub_19EF8AB5C()
{
  unint64_t result = qword_1E9471930;
  if (!qword_1E9471930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471930);
  }
  return result;
}

unint64_t sub_19EF8ABB4()
{
  unint64_t result = qword_1E9471938;
  if (!qword_1E9471938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471938);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultLocalizerFormattingStringsDataSource()
{
  return &type metadata for DefaultLocalizerFormattingStringsDataSource;
}

unint64_t sub_19EF8AC1C(uint64_t a1)
{
  unint64_t v2 = 0x2E6F6741656D6954;
  uint64_t v3 = sub_19F1DB6CC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for LocalizerFormattingKey();
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EF8AFC8(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v12, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    int v13 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
    if (v13 == *MEMORY[0x1E4F27C20])
    {
LABEL_3:
      unint64_t v2 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      return v2;
    }
    if (v13 == *MEMORY[0x1E4F27C30])
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      return 0xD000000000000011;
    }
    if (v13 == *MEMORY[0x1E4F27BF0]) {
      goto LABEL_7;
    }
    if (v13 == *MEMORY[0x1E4F27C10]) {
      goto LABEL_3;
    }
    if (v13 == *MEMORY[0x1E4F27C48])
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      return 0xD000000000000012;
    }
    if (v13 == *MEMORY[0x1E4F27C50])
    {
LABEL_7:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      return v2;
    }
    id v14 = *(void (**)(char *, uint64_t))(v4 + 8);
    if (v13 == *MEMORY[0x1E4F27BC0]) {
      unint64_t v2 = 0xD000000000000010;
    }
    else {
      v14(v6, v3);
    }
    v14(v9, v3);
  }
  return v2;
}

uint64_t sub_19EF8AFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalizerFormattingKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_19EF8B02C(char a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = CGColorGetColorSpace(v1);
  if (v4 && (uint64_t v5 = v4, Model = CGColorSpaceGetModel(v4), v5, Model == kCGColorSpaceModelRGB))
  {
    CGColorRef CopyByMatchingToColorSpace = v2;
  }
  else
  {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    CGColorRef CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(DeviceRGB, kCGRenderingIntentDefault, v2, 0);

    if (!CopyByMatchingToColorSpace) {
      return;
    }
  }
  uint64_t v9 = sub_19F1DC75C();

  if (v9)
  {
    unint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      double v11 = *(double *)(v9 + 32) * 255.0;
      if ((~*(void *)&v11 & 0x7FF0000000000000) != 0)
      {
        if (v11 > -1.0)
        {
          if (v11 < 256.0)
          {
            if (v10 >= 2)
            {
              double v12 = *(double *)(v9 + 40) * 255.0;
              if ((~*(void *)&v12 & 0x7FF0000000000000) != 0)
              {
                if (v12 > -1.0)
                {
                  if (v12 < 256.0)
                  {
                    if (v10 >= 3)
                    {
                      double v13 = *(double *)(v9 + 48);
                      swift_bridgeObjectRelease();
                      double v14 = v13 * 255.0;
                      if ((~COERCE__INT64(v13 * 255.0) & 0x7FF0000000000000) != 0)
                      {
                        if (v14 > -1.0)
                        {
                          if (v14 < 256.0)
                          {
                            int v15 = (int)v11;
                            int v16 = (int)v12;
                            int v17 = (int)v14;
                            if ((a1 & 1) == 0)
                            {
                              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393160);
                              uint64_t v23 = swift_allocObject();
                              uint64_t v24 = MEMORY[0x1E4FBC358];
                              *(_OWORD *)(v23 + 16) = xmmword_19F24DBC0;
                              uint64_t v25 = MEMORY[0x1E4FBC3B0];
                              *(void *)(v23 + 56) = v24;
                              *(void *)(v23 + 64) = v25;
                              *(unsigned char *)(v23 + 32) = v15;
                              *(void *)(v23 + 96) = v24;
                              *(void *)(v23 + 104) = v25;
                              *(unsigned char *)(v23 + 72) = v16;
                              *(void *)(v23 + 136) = v24;
                              *(void *)(v23 + 144) = v25;
                              *(unsigned char *)(v23 + 112) = v17;
                              goto LABEL_25;
                            }
                            double v18 = CGColorGetAlpha(v2) * 255.0;
                            if ((~*(void *)&v18 & 0x7FF0000000000000) != 0)
                            {
                              if (v18 > -1.0)
                              {
                                if (v18 < 256.0)
                                {
                                  int v19 = (int)v18;
                                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393160);
                                  uint64_t v20 = swift_allocObject();
                                  *(_OWORD *)(v20 + 16) = xmmword_19F251B70;
                                  uint64_t v21 = MEMORY[0x1E4FBC358];
                                  uint64_t v22 = MEMORY[0x1E4FBC3B0];
                                  *(void *)(v20 + 56) = MEMORY[0x1E4FBC358];
                                  *(void *)(v20 + 64) = v22;
                                  *(unsigned char *)(v20 + 32) = v15;
                                  *(void *)(v20 + 96) = v21;
                                  *(void *)(v20 + 104) = v22;
                                  *(unsigned char *)(v20 + 72) = v16;
                                  *(void *)(v20 + 136) = v21;
                                  *(void *)(v20 + 144) = v22;
                                  *(unsigned char *)(v20 + 112) = v17;
                                  *(void *)(v20 + 176) = v21;
                                  *(void *)(v20 + 184) = v22;
                                  *(unsigned char *)(v20 + 152) = v19;
LABEL_25:
                                  sub_19F1DBDBC();
                                  return;
                                }
                                goto LABEL_40;
                              }
LABEL_39:
                              __break(1u);
LABEL_40:
                              __break(1u);
                              return;
                            }
LABEL_38:
                            __break(1u);
                            goto LABEL_39;
                          }
LABEL_37:
                          __break(1u);
                          goto LABEL_38;
                        }
LABEL_36:
                        __break(1u);
                        goto LABEL_37;
                      }
LABEL_35:
                      __break(1u);
                      goto LABEL_36;
                    }
LABEL_34:
                    __break(1u);
                    goto LABEL_35;
                  }
LABEL_33:
                  __break(1u);
                  goto LABEL_34;
                }
LABEL_32:
                __break(1u);
                goto LABEL_33;
              }
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
}

uint64_t URL.withCacheBuster.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v69 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_19F1DB5AC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19F1DAEFC();
  *(void *)&long long v71 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  double v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v70 = (char *)&v63 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94717D8);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_19F1DB01C();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  *(void *)&long long v72 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_19F1DB1CC())
  {
    uint64_t v20 = sub_19F1DB34C();
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    return v21(a1, v1, v20);
  }
  else
  {
    sub_19F1DAF5C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      uint64_t v23 = v1;
      uint64_t v24 = a1;
      sub_19EEBD664((uint64_t)v16, &qword_1E94717D8);
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v25 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_19F24EB80;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v27 = swift_allocObject();
      long long v72 = xmmword_19F24EAD0;
      uint64_t v28 = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)(v27 + 16) = xmmword_19F24EAD0;
      uint64_t v78 = v28;
      uint64_t v76 = 0xD00000000000002BLL;
      unint64_t v77 = 0x800000019F26AB90;
      long long v74 = 0u;
      long long v75 = 0u;
      id v29 = v25;
      sub_19EEC3E70((uint64_t)&v76, (uint64_t)&v74);
      *(unsigned char *)(v27 + 64) = 0;
      long long v30 = v75;
      *(_OWORD *)(v27 + 32) = v74;
      *(_OWORD *)(v27 + 48) = v30;
      *(void *)(v26 + 32) = v27;
      uint64_t v31 = sub_19F1DB34C();
      uint64_t v78 = v31;
      uint64_t v32 = __swift_allocate_boxed_opaque_existential_2Tm(&v76);
      uint64_t v33 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
      v33(v32, v1, v31);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v72;
      sub_19EEBCD00((uint64_t)&v76, (uint64_t)v73);
      long long v74 = 0u;
      long long v75 = 0u;
      sub_19EEC3E70((uint64_t)v73, (uint64_t)&v74);
      *(unsigned char *)(v34 + 64) = 2;
      long long v35 = v75;
      *(_OWORD *)(v34 + 32) = v74;
      *(_OWORD *)(v34 + 48) = v35;
      *(void *)(v26 + 40) = v34;
      sub_19EEBD664((uint64_t)&v76, &qword_1EB393260);
      *(void *)&long long v74 = v29;
      LOBYTE(v76) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v26, (JetEngine::LogMessageLevel)&v76);

      swift_bridgeObjectRelease();
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v33)(v24, v23, v31);
    }
    else
    {
      uint64_t v68 = v9;
      uint64_t v64 = v1;
      uint64_t v66 = a1;
      uint64_t v67 = v18;
      uint64_t v36 = *(void (**)(void))(v18 + 32);
      uint64_t v65 = v17;
      uint64_t v37 = v72;
      v36();
      sub_19F1DBD7C();
      sub_19F1DB59C();
      sub_19F1DB58C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v38 = v70;
      sub_19F1DAECC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = sub_19F1DAF3C();
      if (v39)
      {
        unint64_t v40 = v39;
        uint64_t v41 = v71;
        uint64_t v42 = v68;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v11, v38, v68);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v40 = sub_19F09D610(0, *(void *)(v40 + 16) + 1, 1, v40);
        }
        unint64_t v44 = *(void *)(v40 + 16);
        unint64_t v43 = *(void *)(v40 + 24);
        uint64_t v45 = v65;
        if (v44 >= v43 >> 1) {
          unint64_t v40 = sub_19F09D610(v43 > 1, v44 + 1, 1, v40);
        }
        *(void *)(v40 + 16) = v44 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v40+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v44, v11, v42);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473DA0);
        uint64_t v41 = v71;
        unint64_t v46 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = xmmword_19F24EAD0;
        uint64_t v42 = v68;
        (*(void (**)(unint64_t, char *, uint64_t))(v41 + 16))(v47 + v46, v38, v68);
        uint64_t v45 = v65;
      }
      uint64_t v48 = (uint64_t)v69;
      sub_19F1DAF4C();
      sub_19F1DAF6C();
      uint64_t v49 = sub_19F1DB34C();
      uint64_t v50 = *(void *)(v49 - 8);
      int v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49);
      uint64_t v52 = v67;
      if (v51 == 1)
      {
        sub_19EEBD664(v48, (uint64_t *)&unk_1EB392E50);
        if (qword_1E946F668 != -1) {
          swift_once();
        }
        id v53 = (void *)qword_1E946F658;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
        uint64_t v54 = swift_allocObject();
        *(_OWORD *)(v54 + 16) = xmmword_19F24EB80;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
        uint64_t v55 = swift_allocObject();
        long long v71 = xmmword_19F24EAD0;
        *(_OWORD *)(v55 + 16) = xmmword_19F24EAD0;
        uint64_t v78 = MEMORY[0x1E4FBB1A0];
        uint64_t v76 = 0xD00000000000002CLL;
        unint64_t v77 = 0x800000019F26ABC0;
        long long v74 = 0u;
        long long v75 = 0u;
        id v56 = v53;
        sub_19EEC3E70((uint64_t)&v76, (uint64_t)&v74);
        *(unsigned char *)(v55 + 64) = 0;
        long long v57 = v75;
        *(_OWORD *)(v55 + 32) = v74;
        *(_OWORD *)(v55 + 48) = v57;
        *(void *)(v54 + 32) = v55;
        uint64_t v78 = v49;
        uint64_t v58 = __swift_allocate_boxed_opaque_existential_2Tm(&v76);
        uint64_t v59 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v50 + 16);
        uint64_t v60 = v64;
        v59(v58, v64, v49);
        uint64_t v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = v71;
        sub_19EEBCD00((uint64_t)&v76, (uint64_t)v73);
        long long v74 = 0u;
        long long v75 = 0u;
        sub_19EEC3E70((uint64_t)v73, (uint64_t)&v74);
        *(unsigned char *)(v61 + 64) = 2;
        long long v62 = v75;
        *(_OWORD *)(v61 + 32) = v74;
        *(_OWORD *)(v61 + 48) = v62;
        *(void *)(v54 + 40) = v61;
        sub_19EEBD664((uint64_t)&v76, &qword_1EB393260);
        *(void *)&long long v74 = v56;
        LOBYTE(v76) = 0;
        OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v54, (JetEngine::LogMessageLevel)&v76);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v68);
        (*(void (**)(void, uint64_t))(v67 + 8))(v72, v45);
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v59)(v66, v60, v49);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v42);
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v37, v45);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v66, v48, v49);
      }
    }
  }
}

uint64_t sub_19EF8BCF4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F740);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

JetEngine::ActionMetrics __swiftcall ActionMetrics.init(data:custom:)(Swift::OpaquePointer data, JetEngine::ScalarDictionary custom)
{
  uint64_t v3 = *(void **)custom.values._rawValue;
  v2->_rawValue = data._rawValue;
  v2[1]._rawValue = v3;
  result.custom = custom;
  result.data = data;
  return result;
}

void static ActionMetrics.notInstrumented.getter(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC868];
  *a1 = MEMORY[0x1E4FBC860];
  a1[1] = v1;
}

uint64_t ActionMetrics.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ActionMetrics.data.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*ActionMetrics.data.modify())()
{
  return nullsub_1;
}

uint64_t ActionMetrics.custom.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t ActionMetrics.custom.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v2;
  return result;
}

uint64_t (*ActionMetrics.custom.modify())()
{
  return nullsub_1;
}

JetEngine::ActionMetrics __swiftcall ActionMetrics.mergingWith(_:)(JetEngine::ActionMetrics a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = *((void *)a1.data._rawValue + 1);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_19EF5D420(v6);
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_19EF5D420(v7);
  uint64_t v8 = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = v5;
  sub_19EF8C75C(v4, (uint64_t)sub_19EF6E4D4, 0, isUniquelyReferenced_nonNull_native, &v14);
  uint64_t v10 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v11 = (void *)swift_bridgeObjectRelease();
  *uint64_t v3 = v8;
  v3[1] = v10;
  result.custom.values._rawValue = v12;
  result.data._rawValue = v11;
  return result;
}

void *sub_19EF8BF20(uint64_t a1, uint64_t a2)
{
  return ActionMetrics.mergingWith(_:)(*(JetEngine::ActionMetrics *)&a1).data._rawValue;
}

uint64_t sub_19EF8BF48(char *a1, char *a2)
{
  return sub_19F03B538(*a1, *a2);
}

uint64_t sub_19EF8BF54()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF8BFCC()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EF8C030()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EF8C0A4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_19EF8C104(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1635017060;
  if (*v1) {
    uint64_t v2 = 0x6D6F74737563;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19EF8C138()
{
  if (*v0) {
    return 0x6D6F74737563;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_19EF8C168@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_19EF8C1CC(uint64_t a1)
{
  unint64_t v2 = sub_19EF8CA88();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EF8C208(uint64_t a1)
{
  unint64_t v2 = sub_19EF8CA88();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActionMetrics.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471940);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF8CA88();
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v14) = 0;
  if (sub_19F1DD1DC())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471960);
    char v13 = 0;
    sub_19EF8CB18(&qword_1E9471968, &qword_1E9471960, (void (*)(void))sub_19EF8CADC);
    sub_19F1DD1BC();
    uint64_t v10 = v14;
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  LOBYTE(v14) = 1;
  if (sub_19F1DD1DC())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471950);
    char v13 = 1;
    sub_19EF8CC68(&qword_1E9471958);
    sub_19F1DD1BC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v11 = v14;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v11 = MEMORY[0x1E4FBC868];
  }
  *a2 = v10;
  a2[1] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ActionMetrics.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471988);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EF8CA88();
  sub_19F1DD8FC();
  uint64_t v12 = v8;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471960);
  sub_19EF8CB18(&qword_1E9471990, &qword_1E9471960, (void (*)(void))sub_19EF8CBD8);
  sub_19F1DD2AC();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471950);
    sub_19EF8CC68(&qword_1E94719A8);
    sub_19F1DD2AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19EF8C72C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ActionMetrics.init(from:)(a1, a2);
}

uint64_t sub_19EF8C744(void *a1)
{
  return ActionMetrics.encode(to:)(a1);
}

uint64_t sub_19EF8C75C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v57 = a1;
  uint64_t v58 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v59 = v8;
  uint64_t v60 = 0;
  uint64_t v61 = v11 & v9;
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19EFCA2A4((uint64_t)&v52);
  uint64_t v12 = v53;
  if (!v53)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    return swift_release();
  }
  uint64_t v13 = v52;
  uint64_t v14 = v54;
  uint64_t v51 = v55;
  char v15 = v56;
  int v16 = (void *)*a5;
  unint64_t v18 = sub_19EEBD400(v52, v53);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v22 = v17;
  if (v16[3] >= v21)
  {
    if (a4)
    {
      uint64_t v25 = (void *)*a5;
      if ((v17 & 1) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_19EFBE0CC();
      uint64_t v25 = (void *)*a5;
      if ((v22 & 1) == 0) {
        goto LABEL_14;
      }
    }
    goto LABEL_12;
  }
  sub_19EFB8C5C(v21, a4 & 1);
  unint64_t v23 = sub_19EEBD400(v13, v12);
  if ((v22 & 1) == (v24 & 1))
  {
    unint64_t v18 = v23;
    uint64_t v25 = (void *)*a5;
    if ((v22 & 1) == 0)
    {
LABEL_14:
      v25[(v18 >> 6) + 8] |= 1 << v18;
      uint64_t v27 = (uint64_t *)(v25[6] + 16 * v18);
      *uint64_t v27 = v13;
      v27[1] = v12;
      uint64_t v28 = v25[7] + 24 * v18;
      *(void *)uint64_t v28 = v14;
      *(void *)(v28 + 8) = v51;
      *(unsigned char *)(v28 + 16) = v15;
      uint64_t v29 = v25[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (!v30)
      {
        _OWORD v25[2] = v31;
        while (1)
        {
          sub_19EFCA2A4((uint64_t)&v52);
          uint64_t v36 = v53;
          if (!v53) {
            goto LABEL_26;
          }
          uint64_t v37 = v52;
          uint64_t v38 = v54;
          uint64_t v39 = v55;
          char v15 = v56;
          unint64_t v40 = (void *)*a5;
          unint64_t v42 = sub_19EEBD400(v52, v53);
          uint64_t v43 = v40[2];
          BOOL v44 = (v41 & 1) == 0;
          uint64_t v45 = v43 + v44;
          if (__OFADD__(v43, v44)) {
            goto LABEL_27;
          }
          char v46 = v41;
          if (v40[3] < v45)
          {
            sub_19EFB8C5C(v45, 1);
            unint64_t v47 = sub_19EEBD400(v37, v36);
            if ((v46 & 1) != (v48 & 1)) {
              goto LABEL_29;
            }
            unint64_t v42 = v47;
          }
          uint64_t v49 = (void *)*a5;
          if (v46)
          {
            swift_bridgeObjectRelease();
            uint64_t v26 = v49[7] + 24 * v42;
            sub_19EECA83C(*(void *)v26, *(void *)(v26 + 8), *(unsigned char *)(v26 + 16));
            *(void *)uint64_t v26 = v38;
            *(void *)(v26 + 8) = v39;
LABEL_16:
            *(unsigned char *)(v26 + 16) = v15;
          }
          else
          {
            v49[(v42 >> 6) + 8] |= 1 << v42;
            uint64_t v32 = (uint64_t *)(v49[6] + 16 * v42);
            *uint64_t v32 = v37;
            v32[1] = v36;
            uint64_t v33 = v49[7] + 24 * v42;
            *(void *)uint64_t v33 = v38;
            *(void *)(v33 + 8) = v39;
            *(unsigned char *)(v33 + 16) = v15;
            uint64_t v34 = v49[2];
            BOOL v30 = __OFADD__(v34, 1);
            uint64_t v35 = v34 + 1;
            if (v30) {
              goto LABEL_28;
            }
            id v49[2] = v35;
          }
        }
      }
      goto LABEL_28;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v26 = v25[7] + 24 * v18;
    sub_19EECA83C(*(void *)v26, *(void *)(v26 + 8), *(unsigned char *)(v26 + 16));
    *(void *)uint64_t v26 = v14;
    *(void *)(v26 + 8) = v51;
    goto LABEL_16;
  }
LABEL_29:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

unint64_t sub_19EF8CA88()
{
  unint64_t result = qword_1E9471948;
  if (!qword_1E9471948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471948);
  }
  return result;
}

uint64_t sub_19EF8CADC()
{
  return sub_19EF8CB18(&qword_1E9471970, &qword_1E9471978, (void (*)(void))sub_19EF8CB84);
}

uint64_t sub_19EF8CB18(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19EF8CB84()
{
  unint64_t result = qword_1E9471980;
  if (!qword_1E9471980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471980);
  }
  return result;
}

uint64_t sub_19EF8CBD8()
{
  return sub_19EF8CB18(&qword_1E9471998, &qword_1E9471978, (void (*)(void))sub_19EF8CC14);
}

unint64_t sub_19EF8CC14()
{
  unint64_t result = qword_1E94719A0;
  if (!qword_1E94719A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94719A0);
  }
  return result;
}

uint64_t sub_19EF8CC68(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9471950);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActionMetrics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF8CD98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionMetrics.CodingKeys()
{
  return &type metadata for ActionMetrics.CodingKeys;
}

unint64_t sub_19EF8CDD4()
{
  unint64_t result = qword_1E94719B0;
  if (!qword_1E94719B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94719B0);
  }
  return result;
}

unint64_t sub_19EF8CE2C()
{
  unint64_t result = qword_1E94719B8;
  if (!qword_1E94719B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94719B8);
  }
  return result;
}

unint64_t sub_19EF8CE84()
{
  unint64_t result = qword_1E94719C0;
  if (!qword_1E94719C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94719C0);
  }
  return result;
}

uint64_t static Continuous._unwrapOnlyElement<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v7 = type metadata accessor for _AsyncJust();
  uint64_t v8 = sub_19F1DCAAC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v27 - v14;
  double v17 = MEMORY[0x1F4188790](v16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16))((char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3, v17);
  uint64_t v20 = type metadata accessor for Continuous();
  if (swift_dynamicCast())
  {
    v32[0] = v29;
    v32[1] = v30;
    uint64_t v33 = v31;
    Continuous.base.getter((uint64_t *)&v29);
    (*(void (**)(_OWORD *, uint64_t))(*(void *)(v20 - 8) + 8))(v32, v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94719C8);
    char v21 = swift_dynamicCast();
    char v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v23 = v28;
    if (v21)
    {
      v22(v11, 0, 1, v7);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, v7);
      uint64_t v24 = *(void *)(a2 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v23, v15, a2);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v23, 0, 1, a2);
    }
    v22(v11, 1, 1, v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v26 = sub_19F1DCAAC();
    long long v29 = 0u;
    long long v30 = 0u;
    uint64_t v31 = 0;
    (*(void (**)(long long *, uint64_t))(*(void *)(v26 - 8) + 8))(&v29, v26);
    uint64_t v23 = v28;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v23, 1, 1, a2);
}

uint64_t type metadata accessor for Continuous()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Continuous.AsyncIterator.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_19EF8D2E8, 0, 0);
}

uint64_t sub_19EF8D2E8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[4] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19EF8D3A8;
  uint64_t v6 = v0[2];
  return MEMORY[0x1F4187C78](v6, v2, v4);
}

uint64_t sub_19EF8D3A8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19EF8D49C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_19EEB8A6C;
  return MEMORY[0x1F4188298](sub_19EF8D2E8, 0, 0);
}

uint64_t sub_19EF8D548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_19EF8D628;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_19EF8D628()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t Continuous.init<A>(contentsOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  a3[3] = type metadata accessor for _BoxedAsyncSequence();
  a3[4] = swift_getWitnessTable();
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a3);
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v7(boxed_opaque_existential_2Tm, a1, a2);
}

uint64_t Continuous.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for _AsyncJust();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  _AsyncJust.init(_:)(a1, a2, (uint64_t)&v12 - v8);
  swift_getWitnessTable();
  a3[3] = type metadata accessor for _BoxedAsyncSequence();
  a3[4] = swift_getWitnessTable();
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a3);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_2Tm, v9, v6);
}

uint64_t Continuous.init(_:makeElement:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v8 = sub_19F1DC4CC();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v17[-v9];
  uint64_t v11 = sub_19F1DC54C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v17[-v13];
  uint64_t v18 = a3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  sub_19EF8E1B0((uint64_t)v10);
  sub_19F1DC55C();
  swift_release();
  swift_getWitnessTable();
  a4[3] = type metadata accessor for _BoxedAsyncSequence();
  a4[4] = swift_getWitnessTable();
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a4);
  return (*(uint64_t (**)(uint64_t *, unsigned char *, uint64_t))(v12 + 32))(boxed_opaque_existential_2Tm, v14, v11);
}

uint64_t sub_19EF8DAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v8 = sub_19F1DC4FC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_19F1DC37C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  double v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = 0;
  *((void *)v17 + 3) = 0;
  *((void *)v17 + 4) = a4;
  *((void *)v17 + 5) = a2;
  *((void *)v17 + 6) = a3;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v17[v16], v11, v8);
  swift_retain();
  sub_19EEAED68((uint64_t)v14, (uint64_t)&unk_1E9471B70, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_19EF8DCFC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[4] = a6;
  v7[5] = a7;
  v7[6] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v10 = sub_19F1DC4BC();
  void v7[7] = v10;
  v7[8] = *(void *)(v10 - 8);
  v7[9] = swift_task_alloc();
  v7[10] = *(void *)(a7 - 8);
  v7[11] = swift_task_alloc();
  uint64_t v11 = swift_task_alloc();
  v7[12] = v11;
  uint64_t v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v12 = (void *)swift_task_alloc();
  v7[13] = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_19EF8DEC4;
  return v14(v11);
}

uint64_t sub_19EF8DEC4()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19EF8E10C;
  }
  else {
    uint64_t v2 = sub_19EF8DFD8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19EF8DFD8()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[5];
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 16))(v0[11], v1, v6);
  sub_19F1DC4FC();
  sub_19F1DC4DC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  v0[3] = 0;
  sub_19F1DC4EC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_19EF8E10C()
{
  v0[2] = v0[14];
  sub_19F1DC4FC();
  sub_19F1DC4EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_19EF8E1B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBD120];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v3 = sub_19F1DC4CC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t Continuous._containsSingleElement.getter()
{
  uint64_t v0 = type metadata accessor for _AsyncJust();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7[-1] - v2;
  Continuous.base.getter(v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94719C8);
  uint64_t v4 = swift_dynamicCast();
  if (v4) {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v4;
}

uint64_t Continuous.base.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 40);
  a1[3] = swift_getAssociatedTypeWitness();
  a1[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_2Tm(a1);
  return v5(v3, v4);
}

uint64_t type metadata accessor for _BoxedAsyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EF8E40C(uint64_t a1)
{
  return sub_19EF8DAF8(a1, v1[3], v1[4], v1[2]);
}

uint64_t Continuous.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v4 + 56))(v6, v3, v4);
  return sub_19EEBB420(v6, a1);
}

uint64_t Continuous.description.getter()
{
  return 0;
}

uint64_t sub_19EF8E4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Continuous.makeAsyncIterator()(a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t Continuous._isEqual(to:)(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v3, v4) & 1;
}

uint64_t Continuous<A>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v14 = a3;
  uint64_t v15 = a2;
  uint64_t v5 = type metadata accessor for _AsyncJust();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v3)
  {
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    v16[6] = v15;
    swift_getWitnessTable();
    sub_19F1DD49C();
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    swift_getWitnessTable();
    Continuous.init<A>(contentsOf:)((uint64_t)v8, v5, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19EF8E794@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return Continuous<A>.init(from:)(a1, *(void *)(a2 - 8), a3);
}

uint64_t Continuous<A>.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a3;
  uint64_t v4 = type metadata accessor for _AsyncJust();
  uint64_t v5 = sub_19F1DCAAC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v22 - v11;
  Continuous.base.getter(v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94719C8);
  int v13 = swift_dynamicCast();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v13)
  {
    v14(v8, 0, 1, v4);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v8, v4);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8DC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    uint64_t v28 = v23;
    swift_getWitnessTable();
    sub_19F1DD51C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v4);
  }
  else
  {
    v14(v8, 1, 1, v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = sub_19F1DCDFC();
    swift_allocError();
    double v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568);
    Continuous.base.getter(v26);
    uint64_t v18 = v27;
    uint64_t v19 = __swift_project_boxed_opaque_existential_1(v26, v27);
    v17[3] = v18;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v17);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(boxed_opaque_existential_2Tm, v19, v18);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8BC();
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBAA0], v15);
    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
}

uint64_t sub_19EF8EBC8(void *a1, uint64_t a2, uint64_t a3)
{
  return Continuous<A>.encode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t static IntentOutcome.satisfied<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v8 + 16))(v7, v5);
  return Continuous.init(_:)((uint64_t)v7, a2, a3);
}

{
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  double v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v8 + 16))(v7, v5);
  return Continuous.init<A>(contentsOf:)((uint64_t)v7, a2, a3);
}

uint64_t StaticIntent.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  Continuous.init(_:)(a1, a2, v6);
  uint64_t v4 = type metadata accessor for Continuous();
  return StaticIntent.init(_:)((uint64_t)v6, v4, a3);
}

{
  uint64_t v6;
  uint64_t v8[5];

  swift_getAssociatedTypeWitness();
  Continuous.init<A>(contentsOf:)(a1, a2, v8);
  uint64_t v6 = type metadata accessor for Continuous();
  return StaticIntent.init(_:)((uint64_t)v8, v6, a3);
}

uint64_t sub_19EF8EE64()
{
  return MEMORY[0x1E4FBC0F0];
}

uint64_t sub_19EF8EE70()
{
  return swift_getWitnessTable();
}

uint64_t sub_19EF8EE98(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t type metadata accessor for Continuous.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EF8EEEC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_19EF8F048(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19EF8F260);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_19EF8F288(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unsigned int v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *unsigned int v5 = v1;
  v5[1] = sub_19EE17780;
  return MEMORY[0x1F4187C78](a1, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_19EF8F388(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_19EE17780;
  return sub_19EF8F288(a1);
}

uint64_t sub_19EF8F430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  unsigned int v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *unsigned int v12 = v6;
  v12[1] = sub_19EF902AC;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_19EF8F510(void *a1, uint64_t a2)
{
  id v11[3] = a2;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, v2, a2);
  uint64_t v6 = a1[3];
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, v6);
  v10[3] = v6;
  size_t v8 = __swift_allocate_boxed_opaque_existential_2Tm(v10);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v8, v7, v6);
  LOBYTE(v6) = _isStructurallyEqual(_:to:with:at:)(v11, v10, 3uLL, 0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v6 & 1;
}

uint64_t sub_19EF8F5FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  double v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unsigned int v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, v2, v4, v10);
  sub_19F1DC4AC();
  a2[3] = type metadata accessor for _BoxedAsyncSequence._BoxedAsyncIterator();
  a2[4] = swift_getWitnessTable();
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a2);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v9 + 32))(boxed_opaque_existential_2Tm, v12, AssociatedTypeWitness);
}

uint64_t sub_19EF8F7C4()
{
  return 0;
}

uint64_t sub_19EF8F808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t type metadata accessor for _BoxedAsyncSequence._BoxedAsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EF8F860()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v1 = sub_19F1DC4FC();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19EF8F954(uint64_t a1)
{
  uint64_t v4 = v1[4];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391C20);
  uint64_t v5 = *(void *)(sub_19F1DC4FC() - 8);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  size_t v8 = (int *)v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_19EEB8A6C;
  return sub_19EF8DCFC(a1, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_19EF8FA80()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19EF8FB20(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_19EF8FBFC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_19EF8FC78(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19EF8FCF0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19EF8FD68(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19EF8FDE0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19EF8FE58(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        uint64_t v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_19EF90008(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x19EF90244);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t sub_19EF9026C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

JetEngine::ImpressionsMetricsFieldsProvider __swiftcall ImpressionsMetricsFieldsProvider.init(impressionsTrackerFormat:)(JetEngine::ImpressionsMetricsFieldsProvider impressionsTrackerFormat)
{
  unsigned char *v1 = *(unsigned char *)impressionsTrackerFormat.impressionsTrackerFormat;
  return impressionsTrackerFormat;
}

void ImpressionsMetricsFieldsProvider.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void ImpressionsMetricsFieldsProvider.addMetricsFields(into:using:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = sub_19F1DB57C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  size_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  uint64_t v10 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_19EF91884(0xD000000000000026, 0x800000019F26AC20, v9);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (!v11)
  {
    swift_bridgeObjectRetain();
    sub_19EE729D0(0xD000000000000026, 0x800000019F26AC50, v9, (char *)&v42);
    swift_bridgeObjectRelease();
    if (!(_BYTE)v42)
    {
      if (qword_1E946E750 != -1) {
        swift_once();
      }
      if ((byte_1E946D1C8 & 1) == 0)
      {
        sub_19F198020((unint64_t)"JetEngine/ImpressionsMetricsFieldsProvider.swift", 0x30uLL, 2, 0x24uLL);
        return;
      }
    }
    swift_bridgeObjectRetain();
    sub_19EE729D0(0xD000000000000026, 0x800000019F26AC50, v9, (char *)&v42);
    swift_bridgeObjectRelease();
    if (v42 == 1)
    {
      if (qword_1EB393168 != -1) {
        swift_once();
      }
      unint64_t v25 = (void *)qword_1EB393080;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_19F24EB80;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v27 = swift_allocObject();
      long long v41 = xmmword_19F24EAD0;
      uint64_t v28 = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)(v27 + 16) = xmmword_19F24EAD0;
      uint64_t v46 = v28;
      unint64_t v44 = 0xD000000000000055;
      unint64_t v45 = 0x800000019F26AD10;
      long long v42 = 0u;
      long long v43 = 0u;
      id v29 = v25;
      sub_19EEC3E70((uint64_t)&v44, (uint64_t)&v42);
      *(unsigned char *)(v27 + 64) = 0;
      long long v30 = v43;
      *(_OWORD *)(v27 + 32) = v42;
      *(_OWORD *)(v27 + 48) = v30;
      *(void *)(v26 + 32) = v27;
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v41;
      uint64_t v46 = v28;
      unint64_t v44 = 0xD000000000000043;
      unint64_t v45 = 0x800000019F26AD70;
      long long v42 = 0u;
      long long v43 = 0u;
      sub_19EEC3E70((uint64_t)&v44, (uint64_t)&v42);
      *(unsigned char *)(v31 + 64) = 0;
      long long v32 = v43;
      *(_OWORD *)(v31 + 32) = v42;
      *(_OWORD *)(v31 + 48) = v32;
      *(void *)(v26 + 40) = v31;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_19EE729D0(0xD000000000000026, 0x800000019F26AC50, v9, (char *)&v42);
      swift_bridgeObjectRelease();
      if (v42 != 2) {
        return;
      }
      if (qword_1EB393168 != -1) {
        swift_once();
      }
      uint64_t v33 = (void *)qword_1EB393080;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v26 = swift_allocObject();
      long long v41 = xmmword_19F24EAD0;
      *(_OWORD *)(v26 + 16) = xmmword_19F24EAD0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)(v34 + 16) = v41;
      uint64_t v46 = v35;
      unint64_t v44 = 0xD000000000000087;
      unint64_t v45 = 0x800000019F26AC80;
      long long v42 = 0u;
      long long v43 = 0u;
      id v29 = v33;
      sub_19EEC3E70((uint64_t)&v44, (uint64_t)&v42);
      *(unsigned char *)(v34 + 64) = 0;
      long long v36 = v43;
      *(_OWORD *)(v34 + 32) = v42;
      *(_OWORD *)(v34 + 48) = v36;
      *(void *)(v26 + 32) = v34;
    }
    *(void *)&long long v42 = v29;
    LOBYTE(v44) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v26, (JetEngine::LogMessageLevel)&v44);

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t ObjectType = swift_getObjectType();
  LOBYTE(v44) = v10;
  sub_19F1DB56C();
  (*(void (**)(long long *__return_ptr, unint64_t *, char *, uint64_t, uint64_t))(v13 + 64))(&v42, &v44, v8, ObjectType, v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v47 = *((void *)&v42 + 1);
  uint64_t v15 = v42;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
  *((void *)&v43 + 1) = v16;
  *(void *)&long long v42 = v15;
  uint64_t v40 = v10;
  uint64_t v18 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v18);
  uint64_t v19 = *(void (**)(long long *, uint64_t, unint64_t, uint64_t, uint64_t))(v17 + 16);
  swift_bridgeObjectRetain();
  uint64_t v20 = v41;
  v19(&v42, 0x6973736572706D69, 0xEB00000000736E6FLL, v18, v17);
  if (v20) {
    goto LABEL_4;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v42);
  *((void *)&v43 + 1) = v16;
  *(void *)&long long v41 = 0;
  *(void *)&long long v42 = v47;
  uint64_t v21 = *(void *)(a1 + 24);
  uint64_t v22 = *(void *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v21);
  uint64_t v23 = *(void (**)(long long *, uint64_t, unint64_t, uint64_t, uint64_t))(v22 + 16);
  swift_bridgeObjectRetain();
  uint64_t v24 = v41;
  v23(&v42, 0x4363696D616E7964, 0xEE007365676E6168, v21, v22);
  if (v24)
  {
LABEL_4:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v42);
    *((void *)&v43 + 1) = MEMORY[0x1E4FBB550];
    *(void *)&long long v42 = v40 + 3;
    uint64_t v37 = *(void *)(a1 + 24);
    uint64_t v38 = *(void *)(a1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(a1, v37);
    (*(void (**)(long long *, uint64_t, unint64_t, uint64_t, uint64_t))(v38 + 16))(&v42, 0x726556746E657665, 0xEC0000006E6F6973, v37, v38);
    swift_unknownObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v42);
}

uint64_t sub_19EF90958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D098);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a3 + 16))
  {
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_19EEBD400(a1, a2);
  if ((v12 & 1) == 0)
  {
    long long v38 = 0u;
    long long v39 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v11, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  if (!*((void *)&v39 + 1))
  {
LABEL_9:
    sub_19EEBD664((uint64_t)&v38, &qword_1EB393260);
    uint64_t v19 = sub_19F1DB5AC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a4, 1, 1, v19);
  }
  sub_19EEBDC00(&v38, v43);
  sub_19EEBDBA4((uint64_t)v43, (uint64_t)&v38);
  uint64_t v13 = sub_19F1DB5AC();
  char v14 = swift_dynamicCast();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  if ((v14 & 1) == 0)
  {
    v15(v10, 1, 1, v13);
    goto LABEL_11;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  v15(v10, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v13) == 1)
  {
LABEL_11:
    sub_19EEBD664((uint64_t)v10, &qword_1E946D098);
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v21 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_19F24EB80;
    id v23 = v21;
    long long v42 = sub_19EEC3F3C(0, 27, 0, MEMORY[0x1E4FBC860]);
    v24._object = (void *)0x800000019F26AE00;
    v24._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    v41[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471C58);
    v41[0] = a1;
    v41[1] = a2;
    sub_19EEBCD00((uint64_t)v41, (uint64_t)v37);
    long long v36 = 0u;
    long long v35 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v37, (uint64_t)&v35);
    char v40 = 1;
    long long v38 = v35;
    long long v39 = v36;
    unint64_t v25 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_19EEC3F3C(0, v25[2] + 1, 1, v25);
    }
    unint64_t v27 = v25[2];
    unint64_t v26 = v25[3];
    if (v27 >= v26 >> 1) {
      unint64_t v25 = sub_19EEC3F3C((void *)(v26 > 1), v27 + 1, 1, v25);
    }
    _OWORD v25[2] = v27 + 1;
    uint64_t v28 = &v25[5 * v27];
    long long v29 = v38;
    long long v30 = v39;
    *((unsigned char *)v28 + 64) = v40;
    *((_OWORD *)v28 + 2) = v29;
    *((_OWORD *)v28 + 3) = v30;
    long long v42 = v25;
    sub_19EEBD664((uint64_t)v41, &qword_1EB393260);
    v31._uint64_t countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    *(void *)(v22 + 32) = v42;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v32 + 16) = xmmword_19F24EAD0;
    *((void *)&v36 + 1) = v33;
    *(void *)&long long v35 = 0xD000000000000027;
    *((void *)&v35 + 1) = 0x800000019F26AE20;
    long long v38 = 0u;
    long long v39 = 0u;
    sub_19EEC3E70((uint64_t)&v35, (uint64_t)&v38);
    *(unsigned char *)(v32 + 64) = 0;
    long long v34 = v39;
    *(_OWORD *)(v32 + 32) = v38;
    *(_OWORD *)(v32 + 48) = v34;
    *(void *)(v22 + 40) = v32;
    *(void *)&long long v38 = v23;
    LOBYTE(v35) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v22, (JetEngine::LogMessageLevel)&v35);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
    uint64_t v17 = a4;
    uint64_t v18 = 1;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v17, v18, 1, v13);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a4, v10, v13);
  uint64_t v17 = a4;
  uint64_t v18 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v17, v18, 1, v13);
}

uint64_t sub_19EF90E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v26 = 0u;
    long long v27 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EEBD400(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v26 = 0u;
    long long v27 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  if (!*((void *)&v27 + 1))
  {
LABEL_8:
    sub_19EEBD664((uint64_t)&v26, &qword_1EB393260);
    return 0;
  }
  sub_19EEBDC00(&v26, v31);
  sub_19EEBDBA4((uint64_t)v31, (uint64_t)&v26);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return v23;
  }
  else
  {
    if (qword_1EB393168 != -1) {
      swift_once();
    }
    uint64_t v9 = (void *)qword_1EB393080;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_19F24EB80;
    id v11 = v9;
    long long v30 = sub_19EEC3F3C(0, 27, 0, MEMORY[0x1E4FBC860]);
    v12._object = (void *)0x800000019F26AE00;
    v12._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471C10);
    v29[0] = a1;
    v29[1] = a2;
    sub_19EEBCD00((uint64_t)v29, (uint64_t)v25);
    long long v23 = 0u;
    long long v24 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
    char v28 = 1;
    long long v26 = v23;
    long long v27 = v24;
    uint64_t v13 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
    }
    unint64_t v15 = v13[2];
    unint64_t v14 = v13[3];
    if (v15 >= v14 >> 1) {
      uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
    }
    void v13[2] = v15 + 1;
    uint64_t v16 = &v13[5 * v15];
    long long v17 = v26;
    long long v18 = v27;
    *((unsigned char *)v16 + 64) = v28;
    *((_OWORD *)v16 + 2) = v17;
    *((_OWORD *)v16 + 3) = v18;
    long long v30 = v13;
    sub_19EEBD664((uint64_t)v29, &qword_1EB393260);
    v19._uint64_t countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    *(void *)(v10 + 32) = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v20 + 16) = xmmword_19F24EAD0;
    *((void *)&v24 + 1) = v21;
    *(void *)&long long v23 = 0xD000000000000027;
    *((void *)&v23 + 1) = 0x800000019F26AE20;
    long long v26 = 0u;
    long long v27 = 0u;
    sub_19EEC3E70((uint64_t)&v23, (uint64_t)&v26);
    *(unsigned char *)(v20 + 64) = 0;
    long long v22 = v27;
    *(_OWORD *)(v20 + 32) = v26;
    *(_OWORD *)(v20 + 48) = v22;
    *(void *)(v10 + 40) = v20;
    *(void *)&long long v26 = v11;
    LOBYTE(v23) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return 0;
  }
}

uint64_t sub_19EF911A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v26 = 0u;
    long long v27 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EEBD400(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v26 = 0u;
    long long v27 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  if (!*((void *)&v27 + 1))
  {
LABEL_9:
    sub_19EEBD664((uint64_t)&v26, &qword_1EB393260);
    return 2;
  }
  sub_19EEBDC00(&v26, v31);
  sub_19EEBDBA4((uint64_t)v31, (uint64_t)&v26);
  if (swift_dynamicCast() && v23 != 2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return v23;
  }
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EB80;
  id v11 = v9;
  long long v30 = sub_19EEC3F3C(0, 27, 0, MEMORY[0x1E4FBC860]);
  v12._object = (void *)0x800000019F26AE00;
  v12._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471C28);
  v29[0] = a1;
  v29[1] = a2;
  sub_19EEBCD00((uint64_t)v29, (uint64_t)v25);
  long long v23 = 0u;
  long long v24 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
  char v28 = 1;
  long long v26 = v23;
  long long v27 = v24;
  uint64_t v13 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  void v13[2] = v15 + 1;
  uint64_t v16 = &v13[5 * v15];
  long long v17 = v26;
  long long v18 = v27;
  *((unsigned char *)v16 + 64) = v28;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  long long v30 = v13;
  sub_19EEBD664((uint64_t)v29, &qword_1EB393260);
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(void *)(v10 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v20 + 16) = xmmword_19F24EAD0;
  *((void *)&v24 + 1) = v21;
  *(void *)&long long v23 = 0xD000000000000027;
  *((void *)&v23 + 1) = 0x800000019F26AE20;
  long long v26 = 0u;
  long long v27 = 0u;
  sub_19EEC3E70((uint64_t)&v23, (uint64_t)&v26);
  *(unsigned char *)(v20 + 64) = 0;
  long long v22 = v27;
  *(_OWORD *)(v20 + 32) = v26;
  *(_OWORD *)(v20 + 48) = v22;
  *(void *)(v10 + 40) = v20;
  *(void *)&long long v26 = v11;
  LOBYTE(v23) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return 2;
}

double sub_19EF91500@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (!*(void *)(a3 + 16))
  {
    long long v31 = 0u;
    long long v32 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a1, a2);
  if ((v9 & 1) == 0)
  {
    long long v31 = 0u;
    long long v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v8, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_8:
    sub_19EEBD664((uint64_t)&v31, &qword_1EB393260);
    goto LABEL_9;
  }
  sub_19EEBDC00(&v31, v34);
  sub_19EEBDBA4((uint64_t)v34, (uint64_t)&v26);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    long long v10 = v32;
    *a4 = v31;
    a4[1] = v10;
    double result = *(double *)&v33;
    a4[2] = v33;
    return result;
  }
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  Swift::String v12 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_19F24EB80;
  id v14 = v12;
  long long v30 = sub_19EEC3F3C(0, 27, 0, MEMORY[0x1E4FBC860]);
  v15._object = (void *)0x800000019F26AE00;
  v15._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471C50);
  v29[0] = a1;
  v29[1] = a2;
  sub_19EEBCD00((uint64_t)v29, (uint64_t)v28);
  long long v26 = 0u;
  long long v27 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v28, (uint64_t)&v26);
  LOBYTE(v33) = 1;
  long long v31 = v26;
  long long v32 = v27;
  uint64_t v16 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_19EEC3F3C(0, v16[2] + 1, 1, v16);
  }
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    uint64_t v16 = sub_19EEC3F3C((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  void v16[2] = v18 + 1;
  Swift::String v19 = &v16[5 * v18];
  long long v20 = v31;
  long long v21 = v32;
  *((unsigned char *)v19 + 64) = v33;
  *((_OWORD *)v19 + 2) = v20;
  *((_OWORD *)v19 + 3) = v21;
  long long v30 = v16;
  sub_19EEBD664((uint64_t)v29, &qword_1EB393260);
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  *(void *)(v13 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v23 + 16) = xmmword_19F24EAD0;
  *((void *)&v27 + 1) = v24;
  *(void *)&long long v26 = 0xD000000000000027;
  *((void *)&v26 + 1) = 0x800000019F26AE20;
  long long v31 = 0u;
  long long v32 = 0u;
  sub_19EEC3E70((uint64_t)&v26, (uint64_t)&v31);
  *(unsigned char *)(v23 + 64) = 0;
  long long v25 = v32;
  *(_OWORD *)(v23 + 32) = v31;
  *(_OWORD *)(v23 + 48) = v25;
  *(void *)(v13 + 40) = v23;
  *(void *)&long long v31 = v14;
  LOBYTE(v26) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v26);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
LABEL_9:
  double result = 0.0;
  a4[1] = 0u;
  a4[2] = 0u;
  *a4 = 0u;
  return result;
}

void sub_19EF9186C(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_19EF91884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v26 = 0u;
    long long v27 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EEBD400(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v26 = 0u;
    long long v27 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  if (!*((void *)&v27 + 1))
  {
LABEL_9:
    sub_19EEBD664((uint64_t)&v26, &qword_1EB393260);
    return 0;
  }
  sub_19EEBDC00(&v26, v31);
  sub_19EEBDBA4((uint64_t)v31, (uint64_t)&v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DC30);
  if (swift_dynamicCast() && (void)v23)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return v23;
  }
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  char v9 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EB80;
  id v11 = v9;
  long long v30 = sub_19EEC3F3C(0, 27, 0, MEMORY[0x1E4FBC860]);
  v12._object = (void *)0x800000019F26AE00;
  v12._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471C48);
  v29[0] = a1;
  v29[1] = a2;
  sub_19EEBCD00((uint64_t)v29, (uint64_t)v25);
  long long v23 = 0u;
  long long v24 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
  char v28 = 1;
  long long v26 = v23;
  long long v27 = v24;
  uint64_t v13 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  void v13[2] = v15 + 1;
  uint64_t v16 = &v13[5 * v15];
  long long v17 = v26;
  long long v18 = v27;
  *((unsigned char *)v16 + 64) = v28;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  long long v30 = v13;
  sub_19EEBD664((uint64_t)v29, &qword_1EB393260);
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(void *)(v10 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v20 + 16) = xmmword_19F24EAD0;
  *((void *)&v24 + 1) = v21;
  *(void *)&long long v23 = 0xD000000000000027;
  *((void *)&v23 + 1) = 0x800000019F26AE20;
  long long v26 = 0u;
  long long v27 = 0u;
  sub_19EEC3E70((uint64_t)&v23, (uint64_t)&v26);
  *(unsigned char *)(v20 + 64) = 0;
  long long v22 = v27;
  *(_OWORD *)(v20 + 32) = v26;
  *(_OWORD *)(v20 + 48) = v22;
  *(void *)(v10 + 40) = v20;
  *(void *)&long long v26 = v11;
  LOBYTE(v23) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return 0;
}

uint64_t sub_19EF91BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v26 = 0u;
    long long v27 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EEBD400(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v26 = 0u;
    long long v27 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  if (!*((void *)&v27 + 1))
  {
LABEL_9:
    sub_19EEBD664((uint64_t)&v26, &qword_1EB393260);
    return 0;
  }
  sub_19EEBDC00(&v26, v31);
  sub_19EEBDBA4((uint64_t)v31, (uint64_t)&v26);
  type metadata accessor for ClickLocationTracker();
  if (swift_dynamicCast() && (void)v23)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return v23;
  }
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  char v9 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EB80;
  id v11 = v9;
  long long v30 = sub_19EEC3F3C(0, 27, 0, MEMORY[0x1E4FBC860]);
  v12._object = (void *)0x800000019F26AE00;
  v12._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471C60);
  v29[0] = a1;
  v29[1] = a2;
  sub_19EEBCD00((uint64_t)v29, (uint64_t)v25);
  long long v23 = 0u;
  long long v24 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
  char v28 = 1;
  long long v26 = v23;
  long long v27 = v24;
  uint64_t v13 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  void v13[2] = v15 + 1;
  uint64_t v16 = &v13[5 * v15];
  long long v17 = v26;
  long long v18 = v27;
  *((unsigned char *)v16 + 64) = v28;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  long long v30 = v13;
  sub_19EEBD664((uint64_t)v29, &qword_1EB393260);
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(void *)(v10 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v20 + 16) = xmmword_19F24EAD0;
  *((void *)&v24 + 1) = v21;
  *(void *)&long long v23 = 0xD000000000000027;
  *((void *)&v23 + 1) = 0x800000019F26AE20;
  long long v26 = 0u;
  long long v27 = 0u;
  sub_19EEC3E70((uint64_t)&v23, (uint64_t)&v26);
  *(unsigned char *)(v20 + 64) = 0;
  long long v22 = v27;
  *(_OWORD *)(v20 + 32) = v26;
  *(_OWORD *)(v20 + 48) = v22;
  *(void *)(v10 + 40) = v20;
  *(void *)&long long v26 = v11;
  LOBYTE(v23) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return 0;
}

uint64_t sub_19EF91F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v26 = 0u;
    long long v27 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EEBD400(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v26 = 0u;
    long long v27 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  if (!*((void *)&v27 + 1))
  {
LABEL_9:
    sub_19EEBD664((uint64_t)&v26, &qword_1EB393260);
    return 0;
  }
  sub_19EEBDC00(&v26, v31);
  sub_19EEBDBA4((uint64_t)v31, (uint64_t)&v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471C18);
  if (swift_dynamicCast() && (void)v23)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return v23;
  }
  if (qword_1EB393168 != -1) {
    swift_once();
  }
  char v9 = (void *)qword_1EB393080;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EB80;
  id v11 = v9;
  long long v30 = sub_19EEC3F3C(0, 27, 0, MEMORY[0x1E4FBC860]);
  v12._object = (void *)0x800000019F26AE00;
  v12._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471C20);
  v29[0] = a1;
  v29[1] = a2;
  sub_19EEBCD00((uint64_t)v29, (uint64_t)v25);
  long long v23 = 0u;
  long long v24 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
  char v28 = 1;
  long long v26 = v23;
  long long v27 = v24;
  uint64_t v13 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  void v13[2] = v15 + 1;
  uint64_t v16 = &v13[5 * v15];
  long long v17 = v26;
  long long v18 = v27;
  *((unsigned char *)v16 + 64) = v28;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  long long v30 = v13;
  sub_19EEBD664((uint64_t)v29, &qword_1EB393260);
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(void *)(v10 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v20 + 16) = xmmword_19F24EAD0;
  *((void *)&v24 + 1) = v21;
  *(void *)&long long v23 = 0xD000000000000027;
  *((void *)&v23 + 1) = 0x800000019F26AE20;
  long long v26 = 0u;
  long long v27 = 0u;
  sub_19EEC3E70((uint64_t)&v23, (uint64_t)&v26);
  *(unsigned char *)(v20 + 64) = 0;
  long long v22 = v27;
  *(_OWORD *)(v20 + 32) = v26;
  *(_OWORD *)(v20 + 48) = v22;
  *(void *)(v10 + 40) = v20;
  *(void *)&long long v26 = v11;
  LOBYTE(v23) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return 0;
}

unsigned char *storeEnumTagSinglePayload for ImpressionsMetricsFieldsProvider(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EF92364);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsMetricsFieldsProvider()
{
  return &type metadata for ImpressionsMetricsFieldsProvider;
}

unint64_t sub_19EF9239C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_19F1DBFEC() != a1 || v9 != a2)
  {
    char v10 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_19F1DBEBC();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

void sub_19EF9248C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x19F3C7060](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      uint64_t v5 = v4;
      sub_19EF92AF8();
      char v6 = sub_19F1DCA1C();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)MEMORY[0x19F3C7060](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          uint64_t v9 = v8;
          char v10 = sub_19F1DCA1C();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_19F1DD03C();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_19EF92618(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = 0;
  while (*(void *)(a2 + 32 + 8 * result) != a1)
  {
    if (v2 == ++result) {
      return 0;
    }
  }
  return result;
}

Swift::tuple_key_String_value_String_optional __swiftcall CookieIterator.next()()
{
  uint64_t v1 = sub_19F1DAE3C();
  MEMORY[0x1F4188790](v1);
  id v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 0;
  char v10 = 0;
  uint64_t v11 = 0;
  unint64_t v12 = 0;
  uint64_t v13 = *v0;
  int64_t v14 = v0[1];
  if (v14 >= *(void *)(*v0 + 16)) {
    goto LABEL_22;
  }
  if (v14 < 0)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v15 = v6;
  uint64_t v58 = v0;
  uint64_t v16 = v13 + 16 * v14;
  uint64_t v18 = *(void *)(v16 + 32);
  unint64_t v17 = *(void *)(v16 + 40);
  swift_bridgeObjectRetain();
  sub_19EF9239C(61, 0xE100000000000000, v18, v17);
  if (v19)
  {
LABEL_16:
    uint64_t v59 = v18;
    unint64_t v60 = v17;
    sub_19EEC4910();
    uint64_t v50 = sub_19F1DCBAC();
    if (v51)
    {
      uint64_t v52 = v50;
      unint64_t v53 = v51;
      swift_bridgeObjectRelease();
      uint64_t v18 = v52;
      unint64_t v17 = v53;
    }
    uint64_t v46 = v58;
    uint64_t v11 = 0;
    int64_t v49 = v14 + 1;
    unint64_t v12 = 0xE000000000000000;
    uint64_t v9 = v18;
    char v10 = (void *)v17;
    goto LABEL_21;
  }
  uint64_t v20 = sub_19F1DC00C();
  uint64_t v21 = MEMORY[0x19F3C6140](v20);
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v59 = v21;
  unint64_t v60 = v23;
  sub_19F1DAE1C();
  unint64_t v24 = sub_19EEC4910();
  uint64_t v9 = sub_19F1DCB7C();
  char v10 = v25;
  long long v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v57 = v15 + 8;
  uint64_t v55 = v26;
  v26(v8, v1);
  swift_bridgeObjectRelease();
  uint64_t v59 = v9;
  unint64_t v60 = (unint64_t)v10;
  unint64_t v56 = v24;
  uint64_t v27 = sub_19F1DCBAC();
  if (v28)
  {
    uint64_t v29 = v27;
    long long v30 = v28;
    swift_bridgeObjectRelease();
    uint64_t v9 = v29;
    char v10 = v30;
  }
  if ((v17 & 0x2000000000000000) != 0) {
    uint64_t v31 = HIBYTE(v17) & 0xF;
  }
  else {
    uint64_t v31 = v18 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v2 = sub_19F1DBEDC();
  if ((v3 & 1) == 0)
  {
    if (4 * v31 >= v2 >> 14)
    {
      uint64_t v32 = sub_19F1DC00C();
      uint64_t v18 = v33;
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      swift_bridgeObjectRelease();
      uint64_t v38 = MEMORY[0x19F3C6140](v32, v18, v35, v37);
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      uint64_t v59 = v38;
      unint64_t v60 = v40;
      sub_19F1DAE1C();
      unint64_t v17 = MEMORY[0x1E4FBB1A0];
      int64_t v14 = v56;
      uint64_t v11 = sub_19F1DCB7C();
      unint64_t v12 = v41;
      v55(v8, v1);
      swift_bridgeObjectRelease();
      uint64_t v59 = v11;
      unint64_t v60 = v12;
      uint64_t v42 = sub_19F1DCBAC();
      if (v43)
      {
        uint64_t v44 = v42;
        unint64_t v45 = v43;
        swift_bridgeObjectRelease();
        uint64_t v11 = v44;
        unint64_t v12 = v45;
      }
      uint64_t v46 = v58;
      uint64_t v47 = v58[1];
      BOOL v48 = __OFADD__(v47, 1);
      int64_t v49 = v47 + 1;
      if (!v48) {
        goto LABEL_21;
      }
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_24;
  }
  unint64_t v2 = swift_bridgeObjectRelease();
  uint64_t v46 = v58;
  uint64_t v54 = v58[1];
  BOOL v48 = __OFADD__(v54, 1);
  int64_t v49 = v54 + 1;
  if (v48)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
LABEL_21:
  v46[1] = v49;
LABEL_22:
  unint64_t v2 = v9;
  uint64_t v3 = v10;
  uint64_t v4 = v11;
  uint64_t v5 = (void *)v12;
LABEL_26:
  result.value.value._object = v5;
  result.value.value._uint64_t countAndFlagsBits = v4;
  result.value.key._object = v3;
  result.value.key._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t sub_19EF929FC@<X0>(Swift::tuple_key_String_value_String_optional *a1@<X8>)
{
  Swift::tuple_key_String_value_String_optional v3 = CookieIterator.next()();
  *a1 = v3;
  return v3.value.key._countAndFlagsBits;
}

void *initializeBufferWithCopyOfBuffer for CookieIterator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CookieIterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for CookieIterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for CookieIterator()
{
  return &type metadata for CookieIterator;
}

unint64_t sub_19EF92AF8()
{
  unint64_t result = qword_1E9471690;
  if (!qword_1E9471690)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9471690);
  }
  return result;
}

void PageMetricsFieldsProvider.init()(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void PageMetricsFieldsProvider.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void sub_19EF92B50(void *a1, uint64_t *a2)
{
}

void *assignWithCopy for PageMetricsFieldsProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PageMetricsFieldsProvider(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PageMetricsFieldsProvider(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PageMetricsFieldsProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageMetricsFieldsProvider()
{
  return &type metadata for PageMetricsFieldsProvider;
}

JetEngine::LogMessageLevel_optional __swiftcall LogMessageLevel.init(name:)(Swift::String name)
{
  unint64_t v2 = v1;
  BOOL v3 = name._countAndFlagsBits == 0x6775626564 && name._object == (void *)0xE500000000000000;
  if (v3 || (object = name._object, uint64_t countAndFlagsBits = name._countAndFlagsBits, (sub_19F1DD44C() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 3;
  }
  else if (countAndFlagsBits == 1868983913 && object == (void *)0xE400000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 2;
  }
  else if (countAndFlagsBits == 0x676E696E726177 && object == (void *)0xE700000000000000 {
         || (sub_19F1DD44C() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 1;
  }
  else if (countAndFlagsBits == 0x726F727265 && object == (void *)0xE500000000000000)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v8 = sub_19F1DD44C();
    result.value = swift_bridgeObjectRelease();
    if (v8) {
      char v7 = 0;
    }
    else {
      char v7 = 4;
    }
  }
  *unint64_t v2 = v7;
  return result;
}

uint64_t LogMessageLevel.name.getter()
{
  uint64_t result = 0x6775626564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E696E726177;
      break;
    case 2:
      uint64_t result = 1868983913;
      break;
    case 3:
      return result;
    default:
      uint64_t result = 0x726F727265;
      break;
  }
  return result;
}

BOOL static LogMessageLevel.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t LogMessageLevel.rawValue.getter()
{
  return *v0;
}

JetEngine::LogMessageLevel_optional __swiftcall LogMessageLevel.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (JetEngine::LogMessageLevel_optional)rawValue;
}

void *static LogMessageLevel.allCases.getter()
{
  return &unk_1EF13DDC8;
}

unint64_t sub_19EF92F2C()
{
  unint64_t result = qword_1E9471C68;
  if (!qword_1E9471C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471C68);
  }
  return result;
}

JetEngine::LogMessageLevel_optional sub_19EF92F80(Swift::Int *a1)
{
  return LogMessageLevel.init(rawValue:)(*a1);
}

void sub_19EF92F88(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_19EF92F94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_19EF92FA8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_19EF92FBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_19EF92FD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

unint64_t sub_19EF92FE8()
{
  unint64_t result = qword_1E9471C70;
  if (!qword_1E9471C70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9471C78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471C70);
  }
  return result;
}

void sub_19EF93044(void *a1@<X8>)
{
  *a1 = &unk_1EF13DE80;
}

uint64_t getEnumTagSinglePayload for LogMessageLevel(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t dispatch thunk of MetricsEventLinterRule.apply(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t static IntentOutcome<A>.satisfied(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EEC4154(a1, a2);
}

uint64_t JSPackageIndex.init(deserializing:using:from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRelease();
  JSONObject.subscript.getter(29546, 0xE200000000000000, (uint64_t)v22);
  sub_19EEBF040((uint64_t)v22, (uint64_t)v19);
  uint64_t v6 = v20;
  if (v20)
  {
    uint64_t v7 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
    uint64_t v10 = v9;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  }
  else
  {
    sub_19EEBD664((uint64_t)v19, (uint64_t *)&unk_1E946FD20);
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  sub_19EEC3418((uint64_t)v22);
  uint64_t v11 = type metadata accessor for JSPackageIndex();
  unint64_t v12 = (uint64_t *)(a3 + *(int *)(v11 + 20));
  *unint64_t v12 = v8;
  v12[1] = v10;
  uint64_t v13 = sub_19F1DB34C();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a3, a2, v13);
  JSONObject.subscript.getter(0x69747265706F7270, 0xEA00000000007365, (uint64_t)v19);
  JSONObject.dictionary.getter((uint64_t)v22);
  sub_19EEC3418((uint64_t)v19);
  uint64_t v15 = v23;
  if (!v23)
  {
    sub_19EEBD664((uint64_t)v22, &qword_1E946F740);
    goto LABEL_8;
  }
  uint64_t v25 = v11;
  uint64_t v16 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  uint64_t v11 = v25;
  unint64_t v17 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v16 + 32))(MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB1B0], v15, v16);
  sub_19EEC05FC((uint64_t)v22);
  if (!v17)
  {
LABEL_8:
    unint64_t v17 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
    sub_19EEC3418(a1);
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
  uint64_t result = sub_19EEC3418(a1);
LABEL_9:
  *(void *)(a3 + *(int *)(v11 + 24)) = v17;
  return result;
}

uint64_t JSPackageIndex.packageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB34C();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t JSPackageIndex.scriptPath.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for JSPackageIndex() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSPackageIndex.properties.getter()
{
  type metadata accessor for JSPackageIndex();
  return swift_bridgeObjectRetain();
}

uint64_t JSPackageIndex.scriptURL.getter@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + *(int *)(type metadata accessor for JSPackageIndex() + 20) + 8))
  {
    return sub_19F1DB26C();
  }
  else
  {
    uint64_t v4 = sub_19F1DB34C();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
    return v5(a1, v1, v4);
  }
}

uint64_t sub_19EF93550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(v2 + *(int *)(a1 + 20) + 8))
  {
    return sub_19F1DB26C();
  }
  else
  {
    uint64_t v5 = sub_19F1DB34C();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
    return v6(a2, v2, v5);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for JSPackageIndex(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_19F1DB34C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for JSPackageIndex(uint64_t a1)
{
  uint64_t v2 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSPackageIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSPackageIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for JSPackageIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for JSPackageIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSPackageIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19EF939E0);
}

uint64_t sub_19EF939E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for JSPackageIndex(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19EF93AB4);
}

uint64_t sub_19EF93AB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_19F1DB34C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_19EF93B70()
{
  uint64_t result = sub_19F1DB34C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError.== infix(_:_:)()
{
  return 1;
}

uint64_t ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t ValidatedJetPackLoadingCoordinator.ValidatedJetPackResult.asset.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EF93C94(v1, a1);
}

uint64_t sub_19EF93C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JetPackAsset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF93DC0()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_19EF93ED0()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[20];
  sub_19EF4B3C4(v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

unint64_t sub_19EF93FF4()
{
  unint64_t result = qword_1E9471C98;
  if (!qword_1E9471C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471C98);
  }
  return result;
}

void *assignWithCopy for ValidatedJetPackLoadingCoordinator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for ValidatedJetPackLoadingCoordinator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteFetcher(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

unsigned char *storeEnumTagSinglePayload for ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19EF941F8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError()
{
  return &type metadata for ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError;
}

uint64_t sub_19EF94230(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB57C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  unint64_t v13 = ((v8 + 40) & ~(v8 | 7))
      + v12
      + ((((v10 + ((v8 + 32) & ~v8) + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 41
      + 31;
  if ((v8 | 7 | v12) != 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v13 & ~v12) + *(void *)(v11 + 64) > 0x18)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + (((v8 | 7 | v12) + 16) & ~(v8 | 7 | v12));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v8;
    uint64_t v43 = ~v12;
    uint64_t v44 = *(void *)(a3 + 16);
    long long v18 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v18;
    uint64_t v39 = v6;
    unint64_t v40 = ((((v10 + ((v8 + 32) & ~v8) + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41;
    uint64_t v42 = v11;
    (**(void (***)(uint64_t, uint64_t *))(v18 - 8))(a1, a2);
    char v19 = (void *)((a1 + v9 + 40) & ~v9);
    unint64_t v41 = a2;
    uint64_t v20 = (void *)(((unint64_t)a2 + v9 + 40) & ~v9);
    *char v19 = *v20;
    v19[1] = v20[1];
    uint64_t v21 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v22 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v22;
    v21[1] = v22[1];
    uint64_t v23 = v8 + 16;
    uint64_t v24 = ((unint64_t)v21 + v8 + 16) & ~v8;
    unint64_t v25 = ((unint64_t)v22 + v23) & v17;
    long long v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v24, v25, v39);
    uint64_t v27 = (_OWORD *)((v24 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
    char v28 = (long long *)((v25 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
    long long v29 = *v28;
    *(_OWORD *)((char *)v27 + 9) = *(long long *)((char *)v28 + 9);
    *uint64_t v27 = v29;
    long long v30 = (void *)((v24 + v10 + 39) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v31 = (void *)((v25 + v10 + 39) & 0xFFFFFFFFFFFFFFF8);
    *long long v30 = *v31;
    v30[1] = v31[1];
    uint64_t v32 = (_OWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v33 = (long long *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    long long v35 = *v33;
    long long v34 = v33[1];
    *(_OWORD *)((char *)v32 + 25) = *(long long *)((char *)v33 + 25);
    *uint64_t v32 = v35;
    v32[1] = v34;
    uint64_t v36 = (char *)v19 + v40;
    LODWORD(v27) = *(_DWORD *)((char *)v20 + v40 + 3);
    v36[7] = *((unsigned char *)v20 + v40 + 7);
    *(_DWORD *)(v36 + 3) = v27;
    *(void *)(v36 + 15) = *(void *)((char *)v20 + v40 + 15);
    *(void *)(v36 + 23) = *(void *)((char *)v20 + v40 + 23);
    uint64_t v37 = *(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37((v13 + a1) & v43, ((unint64_t)v41 + v13) & v43, v44);
  }
  return a1;
}

uint64_t *sub_19EF94554(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v5 = sub_19F1DB57C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 | 7) + 40;
  uint64_t v9 = (void *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  uint64_t v10 = (void *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = ((unint64_t)v11 + v7 + 16) & ~v7;
  uint64_t v14 = ((unint64_t)v12 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v13, v14, v5);
  uint64_t v15 = *(void *)(v6 + 64);
  uint64_t v16 = (_OWORD *)((v15 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (_OWORD *)((v15 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v18 = *(_OWORD *)((char *)v17 + 9);
  *uint64_t v16 = *v17;
  *(_OWORD *)((char *)v16 + 9) = v18;
  char v19 = (void *)((v15 + v13 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((v15 + v14 + 39) & 0xFFFFFFFFFFFFFFF8);
  *char v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v21 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)unint64_t v21 = v23;
  uint64_t v24 = *(void *)(v22 + 16);
  *(unsigned char *)(v21 + 24) = *(unsigned char *)(v22 + 24);
  *(void *)(v21 + 16) = v24;
  uint64_t v25 = *(void *)(v22 + 32);
  *(unsigned char *)(v21 + 40) = *(unsigned char *)(v22 + 40);
  *(void *)(v21 + 32) = v25;
  unint64_t v26 = ((((((v7 + 32) & ~v7) + v15 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t v27 = (char *)v9 + v26;
  LODWORD(v25) = *(_DWORD *)((char *)v10 + v26 + 3);
  v27[7] = *((unsigned char *)v10 + v26 + 7);
  *(_DWORD *)(v27 + 3) = v25;
  *(void *)(v27 + 15) = *(void *)((char *)v10 + v26 + 15);
  *(void *)(v27 + 23) = *(void *)((char *)v10 + v26 + 23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = ((v7 + 40) & ~(v7 | 7)) + v29 + v26 + 31;
  (*(void (**)(unint64_t, unint64_t))(v28 + 24))(((unint64_t)a1 + v30) & ~v29, ((unint64_t)a2 + v30) & ~v29);
  return a1;
}

uint64_t sub_19EF947D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = sub_19F1DB57C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = v8 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (v11 | 7) + 40;
  uint64_t v13 = (_OWORD *)((v12 + a1) & ~(v11 | 7));
  uint64_t v14 = (_OWORD *)((v12 + a2) & ~(v11 | 7));
  *uint64_t v13 = *v14;
  uint64_t v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  uint64_t v17 = ((unint64_t)v15 + v11 + 16) & ~v11;
  uint64_t v18 = ((unint64_t)v16 + v11 + 16) & ~v11;
  v9(v17, v18, v7);
  uint64_t v19 = *(void *)(v10 + 32);
  uint64_t v20 = (_OWORD *)((v17 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (_OWORD *)((v18 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v22 = *(_OWORD *)((char *)v21 + 9);
  *uint64_t v20 = *v21;
  *(_OWORD *)((char *)v20 + 9) = v22;
  uint64_t v23 = (_OWORD *)((v17 + v19 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (_OWORD *)((v18 + v19 + 39) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  uint64_t v25 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v26 = (long long *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v28 = *v26;
  long long v27 = v26[1];
  *(_OWORD *)((char *)v25 + 25) = *(long long *)((char *)v26 + 25);
  *uint64_t v25 = v28;
  v25[1] = v27;
  unint64_t v29 = ((((((v11 + 32) & ~v11) + v19 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t v30 = (char *)v13 + v29;
  LOBYTE(v20) = *((unsigned char *)v14 + v29 + 7);
  *(_DWORD *)(v30 + 3) = *(_DWORD *)((char *)v14 + v29 + 3);
  v30[7] = (char)v20;
  *(_OWORD *)(v30 + 15) = *(_OWORD *)((char *)v14 + v29 + 15);
  uint64_t v31 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = ((v11 + 40) & ~(v11 | 7)) + v32 + v29 + 31;
  (*(void (**)(uint64_t, uint64_t))(v31 + 32))((v33 + a1) & ~v32, (v33 + a2) & ~v32);
  return a1;
}

uint64_t sub_19EF949A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = sub_19F1DB57C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 | 7) + 40;
  uint64_t v10 = (void *)((v9 + a1) & ~(v8 | 7));
  uint64_t v11 = (void *)((v9 + a2) & ~(v8 | 7));
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRelease();
  uint64_t v14 = ((unint64_t)v12 + v8 + 16) & ~v8;
  uint64_t v15 = ((unint64_t)v13 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v14, v15, v6);
  uint64_t v16 = *(void *)(v7 + 64);
  uint64_t v17 = (_OWORD *)((v16 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (_OWORD *)((v16 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v19 = *(_OWORD *)((char *)v18 + 9);
  *uint64_t v17 = *v18;
  *(_OWORD *)((char *)v17 + 9) = v19;
  uint64_t v20 = (void *)((v16 + v14 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (void *)((v16 + v15 + 39) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRelease();
  unint64_t v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)unint64_t v22 = v24;
  uint64_t v25 = *(void *)(v23 + 16);
  *(unsigned char *)(v22 + 24) = *(unsigned char *)(v23 + 24);
  *(void *)(v22 + 16) = v25;
  uint64_t v26 = *(void *)(v23 + 32);
  *(unsigned char *)(v22 + 40) = *(unsigned char *)(v23 + 40);
  *(void *)(v22 + 32) = v26;
  unint64_t v27 = ((((((v8 + 32) & ~v8) + v16 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41;
  long long v28 = (char *)v10 + v27;
  LODWORD(v26) = *(_DWORD *)((char *)v11 + v27 + 3);
  v28[7] = *((unsigned char *)v11 + v27 + 7);
  *(_DWORD *)(v28 + 3) = v26;
  *(void *)(v28 + 15) = *(void *)((char *)v11 + v27 + 15);
  *(void *)(v28 + 23) = *(void *)((char *)v11 + v27 + 23);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v31 = ((v8 + 40) & ~(v8 | 7)) + v30 + v27 + 31;
  (*(void (**)(uint64_t, uint64_t))(v29 + 40))((v31 + a1) & ~v30, (v31 + a2) & ~v30);
  return a1;
}

unint64_t sub_19EF94C48()
{
  unint64_t result = qword_1E946CF38;
  if (!qword_1E946CF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CF38);
  }
  return result;
}

id sub_19EF94C9C()
{
  if (qword_1EB390408 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB390400;
  qword_1E9471CA0 = qword_1EB390400;
  return v0;
}

void sub_19EF94D00(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392830);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = _s9JetEngine19RunLoopWorkerThreadC7currentACSgvgZ_0();
  if (v11)
  {
    id v12 = v11;
    if ((objc_msgSend(a2, sel_isNull) & 1) != 0
      || (objc_msgSend(a2, sel_isUndefined) & 1) != 0
      || objc_msgSend(a2, sel_isString))
    {
      if (objc_msgSend(a2, sel_isString)
        && (id v13 = objc_msgSend(a2, sel_toString)) != 0)
      {
        uint64_t v14 = v13;
        uint64_t v15 = sub_19F1DBD7C();
        uint64_t v17 = v16;
      }
      else
      {
        uint64_t v15 = 0;
        uint64_t v17 = 0;
      }
      sub_19EEC4154(a3 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory, (uint64_t)v26);
      uint64_t v19 = swift_allocObject();
      sub_19EEBB420(v26, v19 + 16);
      *(void *)(v19 + 56) = v15;
      *(void *)(v19 + 64) = v17;
      *(void *)&v26[0] = MEMORY[0x1E4FBC860];
      char v27 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471CC0);
      uint64_t v20 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
      uint64_t v21 = swift_allocObject();
      *(_DWORD *)(v21 + 16) = 0;
      *(void *)(v20 + 16) = v21;
      sub_19EF95EC4((uint64_t)v26, v20 + 24);
      uint64_t v22 = sub_19F1DC37C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 1, 1, v22);
      unint64_t v23 = (void *)swift_allocObject();
      v23[2] = 0;
      v23[3] = 0;
      v23[4] = &unk_1E9471CB8;
      v23[5] = v19;
      v23[6] = v20;
      swift_retain();
      sub_19EE9A0F8((uint64_t)v10, (uint64_t)&unk_1E9471CC8, (uint64_t)v23);
      swift_release();
      uint64_t v24 = (void *)swift_allocObject();
      _OWORD v24[2] = v20;
      void v24[3] = v12;
      v24[4] = a4;
      JSPromise.init(in:executor:)(a1, (uint64_t)sub_19EF96090, (uint64_t)v24, v26);
    }
    else
    {
      sub_19EF600C0();
      swift_allocError();
      JSError.init(badValue:expected:)(a2, v25);
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    sub_19EF600C0();
    swift_allocError();
    *(void *)uint64_t v18 = 0xD000000000000039;
    *(void *)(v18 + 8) = 0x800000019F26B110;
    *(void *)(v18 + 16) = 0;
    *(unsigned char *)(v18 + 24) = 1;
    *(void *)(v18 + 32) = 0;
    *(unsigned char *)(v18 + 40) = 1;
    *(_OWORD *)(v18 + 48) = 0u;
    *(_OWORD *)(v18 + 64) = 0u;
    *(_OWORD *)(v18 + 80) = 0u;
    *(void *)(v18 + 96) = 0;
    swift_willThrow();
  }
}

uint64_t sub_19EF95084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_19EF950A8, 0, 0);
}

uint64_t sub_19EF950A8()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  unsigned int v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_19EF951B4;
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[2];
  return v9(v7, v5, v6, v2, v3);
}

uint64_t sub_19EF951B4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19EF952A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_19EF960B0(a2, (uint64_t)&v16);
  uint64_t v10 = swift_allocObject();
  long long v11 = v17;
  *(_OWORD *)(v10 + 16) = v16;
  *(_OWORD *)(v10 + 32) = v11;
  *(void *)(v10 + 48) = v18[0];
  *(void *)(v10 + 56) = a6;
  sub_19EF960B0(a3, (uint64_t)v21);
  uint64_t v12 = swift_allocObject();
  long long v13 = v21[1];
  *(_OWORD *)(v12 + 16) = v21[0];
  *(_OWORD *)(v12 + 32) = v13;
  *(void *)(v12 + 48) = v22;
  *(void *)(v12 + 56) = a1;
  *(void *)(v12 + 64) = a6;
  long long v20[3] = type metadata accessor for RunLoopWorkerThread();
  void v20[4] = &protocol witness table for RunLoopWorkerThread;
  v20[0] = a5;
  *(void *)&long long v16 = sub_19EF96144;
  *((void *)&v16 + 1) = v10;
  *(void *)&long long v17 = sub_19EF96190;
  *((void *)&v17 + 1) = v12;
  sub_19EEC4154((uint64_t)v20, (uint64_t)v18);
  char v19 = 0;
  id v14 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19EF53E4C((uint64_t)&v16);
  sub_19EEBD664((uint64_t)&v16, (uint64_t *)&unk_1E9470F80);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
}

void sub_19EF95414(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  *(void *)(v4 + 56) = swift_getObjectType();
  *(void *)(v4 + 32) = v7;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v8.super.Class isa = JSReference.unwrap()().super.isa;
  if (v9.super.isa)
  {
    swift_bridgeObjectRelease();
    if (qword_1E9470130 != -1) {
      swift_once();
    }
    id v14 = (void *)qword_1E9471CA0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19F24EB80;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
    uint64_t v29 = v17;
    v28[0] = 0xD00000000000003ALL;
    v28[1] = 0x800000019F26B190;
    long long v26 = 0u;
    long long v27 = 0u;
    id v18 = v14;
    sub_19EEC3E70((uint64_t)v28, (uint64_t)&v26);
    *(unsigned char *)(v16 + 64) = 0;
    long long v19 = v27;
    *(_OWORD *)(v16 + 32) = v26;
    *(_OWORD *)(v16 + 48) = v19;
    *(void *)(v15 + 32) = v16;
    swift_getErrorValue();
    uint64_t v29 = v25;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v28);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(boxed_opaque_existential_2Tm, v24, v25);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_19F24EAD0;
    sub_19EEBCD00((uint64_t)v28, (uint64_t)v23);
    long long v26 = 0u;
    long long v27 = 0u;
    sub_19EEC3E70((uint64_t)v23, (uint64_t)&v26);
    *(unsigned char *)(v21 + 64) = 0;
    long long v22 = v27;
    *(_OWORD *)(v21 + 32) = v26;
    *(_OWORD *)(v21 + 48) = v22;
    *(void *)(v15 + 40) = v21;
    sub_19EEBD664((uint64_t)v28, &qword_1EB393260);
    *(void *)&long long v26 = v18;
    LOBYTE(v28[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    Class isa = v8.super.isa;
    id v11 = [(objc_class *)v8.super.isa context];
    if (v11)
    {
      uint64_t v12 = v11;
      long long v13 = isa;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_19EF95718(void *a1, void *a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  id v7 = a1;
  sub_19EFC7938(a1, (uint64_t)&v44);
  long long v33 = v44;
  uint64_t v34 = v45;
  LOBYTE(v35) = BYTE8(v45);
  uint64_t v36 = v46;
  char v37 = v47;
  uint64_t v38 = v48;
  uint64_t v39 = v49;
  uint64_t v40 = v50;
  uint64_t v41 = v51;
  long long v28 = (void *)v52;
  long long v42 = v52;
  uint64_t v43 = v53;
  JSError.jsRepresentation(in:)(a3, v30);
  long long v26 = a2;
  uint64_t v27 = v6;
  uint64_t v9 = v31;
  uint64_t v8 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  uint64_t v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 16))(a3, v9, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *(void *)(v27 + 56) = sub_19EE8FF40();
  *(void *)(v27 + 32) = v19;
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  v20.super.Class isa = JSReference.unwrap()().super.isa;
  if (v21.super.isa)
  {
    swift_bridgeObjectRelease();
    if (qword_1E9470130 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)qword_1E9471CA0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19F24EB80;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v12 + 16) = xmmword_19F24EAD0;
    uint64_t v35 = v13;
    *(void *)&long long v33 = 0xD000000000000039;
    *((void *)&v33 + 1) = 0x800000019F26B150;
    long long v44 = 0u;
    long long v45 = 0u;
    id v14 = v10;
    sub_19EEC3E70((uint64_t)&v33, (uint64_t)&v44);
    *(unsigned char *)(v12 + 64) = 0;
    long long v15 = v45;
    *(_OWORD *)(v12 + 32) = v44;
    *(_OWORD *)(v12 + 48) = v15;
    *(void *)(v11 + 32) = v12;
    swift_getErrorValue();
    uint64_t v35 = v29;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v33);
    (*(void (**)(uint64_t *))(*(void *)(v29 - 8) + 16))(boxed_opaque_existential_2Tm);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_19F24EAD0;
    sub_19EEBCD00((uint64_t)&v33, (uint64_t)v30);
    long long v44 = 0u;
    long long v45 = 0u;
    sub_19EEC3E70((uint64_t)v30, (uint64_t)&v44);
    *(unsigned char *)(v17 + 64) = 0;
    long long v18 = v45;
    *(_OWORD *)(v17 + 32) = v44;
    *(_OWORD *)(v17 + 48) = v18;
    *(void *)(v11 + 40) = v17;
    sub_19EEBD664((uint64_t)&v33, &qword_1EB393260);
    *(void *)&long long v44 = v14;
    LOBYTE(v33) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v33);
    swift_bridgeObjectRelease();
  }
  else
  {
    Class isa = v20.super.isa;
    id v23 = [(objc_class *)v20.super.isa context];
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = isa;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for JSLocalizerFactoryObject()
{
  return self;
}

id sub_19EF95D0C(uint64_t a1, objc_class *a2, uint64_t a3, uint64_t a4)
{
  v12[3] = a3;
  void v12[4] = a4;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_2Tm, a1, a3);
  id v8 = objc_allocWithZone(a2);
  sub_19EEC4154((uint64_t)v12, (uint64_t)v8 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v11.receiver = v8;
  v11.super_class = a2;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v9;
}

uint64_t sub_19EF95DC4()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19EF95E04(uint64_t a1)
{
  uint64_t v4 = v1 + 16;
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  void v7[4] = v6;
  uint64_t v7[5] = v5;
  v7[2] = a1;
  v7[3] = v4;
  v7[1] = sub_19EEB8A6C;
  return MEMORY[0x1F4188298](sub_19EF950A8, 0, 0);
}

uint64_t sub_19EF95EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF95F2C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19EF95F74(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_19EEB8A6C;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E94756E8
                                                                                   + dword_1E94756E8);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19EF96050()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19EF96090(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_19EF952A8(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_19EF960B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19EF9610C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_19EF96144(void *a1)
{
  sub_19EF95414(a1, (void *)(v1 + 16));
}

uint64_t sub_19EF96150()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_19EF96190(void *a1)
{
  sub_19EF95718(a1, (void *)(v1 + 16), *(void **)(v1 + 56));
}

uint64_t static PipelinePhase<>.convertToJSSource()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_19EF96224;
  *(void *)(v2 + 24) = 0;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_19EF96294;
  *(void *)(result + 24) = v2;
  *a1 = sub_19EF9633C;
  a1[1] = result;
  return result;
}

uint64_t sub_19EF96228(void *a1, uint64_t (*a2)(void, void))
{
  return a2(*a1, a1[1]);
}

uint64_t sub_19EF9625C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19EF96294(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

void *sub_19EF962C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(**(void **)a1 + 88))();
  uint64_t v5 = sub_19EF96344(a2, a3);
  swift_release();
  return v5;
}

void *sub_19EF9633C(uint64_t a1)
{
  return sub_19EF962C4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void *sub_19EF96344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C7A0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v15 = &type metadata for SyncTaskScheduler;
  uint64_t v16 = &protocol witness table for SyncTaskScheduler;
  *uint64_t v6 = MEMORY[0x1E4FBC860];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C7B0);
  uint64_t v7 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  sub_19EF96518((uint64_t)v6, (uint64_t)v7 + *(void *)(*v7 + 96));
  sub_19EEC4154((uint64_t)v14, (uint64_t)v13);
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a1;
  void v9[3] = a2;
  void v9[4] = v7;
  sub_19EEBB420(v13, (uint64_t)(v9 + 5));
  v11[0] = sub_19EF965C8;
  v11[1] = v9;
  long long v11[2] = sub_19EF965E0;
  id v11[3] = v7;
  sub_19EEC4154((uint64_t)v14, (uint64_t)v12);
  v12[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF54018((uint64_t)v11);
  sub_19EF965E8((uint64_t)v11);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19EF96518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF96580()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19EF965C8(uint64_t *a1)
{
  return sub_19F15F274(*a1, a1[1], *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

void sub_19EF965E0(void *a1)
{
}

uint64_t sub_19EF965E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9470FA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_19EF96648(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C7A0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for JSSource();
  MEMORY[0x1F4188790](v9 - 8);
  objc_super v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v22 - v13;
  uint64_t v16 = (uint64_t)v11 + *(int *)(v15 + 28);
  uint64_t v17 = sub_19F1DB34C();
  long long v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v16, 1, 1, v17);
  *objc_super v11 = v23;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  sub_19F1DB23C();
  v18((uint64_t)v8, 0, 1, v17);
  sub_19EE62024((uint64_t)v8, v16);
  sub_19EF968BC((uint64_t)v11, (uint64_t)v14);
  sub_19EF968BC((uint64_t)v14, (uint64_t)v5);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C7B0);
  uint64_t v19 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v20 = swift_allocObject();
  *(_DWORD *)(v20 + 16) = 0;
  long long v19[2] = v20;
  sub_19EF96518((uint64_t)v5, (uint64_t)v19 + *(void *)(*v19 + 96));
  return v19;
}

uint64_t sub_19EF968BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EF96924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for LazyValueWrapper.State();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v12 - v8);
  *uint64_t v9 = a1;
  v9[1] = a2;
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = sub_19EEAEA5C(v9, v6);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v10;
  return result;
}

uint64_t sub_19EF96A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for LazyValueWrapper.State();
  uint64_t v7 = *(void *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)&v14 - v9, a1, a2, v8);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = sub_19EEAEA5C(v10, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, a2);
  *a3 = v12;
  return result;
}

uint64_t LazyValueWrapper.description.getter()
{
  uint64_t v1 = *v0;
  type metadata accessor for LazyValueWrapper.State();
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_19EF96EEC(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_19EF96C24(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  __n128 v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LazyValueWrapper.State();
  double v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void **)((char *)v20 - v11);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)v20 - v11, a1, v9, v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v17 = *v12;
    long long v18 = v12[1];
    uint64_t v21 = 0x646564616F6C6E75;
    unint64_t v22 = 0xE900000000000028;
    v20[0] = v17;
    v20[1] = v18;
    swift_getFunctionTypeMetadata0();
    swift_retain();
    sub_19F1DBE0C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    swift_release();
LABEL_6:
    uint64_t v15 = v21;
    unint64_t v16 = v22;
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v19 = *v12;
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_19F1DBEFC();
    v20[0] = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    sub_19F1DCF4C();
    sub_19F1DBEFC();

    goto LABEL_6;
  }
  (*(void (**)(char *, void **, uint64_t))(v6 + 32))(v8, v12, a2);
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  sub_19F1DBEFC();
  sub_19F1DD40C();
  sub_19F1DBEFC();
  uint64_t v15 = v21;
  unint64_t v16 = v22;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
LABEL_7:
  *a3 = v15;
  a3[1] = v16;
}

void sub_19EF96EEC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19EF96C24(a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for LazyValueWrapper.State()
{
  return __swift_instantiateGenericMetadata();
}

void sub_19EF96F20(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  type metadata accessor for LazyValueWrapper.State();
  uint64_t v4 = (void *)(v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16));
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_19EF988D8(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_19EF96FE8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  __n128 v8 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LazyValueWrapper.State();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (void (**)(uint64_t))((char *)v61 - v12);
  (*(void (**)(char *, void *, uint64_t, double))(v10 + 16))((char *)v61 - v12, a1, v9, v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __n128 v8 = (char *)v13;
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v8, a2);
    }
    if (qword_1E946D450 != -1) {
      swift_once();
    }
    sub_19F1DD95C();
    uint64_t v40 = v77;
    uint64_t v41 = v78;
    __swift_project_boxed_opaque_existential_1(v76, v77);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_19F24EAD0;
    unint64_t v79 = sub_19EEC3F3C(0, 46, 0, MEMORY[0x1E4FBC860]);
    v43._uint64_t countAndFlagsBits = 91;
    v43._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v74[0] = a2;
    sub_19EEBCD00((uint64_t)v74, (uint64_t)v70);
    long long v68 = 0u;
    long long v69 = 0u;
    sub_19EEC3E70((uint64_t)v70, (uint64_t)&v68);
    char v73 = 0;
    long long v71 = v68;
    long long v72 = v69;
    long long v44 = v79;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v44 = sub_19EEC3F3C(0, v44[2] + 1, 1, v44);
    }
    unint64_t v46 = v44[2];
    unint64_t v45 = v44[3];
    if (v46 >= v45 >> 1) {
      long long v44 = sub_19EEC3F3C((void *)(v45 > 1), v46 + 1, 1, v44);
    }
    v44[2] = v46 + 1;
    char v47 = &v44[5 * v46];
    long long v48 = v71;
    long long v49 = v72;
    *((unsigned char *)v47 + 64) = v73;
    *((_OWORD *)v47 + 2) = v48;
    *((_OWORD *)v47 + 3) = v49;
    unint64_t v79 = v44;
    sub_19EEBCB4C((uint64_t)v74);
    v50._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v50._object = (void *)0x800000019F26B2D0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    swift_getErrorValue();
    uint64_t v51 = v66;
    uint64_t v52 = v67;
    uint64_t MetatypeMetadata = v67;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v74);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(boxed_opaque_existential_2Tm, v51, v52);
    sub_19EEBCD00((uint64_t)v74, (uint64_t)v70);
    long long v68 = 0u;
    long long v69 = 0u;
    sub_19EEC3E70((uint64_t)v70, (uint64_t)&v68);
    char v73 = 0;
    long long v71 = v68;
    long long v72 = v69;
    uint64_t v54 = v79;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v54 = sub_19EEC3F3C(0, v54[2] + 1, 1, v54);
    }
    unint64_t v56 = v54[2];
    unint64_t v55 = v54[3];
    if (v56 >= v55 >> 1) {
      uint64_t v54 = sub_19EEC3F3C((void *)(v55 > 1), v56 + 1, 1, v54);
    }
    v54[2] = v56 + 1;
    uint64_t v57 = &v54[5 * v56];
    long long v58 = v71;
    long long v59 = v72;
    *((unsigned char *)v57 + 64) = v73;
    *((_OWORD *)v57 + 2) = v58;
    *((_OWORD *)v57 + 3) = v59;
    unint64_t v79 = v54;
    sub_19EEBCB4C((uint64_t)v74);
    v60._uint64_t countAndFlagsBits = 0;
    v60._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v60);
    *(void *)(v42 + 32) = v79;
    Logger.error(_:)(v42, v40, v41);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
    return swift_willThrow();
  }
  else
  {
    uint64_t v15 = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(a1, v9);
    unint64_t v16 = v63;
    (*v13)(v15);
    uint64_t v63 = v16;
    if (!v16)
    {
      swift_release();
      (*(void (**)(void *, char *, uint64_t))(v6 + 16))(a1, v8, a2);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v8, a2);
    }
    if (qword_1E946D450 != -1) {
      swift_once();
    }
    sub_19F1DD95C();
    uint64_t v17 = v77;
    uint64_t v62 = v78;
    v61[1] = __swift_project_boxed_opaque_existential_1(v76, v77);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_19F24EAD0;
    unint64_t v79 = sub_19EEC3F3C(0, 35, 0, MEMORY[0x1E4FBC860]);
    v19._uint64_t countAndFlagsBits = 91;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v74[0] = a2;
    sub_19EEBCD00((uint64_t)v74, (uint64_t)v70);
    long long v68 = 0u;
    long long v69 = 0u;
    sub_19EEC3E70((uint64_t)v70, (uint64_t)&v68);
    char v73 = 0;
    long long v71 = v68;
    long long v72 = v69;
    uint64_t v20 = v79;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
    }
    unint64_t v22 = v20[2];
    unint64_t v21 = v20[3];
    if (v22 >= v21 >> 1) {
      uint64_t v20 = sub_19EEC3F3C((void *)(v21 > 1), v22 + 1, 1, v20);
    }
    void v20[2] = v22 + 1;
    uint64_t v23 = &v20[5 * v22];
    long long v24 = v71;
    long long v25 = v72;
    *((unsigned char *)v23 + 64) = v73;
    *((_OWORD *)v23 + 2) = v24;
    *((_OWORD *)v23 + 3) = v25;
    unint64_t v79 = v20;
    sub_19EEBCB4C((uint64_t)v74);
    v26._object = (void *)0x800000019F26B300;
    v26._uint64_t countAndFlagsBits = 0xD000000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    swift_getErrorValue();
    uint64_t v27 = v64;
    uint64_t v28 = v65;
    uint64_t MetatypeMetadata = v65;
    uint64_t v29 = __swift_allocate_boxed_opaque_existential_2Tm(v74);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v29, v27, v28);
    sub_19EEBCD00((uint64_t)v74, (uint64_t)v70);
    long long v68 = 0u;
    long long v69 = 0u;
    sub_19EEC3E70((uint64_t)v70, (uint64_t)&v68);
    char v73 = 0;
    long long v71 = v68;
    long long v72 = v69;
    uint64_t v30 = v79;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v30 = sub_19EEC3F3C(0, v30[2] + 1, 1, v30);
    }
    unint64_t v32 = v30[2];
    unint64_t v31 = v30[3];
    if (v32 >= v31 >> 1) {
      uint64_t v30 = sub_19EEC3F3C((void *)(v31 > 1), v32 + 1, 1, v30);
    }
    _OWORD v30[2] = v32 + 1;
    long long v33 = &v30[5 * v32];
    long long v34 = v71;
    long long v35 = v72;
    *((unsigned char *)v33 + 64) = v73;
    *((_OWORD *)v33 + 2) = v34;
    *((_OWORD *)v33 + 3) = v35;
    unint64_t v79 = v30;
    sub_19EEBCB4C((uint64_t)v74);
    v36._uint64_t countAndFlagsBits = 0;
    v36._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    *(void *)(v18 + 32) = v79;
    Logger.error(_:)(v18, v17, v62);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
    char v37 = v63;
    *a1 = v63;
    swift_storeEnumTagMultiPayload();
    id v38 = v37;
    swift_willThrow();
    return swift_release();
  }
}

void sub_19EF977DC()
{
  uint64_t v1 = *v0;
  type metadata accessor for LazyValueWrapper.State();
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_19EF988BC(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_19EF97888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LazyValueWrapper.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a1, a2, a3);
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for LazyValueWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19EF97968()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_19EF97A0C(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    __n128 v8 = *(char **)a2;
    *(void *)uint64_t v3 = *(void *)a2;
    uint64_t v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
LABEL_26:
    swift_retain();
    return v3;
  }
  unsigned int v9 = a2[v5];
  unsigned int v10 = v9 - 3;
  if (v9 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v11 = v5;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_19;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_19:
        int v13 = (v12 | (v10 << (8 * v5))) + 3;
        unsigned int v9 = v12 + 3;
        if (v5 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 2)
  {
    uint64_t v14 = *(void *)a2;
    id v15 = *(id *)a2;
    *(void *)uint64_t v3 = v14;
    v3[v5] = 2;
    return v3;
  }
  if (v9 != 1)
  {
    uint64_t v16 = *((void *)a2 + 1);
    *(void *)uint64_t v3 = *(void *)a2;
    *((void *)v3 + 1) = v16;
    v3[v5] = 0;
    goto LABEL_26;
  }
  (*(void (**)(char *))(v4 + 16))(a1);
  v3[v5] = 1;
  return v3;
}

void sub_19EF97BB0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 3;
        unsigned int v3 = v6 + 3;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 2)
  {
  }
  else if (v3 == 1)
  {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else
  {
    swift_release();
  }
}

void *sub_19EF97CC0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    uint64_t v11 = *(void *)a2;
    id v12 = *(id *)a2;
    *a1 = v11;
    char v10 = 2;
  }
  else
  {
    if (v5 != 1)
    {
      uint64_t v13 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v13;
      *((unsigned char *)a1 + v4) = 0;
      swift_retain();
      return a1;
    }
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_19EF97E24(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 2)
    {
    }
    else if (v8 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else
    {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_30;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_30:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      Swift::String v19 = *(void **)a2;
      id v20 = v19;
      *(void *)a1 = v19;
      char v18 = 2;
    }
    else
    {
      if (v13 != 1)
      {
        uint64_t v21 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v21;
        a1[v7] = 0;
        swift_retain();
        return a1;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 1;
    }
    a1[v7] = v18;
  }
  return a1;
}

void *sub_19EF98074(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    *a1 = *(void *)a2;
    char v10 = 2;
  }
  else if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_19EF981C4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 2)
    {
    }
    else if (v8 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else
    {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_30;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_30:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 2;
    }
    else if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_19EF98408(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_19EF9853C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x19EF98704);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_19EF9872C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 3;
        LODWORD(v4) = v7 + 3;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_19EF987E4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_19EF988BC(uint64_t a1)
{
  return sub_19EF97888(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_19EF988D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EF96FE8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_19EF988F4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_19F1DD72C();
  sub_19F1DD73C();
  if (v1) {
    sub_19F1DBE9C();
  }
  return sub_19F1DD78C();
}

uint64_t sub_19EF98964()
{
  if (!*(void *)(v0 + 8)) {
    return sub_19F1DD73C();
  }
  sub_19F1DD73C();
  return sub_19F1DBE9C();
}

uint64_t sub_19EF989DC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_19F1DD72C();
  sub_19F1DD73C();
  if (v1) {
    sub_19F1DBE9C();
  }
  return sub_19F1DD78C();
}

uint64_t sub_19EF98A48(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return sub_19F1DD44C();
  }
}

JetEngine::DynamicImpressionsTracker::Configuration __swiftcall DynamicImpressionsTracker.Configuration.init(impressionTimeThreshold:queueName:)(Swift::Double impressionTimeThreshold, Swift::String queueName)
{
  *(Swift::Double *)uint64_t v2 = impressionTimeThreshold;
  *(Swift::String *)(v2 + 8) = queueName;
  result.queueName = queueName;
  result.impressionTimeThreshold = impressionTimeThreshold;
  return result;
}

void *DynamicImpressionsTracker.__allocating_init(_:)(void *a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  v2[2] = *a1;
  v2[3] = v3;
  v2[4] = v4;
  type metadata accessor for ImpressionsTracking.AppearanceJournal();
  sub_19EE8A70C();
  uint64_t v5 = sub_19F1DBB7C();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  v2[5] = v5;
  v2[6] = v6;
  v2[7] = MEMORY[0x1E4FBC868];
  return v2;
}

void *DynamicImpressionsTracker.init(_:)(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  v1[2] = *a1;
  _OWORD v1[3] = v2;
  v1[4] = v3;
  type metadata accessor for ImpressionsTracking.AppearanceJournal();
  sub_19EE8A70C();
  uint64_t v4 = sub_19F1DBB7C();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  v1[5] = v4;
  v1[6] = v5;
  v1[7] = MEMORY[0x1E4FBC868];
  return v1;
}

uint64_t DynamicImpressionsTracker.elementDidEnterView(_:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 72);
  v26[0] = v5;
  v26[1] = v4;
  long long v26[2] = v6;
  uint64_t v26[3] = v7;
  v26[4] = v8;
  v26[5] = v9;
  v26[6] = v10;
  long long v27 = *(_OWORD *)(a1 + 56);
  uint64_t v28 = v11;
  v29[0] = v5;
  v29[1] = v4;
  _OWORD v29[2] = v6;
  v29[3] = v7;
  void v29[4] = v8;
  void v29[5] = v9;
  v29[6] = v10;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v2 + 56);
  if (!*(void *)(v12 + 16)) {
    goto LABEL_11;
  }
  if (!v4) {
    uint64_t v5 = 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_19EFB6C18(v5, v4);
  if ((v14 & 1) == 0
    || (uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        !*(void *)(v15 + 16)))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v18 = 0;
    char v19 = 1;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_19EE88F80(v29);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v19 = 0;
LABEL_12:
  swift_endAccess();
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  _OWORD v21[2] = v18;
  char v22 = v19;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  return DynamicImpressionsTracker.elementDidEnterView(_:on:with:)(v26, a2, (uint64_t)v21);
}

uint64_t DynamicImpressionsTracker.elementDidEnterView(_:on:with:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v67 = a2;
  uint64_t v7 = sub_19F1DB57C();
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *((_OWORD *)a1 + 1);
  long long v11 = *((_OWORD *)a1 + 3);
  v77[2] = *((_OWORD *)a1 + 2);
  long long v78 = v11;
  long long v79 = *((_OWORD *)a1 + 4);
  v77[0] = *(_OWORD *)a1;
  v77[1] = v10;
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v58 = a1[2];
  uint64_t v59 = v12;
  uint64_t v14 = a1[3];
  uint64_t v56 = a1[4];
  uint64_t v57 = v14;
  uint64_t v15 = a1[5];
  uint64_t v54 = a1[6];
  uint64_t v55 = v15;
  uint64_t v16 = a1[8];
  uint64_t v52 = a1[9];
  uint64_t v53 = v16;
  uint64_t v17 = *(void *)a3;
  uint64_t v18 = *(void *)(a3 + 8);
  uint64_t v19 = *(void *)(a3 + 16);
  char v20 = *(unsigned char *)(a3 + 24);
  uint64_t v65 = *(void *)(a3 + 32);
  uint64_t v66 = v17;
  uint64_t v21 = *(void *)(a3 + 40);
  uint64_t v63 = *(void *)(a3 + 48);
  uint64_t v64 = v21;
  uint64_t v22 = *(void *)(a3 + 56);
  uint64_t v61 = *(void *)(a3 + 64);
  uint64_t v62 = v22;
  uint64_t v60 = *(void *)(a3 + 72);
  long long v23 = *((_OWORD *)a1 + 1);
  v85[0] = *(_OWORD *)a1;
  v85[1] = v23;
  long long v86 = *((_OWORD *)a1 + 2);
  uint64_t v51 = a1[7];
  uint64_t v87 = a1[6];
  long long v80 = v85[0];
  long long v81 = v23;
  uint64_t v83 = v87;
  long long v24 = (uint64_t *)(v4 + 40);
  long long v82 = v86;
  swift_beginAccess();
  if (*(void *)(*(void *)(v4 + 40) + 16))
  {
    sub_19EE89A74((uint64_t)v85);
    sub_19EE88F80((uint64_t *)&v80);
    if (v25)
    {
      swift_endAccess();
      swift_retain();
      sub_19EE89AC0((uint64_t)v85);
      goto LABEL_11;
    }
    sub_19EE89AC0((uint64_t)v85);
  }
  uint64_t v49 = v13;
  swift_endAccess();
  uint64_t v26 = *((void *)&v78 + 1);
  uint64_t v84 = *((void *)&v78 + 1);
  type metadata accessor for ImpressionsTracking.AppearanceJournal();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 88) = 0u;
  *(_OWORD *)(v27 + 104) = 0u;
  *(_OWORD *)(v27 + 120) = 0u;
  *(void *)(v27 + 136) = 0;
  *(unsigned char *)(v27 + 144) = 1;
  long long v28 = v81;
  *(_OWORD *)(v27 + 16) = v80;
  *(_OWORD *)(v27 + 32) = v28;
  *(_OWORD *)(v27 + 48) = v82;
  *(void *)(v27 + 64) = v83;
  *(void *)(v27 + 72) = v26;
  *(void *)(v27 + 80) = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  sub_19EE89A74((uint64_t)v85);
  sub_19EE89A74((uint64_t)v85);
  sub_19EE9D028((uint64_t)&v84);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v68 = *v24;
  *long long v24 = 0x8000000000000000;
  sub_19EE89B0C(v27, (uint64_t)&v80, isUniquelyReferenced_nonNull_native);
  *long long v24 = v68;
  swift_bridgeObjectRelease();
  sub_19EE89AC0((uint64_t)v85);
  swift_endAccess();
  if ((v20 & 1) == 0)
  {
    long long v48 = (void *)(v4 + 48);
    swift_beginAccess();
    sub_19EFA0890((uint64_t)v77);
    unint64_t v30 = swift_bridgeObjectRetain();
    sub_19EFA057C(v30, (uint64_t *)v77);
    char v32 = v31;
    sub_19EFA0904((uint64_t)v77);
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
      sub_19EE89A74((uint64_t)v85);
      sub_19EF99238(&v80, v19, (char *)v69);
      sub_19EE89AC0((uint64_t)v85);
      if (!LOBYTE(v69[0]))
      {
        sub_19F1DB56C();
        long long v33 = self;
        long long v34 = (void *)sub_19F1DB4DC();
        id v35 = objc_msgSend(v33, sel_serverTimeFromDate_, v34);

        (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v7);
        objc_msgSend(v35, sel_doubleValue);
        uint64_t v37 = v36;

        type metadata accessor for ImpressionsTracking.DynamicChange();
        id v38 = (void *)swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D470);
        uint64_t v39 = swift_allocObject();
        *(_DWORD *)(v39 + 20) = 0;
        *(unsigned char *)(v39 + 16) = 0;
        _OWORD v38[2] = v37;
        uint64_t v40 = v59;
        v38[3] = v49;
        v38[4] = v40;
        uint64_t v41 = v57;
        v38[5] = v58;
        _OWORD v38[6] = v41;
        uint64_t v42 = v55;
        v38[7] = v56;
        v38[8] = v42;
        uint64_t v43 = v51;
        v38[9] = v54;
        v38[10] = v43;
        uint64_t v44 = v52;
        v38[11] = v53;
        v38[12] = v44;
        v38[13] = v39;
        v38[14] = 0;
        unint64_t v45 = v48;
        swift_beginAccess();
        uint64_t v46 = sub_19EFA0890((uint64_t)v77);
        MEMORY[0x19F3C6430](v46);
        if (*(void *)((*v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_19F1DC1BC();
        }
        sub_19F1DC20C();
        sub_19F1DC17C();
        swift_endAccess();
      }
    }
  }
LABEL_11:
  v69[0] = v66;
  v69[1] = v18;
  v69[2] = v19;
  char v70 = v20;
  uint64_t v71 = v65;
  uint64_t v72 = v64;
  uint64_t v73 = v63;
  uint64_t v74 = v62;
  uint64_t v75 = v61;
  uint64_t v76 = v60;
  sub_19EE89C9C(v67, v69);
  return swift_release();
}

uint64_t sub_19EF99238@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  long long v6 = a1[1];
  long long v98 = *a1;
  long long v99 = v6;
  long long v100 = a1[2];
  uint64_t v101 = *((void *)a1 + 6);
  sub_19EEBDC4C((uint64_t)&v98, (uint64_t)v102, &qword_1EB392310);
  sub_19EEBDC4C((uint64_t)v102, (uint64_t)v105, &qword_1EB392310);
  uint64_t v7 = v105[0];
  uint64_t v8 = v105[1];
  uint64_t v9 = (uint64_t *)(v3 + 56);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v3 + 56);
  if (!*(void *)(v10 + 16))
  {
LABEL_10:
    swift_endAccess();
    sub_19EEBDC4C((uint64_t)v102, (uint64_t)&v92, &qword_1EB392310);
    uint64_t v17 = v93;
    if (v93) {
      uint64_t v18 = (uint64_t)v92;
    }
    else {
      uint64_t v18 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D4B8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    uint64_t v20 = v101;
    long long v22 = v99;
    long long v21 = v100;
    *(_OWORD *)(inited + 32) = v98;
    *(_OWORD *)(inited + 48) = v22;
    *(_OWORD *)(inited + 64) = v21;
    *(void *)(inited + 80) = v20;
    *(void *)(inited + 88) = a2;
    sub_19EE9CFFC((uint64_t)v102);
    sub_19EE89A74((uint64_t)&v98);
    unint64_t v23 = sub_19EFB5094(inited);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v103 = *v9;
    *uint64_t v9 = 0x8000000000000000;
    sub_19EFBC350(v23, v18, v17, isUniquelyReferenced_nonNull_native);
    uint64_t v25 = v103;
LABEL_14:
    *uint64_t v9 = v25;
    swift_bridgeObjectRelease();
LABEL_15:
    sub_19EE9C9AC((uint64_t)v102);
LABEL_16:
    uint64_t result = swift_endAccess();
    char v27 = 3;
LABEL_17:
    *a3 = v27;
    return result;
  }
  if (v8) {
    uint64_t v11 = v7;
  }
  else {
    uint64_t v11 = 0;
  }
  sub_19EE9CFFC((uint64_t)v102);
  unint64_t v12 = sub_19EFB6C18(v11, v8);
  if ((v13 & 1) == 0)
  {
    sub_19EE9C9AC((uint64_t)v102);
    goto LABEL_10;
  }
  uint64_t v14 = *(void *)(*(void *)(v10 + 56) + 8 * v12);
  swift_endAccess();
  swift_bridgeObjectRetain();
  sub_19EE9C9AC((uint64_t)v102);
  if (*(void *)(v14 + 16))
  {
    sub_19EE89A74((uint64_t)&v98);
    sub_19EE88F80((uint64_t *)&v98);
    char v16 = v15;
    sub_19EE89AC0((uint64_t)&v98);
    if (v16)
    {
      swift_bridgeObjectRelease();
      goto LABEL_80;
    }
  }
  uint64_t v88 = a3;
  int64_t v28 = 0;
  uint64_t v29 = v14 + 64;
  uint64_t v30 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v31 = -1;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  unint64_t v32 = v31 & *(void *)(v14 + 64);
  int64_t v33 = (unint64_t)(v30 + 63) >> 6;
  do
  {
    if (v32)
    {
      unint64_t v34 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      unint64_t v35 = v34 | (v28 << 6);
    }
    else
    {
      int64_t v36 = v28 + 1;
      if (__OFADD__(v28, 1))
      {
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      if (v36 >= v33) {
        goto LABEL_79;
      }
      unint64_t v37 = *(void *)(v29 + 8 * v36);
      ++v28;
      if (!v37)
      {
        int64_t v28 = v36 + 1;
        if (v36 + 1 >= v33) {
          goto LABEL_79;
        }
        unint64_t v37 = *(void *)(v29 + 8 * v28);
        if (!v37)
        {
          int64_t v28 = v36 + 2;
          if (v36 + 2 >= v33) {
            goto LABEL_79;
          }
          unint64_t v37 = *(void *)(v29 + 8 * v28);
          if (!v37)
          {
            int64_t v28 = v36 + 3;
            if (v36 + 3 >= v33) {
              goto LABEL_79;
            }
            unint64_t v37 = *(void *)(v29 + 8 * v28);
            if (!v37)
            {
              int64_t v28 = v36 + 4;
              if (v36 + 4 >= v33) {
                goto LABEL_79;
              }
              unint64_t v37 = *(void *)(v29 + 8 * v28);
              if (!v37)
              {
                int64_t v38 = v36 + 5;
                if (v38 >= v33) {
                  goto LABEL_79;
                }
                unint64_t v37 = *(void *)(v29 + 8 * v38);
                int64_t v28 = v38;
                if (!v37)
                {
                  while (1)
                  {
                    int64_t v28 = v38 + 1;
                    if (__OFADD__(v38, 1)) {
                      goto LABEL_95;
                    }
                    if (v28 >= v33) {
                      break;
                    }
                    unint64_t v37 = *(void *)(v29 + 8 * v28);
                    ++v38;
                    if (v37) {
                      goto LABEL_40;
                    }
                  }
LABEL_79:
                  swift_release();
LABEL_80:
                  sub_19EEBDC4C((uint64_t)v102, (uint64_t)&v92, &qword_1EB392310);
                  uint64_t v75 = (uint64_t)v92;
                  uint64_t v76 = v93;
                  swift_beginAccess();
                  uint64_t v77 = *v9;
                  if (*(void *)(*v9 + 16))
                  {
                    if (v76) {
                      uint64_t v78 = v75;
                    }
                    else {
                      uint64_t v78 = 0;
                    }
                    sub_19EE9CFFC((uint64_t)v102);
                    unint64_t v79 = sub_19EFB6C18(v78, v76);
                    if (v80)
                    {
                      uint64_t v81 = *(void *)(*(void *)(v77 + 56) + 8 * v79);
                      swift_endAccess();
                      swift_bridgeObjectRetain();
                      sub_19EE9C9AC((uint64_t)v102);
                      sub_19EE89A74((uint64_t)&v98);
                      char v82 = swift_isUniquelyReferenced_nonNull_native();
                      *(void *)&long long v94 = v81;
                      sub_19EFBC4C8(a2, (uint64_t)&v98, v82);
                      uint64_t v83 = v94;
                      swift_bridgeObjectRelease();
                      sub_19EE89AC0((uint64_t)&v98);
                      sub_19EEBDC4C((uint64_t)v102, (uint64_t)&v103, &qword_1EB392310);
                      uint64_t v84 = v104;
                      if (v104) {
                        uint64_t v85 = v103;
                      }
                      else {
                        uint64_t v85 = 0;
                      }
                      swift_beginAccess();
                      sub_19EE9CFFC((uint64_t)v102);
                      char v86 = swift_isUniquelyReferenced_nonNull_native();
                      uint64_t v91 = *v9;
                      *uint64_t v9 = 0x8000000000000000;
                      sub_19EFBC350(v83, v85, v84, v86);
                      uint64_t v25 = v91;
                      goto LABEL_14;
                    }
                    goto LABEL_15;
                  }
                  goto LABEL_16;
                }
              }
            }
          }
        }
      }
LABEL_40:
      unint64_t v32 = (v37 - 1) & v37;
      unint64_t v35 = __clz(__rbit64(v37)) + (v28 << 6);
    }
  }
  while (*(void *)(*(void *)(v14 + 56) + 8 * v35) != a2);
  uint64_t v87 = v9;
  int64_t v39 = 0;
  uint64_t v40 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v41 = -1;
  if (v40 < 64) {
    uint64_t v41 = ~(-1 << v40);
  }
  unint64_t v42 = v41 & *(void *)(v14 + 64);
  int64_t v89 = (unint64_t)(v40 + 63) >> 6;
  uint64_t v43 = (void *)MEMORY[0x1E4FBC868];
  while (v42)
  {
    unint64_t v44 = __clz(__rbit64(v42));
    v42 &= v42 - 1;
    unint64_t v45 = v44 | (v39 << 6);
LABEL_62:
    uint64_t v49 = *(void *)(v14 + 56);
    uint64_t v50 = *(void *)(v14 + 48) + 56 * v45;
    uint64_t v51 = *(void *)(v50 + 48);
    long long v52 = *(_OWORD *)(v50 + 32);
    long long v53 = *(_OWORD *)v50;
    long long v95 = *(_OWORD *)(v50 + 16);
    long long v96 = v52;
    long long v94 = v53;
    uint64_t v97 = v51;
    uint64_t v54 = *(void *)(v49 + 8 * v45);
    if (v54 >= a2)
    {
      BOOL v55 = __OFADD__(v54++, 1);
      if (v55) {
        goto LABEL_90;
      }
    }
    sub_19EE89A74((uint64_t)&v94);
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v92 = v43;
    unint64_t v58 = sub_19EE88F80((uint64_t *)&v94);
    uint64_t v59 = v43[2];
    BOOL v60 = (v57 & 1) == 0;
    uint64_t v61 = v59 + v60;
    if (__OFADD__(v59, v60))
    {
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    char v62 = v57;
    if (v43[3] >= v61)
    {
      if (v56)
      {
        uint64_t v43 = v92;
        if (v57) {
          goto LABEL_44;
        }
      }
      else
      {
        sub_19EFBEDD4();
        uint64_t v43 = v92;
        if (v62) {
          goto LABEL_44;
        }
      }
    }
    else
    {
      sub_19EFB9CE0(v61, v56);
      unint64_t v63 = sub_19EE88F80((uint64_t *)&v94);
      if ((v62 & 1) != (v64 & 1)) {
        goto LABEL_96;
      }
      unint64_t v58 = v63;
      uint64_t v43 = v92;
      if (v62)
      {
LABEL_44:
        *(void *)(v43[7] + 8 * v58) = v54;
        goto LABEL_45;
      }
    }
    v43[(v58 >> 6) + 8] |= 1 << v58;
    uint64_t v65 = v43[6] + 56 * v58;
    long long v66 = v94;
    long long v67 = v95;
    long long v68 = v96;
    *(void *)(v65 + 48) = v97;
    *(_OWORD *)(v65 + 16) = v67;
    *(_OWORD *)(v65 + 32) = v68;
    *(_OWORD *)uint64_t v65 = v66;
    *(void *)(v43[7] + 8 * v58) = v54;
    uint64_t v69 = v43[2];
    BOOL v55 = __OFADD__(v69, 1);
    uint64_t v70 = v69 + 1;
    if (v55) {
      goto LABEL_91;
    }
    _OWORD v43[2] = v70;
    sub_19EE89A74((uint64_t)&v94);
LABEL_45:
    swift_bridgeObjectRelease();
    sub_19EE89AC0((uint64_t)&v94);
  }
  int64_t v46 = v39 + 1;
  if (__OFADD__(v39, 1)) {
    goto LABEL_92;
  }
  if (v46 >= v89)
  {
LABEL_75:
    swift_release();
    sub_19EE89A74((uint64_t)&v98);
    char v71 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v92 = v43;
    sub_19EFBC4C8(a2, (uint64_t)&v98, v71);
    swift_bridgeObjectRelease();
    sub_19EE89AC0((uint64_t)&v98);
    sub_19EEBDC4C((uint64_t)v102, (uint64_t)&v103, &qword_1EB392310);
    uint64_t v72 = v104;
    if (v104) {
      uint64_t v73 = v103;
    }
    else {
      uint64_t v73 = 0;
    }
    swift_beginAccess();
    sub_19EE9CFFC((uint64_t)v102);
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v90 = *v87;
    *uint64_t v87 = 0x8000000000000000;
    sub_19EFBC350((uint64_t)v43, v73, v72, v74);
    *uint64_t v87 = v90;
    swift_bridgeObjectRelease();
    sub_19EE9C9AC((uint64_t)v102);
    uint64_t result = swift_endAccess();
    char v27 = 0;
    a3 = v88;
    goto LABEL_17;
  }
  unint64_t v47 = *(void *)(v29 + 8 * v46);
  ++v39;
  if (v47) {
    goto LABEL_61;
  }
  int64_t v39 = v46 + 1;
  if (v46 + 1 >= v89) {
    goto LABEL_75;
  }
  unint64_t v47 = *(void *)(v29 + 8 * v39);
  if (v47) {
    goto LABEL_61;
  }
  int64_t v39 = v46 + 2;
  if (v46 + 2 >= v89) {
    goto LABEL_75;
  }
  unint64_t v47 = *(void *)(v29 + 8 * v39);
  if (v47)
  {
LABEL_61:
    unint64_t v42 = (v47 - 1) & v47;
    unint64_t v45 = __clz(__rbit64(v47)) + (v39 << 6);
    goto LABEL_62;
  }
  int64_t v48 = v46 + 3;
  if (v48 >= v89) {
    goto LABEL_75;
  }
  unint64_t v47 = *(void *)(v29 + 8 * v48);
  if (v47)
  {
    int64_t v39 = v48;
    goto LABEL_61;
  }
  while (1)
  {
    int64_t v39 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v39 >= v89) {
      goto LABEL_75;
    }
    unint64_t v47 = *(void *)(v29 + 8 * v39);
    ++v48;
    if (v47) {
      goto LABEL_61;
    }
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t DynamicImpressionsTracker.elementDidLeaveView(_:on:)(long long *a1, uint64_t a2)
{
  uint64_t v2 = *((void *)a1 + 3);
  uint64_t v3 = *((void *)a1 + 6);
  uint64_t v4 = *((void *)a1 + 9);
  long long v5 = *a1;
  uint64_t v13 = *((void *)a1 + 2);
  uint64_t v14 = v2;
  long long v15 = a1[2];
  uint64_t v16 = v3;
  long long v17 = *(long long *)((char *)a1 + 56);
  uint64_t v18 = v4;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  v7[2] = 0;
  char v8 = 1;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = v5;
  return DynamicImpressionsTracker.elementDidLeaveView(_:on:with:)((uint64_t)&v12, a2, (uint64_t)v7);
}

uint64_t DynamicImpressionsTracker.elementDidLeaveView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v26[0] = *(_OWORD *)a1;
  v26[1] = v4;
  long long v26[2] = *(_OWORD *)(a1 + 32);
  uint64_t v27 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t v16 = *(void *)a3;
  uint64_t v6 = *(void *)(a3 + 16);
  char v7 = *(unsigned char *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = *(void *)(a3 + 40);
  uint64_t v10 = *(void *)(a3 + 48);
  uint64_t v11 = *(void *)(a3 + 56);
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v12 = *(void *)(a3 + 72);
  swift_beginAccess();
  if (*(void *)(*(void *)(v3 + 40) + 16))
  {
    sub_19EE89A74((uint64_t)v26);
    sub_19EE88F80((uint64_t *)v26);
    if (v14)
    {
      swift_endAccess();
      swift_retain();
      sub_19EE89AC0((uint64_t)v26);
      v18[0] = v16;
      v18[1] = v5;
      uint64_t v18[2] = v6;
      char v19 = v7;
      uint64_t v20 = v8;
      uint64_t v21 = v9;
      uint64_t v22 = v10;
      uint64_t v23 = v11;
      uint64_t v24 = v13;
      uint64_t v25 = v12;
      sub_19F022CA0(a2, v18);
      return swift_release();
    }
    sub_19EE89AC0((uint64_t)v26);
  }
  return swift_endAccess();
}

uint64_t DynamicImpressionsTracker.didDeleteElement(_:on:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  int64_t v5 = a1[4];
  uint64_t v72 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v6 = a1[7];
  uint64_t v8 = a1[8];
  uint64_t v68 = a1[9];
  uint64_t v9 = self;
  uint64_t v10 = (void *)sub_19F1DB4DC();
  id v11 = objc_msgSend(v9, sel_serverTimeFromDate_, v10);

  objc_msgSend(v11, sel_doubleValue);
  uint64_t v13 = v12;

  type metadata accessor for ImpressionsTracking.DynamicChange();
  char v14 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D470);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 20) = 0;
  *(unsigned char *)(v15 + 16) = 2;
  _OWORD v14[2] = v13;
  uint64_t v70 = v3;
  uint64_t v71 = v1;
  void v14[3] = v1;
  v14[4] = v2;
  v14[5] = v3;
  v14[6] = v4;
  uint64_t v16 = v2;
  int64_t v75 = v5;
  v14[7] = v5;
  uint64_t v18 = v72;
  unint64_t v17 = v73;
  v14[8] = v72;
  v14[9] = v7;
  v14[10] = v6;
  v14[11] = v8;
  v14[12] = v68;
  v14[13] = v15;
  v14[14] = 0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_bridgeObjectRetain();
  MEMORY[0x19F3C6430](v19);
  if (*(void *)((*(void *)(v17 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v17 + 48) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
LABEL_59:
    sub_19F1DC1BC();
  sub_19F1DC20C();
  sub_19F1DC17C();
  swift_endAccess();
  uint64_t v21 = v70;
  uint64_t v20 = v71;
  v80[0] = v71;
  v80[1] = v16;
  _OWORD v80[2] = v70;
  v80[3] = v4;
  uint64_t v67 = v4;
  v80[4] = v75;
  uint64_t v80[5] = v18;
  if (v16) {
    uint64_t v22 = v71;
  }
  else {
    uint64_t v22 = 0;
  }
  v80[6] = v7;
  swift_beginAccess();
  uint64_t v23 = *(void *)(v17 + 56);
  if (!*(void *)(v23 + 16)) {
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_19EFB6C18(v22, v16);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  uint64_t v64 = v22;
  uint64_t v18 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(void *)(v18 + 16)) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v63 = (uint64_t *)(v17 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_19EE88F80(v80);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v66 = *(void *)(*(void *)(v18 + 56) + 8 * v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v28 = 0;
  uint64_t v74 = v18 + 64;
  uint64_t v29 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  unint64_t v17 = v30 & *(void *)(v18 + 64);
  int64_t v75 = (unint64_t)(v29 + 63) >> 6;
  uint64_t v69 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v31 = v72;
  uint64_t v65 = v7;
  while (1)
  {
    if (v17)
    {
      unint64_t v32 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v33 = v32 | (v28 << 6);
      goto LABEL_29;
    }
    int64_t v34 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    if (v34 >= v75) {
      goto LABEL_57;
    }
    unint64_t v35 = *(void *)(v74 + 8 * v34);
    ++v28;
    if (!v35)
    {
      int64_t v28 = v34 + 1;
      if (v34 + 1 >= v75) {
        goto LABEL_57;
      }
      unint64_t v35 = *(void *)(v74 + 8 * v28);
      if (!v35)
      {
        int64_t v28 = v34 + 2;
        if (v34 + 2 >= v75) {
          goto LABEL_57;
        }
        unint64_t v35 = *(void *)(v74 + 8 * v28);
        if (!v35) {
          break;
        }
      }
    }
LABEL_28:
    unint64_t v17 = (v35 - 1) & v35;
    unint64_t v33 = __clz(__rbit64(v35)) + (v28 << 6);
LABEL_29:
    uint64_t v37 = *(void *)(v18 + 56);
    uint64_t v38 = *(void *)(v18 + 48) + 56 * v33;
    long long v39 = *(_OWORD *)v38;
    long long v40 = *(_OWORD *)(v38 + 16);
    long long v41 = *(_OWORD *)(v38 + 32);
    uint64_t v42 = *(void *)(v38 + 48);
    long long v78 = v40;
    v79[0] = v41;
    *(void *)&v79[1] = v42;
    long long v77 = v39;
    uint64_t v43 = *(void *)(v37 + 8 * v33);
    if (v40 == __PAIR128__(v4, v21) || (sub_19F1DD44C() & 1) != 0)
    {
      if (*((void *)&v77 + 1))
      {
        if (!v16 || v77 != __PAIR128__(v16, v20) && (sub_19F1DD44C() & 1) == 0) {
          goto LABEL_41;
        }
      }
      else if (v16)
      {
        goto LABEL_41;
      }
      if (*(void *)&v79[1])
      {
        if (!v7 || *(_OWORD *)((char *)v79 + 8) != __PAIR128__(v7, v31) && (sub_19F1DD44C() & 1) == 0) {
          goto LABEL_41;
        }
      }
      else if (v7)
      {
        goto LABEL_41;
      }
    }
    else
    {
LABEL_41:
      sub_19EE89A74((uint64_t)&v77);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v46 = sub_19EE88F80((uint64_t *)&v77);
      uint64_t v47 = v69[2];
      BOOL v48 = (v45 & 1) == 0;
      uint64_t v49 = v47 + v48;
      if (__OFADD__(v47, v48)) {
        goto LABEL_61;
      }
      char v50 = v45;
      if (v69[3] >= v49)
      {
        uint64_t v31 = v72;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19EFBEDD4();
          uint64_t v31 = v72;
        }
        uint64_t v7 = v65;
      }
      else
      {
        sub_19EFB9CE0(v49, isUniquelyReferenced_nonNull_native);
        unint64_t v51 = sub_19EE88F80((uint64_t *)&v77);
        if ((v50 & 1) != (v52 & 1)) {
          goto LABEL_63;
        }
        unint64_t v46 = v51;
        uint64_t v7 = v65;
        uint64_t v31 = v72;
      }
      uint64_t v53 = v43 - (v66 < v43);
      if (v50)
      {
        *(void *)(v69[7] + 8 * v46) = v53;
        uint64_t v4 = v67;
      }
      else
      {
        v69[(v46 >> 6) + 8] |= 1 << v46;
        uint64_t v54 = v69[6] + 56 * v46;
        long long v55 = v77;
        long long v56 = v78;
        long long v57 = v79[0];
        *(void *)(v54 + 48) = *(void *)&v79[1];
        *(_OWORD *)(v54 + 16) = v56;
        *(_OWORD *)(v54 + 32) = v57;
        *(_OWORD *)uint64_t v54 = v55;
        *(void *)(v69[7] + 8 * v46) = v53;
        uint64_t v58 = v69[2];
        BOOL v59 = __OFADD__(v58, 1);
        uint64_t v60 = v58 + 1;
        uint64_t v4 = v67;
        if (v59) {
          goto LABEL_62;
        }
        v69[2] = v60;
        sub_19EE89A74((uint64_t)&v77);
      }
      uint64_t v21 = v70;
      uint64_t v20 = v71;
      swift_bridgeObjectRelease();
      sub_19EE89AC0((uint64_t)&v77);
    }
  }
  int64_t v36 = v34 + 3;
  if (v36 >= v75)
  {
LABEL_57:
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char v62 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v76 = *v63;
    *unint64_t v63 = 0x8000000000000000;
    sub_19EFBC350((uint64_t)v69, v64, v16, v62);
    *unint64_t v63 = v76;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  unint64_t v35 = *(void *)(v74 + 8 * v36);
  if (v35)
  {
    int64_t v28 = v36;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v28 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v28 >= v75) {
      goto LABEL_57;
    }
    unint64_t v35 = *(void *)(v74 + 8 * v28);
    ++v36;
    if (v35) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t DynamicImpressionsTracker.didMoveElement(_:on:to:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = a1[5];
  uint64_t v11 = a1[6];
  uint64_t v12 = a1[7];
  uint64_t v14 = a1[8];
  uint64_t v13 = a1[9];
  v117[0] = *a1;
  v117[1] = v6;
  uint64_t v104 = v9;
  uint64_t v105 = v7;
  v117[2] = v7;
  v117[3] = v8;
  v117[4] = v9;
  v117[5] = v10;
  uint64_t v103 = v10;
  if (v6) {
    uint64_t v15 = v5;
  }
  else {
    uint64_t v15 = 0;
  }
  v109 = (unint64_t *)(v3 + 56);
  uint64_t v110 = v11;
  v117[6] = v11;
  swift_beginAccess();
  uint64_t v16 = *(void *)(v3 + 56);
  uint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  uint64_t v106 = v5;
  uint64_t v102 = v15;
  if (v17)
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_19EFB6C18(v15, v6);
    if (v19)
    {
      uint64_t v20 = *(void *)(*(void *)(v16 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(void *)(v20 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v21 = sub_19EE88F80(v117);
        if (v22)
        {
          uint64_t v112 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v23 = 0;
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v112 = 0;
  char v23 = 1;
LABEL_13:
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  *(void *)(inited + 32) = 0x7469736F50646E65;
  *(void *)(inited + 40) = 0xEB000000006E6F69;
  uint64_t v25 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 72) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 48) = a3;
  unint64_t v108 = sub_19EEBF898(inited);
  swift_beginAccess();
  unint64_t v26 = *v109;
  uint64_t v107 = v12;
  if (*(void *)(*v109 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_19EFB6C18(v15, v6);
    if (v28)
    {
      uint64_t v100 = v14;
      uint64_t v101 = v13;
      uint64_t v29 = *(void *)(*(void *)(v26 + 56) + 8 * v27);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v112 == a3) {
        char v30 = 1;
      }
      else {
        char v30 = v23;
      }
      if (v30)
      {
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v32 = sub_19EF9AC34(&v118, v15, v6);
        if (*v31)
        {
          unint64_t v33 = v31;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v116 = *v33;
          *unint64_t v33 = 0x8000000000000000;
          sub_19EFBC4C8(a3, (uint64_t)v117, isUniquelyReferenced_nonNull_native);
          *unint64_t v33 = v116;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        ((void (*)(long long *, void))v32)(&v118, 0);
        swift_endAccess();
        swift_bridgeObjectRelease_n();
LABEL_80:
        uint64_t v14 = v100;
        uint64_t v13 = v101;
        goto LABEL_81;
      }
      uint64_t v97 = v6;
      uint64_t v98 = v8;
      uint64_t v99 = v4;
      *((void *)&v119 + 1) = v25;
      *(void *)&long long v118 = v112;
      sub_19EEBDC00(&v118, v115);
      char v35 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v116 = v108;
      sub_19EE7DA20(v115, 0x736F507472617473, 0xED00006E6F697469, v35);
      unint64_t v36 = v116;
      swift_bridgeObjectRelease();
      uint64_t v37 = a3;
      uint64_t v38 = v112;
      if (v112 > a3) {
        goto LABEL_28;
      }
      uint64_t v37 = v112 + 1;
      if (__OFADD__(v112, 1)) {
        goto LABEL_91;
      }
      uint64_t v38 = a3 + 1;
      if (__OFADD__(a3, 1))
      {
LABEL_92:
        __break(1u);
      }
      else if (v38 >= v37)
      {
LABEL_28:
        unint64_t v108 = v36;
        int64_t v39 = 0;
        uint64_t v111 = v29 + 64;
        uint64_t v40 = 1 << *(unsigned char *)(v29 + 32);
        uint64_t v41 = -1;
        if (v40 < 64) {
          uint64_t v41 = ~(-1 << v40);
        }
        unint64_t v42 = v41 & *(void *)(v29 + 64);
        int64_t v113 = (unint64_t)(v40 + 63) >> 6;
        uint64_t v43 = (void *)MEMORY[0x1E4FBC868];
        while (1)
        {
          if (v42)
          {
            unint64_t v44 = __clz(__rbit64(v42));
            v42 &= v42 - 1;
            unint64_t v45 = v44 | (v39 << 6);
          }
          else
          {
            int64_t v46 = v39 + 1;
            if (__OFADD__(v39, 1)) {
              goto LABEL_85;
            }
            if (v46 >= v113)
            {
LABEL_79:
              swift_release();
              swift_bridgeObjectRetain();
              uint64_t v6 = v97;
              swift_bridgeObjectRetain();
              uint64_t v8 = v98;
              swift_bridgeObjectRetain();
              char v85 = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&v115[0] = v43;
              sub_19EFBC4C8(a3, (uint64_t)v117, v85);
              uint64_t v86 = *(void *)&v115[0];
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_beginAccess();
              char v87 = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v116 = *v109;
              unint64_t *v109 = 0x8000000000000000;
              sub_19EFBC350(v86, v102, v97, v87);
              unint64_t *v109 = v116;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_endAccess();
              uint64_t v4 = v99;
              goto LABEL_80;
            }
            unint64_t v47 = *(void *)(v111 + 8 * v46);
            ++v39;
            if (!v47)
            {
              int64_t v39 = v46 + 1;
              if (v46 + 1 >= v113) {
                goto LABEL_79;
              }
              unint64_t v47 = *(void *)(v111 + 8 * v39);
              if (!v47)
              {
                int64_t v39 = v46 + 2;
                if (v46 + 2 >= v113) {
                  goto LABEL_79;
                }
                unint64_t v47 = *(void *)(v111 + 8 * v39);
                if (!v47)
                {
                  int64_t v48 = v46 + 3;
                  if (v48 >= v113) {
                    goto LABEL_79;
                  }
                  unint64_t v47 = *(void *)(v111 + 8 * v48);
                  if (!v47)
                  {
                    while (1)
                    {
                      int64_t v39 = v48 + 1;
                      if (__OFADD__(v48, 1)) {
                        break;
                      }
                      if (v39 >= v113) {
                        goto LABEL_79;
                      }
                      unint64_t v47 = *(void *)(v111 + 8 * v39);
                      ++v48;
                      if (v47) {
                        goto LABEL_48;
                      }
                    }
                    __break(1u);
LABEL_91:
                    __break(1u);
                    goto LABEL_92;
                  }
                  int64_t v39 = v48;
                }
              }
            }
LABEL_48:
            unint64_t v42 = (v47 - 1) & v47;
            unint64_t v45 = __clz(__rbit64(v47)) + (v39 << 6);
          }
          uint64_t v49 = *(void *)(v29 + 56);
          uint64_t v50 = *(void *)(v29 + 48) + 56 * v45;
          uint64_t v51 = *(void *)(v50 + 48);
          long long v52 = *(_OWORD *)(v50 + 32);
          long long v53 = *(_OWORD *)v50;
          long long v119 = *(_OWORD *)(v50 + 16);
          long long v120 = v52;
          long long v118 = v53;
          uint64_t v121 = v51;
          uint64_t v54 = *(void *)(v49 + 8 * v45);
          if (v54 >= v37 && v54 < v38)
          {
            if (v112 <= a3)
            {
              BOOL v65 = __OFSUB__(v54--, 1);
              if (v65) {
                goto LABEL_86;
              }
            }
            else
            {
              ++v54;
            }
            sub_19EE89A74((uint64_t)&v118);
            char v66 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&v115[0] = v43;
            unint64_t v58 = sub_19EE88F80((uint64_t *)&v118);
            uint64_t v68 = v43[2];
            BOOL v69 = (v67 & 1) == 0;
            uint64_t v70 = v68 + v69;
            if (__OFADD__(v68, v69)) {
              goto LABEL_84;
            }
            char v71 = v67;
            if (v43[3] >= v70)
            {
              if (v66)
              {
                uint64_t v43 = *(void **)&v115[0];
                if (v67) {
                  goto LABEL_31;
                }
              }
              else
              {
                sub_19EFBEDD4();
                uint64_t v43 = *(void **)&v115[0];
                if (v71) {
                  goto LABEL_31;
                }
              }
            }
            else
            {
              sub_19EFB9CE0(v70, v66);
              unint64_t v72 = sub_19EE88F80((uint64_t *)&v118);
              if ((v71 & 1) != (v73 & 1)) {
                goto LABEL_94;
              }
              unint64_t v58 = v72;
              uint64_t v43 = *(void **)&v115[0];
              if (v71)
              {
LABEL_31:
                *(void *)(v43[7] + 8 * v58) = v54;
                goto LABEL_32;
              }
            }
            v43[(v58 >> 6) + 8] |= 1 << v58;
            uint64_t v80 = v43[6] + 56 * v58;
            long long v81 = v118;
            long long v82 = v119;
            long long v83 = v120;
            *(void *)(v80 + 48) = v121;
            *(_OWORD *)(v80 + 16) = v82;
            *(_OWORD *)(v80 + 32) = v83;
            *(_OWORD *)uint64_t v80 = v81;
            *(void *)(v43[7] + 8 * v58) = v54;
            uint64_t v84 = v43[2];
            BOOL v65 = __OFADD__(v84, 1);
            uint64_t v79 = v84 + 1;
            if (v65) {
              goto LABEL_88;
            }
          }
          else
          {
            sub_19EE89A74((uint64_t)&v118);
            char v56 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&v115[0] = v43;
            unint64_t v58 = sub_19EE88F80((uint64_t *)&v118);
            uint64_t v59 = v43[2];
            BOOL v60 = (v57 & 1) == 0;
            uint64_t v61 = v59 + v60;
            if (__OFADD__(v59, v60))
            {
              __break(1u);
LABEL_84:
              __break(1u);
LABEL_85:
              __break(1u);
LABEL_86:
              __break(1u);
LABEL_87:
              __break(1u);
LABEL_88:
              __break(1u);
              goto LABEL_89;
            }
            char v62 = v57;
            if (v43[3] >= v61)
            {
              if (v56)
              {
                uint64_t v43 = *(void **)&v115[0];
                if (v57) {
                  goto LABEL_31;
                }
              }
              else
              {
                sub_19EFBEDD4();
                uint64_t v43 = *(void **)&v115[0];
                if (v62) {
                  goto LABEL_31;
                }
              }
            }
            else
            {
              sub_19EFB9CE0(v61, v56);
              unint64_t v63 = sub_19EE88F80((uint64_t *)&v118);
              if ((v62 & 1) != (v64 & 1)) {
                goto LABEL_94;
              }
              unint64_t v58 = v63;
              uint64_t v43 = *(void **)&v115[0];
              if (v62) {
                goto LABEL_31;
              }
            }
            v43[(v58 >> 6) + 8] |= 1 << v58;
            uint64_t v74 = v43[6] + 56 * v58;
            long long v75 = v118;
            long long v76 = v119;
            long long v77 = v120;
            *(void *)(v74 + 48) = v121;
            *(_OWORD *)(v74 + 16) = v76;
            *(_OWORD *)(v74 + 32) = v77;
            *(_OWORD *)uint64_t v74 = v75;
            *(void *)(v43[7] + 8 * v58) = v54;
            uint64_t v78 = v43[2];
            BOOL v65 = __OFADD__(v78, 1);
            uint64_t v79 = v78 + 1;
            if (v65) {
              goto LABEL_87;
            }
          }
          _OWORD v43[2] = v79;
          sub_19EE89A74((uint64_t)&v118);
LABEL_32:
          swift_bridgeObjectRelease();
          sub_19EE89AC0((uint64_t)&v118);
        }
      }
      __break(1u);
LABEL_94:
      uint64_t result = sub_19F1DD65C();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
LABEL_81:
  uint64_t v88 = self;
  int64_t v89 = (void *)sub_19F1DB4DC();
  id v90 = objc_msgSend(v88, sel_serverTimeFromDate_, v89);

  objc_msgSend(v90, sel_doubleValue);
  uint64_t v92 = v91;

  type metadata accessor for ImpressionsTracking.DynamicChange();
  uint64_t v93 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D470);
  uint64_t v94 = swift_allocObject();
  *(_DWORD *)(v94 + 20) = 0;
  *(unsigned char *)(v94 + 16) = 1;
  void v93[2] = v92;
  _OWORD v93[3] = v106;
  v93[4] = v6;
  v93[5] = v105;
  v93[6] = v8;
  v93[7] = v104;
  v93[8] = v103;
  v93[9] = v110;
  v93[10] = v107;
  v93[11] = v14;
  v93[12] = v13;
  v93[13] = v94;
  v93[14] = v108;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v95 = swift_bridgeObjectRetain();
  MEMORY[0x19F3C6430](v95);
  if (*(void *)((*(void *)(v4 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v4 + 48) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
LABEL_89:
    sub_19F1DC1BC();
  sub_19F1DC20C();
  sub_19F1DC17C();
  return swift_endAccess();
}

void (*sub_19EF9AC34(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  _OWORD v6[4] = a3;
  swift_bridgeObjectRetain();
  uint64_t v6[5] = sub_19EF9F594(v6, a2, a3);
  return sub_19EF9ACB4;
}

void sub_19EF9ACB4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t DynamicImpressionsTracker.snapshotOnScreenImpressions(in:on:)(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v47 = *a1;
  unint64_t v51 = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  sub_19EF9F4D4(*(void *)(*((void *)v2 + 5) + 16), 0);
  sub_19F1DC17C();
  uint64_t v4 = *((void *)v2 + 5);
  uint64_t v5 = v4 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v4 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_20;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_45;
    }
    if (v13 >= v9) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v9) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v9) {
          goto LABEL_25;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_20:
    uint64_t v16 = *(void *)(*(void *)(v4 + 56) + 8 * v12);
    swift_beginAccess();
    uint64_t v17 = *(void *)(v16 + 80);
    uint64_t v18 = *(void *)(v17 + 16);
    if (!v18 || (*(unsigned char *)(32 * v18 + v17) & 1) == 0)
    {
      uint64_t v19 = swift_retain_n();
      MEMORY[0x19F3C6430](v19);
      if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_19F1DC1BC();
      }
      sub_19F1DC20C();
      sub_19F1DC17C();
      swift_release();
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    goto LABEL_25;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      goto LABEL_46;
    }
    if (v10 >= v9) {
      break;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_25:
  swift_release();
  uint64_t v37 = *((void *)v2 + 4);
  uint64_t v38 = *((void *)v2 + 3);
  unint64_t v39 = v51;
  double v3 = v2[2];
  unsigned __int8 v50 = v47;
  swift_beginAccess();
  unint64_t v8 = *((void *)v2 + 6);
  if (v8 >> 62) {
    goto LABEL_47;
  }
  uint64_t v20 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v20)
  {
LABEL_27:
    unint64_t v48 = v8 & 0xC000000000000001;
    uint64_t v42 = v20;
    uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v21 = 4;
    unint64_t v41 = v8;
    while (1)
    {
      uint64_t v22 = v21 - 4;
      if (v48)
      {
        uint64_t v23 = MEMORY[0x19F3C7060](v21 - 4, v8);
        uint64_t v24 = v21 - 3;
        if (__OFADD__(v22, 1)) {
          goto LABEL_44;
        }
      }
      else
      {
        uint64_t v23 = *(void *)(v8 + 8 * v21);
        swift_retain();
        uint64_t v24 = v21 - 3;
        if (__OFADD__(v22, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          swift_bridgeObjectRetain_n();
          uint64_t v20 = sub_19F1DD03C();
          swift_bridgeObjectRelease();
          if (!v20) {
            break;
          }
          goto LABEL_27;
        }
      }
      uint64_t v25 = *(void *)(v23 + 48);
      if (v25)
      {
        uint64_t v44 = *(void *)(v23 + 24);
        long long v45 = *(_OWORD *)(v23 + 56);
        long long v46 = *(_OWORD *)(v23 + 32);
        uint64_t v26 = *(void *)(v23 + 72);
        uint64_t v27 = *(void *)(v23 + 104);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        os_unfair_lock_lock((os_unfair_lock_t)(v27 + 20));
        sub_19EEC4E5C((unsigned char *)(v27 + 16), &v49);
        os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 20));
        swift_release();
        int v28 = v49;
        swift_release();
        if (v28)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v8 = v41;
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v43 = sub_19F09CDC8(0, v43[2] + 1, 1, v43);
          }
          unint64_t v8 = v41;
          unint64_t v30 = v43[2];
          unint64_t v29 = v43[3];
          long long v32 = v45;
          long long v31 = v46;
          if (v30 >= v29 >> 1)
          {
            int64_t v34 = sub_19F09CDC8((void *)(v29 > 1), v30 + 1, 1, v43);
            long long v32 = v45;
            long long v31 = v46;
            uint64_t v43 = v34;
          }
          _OWORD v43[2] = v30 + 1;
          unint64_t v33 = &v43[7 * v30];
          _OWORD v33[4] = v44;
          *(_OWORD *)(v33 + 5) = v31;
          v33[7] = v25;
          *((_OWORD *)v33 + 4) = v32;
          v33[10] = v26;
        }
        uint64_t v20 = v42;
      }
      else
      {
        swift_release();
      }
      ++v21;
      if (v24 == v20) {
        goto LABEL_49;
      }
    }
  }
  uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
LABEL_49:
  swift_bridgeObjectRelease_n();
  uint64_t v35 = _s9JetEngine19ImpressionsTrackingO09serializeC02on4from6within2inAE9excludingSayypGSS_SayAC17AppearanceJournalCGSdAA0C13TrackerFormatO10Foundation4DateVSayAA17ImpressionMetricsV2IDVGtFZ_0(v38, v37, v39, &v50, a2, (uint64_t)v43, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t DynamicImpressionsTracker.snapshotOnScreenImpressionsAndDynamicEvents(in:on:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int64_t v5 = 0;
  unsigned __int8 v99 = *a1;
  unint64_t v129 = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  sub_19EF9F4D4(*(void *)(*((void *)v3 + 5) + 16), 0);
  sub_19F1DC17C();
  uint64_t v112 = v3;
  unint64_t v6 = *((void *)v3 + 5);
  unint64_t v7 = v6 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v6 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_20;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_133;
    }
    if (v15 >= v11) {
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v11) {
        goto LABEL_25;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v11) {
          goto LABEL_25;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_20:
    uint64_t v18 = *(void *)(*(void *)(v6 + 56) + 8 * v14);
    swift_beginAccess();
    uint64_t v19 = *(void *)(v18 + 80);
    uint64_t v20 = *(void *)(v19 + 16);
    if (!v20 || (*(unsigned char *)(32 * v20 + v19) & 1) == 0)
    {
      uint64_t v21 = swift_retain_n();
      MEMORY[0x19F3C6430](v21);
      if (*(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_19F1DC1BC();
      }
      sub_19F1DC20C();
      sub_19F1DC17C();
      swift_release();
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v11) {
    goto LABEL_25;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_136;
    }
    if (v5 >= v11) {
      break;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_25:
  swift_release();
  uint64_t v96 = *((void *)v3 + 4);
  uint64_t v97 = *((void *)v3 + 3);
  unint64_t v111 = v129;
  double v4 = v3[2];
  v128[0] = v99;
  swift_beginAccess();
  unint64_t v6 = *((void *)v3 + 6);
  if (v6 >> 62) {
    goto LABEL_138;
  }
  uint64_t v22 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
LABEL_27:
  uint64_t v23 = v12;
  if (v22)
  {
    unint64_t v125 = v6 & 0xC000000000000001;
    unint64_t v115 = v6;
    v117 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v24 = 4;
    uint64_t v113 = v22;
    do
    {
      uint64_t v25 = v24 - 4;
      if (v125)
      {
        uint64_t v26 = MEMORY[0x19F3C7060](v24 - 4, v6);
        uint64_t v27 = v24 - 3;
        if (__OFADD__(v25, 1)) {
          goto LABEL_132;
        }
      }
      else
      {
        uint64_t v26 = *(void *)(v6 + 8 * v24);
        swift_retain();
        uint64_t v27 = v24 - 3;
        if (__OFADD__(v25, 1)) {
          goto LABEL_132;
        }
      }
      uint64_t v28 = *(void *)(v26 + 48);
      if (v28)
      {
        uint64_t v119 = *(void *)(v26 + 24);
        long long v121 = *(_OWORD *)(v26 + 56);
        long long v123 = *(_OWORD *)(v26 + 32);
        uint64_t v29 = *(void *)(v26 + 72);
        uint64_t v30 = *(void *)(v26 + 104);
        uint64_t v12 = v30 + 20;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        os_unfair_lock_lock((os_unfair_lock_t)(v30 + 20));
        sub_19EEC4E5C((unsigned char *)(v30 + 16), &v127);
        os_unfair_lock_unlock((os_unfair_lock_t)(v30 + 20));
        swift_release();
        LODWORD(v30) = v127;
        swift_release();
        if (v30)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v6 = v115;
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v117 = sub_19F09CDC8(0, v117[2] + 1, 1, v117);
          }
          unint64_t v6 = v115;
          unint64_t v32 = v117[2];
          unint64_t v31 = v117[3];
          long long v34 = v121;
          long long v33 = v123;
          if (v32 >= v31 >> 1)
          {
            unint64_t v36 = sub_19F09CDC8((void *)(v31 > 1), v32 + 1, 1, v117);
            long long v34 = v121;
            long long v33 = v123;
            v117 = v36;
          }
          v117[2] = v32 + 1;
          uint64_t v35 = &v117[7 * v32];
          uint64_t v35[4] = v119;
          *(_OWORD *)(v35 + 5) = v33;
          v35[7] = v28;
          *((_OWORD *)v35 + 4) = v34;
          v35[10] = v29;
        }
        uint64_t v22 = v113;
      }
      else
      {
        swift_release();
      }
      ++v24;
    }
    while (v27 != v22);
  }
  else
  {
    v117 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease_n();
  uint64_t v94 = static ImpressionsTracking.serializeImpressions(on:from:within:in:on:excluding:)(v97, v96, v111, v128, a2, (uint64_t)v117, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v93 = sub_19EF9E858(v37);
  swift_bridgeObjectRelease();
  unint64_t v38 = *((void *)v112 + 6);
  swift_beginAccess();
  uint64_t v39 = *((void *)v112 + 7);
  unint64_t v92 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v107 = sub_19EFB47EC(MEMORY[0x1E4FBC860]);
  uint64_t v100 = v39 + 64;
  uint64_t v12 = 1;
  uint64_t v40 = 1 << *(unsigned char *)(v39 + 32);
  uint64_t v41 = -1;
  if (v40 < 64) {
    uint64_t v41 = ~(-1 << v40);
  }
  unint64_t v6 = v41 & *(void *)(v39 + 64);
  int64_t v101 = (unint64_t)(v40 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v42 = 0;
  uint64_t v102 = v39;
  while (2)
  {
    if (v6)
    {
      unint64_t v43 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v44 = v43 | (v42 << 6);
      goto LABEL_68;
    }
    BOOL v45 = __OFADD__(v42++, 1);
    if (v45) {
      goto LABEL_137;
    }
    if (v42 >= v101)
    {
LABEL_124:
      swift_release();
      swift_bridgeObjectRelease();
      LOBYTE(v127) = v99;
      uint64_t v90 = sub_19F1D6294(v4, v97, v96, (unint64_t)v93, v92, v107, (char *)&v127, a2, 1);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *a3 = v94;
      a3[1] = v90;
      return result;
    }
    unint64_t v46 = *(void *)(v100 + 8 * v42);
    if (v46)
    {
LABEL_67:
      unint64_t v6 = (v46 - 1) & v46;
      unint64_t v44 = __clz(__rbit64(v46)) + (v42 << 6);
LABEL_68:
      unint64_t v48 = *(void *)(*(void *)(v39 + 56) + 8 * v44);
      int64_t v49 = *(void *)(v48 + 16);
      long long v108 = *(_OWORD *)(*(void *)(v39 + 48) + 16 * v44);
      unint64_t v105 = v6;
      int64_t v106 = v42;
      uint64_t v109 = *(void *)(*(void *)(v39 + 48) + 16 * v44 + 8);
      if (!v49)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v56 = MEMORY[0x1E4FBC860];
LABEL_98:
        v127 = (void *)v56;
        swift_bridgeObjectRetain();
        sub_19EF9F938((uint64_t *)&v127);
        if (v23) {
          goto LABEL_140;
        }
        unint64_t v6 = 0;
        swift_bridgeObjectRelease();
        uint64_t v74 = (uint64_t)v127;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v127 = (void *)v107;
        unint64_t v77 = sub_19EFB6C18(v108, v109);
        uint64_t v78 = *(void *)(v107 + 16);
        BOOL v79 = (v76 & 1) == 0;
        uint64_t v80 = v78 + v79;
        if (__OFADD__(v78, v79)) {
          goto LABEL_134;
        }
        char v81 = v76;
        if (*(void *)(v107 + 24) >= v80)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_19EFBD524();
          }
        }
        else
        {
          sub_19EFB7560(v80, isUniquelyReferenced_nonNull_native);
          unint64_t v82 = sub_19EFB6C18(v108, v109);
          if ((v81 & 1) != (v83 & 1)) {
            goto LABEL_141;
          }
          unint64_t v77 = v82;
        }
        uint64_t v84 = v127;
        unint64_t v107 = (unint64_t)v127;
        if (v81)
        {
          *(void *)(v127[7] + 8 * v77) = v74;
          swift_bridgeObjectRelease();
        }
        else
        {
          v127[(v77 >> 6) + 8] |= 1 << v77;
          *(_OWORD *)(v84[6] + 16 * v77) = v108;
          *(void *)(v84[7] + 8 * v77) = v74;
          uint64_t v85 = v84[2];
          BOOL v45 = __OFADD__(v85, 1);
          uint64_t v86 = v85 + 1;
          if (v45) {
            goto LABEL_135;
          }
          v84[2] = v86;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v23 = 0;
        uint64_t v39 = v102;
        unint64_t v6 = v105;
        int64_t v42 = v106;
        continue;
      }
      uint64_t v103 = v23;
      v127 = (void *)MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_19EFF63C0(0, v49, 0);
      unint64_t v51 = (double *)(v48 + 64);
      unint64_t v50 = *(void *)(v48 + 64);
      char v52 = *(unsigned char *)(v48 + 32);
      if (v50)
      {
        uint64_t v53 = 0;
      }
      else
      {
        uint64_t v54 = 1 << v52;
        if ((v52 & 0x3Fu) < 7) {
          goto LABEL_72;
        }
        unint64_t v50 = *(void *)(v48 + 72);
        if (v50)
        {
          uint64_t v53 = 1;
        }
        else
        {
          if ((v52 & 0x3Fu) < 8) {
            goto LABEL_72;
          }
          unint64_t v50 = *(void *)(v48 + 80);
          if (v50)
          {
            uint64_t v53 = 2;
          }
          else
          {
            uint64_t v87 = 0;
            unint64_t v88 = (unint64_t)(v54 + 63) >> 6;
            if (v88 <= 3) {
              unint64_t v88 = 3;
            }
            unint64_t v89 = v88 - 3;
            do
            {
              if (v89 == v87) {
                goto LABEL_72;
              }
              unint64_t v50 = *(void *)(v48 + 88 + 8 * v87++);
            }
            while (!v50);
            uint64_t v53 = v87 + 2;
          }
        }
      }
      uint64_t v54 = __clz(__rbit64(v50)) + (v53 << 6);
LABEL_72:
      uint64_t v55 = 0;
      uint64_t v56 = (uint64_t)v127;
      LODWORD(v111) = *(_DWORD *)(v48 + 36);
      unint64_t v104 = v48 + 88;
      int64_t v110 = v49;
      uint64_t v112 = (double *)(v48 + 64);
      while (1)
      {
        if (v55 == v49)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          swift_bridgeObjectRetain_n();
          uint64_t v22 = sub_19F1DD03C();
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        if (v54 < 0) {
          goto LABEL_126;
        }
        if (v54 >= 1 << v52) {
          goto LABEL_127;
        }
        unint64_t v59 = (unint64_t)v54 >> 6;
        if ((*(void *)&v51[(unint64_t)v54 >> 6] & (1 << v54)) == 0) {
          goto LABEL_128;
        }
        uint64_t v60 = *(void *)(v48 + 56);
        uint64_t v61 = (uint64_t *)(*(void *)(v48 + 48) + 56 * v54);
        unint64_t v6 = v48;
        uint64_t v62 = v61[1];
        uint64_t v118 = *v61;
        uint64_t v120 = v61[2];
        uint64_t v63 = v61[3];
        uint64_t v122 = v61[4];
        uint64_t v64 = v61[6];
        uint64_t v124 = v61[5];
        uint64_t v114 = v55;
        uint64_t v116 = *(void *)(v60 + 8 * v54);
        v127 = (void *)v56;
        unint64_t v66 = *(void *)(v56 + 16);
        unint64_t v65 = *(void *)(v56 + 24);
        int64_t v126 = v66 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v66 >= v65 >> 1)
        {
          sub_19EFF63C0(v65 > 1, v126, 1);
          uint64_t v56 = (uint64_t)v127;
        }
        *(void *)(v56 + 16) = v126;
        char v67 = (void *)(v56 + (v66 << 6));
        v67[4] = v116;
        v67[5] = v118;
        v67[6] = v62;
        v67[7] = v120;
        v67[8] = v63;
        v67[9] = v122;
        v67[10] = v124;
        v67[11] = v64;
        char v52 = *(unsigned char *)(v6 + 32);
        uint64_t v12 = 1;
        unint64_t v57 = 1 << v52;
        if (v54 >= 1 << v52) {
          goto LABEL_129;
        }
        unint64_t v51 = v112;
        double v68 = v112[v59];
        if ((*(void *)&v68 & (1 << v54)) == 0) {
          goto LABEL_130;
        }
        unint64_t v48 = v6;
        if (v111 != *(_DWORD *)(v6 + 36)) {
          goto LABEL_131;
        }
        unint64_t v69 = *(void *)&v68 & (-2 << (v54 & 0x3F));
        if (v69)
        {
          unint64_t v57 = __clz(__rbit64(v69)) | v54 & 0xFFFFFFFFFFFFFFC0;
          int64_t v49 = v110;
        }
        else
        {
          unint64_t v70 = v59 + 1;
          unint64_t v71 = (v57 + 63) >> 6;
          int64_t v49 = v110;
          if (v59 + 1 < v71)
          {
            unint64_t v72 = *(void *)&v112[v70];
            if (v72) {
              goto LABEL_88;
            }
            unint64_t v70 = v59 + 2;
            if (v59 + 2 < v71)
            {
              unint64_t v72 = *(void *)&v112[v70];
              if (!v72)
              {
                unint64_t v73 = v71 - 3;
                uint64_t v58 = v114;
                while (v73 != v59)
                {
                  unint64_t v72 = *(void *)(v104 + 8 * v59++);
                  if (v72)
                  {
                    unint64_t v70 = v59 + 2;
                    goto LABEL_89;
                  }
                }
                goto LABEL_75;
              }
LABEL_88:
              uint64_t v58 = v114;
LABEL_89:
              unint64_t v57 = __clz(__rbit64(v72)) + (v70 << 6);
              goto LABEL_75;
            }
          }
        }
        uint64_t v58 = v114;
LABEL_75:
        uint64_t v55 = v58 + 1;
        uint64_t v54 = v57;
        if (v55 == v49)
        {
          uint64_t v23 = v103;
          goto LABEL_98;
        }
      }
    }
    break;
  }
  int64_t v47 = v42 + 1;
  if (v42 + 1 >= v101) {
    goto LABEL_124;
  }
  unint64_t v46 = *(void *)(v100 + 8 * v47);
  if (v46) {
    goto LABEL_66;
  }
  int64_t v47 = v42 + 2;
  if (v42 + 2 >= v101) {
    goto LABEL_124;
  }
  unint64_t v46 = *(void *)(v100 + 8 * v47);
  if (v46) {
    goto LABEL_66;
  }
  int64_t v47 = v42 + 3;
  if (v42 + 3 >= v101) {
    goto LABEL_124;
  }
  unint64_t v46 = *(void *)(v100 + 8 * v47);
  if (v46) {
    goto LABEL_66;
  }
  int64_t v47 = v42 + 4;
  if (v42 + 4 >= v101) {
    goto LABEL_124;
  }
  unint64_t v46 = *(void *)(v100 + 8 * v47);
  if (v46) {
    goto LABEL_66;
  }
  int64_t v47 = v42 + 5;
  if (v42 + 5 >= v101) {
    goto LABEL_124;
  }
  unint64_t v46 = *(void *)(v100 + 8 * v47);
  if (v46)
  {
LABEL_66:
    int64_t v42 = v47;
    goto LABEL_67;
  }
  while (1)
  {
    int64_t v42 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v42 >= v101) {
      goto LABEL_124;
    }
    unint64_t v46 = *(void *)(v100 + 8 * v42);
    ++v47;
    if (v46) {
      goto LABEL_67;
    }
  }
  __break(1u);
LABEL_140:
  swift_release();
  __break(1u);
LABEL_141:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19EF9BD20()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_19EFB47EC(MEMORY[0x1E4FBC860]);
  uint64_t v57 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v58 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v56 = v1;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      uint64_t v8 = (v5 - 1) & v5;
      unint64_t v9 = v7 | (v6 << 6);
    }
    else
    {
      BOOL v10 = __OFADD__(v6++, 1);
      if (v10) {
        goto LABEL_90;
      }
      if (v6 >= v58) {
        goto LABEL_80;
      }
      unint64_t v11 = *(void *)(v57 + 8 * v6);
      if (!v11)
      {
        int64_t v12 = v6 + 1;
        if (v6 + 1 >= v58) {
          goto LABEL_80;
        }
        unint64_t v11 = *(void *)(v57 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v6 + 2;
          if (v6 + 2 >= v58) {
            goto LABEL_80;
          }
          unint64_t v11 = *(void *)(v57 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v6 + 3;
            if (v6 + 3 >= v58) {
              goto LABEL_80;
            }
            unint64_t v11 = *(void *)(v57 + 8 * v12);
            if (!v11)
            {
              int64_t v12 = v6 + 4;
              if (v6 + 4 >= v58) {
                goto LABEL_80;
              }
              unint64_t v11 = *(void *)(v57 + 8 * v12);
              if (!v11)
              {
                int64_t v12 = v6 + 5;
                if (v6 + 5 >= v58) {
                  goto LABEL_80;
                }
                unint64_t v11 = *(void *)(v57 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    int64_t v6 = v12 + 1;
                    if (__OFADD__(v12, 1)) {
                      goto LABEL_91;
                    }
                    if (v6 >= v58) {
                      break;
                    }
                    unint64_t v11 = *(void *)(v57 + 8 * v6);
                    ++v12;
                    if (v11) {
                      goto LABEL_22;
                    }
                  }
LABEL_80:
                  swift_release();
                  swift_bridgeObjectRelease();
                  return (uint64_t)v2;
                }
              }
            }
          }
        }
        int64_t v6 = v12;
      }
LABEL_22:
      uint64_t v8 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v6 << 6);
    }
    uint64_t v13 = *(void *)(*(void *)(v1 + 56) + 8 * v9);
    int64_t v14 = *(void *)(v13 + 16);
    long long v63 = *(_OWORD *)(*(void *)(v1 + 48) + 16 * v9);
    unint64_t v61 = v8;
    int64_t v62 = v6;
    uint64_t v64 = *(void *)(*(void *)(v1 + 48) + 16 * v9 + 8);
    if (v14) {
      break;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v21 = MEMORY[0x1E4FBC860];
LABEL_53:
    long long v75 = (void *)v21;
    swift_bridgeObjectRetain();
    sub_19EF9F938((uint64_t *)&v75);
    swift_bridgeObjectRelease();
    uint64_t v40 = (uint64_t)v75;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v75 = v2;
    unint64_t v43 = sub_19EFB6C18(v63, v64);
    uint64_t v44 = v2[2];
    BOOL v45 = (v42 & 1) == 0;
    uint64_t v46 = v44 + v45;
    if (__OFADD__(v44, v45)) {
      goto LABEL_88;
    }
    char v47 = v42;
    if (v2[3] >= v46)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v2 = v75;
        if (v42) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_19EFBD524();
        uint64_t v2 = v75;
        if (v47) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_19EFB7560(v46, isUniquelyReferenced_nonNull_native);
      unint64_t v48 = sub_19EFB6C18(v63, v64);
      if ((v47 & 1) != (v49 & 1)) {
        goto LABEL_92;
      }
      unint64_t v43 = v48;
      uint64_t v2 = v75;
      if (v47)
      {
LABEL_4:
        *(void *)(v2[7] + 8 * v43) = v40;
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
    v2[(v43 >> 6) + 8] |= 1 << v43;
    *(_OWORD *)(v2[6] + 16 * v43) = v63;
    *(void *)(v2[7] + 8 * v43) = v40;
    uint64_t v50 = v2[2];
    BOOL v10 = __OFADD__(v50, 1);
    uint64_t v51 = v50 + 1;
    if (v10) {
      goto LABEL_89;
    }
    v2[2] = v51;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    unint64_t v5 = v61;
    int64_t v6 = v62;
  }
  long long v75 = (void *)MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_19EFF63C0(0, v14, 0);
  uint64_t v16 = v13 + 64;
  unint64_t v15 = *(void *)(v13 + 64);
  char v17 = *(unsigned char *)(v13 + 32);
  unint64_t v59 = v2;
  if (v15)
  {
    uint64_t v18 = 0;
    goto LABEL_26;
  }
  uint64_t v19 = 1 << v17;
  if ((v17 & 0x3Fu) >= 7)
  {
    unint64_t v15 = *(void *)(v13 + 72);
    if (v15)
    {
      uint64_t v18 = 1;
      goto LABEL_26;
    }
    if ((v17 & 0x3Fu) >= 8)
    {
      unint64_t v15 = *(void *)(v13 + 80);
      if (v15)
      {
        uint64_t v18 = 2;
LABEL_26:
        uint64_t v19 = __clz(__rbit64(v15)) + (v18 << 6);
      }
      else
      {
        uint64_t v52 = 0;
        unint64_t v53 = (unint64_t)(v19 + 63) >> 6;
        if (v53 <= 3) {
          unint64_t v53 = 3;
        }
        unint64_t v54 = v53 - 3;
        while (v54 != v52)
        {
          unint64_t v15 = *(void *)(v13 + 88 + 8 * v52++);
          if (v15)
          {
            uint64_t v18 = v52 + 2;
            goto LABEL_26;
          }
        }
      }
    }
  }
  uint64_t v20 = 0;
  uint64_t v21 = (uint64_t)v75;
  int v66 = *(_DWORD *)(v13 + 36);
  uint64_t v60 = v13 + 88;
  int64_t v65 = v14;
  uint64_t v67 = v13 + 64;
  while (2)
  {
    if (v20 != v14)
    {
      if (v19 < 0) {
        goto LABEL_82;
      }
      if (v19 >= 1 << v17) {
        goto LABEL_83;
      }
      unint64_t v24 = (unint64_t)v19 >> 6;
      if ((*(void *)(v16 + 8 * ((unint64_t)v19 >> 6)) & (1 << v19)) == 0) {
        goto LABEL_84;
      }
      uint64_t v68 = v20;
      uint64_t v25 = *(void *)(v13 + 56);
      uint64_t v26 = (uint64_t *)(*(void *)(v13 + 48) + 56 * v19);
      uint64_t v27 = v26[1];
      uint64_t v70 = *v26;
      uint64_t v71 = v26[2];
      uint64_t v28 = v13;
      uint64_t v29 = v26[3];
      uint64_t v72 = v26[4];
      uint64_t v30 = v26[6];
      uint64_t v73 = v26[5];
      uint64_t v69 = *(void *)(v25 + 8 * v19);
      long long v75 = (void *)v21;
      unint64_t v32 = *(void *)(v21 + 16);
      unint64_t v31 = *(void *)(v21 + 24);
      int64_t v74 = v32 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32 >= v31 >> 1)
      {
        sub_19EFF63C0(v31 > 1, v74, 1);
        uint64_t v21 = (uint64_t)v75;
      }
      *(void *)(v21 + 16) = v74;
      long long v33 = (void *)(v21 + (v32 << 6));
      _OWORD v33[4] = v69;
      v33[5] = v70;
      v33[6] = v27;
      v33[7] = v71;
      v33[8] = v29;
      v33[9] = v72;
      v33[10] = v73;
      v33[11] = v30;
      char v17 = *(unsigned char *)(v28 + 32);
      unint64_t v22 = 1 << v17;
      if (v19 >= 1 << v17) {
        goto LABEL_85;
      }
      uint64_t v16 = v67;
      uint64_t v34 = *(void *)(v67 + 8 * v24);
      if ((v34 & (1 << v19)) == 0) {
        goto LABEL_86;
      }
      uint64_t v13 = v28;
      if (v66 != *(_DWORD *)(v28 + 36)) {
        goto LABEL_87;
      }
      unint64_t v35 = v34 & (-2 << (v19 & 0x3F));
      if (v35)
      {
        unint64_t v22 = __clz(__rbit64(v35)) | v19 & 0xFFFFFFFFFFFFFFC0;
        int64_t v14 = v65;
      }
      else
      {
        unint64_t v36 = v24 + 1;
        unint64_t v37 = (v22 + 63) >> 6;
        int64_t v14 = v65;
        if (v24 + 1 < v37)
        {
          unint64_t v38 = *(void *)(v67 + 8 * v36);
          if (v38)
          {
LABEL_43:
            uint64_t v23 = v68;
LABEL_44:
            unint64_t v22 = __clz(__rbit64(v38)) + (v36 << 6);
            goto LABEL_30;
          }
          unint64_t v36 = v24 + 2;
          if (v24 + 2 < v37)
          {
            unint64_t v38 = *(void *)(v67 + 8 * v36);
            if (v38) {
              goto LABEL_43;
            }
            unint64_t v39 = v37 - 3;
            uint64_t v23 = v68;
            while (v39 != v24)
            {
              unint64_t v38 = *(void *)(v60 + 8 * v24++);
              if (v38)
              {
                unint64_t v36 = v24 + 2;
                goto LABEL_44;
              }
            }
LABEL_30:
            uint64_t v20 = v23 + 1;
            uint64_t v19 = v22;
            if (v20 == v14)
            {
              uint64_t v1 = v56;
              uint64_t v2 = v59;
              goto LABEL_53;
            }
            continue;
          }
        }
      }
      uint64_t v23 = v68;
      goto LABEL_30;
    }
    break;
  }
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
  swift_release();
  __break(1u);
LABEL_92:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t DynamicImpressionsTracker.consumeImpressions(in:on:)(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v3 = *a1;
  uint64_t v25 = *((void *)v2 + 3);
  uint64_t v24 = *((void *)v2 + 4);
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_19EF9E858(v4);
  swift_bridgeObjectRelease();
  double v5 = v2[2];
  unsigned __int8 v35 = v3;
  swift_beginAccess();
  unint64_t v6 = *((void *)v2 + 6);
  if (v6 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v7)
    {
LABEL_3:
      unint64_t v33 = v6 & 0xC000000000000001;
      uint64_t v28 = v7;
      uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v8 = 4;
      unint64_t v27 = v6;
      while (1)
      {
        uint64_t v9 = v8 - 4;
        if (v33)
        {
          uint64_t v10 = MEMORY[0x19F3C7060](v8 - 4, v6);
          uint64_t v11 = v8 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(v6 + 8 * v8);
          swift_retain();
          uint64_t v11 = v8 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        uint64_t v12 = *(void *)(v10 + 48);
        if (v12)
        {
          uint64_t v30 = *(void *)(v10 + 24);
          long long v31 = *(_OWORD *)(v10 + 56);
          long long v32 = *(_OWORD *)(v10 + 32);
          uint64_t v13 = *(void *)(v10 + 72);
          uint64_t v14 = *(void *)(v10 + 104);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          os_unfair_lock_lock((os_unfair_lock_t)(v14 + 20));
          sub_19EEC4E5C((unsigned char *)(v14 + 16), &v34);
          os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 20));
          swift_release();
          LODWORD(v14) = v34;
          swift_release();
          if (v14)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v6 = v27;
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v29 = sub_19F09CDC8(0, v29[2] + 1, 1, v29);
            }
            unint64_t v6 = v27;
            unint64_t v16 = v29[2];
            unint64_t v15 = v29[3];
            long long v18 = v31;
            long long v17 = v32;
            if (v16 >= v15 >> 1)
            {
              uint64_t v20 = sub_19F09CDC8((void *)(v15 > 1), v16 + 1, 1, v29);
              long long v18 = v31;
              long long v17 = v32;
              uint64_t v29 = v20;
            }
            _OWORD v29[2] = v16 + 1;
            uint64_t v19 = &v29[7 * v16];
            v19[4] = v30;
            *(_OWORD *)(v19 + 5) = v17;
            v19[7] = v12;
            *((_OWORD *)v19 + 4) = v18;
            v19[10] = v13;
          }
          uint64_t v7 = v28;
        }
        else
        {
          swift_release();
        }
        ++v8;
        if (v11 == v7) {
          goto LABEL_23;
        }
      }
    }
  }
  uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
LABEL_23:
  swift_bridgeObjectRelease_n();
  uint64_t v21 = _s9JetEngine19ImpressionsTrackingO09serializeC02on4from6within2inAE9excludingSayypGSS_SayAC17AppearanceJournalCGSdAA0C13TrackerFormatO10Foundation4DateVSayAA17ImpressionMetricsV2IDVGtFZ_0(v25, v24, (unint64_t)v23, &v35, a2, (uint64_t)v29, v5);
  swift_bridgeObjectRelease();
  swift_release();
  DynamicImpressionsTracker.removeAllImpressions()();
  return v21;
}

Swift::Void __swiftcall DynamicImpressionsTracker.removeAllImpressions()()
{
  unint64_t v39 = (uint64_t *)(v0 + 40);
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v41 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v44 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  unint64_t v43 = (uint64_t *)(v0 + 48);
  swift_beginAccess();
  int64_t v6 = 0;
  int64_t v42 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v40 = MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      uint64_t v8 = (v5 - 1) & v5;
      unint64_t v9 = v7 | (v6 << 6);
    }
    else
    {
      int64_t v10 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_68;
      }
      if (v10 >= v42) {
        goto LABEL_66;
      }
      unint64_t v11 = *(void *)(v41 + 8 * v10);
      ++v6;
      if (!v11)
      {
        int64_t v6 = v10 + 1;
        if (v10 + 1 >= v42) {
          goto LABEL_66;
        }
        unint64_t v11 = *(void *)(v41 + 8 * v6);
        if (!v11)
        {
          int64_t v6 = v10 + 2;
          if (v10 + 2 >= v42) {
            goto LABEL_66;
          }
          unint64_t v11 = *(void *)(v41 + 8 * v6);
          if (!v11)
          {
            int64_t v6 = v10 + 3;
            if (v10 + 3 >= v42) {
              goto LABEL_66;
            }
            unint64_t v11 = *(void *)(v41 + 8 * v6);
            if (!v11)
            {
              int64_t v6 = v10 + 4;
              if (v10 + 4 >= v42) {
                goto LABEL_66;
              }
              unint64_t v11 = *(void *)(v41 + 8 * v6);
              if (!v11)
              {
                int64_t v12 = v10 + 5;
                if (v12 >= v42) {
                  goto LABEL_66;
                }
                unint64_t v11 = *(void *)(v41 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    int64_t v6 = v12 + 1;
                    if (__OFADD__(v12, 1)) {
                      goto LABEL_69;
                    }
                    if (v6 >= v42) {
                      break;
                    }
                    unint64_t v11 = *(void *)(v41 + 8 * v6);
                    ++v12;
                    if (v11) {
                      goto LABEL_25;
                    }
                  }
LABEL_66:
                  swift_release();
                  *unint64_t v39 = v40;
                  swift_bridgeObjectRelease();
                  return;
                }
                int64_t v6 = v12;
              }
            }
          }
        }
      }
LABEL_25:
      uint64_t v8 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v6 << 6);
    }
    unint64_t v45 = v8;
    int64_t v46 = v6;
    uint64_t v13 = *(void *)(v44 + 48) + 56 * v9;
    uint64_t v14 = *(void *)(v13 + 48);
    long long v15 = *(_OWORD *)(v13 + 32);
    long long v16 = *(_OWORD *)v13;
    long long v52 = *(_OWORD *)(v13 + 16);
    v53[0] = v15;
    long long v51 = v16;
    *(void *)&v53[1] = v14;
    uint64_t v49 = *(void *)(v13 + 8);
    uint64_t v50 = *(void *)v13;
    uint64_t v47 = *(void *)(v13 + 24);
    uint64_t v48 = *(void *)(v13 + 16);
    uint64_t v17 = *v43;
    if ((unint64_t)*v43 >> 62) {
      break;
    }
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    sub_19EE89A74((uint64_t)&v51);
    if (v18) {
      goto LABEL_28;
    }
LABEL_4:
    swift_bridgeObjectRelease_n();
    unint64_t v5 = v45;
LABEL_5:
    sub_19EE89AC0((uint64_t)&v51);
    int64_t v6 = v46;
  }
  swift_bridgeObjectRetain_n();
  sub_19EE89A74((uint64_t)&v51);
  uint64_t v18 = sub_19F1DD03C();
  if (!v18) {
    goto LABEL_4;
  }
LABEL_28:
  uint64_t v19 = 4;
  while (1)
  {
    uint64_t v20 = v19 - 4;
    if ((v17 & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t v21 = (void *)MEMORY[0x19F3C7060](v19 - 4, v17);
    uint64_t v22 = v19 - 3;
    if (__OFADD__(v20, 1)) {
      goto LABEL_67;
    }
LABEL_37:
    uint64_t v23 = v21[6];
    if (!v23)
    {
      sub_19EE89A74((uint64_t)&v51);
      sub_19EE89208(0, 0, 0, 0);
      sub_19EE89208(v50, v49, v48, v47);
LABEL_30:
      swift_release();
      goto LABEL_31;
    }
    unint64_t v25 = v21[3];
    unint64_t v24 = v21[4];
    unint64_t v27 = v21[8];
    unint64_t v26 = v21[9];
    BOOL v28 = v21[5] == (void)v52 && v23 == *((void *)&v52 + 1);
    if (!v28 && (sub_19F1DD44C() & 1) == 0) {
      goto LABEL_30;
    }
    if (v24)
    {
      if (!*((void *)&v51 + 1) || __PAIR128__(v24, v25) != v51 && (sub_19F1DD44C() & 1) == 0) {
        goto LABEL_30;
      }
    }
    else if (*((void *)&v51 + 1))
    {
      goto LABEL_30;
    }
    char v29 = *(void *)&v53[1] == 0;
    if (v26)
    {
      if (!*(void *)&v53[1]) {
        goto LABEL_30;
      }
      if (__PAIR128__(v26, v27) == *(_OWORD *)((char *)v53 + 8))
      {
        swift_release();
LABEL_55:
        swift_bridgeObjectRelease_n();
        swift_beginAccess();
        uint64_t v30 = *v39;
        unint64_t v5 = v45;
        if (*(void *)(*v39 + 16))
        {
          sub_19EE89A74((uint64_t)&v51);
          unint64_t v31 = sub_19EE88F80((uint64_t *)&v51);
          if ((v32 & 1) == 0)
          {
            sub_19EE89AC0((uint64_t)&v51);
            goto LABEL_58;
          }
          uint64_t v37 = *(void *)(*(void *)(v30 + 56) + 8 * v31);
          swift_endAccess();
          swift_retain();
          sub_19EE89AC0((uint64_t)&v51);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_19EE89B0C(v37, (uint64_t)&v51, isUniquelyReferenced_nonNull_native);
        }
        else
        {
LABEL_58:
          swift_endAccess();
          swift_bridgeObjectRetain();
          unint64_t v33 = sub_19EE88F80((uint64_t *)&v51);
          char v35 = v34;
          swift_bridgeObjectRelease();
          if ((v35 & 1) == 0) {
            goto LABEL_5;
          }
          uint64_t v36 = v40;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_19EFBD718();
            uint64_t v36 = v40;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v40 = v36;
          sub_19EF6C2E4(v33, v36);
          swift_release();
        }
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      char v29 = sub_19F1DD44C();
    }
    swift_release();
    if (v29) {
      goto LABEL_55;
    }
LABEL_31:
    ++v19;
    if (v22 == v18) {
      goto LABEL_4;
    }
  }
  uint64_t v21 = *(void **)(v17 + 8 * v19);
  swift_retain();
  uint64_t v22 = v19 - 3;
  if (!__OFADD__(v20, 1)) {
    goto LABEL_37;
  }
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
}

void DynamicImpressionsTracker.consumeImpressionsAndDynamicEvents(in:on:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 v4 = *a1;
  uint64_t v30 = *((void *)v3 + 4);
  uint64_t v31 = *((void *)v3 + 3);
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  char v29 = sub_19EF9E858(v5);
  swift_bridgeObjectRelease();
  double v6 = v3[2];
  unsigned __int8 v32 = v4;
  unsigned __int8 v44 = v4;
  swift_beginAccess();
  char v34 = v3;
  unint64_t v7 = *((void *)v3 + 6);
  if (v7 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v8)
    {
LABEL_3:
      unint64_t v42 = v7 & 0xC000000000000001;
      unint64_t v37 = v7;
      unint64_t v38 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v9 = 4;
      uint64_t v36 = v8;
      while (1)
      {
        uint64_t v10 = v9 - 4;
        if (v42)
        {
          uint64_t v11 = MEMORY[0x19F3C7060](v9 - 4, v7);
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v7 + 8 * v9);
          swift_retain();
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v13 = *(void *)(v11 + 48);
        if (v13)
        {
          uint64_t v39 = *(void *)(v11 + 24);
          long long v40 = *(_OWORD *)(v11 + 56);
          long long v41 = *(_OWORD *)(v11 + 32);
          uint64_t v14 = *(void *)(v11 + 72);
          uint64_t v15 = *(void *)(v11 + 104);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          os_unfair_lock_lock((os_unfair_lock_t)(v15 + 20));
          sub_19EEC4E5C((unsigned char *)(v15 + 16), &v43);
          os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 20));
          swift_release();
          int v16 = v43;
          swift_release();
          if (v16)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v8 = v36;
            unint64_t v7 = v37;
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v38 = sub_19F09CDC8(0, v38[2] + 1, 1, v38);
            }
            uint64_t v8 = v36;
            unint64_t v7 = v37;
            unint64_t v18 = v38[2];
            unint64_t v17 = v38[3];
            long long v20 = v40;
            long long v19 = v41;
            if (v18 >= v17 >> 1)
            {
              uint64_t v22 = sub_19F09CDC8((void *)(v17 > 1), v18 + 1, 1, v38);
              long long v20 = v40;
              long long v19 = v41;
              unint64_t v38 = v22;
            }
            _OWORD v38[2] = v18 + 1;
            uint64_t v21 = &v38[7 * v18];
            void v21[4] = v39;
            *(_OWORD *)(v21 + 5) = v19;
            v21[7] = v13;
            *((_OWORD *)v21 + 4) = v20;
            v21[10] = v14;
          }
        }
        else
        {
          swift_release();
        }
        ++v9;
        if (v12 == v8) {
          goto LABEL_22;
        }
      }
    }
  }
  unint64_t v38 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease_n();
  uint64_t v23 = static ImpressionsTracking.serializeImpressions(on:from:within:in:on:excluding:)(v31, v30, (unint64_t)v29, &v44, a2, (uint64_t)v38, v6);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v24 = swift_bridgeObjectRetain();
  unint64_t v25 = sub_19EF9E858(v24);
  swift_bridgeObjectRelease();
  unint64_t v26 = *((void *)v34 + 6);
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_19EF9BD20();
  unsigned __int8 v44 = v32;
  uint64_t v28 = sub_19F1D865C((unint64_t)v25, v26, v27, (char *)&v44, a2, 0, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  DynamicImpressionsTracker.removeAllImpressions()();
  DynamicImpressionsTracker.removeAllDynamicEvents()();
  *a3 = v23;
  a3[1] = v28;
}

Swift::Void __swiftcall DynamicImpressionsTracker.removeAllDynamicEvents()()
{
  uint64_t v57 = v0 + 5;
  swift_beginAccess();
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + 64);
  unint64_t v54 = v0;
  uint64_t v55 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v59 = v0[5];
  swift_bridgeObjectRetain();
  uint64_t v60 = v0 + 6;
  swift_beginAccess();
  int64_t v6 = 0;
  int64_t v56 = (unint64_t)(v3 + 63) >> 6;
  int64_t v58 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      uint64_t v11 = (v5 - 1) & v5;
      unint64_t v12 = v10 | (v6 << 6);
    }
    else
    {
      int64_t v13 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_76;
      }
      if (v13 >= v56) {
        goto LABEL_74;
      }
      unint64_t v14 = *(void *)(v55 + 8 * v13);
      ++v6;
      if (!v14)
      {
        int64_t v6 = v13 + 1;
        if (v13 + 1 >= v56) {
          goto LABEL_74;
        }
        unint64_t v14 = *(void *)(v55 + 8 * v6);
        if (!v14)
        {
          int64_t v6 = v13 + 2;
          if (v13 + 2 >= v56) {
            goto LABEL_74;
          }
          unint64_t v14 = *(void *)(v55 + 8 * v6);
          if (!v14)
          {
            int64_t v6 = v13 + 3;
            if (v13 + 3 >= v56) {
              goto LABEL_74;
            }
            unint64_t v14 = *(void *)(v55 + 8 * v6);
            if (!v14)
            {
              int64_t v6 = v13 + 4;
              if (v13 + 4 >= v56) {
                goto LABEL_74;
              }
              unint64_t v14 = *(void *)(v55 + 8 * v6);
              if (!v14)
              {
                int64_t v15 = v13 + 5;
                if (v15 >= v56) {
                  goto LABEL_74;
                }
                unint64_t v14 = *(void *)(v55 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v6 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_78;
                    }
                    if (v6 >= v56) {
                      break;
                    }
                    unint64_t v14 = *(void *)(v55 + 8 * v6);
                    ++v15;
                    if (v14) {
                      goto LABEL_29;
                    }
                  }
LABEL_74:
                  swift_release();
                  v54[5] = v58;
                  swift_bridgeObjectRelease();
                  swift_beginAccess();
                  v54[6] = MEMORY[0x1E4FBC860];
                  swift_bridgeObjectRelease();
                  swift_beginAccess();
                  v54[7] = MEMORY[0x1E4FBC868];
                  swift_bridgeObjectRelease();
                  return;
                }
                int64_t v6 = v15;
              }
            }
          }
        }
      }
LABEL_29:
      uint64_t v11 = (v14 - 1) & v14;
      unint64_t v12 = __clz(__rbit64(v14)) + (v6 << 6);
    }
    int64_t v62 = v6;
    uint64_t v17 = *(void *)(v59 + 48) + 56 * v12;
    uint64_t v18 = *(void *)(v17 + 48);
    long long v19 = *(_OWORD *)(v17 + 32);
    long long v20 = *(_OWORD *)v17;
    long long v68 = *(_OWORD *)(v17 + 16);
    v69[0] = v19;
    long long v67 = v20;
    *(void *)&v69[1] = v18;
    uint64_t v65 = *(void *)(v17 + 8);
    uint64_t v66 = *(void *)v17;
    uint64_t v63 = *(void *)(v17 + 24);
    uint64_t v64 = *(void *)(v17 + 16);
    uint64_t v21 = *v60;
    if ((unint64_t)*v60 >> 62) {
      break;
    }
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    sub_19EE89A74((uint64_t)&v67);
    unint64_t v61 = v11;
    if (v22) {
      goto LABEL_32;
    }
LABEL_61:
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    uint64_t v34 = *v57;
    if (*(void *)(*v57 + 16))
    {
      sub_19EE89A74((uint64_t)&v67);
      unint64_t v35 = sub_19EE88F80((uint64_t *)&v67);
      if (v36)
      {
        uint64_t v37 = *(void *)(*(void *)(v34 + 56) + 8 * v35);
        swift_endAccess();
        swift_retain();
        sub_19EE89AC0((uint64_t)&v67);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v40 = sub_19EE88F80((uint64_t *)&v67);
        uint64_t v41 = v58[2];
        BOOL v42 = (v39 & 1) == 0;
        uint64_t v43 = v41 + v42;
        if (__OFADD__(v41, v42)) {
          goto LABEL_77;
        }
        char v44 = v39;
        if (v58[3] >= v43)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_19EFBD718();
          }
        }
        else
        {
          sub_19EFB7858(v43, isUniquelyReferenced_nonNull_native);
          unint64_t v45 = sub_19EE88F80((uint64_t *)&v67);
          if ((v44 & 1) != (v46 & 1)) {
            goto LABEL_80;
          }
          unint64_t v40 = v45;
        }
        if (v44)
        {
          *(void *)(v58[7] + 8 * v40) = v37;
          swift_release();
        }
        else
        {
          v58[(v40 >> 6) + 8] |= 1 << v40;
          uint64_t v47 = v58[6] + 56 * v40;
          long long v48 = v67;
          long long v49 = v68;
          long long v50 = v69[0];
          *(void *)(v47 + 48) = *(void *)&v69[1];
          *(_OWORD *)(v47 + 16) = v49;
          *(_OWORD *)(v47 + 32) = v50;
          *(_OWORD *)uint64_t v47 = v48;
          *(void *)(v58[7] + 8 * v40) = v37;
          uint64_t v51 = v58[2];
          BOOL v52 = __OFADD__(v51, 1);
          uint64_t v53 = v51 + 1;
          if (v52) {
            goto LABEL_79;
          }
          v58[2] = v53;
          sub_19EE89A74((uint64_t)&v67);
        }
        goto LABEL_73;
      }
      sub_19EE89AC0((uint64_t)&v67);
    }
    swift_endAccess();
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_19EE88F80((uint64_t *)&v67);
    char v9 = v8;
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_6;
    }
    int v16 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_19EFBD718();
      int v16 = v58;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v58 = v16;
    sub_19EF6C2E4(v7, v16);
    swift_release();
LABEL_73:
    swift_bridgeObjectRelease();
LABEL_6:
    sub_19EE89AC0((uint64_t)&v67);
    unint64_t v5 = v61;
    int64_t v6 = v62;
  }
  swift_bridgeObjectRetain_n();
  sub_19EE89A74((uint64_t)&v67);
  uint64_t v22 = sub_19F1DD03C();
  unint64_t v61 = v11;
  if (!v22) {
    goto LABEL_61;
  }
LABEL_32:
  uint64_t v23 = 4;
  while (1)
  {
    uint64_t v24 = v23 - 4;
    if ((v21 & 0xC000000000000001) == 0) {
      break;
    }
    unint64_t v25 = (void *)MEMORY[0x19F3C7060](v23 - 4, v21);
    uint64_t v26 = v23 - 3;
    if (__OFADD__(v24, 1)) {
      goto LABEL_75;
    }
LABEL_41:
    uint64_t v27 = v25[6];
    if (!v27)
    {
      sub_19EE89A74((uint64_t)&v67);
      sub_19EE89208(0, 0, 0, 0);
      sub_19EE89208(v66, v65, v64, v63);
LABEL_34:
      swift_release();
      goto LABEL_35;
    }
    unint64_t v29 = v25[3];
    unint64_t v28 = v25[4];
    unint64_t v31 = v25[8];
    unint64_t v30 = v25[9];
    BOOL v32 = v25[5] == (void)v68 && v27 == *((void *)&v68 + 1);
    if (!v32 && (sub_19F1DD44C() & 1) == 0) {
      goto LABEL_34;
    }
    if (v28)
    {
      if (!*((void *)&v67 + 1) || __PAIR128__(v28, v29) != v67 && (sub_19F1DD44C() & 1) == 0) {
        goto LABEL_34;
      }
    }
    else if (*((void *)&v67 + 1))
    {
      goto LABEL_34;
    }
    char v33 = *(void *)&v69[1] == 0;
    if (v30)
    {
      if (!*(void *)&v69[1]) {
        goto LABEL_34;
      }
      if (__PAIR128__(v30, v31) == *(_OWORD *)((char *)v69 + 8))
      {
        swift_release();
LABEL_59:
        swift_bridgeObjectRelease_n();
        goto LABEL_6;
      }
      char v33 = sub_19F1DD44C();
    }
    swift_release();
    if (v33) {
      goto LABEL_59;
    }
LABEL_35:
    ++v23;
    if (v26 == v22) {
      goto LABEL_61;
    }
  }
  unint64_t v25 = *(void **)(v21 + 8 * v23);
  swift_retain();
  uint64_t v26 = v23 - 3;
  if (!__OFADD__(v24, 1)) {
    goto LABEL_41;
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  sub_19F1DD65C();
  __break(1u);
}

uint64_t DynamicImpressionsTracker.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DynamicImpressionsTracker.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19EF9D71C(long long *a1, uint64_t a2)
{
  uint64_t v2 = *((void *)a1 + 3);
  uint64_t v3 = *((void *)a1 + 6);
  uint64_t v4 = *((void *)a1 + 9);
  long long v5 = *a1;
  uint64_t v13 = *((void *)a1 + 2);
  uint64_t v14 = v2;
  long long v15 = a1[2];
  uint64_t v16 = v3;
  long long v17 = *(long long *)((char *)a1 + 56);
  uint64_t v18 = v4;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  v7[2] = 0;
  char v8 = 1;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = v5;
  return DynamicImpressionsTracker.elementDidLeaveView(_:on:with:)((uint64_t)&v12, a2, (uint64_t)v7);
}

uint64_t sub_19EF9D7A8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  long long v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *long long v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  long long v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *long long v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_19EF9D9A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v9 = (void *)result;
  if (!a2)
  {
    uint64_t v10 = 0;
    goto LABEL_11;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
LABEL_11:
    *unint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    void v9[3] = v10;
    return v10;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v11 = *(void *)(a4 + 16);
    if (v11)
    {
      uint64_t v12 = a2;
      unint64_t v13 = 0;
      uint64_t v14 = a3 - 1;
      while (v13 < *(void *)(a4 + 16))
      {
        uint64_t v15 = sub_19F1DAEFC();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v17 = *(void *)(v16 + 72);
        uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v12, a4+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ v17 * v13, v15);
        if (v14 == v13) {
          goto LABEL_11;
        }
        v12 += v17;
        if (v11 == ++v13) {
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_13;
    }
LABEL_9:
    uint64_t v10 = v11;
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_19EF9DAA8(void *a1, uint64_t *a2, uint64_t a3, id a4, uint64_t a5, uint64_t a6)
{
  if (!a2)
  {
LABEL_14:
    uint64_t v9 = 0;
    goto LABEL_17;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
LABEL_17:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = v9;
    return v9;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = a2;
    long long v20 = a1;
    a1 = objc_msgSend(a4, sel_numberOfRanges);
    uint64_t v11 = (char *)a1 - 1;
    if (!__OFSUB__(a1, 1))
    {
      uint64_t v12 = 1;
      while (1)
      {
        if ((char *)(v12 - 1) == v11)
        {
          uint64_t v9 = v12 - 1;
LABEL_16:
          a1 = v20;
          goto LABEL_17;
        }
        id v13 = objc_msgSend(a4, sel_numberOfRanges);
        if (__OFSUB__(v13, 1)) {
          break;
        }
        if (v12 - 1 >= (uint64_t)v13 - 1) {
          goto LABEL_19;
        }
        objc_msgSend(a4, sel_rangeAtIndex_, v12);
        sub_19F1DC73C();
        if (v14) {
          goto LABEL_21;
        }
        uint64_t v15 = sub_19F1DC00C();
        uint64_t v16 = MEMORY[0x19F3C6140](v15);
        uint64_t v18 = v17;
        swift_bridgeObjectRelease();
        *uint64_t v10 = v16;
        v10[1] = v18;
        if (v9 == v12) {
          goto LABEL_16;
        }
        ++v12;
        a1 = objc_msgSend(a4, sel_numberOfRanges);
        v10 += 2;
        uint64_t v11 = (char *)a1 - 1;
        if (__OFSUB__(a1, 1)) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

void *sub_19EF9DC3C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_19EF9DDD0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    long long v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_19EF9DFD0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    long long v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_19EF9E1D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  if (a2)
  {
    if (a3)
    {
      if (a3 < 0)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (!v6)
      {
LABEL_20:
        uint64_t v8 = 0;
        goto LABEL_17;
      }
      uint64_t v8 = v6 - 1;
      uint64_t v9 = a4 + 32 * (v6 - 1);
      uint64_t v10 = *(void *)(v9 + 48);
      uint64_t v11 = *(void *)(v9 + 56);
      *(_OWORD *)a2 = *(_OWORD *)(v9 + 32);
      *(void *)(a2 + 16) = v10;
      *(void *)(a2 + 24) = v11;
      if (a3 == 1)
      {
LABEL_15:
        uint64_t v6 = a3;
      }
      else if (v6 != 1)
      {
        uint64_t v12 = 0;
        uint64_t v13 = a3 - 2;
        uint64_t v14 = a4 + 32 * v6 - 32;
        unint64_t v15 = (void *)(a2 + 56);
        while (v6 + v12 - 1 <= *(void *)(a4 + 16))
        {
          uint64_t v16 = *(void *)(v14 + 16);
          uint64_t v17 = *(void *)(v14 + 24);
          *(_OWORD *)(v15 - 3) = *(_OWORD *)v14;
          *(v15 - 1) = v16;
          *unint64_t v15 = v17;
          if (!(v13 + v12))
          {
            swift_bridgeObjectRetain();
            uint64_t v8 = v6 + v12 - 2;
            goto LABEL_15;
          }
          swift_bridgeObjectRetain();
          --v12;
          v14 -= 32;
          v15 += 4;
          if (v6 + v12 == 1)
          {
            uint64_t v8 = 0;
            goto LABEL_16;
          }
        }
        __break(1u);
        goto LABEL_19;
      }
LABEL_16:
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v8 = *(void *)(a4 + 16);
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a4 + 16);
    uint64_t v6 = 0;
  }
LABEL_17:
  *a1 = a4;
  a1[1] = v8;
  return v6;
}

void sub_19EF9E308(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for JetPackAsset(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v34 = a4;
  uint64_t v17 = *(void *)(a4 + 64);
  uint64_t v16 = a4 + 64;
  uint64_t v15 = v17;
  uint64_t v18 = -1 << *(unsigned char *)(v16 - 32);
  if (-v18 < 64) {
    uint64_t v19 = ~(-1 << -(char)v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v15;
  if (!a2)
  {
    int64_t v21 = 0;
LABEL_37:
    *a1 = v34;
    a1[1] = v16;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    int64_t v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v31 = -1 << *(unsigned char *)(v16 - 32);
  BOOL v32 = a1;
  int64_t v21 = 0;
  uint64_t v22 = 0;
  int64_t v33 = (unint64_t)(63 - v18) >> 6;
  int64_t v30 = v33 - 1;
  if (!v20) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    uint64_t v28 = *(void *)(v9 + 72);
    sub_19EF93C94(*(void *)(v34 + 56) + v28 * v24, (uint64_t)v11);
    sub_19EE648F8((uint64_t)v11, (uint64_t)v14);
    sub_19EE648F8((uint64_t)v14, a2);
    if (v22 == a3) {
      goto LABEL_36;
    }
    a2 += v28;
    if (v20) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v16 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    unint64_t v20 = 0;
    int64_t v21 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v16 + 8 * v21);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v33) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v16 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    unint64_t v20 = 0;
    int64_t v21 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v16 + 8 * v21);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v21;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    unint64_t v20 = 0;
LABEL_36:
    uint64_t v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  unint64_t v26 = *(void *)(v16 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v33)
    {
      unint64_t v20 = 0;
      int64_t v21 = v30;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v16 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_40:
  __break(1u);
}

void *sub_19EF9E5D4(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v26 = -1 << *(unsigned char *)(a4 + 32);
  int64_t v27 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v28 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v18 = *(void *)(a4 + 48) + 72 * v14;
    uint64_t v19 = *(void *)(v18 + 8);
    char v20 = *(unsigned char *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v21 = *(void *)(v18 + 32);
    char v23 = *(unsigned char *)(v18 + 40);
    uint64_t v24 = *(void *)(v18 + 64);
    long long v25 = *(_OWORD *)(v18 + 48);
    *(void *)uint64_t v10 = *(void *)v18;
    *(void *)(v10 + 8) = v19;
    *(unsigned char *)(v10 + 16) = v20;
    *(void *)(v10 + 24) = v22;
    *(void *)(v10 + 32) = v21;
    *(unsigned char *)(v10 + 40) = v23;
    *(_OWORD *)(v10 + 48) = v25;
    *(void *)(v10 + 64) = v24;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v28)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v28)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v28)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v28)
              {
                unint64_t v8 = 0;
                int64_t v11 = v28 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v26;
      uint64_t result = v27;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_19EF9E858(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  uint64_t v6 = sub_19EF9D7A8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_19EEBDCB0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

size_t sub_19EF9E944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473DA0);
  uint64_t v7 = *(void *)(sub_19F1DAEFC() - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v10);
  if (v8)
  {
    if (result - v9 != 0x8000000000000000 || v8 != -1)
    {
      void v10[2] = v3;
      v10[3] = 2 * ((uint64_t)(result - v9) / v8);
      uint64_t v13 = sub_19EF9D9A4((uint64_t)&v14, (uint64_t)v10 + v9, v3, a1, a2, a3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13 == v3) {
        return (size_t)v10;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *sub_19EF9EA9C(void *a1, uint64_t a2, uint64_t a3)
{
  size_t result = (uint64_t *)objc_msgSend(a1, sel_numberOfRanges);
  uint64_t v7 = (uint64_t)result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else if ((v7 & 0x8000000000000000) == 0)
  {
    if (result != (uint64_t *)1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
      uint64_t v8 = (uint64_t *)swift_allocObject();
      int64_t v9 = _swift_stdlib_malloc_size(v8);
      uint64_t v10 = v9 - 32;
      if (v9 < 32) {
        uint64_t v10 = v9 - 17;
      }
      uint64_t v8[2] = v7;
      v8[3] = 2 * (v10 >> 4);
      id v11 = a1;
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_19EF9DAA8(&v14, v8 + 4, v7, v11, a2, a3);
      uint64_t v13 = v14;
      swift_bridgeObjectRelease();

      if (v12 == v7) {
        return v8;
      }
      __break(1u);
    }
    return (uint64_t *)MEMORY[0x1E4FBC860];
  }
  __break(1u);
  return result;
}

void *sub_19EF9EB98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471CD8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_19EF9DC3C(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_19EEBDCB0();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_19EF9EC80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_19EF9DDD0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_19EEBDCB0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_19EF9ED68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_19EF9DFD0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_19EEBDCB0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_19EF9EE50(uint64_t a1)
{
  return sub_19EF9EE5C(a1, &qword_1E946F8C8);
}

void *sub_19EF9EE5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  int64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  v4[2] = v2;
  v4[3] = 2 * (v6 >> 4);
  uint64_t v7 = sub_19EF9DDD0((uint64_t)&v9, v4 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_19EEBDCB0();
  if (v7 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v4;
}

void *sub_19EF9EF40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C58);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_19EF9E1D0(&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_19EF9F000(uint64_t a1)
{
  return sub_19EF9EE5C(a1, (uint64_t *)&unk_1E9471CE0);
}

void *sub_19EF9F00C(uint64_t a1)
{
  return sub_19EF9EE5C(a1, (uint64_t *)&unk_1EB391090);
}

size_t sub_19EF9F018(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D690);
  uint64_t v3 = *(void *)(type metadata accessor for JetPackAsset(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      long long v6[2] = v1;
      uint64_t v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_19EF9E308(&v11, (uint64_t)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_19EEBDCB0();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_19EF9F16C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB90);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 72);
  unint64_t v5 = sub_19EF9E5D4(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_19EEBDCB0();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_19EF9F268(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C788);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      _OWORD v9[2] = v5;
      void v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

void *sub_19EF9F3DC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_19EFA0378((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

uint64_t sub_19EF9F4D4(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x19F3C7070](v7, v9, a2 & 1, v5);
  *uint64_t v2 = result;
  return result;
}

void (*sub_19EF9F594(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  unint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_19EF9F84C(v6);
  v6[10] = sub_19EF9F6B4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_19EF9F640;
}

void sub_19EF9F640(uint64_t a1)
{
  unint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_19EF9F6B4(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  unint64_t v5 = v4;
  int64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  void v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_19EFB6C18(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      uint64_t v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *int64_t v10 = v19;
        return sub_19EF9F7FC;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_19EFBEC1C();
      goto LABEL_7;
    }
    sub_19EFB99CC(v16, a4 & 1);
    unint64_t v20 = sub_19EFB6C18(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      uint64_t v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_19F1DD65C();
  __break(1u);
  return result;
}

void sub_19EF9F7FC(uint64_t **a1)
{
  unint64_t v1 = *a1;
  sub_19EF9F888(*a1, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_19EF9F84C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_19EF9F87C;
}

uint64_t sub_19EF9F87C(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_19EF9F888(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_19EFBD318(a4, a5, a6, v8, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_19EF6CB60(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EF9F938(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_19F02C494(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_19EF9F9A4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_19EF9F9A4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_19F1DD2CC();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v99 = 0;
      uint64_t v100 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v102 = *(void *)(v100 + (i << 6));
        uint64_t v103 = v99;
        do
        {
          unint64_t v104 = (_OWORD *)(v100 + v103);
          if (v102 >= *(void *)(v100 + v103)) {
            break;
          }
          if (!v100) {
            goto LABEL_140;
          }
          uint64_t v105 = v100 + v103;
          uint64_t v106 = *(void *)(v100 + v103 + 88);
          uint64_t v107 = *(void *)(v100 + v103 + 96);
          uint64_t v108 = *(void *)(v100 + v103 + 120);
          long long v109 = *(_OWORD *)(v100 + v103 + 72);
          long long v110 = *(_OWORD *)(v100 + v103 + 104);
          long long v111 = v104[1];
          *(_OWORD *)(v100 + v103 + 64) = *v104;
          *(_OWORD *)(v100 + v103 + 80) = v111;
          long long v112 = v104[3];
          *(_OWORD *)(v100 + v103 + 96) = v104[2];
          *(_OWORD *)(v100 + v103 + 112) = v112;
          *(void *)uint64_t v105 = v102;
          *(_OWORD *)(v105 + 8) = v109;
          *(void *)(v105 + 24) = v106;
          *(void *)(v105 + 32) = v107;
          *(_OWORD *)(v105 + 40) = v110;
          v103 -= 64;
          *(void *)(v105 + 56) = v108;
        }
        while (v103 != -64);
        v99 += 64;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v122 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      char v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      uint64_t v113 = v12;
      uint64_t v124 = v9;
      if (v13 >= 2)
      {
        uint64_t v114 = *v122;
        do
        {
          unint64_t v115 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v114) {
            goto LABEL_144;
          }
          uint64_t v116 = v113;
          uint64_t v117 = *(void *)&v113[16 * v115 + 32];
          uint64_t v118 = *(void *)&v113[16 * v13 + 24];
          sub_19EFA00DC((char *)(v114 + (v117 << 6)), (char *)(v114 + (*(void *)&v113[16 * v13 + 16] << 6)), v114 + (v118 << 6), __dst);
          if (v1) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v116 = sub_19F132CBC((uint64_t)v116);
          }
          if (v115 >= *((void *)v116 + 2)) {
            goto LABEL_133;
          }
          uint64_t v119 = &v116[16 * v115 + 32];
          *(void *)uint64_t v119 = v117;
          *((void *)v119 + 1) = v118;
          unint64_t v120 = *((void *)v116 + 2);
          if (v13 > v120) {
            goto LABEL_134;
          }
          memmove(&v116[16 * v13 + 16], &v116[16 * v13 + 32], 16 * (v120 - v13));
          uint64_t v113 = v116;
          *((void *)v116 + 2) = v120 - 1;
          unint64_t v13 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v124 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v124 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_19F1DC1DC();
    *(void *)(v8 + 16) = v7;
    uint64_t v124 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v123 = *a1 + 128;
  uint64_t v121 = *a1 + 56;
  char v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v125 = v6;
  uint64_t v126 = v3;
  uint64_t v127 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + (v10 << 6));
      uint64_t v16 = v14 << 6;
      uint64_t v17 = *(void *)(v11 + (v14 << 6));
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (uint64_t *)(v123 + (v14 << 6));
        uint64_t v19 = v15;
        while (1)
        {
          uint64_t v21 = *v18;
          v18 += 8;
          uint64_t v20 = v21;
          if (v15 < v17 == v21 >= v19) {
            break;
          }
          ++v10;
          uint64_t v19 = v20;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v22 = v10 << 6;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              long long v25 = (_OWORD *)(v11 + v16);
              uint64_t v26 = *(void *)(v11 + v16 + 32);
              uint64_t v27 = v11 + v22;
              uint64_t v28 = *(void *)(v11 + v16 + 56);
              long long v29 = *(_OWORD *)(v11 + v16);
              long long v30 = *(_OWORD *)(v11 + v16 + 16);
              long long v31 = *(_OWORD *)(v11 + v16 + 40);
              long long v32 = *(_OWORD *)(v11 + v22 - 16);
              long long v34 = *(_OWORD *)(v11 + v22 - 64);
              long long v33 = *(_OWORD *)(v11 + v22 - 48);
              _OWORD v25[2] = *(_OWORD *)(v11 + v22 - 32);
              void v25[3] = v32;
              *long long v25 = v34;
              v25[1] = v33;
              *(_OWORD *)(v27 - 64) = v29;
              *(_OWORD *)(v27 - 48) = v30;
              *(void *)(v27 - 32) = v26;
              *(_OWORD *)(v27 - 24) = v31;
              *(void *)(v27 - 8) = v28;
            }
            ++v24;
            v22 -= 64;
            v16 += 64;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v35 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v35 >= v3) {
      uint64_t v35 = v3;
    }
    if (v35 < v14) {
      break;
    }
    if (v10 != v35)
    {
      uint64_t v36 = v121 + (v10 << 6);
      do
      {
        uint64_t v37 = *(void *)(v11 + (v10 << 6));
        uint64_t v38 = v14;
        uint64_t v39 = v36;
        do
        {
          unint64_t v40 = (_OWORD *)(v39 - 120);
          if (v37 >= *(void *)(v39 - 120)) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          long long v42 = *(_OWORD *)(v39 - 88);
          long long v41 = *(_OWORD *)(v39 - 72);
          *(void *)(v39 - 64) = *(void *)v39;
          v39 -= 64;
          uint64_t v43 = *(void *)(v39 + 32);
          uint64_t v44 = *(void *)(v39 + 40);
          long long v45 = *(_OWORD *)(v39 + 16);
          long long v46 = v40[1];
          v40[4] = *v40;
          v40[5] = v46;
          long long v47 = *(_OWORD *)(v39 + 48);
          v40[6] = v42;
          v40[7] = v41;
          *(void *)(v39 - 56) = v37;
          *(_OWORD *)(v39 - 48) = v45;
          *(void *)(v39 - 32) = v43;
          *(void *)(v39 - 24) = v44;
          *(_OWORD *)(v39 - 16) = v47;
          ++v38;
        }
        while (v10 != v38);
        ++v10;
        v36 += 64;
      }
      while (v10 != v35);
      uint64_t v10 = v35;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v12 = sub_19F132908(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v49 = *((void *)v12 + 2);
    unint64_t v48 = *((void *)v12 + 3);
    unint64_t v13 = v49 + 1;
    uint64_t v11 = v127;
    if (v49 >= v48 >> 1)
    {
      uint64_t v98 = sub_19F132908((char *)(v48 > 1), v49 + 1, 1, v12);
      uint64_t v11 = v127;
      char v12 = v98;
    }
    *((void *)v12 + 2) = v13;
    long long v50 = v12 + 32;
    uint64_t v51 = &v12[16 * v49 + 32];
    *(void *)uint64_t v51 = v14;
    *((void *)v51 + 1) = v10;
    if (v49)
    {
      while (1)
      {
        unint64_t v52 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v57 = &v50[16 * v13];
          uint64_t v58 = *((void *)v57 - 8);
          uint64_t v59 = *((void *)v57 - 7);
          BOOL v63 = __OFSUB__(v59, v58);
          uint64_t v60 = v59 - v58;
          if (v63) {
            goto LABEL_119;
          }
          uint64_t v62 = *((void *)v57 - 6);
          uint64_t v61 = *((void *)v57 - 5);
          BOOL v63 = __OFSUB__(v61, v62);
          uint64_t v55 = v61 - v62;
          char v56 = v63;
          if (v63) {
            goto LABEL_120;
          }
          unint64_t v64 = v13 - 2;
          uint64_t v65 = &v50[16 * v13 - 32];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          BOOL v63 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v63) {
            goto LABEL_122;
          }
          BOOL v63 = __OFADD__(v55, v68);
          uint64_t v69 = v55 + v68;
          if (v63) {
            goto LABEL_125;
          }
          if (v69 >= v60)
          {
            uint64_t v87 = &v50[16 * v52];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v63 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v63) {
              goto LABEL_129;
            }
            BOOL v80 = v55 < v90;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v81 = *((void *)v12 + 4);
            uint64_t v82 = *((void *)v12 + 5);
            BOOL v63 = __OFSUB__(v82, v81);
            uint64_t v74 = v82 - v81;
            char v75 = v63;
            goto LABEL_77;
          }
          uint64_t v54 = *((void *)v12 + 4);
          uint64_t v53 = *((void *)v12 + 5);
          BOOL v63 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          char v56 = v63;
        }
        if (v56) {
          goto LABEL_121;
        }
        unint64_t v64 = v13 - 2;
        uint64_t v70 = &v50[16 * v13 - 32];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v74 = v71 - v72;
        char v75 = v73;
        if (v73) {
          goto LABEL_124;
        }
        char v76 = &v50[16 * v52];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v63 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v63) {
          goto LABEL_127;
        }
        if (__OFADD__(v74, v79)) {
          goto LABEL_128;
        }
        if (v74 + v79 >= v55)
        {
          BOOL v80 = v55 < v79;
LABEL_83:
          if (v80) {
            unint64_t v52 = v64;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v75) {
          goto LABEL_123;
        }
        char v83 = &v50[16 * v52];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        BOOL v63 = __OFSUB__(v84, v85);
        uint64_t v86 = v84 - v85;
        if (v63) {
          goto LABEL_126;
        }
        if (v86 < v74) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v91 = v52 - 1;
        if (v52 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        unint64_t v92 = v12;
        uint64_t v93 = &v50[16 * v91];
        uint64_t v94 = *(void *)v93;
        uint64_t v95 = &v50[16 * v52];
        uint64_t v96 = *((void *)v95 + 1);
        sub_19EFA00DC((char *)(v11 + (*(void *)v93 << 6)), (char *)(v11 + (*(void *)v95 << 6)), v11 + (v96 << 6), __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v96 < v94) {
          goto LABEL_116;
        }
        if (v52 > *((void *)v92 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v93 = v94;
        *(void *)&v50[16 * v91 + 8] = v96;
        unint64_t v97 = *((void *)v92 + 2);
        if (v52 >= v97) {
          goto LABEL_118;
        }
        char v12 = v92;
        unint64_t v13 = v97 - 1;
        memmove(&v50[16 * v52], v95 + 16, 16 * (v97 - 1 - v52));
        *((void *)v92 + 2) = v97 - 1;
        uint64_t v11 = v127;
        if (v97 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v125;
    uint64_t v3 = v126;
    if (v10 >= v126)
    {
      uint64_t v9 = v124;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_19F1DCFBC();
  __break(1u);
  return result;
}

uint64_t sub_19EFA00DC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  int64_t v4 = (long long *)__dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 63;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 6;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 63;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 6;
  uint64_t v36 = __src;
  uint64_t v35 = (long long *)__dst;
  if (v10 >= v12 >> 6)
  {
    if (v11 >= -63)
    {
      if (__dst != a2 || &a2[64 * v13] <= __dst) {
        memmove(__dst, a2, v13 << 6);
      }
      uint64_t v22 = &v4[4 * v13];
      long long v34 = v22;
      uint64_t v36 = v6;
      if (v7 < v6 && v11 >= 64)
      {
        uint64_t v23 = (char *)(a3 - 64);
        uint64_t v24 = v6;
        while (1)
        {
          long long v25 = v23 + 64;
          uint64_t v26 = *((void *)v24 - 8);
          v24 -= 64;
          if (*((void *)v22 - 8) >= v26)
          {
            long long v34 = v22 - 4;
            if (v25 < (char *)v22 || v23 >= (char *)v22 || v25 != (char *)v22)
            {
              long long v30 = *(v22 - 4);
              long long v31 = *(v22 - 3);
              long long v32 = *(v22 - 1);
              *((_OWORD *)v23 + 2) = *(v22 - 2);
              *((_OWORD *)v23 + 3) = v32;
              *(_OWORD *)uint64_t v23 = v30;
              *((_OWORD *)v23 + 1) = v31;
            }
            uint64_t v24 = v6;
            v22 -= 4;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v25 != v6 || v23 >= v6)
            {
              long long v27 = *(_OWORD *)v24;
              long long v28 = *((_OWORD *)v24 + 1);
              long long v29 = *((_OWORD *)v24 + 3);
              *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
              *((_OWORD *)v23 + 3) = v29;
              *(_OWORD *)uint64_t v23 = v27;
              *((_OWORD *)v23 + 1) = v28;
            }
            uint64_t v36 = v24;
            if (v24 <= v7) {
              goto LABEL_42;
            }
          }
          v23 -= 64;
          uint64_t v6 = v24;
          if (v22 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -63)
  {
    if (__dst != __src || &__src[64 * v10] <= __dst) {
      memmove(__dst, __src, v10 << 6);
    }
    uint64_t v14 = &v4[4 * v10];
    long long v34 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 64)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != (char *)v4)
          {
            long long v19 = *v4;
            long long v20 = v4[1];
            long long v21 = v4[3];
            *((_OWORD *)v7 + 2) = v4[2];
            *((_OWORD *)v7 + 3) = v21;
            *(_OWORD *)uint64_t v7 = v19;
            *((_OWORD *)v7 + 1) = v20;
          }
          v4 += 4;
          uint64_t v35 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 64;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            long long v16 = *(_OWORD *)v6;
            long long v17 = *((_OWORD *)v6 + 1);
            long long v18 = *((_OWORD *)v6 + 3);
            *((_OWORD *)v7 + 2) = *((_OWORD *)v6 + 2);
            *((_OWORD *)v7 + 3) = v18;
            *(_OWORD *)uint64_t v7 = v16;
            *((_OWORD *)v7 + 1) = v17;
          }
        }
        v7 += 64;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v36 = v7;
    }
LABEL_42:
    sub_19F132A04((void **)&v36, (const void **)&v35, &v34);
    return 1;
  }
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19EFA0378(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_19EFA0BC0();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471C18);
          uint64_t v12 = sub_19F0CCE48(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_19EF87BBC();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

void sub_19EFA057C(unint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_19F1DD03C();
    if (v6) {
      goto LABEL_3;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_37;
  }
LABEL_3:
  uint64_t v35 = v3;
  unint64_t v40 = v5;
  unint64_t v41 = v5 & 0xC000000000000001;
  uint64_t v7 = 4;
  uint64_t v39 = v6;
  while (1)
  {
    uint64_t v3 = v7 - 4;
    if (v41)
    {
      uint64_t v8 = (void *)MEMORY[0x19F3C7060](v7 - 4, v5);
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v3, 1)) {
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v8 = *(void **)(v5 + 8 * v7);
      swift_retain();
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v3, 1))
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
    uint64_t v10 = v8[6];
    uint64_t v12 = a2[5];
    uint64_t v11 = a2[6];
    uint64_t v13 = *a2;
    uint64_t v14 = a2[1];
    uint64_t v15 = a2[2];
    uint64_t v16 = a2[3];
    if (!v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19EE89208(0, 0, 0, 0);
      sub_19EE89208(v13, v14, v15, v16);
      goto LABEL_32;
    }
    uint64_t v18 = v8[3];
    uint64_t v17 = v8[4];
    uint64_t v38 = v8[8];
    uint64_t v19 = v8[9];
    if (v8[5] != v15 || v10 != v16)
    {
      uint64_t v21 = a2[5];
      uint64_t v22 = a2[6];
      uint64_t v36 = a2[1];
      uint64_t v37 = v9;
      uint64_t v23 = *a2;
      uint64_t v24 = v8[9];
      long long v25 = a2;
      uint64_t v26 = v8[4];
      uint64_t v27 = v8[3];
      char v28 = sub_19F1DD44C();
      uint64_t v18 = v27;
      uint64_t v17 = v26;
      a2 = v25;
      uint64_t v19 = v24;
      uint64_t v13 = v23;
      uint64_t v14 = v36;
      uint64_t v9 = v37;
      uint64_t v11 = v22;
      uint64_t v12 = v21;
      if ((v28 & 1) == 0) {
        goto LABEL_32;
      }
    }
    if (v17)
    {
      if (!v14) {
        goto LABEL_32;
      }
      if (v18 != v13 || v17 != v14)
      {
        uint64_t v29 = v11;
        uint64_t v30 = v19;
        char v31 = sub_19F1DD44C();
        uint64_t v19 = v30;
        uint64_t v11 = v29;
        if ((v31 & 1) == 0) {
          goto LABEL_32;
        }
      }
    }
    else if (v14)
    {
      goto LABEL_32;
    }
    char v32 = v11 == 0;
    if (v19) {
      break;
    }
LABEL_28:
    if (v32) {
      goto LABEL_29;
    }
LABEL_32:
    swift_release();
    unint64_t v5 = v40;
LABEL_33:
    ++v7;
    if (v9 == v39) {
      goto LABEL_37;
    }
  }
  if (!v11) {
    goto LABEL_32;
  }
  if (v38 != v12 || v19 != v11)
  {
    char v32 = sub_19F1DD44C();
    goto LABEL_28;
  }
LABEL_29:
  uint64_t v33 = v8[13];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v33 + 20));
  sub_19EEC4E5C((unsigned char *)(v33 + 16), &v42);
  long long v34 = (os_unfair_lock_s *)(v33 + 20);
  if (!v35)
  {
    os_unfair_lock_unlock(v34);
    swift_release();
    swift_release();
    unint64_t v5 = v40;
    if (!v42) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  os_unfair_lock_unlock(v34);
  __break(1u);
}

uint64_t sub_19EFA0890(uint64_t a1)
{
  return a1;
}

uint64_t sub_19EFA0904(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for DynamicImpressionsTracker()
{
  return self;
}

uint64_t method lookup function for DynamicImpressionsTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DynamicImpressionsTracker);
}

uint64_t dispatch thunk of DynamicImpressionsTracker.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t initializeBufferWithCopyOfBuffer for DynamicImpressionsTracker.Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DynamicImpressionsTracker.Configuration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DynamicImpressionsTracker.Configuration(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DynamicImpressionsTracker.Configuration()
{
  return &type metadata for DynamicImpressionsTracker.Configuration;
}

uint64_t getEnumTagSinglePayload for DynamicImpressionsTracker.ParentOrdering(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DynamicImpressionsTracker.ParentOrdering(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void *sub_19EFA0B38(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicImpressionsTracker.ParentOrdering()
{
  return &type metadata for DynamicImpressionsTracker.ParentOrdering;
}

unint64_t sub_19EFA0B6C()
{
  unint64_t result = qword_1E946D390[0];
  if (!qword_1E946D390[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E946D390);
  }
  return result;
}

unint64_t sub_19EFA0BC0()
{
  unint64_t result = qword_1E9471CD0;
  if (!qword_1E9471CD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9471C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471CD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackUnknownError()
{
  return &type metadata for JetPackUnknownError;
}

uint64_t dispatch thunk of TreatmentFilter.treat(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_19EFA0C58()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x1F4188298](sub_19EFA0C78, 0, 0);
}

uint64_t sub_19EFA0C78()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v0[3] = v0[4];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E688);
  void *v1 = v0;
  v1[1] = sub_19EFA0DB4;
  uint64_t v2 = v0[4];
  return MEMORY[0x1F41881B8](v0 + 2, v0 + 3, &unk_1E9471D90, v2, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19EFA0DB4()
{
  uint64_t v2 = (void *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19EFA5158, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[2];
    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(v3);
  }
}

uint64_t sub_19EFA0EEC()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x1F4188298](sub_19EFA0F0C, 0, 0);
}

uint64_t sub_19EFA0F0C()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v0[3] = v0[4];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F908);
  void *v1 = v0;
  v1[1] = sub_19EFA0DB4;
  uint64_t v2 = v0[4];
  return MEMORY[0x1F41881B8](v0 + 2, v0 + 3, &unk_1E9471D70, v2, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19EFA1048()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x1F4188298](sub_19EFA1068, 0, 0);
}

uint64_t sub_19EFA1068()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v0[3] = v0[4];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471D40);
  void *v1 = v0;
  v1[1] = sub_19EFA0DB4;
  uint64_t v2 = v0[4];
  return MEMORY[0x1F41881B8](v0 + 2, v0 + 3, &unk_1E9471D38, v2, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19EFA11A4()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x1F4188298](sub_19EFA11C4, 0, 0);
}

uint64_t sub_19EFA11C4()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v0[3] = v0[4];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471D60);
  void *v1 = v0;
  v1[1] = sub_19EFA1300;
  uint64_t v2 = v0[4];
  return MEMORY[0x1F41881B8](v0 + 2, v0 + 3, &unk_1E9471D58, v2, 0, 0, 0xD00000000000001FLL, 0x800000019F268F80);
}

uint64_t sub_19EFA1300()
{
  uint64_t v2 = (void *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_19EF71B4C, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[2];
    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(v3);
  }
}

void URLJetPackAssetFetcher.init(bag:urlSessionConfiguration:requestEncoder:)(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  id v8 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  swift_unknownObjectRetain();
  id v9 = a2;
  uint64_t v10 = (void *)sub_19F1DBD4C();
  id v11 = objc_msgSend(v8, sel_initWithContainerID_bag_, v10, a1);

  swift_unknownObjectRelease();
  *a4 = v9;
  a4[1] = a1;
  a4[2] = v11;
}

uint64_t URLJetPackAssetFetcher.init(bag:urlSessionConfiguration:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  swift_unknownObjectRetain();
  id v7 = a2;
  id v8 = (void *)sub_19F1DBD4C();
  id v9 = objc_msgSend(v6, sel_initWithContainerID_bag_, v8, a1);

  uint64_t result = swift_unknownObjectRelease();
  *a3 = v7;
  a3[1] = a1;
  a3[2] = v9;
  return result;
}

uint64_t URLJetPackAssetFetcher._fetch(_:candidate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 656) = a3;
  *(void *)(v4 + 648) = a2;
  *(void *)(v4 + 640) = a1;
  *(void *)(v4 + 664) = type metadata accessor for JetPackAsset.Metadata(0);
  *(void *)(v4 + 672) = swift_task_alloc();
  *(void *)(v4 + 680) = swift_task_alloc();
  *(void *)(v4 + 688) = type metadata accessor for JetPackDataStreamSource();
  *(void *)(v4 + 696) = swift_task_alloc();
  uint64_t v5 = sub_19F1DB57C();
  *(void *)(v4 + 704) = v5;
  *(void *)(v4 + 712) = *(void *)(v5 - 8);
  *(void *)(v4 + 720) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3911D0);
  *(void *)(v4 + 728) = swift_task_alloc();
  *(void *)(v4 + 736) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for JetPackAsset(0);
  *(void *)(v4 + 744) = v6;
  *(void *)(v4 + 752) = *(void *)(v6 - 8);
  *(void *)(v4 + 760) = swift_task_alloc();
  *(void *)(v4 + 768) = swift_task_alloc();
  uint64_t v7 = sub_19F1DB34C();
  *(void *)(v4 + 776) = v7;
  *(void *)(v4 + 784) = *(void *)(v7 - 8);
  *(void *)(v4 + 792) = swift_task_alloc();
  uint64_t v8 = sub_19F1DACDC();
  *(void *)(v4 + 800) = v8;
  *(void *)(v4 + 808) = *(void *)(v8 - 8);
  *(void *)(v4 + 816) = swift_task_alloc();
  *(_OWORD *)(v4 + 824) = *(_OWORD *)v3;
  *(void *)(v4 + 840) = *(void *)(v3 + 16);
  return MEMORY[0x1F4188298](sub_19EFA1848, 0, 0);
}

uint64_t sub_19EFA1848()
{
  uint64_t v1 = (void *)v0[103];
  objc_msgSend(v1, sel_set_timingDataOptions_, (unint64_t)objc_msgSend(v1, sel__timingDataOptions) | 0x45);
  v0[106] = objc_msgSend(self, sel_sessionWithConfiguration_, v1);
  type metadata accessor for BaseObjectGraph();
  v0[107] = static BaseObjectGraph.current.getter();
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1E9471D00 + dword_1E9471D00);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[108] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EFA1954;
  return v4();
}

uint64_t sub_19EFA1954(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 872) = a1;
  *(void *)(v3 + 880) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_19EFA2F2C;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_19EFA1A74;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19EFA1A74()
{
  uint64_t v60 = v0;
  if (*(void *)(v0 + 872))
  {
    swift_retain();
    uint64_t v1 = sub_19F18D8AC();
    swift_release();
  }
  else
  {
    sub_19F1DB9CC();
    uint64_t v1 = sub_19F1DB99C();
  }
  uint64_t v2 = (long long *)(v0 + 448);
  *(void *)(v0 + 888) = v1;
  sub_19F1DB9AC();
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 784);
  uint64_t v4 = *(void *)(v0 + 776);
  uint64_t v5 = *(void *)(v0 + 648);
  uint64_t v6 = (void *)qword_1EB390E30;
  *(void *)(v0 + 896) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_19F24EAD0;
  id v54 = v6;
  char v56 = sub_19EEC3F3C(0, 34, 0, MEMORY[0x1E4FBC860]);
  v7._uint64_t countAndFlagsBits = 0xD000000000000021;
  v7._object = (void *)0x800000019F26B4E0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  *(void *)(v0 + 544) = v4;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 520));
  id v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 904) = v9;
  *(void *)(v0 + 912) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v53 = v9;
  v9((uint64_t)boxed_opaque_existential_2Tm, v5, v4);
  sub_19EEC3ED8(v0 + 520, v0 + 488, &qword_1EB393260);
  *uint64_t v2 = 0u;
  *(_OWORD *)(v0 + 464) = 0u;
  sub_19EEC3E70(v0 + 488, v0 + 448);
  *(unsigned char *)(v0 + 480) = 0;
  long long v10 = *(_OWORD *)(v0 + 464);
  long long v57 = *v2;
  long long v58 = v10;
  char v59 = *(unsigned char *)(v0 + 480);
  id v11 = v56;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v11 = sub_19EEC3F3C(0, v56[2] + 1, 1, v56);
  }
  unint64_t v13 = v11[2];
  unint64_t v12 = v11[3];
  if (v13 >= v12 >> 1) {
    id v11 = sub_19EEC3F3C((void *)(v12 > 1), v13 + 1, 1, v11);
  }
  uint64_t v14 = *(void *)(v0 + 792);
  uint64_t v15 = *(void *)(v0 + 776);
  uint64_t v16 = *(void *)(v0 + 752);
  uint64_t v51 = *(void *)(v0 + 736);
  uint64_t v52 = *(void *)(v0 + 744);
  uint64_t v50 = *(void *)(v0 + 656);
  uint64_t v17 = *(void *)(v0 + 648);
  long long v11[2] = v13 + 1;
  uint64_t v18 = &v11[5 * v13];
  long long v19 = v57;
  long long v20 = v58;
  *((unsigned char *)v18 + 64) = v59;
  *((_OWORD *)v18 + 2) = v19;
  *((_OWORD *)v18 + 3) = v20;
  char v56 = v11;
  sub_19EEBD664(v0 + 520, &qword_1EB393260);
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *(void *)(v55 + 32) = v11;
  *(void *)&long long v57 = v54;
  LOBYTE(v56) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v55, (JetEngine::LogMessageLevel)&v56);
  swift_bridgeObjectRelease();

  v53(v14, v17, v15);
  sub_19F1DAC9C();
  sub_19F1DAC3C();
  sub_19F1DACCC();
  sub_19EEC3ED8(v50, v51, &qword_1EB3911D0);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  *(void *)(v0 + 920) = v22;
  *(void *)(v0 + 928) = (v16 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v22(v51, 1, v52) == 1)
  {
    sub_19EEBD664(*(void *)(v0 + 736), &qword_1EB3911D0);
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 768);
    uint64_t v24 = *(void *)(v0 + 744);
    sub_19EFA4288(*(void *)(v0 + 736), v23, type metadata accessor for JetPackAsset);
    uint64_t v25 = v23 + *(int *)(v24 + 20);
    if (*(void *)(v25 + 24))
    {
      swift_bridgeObjectRetain();
      sub_19F1DACCC();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v25 + 8))
    {
      swift_bridgeObjectRetain();
      sub_19F1DACCC();
      swift_bridgeObjectRelease();
    }
    sub_19EFA42F0(*(void *)(v0 + 768), type metadata accessor for JetPackAsset);
  }
  uint64_t v26 = *(void **)(v0 + 848);
  uint64_t v27 = *(void **)(v0 + 840);
  uint64_t v28 = *(void *)(v0 + 832);
  uint64_t v29 = *(void **)(v0 + 824);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390E28);
  uint64_t v30 = swift_allocObject();
  *(void *)(v0 + 936) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v31 = swift_allocObject();
  *(_DWORD *)(v31 + 16) = 0;
  *(void *)(v30 + 16) = v31;
  *(void *)(v30 + 24) = MEMORY[0x1E4FBC860];
  *(void *)(v30 + 32) = 0;
  *(void *)(v30 + 40) = 0;
  *(unsigned char *)(v30 + 48) = 0;
  char v32 = (void *)sub_19F1DAC5C();
  *(void *)(v0 + 272) = sub_19EFA415C;
  *(void *)(v0 + 280) = v30;
  *(void *)(v0 + 240) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 248) = 1107296256;
  *(void *)(v0 + 256) = sub_19EFA316C;
  *(void *)(v0 + 264) = &block_descriptor_8;
  uint64_t v33 = _Block_copy((const void *)(v0 + 240));
  swift_retain();
  swift_release();
  id v34 = objc_msgSend(v26, sel_dataTaskWithRequest_completionHandler_, v32, v33);
  *(void *)(v0 + 944) = v34;
  _Block_release(v33);

  id v35 = v34;
  swift_retain();
  sub_19F1DC7FC();

  objc_msgSend(v35, sel_resume);
  sub_19EFA3234();
  uint64_t v36 = (void *)swift_allocObject();
  _OWORD v36[2] = v29;
  v36[3] = v28;
  v36[4] = v27;
  v36[5] = v35;
  uint64_t v36[6] = v26;
  uint64_t v37 = (void *)swift_allocObject();
  void v37[2] = v29;
  _OWORD v37[3] = v28;
  void v37[4] = v27;
  v37[5] = v35;
  v37[6] = v26;
  unint64_t v38 = sub_19EEA5F34();
  id v39 = v35;
  id v40 = v29;
  swift_unknownObjectRetain_n();
  id v41 = v27;
  id v42 = v26;
  id v43 = v39;
  id v44 = v40;
  id v45 = v41;
  id v46 = v42;
  long long v47 = (void *)sub_19F1DC87C();
  *(void *)(v0 + 352) = v38;
  *(void *)(v0 + 360) = &protocol witness table for OS_dispatch_queue;
  *(void *)(v0 + 328) = v47;
  *(void *)(v0 + 160) = sub_19EFA4168;
  *(void *)(v0 + 168) = v36;
  *(void *)(v0 + 176) = sub_19EFA417C;
  *(void *)(v0 + 184) = v37;
  sub_19EEC4154(v0 + 328, v0 + 192);
  *(unsigned char *)(v0 + 232) = 0;
  id v48 = v47;
  swift_retain();
  swift_retain();
  sub_19EF544C0(v0 + 160);
  sub_19EEBD664(v0 + 160, &qword_1EB390C20);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 328);
  swift_release();
  swift_release();

  return MEMORY[0x1F4188298](sub_19EFA21CC, 0, 0);
}

uint64_t sub_19EFA21CC()
{
  uint64_t v1 = v0 + 2;
  v0[2] = v0;
  v0[7] = v0 + 77;
  v0[3] = sub_19EFA2290;
  v0[10] = swift_continuation_init();
  uint64_t v2 = (uint64_t)(v0 + 10);
  *(unsigned char *)(v2 + 72) = 1;
  sub_19EF544C0(v2);
  sub_19EEBD664(v2, &qword_1EB390C20);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_19EFA2290()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 952) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_19EFA2DD8;
  }
  else
  {
    *(_OWORD *)(v1 + 960) = *(_OWORD *)(v1 + 616);
    *(void *)(v1 + 976) = *(void *)(v1 + 632);
    uint64_t v3 = sub_19EFA23C0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19EFA23C0()
{
  uint64_t v117 = v0;
  uint64_t v1 = *(void **)(v0 + 976);
  if (!v1)
  {
    uint64_t v93 = 0;
    uint64_t v108 = 0;
LABEL_7:
    uint64_t v106 = (uint64_t *)(v0 + 288);
    unint64_t v20 = *(void *)(v0 + 968);
    uint64_t v21 = *(void *)(v0 + 960);
    uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 904);
    uint64_t v22 = *(void *)(v0 + 784);
    uint64_t v23 = *(void *)(v0 + 776);
    uint64_t v24 = *(uint64_t **)(v0 + 696);
    uint64_t v25 = *(void *)(v0 + 688);
    uint64_t v26 = *(void *)(v0 + 648);
    sub_19EEA0784(v21, v20);
    sub_19EE445C0((unint64_t *)&qword_1EB392878, MEMORY[0x1E4F276F0]);
    uint64_t v27 = sub_19F1DD2EC();
    uint64_t v29 = v28;
    uint64_t v30 = (char *)v24 + *(int *)(v25 + 24);
    v96(v30, v26, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v30, 0, 1, v23);
    *uint64_t v24 = v21;
    v24[1] = v20;
    _OWORD v24[2] = v27;
    void v24[3] = v29;
    if (v93)
    {
      id v31 = v108;
      char v32 = (void *)sub_19F1DBD4C();
      id v33 = objc_msgSend(v31, sel_valueForHTTPHeaderField_, v32);

      if (v33)
      {
        uint64_t v34 = sub_19F1DBD7C();
        uint64_t v36 = v35;
      }
      else
      {
        uint64_t v34 = 0;
        uint64_t v36 = 0;
      }
      uint64_t v44 = v36;
      uint64_t v45 = v34;
      id v46 = v31;
      long long v47 = (void *)sub_19F1DBD4C();
      id v48 = objc_msgSend(v46, sel_valueForHTTPHeaderField_, v47);

      uint64_t v78 = v44;
      uint64_t v79 = v45;
      if (v48)
      {
        uint64_t v49 = sub_19F1DBD7C();
        uint64_t v80 = v50;
        uint64_t v81 = v49;
      }
      else
      {
        uint64_t v80 = 0;
        uint64_t v81 = 0;
      }
    }
    else
    {
      uint64_t v80 = 0;
      uint64_t v81 = 0;
      uint64_t v78 = 0;
      uint64_t v79 = 0;
    }
    uint64_t v51 = *(void **)(v0 + 976);
    uint64_t v86 = *(void *)(v0 + 960);
    unint64_t v87 = *(void *)(v0 + 968);
    uint64_t v90 = *(void **)(v0 + 944);
    uint64_t v88 = *(void **)(v0 + 848);
    uint64_t v52 = *(void *)(v0 + 808);
    uint64_t v95 = *(void *)(v0 + 800);
    uint64_t v98 = *(void *)(v0 + 816);
    int64_t v101 = *(int **)(v0 + 744);
    uint64_t v83 = *(void *)(v0 + 688);
    uint64_t v84 = *(void *)(v0 + 696);
    uint64_t v53 = *(uint64_t **)(v0 + 680);
    uint64_t v85 = *(void *)(v0 + 672);
    id v54 = *(int **)(v0 + 664);
    uint64_t v55 = *(void *)(v0 + 640);
    sub_19F1DB56C();
    id v56 = objc_msgSend(self, sel_processInfo);
    objc_msgSend(v56, sel_operatingSystemVersion);
    long long v82 = v111;
    uint64_t v57 = v112;

    long long v58 = JEGestaltGetBuildVersion();
    uint64_t v59 = sub_19F1DBD7C();
    uint64_t v61 = v60;

    sub_19EFA3774(v51, (uint64_t)&v111);
    uint64_t v62 = v111;
    char v63 = BYTE8(v111);
    uint64_t v64 = v112;
    char v65 = v113;
    uint64_t v66 = v114;
    char v67 = v115;
    uint64_t *v53 = v79;
    v53[1] = v78;
    _OWORD v53[2] = v81;
    v53[3] = v80;
    uint64_t v68 = (char *)v53 + v54[7];
    *(_OWORD *)uint64_t v68 = v82;
    *((void *)v68 + 2) = v57;
    v68[24] = 0;
    uint64_t v69 = (uint64_t *)((char *)v53 + v54[8]);
    *uint64_t v69 = v59;
    v69[1] = v61;
    uint64_t v70 = (char *)v53 + v54[9];
    *(void *)uint64_t v70 = v62;
    v70[8] = v63;
    *((void *)v70 + 2) = v64;
    v70[24] = v65;
    *((void *)v70 + 4) = v66;
    v70[40] = v67;
    *(void *)(v0 + 312) = v83;
    *(void *)(v0 + 320) = &protocol witness table for JetPackDataStreamSource;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v106);
    sub_19EFA41CC(v84, (uint64_t)boxed_opaque_existential_2Tm, (uint64_t (*)(void))type metadata accessor for JetPackDataStreamSource);
    sub_19EFA41CC((uint64_t)v53, v85, type metadata accessor for JetPackAsset.Metadata);
    uint64_t v72 = sub_19F1DD2EC();
    uint64_t v74 = v73;
    sub_19EEA072C(v86, v87);

    swift_release();
    swift_release();
    swift_release();
    sub_19EFA42F0((uint64_t)v53, type metadata accessor for JetPackAsset.Metadata);
    sub_19EFA42F0(v84, (uint64_t (*)(void))type metadata accessor for JetPackDataStreamSource);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v98, v95);
    sub_19EEBB420((long long *)v106, v55);
    sub_19EFA4288(v85, v55 + v101[5], type metadata accessor for JetPackAsset.Metadata);
    unsigned int v110 = 0;
    uint64_t v75 = v55 + v101[6];
    *(_DWORD *)uint64_t v75 = 0;
    *(unsigned char *)(v75 + 4) = 1;
    char v76 = (uint64_t *)(v55 + v101[7]);
    *char v76 = v72;
    v76[1] = v74;
    goto LABEL_17;
  }
  if (objc_msgSend(*(id *)(v0 + 976), sel_statusCode) != (id)304)
  {
    uint64_t v93 = v1;
    uint64_t v108 = *(void **)(v0 + 976);
    goto LABEL_7;
  }
  uint64_t v102 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 920);
  uint64_t v99 = *(void *)(v0 + 744);
  uint64_t v2 = *(void *)(v0 + 728);
  uint64_t v3 = *(void *)(v0 + 656);
  uint64_t v4 = (void *)qword_1EB390E30;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  *(void *)(v0 + 576) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 552) = 0xD00000000000002ALL;
  *(void *)(v0 + 560) = 0x800000019F26B540;
  *(_OWORD *)(v0 + 408) = 0u;
  *(_OWORD *)(v0 + 424) = 0u;
  id v7 = v4;
  sub_19EEC3E70(v0 + 552, v0 + 408);
  *(unsigned char *)(v0 + 440) = 0;
  long long v8 = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(v0 + 408);
  *(_OWORD *)(v6 + 48) = v8;
  *(unsigned char *)(v6 + 64) = *(unsigned char *)(v0 + 440);
  *(void *)(v5 + 32) = v6;
  *(void *)&long long v111 = v7;
  v116[0] = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)v116);
  swift_bridgeObjectRelease();

  sub_19EEC3ED8(v3, v2, &qword_1EB3911D0);
  if (v102(v2, 1, v99) == 1)
  {
    unint64_t v9 = *(void *)(v0 + 968);
    uint64_t v10 = *(void *)(v0 + 960);
    unint64_t v92 = *(void **)(v0 + 944);
    unint64_t v91 = *(void **)(v0 + 848);
    uint64_t v105 = *(void *)(v0 + 816);
    uint64_t v11 = *(void *)(v0 + 808);
    uint64_t v103 = *(void *)(v0 + 800);
    sub_19EEBD664(*(void *)(v0 + 728), &qword_1EB3911D0);
    unint64_t v12 = (void *)qword_1EB390E30;
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19F24EAD0;
    *(void *)(v0 + 608) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 584) = 0xD000000000000033;
    *(void *)(v0 + 592) = 0x800000019F26B570;
    *(_OWORD *)(v0 + 368) = 0u;
    *(_OWORD *)(v0 + 384) = 0u;
    id v15 = v12;
    sub_19EEC3E70(v0 + 584, v0 + 368);
    *(unsigned char *)(v0 + 400) = 0;
    *(unsigned char *)(v14 + 64) = 0;
    long long v16 = *(_OWORD *)(v0 + 384);
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v0 + 368);
    *(_OWORD *)(v14 + 48) = v16;
    *(void *)(v13 + 32) = v14;
    *(void *)&long long v111 = v15;
    v116[0] = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)v116);
    swift_bridgeObjectRelease();

    sub_19EFA4234();
    swift_allocError();
    *uint64_t v17 = 0;
    swift_willThrow();
    sub_19EEA072C(v10, v9);

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v105, v103);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v19 = 0;
    goto LABEL_18;
  }
  unint64_t v37 = *(void *)(v0 + 968);
  uint64_t v38 = *(void *)(v0 + 960);
  uint64_t v89 = *(void **)(v0 + 944);
  id v39 = *(void **)(v0 + 848);
  uint64_t v40 = *(void *)(v0 + 808);
  uint64_t v97 = *(void *)(v0 + 800);
  uint64_t v41 = *(void *)(v0 + 760);
  uint64_t v100 = *(void *)(v0 + 744);
  uint64_t v104 = *(void *)(v0 + 816);
  uint64_t v42 = *(void *)(v0 + 720);
  uint64_t v43 = *(void *)(v0 + 712);
  uint64_t v107 = *(void *)(v0 + 704);
  uint64_t v94 = *(void *)(v0 + 664);
  uint64_t v109 = *(void *)(v0 + 640);
  sub_19EFA4288(*(void *)(v0 + 728), v41, type metadata accessor for JetPackAsset);
  sub_19F1DB56C();
  sub_19EEA072C(v38, v37);

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v104, v97);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 40))(v41 + *(int *)(v100 + 20) + *(int *)(v94 + 24), v42, v107);
  sub_19EFA4288(v41, v109, type metadata accessor for JetPackAsset);
  unsigned int v110 = 1;
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v19 = v110;
LABEL_18:
  return v18(v19);
}

uint64_t sub_19EFA2DD8()
{
  uint64_t v1 = *(void **)(v0 + 944);
  uint64_t v2 = *(void *)(v0 + 816);
  uint64_t v3 = *(void *)(v0 + 808);
  uint64_t v4 = *(void *)(v0 + 800);

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5(0);
}

uint64_t sub_19EFA2F2C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

void sub_19EFA303C(uint64_t a1, unint64_t a2, void *a3, id a4)
{
  if (a2 >> 60 == 15)
  {
    if (a4)
    {
      id v5 = a4;
    }
    else
    {
      sub_19EFA4234();
      id v5 = (id)swift_allocError();
      *unint64_t v12 = 1;
    }
    id v13 = a4;
    sub_19F07F6A0(v5);
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 && (self, (uint64_t v9 = swift_dynamicCastObjCClass()) != 0))
    {
      id v14 = (id)v9;
      id v10 = a3;
    }
    else
    {
      id v14 = 0;
    }
    sub_19EEA0784(a1, a2);
    sub_19F1AF388(a1, a2, v14);
    sub_19EEA072C(a1, a2);
    uint64_t v11 = v14;
  }
}

uint64_t sub_19EFA316C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    uint64_t v6 = (void *)sub_19F1DB40C();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_19EED5BFC((uint64_t)v6, v10);
  return swift_release();
}

uint64_t sub_19EFA3234()
{
  id v8 = &type metadata for SyncTaskScheduler;
  unint64_t v9 = &protocol witness table for SyncTaskScheduler;
  uint64_t v2 = sub_19EFA4FE8;
  uint64_t v3 = v0;
  uint64_t v4 = sub_19EFA4FF0;
  uint64_t v5 = v0;
  sub_19EEC4154((uint64_t)v7, (uint64_t)v6);
  v6[40] = 0;
  swift_retain_n();
  sub_19EF544C0((uint64_t)&v2);
  sub_19EEBD664((uint64_t)&v2, &qword_1EB390C20);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  return swift_release_n();
}

uint64_t sub_19EFA32E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  sub_19EEA0784(*a1, v10);
  sub_19EEA0784(v9, v10);
  sub_19EFA33A0(a5, a6, a3, v9, v10, 0);
  sub_19EEA072C(v9, v10);
  return sub_19EEA072C(v9, v10);
}

uint64_t sub_19EFA33A0(void *a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6)
{
  unint64_t v37 = a6;
  unint64_t v38 = a5;
  uint64_t v36 = a4;
  uint64_t v42 = sub_19F1DB9FC();
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19F1DBA3C();
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v40 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_19F1DBA0C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  long long v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)v6;
  uint64_t v18 = *(void *)(v6 + 8);
  uint64_t v19 = *(void **)(v6 + 16);
  sub_19EEA5F34();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCB10], v13);
  uint64_t v39 = sub_19F1DC8BC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  unint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a1;
  long long v20[3] = a3;
  uint64_t v21 = v36;
  uint64_t v22 = v37;
  void v20[4] = a2;
  void v20[5] = v22;
  unint64_t v23 = v38;
  v20[6] = v21;
  v20[7] = v23;
  v20[8] = v17;
  v20[9] = v18;
  v20[10] = v19;
  aBlock[4] = sub_19EFA4FB0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EEA4A68;
  aBlock[3] = &block_descriptor_27;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = a1;
  swift_unknownObjectRetain();
  id v26 = a2;
  id v27 = v22;
  sub_19EEE0560(v21, v23);
  id v28 = v17;
  swift_unknownObjectRetain();
  id v29 = v19;
  uint64_t v30 = v40;
  sub_19F1DBA1C();
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_19EE445C0(qword_1EB392FC0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393048);
  sub_19EEC8CCC();
  char v32 = v41;
  uint64_t v31 = v42;
  sub_19F1DCC1C();
  id v33 = (void *)v39;
  MEMORY[0x19F3C6B90](0, v30, v32, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v44);
  return swift_release();
}

uint64_t sub_19EFA3774@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_19F1DBDEC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  if (a1)
  {
    uint64_t v9 = (void *)sub_19F1DBD4C();
    id v10 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v9);

    if (v10)
    {
      sub_19F1DBD7C();

      sub_19F1DBDCC();
      uint64_t v11 = sub_19F1DBD8C();
      unint64_t v13 = v12;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (v13 >> 60 != 15)
      {
        sub_19F1DAD0C();
        swift_allocObject();
        sub_19F1DACFC();
        sub_19EE4C4C8();
        sub_19F1DACEC();
        swift_release();
        sub_19EED5BFC(v11, v13);
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v8 = MEMORY[0x1E4FBB1A0];
    }
  }
  if (qword_1EB390E38 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_1EB390E30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v15 = swift_allocObject();
  long long v20 = xmmword_19F24EAD0;
  *(_OWORD *)(v15 + 16) = xmmword_19F24EAD0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v20;
  void v21[3] = v8;
  v21[0] = 0xD000000000000022;
  v21[1] = 0x800000019F26B5D0;
  long long v22 = 0u;
  long long v23 = 0u;
  id v17 = v14;
  sub_19EEC3E70((uint64_t)v21, (uint64_t)&v22);
  *(unsigned char *)(v16 + 64) = 0;
  long long v18 = v23;
  *(_OWORD *)(v16 + 32) = v22;
  *(_OWORD *)(v16 + 48) = v18;
  *(void *)(v15 + 32) = v16;
  *(void *)&long long v22 = v17;
  LOBYTE(v21[0]) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)v21);

  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = 0x40AC200000000000;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  *(void *)(a2 + 32) = 0x4143C68000000000;
  *(unsigned char *)(a2 + 40) = 0;
  return result;
}

void sub_19EFA3DB0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  id v14 = objc_msgSend(a1, sel__incompleteTaskMetrics);
  id v15 = objc_allocWithZone(MEMORY[0x1E4F4DD80]);
  id v16 = a1;
  id v20 = objc_msgSend(v15, sel_initWithTask_metrics_, v16, v14);

  objc_msgSend(v20, sel_setBag_, a2);
  objc_msgSend(v20, sel_setSession_, a3);
  if (a4) {
    a4 = (void *)sub_19F1DB18C();
  }
  objc_msgSend(v20, sel_setError_, a4);

  id v17 = objc_msgSend(self, sel_currentProcess);
  objc_msgSend(v20, sel_setProcessInfo_, v17);

  if (a6 >> 60 == 15) {
    long long v18 = 0;
  }
  else {
    long long v18 = (void *)sub_19F1DB3EC();
  }
  objc_msgSend(v20, sel_setResponseBody_, v18);

  if (objc_msgSend(self, sel_shouldCollectMetricsForContext_, v20))
  {
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD88]), sel_initWithContext_, v20);
    objc_msgSend(v19, sel_setPreventSampling_, 1);
    objc_msgSend(a9, sel_enqueueEvent_, v19);
  }
}

uint64_t sub_19EFA3FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_19EFA4054;
  return URLJetPackAssetFetcher._fetch(_:candidate:)(a1, a2, a3);
}

uint64_t sub_19EFA4054(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

void sub_19EFA415C(uint64_t a1, unint64_t a2, void *a3, id a4)
{
}

uint64_t sub_19EFA4168(uint64_t *a1)
{
  return sub_19EFA32E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_19EFA417C(void *a1)
{
  return sub_19EFA33A0(*(void **)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 24), 0, 0xF000000000000000, a1);
}

uint64_t sub_19EFA41CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_19EFA4234()
{
  unint64_t result = qword_1E9471D08[0];
  if (!qword_1E9471D08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9471D08);
  }
  return result;
}

uint64_t sub_19EFA4288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_19EFA42F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_19EFA4350(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19EFA4370, 0, 0);
}

uint64_t sub_19EFA4370()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1E9472A88 + dword_1E9472A88);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EFA4430;
  return v4(v1);
}

uint64_t sub_19EFA4430(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return MEMORY[0x1F4188298](sub_19EFA5164, 0, 0);
  }
}

uint64_t sub_19EFA45A4()
{
  uint64_t v0 = sub_19F1DB97C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F38918], v0);
  sub_19F1DB9BC();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_19EFA4690(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19EFA46B0, 0, 0);
}

uint64_t sub_19EFA46B0()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1E9472A20 + dword_1E9472A20);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EFA4430;
  return v4(v1);
}

uint64_t sub_19EFA4770(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19EFA4790, 0, 0);
}

uint64_t sub_19EFA4790()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1E94727E8 + dword_1E94727E8);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EFA4430;
  return v4(v1);
}

uint64_t sub_19EFA4850(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_19EFA4870, 0, 0);
}

uint64_t sub_19EFA4870()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  v0[4] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1E9472860 + dword_1E9472860);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_19EFA4930;
  return v4(v1);
}

uint64_t sub_19EFA4930(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return MEMORY[0x1F4188298](sub_19EFA4AA4, 0, 0);
  }
}

uint64_t sub_19EFA4AA4()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19EFA4AC8()
{
  return sub_19EE445C0((unint64_t *)&unk_1E946E760, (void (*)(uint64_t))type metadata accessor for URLJetPackAssetRequest);
}

void destroy for URLJetPackAssetFetcher(uint64_t a1)
{
  swift_unknownObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s9JetEngine22URLJetPackAssetFetcherVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  swift_unknownObjectRetain();
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for URLJetPackAssetFetcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for URLJetPackAssetFetcher(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for URLJetPackAssetFetcher()
{
  return &type metadata for URLJetPackAssetFetcher;
}

unsigned char *storeEnumTagSinglePayload for URLJetPackAssetFetcherError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EFA4D40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLJetPackAssetFetcherError()
{
  return &type metadata for URLJetPackAssetFetcherError;
}

unint64_t sub_19EFA4D7C()
{
  unint64_t result = qword_1E9471D20;
  if (!qword_1E9471D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471D20);
  }
  return result;
}

uint64_t sub_19EFA4DD0(uint64_t a1)
{
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_19EE17780;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9471D30 + dword_1E9471D30);
  return v5(a1, v1);
}

uint64_t sub_19EFA4E80(uint64_t a1)
{
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_19EEB8A6C;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9471D50 + dword_1E9471D50);
  return v5(a1, v1);
}

uint64_t sub_19EFA4F30()
{
  swift_unknownObjectRelease();
  unint64_t v1 = *(void *)(v0 + 56);
  if (v1 >> 60 != 15) {
    sub_19EEA072C(*(void *)(v0 + 48), v1);
  }

  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

void sub_19EFA4FB0()
{
  sub_19EFA3DB0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80));
}

uint64_t sub_19EFA4FE8()
{
  return sub_19EFA45A4();
}

uint64_t sub_19EFA4FF0()
{
  return sub_19EFDB078();
}

uint64_t sub_19EFA4FF8(uint64_t a1)
{
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_19EE17780;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9471D68 + dword_1E9471D68);
  return v5(a1, v1);
}

uint64_t sub_19EFA50A8(uint64_t a1)
{
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_19EE17780;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9471D88 + dword_1E9471D88);
  return v5(a1, v1);
}

uint64_t sub_19EFA5168(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v6 = sub_19EFA6070(a1, (uint64_t)a2, (uint64_t)a3, a4, (uint64_t (*)(void))sub_19EF94D00);

  return v6;
}

JSContext __swiftcall JSContext.init(name:virtualMachine:)(Swift::String name, JSVirtualMachine virtualMachine)
{
  result.super.Class isa = (Class)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithVirtualMachine_, virtualMachine.super.isa);
  if (result.super.isa)
  {
    unsigned int v4 = result.super.isa;
    uint64_t v5 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    [(objc_class *)v4 setName:v5];

    return (JSContext)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id JSContext.propagateExceptionsToErrors<A>(_:)@<X0>(uint64_t (*a1)(void *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  id result = (id)a1(v3);
  if (!v4)
  {
    id result = objc_msgSend(v3, sel_exception);
    if (result)
    {
      uint64_t v8 = result;
      objc_msgSend(v3, sel_setException_, 0);
      sub_19EF600C0();
      swift_allocError();
      uint64_t v10 = v9;
      id v11 = v8;
      JSError.init(_:)(v11, v10);
      swift_willThrow();

      return (id)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a3, a2);
    }
  }
  return result;
}

uint64_t sub_19EFA5354(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_19EED8CD4(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19EED8CD4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_19EED8CD4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_19EEBDC00(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_19EFA5484(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_19EFF65A0(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v6 = *(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      uint64_t v16 = v2;
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
      {
        sub_19EFF65A0(v10 > 1, v9 + 1, 1);
        uint64_t v2 = v16;
      }
      v4 += 4;
      id v14 = &type metadata for MetricsEventLinterDeResolutionRule;
      id v15 = &off_1EF148E88;
      id v11 = (void *)swift_allocObject();
      *(void *)&long long v13 = v11;
      long long v11[2] = v6;
      id v11[3] = v5;
      void v11[4] = v7;
      void v11[5] = v8;
      *(void *)(v2 + 16) = v9 + 1;
      sub_19EEBB420(&v13, v2 + 40 * v9 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_19EFA55B0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_19F1DD03C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_19EED8CD4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x19F3C7060](i, a1);
        sub_19EE8FF40();
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_19EED8CD4(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_19EED8CD4(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_19EEBDC00(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      sub_19EE8FF40();
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_19EED8CD4(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_19EED8CD4(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_19EEBDC00(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

long long *sub_19EFA57E4(void *a1, uint64_t a2)
{
  return sub_19EF69270(a1, a2);
}

uint64_t sub_19EFA58D4(void *a1, void *a2)
{
  sub_19EFE18B4(a1, a2);
  return result;
}

uint64_t sub_19EFA59B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EEA20EC(a1, a2, a3, (uint64_t (*)(void))sub_19EFE1D08);
}

uint64_t sub_19EFA59CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19EFA6070(a1, a2, a3, a4, (uint64_t (*)(void))sub_19F0A9468);
}

uint64_t sub_19EFA59E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EEA20EC(a1, a2, a3, (uint64_t (*)(void))sub_19F125E9C);
}

uint64_t sub_19EFA59FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19EFA5F5C(a1, a2, a3, a4, a5, (uint64_t (*)(void))sub_19F1647CC);
}

uint64_t sub_19EFA5A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19EFA5A74(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_19F1649F4);
}

uint64_t sub_19EFA5A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19EFA5A74(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_19F164D5C);
}

uint64_t sub_19EFA5A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19EFA6070(a1, a2, a3, a4, (uint64_t (*)(void))sub_19F1650C4);
}

uint64_t sub_19EFA5A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19EFA5A74(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_19F165300);
}

uint64_t sub_19EFA5A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

id sub_19EFA5B58(id a1, id a2, uint64_t a3)
{
  id v4 = a2;
  if (objc_msgSend(a2, sel_isNumber))
  {
    uint64_t v6 = (int)objc_msgSend(v4, sel_toInt32);
    uint64_t v7 = *(void *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
    uint64_t v8 = *(void *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 40);
    __swift_project_boxed_opaque_existential_1((void *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(v6, v7, v8);
    id v9 = a1;
    id v4 = (id)sub_19F1DD62C();
    a1 = objc_msgSend(self, sel_valueWithObject_inContext_, v4, v9);
    swift_unknownObjectRelease();

    if (a1) {
      return a1;
    }
    __break(1u);
  }
  sub_19EF600C0();
  unint64_t v10 = (void *)swift_allocError();
  JSError.init(badValue:expected:)(v4, v11);
  swift_willThrow();
  id v12 = objc_msgSend(a1, sel_exceptionHandler);
  if (v12)
  {
    uint64_t v13 = (void (**)(void, void, void))v12;
    _Block_copy(v12);
    id v14 = sub_19F035668(v10, a1);
    ((void (**)(void, id, id))v13)[2](v13, a1, v14);
    _Block_release(v13);
    _Block_release(v13);
  }
  id result = objc_msgSend(self, sel_valueWithUndefinedInContext_, a1);
  if (result)
  {
    a1 = result;

    return a1;
  }
  __break(1u);
  return result;
}

id sub_19EFA5D40(id a1, id a2, uint64_t a3)
{
  id v4 = a2;
  if (objc_msgSend(a2, sel_isNumber))
  {
    objc_msgSend(v4, sel_toDouble);
    double v7 = v6;
    uint64_t v8 = *(void *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
    uint64_t v9 = *(void *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 40);
    __swift_project_boxed_opaque_existential_1((void *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), v8);
    (*(void (**)(uint64_t, uint64_t, double))(v9 + 112))(v8, v9, v7);
    id v10 = a1;
    id v4 = (id)sub_19F1DD62C();
    a1 = objc_msgSend(self, sel_valueWithObject_inContext_, v4, v10);
    swift_unknownObjectRelease();

    if (a1) {
      return a1;
    }
    __break(1u);
  }
  sub_19EF600C0();
  uint64_t v11 = (void *)swift_allocError();
  JSError.init(badValue:expected:)(v4, v12);
  swift_willThrow();
  id v13 = objc_msgSend(a1, sel_exceptionHandler);
  if (v13)
  {
    id v14 = (void (**)(void, void, void))v13;
    _Block_copy(v13);
    id v15 = sub_19F035668(v11, a1);
    ((void (**)(void, id, id))v14)[2](v14, a1, v15);
    _Block_release(v14);
    _Block_release(v14);
  }
  id result = objc_msgSend(self, sel_valueWithUndefinedInContext_, a1);
  if (result)
  {
    a1 = result;

    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_19EFA5F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19EFA5F5C(a1, a2, a3, a4, a5, (uint64_t (*)(void))sub_19F165608);
}

uint64_t sub_19EFA5F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19EFA5F5C(a1, a2, a3, a4, a5, (uint64_t (*)(void))sub_19F163BD4);
}

uint64_t sub_19EFA5F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t sub_19EFA6040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EEA20EC(a1, a2, a3, (uint64_t (*)(void))sub_19F164204);
}

uint64_t sub_19EFA6058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19EFA6070(a1, a2, a3, a4, (uint64_t (*)(void))sub_19F16901C);
}

uint64_t sub_19EFA6070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_19EFA6154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EEA20EC(a1, a2, a3, (uint64_t (*)(void))sub_19F175594);
}

uint64_t sub_19EFA616C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EEA20EC(a1, a2, a3, (uint64_t (*)(void))sub_19F175ED8);
}

uint64_t sub_19EFA6184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EEA20EC(a1, a2, a3, (uint64_t (*)(void))sub_19F18F440);
}

uint64_t sub_19EFA619C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_19F1DCE6C();
    for (uint64_t i = (void *)(a1 + 32); ; i += 5)
    {
      uint64_t v8 = i[3];
      uint64_t v9 = i[4];
      __swift_project_boxed_opaque_existential_1(i, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v8, v9);
      if (v2) {
        break;
      }
      sub_19F1DCE3C();
      sub_19F1DCE7C();
      sub_19F1DCE8C();
      sub_19F1DCE4C();
      if (!--v4) {
        return v10;
      }
    }
    return swift_release();
  }
  return result;
}

id sub_19EFA6298(void *a1, uint64_t a2, id a3)
{
  id v6 = a1;
  uint64_t v7 = sub_19EFA619C(a2, (uint64_t)v6);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v9 = v7;

    sub_19EFA55B0(v9);
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)sub_19F1DC14C();
    swift_bridgeObjectRelease();
    a3 = objc_msgSend(a3, sel_constructWithArguments_, v10);

    if (a3)
    {
      id v11 = objc_msgSend(v6, sel_exception);
      if (v11)
      {
        uint64_t v12 = v11;
        objc_msgSend(v6, sel_setException_, 0);
        sub_19EF600C0();
        swift_allocError();
        uint64_t v14 = v13;
        id v15 = v12;
        JSError.init(_:)(v15, v14);
        swift_willThrow();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_19EF600C0();
      swift_allocError();
      *(void *)uint64_t v16 = 0xD00000000000001ALL;
      *(void *)(v16 + 8) = 0x800000019F26B660;
      *(void *)(v16 + 16) = 0;
      *(unsigned char *)(v16 + 24) = 1;
      *(void *)(v16 + 32) = 0;
      *(unsigned char *)(v16 + 40) = 1;
      *(_OWORD *)(v16 + 48) = 0u;
      *(_OWORD *)(v16 + 64) = 0u;
      *(_OWORD *)(v16 + 80) = 0u;
      *(void *)(v16 + 96) = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
    }
  }
  return a3;
}

uint64_t sub_19EFA646C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void CompoundError.init(_:)(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (!*(void *)(a1 + 16)) {
    sub_19F199C68((unint64_t)"JetEngine/CompoundError.swift", 0x1DuLL, 2, 0x15uLL);
  }
  *a2 = a1;
}

uint64_t CompoundError.errors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CompoundError.errorDescription.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  if (!v1) {
    return 0x1000000000000026;
  }
  if (v1 == 1)
  {
    uint64_t v2 = *(void **)(*(void *)v0 + 32);
    swift_getErrorValue();
    id v3 = v2;
    uint64_t v4 = sub_19F1DD6AC();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471D98);
    sub_19EFA6640();
    uint64_t v4 = sub_19F1DBCCC();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_19EFA65F8@<X0>(uint64_t *a1@<X8>)
{
  swift_getErrorValue();
  uint64_t result = sub_19F1DD6AC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_19EFA6640()
{
  unint64_t result = qword_1E9471DA0;
  if (!qword_1E9471DA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9471D98);
    sub_19EFA66B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471DA0);
  }
  return result;
}

unint64_t sub_19EFA66B4()
{
  unint64_t result = qword_1E9471DA8;
  if (!qword_1E9471DA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9471DB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471DA8);
  }
  return result;
}

uint64_t CompoundError.errorUserInfo.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    uint64_t result = sub_19F1DBD7C();
    *(void *)(inited + 32) = result;
    *(void *)(inited + 40) = v6;
    if (!*(void *)(v1 + 16))
    {
      __break(1u);
      return result;
    }
    swift_getErrorValue();
    *(void *)(inited + 72) = v9;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *))(*(void *)(v9 - 8) + 16))(boxed_opaque_existential_2Tm);
    return sub_19EEBF898(inited);
  }
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    *(void *)(inited + 32) = sub_19F1DBD7C();
    *(void *)(inited + 40) = v8;
    *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471DB0);
    *(void *)(inited + 48) = v1;
    swift_bridgeObjectRetain();
    return sub_19EEBF898(inited);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  return sub_19EEBF898(v3);
}

unint64_t sub_19EFA6878()
{
  unint64_t result = qword_1E946C8D0;
  if (!qword_1E946C8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C8D0);
  }
  return result;
}

uint64_t sub_19EFA68E8(uint64_t a1)
{
  unint64_t v2 = sub_19EFA6970();
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_19EFA6924(uint64_t a1)
{
  unint64_t v2 = sub_19EFA6970();
  return MEMORY[0x1F40E6E10](a1, v2);
}

ValueMetadata *type metadata accessor for CompoundError()
{
  return &type metadata for CompoundError;
}

unint64_t sub_19EFA6970()
{
  unint64_t result = qword_1E9471DB8;
  if (!qword_1E9471DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471DB8);
  }
  return result;
}

uint64_t JetPackResourceBundleMissingFileError.path.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for JetPackResourceBundleMissingFileError()
{
  return &type metadata for JetPackResourceBundleMissingFileError;
}

uint64_t sub_19EFA69E0()
{
  if (*(unsigned char *)(v0 + 40))
  {
    if (qword_1E946FC40 != -1) {
      swift_once();
    }
    sub_19F1DD95C();
    uint64_t v1 = v44;
    uint64_t v2 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_19F24EAD0;
    *((void *)&v35 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v34 = 0xD00000000000003FLL;
    *((void *)&v34 + 1) = 0x800000019F26B800;
    long long v37 = 0u;
    long long v38 = 0u;
    sub_19EEC3E70((uint64_t)&v34, (uint64_t)&v37);
    *(unsigned char *)(v4 + 64) = 0;
    long long v5 = v38;
    *(_OWORD *)(v4 + 32) = v37;
    *(_OWORD *)(v4 + 48) = v5;
    *(void *)(v3 + 32) = v4;
    Logger.error(_:)(v3, v1, v2);
  }
  else
  {
    uint64_t v6 = v0;
    uint64_t v7 = *(void *)(v0 + 16);
    if (*(void *)(v7 + 16))
    {
      if (qword_1E946FC40 != -1) {
        swift_once();
      }
      sub_19F1DD95C();
      uint64_t v8 = v44;
      uint64_t v9 = v45;
      __swift_project_boxed_opaque_existential_1(v43, v44);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
      uint64_t v42 = sub_19EEC3F3C(0, 77, 0, MEMORY[0x1E4FBC860]);
      v11._uint64_t countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v11);
      uint64_t v12 = *(void *)(v7 + 16);
      uint64_t v41 = MEMORY[0x1E4FBB550];
      v40[0] = v12;
      sub_19EEBCD00((uint64_t)v40, (uint64_t)v36);
      long long v34 = 0u;
      long long v35 = 0u;
      sub_19EEC3E70((uint64_t)v36, (uint64_t)&v34);
      char v39 = 0;
      long long v37 = v34;
      long long v38 = v35;
      uint64_t v13 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
      }
      unint64_t v15 = v13[2];
      unint64_t v14 = v13[3];
      if (v15 >= v14 >> 1) {
        uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
      }
      long long v13[2] = v15 + 1;
      uint64_t v16 = &v13[5 * v15];
      long long v17 = v37;
      long long v18 = v38;
      *((unsigned char *)v16 + 64) = v39;
      *((_OWORD *)v16 + 2) = v17;
      *((_OWORD *)v16 + 3) = v18;
      uint64_t v42 = v13;
      sub_19EEBCB4C((uint64_t)v40);
      v19._uint64_t countAndFlagsBits = 0xD00000000000004CLL;
      v19._object = (void *)0x800000019F26B770;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      *(void *)(v10 + 32) = v42;
      Logger.warning(_:)(v10, v8, v9);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
    }
    sub_19F1DB9BC();
    if (*(void *)v6)
    {
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
    }
    *(unsigned char *)(v6 + 40) = 1;
    if (qword_1E946FC40 != -1) {
      swift_once();
    }
    sub_19F1DD95C();
    uint64_t v20 = v44;
    uint64_t v21 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_19F24EAD0;
    uint64_t v42 = sub_19EEC3F3C(0, 60, 0, MEMORY[0x1E4FBC860]);
    v23._object = (void *)0x800000019F26B7C0;
    v23._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    uint64_t v24 = *(void *)(v6 + 24);
    uint64_t v25 = *(void *)(v6 + 32);
    uint64_t v41 = MEMORY[0x1E4FBB1A0];
    v40[0] = v24;
    v40[1] = v25;
    sub_19EEBCD00((uint64_t)v40, (uint64_t)v36);
    long long v34 = 0u;
    long long v35 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v36, (uint64_t)&v34);
    char v39 = 0;
    long long v37 = v34;
    long long v38 = v35;
    id v26 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
    }
    unint64_t v28 = v26[2];
    unint64_t v27 = v26[3];
    if (v28 >= v27 >> 1) {
      id v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
    }
    long long v26[2] = v28 + 1;
    id v29 = &v26[5 * v28];
    long long v30 = v37;
    long long v31 = v38;
    *((unsigned char *)v29 + 64) = v39;
    *((_OWORD *)v29 + 2) = v30;
    *((_OWORD *)v29 + 3) = v31;
    uint64_t v42 = v26;
    sub_19EEBCB4C((uint64_t)v40);
    v32._uint64_t countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    *(void *)(v22 + 32) = v42;
    Logger.debug(_:)(v22, v20, v21);
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
}

uint64_t destroy for PageRenderActivity()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PageRenderActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PageRenderActivity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for PageRenderActivity(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderActivity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderActivity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

JetEngine::PageMetrics::InvocationPoint __swiftcall PageMetrics.InvocationPoint.init(rawValue:)(JetEngine::PageMetrics::InvocationPoint rawValue)
{
  JetEngine::PageMetrics::InvocationPoint *v1 = rawValue;
  return rawValue;
}

uint64_t PageMetrics.InvocationPoint.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v5 = sub_19F1DD45C();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t PageMetrics.InvocationPoint.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t PageMetrics.InvocationPoint.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static PageMetrics.InvocationPoint.pageExit.getter(void *a1@<X8>)
{
  *a1 = 0x7469784565676170;
  a1[1] = 0xE800000000000000;
}

void static PageMetrics.InvocationPoint.appExit.getter(void *a1@<X8>)
{
  *a1 = 0x74697845707061;
  a1[1] = 0xE700000000000000;
}

void static PageMetrics.InvocationPoint.appEnter.getter(void *a1@<X8>)
{
  *a1 = 0x7265746E45707061;
  a1[1] = 0xE800000000000000;
}

void static PageMetrics.InvocationPoint.backButton.getter(void *a1@<X8>)
{
  *a1 = 0x747475426B636162;
  a1[1] = 0xEA00000000006E6FLL;
}

uint64_t sub_19EFA735C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v5 = sub_19F1DD45C();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19EFA7420()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

__n128 PageMetrics.Instruction.init(data:invocationPoints:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 40);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(unsigned char *)(a3 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a3 + 24) = result;
  *(void *)(a3 + 40) = v4;
  *(void *)(a3 + 48) = a2;
  return result;
}

__n128 PageMetrics.Instruction.data.setter(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  char v5 = *((unsigned char *)a1 + 16);
  uint64_t v6 = a1[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 16) = v5;
  __n128 result = *(__n128 *)(a1 + 3);
  *(__n128 *)(v1 + 24) = result;
  *(void *)(v1 + 40) = v6;
  return result;
}

uint64_t (*PageMetrics.Instruction.data.modify())()
{
  return nullsub_1;
}

uint64_t PageMetrics.Instruction.invocationPoints.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*PageMetrics.Instruction.invocationPoints.modify())()
{
  return nullsub_1;
}

uint64_t sub_19EFA7568@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return PageMetrics.Instruction.init(deserializing:using:)(a1, a2, a3);
}

unint64_t static PageMetrics.notInstrumented.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_19EFAA108(MEMORY[0x1E4FBC860]);
  *a1 = v2;
  a1[1] = 0;
  a1[2] = MEMORY[0x1E4FBC868];
  a1[3] = result;
  return result;
}

uint64_t PageMetrics.instructions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*PageMetrics.instructions.modify())()
{
  return nullsub_1;
}

uint64_t PageMetrics.pageFields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*PageMetrics.pageFields.modify())()
{
  return nullsub_1;
}

uint64_t PageMetrics.custom.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t PageMetrics.custom.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  return result;
}

uint64_t (*PageMetrics.custom.modify())()
{
  return nullsub_1;
}

uint64_t PageMetrics.clickLocationFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PageMetrics.clickLocationFields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*PageMetrics.clickLocationFields.modify())()
{
  return nullsub_1;
}

uint64_t PageMetrics.mergingWith(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_19EF5D580(v8);
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_19EF5D580(v9);
  uint64_t v10 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = v7;
  sub_19EF8C75C(v6, (uint64_t)sub_19EF6E4D4, 0, isUniquelyReferenced_nonNull_native, &v14);
  uint64_t v12 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v10;
  a2[1] = v4;
  a2[2] = v12;
  a2[3] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFA7830@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return PageMetrics.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_19EFA7848@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PageMetrics.mergingWith(_:)(a1, a2);
}

uint64_t PageMetrics._isEqual(to:)(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  if ((sub_19EFA7A28(*a1, *v1) & 1) == 0) {
    goto LABEL_11;
  }
  if (v4)
  {
    if (!v2) {
      goto LABEL_11;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_bridgeObjectRetain();
    char v8 = sub_19EFA9A90(v7, v4);
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      goto LABEL_11;
    }
    MEMORY[0x1F4188790](v9);
    if ((sub_19EFAA2BC(v4, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_19EFAB390) & 1) == 0) {
      goto LABEL_11;
    }
  }
  else if (v2)
  {
LABEL_11:
    char v14 = 0;
    return v14 & 1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v10 = sub_19EF6950C(v6, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  char v12 = sub_19EFA9A90(v11, v5);
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_11;
  }
  MEMORY[0x1F4188790](v13);
  char v14 = sub_19EFAA2BC(v5, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_19EFAA4A8);
  return v14 & 1;
}

uint64_t sub_19EFA7A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2 != *(void *)(a1 + 16)) {
    return 0;
  }
  if (!v2) {
    return 1;
  }
  uint64_t v3 = a2 + 32;
  uint64_t v4 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v40 = v3;
  uint64_t v41 = v2;
  uint64_t v39 = v4;
LABEL_4:
  uint64_t v6 = v3 + 56 * v5;
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v47 = *(void *)(v6 + 32);
  uint64_t v48 = v5;
  int v9 = *(unsigned __int8 *)(v6 + 16);
  uint64_t v10 = v4 + 56 * v5;
  uint64_t v11 = *(void *)(v10 + 8);
  int v12 = *(unsigned __int8 *)(v10 + 16);
  uint64_t v13 = *(void *)(v10 + 24);
  uint64_t v14 = *(void *)(v10 + 32);
  uint64_t v15 = *(void *)(v10 + 40);
  uint64_t v44 = *(void *)(v6 + 48);
  uint64_t v45 = *(void *)(v10 + 48);
  uint64_t v46 = *(void *)(v6 + 40);
  if (v7)
  {
    if (!v11) {
      goto LABEL_55;
    }
    BOOL v16 = *(void *)v6 == *(void *)v10 && v7 == v11;
    if (!v16 && (sub_19F1DD44C() & 1) == 0) {
      goto LABEL_55;
    }
  }
  else if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_55:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v9 != v12) {
    goto LABEL_55;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char v17 = sub_19EFA9A90(v13, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v42 = v15;
    uint64_t v43 = v14;
    uint64_t v49 = v48 + 1;
    uint64_t v18 = v8 + 64;
    uint64_t v19 = 1 << *(unsigned char *)(v8 + 32);
    if (v19 < 64) {
      uint64_t v20 = ~(-1 << v19);
    }
    else {
      uint64_t v20 = -1;
    }
    unint64_t v21 = v20 & *(void *)(v8 + 64);
    int64_t v22 = (unint64_t)(v19 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v24 = 0;
    while (1)
    {
      if (v21)
      {
        unint64_t v26 = __clz(__rbit64(v21));
        v21 &= v21 - 1;
        unint64_t v27 = v26 | (v24 << 6);
      }
      else
      {
        int64_t v28 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
          __break(1u);
LABEL_61:
          __break(1u);
          return result;
        }
        if (v28 >= v22) {
          goto LABEL_46;
        }
        unint64_t v29 = *(void *)(v18 + 8 * v28);
        ++v24;
        if (!v29)
        {
          int64_t v24 = v28 + 1;
          if (v28 + 1 >= v22) {
            goto LABEL_46;
          }
          unint64_t v29 = *(void *)(v18 + 8 * v24);
          if (!v29)
          {
            int64_t v24 = v28 + 2;
            if (v28 + 2 >= v22) {
              goto LABEL_46;
            }
            unint64_t v29 = *(void *)(v18 + 8 * v24);
            if (!v29)
            {
              int64_t v24 = v28 + 3;
              if (v28 + 3 >= v22) {
                goto LABEL_46;
              }
              unint64_t v29 = *(void *)(v18 + 8 * v24);
              if (!v29)
              {
                int64_t v24 = v28 + 4;
                if (v28 + 4 >= v22) {
                  goto LABEL_46;
                }
                unint64_t v29 = *(void *)(v18 + 8 * v24);
                if (!v29)
                {
                  int64_t v30 = v28 + 5;
                  if (v30 >= v22)
                  {
LABEL_46:
                    swift_release();
                    if ((sub_19EFA9720(v47, v43) & 1) == 0) {
                      break;
                    }
                    char v37 = sub_19EFA9720(v46, v42);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v37 & 1) == 0)
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      goto LABEL_55;
                    }
                    char v38 = sub_19EFA9720(v44, v45);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v38 & 1) == 0) {
                      goto LABEL_55;
                    }
                    uint64_t v3 = v40;
                    uint64_t v5 = v49;
                    uint64_t v4 = v39;
                    if (v49 == v41)
                    {
                      swift_bridgeObjectRelease();
                      return 1;
                    }
                    goto LABEL_4;
                  }
                  unint64_t v29 = *(void *)(v18 + 8 * v30);
                  if (!v29)
                  {
                    while (1)
                    {
                      int64_t v24 = v30 + 1;
                      if (__OFADD__(v30, 1)) {
                        goto LABEL_61;
                      }
                      if (v24 >= v22) {
                        goto LABEL_46;
                      }
                      unint64_t v29 = *(void *)(v18 + 8 * v24);
                      ++v30;
                      if (v29) {
                        goto LABEL_40;
                      }
                    }
                  }
                  int64_t v24 = v30;
                }
              }
            }
          }
        }
LABEL_40:
        unint64_t v21 = (v29 - 1) & v29;
        unint64_t v27 = __clz(__rbit64(v29)) + (v24 << 6);
      }
      long long v31 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v27);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      sub_19EEBDBA4(*(void *)(v8 + 56) + 32 * v27, (uint64_t)v56);
      *(void *)&long long v55 = v33;
      *((void *)&v55 + 1) = v32;
      long long v53 = v55;
      v54[0] = v56[0];
      v54[1] = v56[1];
      long long v34 = v55;
      sub_19EEBDBA4((uint64_t)v54, (uint64_t)v52);
      if (*(void *)(v13 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v35 = sub_19EEBD400(v34, *((uint64_t *)&v34 + 1));
        if (v36)
        {
          sub_19EEBDBA4(*(void *)(v13 + 56) + 32 * v35, (uint64_t)&v50);
        }
        else
        {
          long long v50 = 0u;
          long long v51 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v50 = 0u;
        long long v51 = 0u;
        swift_bridgeObjectRetain();
      }
      char v25 = sub_19F15C304((uint64_t)v52, (uint64_t)&v50, 3uLL, 0);
      sub_19EEBD664((uint64_t)&v50, &qword_1EB393260);
      sub_19EEBD664((uint64_t)v52, &qword_1EB393260);
      uint64_t result = sub_19EEBD664((uint64_t)&v53, &qword_1E946F4C0);
      if ((v25 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_53;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
LABEL_53:
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_19EFA8110(char *a1, char *a2)
{
  return sub_19F03B5D4(*a1, *a2);
}

uint64_t sub_19EFA811C()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFA819C()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFA8208()
{
  return sub_19F1DD78C();
}

uint64_t sub_19EFA8284@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_19EFA82E4(unint64_t *a1@<X8>)
{
  unint64_t v2 = 1635017060;
  if (*v1) {
    unint64_t v2 = 0xD000000000000010;
  }
  unint64_t v3 = 0x800000019F268220;
  if (!*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19EFA8320()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_19EFA8358@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_19EFA83BC(uint64_t a1)
{
  unint64_t v2 = sub_19EFAA4B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EFA83F8(uint64_t a1)
{
  unint64_t v2 = sub_19EFAA4B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PageMetrics.Instruction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471DC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EFAA4B4();
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v30 = 0;
  sub_19EF8CB84();
  sub_19F1DD1BC();
  uint64_t v9 = v24;
  int v29 = v25;
  uint64_t v10 = v27;
  uint64_t v17 = v23;
  uint64_t v18 = v26;
  uint64_t v11 = v28;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471DD0);
  char v30 = 1;
  sub_19EFAA544(&qword_1E9471DD8, &qword_1E9471DD0, (void (*)(void))sub_19EFAA508);
  uint64_t v22 = v9;
  uint64_t v12 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v10;
  swift_bridgeObjectRetain();
  uint64_t v20 = v11;
  swift_bridgeObjectRetain();
  sub_19F1DD1BC();
  uint64_t v13 = sub_19EEBFE68(v23, (void (*)(void))sub_19EECBDD0, (uint64_t)&type metadata for PageMetrics.InvocationPoint, (void (*)(unsigned char *, uint64_t, uint64_t))sub_19EECB4B0);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v21;
  uint64_t v14 = v22;
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = v14;
  *(unsigned char *)(a2 + 16) = v29;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t PageMetrics.Instruction.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471DF8);
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)v2;
  uint64_t v8 = *(void *)(v2 + 8);
  char v9 = *(unsigned char *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 40);
  uint64_t v15 = *(void *)(v2 + 48);
  uint64_t v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EFAA4B4();
  sub_19F1DD8FC();
  uint64_t v19 = v7;
  uint64_t v20 = v8;
  char v21 = v9;
  long long v22 = *(_OWORD *)(v2 + 24);
  uint64_t v23 = v16;
  char v24 = 0;
  sub_19EF8CC14();
  uint64_t v11 = v17;
  sub_19F1DD2AC();
  if (!v11)
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_19EF9EE50(v12);
    swift_bridgeObjectRelease();
    uint64_t v19 = v13;
    char v24 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471DD0);
    sub_19EFAA544(&qword_1E9471E00, &qword_1E9471DD0, (void (*)(void))sub_19EFAA604);
    sub_19F1DD2AC();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v4);
}

uint64_t sub_19EFA89A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PageMetrics.Instruction.init(from:)(a1, a2);
}

uint64_t sub_19EFA89BC(void *a1)
{
  return PageMetrics.Instruction.encode(to:)(a1);
}

uint64_t sub_19EFA89D4(unsigned __int8 *a1, char *a2)
{
  return sub_19F03B678(*a1, *a2);
}

uint64_t sub_19EFA89E0()
{
  return sub_19F187120();
}

uint64_t sub_19EFA89E8()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19EFA8AB8()
{
  return sub_19EFB6804();
}

uint64_t sub_19EFA8AC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EFAB0E8();
  *a1 = result;
  return result;
}

void sub_19EFA8AF0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEC000000736E6F69;
  uint64_t v3 = 0x7463757274736E69;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007364;
      uint64_t v3 = 0x6C65694665676170;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D6F74737563;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000013;
      a1[1] = 0x800000019F268200;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_19EFA8B98()
{
  unint64_t result = 0x7463757274736E69;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C65694665676170;
      break;
    case 2:
      unint64_t result = 0x6D6F74737563;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19EFA8C34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EFAB0E8();
  *a1 = result;
  return result;
}

void sub_19EFA8C5C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_19EFA8C68(uint64_t a1)
{
  unint64_t v2 = sub_19EFAA694();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19EFA8CA4(uint64_t a1)
{
  unint64_t v2 = sub_19EFAA694();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PageMetrics.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471E18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EFAA694();
  sub_19F1DD8AC();
  if (!v2)
  {
    LOBYTE(v29[0]) = 0;
    if (sub_19F1DD1DC())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471E28);
      LOBYTE(v26[0]) = 0;
      sub_19EFAA544(&qword_1E9471E30, &qword_1E9471E28, (void (*)(void))sub_19EFAA73C);
      sub_19F1DD1BC();
      uint64_t v10 = v29[0];
    }
    else
    {
      uint64_t v10 = MEMORY[0x1E4FBC860];
    }
    LOBYTE(v29[0]) = 1;
    if (sub_19F1DD1DC())
    {
      LOBYTE(v26[0]) = 1;
      sub_19EFAA6E8();
      sub_19F1DD1BC();
      JSONObject.dictionary.getter((uint64_t)v26);
      uint64_t v11 = v27;
      if (v27)
      {
        uint64_t v24 = v10;
        uint64_t v12 = v28;
        __swift_project_boxed_opaque_existential_1(v26, v27);
        uint64_t v13 = *(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v12 + 32);
        uint64_t v14 = v12;
        uint64_t v10 = v24;
        uint64_t v25 = v13(MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB1B0], v11, v14);
        sub_19EEC3418((uint64_t)v29);
        sub_19EEC05FC((uint64_t)v26);
      }
      else
      {
        sub_19EEC3418((uint64_t)v29);
        sub_19EEBD664((uint64_t)v26, &qword_1E946F740);
        uint64_t v25 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = 0;
    }
    LOBYTE(v29[0]) = 2;
    if (sub_19F1DD1DC())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471950);
      LOBYTE(v26[0]) = 2;
      sub_19EF8CC68(&qword_1E9471958);
      sub_19F1DD1BC();
      uint64_t v23 = a2;
      uint64_t v24 = v10;
      uint64_t v15 = v29[0];
    }
    else
    {
      uint64_t v23 = a2;
      uint64_t v24 = v10;
      uint64_t v15 = MEMORY[0x1E4FBC868];
    }
    unint64_t v16 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
    LOBYTE(v29[0]) = 3;
    if (sub_19F1DD1DC())
    {
      swift_bridgeObjectRelease();
      char v32 = 3;
      sub_19EFAA6E8();
      sub_19F1DD1BC();
      JSONObject.dictionary.getter((uint64_t)v29);
      sub_19EEC3418((uint64_t)v26);
      uint64_t v20 = v30;
      uint64_t v17 = v24;
      if (v30)
      {
        uint64_t v21 = v31;
        __swift_project_boxed_opaque_existential_1(v29, v30);
        unint64_t v16 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v21 + 32))(MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB1B0], v20, v21);
        sub_19EEC05FC((uint64_t)v29);
        if (v16)
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          goto LABEL_20;
        }
      }
      else
      {
        sub_19EEBD664((uint64_t)v29, &qword_1E946F740);
      }
      unint64_t v16 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = v24;
LABEL_20:
    uint64_t v18 = v25;
    uint64_t v19 = v23;
    *uint64_t v23 = v17;
    v19[1] = v18;
    long long v19[2] = v15;
    void v19[3] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t PageMetrics.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471E50);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v28 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v21 = v1[3];
  uint64_t v22 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EFAA694();
  uint64_t v10 = v4;
  sub_19F1DD8FC();
  v25[0] = v8;
  LOBYTE(v23) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471E28);
  sub_19EFAA544(&qword_1E9471E58, &qword_1E9471E28, (void (*)(void))sub_19EFAA7CC);
  sub_19F1DD2AC();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  uint64_t v14 = v28;
  if (!v28)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    uint64_t v15 = v5;
    uint64_t v16 = v21;
    goto LABEL_7;
  }
  *((void *)&v24 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  *(void *)&long long v23 = v14;
  uint64_t v15 = v5;
  uint64_t v16 = v12;
  if (!*((void *)&v24 + 1))
  {
LABEL_7:
    swift_bridgeObjectRetain();
    sub_19EEBD664((uint64_t)&v23, &qword_1EB393260);
    uint64_t v19 = 0;
    uint64_t v18 = 0;
    uint64_t v17 = 0;
    goto LABEL_8;
  }
  uint64_t v17 = swift_allocObject();
  sub_19EEBDC00(&v23, (_OWORD *)(v17 + 16));
  swift_bridgeObjectRetain();
  uint64_t v18 = &off_1EF13D8F8;
  uint64_t v19 = &type metadata for FoundationValue;
LABEL_8:
  v25[0] = v17;
  v25[1] = 0;
  _OWORD v25[2] = 0;
  uint64_t v26 = v19;
  uint64_t v27 = v18;
  LOBYTE(v23) = 1;
  sub_19EFAA85C();
  sub_19F1DD2AC();
  sub_19EEC3418((uint64_t)v25);
  v25[0] = v13;
  LOBYTE(v23) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471950);
  sub_19EF8CC68(&qword_1E94719A8);
  sub_19F1DD2AC();
  uint64_t v26 = &type metadata for FoundationValue;
  uint64_t v27 = &off_1EF13D8F8;
  uint64_t v20 = swift_allocObject();
  v25[0] = v20;
  *(void *)(v20 + 40) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
  *(void *)(v20 + 16) = v16;
  LOBYTE(v23) = 3;
  swift_bridgeObjectRetain();
  sub_19F1DD2AC();
  sub_19EEC3418((uint64_t)v25);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v7, v10);
}

uint64_t sub_19EFA9658@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PageMetrics.init(from:)(a1, a2);
}

uint64_t sub_19EFA9670(void *a1)
{
  return PageMetrics.encode(to:)(a1);
}

uint64_t PageMetrics.Instruction._isEqual(to:)(long long *a1)
{
  char v2 = *((unsigned char *)a1 + 16);
  uint64_t v3 = *((void *)a1 + 5);
  uint64_t v4 = *((void *)a1 + 6);
  char v5 = *((unsigned char *)v1 + 16);
  uint64_t v6 = *((void *)v1 + 5);
  uint64_t v7 = *((void *)v1 + 6);
  long long v14 = *v1;
  char v15 = v5;
  long long v16 = *(long long *)((char *)v1 + 24);
  uint64_t v17 = v6;
  long long v10 = *a1;
  char v11 = v2;
  long long v12 = *(long long *)((char *)a1 + 24);
  uint64_t v13 = v3;
  if (MetricsData._isEqual(to:)((uint64_t)&v10)) {
    char v8 = sub_19EFA9720(v7, v4);
  }
  else {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_19EFA9720(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    char v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_19F1DD72C();
    swift_bridgeObjectRetain_n();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_19F1DD78C();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_19F1DD44C() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_19F1DD44C() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_19EFA99B4(long long *a1)
{
  char v2 = *((unsigned char *)a1 + 16);
  uint64_t v3 = *((void *)a1 + 5);
  uint64_t v4 = *((void *)a1 + 6);
  char v5 = *((unsigned char *)v1 + 16);
  uint64_t v6 = *((void *)v1 + 5);
  uint64_t v7 = *((void *)v1 + 6);
  long long v14 = *v1;
  char v15 = v5;
  long long v16 = *(long long *)((char *)v1 + 24);
  uint64_t v17 = v6;
  long long v10 = *a1;
  char v11 = v2;
  long long v12 = *(long long *)((char *)a1 + 24);
  uint64_t v13 = v3;
  if (MetricsData._isEqual(to:)((uint64_t)&v10)) {
    char v8 = sub_19EFA9720(v7, v4);
  }
  else {
    char v8 = 0;
  }
  return v8 & 1;
}

unint64_t PageMetrics.init(instructions:pageFields:custom:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a3;
  unint64_t result = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = v7;
  a4[3] = result;
  return result;
}

uint64_t sub_19EFA9A90(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  uint64_t v30 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  if (v8 < 64) {
    uint64_t v5 = ~(-1 << v8);
  }
  unint64_t v9 = v5 & *(void *)(a1 + 64);
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  int64_t v33 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  int64_t v12 = 0;
  if (!v7) {
    goto LABEL_15;
  }
LABEL_10:
  unint64_t v14 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v15 = v14 | (v12 << 6);
LABEL_11:
  long long v16 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v15);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  uint64_t result = swift_bridgeObjectRetain();
  if (v9)
  {
LABEL_12:
    unint64_t v19 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v20 = v19 | (v11 << 6);
LABEL_13:
    uint64_t v21 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v20);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_57;
    }
LABEL_69:
    swift_release();
    swift_release();
    if (v22)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    return 1;
  }
  while (1)
  {
LABEL_36:
    int64_t v27 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_76;
    }
    if (v27 >= v32) {
      goto LABEL_56;
    }
    unint64_t v28 = *(void *)(v30 + 8 * v27);
    if (v28) {
      goto LABEL_39;
    }
    v11 += 2;
    if (v27 + 1 >= v32)
    {
      unint64_t v9 = 0;
      uint64_t v23 = 0;
      uint64_t v22 = 0;
      int64_t v11 = v27;
      if (!v17) {
        goto LABEL_69;
      }
      goto LABEL_57;
    }
    unint64_t v28 = *(void *)(v30 + 8 * v11);
    if (v28) {
      goto LABEL_42;
    }
    int64_t v29 = v27 + 2;
    if (v27 + 2 >= v32) {
      goto LABEL_56;
    }
    unint64_t v28 = *(void *)(v30 + 8 * v29);
    if (v28) {
      goto LABEL_47;
    }
    int64_t v11 = v27 + 3;
    if (v27 + 3 < v32) {
      break;
    }
    unint64_t v9 = 0;
    uint64_t v23 = 0;
    uint64_t v22 = 0;
    int64_t v11 = v27 + 2;
    if (!v17) {
      goto LABEL_69;
    }
LABEL_57:
    if (!v22)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v18 == v23 && v17 == v22)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_10;
      }
    }
    else
    {
      char v13 = sub_19F1DD44C();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        swift_release();
        swift_release();
        return 0;
      }
      if (v7) {
        goto LABEL_10;
      }
    }
LABEL_15:
    int64_t v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (v24 >= v33) {
      goto LABEL_35;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    if (v25) {
      goto LABEL_18;
    }
    v12 += 2;
    if (v24 + 1 >= v33)
    {
      unint64_t v7 = 0;
      uint64_t v18 = 0;
      uint64_t v17 = 0;
      int64_t v12 = v24;
      if (v9) {
        goto LABEL_12;
      }
    }
    else
    {
      unint64_t v25 = *(void *)(v31 + 8 * v12);
      if (v25) {
        goto LABEL_21;
      }
      int64_t v26 = v24 + 2;
      if (v24 + 2 >= v33) {
        goto LABEL_35;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v26);
      if (v25) {
        goto LABEL_26;
      }
      int64_t v12 = v24 + 3;
      if (v24 + 3 >= v33)
      {
        unint64_t v7 = 0;
        uint64_t v18 = 0;
        uint64_t v17 = 0;
        int64_t v12 = v24 + 2;
        if (v9) {
          goto LABEL_12;
        }
      }
      else
      {
        unint64_t v25 = *(void *)(v31 + 8 * v12);
        if (v25)
        {
LABEL_21:
          int64_t v24 = v12;
          goto LABEL_18;
        }
        int64_t v26 = v24 + 4;
        if (v24 + 4 < v33)
        {
          unint64_t v25 = *(void *)(v31 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              int64_t v24 = v26 + 1;
              if (__OFADD__(v26, 1)) {
                break;
              }
              if (v24 >= v33)
              {
                unint64_t v7 = 0;
                uint64_t v18 = 0;
                uint64_t v17 = 0;
                int64_t v12 = v33 - 1;
                if (v9) {
                  goto LABEL_12;
                }
                goto LABEL_36;
              }
              unint64_t v25 = *(void *)(v31 + 8 * v24);
              ++v26;
              if (v25) {
                goto LABEL_18;
              }
            }
LABEL_77:
            __break(1u);
            goto LABEL_78;
          }
LABEL_26:
          int64_t v24 = v26;
LABEL_18:
          unint64_t v7 = (v25 - 1) & v25;
          unint64_t v15 = __clz(__rbit64(v25)) + (v24 << 6);
          int64_t v12 = v24;
          goto LABEL_11;
        }
LABEL_35:
        unint64_t v7 = 0;
        uint64_t v18 = 0;
        uint64_t v17 = 0;
        if (v9) {
          goto LABEL_12;
        }
      }
    }
  }
  unint64_t v28 = *(void *)(v30 + 8 * v11);
  if (v28)
  {
LABEL_42:
    int64_t v27 = v11;
LABEL_39:
    unint64_t v9 = (v28 - 1) & v28;
    unint64_t v20 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v11 = v27;
    goto LABEL_13;
  }
  int64_t v29 = v27 + 4;
  if (v27 + 4 >= v32)
  {
LABEL_56:
    unint64_t v9 = 0;
    uint64_t v23 = 0;
    uint64_t v22 = 0;
    if (!v17) {
      goto LABEL_69;
    }
    goto LABEL_57;
  }
  unint64_t v28 = *(void *)(v30 + 8 * v29);
  if (v28)
  {
LABEL_47:
    int64_t v27 = v29;
    goto LABEL_39;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v32)
    {
      unint64_t v9 = 0;
      uint64_t v23 = 0;
      uint64_t v22 = 0;
      int64_t v11 = v32 - 1;
      if (v17) {
        goto LABEL_57;
      }
      goto LABEL_69;
    }
    unint64_t v28 = *(void *)(v30 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_39;
    }
  }
LABEL_78:
  __break(1u);
  return result;
}

unint64_t sub_19EFA9F04(unint64_t a1, unint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v4 = a3;
  unint64_t v6 = a1;
  if (a3) {
    unint64_t v7 = &a3[a4];
  }
  else {
    unint64_t v7 = 0;
  }
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  int64_t v27 = v7;
  unint64_t v28 = v8;
  uint64_t v9 = 4 * v8;
  uint64_t v10 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v10) = 1;
  }
  uint64_t v11 = 4 << v10;
  uint64_t v23 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v24 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v12 = 15;
  uint64_t v25 = 4 << v10;
  while (1)
  {
    if (!v4 || v4 == v27)
    {
      int v14 = 0;
      char v13 = 1;
    }
    else
    {
      char v13 = 0;
      int v15 = *v4++;
      int v14 = v15;
    }
    unint64_t v16 = v12 >> 14;
    BOOL v17 = v12 >> 14 == v9;
    if (v12 >> 14 == v9)
    {
      unsigned __int8 v18 = 0;
      if (v13) {
        return v17;
      }
      goto LABEL_33;
    }
    unint64_t v19 = v12 & 0xC;
    unint64_t result = v12;
    if (v19 == v11)
    {
      unint64_t result = sub_19EFAA240(v12, a1, a2);
      uint64_t v11 = v25;
      unint64_t v6 = a1;
    }
    unint64_t v21 = result >> 16;
    if (result >> 16 >= v28) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_19F1DBF8C();
      uint64_t v11 = v25;
      unint64_t v6 = a1;
      unsigned __int8 v18 = result;
      if (v19 == v25) {
        goto LABEL_30;
      }
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v29[0] = v6;
      v29[1] = v24;
      unsigned __int8 v18 = *((unsigned char *)v29 + v21);
      if (v19 == v11) {
        goto LABEL_30;
      }
    }
    else
    {
      unint64_t result = v23;
      if ((v6 & 0x1000000000000000) == 0)
      {
        unint64_t result = sub_19F1DCE2C();
        uint64_t v11 = v25;
        unint64_t v6 = a1;
      }
      unsigned __int8 v18 = *(unsigned char *)(result + v21);
      if (v19 == v11)
      {
LABEL_30:
        unint64_t result = sub_19EFAA240(v12, a1, a2);
        uint64_t v11 = v25;
        unint64_t v6 = a1;
        unint64_t v12 = result;
        if ((a2 & 0x1000000000000000) == 0)
        {
LABEL_27:
          unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
          if (v13) {
            return v17;
          }
          goto LABEL_33;
        }
        goto LABEL_31;
      }
    }
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_27;
    }
LABEL_31:
    if (v28 <= v12 >> 16) {
      goto LABEL_37;
    }
    uint64_t v22 = sub_19F1DBF5C();
    uint64_t v11 = v25;
    unint64_t v6 = a1;
    unint64_t v12 = v22;
    if (v13) {
      return v17;
    }
LABEL_33:
    BOOL v17 = 0;
    if (v16 == v9 || v14 != v18) {
      return v17;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_19EFAA108(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392F20);
  uint64_t v2 = sub_19F1DD06C();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19EEC3ED8(v6, (uint64_t)&v15, (uint64_t *)&unk_1EB392CE0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_19EE77E90(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_19EEBDC00(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_19EFAA240(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_19F1DBF9C();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x19F3C6260](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_19EFAA2BC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unsigned char *))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v21 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v21) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v21) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v9);
      if (!v16)
      {
        int64_t v9 = v15 + 2;
        if (v15 + 2 >= v21) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v9);
        if (!v16)
        {
          int64_t v9 = v15 + 3;
          if (v15 + 3 >= v21) {
            goto LABEL_24;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v9);
          if (!v16)
          {
            int64_t v17 = v15 + 4;
            if (v17 >= v21)
            {
LABEL_24:
              uint64_t v18 = 1;
              goto LABEL_25;
            }
            unint64_t v16 = *(void *)(v4 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v9 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_27;
                }
                if (v9 >= v21) {
                  goto LABEL_24;
                }
                unint64_t v16 = *(void *)(v4 + 8 * v9);
                ++v17;
                if (v16) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v9 = v17;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    unint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v20);
    v19[0] = v13;
    v19[1] = v14;
    swift_bridgeObjectRetain();
    LOBYTE(v13) = a2(v13, v14, v20);
    uint64_t result = sub_19EEBD664((uint64_t)v19, &qword_1E946F4C0);
    if ((v13 & 1) == 0)
    {
      uint64_t v18 = 0;
LABEL_25:
      swift_release();
      return v18;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_19EFAA4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19F15C224(a1, a2, a3, v3[2], v3[3], v3[4]);
}

unint64_t sub_19EFAA4B4()
{
  unint64_t result = qword_1E9471DC8;
  if (!qword_1E9471DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471DC8);
  }
  return result;
}

uint64_t sub_19EFAA508()
{
  return sub_19EFAA544(&qword_1E9471DE0, &qword_1E9471DE8, (void (*)(void))sub_19EFAA5B0);
}

uint64_t sub_19EFAA544(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19EFAA5B0()
{
  unint64_t result = qword_1E9471DF0;
  if (!qword_1E9471DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471DF0);
  }
  return result;
}

uint64_t sub_19EFAA604()
{
  return sub_19EFAA544(&qword_1E9471E08, &qword_1E9471DE8, (void (*)(void))sub_19EFAA640);
}

unint64_t sub_19EFAA640()
{
  unint64_t result = qword_1E9471E10;
  if (!qword_1E9471E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471E10);
  }
  return result;
}

unint64_t sub_19EFAA694()
{
  unint64_t result = qword_1E9471E20;
  if (!qword_1E9471E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471E20);
  }
  return result;
}

unint64_t sub_19EFAA6E8()
{
  unint64_t result = qword_1E946D278[0];
  if (!qword_1E946D278[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E946D278);
  }
  return result;
}

uint64_t sub_19EFAA73C()
{
  return sub_19EFAA544(&qword_1E9471E38, &qword_1E9471E40, (void (*)(void))sub_19EFAA778);
}

unint64_t sub_19EFAA778()
{
  unint64_t result = qword_1E9471E48;
  if (!qword_1E9471E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471E48);
  }
  return result;
}

uint64_t sub_19EFAA7CC()
{
  return sub_19EFAA544(&qword_1E9471E60, &qword_1E9471E40, (void (*)(void))sub_19EFAA808);
}

unint64_t sub_19EFAA808()
{
  unint64_t result = qword_1E9471E68;
  if (!qword_1E9471E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471E68);
  }
  return result;
}

unint64_t sub_19EFAA85C()
{
  unint64_t result = qword_1E946CDC8;
  if (!qword_1E946CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CDC8);
  }
  return result;
}

uint64_t sub_19EFAA8B0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void *assignWithCopy for PageMetrics(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PageMetrics(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithCopy for PageMetrics.Instruction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PageMetrics.Instruction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *storeEnumTagSinglePayload for PageMetrics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EFAABC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageMetrics.CodingKeys()
{
  return &type metadata for PageMetrics.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PageMetrics.Instruction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19EFAACC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageMetrics.Instruction.CodingKeys()
{
  return &type metadata for PageMetrics.Instruction.CodingKeys;
}

unint64_t sub_19EFAAD04()
{
  unint64_t result = qword_1E9471E70;
  if (!qword_1E9471E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471E70);
  }
  return result;
}

unint64_t sub_19EFAAD5C()
{
  unint64_t result = qword_1E9471E78;
  if (!qword_1E9471E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471E78);
  }
  return result;
}

unint64_t sub_19EFAADB4()
{
  unint64_t result = qword_1E9471E80;
  if (!qword_1E9471E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471E80);
  }
  return result;
}

unint64_t sub_19EFAAE0C()
{
  unint64_t result = qword_1E9471E88;
  if (!qword_1E9471E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471E88);
  }
  return result;
}

unint64_t sub_19EFAAE64()
{
  unint64_t result = qword_1E9471E90;
  if (!qword_1E9471E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471E90);
  }
  return result;
}

unint64_t sub_19EFAAEBC()
{
  unint64_t result = qword_1E9471E98;
  if (!qword_1E9471E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471E98);
  }
  return result;
}

uint64_t sub_19EFAAF10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_19EFAB338();
  uint64_t result = sub_19F1DC5CC();
  uint64_t v7 = result;
  if (v2)
  {
    unsigned int v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      swift_bridgeObjectRetain();
      sub_19F042B14(&v6, v5);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_19EFAAF98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_19EE8A70C();
  uint64_t result = sub_19F1DC5CC();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 16);
      v8[0] = *(_OWORD *)v4;
      v8[1] = v5;
      uint64_t v8[2] = *(_OWORD *)(v4 + 32);
      uint64_t v9 = *(void *)(v4 + 48);
      sub_19EE89A74((uint64_t)v8);
      sub_19F042500((uint64_t)&v6, (uint64_t *)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 56;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_19EFAB050(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_19F1DC5CC();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_19F04282C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_19EFAB0E8()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_19EFAB134(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_19EFAB200();
  uint64_t result = sub_19F1DC5CC();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 48);
      _OWORD v9[2] = *(_OWORD *)(v4 + 32);
      void v9[3] = v5;
      uint64_t v10 = *(void *)(v4 + 64);
      long long v6 = *(_OWORD *)(v4 + 16);
      v9[0] = *(_OWORD *)v4;
      v9[1] = v6;
      sub_19EFAB254((uint64_t)v9);
      sub_19F042FCC((uint64_t)&v7, (uint64_t)v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 72;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_19EFAB200()
{
  unint64_t result = qword_1E946CF18;
  if (!qword_1E946CF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CF18);
  }
  return result;
}

uint64_t sub_19EFAB254(uint64_t a1)
{
  return a1;
}

uint64_t sub_19EFAB2AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_19F1DC5CC();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_19EE77E34(v4, (uint64_t)v5);
      sub_19F043788((uint64_t)v6, (uint64_t)v5);
      sub_19EE7760C((uint64_t)v6);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_19EFAB338()
{
  unint64_t result = qword_1E9471EA0;
  if (!qword_1E9471EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9471EA0);
  }
  return result;
}

uint64_t JSRoute.service.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JSRoute.service.modify())()
{
  return nullsub_1;
}

uint64_t JSRoute.function.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*JSRoute.function.modify())()
{
  return nullsub_1;
}

uint64_t JSRoute.description.getter()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_19EFAB4BC()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  return v2;
}

__n128 _JSONObjectDecoder.init(wrapping:with:at:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v5;
  *(void *)(a4 + 32) = *(void *)(a1 + 32);
  *(void *)(a4 + 40) = a2;
  *(void *)(a4 + 48) = a3;
  return result;
}

uint64_t _JSONObjectDecoder.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _JSONObjectDecoder.codingPath.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _JSONObjectDecoder.unkeyedContainer()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v2;
  sub_19EEC355C(v1, (uint64_t)v10);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  a1[3] = (uint64_t)&type metadata for _JSONObjectUnkeyedDecodingContainer;
  a1[4] = sub_19EFAB9D8();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = v7 + 16;
  *a1 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_19EFAB604((uint64_t)v10, v6, v5, v8);
  if (v3) {
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)a1);
  }
  return result;
}

uint64_t sub_19EFAB604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if ((sub_19EE71C18(0xD00000000000002BLL, 0x800000019F26B930, a2) & 1) == 0)
  {
    sub_19EEC3ED8(a1, (uint64_t)&v23, (uint64_t *)&unk_1E946FD20);
    uint64_t v8 = *((void *)&v24 + 1);
    if (*((void *)&v24 + 1))
    {
      uint64_t v9 = v25;
      __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v9 + 120))(v26, v8, v9);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
      uint64_t v10 = *((void *)&v26[1] + 1);
      if (*((void *)&v26[1] + 1))
      {
        uint64_t result = sub_19EEC3418(a1);
        id v12 = *(id *)&v26[0];
        long long v13 = *(_OWORD *)((char *)v26 + 8);
        uint64_t v14 = v27;
LABEL_10:
        *(void *)a4 = v12;
        *(_OWORD *)(a4 + 8) = v13;
        *(void *)(a4 + 24) = v10;
        goto LABEL_11;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)&v23, (uint64_t *)&unk_1E946FD20);
      memset(v26, 0, sizeof(v26));
      int64_t v27 = 0;
    }
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C978]), sel_init);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FA80);
    sub_19EEC3418(a1);
    uint64_t result = sub_19EEBD664((uint64_t)v26, &qword_1E946FA88);
    *((void *)&v13 + 1) = 0;
    *(void *)&long long v13 = sub_19EEC2DD8;
    uint64_t v14 = &off_1EF14BC60;
    goto LABEL_10;
  }
  sub_19EEC3ED8(a1, (uint64_t)&v23, (uint64_t *)&unk_1E946FD20);
  uint64_t v15 = *((void *)&v24 + 1);
  if (*((void *)&v24 + 1))
  {
    uint64_t v16 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v16 + 120))(v26, v15, v16);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
    if (*((void *)&v26[1] + 1))
    {
      uint64_t result = sub_19EEC3418(a1);
      long long v17 = v26[1];
      *(_OWORD *)a4 = v26[0];
      *(_OWORD *)(a4 + 16) = v17;
      uint64_t v14 = v27;
LABEL_11:
      *(void *)(a4 + 32) = v14;
      *(void *)(a4 + 40) = a2;
      *(void *)(a4 + 48) = a3;
      *(void *)(a4 + 56) = 0;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v23, (uint64_t *)&unk_1E946FD20);
    memset(v26, 0, sizeof(v26));
    int64_t v27 = 0;
  }
  swift_bridgeObjectRelease();
  sub_19EEBD664((uint64_t)v26, &qword_1E946FA88);
  uint64_t v18 = sub_19F1DCDCC();
  swift_allocError();
  uint64_t v20 = v19;
  *(void *)&v26[0] = 0;
  *((void *)&v26[0] + 1) = 0xE000000000000000;
  sub_19F1DCCEC();
  sub_19F1DBEFC();
  sub_19EEC3ED8(a1, (uint64_t)v26, (uint64_t *)&unk_1E946FD20);
  uint64_t v21 = *((void *)&v26[1] + 1);
  if (!*((void *)&v26[1] + 1))
  {
    sub_19EEBD664((uint64_t)v26, (uint64_t *)&unk_1E946FD20);
    long long v23 = 0u;
    long long v24 = 0u;
    goto LABEL_17;
  }
  uint64_t v22 = v27;
  __swift_project_boxed_opaque_existential_1(v26, *((uint64_t *)&v26[1] + 1));
  ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v22[12])(&v23, v21, v22);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  if (!*((void *)&v24 + 1))
  {
LABEL_17:
    *((void *)&v26[1] + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&v26[0] = 7104878;
    *((void *)&v26[0] + 1) = 0xE300000000000000;
    sub_19EEBD664((uint64_t)&v23, &qword_1EB393260);
    goto LABEL_18;
  }
  sub_19EEBDC00(&v23, v26);
LABEL_18:
  sub_19F1DCF4C();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  sub_19F1DCDAC();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x1E4FBBA78], v18);
  swift_willThrow();
  return sub_19EEC3418(a1);
}

unint64_t sub_19EFAB9D8()
{
  unint64_t result = qword_1E946DED8;
  if (!qword_1E946DED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946DED8);
  }
  return result;
}

uint64_t sub_19EFABA2C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t _JSONObjectDecoder.singleValueContainer()@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for _JSONObjectSingleValueDecodingContainer;
  a1[4] = sub_19EE3D260();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;
  sub_19EEC355C(v1, v3 + 16);
  uint64_t v4 = *(void *)(v1 + 48);
  *(void *)(v3 + 56) = *(void *)(v1 + 40);
  *(void *)(v3 + 64) = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFABAF8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFABB00()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19EFABB08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v2;
  sub_19EEC355C(v1, (uint64_t)v10);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  a1[3] = (uint64_t)&type metadata for _JSONObjectUnkeyedDecodingContainer;
  a1[4] = sub_19EFAB9D8();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = v7 + 16;
  *a1 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_19EFAB604((uint64_t)v10, v6, v5, v8);
  if (v3) {
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for _JSONObjectDecoder()
{
  return &type metadata for _JSONObjectDecoder;
}

uint64_t _s9JetEngine18_JSONObjectDecoderVwca_0(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9JetEngine18_JSONObjectDecoderVwta_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for _JSONObjectSingleValueDecodingContainer()
{
  return &type metadata for _JSONObjectSingleValueDecodingContainer;
}

uint64_t destroy for _JSONObjectUnkeyedDecodingContainer(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for _JSONObjectUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for _JSONObjectUnkeyedDecodingContainer(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for _JSONObjectUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for _JSONObjectUnkeyedDecodingContainer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _JSONObjectUnkeyedDecodingContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _JSONObjectUnkeyedDecodingContainer()
{
  return &type metadata for _JSONObjectUnkeyedDecodingContainer;
}

uint64_t _s9JetEngine18_JSONObjectDecoderVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_19EFABF98(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_19EFABFE4()
{
  uint64_t v1 = v0;
  sub_19EEC3ED8(v0, (uint64_t)v13, (uint64_t *)&unk_1E946FD20);
  uint64_t v2 = v14;
  if (v14)
  {
    uint64_t v3 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    long long v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    if (v4)
    {
      if (*MEMORY[0x1E4F1CFD0]) {
        BOOL v5 = v4 == (void *)*MEMORY[0x1E4F1CFD0];
      }
      else {
        BOOL v5 = 0;
      }
      if (v5 || *MEMORY[0x1E4F1CFC8] && v4 == (void *)*MEMORY[0x1E4F1CFC8])
      {
        v13[0] = v4;
        id v10 = v4;
        swift_getAtKeyPath();

        char v9 = v12[0];
        return v9 & 1;
      }
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v13, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3ED8(v1, (uint64_t)v13, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v14;
  if (v14)
  {
    uint64_t v7 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v7 + 96))(v12, v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
  else
  {
    sub_19EEBD664((uint64_t)v13, (uint64_t *)&unk_1E946FD20);
    memset(v12, 0, sizeof(v12));
  }
  sub_19F1DCDCC();
  swift_allocError();
  sub_19EFAC1D0(MEMORY[0x1E4FBB390], (uint64_t)v12, v8);
  sub_19EEBD664((uint64_t)v12, &qword_1EB393260);
  swift_willThrow();
  return v9 & 1;
}

uint64_t sub_19EFAC1D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  *a3 = a1;
  *(void *)&long long v10 = 0;
  *((void *)&v10 + 1) = 0xE000000000000000;
  sub_19F1DCCEC();
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_19F1DBEFC();
  sub_19F1DD98C();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19EEC3ED8(a2, (uint64_t)&v8, &qword_1EB393260);
  if (v9)
  {
    sub_19EEBDC00(&v8, &v10);
  }
  else
  {
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v10 = 7104878;
    *((void *)&v10 + 1) = 0xE300000000000000;
    sub_19EEBD664((uint64_t)&v8, &qword_1EB393260);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
  sub_19F1DCF4C();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v10);
  swift_bridgeObjectRetain();
  sub_19F1DCDAC();
  uint64_t v5 = *MEMORY[0x1E4FBBA70];
  uint64_t v6 = sub_19F1DCDCC();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(a3, v5, v6);
}

double sub_19EFAC398()
{
  uint64_t v2 = v0;
  sub_19EEC3ED8(v0, (uint64_t)v20, (uint64_t *)&unk_1E946FD20);
  uint64_t v3 = v21;
  if (!v21)
  {
    sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E946FD20);
    goto LABEL_16;
  }
  uint64_t v4 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  if (!v5)
  {
LABEL_16:
    sub_19EEC3ED8(v2, (uint64_t)v20, (uint64_t *)&unk_1E946FD20);
    uint64_t v11 = v21;
    if (v21)
    {
      uint64_t v12 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v12 + 96))(v19, v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
    }
    else
    {
      sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E946FD20);
      memset(v19, 0, sizeof(v19));
    }
    sub_19F1DCDCC();
    swift_allocError();
    sub_19EFAC1D0(MEMORY[0x1E4FBB3D0], (uint64_t)v19, v13);
    sub_19EEBD664((uint64_t)v19, &qword_1EB393260);
    swift_willThrow();
    return v1;
  }
  if (*MEMORY[0x1E4F1CFD0]) {
    BOOL v6 = v5 == (void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    BOOL v6 = 0;
  }
  if (v6 || (*MEMORY[0x1E4F1CFC8] ? (BOOL v7 = v5 == (void *)*MEMORY[0x1E4F1CFC8]) : (BOOL v7 = 0), v7))
  {

    goto LABEL_16;
  }
  v20[0] = v5;
  id v8 = v5;
  swift_getAtKeyPath();

  double v1 = *(double *)v19;
  uint64_t v9 = (void *)sub_19F1DC56C();
  sub_19EE85BDC();
  id v10 = v8;
  LOBYTE(v8) = sub_19F1DCA1C();

  if ((v8 & 1) == 0)
  {
    uint64_t v15 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v17 = v16;
    v20[0] = 0;
    v20[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v20, "Parsed number ");
    HIBYTE(v20[1]) = -18;
    id v18 = objc_msgSend(v10, sel_description);
    sub_19F1DBD7C();

    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA78], v15);
    swift_willThrow();
  }

  return v1;
}

float sub_19EFAC71C()
{
  uint64_t v2 = v0;
  sub_19EEC3ED8(v0, (uint64_t)v20, (uint64_t *)&unk_1E946FD20);
  uint64_t v3 = v21;
  if (!v21)
  {
    sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E946FD20);
    goto LABEL_16;
  }
  uint64_t v4 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  if (!v5)
  {
LABEL_16:
    sub_19EEC3ED8(v2, (uint64_t)v20, (uint64_t *)&unk_1E946FD20);
    uint64_t v11 = v21;
    if (v21)
    {
      uint64_t v12 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v12 + 96))(v19, v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
    }
    else
    {
      sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E946FD20);
      memset(v19, 0, sizeof(v19));
    }
    sub_19F1DCDCC();
    swift_allocError();
    sub_19EFAC1D0(MEMORY[0x1E4FBB470], (uint64_t)v19, v13);
    sub_19EEBD664((uint64_t)v19, &qword_1EB393260);
    swift_willThrow();
    return v1;
  }
  if (*MEMORY[0x1E4F1CFD0]) {
    BOOL v6 = v5 == (void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    BOOL v6 = 0;
  }
  if (v6 || (*MEMORY[0x1E4F1CFC8] ? (BOOL v7 = v5 == (void *)*MEMORY[0x1E4F1CFC8]) : (BOOL v7 = 0), v7))
  {

    goto LABEL_16;
  }
  v20[0] = v5;
  id v8 = v5;
  swift_getAtKeyPath();

  float v1 = *(float *)v19;
  uint64_t v9 = (void *)sub_19F1DC5AC();
  sub_19EE85BDC();
  id v10 = v8;
  LOBYTE(v8) = sub_19F1DCA1C();

  if ((v8 & 1) == 0)
  {
    uint64_t v15 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v17 = v16;
    v20[0] = 0;
    v20[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v20, "Parsed number ");
    HIBYTE(v20[1]) = -18;
    id v18 = objc_msgSend(v10, sel_description);
    sub_19F1DBD7C();

    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA78], v15);
    swift_willThrow();
  }

  return v1;
}

uint64_t sub_19EFACAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v28 = a5;
  uint64_t v8 = v5;
  sub_19EEC3ED8(v5, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
  uint64_t v9 = v26;
  if (!v26)
  {
    sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
    goto LABEL_16;
  }
  uint64_t v10 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  if (!v11)
  {
LABEL_16:
    sub_19EEC3ED8(v8, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
    uint64_t v17 = v26;
    if (v26)
    {
      uint64_t v18 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v18 + 96))(v24, v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
    else
    {
      sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
      memset(v24, 0, sizeof(v24));
    }
    sub_19F1DCDCC();
    swift_allocError();
    sub_19EFAC1D0(a3, (uint64_t)v24, v19);
    sub_19EEBD664((uint64_t)v24, &qword_1EB393260);
    swift_willThrow();
    return v8;
  }
  if (*MEMORY[0x1E4F1CFD0]) {
    BOOL v12 = v11 == (void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    BOOL v12 = 0;
  }
  if (v12 || (*MEMORY[0x1E4F1CFC8] ? (BOOL v13 = v11 == (void *)*MEMORY[0x1E4F1CFC8]) : (BOOL v13 = 0), v13))
  {

    goto LABEL_16;
  }
  v25[0] = v11;
  id v14 = v11;
  swift_getAtKeyPath();

  uint64_t v8 = *(void *)&v24[0];
  uint64_t v15 = (void *)a4(*(void *)&v24[0]);
  sub_19EE85BDC();
  id v16 = v14;
  LOBYTE(v14) = sub_19F1DCA1C();

  if ((v14 & 1) == 0)
  {
    uint64_t v8 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v22 = v21;
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v25, "Parsed number ");
    HIBYTE(v25[1]) = -18;
    id v23 = objc_msgSend(v16, sel_description);
    sub_19F1DBD7C();

    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v22, *MEMORY[0x1E4FBBA78], v8);
    swift_willThrow();
  }

  return v8;
}

uint64_t sub_19EFACE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v28 = a5;
  uint64_t v8 = v5;
  sub_19EEC3ED8(v5, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
  uint64_t v9 = v26;
  if (!v26)
  {
    sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
    goto LABEL_16;
  }
  uint64_t v10 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  if (!v11)
  {
LABEL_16:
    sub_19EEC3ED8(v8, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
    uint64_t v17 = v26;
    if (v26)
    {
      uint64_t v18 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v18 + 96))(v24, v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
    else
    {
      sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
      memset(v24, 0, sizeof(v24));
    }
    sub_19F1DCDCC();
    swift_allocError();
    sub_19EFAC1D0(a3, (uint64_t)v24, v19);
    sub_19EEBD664((uint64_t)v24, &qword_1EB393260);
    swift_willThrow();
    return v8;
  }
  if (*MEMORY[0x1E4F1CFD0]) {
    BOOL v12 = v11 == (void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    BOOL v12 = 0;
  }
  if (v12 || (*MEMORY[0x1E4F1CFC8] ? (BOOL v13 = v11 == (void *)*MEMORY[0x1E4F1CFC8]) : (BOOL v13 = 0), v13))
  {

    goto LABEL_16;
  }
  v25[0] = v11;
  id v14 = v11;
  swift_getAtKeyPath();

  uint64_t v8 = LOBYTE(v24[0]);
  uint64_t v15 = (void *)a4(LOBYTE(v24[0]));
  sub_19EE85BDC();
  id v16 = v14;
  LOBYTE(v14) = sub_19F1DCA1C();

  if ((v14 & 1) == 0)
  {
    uint64_t v8 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v22 = v21;
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v25, "Parsed number ");
    HIBYTE(v25[1]) = -18;
    id v23 = objc_msgSend(v16, sel_description);
    sub_19F1DBD7C();

    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v22, *MEMORY[0x1E4FBBA78], v8);
    swift_willThrow();
  }

  return v8;
}

uint64_t sub_19EFAD1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v28 = a5;
  uint64_t v8 = v5;
  sub_19EEC3ED8(v5, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
  uint64_t v9 = v26;
  if (!v26)
  {
    sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
    goto LABEL_16;
  }
  uint64_t v10 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  if (!v11)
  {
LABEL_16:
    sub_19EEC3ED8(v8, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
    uint64_t v17 = v26;
    if (v26)
    {
      uint64_t v18 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v18 + 96))(v24, v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
    else
    {
      sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
      memset(v24, 0, sizeof(v24));
    }
    sub_19F1DCDCC();
    swift_allocError();
    sub_19EFAC1D0(a3, (uint64_t)v24, v19);
    sub_19EEBD664((uint64_t)v24, &qword_1EB393260);
    swift_willThrow();
    return v8;
  }
  if (*MEMORY[0x1E4F1CFD0]) {
    BOOL v12 = v11 == (void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    BOOL v12 = 0;
  }
  if (v12 || (*MEMORY[0x1E4F1CFC8] ? (BOOL v13 = v11 == (void *)*MEMORY[0x1E4F1CFC8]) : (BOOL v13 = 0), v13))
  {

    goto LABEL_16;
  }
  v25[0] = v11;
  id v14 = v11;
  swift_getAtKeyPath();

  uint64_t v8 = LOWORD(v24[0]);
  uint64_t v15 = (void *)a4(LOWORD(v24[0]));
  sub_19EE85BDC();
  id v16 = v14;
  LOBYTE(v14) = sub_19F1DCA1C();

  if ((v14 & 1) == 0)
  {
    uint64_t v8 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v22 = v21;
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v25, "Parsed number ");
    HIBYTE(v25[1]) = -18;
    id v23 = objc_msgSend(v16, sel_description);
    sub_19F1DBD7C();

    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v22, *MEMORY[0x1E4FBBA78], v8);
    swift_willThrow();
  }

  return v8;
}

uint64_t sub_19EFAD544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v28 = a5;
  uint64_t v8 = v5;
  sub_19EEC3ED8(v5, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
  uint64_t v9 = v26;
  if (!v26)
  {
    sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
    goto LABEL_16;
  }
  uint64_t v10 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  if (!v11)
  {
LABEL_16:
    sub_19EEC3ED8(v8, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
    uint64_t v17 = v26;
    if (v26)
    {
      uint64_t v18 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v18 + 96))(v24, v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
    else
    {
      sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
      memset(v24, 0, sizeof(v24));
    }
    sub_19F1DCDCC();
    swift_allocError();
    sub_19EFAC1D0(a3, (uint64_t)v24, v19);
    sub_19EEBD664((uint64_t)v24, &qword_1EB393260);
    swift_willThrow();
    return v8;
  }
  if (*MEMORY[0x1E4F1CFD0]) {
    BOOL v12 = v11 == (void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    BOOL v12 = 0;
  }
  if (v12 || (*MEMORY[0x1E4F1CFC8] ? (BOOL v13 = v11 == (void *)*MEMORY[0x1E4F1CFC8]) : (BOOL v13 = 0), v13))
  {

    goto LABEL_16;
  }
  v25[0] = v11;
  id v14 = v11;
  swift_getAtKeyPath();

  uint64_t v8 = LODWORD(v24[0]);
  uint64_t v15 = (void *)a4(LODWORD(v24[0]));
  sub_19EE85BDC();
  id v16 = v14;
  LOBYTE(v14) = sub_19F1DCA1C();

  if ((v14 & 1) == 0)
  {
    uint64_t v8 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v22 = v21;
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v25, "Parsed number ");
    HIBYTE(v25[1]) = -18;
    id v23 = objc_msgSend(v16, sel_description);
    sub_19F1DBD7C();

    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v22, *MEMORY[0x1E4FBBA78], v8);
    swift_willThrow();
  }

  return v8;
}

uint64_t sub_19EFAD8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v75 = a1;
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  MEMORY[0x1F4188790](v72);
  uint64_t v71 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v69);
  char v67 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_19F1DCAAC();
  uint64_t v11 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v70 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v68 = (char *)&v63 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v63 - v16;
  uint64_t v18 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v66 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  char v65 = (char *)&v63 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v63 - v24;
  sub_19EEC3ED8(v5, (uint64_t)v86, (uint64_t *)&unk_1E946FD20);
  uint64_t v26 = v87;
  uint64_t v76 = a4;
  uint64_t v73 = a3;
  if (v87)
  {
    uint64_t v27 = v88;
    __swift_project_boxed_opaque_existential_1(v86, v87);
    char v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 104))(v26, v27);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
    sub_19EFB3D9C(v5, (uint64_t)v86);
    if ((v28 & 1) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v86, (uint64_t *)&unk_1E946FD20);
    sub_19EFB3D9C(v5, (uint64_t)v86);
  }
  char v29 = sub_19EE71C18(0xD00000000000002BLL, 0x800000019F26B930, v89);
  if (v29 == 2)
  {
LABEL_6:
    sub_19EFB3DD4((uint64_t)v86);
    goto LABEL_8;
  }
  char v30 = v29;
  sub_19EFB3DD4((uint64_t)v86);
  if (v30)
  {
    uint64_t v42 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v44 = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
    *uint64_t v44 = v75;
    uint64_t v80 = 0;
    unint64_t v81 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    uint64_t v80 = 0x6465746365707845;
    unint64_t v81 = 0xE900000000000020;
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v44, *MEMORY[0x1E4FBBA80], v42);
    return swift_willThrow();
  }
LABEL_8:
  sub_19EEC355C(v5, (uint64_t)&v80);
  int v31 = swift_dynamicCast();
  int64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  if (v31)
  {
    v32(v17, 0, 1, a2);
    int64_t v33 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v33(v25, v17, a2);
    uint64_t v34 = v76;
    unint64_t v35 = v25;
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(v34, v35, a2);
  }
  v32(v17, 1, 1, a2);
  uint64_t v38 = v11 + 8;
  char v37 = *(void (**)(char *, uint64_t))(v11 + 8);
  v37(v17, v74);
  uint64_t v39 = sub_19F1DB34C();
  uint64_t v40 = v75;
  if (v39 != v75)
  {
    if (sub_19F1DB57C() != v40)
    {
      sub_19EEC355C(v5, (uint64_t)&v80);
      uint64_t v41 = *(void *)(v5 + 48);
      uint64_t v84 = *(void *)(v5 + 40);
      uint64_t v85 = v41;
      *((void *)&v78 + 1) = &type metadata for _JSONObjectDecoder;
      unint64_t v79 = sub_19EE70560();
      *(void *)&long long v77 = swift_allocObject();
      sub_19EE70470((uint64_t)&v80, v77 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19F1DC59C();
      return sub_19EE703B4((uint64_t)&v80);
    }
    uint64_t v73 = v37;
    sub_19EEC3ED8(v5, (uint64_t)&v80, (uint64_t *)&unk_1E946FD20);
    uint64_t v52 = v82;
    uint64_t v64 = v32;
    if (v82)
    {
      uint64_t v53 = v83;
      __swift_project_boxed_opaque_existential_1(&v80, v82);
      (*(void (**)(uint64_t, uint64_t))(v53 + 112))(v52, v53);
      uint64_t v40 = v75;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v80);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v80, (uint64_t *)&unk_1E946FD20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v71, 1, 1, v40);
    }
    long long v50 = v70;
    id v54 = v73;
    if (swift_dynamicCast())
    {
      v64(v50, 0, 1, a2);
      int64_t v33 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      long long v51 = &v91;
      goto LABEL_26;
    }
    v64(v50, 1, 1, a2);
    v54(v50, v74);
    goto LABEL_28;
  }
  sub_19EEC3ED8(v5, (uint64_t)&v80, (uint64_t *)&unk_1E946FD20);
  uint64_t v45 = v82;
  if (!v82)
  {
    sub_19EEBD664((uint64_t)&v80, (uint64_t *)&unk_1E946FD20);
    goto LABEL_28;
  }
  uint64_t v73 = v37;
  uint64_t v46 = v32;
  uint64_t v72 = v38;
  uint64_t v47 = v83;
  __swift_project_boxed_opaque_existential_1(&v80, v82);
  (*(void (**)(uint64_t, uint64_t))(v47 + 24))(v45, v47);
  uint64_t v49 = v48;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v80);
  if (!v49)
  {
LABEL_28:
    sub_19EEC3ED8(v5, (uint64_t)&v80, (uint64_t *)&unk_1E946FD20);
    uint64_t v56 = v82;
    if (v82)
    {
      uint64_t v57 = v83;
      __swift_project_boxed_opaque_existential_1(&v80, v82);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v57 + 96))(&v77, v56, v57);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v80);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v80, (uint64_t *)&unk_1E946FD20);
      long long v77 = 0u;
      long long v78 = 0u;
    }
    sub_19EEBD664((uint64_t)&v77, &qword_1EB393260);
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393260);
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471EB8);
    uint64_t v80 = v58;
    sub_19F1DCDCC();
    swift_allocError();
    sub_19EFAC1D0(v40, (uint64_t)&v80, v59);
    sub_19EEBD664((uint64_t)&v80, &qword_1EB393260);
    return swift_willThrow();
  }
  sub_19F1DB2FC();
  swift_bridgeObjectRelease();
  long long v50 = v68;
  if (swift_dynamicCast())
  {
    v46(v50, 0, 1, a2);
    int64_t v33 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    long long v51 = &v90;
LABEL_26:
    long long v55 = (char *)*(v51 - 32);
    v33(v55, v50, a2);
    uint64_t v34 = v76;
    unint64_t v35 = v55;
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(v34, v35, a2);
  }
  v46(v50, 1, 1, a2);
  v73(v50, v74);
  uint64_t v60 = sub_19F1DCDCC();
  swift_allocError();
  uint64_t v62 = v61;
  swift_bridgeObjectRetain();
  sub_19F1DCDAC();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v60 - 8) + 104))(v62, *MEMORY[0x1E4FBBA78], v60);
  return swift_willThrow();
}

uint64_t sub_19EFAE31C()
{
  sub_19EEC355C(v0, (uint64_t)v3);
  swift_getKeyPath();
  char v1 = sub_19EFABFE4();
  sub_19EEC3418((uint64_t)v3);
  swift_release();
  return v1 & 1;
}

void *sub_19EFAE398()
{
  return sub_19EFB2E68();
}

double sub_19EFAE3B0()
{
  sub_19EEC355C(v0, (uint64_t)v4);
  swift_getKeyPath();
  double v2 = sub_19EFAC398();
  if (v1)
  {
    sub_19EEC3418((uint64_t)v4);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v4);
  }
  return v2;
}

float sub_19EFAE44C()
{
  sub_19EEC355C(v0, (uint64_t)v4);
  swift_getKeyPath();
  float v2 = sub_19EFAC71C();
  if (v1)
  {
    sub_19EEC3418((uint64_t)v4);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v4);
  }
  return v2;
}

uint64_t sub_19EFAE4E8()
{
  sub_19EEC355C(v0, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19EFACAA0(KeyPath, *(void *)(v0 + 48), MEMORY[0x1E4FBB550], MEMORY[0x1E4F27F38], 7630409);
  if (v1)
  {
    sub_19EEC3418((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19EFAE5A4()
{
  sub_19EEC355C(v0, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19EFACE2C(KeyPath, *(void *)(v0 + 48), MEMORY[0x1E4FBC098], MEMORY[0x1E4F28100], 947154505);
  if (v1)
  {
    sub_19EEC3418((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19EFAE660()
{
  sub_19EEC355C(v0, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19EFAD1B8(KeyPath, *(void *)(v0 + 48), MEMORY[0x1E4FBC0F8], MEMORY[0x1E4F28120], 0x3631746E49);
  if (v1)
  {
    sub_19EEC3418((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19EFAE720()
{
  sub_19EEC355C(v0, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19EFAD544(KeyPath, *(void *)(v0 + 48), MEMORY[0x1E4FBC150], MEMORY[0x1E4F28128], 0x3233746E49);
  if (v1)
  {
    sub_19EEC3418((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19EFAE7E0()
{
  sub_19EEC355C(v0, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19EFACAA0(KeyPath, *(void *)(v0 + 48), MEMORY[0x1E4FBC1C8], MEMORY[0x1E4F28130], 0x3436746E49);
  if (v1)
  {
    sub_19EEC3418((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19EFAE8A0()
{
  return sub_19F1DD4BC();
}

uint64_t sub_19EFAE8B8()
{
  sub_19EEC355C(v0, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19EFACAA0(KeyPath, *(void *)(v0 + 48), MEMORY[0x1E4FBB808], MEMORY[0x1E4F280C8], 1953384789);
  if (v1)
  {
    sub_19EEC3418((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19EFAE974()
{
  sub_19EEC355C(v0, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19EFACE2C(KeyPath, *(void *)(v0 + 48), MEMORY[0x1E4FBC358], MEMORY[0x1E4F28150], 0x38746E4955);
  if (v1)
  {
    sub_19EEC3418((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19EFAEA34()
{
  sub_19EEC355C(v0, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19EFAD1B8(KeyPath, *(void *)(v0 + 48), MEMORY[0x1E4FBC450], MEMORY[0x1E4F28168], 0x3631746E4955);
  if (v1)
  {
    sub_19EEC3418((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19EFAEAF4()
{
  sub_19EEC355C(v0, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19EFAD544(KeyPath, *(void *)(v0 + 48), MEMORY[0x1E4FBC4C0], MEMORY[0x1E4F28170], 0x3233746E4955);
  if (v1)
  {
    sub_19EEC3418((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19EFAEBB4()
{
  sub_19EEC355C(v0, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19EFACAA0(KeyPath, *(void *)(v0 + 48), MEMORY[0x1E4FBC538], MEMORY[0x1E4F28178], 0x3436746E4955);
  if (v1)
  {
    sub_19EEC3418((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19EEC3418((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19EFAEC74()
{
  return sub_19F1DD4CC();
}

uint64_t sub_19EFAEC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  return sub_19EFAD8D0(a1, a2, a3, a4);
}

uint64_t sub_19EFAECA4()
{
  JSONObject.dictionary.getter((uint64_t)&v4);
  if (*((void *)&v5 + 1))
  {
    v7[0] = v4;
    v7[1] = v5;
    uint64_t v0 = v6;
    uint64_t v8 = v6;
    uint64_t v1 = *((void *)&v5 + 1);
    __swift_project_boxed_opaque_existential_1(v7, *((uint64_t *)&v5 + 1));
    *(void *)&long long v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 56))(v1, v0);
    MEMORY[0x1F4188790](v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3931D8);
    sub_19EFB2E0C();
    uint64_t v2 = sub_19F1DC03C();
    swift_bridgeObjectRelease();
    sub_19EEC05FC((uint64_t)v7);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v4, &qword_1E946F740);
    return sub_19F1DC1CC();
  }
  return v2;
}